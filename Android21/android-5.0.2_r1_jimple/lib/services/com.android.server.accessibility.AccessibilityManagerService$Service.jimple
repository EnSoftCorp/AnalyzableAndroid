class com.android.server.accessibility.AccessibilityManagerService$Service extends android.accessibilityservice.IAccessibilityServiceConnection$Stub implements android.content.ServiceConnection, android.os.IBinder$DeathRecipient
{
    final int mUserId;
    int mId;
    android.accessibilityservice.AccessibilityServiceInfo mAccessibilityServiceInfo;
    android.os.IBinder mService;
    android.accessibilityservice.IAccessibilityServiceClient mServiceInterface;
    int mEventTypes;
    int mFeedbackType;
    java.util.Set mPackageNames;
    boolean mIsDefault;
    boolean mRequestTouchExplorationMode;
    boolean mRequestEnhancedWebAccessibility;
    boolean mRequestFilterKeyEvents;
    boolean mRetrieveInteractiveWindows;
    int mFetchFlags;
    long mNotificationTimeout;
    android.content.ComponentName mComponentName;
    android.content.Intent mIntent;
    boolean mIsAutomation;
    final android.content.pm.ResolveInfo mResolveInfo;
    final android.util.SparseArray mPendingEvents;
    final com.android.server.accessibility.AccessibilityManagerService$Service$KeyEventDispatcher mKeyEventDispatcher;
    boolean mWasConnectedAndDied;
    public android.os.Handler mEventDispatchHandler;
    public com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler mInvocationHandler;
    final com.android.server.accessibility.AccessibilityManagerService this$0;

    public void <init>(com.android.server.accessibility.AccessibilityManagerService, int, android.content.ComponentName, android.accessibilityservice.AccessibilityServiceInfo)
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        com.android.server.accessibility.AccessibilityManagerService r1, $r8, $r12;
        int i0, $i1;
        android.content.ComponentName r2, $r16, $r19;
        android.accessibilityservice.AccessibilityServiceInfo r3;
        java.util.HashSet $r4;
        android.util.SparseArray $r5;
        com.android.server.accessibility.AccessibilityManagerService$Service$KeyEventDispatcher $r6;
        com.android.server.accessibility.AccessibilityManagerService$Service$1 $r7;
        com.android.server.accessibility.AccessibilityManagerService$MainHandler $r9, $r13;
        android.os.Looper $r10, $r14;
        com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler $r11;
        android.content.pm.ResolveInfo $r15;
        boolean $z0, $z1;
        android.content.Intent $r17, $r18, $r21, $r22, $r23;
        android.content.Context $r24;
        android.app.PendingIntent $r25;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        r1 := @parameter0: com.android.server.accessibility.AccessibilityManagerService;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.ComponentName;

        r3 := @parameter3: android.accessibilityservice.AccessibilityServiceInfo;

        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0> = r1;

        specialinvoke r0.<android.accessibilityservice.IAccessibilityServiceConnection$Stub: void <init>()>();

        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mId> = 0;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: java.util.Set mPackageNames> = $r4;

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.util.SparseArray mPendingEvents> = $r5;

        $r6 = new com.android.server.accessibility.AccessibilityManagerService$Service$KeyEventDispatcher;

        specialinvoke $r6.<com.android.server.accessibility.AccessibilityManagerService$Service$KeyEventDispatcher: void <init>(com.android.server.accessibility.AccessibilityManagerService$Service,com.android.server.accessibility.AccessibilityManagerService$1)>(r0, null);

        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService$Service$KeyEventDispatcher mKeyEventDispatcher> = $r6;

        $r7 = new com.android.server.accessibility.AccessibilityManagerService$Service$1;

        $r8 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r9 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$MainHandler access$2600(com.android.server.accessibility.AccessibilityManagerService)>($r8);

        $r10 = virtualinvoke $r9.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: android.os.Looper getLooper()>();

        specialinvoke $r7.<com.android.server.accessibility.AccessibilityManagerService$Service$1: void <init>(com.android.server.accessibility.AccessibilityManagerService$Service,android.os.Looper)>(r0, $r10);

        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.os.Handler mEventDispatchHandler> = $r7;

        $r11 = new com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler;

        $r12 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r13 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$MainHandler access$2600(com.android.server.accessibility.AccessibilityManagerService)>($r12);

        $r14 = virtualinvoke $r13.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: android.os.Looper getLooper()>();

        specialinvoke $r11.<com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler: void <init>(com.android.server.accessibility.AccessibilityManagerService$Service,android.os.Looper)>(r0, $r14);

        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler mInvocationHandler> = $r11;

        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mUserId> = i0;

        $r15 = virtualinvoke r3.<android.accessibilityservice.AccessibilityServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>();

        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.content.pm.ResolveInfo mResolveInfo> = $r15;

        $i1 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: int access$2808()>();

        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mId> = $i1;

        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.content.ComponentName mComponentName> = r2;

        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.accessibilityservice.AccessibilityServiceInfo mAccessibilityServiceInfo> = r3;

        $r16 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.content.ComponentName access$2900()>();

        $z0 = virtualinvoke $r16.<android.content.ComponentName: boolean equals(java.lang.Object)>(r2);

        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: boolean mIsAutomation> = $z0;

        $z1 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: boolean mIsAutomation>;

        if $z1 != 0 goto label1;

        $r17 = new android.content.Intent;

        specialinvoke $r17.<android.content.Intent: void <init>()>();

        $r19 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.content.ComponentName mComponentName>;

        $r18 = virtualinvoke $r17.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r19);

        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.content.Intent mIntent> = $r18;

        $r21 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.content.Intent mIntent>;

        virtualinvoke $r21.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.client_label", 17040693);

        $r22 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.content.Intent mIntent>;

        $r24 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.content.Context access$1600(com.android.server.accessibility.AccessibilityManagerService)>(r1);

        $r23 = new android.content.Intent;

        specialinvoke $r23.<android.content.Intent: void <init>(java.lang.String)>("android.settings.ACCESSIBILITY_SETTINGS");

        $r25 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>($r24, 0, $r23, 0);

        virtualinvoke $r22.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.client_intent", $r25);

     label1:
        virtualinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: void setDynamicallyConfigurableProperties(android.accessibilityservice.AccessibilityServiceInfo)>(r3);

        return;
    }

    public void setDynamicallyConfigurableProperties(android.accessibilityservice.AccessibilityServiceInfo)
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        android.accessibilityservice.AccessibilityServiceInfo r1;
        java.lang.String[] r2;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25;
        long $l2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.content.pm.ServiceInfo $r3;
        android.content.pm.ApplicationInfo $r4;
        android.content.pm.ResolveInfo $r5;
        java.util.Set $r6;
        java.util.List $r7;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        r1 := @parameter0: android.accessibilityservice.AccessibilityServiceInfo;

        $i0 = r1.<android.accessibilityservice.AccessibilityServiceInfo: int eventTypes>;

        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mEventTypes> = $i0;

        $i1 = r1.<android.accessibilityservice.AccessibilityServiceInfo: int feedbackType>;

        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mFeedbackType> = $i1;

        r2 = r1.<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String[] packageNames>;

        if r2 == null goto label01;

        $r6 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: java.util.Set mPackageNames>;

        $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);

        interfaceinvoke $r6.<java.util.Set: boolean addAll(java.util.Collection)>($r7);

     label01:
        $l2 = r1.<android.accessibilityservice.AccessibilityServiceInfo: long notificationTimeout>;

        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: long mNotificationTimeout> = $l2;

        $i3 = r1.<android.accessibilityservice.AccessibilityServiceInfo: int flags>;

        $i4 = $i3 & 1;

        if $i4 == 0 goto label02;

        $z5 = 1;

        goto label03;

     label02:
        $z5 = 0;

     label03:
        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: boolean mIsDefault> = $z5;

        $z0 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: boolean mIsAutomation>;

        if $z0 != 0 goto label04;

        $r5 = virtualinvoke r1.<android.accessibilityservice.AccessibilityServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>();

        $r3 = $r5.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r4 = $r3.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i25 = $r4.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i25 < 16 goto label06;

     label04:
        $i5 = r1.<android.accessibilityservice.AccessibilityServiceInfo: int flags>;

        $i6 = $i5 & 2;

        if $i6 == 0 goto label05;

        $i22 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mFetchFlags>;

        $i24 = $i22 | 8;

        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mFetchFlags> = $i24;

        goto label06;

     label05:
        $i7 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mFetchFlags>;

        $i8 = $i7 & -9;

        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mFetchFlags> = $i8;

     label06:
        $i9 = r1.<android.accessibilityservice.AccessibilityServiceInfo: int flags>;

        $i10 = $i9 & 16;

        if $i10 == 0 goto label07;

        $i21 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mFetchFlags>;

        $i23 = $i21 | 16;

        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mFetchFlags> = $i23;

        goto label08;

     label07:
        $i11 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mFetchFlags>;

        $i13 = $i11 & -17;

        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mFetchFlags> = $i13;

     label08:
        $i12 = r1.<android.accessibilityservice.AccessibilityServiceInfo: int flags>;

        $i15 = $i12 & 4;

        if $i15 == 0 goto label09;

        $z4 = 1;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: boolean mRequestTouchExplorationMode> = $z4;

        $i14 = r1.<android.accessibilityservice.AccessibilityServiceInfo: int flags>;

        $i17 = $i14 & 8;

        if $i17 == 0 goto label11;

        $z2 = 1;

        goto label12;

     label11:
        $z2 = 0;

     label12:
        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: boolean mRequestEnhancedWebAccessibility> = $z2;

        $i16 = r1.<android.accessibilityservice.AccessibilityServiceInfo: int flags>;

        $i19 = $i16 & 32;

        if $i19 == 0 goto label13;

        $z3 = 1;

        goto label14;

     label13:
        $z3 = 0;

     label14:
        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: boolean mRequestFilterKeyEvents> = $z3;

        $i18 = r1.<android.accessibilityservice.AccessibilityServiceInfo: int flags>;

        $i20 = $i18 & 64;

        if $i20 == 0 goto label15;

        $z1 = 1;

        goto label16;

     label15:
        $z1 = 0;

     label16:
        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: boolean mRetrieveInteractiveWindows> = $z1;

        return;
    }

    public boolean bindLocked()
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        com.android.server.accessibility.AccessibilityManagerService$UserState r1;
        int $i0, $i1;
        com.android.server.accessibility.AccessibilityManagerService $r2, $r7, $r11;
        boolean $z0, $z3;
        android.content.ComponentName $r3, $r17;
        java.util.Set $r4, $r16;
        android.accessibilityservice.IAccessibilityServiceClient $r5;
        android.os.IBinder $r6, $r12;
        com.android.server.accessibility.AccessibilityManagerService$MainHandler $r8;
        com.android.server.accessibility.AccessibilityManagerService$Service$2 $r9;
        android.os.UserHandle $r13;
        android.content.Context $r14;
        android.content.Intent $r15;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        $r2 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $i0 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mUserId>;

        r1 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$UserState access$600(com.android.server.accessibility.AccessibilityManagerService,int)>($r2, $i0);

        $z0 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: boolean mIsAutomation>;

        if $z0 != 0 goto label1;

        $r12 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.os.IBinder mService>;

        if $r12 != null goto label2;

        $r11 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r14 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.content.Context access$1600(com.android.server.accessibility.AccessibilityManagerService)>($r11);

        $r15 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.content.Intent mIntent>;

        $r13 = new android.os.UserHandle;

        $i1 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mUserId>;

        specialinvoke $r13.<android.os.UserHandle: void <init>(int)>($i1);

        $z3 = virtualinvoke $r14.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>($r15, r0, 1, $r13);

        if $z3 == 0 goto label2;

        $r16 = r1.<com.android.server.accessibility.AccessibilityManagerService$UserState: java.util.Set mBindingServices>;

        $r17 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.content.ComponentName mComponentName>;

        interfaceinvoke $r16.<java.util.Set: boolean add(java.lang.Object)>($r17);

        goto label2;

     label1:
        $r4 = r1.<com.android.server.accessibility.AccessibilityManagerService$UserState: java.util.Set mBindingServices>;

        $r3 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.content.ComponentName mComponentName>;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r5 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService$UserState: android.accessibilityservice.IAccessibilityServiceClient access$1400(com.android.server.accessibility.AccessibilityManagerService$UserState)>(r1);

        $r6 = interfaceinvoke $r5.<android.accessibilityservice.IAccessibilityServiceClient: android.os.IBinder asBinder()>();

        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.os.IBinder mService> = $r6;

        $r7 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r8 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$MainHandler access$2600(com.android.server.accessibility.AccessibilityManagerService)>($r7);

        $r9 = new com.android.server.accessibility.AccessibilityManagerService$Service$2;

        specialinvoke $r9.<com.android.server.accessibility.AccessibilityManagerService$Service$2: void <init>(com.android.server.accessibility.AccessibilityManagerService$Service)>(r0);

        virtualinvoke $r8.<com.android.server.accessibility.AccessibilityManagerService$MainHandler: boolean post(java.lang.Runnable)>($r9);

        staticinvoke <com.android.server.accessibility.AccessibilityManagerService$UserState: com.android.server.accessibility.AccessibilityManagerService$Service access$302(com.android.server.accessibility.AccessibilityManagerService$UserState,com.android.server.accessibility.AccessibilityManagerService$Service)>(r1, r0);

     label2:
        return 0;
    }

    public boolean unbindLocked()
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        com.android.server.accessibility.AccessibilityManagerService$UserState r1;
        android.os.IBinder $r2;
        int $i0;
        com.android.server.accessibility.AccessibilityManagerService $r3, $r5, $r6;
        com.android.server.accessibility.AccessibilityManagerService$Service$KeyEventDispatcher $r4;
        boolean $z0;
        android.content.Context $r7;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        $r2 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.os.IBinder mService>;

        if $r2 != null goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $i0 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mUserId>;

        r1 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$UserState access$600(com.android.server.accessibility.AccessibilityManagerService,int)>($r3, $i0);

        $r4 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService$Service$KeyEventDispatcher mKeyEventDispatcher>;

        virtualinvoke $r4.<com.android.server.accessibility.AccessibilityManagerService$Service$KeyEventDispatcher: void flush()>();

        $z0 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: boolean mIsAutomation>;

        if $z0 != 0 goto label2;

        $r6 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r7 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.content.Context access$1600(com.android.server.accessibility.AccessibilityManagerService)>($r6);

        virtualinvoke $r7.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r0);

        goto label3;

     label2:
        virtualinvoke r1.<com.android.server.accessibility.AccessibilityManagerService$UserState: void destroyUiAutomationService()>();

     label3:
        $r5 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        staticinvoke <com.android.server.accessibility.AccessibilityManagerService: void access$3000(com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$Service,com.android.server.accessibility.AccessibilityManagerService$UserState)>($r5, r0, r1);

        virtualinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: void resetLocked()>();

        return 1;
    }

    public boolean canReceiveEventsLocked()
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        int $i0, $i1;
        android.os.IBinder $r1;
        boolean $z0;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        $i0 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mEventTypes>;

        if $i0 == 0 goto label1;

        $i1 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mFeedbackType>;

        if $i1 == 0 goto label1;

        $r1 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.os.IBinder mService>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setOnKeyEventResult(boolean, int)
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        boolean z0;
        int i0;
        com.android.server.accessibility.AccessibilityManagerService$Service$KeyEventDispatcher $r1;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        $r1 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService$Service$KeyEventDispatcher mKeyEventDispatcher>;

        virtualinvoke $r1.<com.android.server.accessibility.AccessibilityManagerService$Service$KeyEventDispatcher: void setOnKeyEventResult(boolean,int)>(z0, i0);

        return;
    }

    public android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        java.lang.Object r1, $r4;
        java.lang.Throwable r2, $r6;
        com.android.server.accessibility.AccessibilityManagerService $r3;
        android.accessibilityservice.AccessibilityServiceInfo $r5;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        $r3 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r4 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$000(com.android.server.accessibility.AccessibilityManagerService)>($r3);

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.accessibilityservice.AccessibilityServiceInfo mAccessibilityServiceInfo>;

        exitmonitor r1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean canRetrieveInteractiveWindowsLocked()
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        com.android.server.accessibility.AccessibilityManagerService $r1;
        com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        $r1 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r2 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r1);

        $z0 = virtualinvoke $r2.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: boolean canRetrieveWindowContentLocked(com.android.server.accessibility.AccessibilityManagerService$Service)>(r0);

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: boolean mRetrieveInteractiveWindows>;

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        android.accessibilityservice.AccessibilityServiceInfo r1, r3;
        long l0;
        java.lang.Object r2, $r8;
        com.android.server.accessibility.AccessibilityManagerService$UserState r4;
        java.lang.Throwable r5, r6, $r11, $r12;
        com.android.server.accessibility.AccessibilityManagerService $r7, $r9, $r10;
        int $i1;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        r1 := @parameter0: android.accessibilityservice.AccessibilityServiceInfo;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        $r7 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r8 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$000(com.android.server.accessibility.AccessibilityManagerService)>($r7);

        r2 = $r8;

        entermonitor $r8;

     label02:
        r3 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.accessibilityservice.AccessibilityServiceInfo mAccessibilityServiceInfo>;

        if r3 == null goto label03;

        virtualinvoke r3.<android.accessibilityservice.AccessibilityServiceInfo: void updateDynamicallyConfigurableProperties(android.accessibilityservice.AccessibilityServiceInfo)>(r1);

        virtualinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: void setDynamicallyConfigurableProperties(android.accessibilityservice.AccessibilityServiceInfo)>(r3);

        goto label04;

     label03:
        virtualinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: void setDynamicallyConfigurableProperties(android.accessibilityservice.AccessibilityServiceInfo)>(r1);

     label04:
        $r9 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $i1 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mUserId>;

        r4 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$UserState access$600(com.android.server.accessibility.AccessibilityManagerService,int)>($r9, $i1);

        $r10 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        staticinvoke <com.android.server.accessibility.AccessibilityManagerService: void access$500(com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState)>($r10, r4);

        exitmonitor r2;

     label05:
        goto label08;

     label06:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r2;

     label07:
        throw r5;

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label11;

     label09:
        $r12 := @caughtexception;

        r6 = $r12;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r6;

     label11:
        return;

        catch java.lang.Throwable from label02 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        android.content.ComponentName r1, $r12, $r14;
        android.os.IBinder r2;
        java.lang.Object r3, $r8;
        com.android.server.accessibility.AccessibilityManagerService$UserState r4;
        android.os.RemoteException r5, $r18;
        java.lang.Throwable r6, $r23;
        com.android.server.accessibility.AccessibilityManagerService $r7, $r10, $r11, $r17;
        android.accessibilityservice.IAccessibilityServiceClient $r9, $r16;
        int $i0, $i1;
        java.util.Set $r13, $r15;
        boolean $z0, $z2;
        java.lang.StringBuilder $r19, $r20, $r21;
        java.lang.String $r22;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        $r7 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r8 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$000(com.android.server.accessibility.AccessibilityManagerService)>($r7);

        r3 = $r8;

        entermonitor $r8;

     label01:
        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.os.IBinder mService> = r2;

        $r9 = staticinvoke <android.accessibilityservice.IAccessibilityServiceClient$Stub: android.accessibilityservice.IAccessibilityServiceClient asInterface(android.os.IBinder)>(r2);

        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.accessibilityservice.IAccessibilityServiceClient mServiceInterface> = $r9;

        $r10 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $i0 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mUserId>;

        r4 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$UserState access$600(com.android.server.accessibility.AccessibilityManagerService,int)>($r10, $i0);

        $r11 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        staticinvoke <com.android.server.accessibility.AccessibilityManagerService: void access$3200(com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$Service,com.android.server.accessibility.AccessibilityManagerService$UserState)>($r11, r0, r4);

        $r13 = r4.<com.android.server.accessibility.AccessibilityManagerService$UserState: java.util.Set mBindingServices>;

        $r12 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.content.ComponentName mComponentName>;

        $z0 = interfaceinvoke $r13.<java.util.Set: boolean contains(java.lang.Object)>($r12);

        if $z0 != 0 goto label02;

        $z2 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: boolean mWasConnectedAndDied>;

        if $z2 == 0 goto label06;

     label02:
        $r15 = r4.<com.android.server.accessibility.AccessibilityManagerService$UserState: java.util.Set mBindingServices>;

        $r14 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.content.ComponentName mComponentName>;

        interfaceinvoke $r15.<java.util.Set: boolean remove(java.lang.Object)>($r14);

        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: boolean mWasConnectedAndDied> = 0;

     label03:
        $r16 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.accessibilityservice.IAccessibilityServiceClient mServiceInterface>;

        $i1 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mId>;

        interfaceinvoke $r16.<android.accessibilityservice.IAccessibilityServiceClient: void setConnection(android.accessibilityservice.IAccessibilityServiceConnection,int)>(r0, $i1);

        $r17 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        staticinvoke <com.android.server.accessibility.AccessibilityManagerService: void access$500(com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState)>($r17, r4);

     label04:
        goto label07;

     label05:
        $r18 := @caughtexception;

        r5 = $r18;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error while setting connection for service: ");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AccessibilityManagerService", $r22, r5);

        virtualinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: void binderDied()>();

        goto label07;

     label06:
        virtualinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: void binderDied()>();

     label07:
        exitmonitor r3;

     label08:
        goto label11;

     label09:
        $r23 := @caughtexception;

        r6 = $r23;

        exitmonitor r3;

     label10:
        throw r6;

     label11:
        return;

        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public java.util.List getWindows()
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        java.lang.Object r1, $r8, $r21;
        int i0, i1, i2, $i3, $i4;
        boolean z0;
        java.util.ArrayList r2, $r14;
        android.view.accessibility.AccessibilityWindowInfo r3, r4;
        java.lang.Throwable r5, $r22;
        com.android.server.accessibility.AccessibilityManagerService $r6, $r7, $r9, $r11, $r13, $r16, $r18;
        com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy $r10, $r12, $r15, $r20;
        java.util.List $r17, $r19;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        $r6 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        staticinvoke <com.android.server.accessibility.AccessibilityManagerService: void access$3300(com.android.server.accessibility.AccessibilityManagerService)>($r6);

        $r7 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r8 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$000(com.android.server.accessibility.AccessibilityManagerService)>($r7);

        r1 = $r8;

        entermonitor $r8;

     label01:
        $r9 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r10 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r9);

        i0 = virtualinvoke $r10.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: int resolveCallingUserIdEnforcingPermissionsLocked(int)>(-2);

        $r11 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $i3 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: int access$100(com.android.server.accessibility.AccessibilityManagerService)>($r11);

        if i0 == $i3 goto label03;

        exitmonitor r1;

     label02:
        return null;

     label03:
        $r13 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r12 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r13);

        z0 = virtualinvoke $r12.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: boolean canRetrieveWindowsLocked(com.android.server.accessibility.AccessibilityManagerService$Service)>(r0);

        if z0 != 0 goto label05;

        exitmonitor r1;

     label04:
        return null;

     label05:
        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r2 = $r14;

        $r16 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r15 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r16);

        $r17 = $r15.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: java.util.List mWindows>;

        i1 = interfaceinvoke $r17.<java.util.List: int size()>();

        i2 = 0;

     label06:
        if i2 >= i1 goto label07;

        $r18 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r20 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r18);

        $r19 = $r20.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: java.util.List mWindows>;

        $r21 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>(i2);

        r3 = (android.view.accessibility.AccessibilityWindowInfo) $r21;

        r4 = staticinvoke <android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo obtain(android.view.accessibility.AccessibilityWindowInfo)>(r3);

        $i4 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mId>;

        virtualinvoke r4.<android.view.accessibility.AccessibilityWindowInfo: void setConnectionId(int)>($i4);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4);

        i2 = i2 + 1;

        goto label06;

     label07:
        exitmonitor r1;

     label08:
        return r2;

     label09:
        $r22 := @caughtexception;

        r5 = $r22;

        exitmonitor r1;

     label10:
        throw r5;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public android.view.accessibility.AccessibilityWindowInfo getWindow(int)
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        int i0, i1, $i2, $i3;
        java.lang.Object r1, $r7;
        boolean z0;
        android.view.accessibility.AccessibilityWindowInfo r2, r3;
        java.lang.Throwable r4, $r15;
        com.android.server.accessibility.AccessibilityManagerService $r5, $r6, $r8, $r10, $r12, $r13;
        com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy $r9, $r11, $r14;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        i0 := @parameter0: int;

        $r5 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        staticinvoke <com.android.server.accessibility.AccessibilityManagerService: void access$3300(com.android.server.accessibility.AccessibilityManagerService)>($r5);

        $r6 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r7 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$000(com.android.server.accessibility.AccessibilityManagerService)>($r6);

        r1 = $r7;

        entermonitor $r7;

     label01:
        $r8 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r9 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r8);

        i1 = virtualinvoke $r9.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: int resolveCallingUserIdEnforcingPermissionsLocked(int)>(-2);

        $r10 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $i2 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: int access$100(com.android.server.accessibility.AccessibilityManagerService)>($r10);

        if i1 == $i2 goto label03;

        exitmonitor r1;

     label02:
        return null;

     label03:
        $r12 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r11 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r12);

        z0 = virtualinvoke $r11.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: boolean canRetrieveWindowsLocked(com.android.server.accessibility.AccessibilityManagerService$Service)>(r0);

        if z0 != 0 goto label05;

        exitmonitor r1;

     label04:
        return null;

     label05:
        $r13 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r14 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r13);

        r2 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: android.view.accessibility.AccessibilityWindowInfo access$1500(com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy,int)>($r14, i0);

        if r2 == null goto label07;

        r3 = staticinvoke <android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo obtain(android.view.accessibility.AccessibilityWindowInfo)>(r2);

        $i3 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mId>;

        virtualinvoke r3.<android.view.accessibility.AccessibilityWindowInfo: void setConnectionId(int)>($i3);

        exitmonitor r1;

     label06:
        return r3;

     label07:
        exitmonitor r1;

     label08:
        return null;

     label09:
        $r15 := @caughtexception;

        r4 = $r15;

        exitmonitor r1;

     label10:
        throw r4;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public boolean findAccessibilityNodeInfosByViewId(int, long, java.lang.String, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, long) throws android.os.RemoteException
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        int i0, i2, i4, i5, $i6, $i7, i8;
        long l1, l3, l9;
        java.lang.String r1;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r2;
        android.graphics.Region r3;
        java.lang.Object r4, $r8;
        boolean z0, $z1;
        java.lang.Throwable r5, r6, $r18, $r19;
        com.android.server.accessibility.AccessibilityManagerService $r7, $r9, $r11, $r12, $r14, $r15, $r17;
        com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy $r10, $r13, $r16;
        android.os.RemoteException $r20;
        android.view.accessibility.IAccessibilityInteractionConnection r21;
        android.view.MagnificationSpec r22;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        r2 := @parameter4: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        l3 := @parameter5: long;

        $r7 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        r3 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.graphics.Region access$3400(com.android.server.accessibility.AccessibilityManagerService)>($r7);

        $r9 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r8 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$000(com.android.server.accessibility.AccessibilityManagerService)>($r9);

        r4 = $r8;

        entermonitor $r8;

     label01:
        $r11 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r10 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r11);

        i5 = virtualinvoke $r10.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: int resolveCallingUserIdEnforcingPermissionsLocked(int)>(-2);

        $r12 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $i6 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: int access$100(com.android.server.accessibility.AccessibilityManagerService)>($r12);

        if i5 == $i6 goto label03;

        exitmonitor r4;

     label02:
        return 0;

     label03:
        i4 = specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int resolveAccessibilityWindowIdLocked(int)>(i0);

        $r14 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r13 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r14);

        z0 = virtualinvoke $r13.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: boolean canGetAccessibilityNodeInfoLocked(com.android.server.accessibility.AccessibilityManagerService$Service,int)>(r0, i4);

        if z0 != 0 goto label05;

        exitmonitor r4;

     label04:
        return 0;

     label05:
        r21 = specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.view.accessibility.IAccessibilityInteractionConnection getConnectionLocked(int)>(i4);

        if r21 != null goto label07;

        exitmonitor r4;

     label06:
        return 0;

     label07:
        $r15 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r16 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r15);

        $z1 = virtualinvoke $r16.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: boolean computePartialInteractiveRegionForWindowLocked(int,android.graphics.Region)>(i4, r3);

        if $z1 != 0 goto label08;

        r3 = null;

     label08:
        exitmonitor r4;

     label09:
        goto label12;

     label10:
        $r18 := @caughtexception;

        r5 = $r18;

        exitmonitor r4;

     label11:
        throw r5;

     label12:
        i8 = staticinvoke <android.os.Binder: int getCallingPid()>();

        l9 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r17 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        r22 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.view.MagnificationSpec access$3500(com.android.server.accessibility.AccessibilityManagerService,int)>($r17, i4);

     label13:
        $i7 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mFetchFlags>;

        interfaceinvoke r21.<android.view.accessibility.IAccessibilityInteractionConnection: void findAccessibilityNodeInfosByViewId(long,java.lang.String,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>(l1, r1, r3, i2, r2, $i7, i8, l3, r22);

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l9);

        return 1;

     label15:
        $r20 := @caughtexception;

     label16:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l9);

        goto label19;

     label17:
        $r19 := @caughtexception;

        r6 = $r19;

     label18:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l9);

        throw r6;

     label19:
        return 0;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch android.os.RemoteException from label13 to label14 with label15;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public boolean findAccessibilityNodeInfosByText(int, long, java.lang.String, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, long) throws android.os.RemoteException
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        int i0, i2, i4, i5, $i6, $i7, i8;
        long l1, l3, l9;
        java.lang.String r1;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r2;
        android.graphics.Region r3;
        java.lang.Object r4, $r8;
        boolean z0, $z1;
        java.lang.Throwable r5, r6, $r19, $r20;
        com.android.server.accessibility.AccessibilityManagerService $r7, $r9, $r11, $r12, $r14, $r15, $r17;
        com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy $r10, $r13, $r16;
        android.os.RemoteException $r18;
        android.view.accessibility.IAccessibilityInteractionConnection r21;
        android.view.MagnificationSpec r22;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        r2 := @parameter4: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        l3 := @parameter5: long;

        $r7 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        r3 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.graphics.Region access$3400(com.android.server.accessibility.AccessibilityManagerService)>($r7);

        $r9 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r8 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$000(com.android.server.accessibility.AccessibilityManagerService)>($r9);

        r4 = $r8;

        entermonitor $r8;

     label01:
        $r11 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r10 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r11);

        i5 = virtualinvoke $r10.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: int resolveCallingUserIdEnforcingPermissionsLocked(int)>(-2);

        $r12 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $i6 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: int access$100(com.android.server.accessibility.AccessibilityManagerService)>($r12);

        if i5 == $i6 goto label03;

        exitmonitor r4;

     label02:
        return 0;

     label03:
        i4 = specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int resolveAccessibilityWindowIdLocked(int)>(i0);

        $r14 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r13 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r14);

        z0 = virtualinvoke $r13.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: boolean canGetAccessibilityNodeInfoLocked(com.android.server.accessibility.AccessibilityManagerService$Service,int)>(r0, i4);

        if z0 != 0 goto label05;

        exitmonitor r4;

     label04:
        return 0;

     label05:
        r21 = specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.view.accessibility.IAccessibilityInteractionConnection getConnectionLocked(int)>(i4);

        if r21 != null goto label07;

        exitmonitor r4;

     label06:
        return 0;

     label07:
        $r15 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r16 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r15);

        $z1 = virtualinvoke $r16.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: boolean computePartialInteractiveRegionForWindowLocked(int,android.graphics.Region)>(i4, r3);

        if $z1 != 0 goto label08;

        r3 = null;

     label08:
        exitmonitor r4;

     label09:
        goto label12;

     label10:
        $r20 := @caughtexception;

        r5 = $r20;

        exitmonitor r4;

     label11:
        throw r5;

     label12:
        i8 = staticinvoke <android.os.Binder: int getCallingPid()>();

        l9 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r17 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        r22 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.view.MagnificationSpec access$3500(com.android.server.accessibility.AccessibilityManagerService,int)>($r17, i4);

     label13:
        $i7 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mFetchFlags>;

        interfaceinvoke r21.<android.view.accessibility.IAccessibilityInteractionConnection: void findAccessibilityNodeInfosByText(long,java.lang.String,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>(l1, r1, r3, i2, r2, $i7, i8, l3, r22);

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l9);

        return 1;

     label15:
        $r18 := @caughtexception;

     label16:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l9);

        goto label19;

     label17:
        $r19 := @caughtexception;

        r6 = $r19;

     label18:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l9);

        throw r6;

     label19:
        return 0;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch android.os.RemoteException from label13 to label14 with label15;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public boolean findAccessibilityNodeInfoByAccessibilityId(int, long, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, long) throws android.os.RemoteException
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        int i0, i2, i3, i5, i6, $i7, $i8, $i9, i10;
        long l1, l4, l11;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r1;
        android.graphics.Region r2;
        java.lang.Object r3, $r7;
        boolean z0, $z1;
        java.lang.Throwable r4, r5, $r17, $r19;
        com.android.server.accessibility.AccessibilityManagerService $r6, $r8, $r10, $r11, $r13, $r14, $r16;
        com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy $r9, $r12, $r15;
        android.os.RemoteException $r18;
        android.view.accessibility.IAccessibilityInteractionConnection r20;
        android.view.MagnificationSpec r21;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        r1 := @parameter3: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i3 := @parameter4: int;

        l4 := @parameter5: long;

        $r6 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        r2 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.graphics.Region access$3400(com.android.server.accessibility.AccessibilityManagerService)>($r6);

        $r8 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r7 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$000(com.android.server.accessibility.AccessibilityManagerService)>($r8);

        r3 = $r7;

        entermonitor $r7;

     label01:
        $r10 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r9 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r10);

        i6 = virtualinvoke $r9.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: int resolveCallingUserIdEnforcingPermissionsLocked(int)>(-2);

        $r11 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $i7 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: int access$100(com.android.server.accessibility.AccessibilityManagerService)>($r11);

        if i6 == $i7 goto label03;

        exitmonitor r3;

     label02:
        return 0;

     label03:
        i5 = specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int resolveAccessibilityWindowIdLocked(int)>(i0);

        $r13 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r12 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r13);

        z0 = virtualinvoke $r12.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: boolean canGetAccessibilityNodeInfoLocked(com.android.server.accessibility.AccessibilityManagerService$Service,int)>(r0, i5);

        if z0 != 0 goto label05;

        exitmonitor r3;

     label04:
        return 0;

     label05:
        r20 = specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.view.accessibility.IAccessibilityInteractionConnection getConnectionLocked(int)>(i5);

        if r20 != null goto label07;

        exitmonitor r3;

     label06:
        return 0;

     label07:
        $r14 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r15 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r14);

        $z1 = virtualinvoke $r15.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: boolean computePartialInteractiveRegionForWindowLocked(int,android.graphics.Region)>(i5, r2);

        if $z1 != 0 goto label08;

        r2 = null;

     label08:
        exitmonitor r3;

     label09:
        goto label12;

     label10:
        $r17 := @caughtexception;

        r4 = $r17;

        exitmonitor r3;

     label11:
        throw r4;

     label12:
        i10 = staticinvoke <android.os.Binder: int getCallingPid()>();

        l11 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r16 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        r21 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.view.MagnificationSpec access$3500(com.android.server.accessibility.AccessibilityManagerService,int)>($r16, i5);

     label13:
        $i8 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mFetchFlags>;

        $i9 = $i8 | i3;

        interfaceinvoke r20.<android.view.accessibility.IAccessibilityInteractionConnection: void findAccessibilityNodeInfoByAccessibilityId(long,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>(l1, r2, i2, r1, $i9, i10, l4, r21);

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l11);

        return 1;

     label15:
        $r18 := @caughtexception;

     label16:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l11);

        goto label19;

     label17:
        $r19 := @caughtexception;

        r5 = $r19;

     label18:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l11);

        throw r5;

     label19:
        return 0;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch android.os.RemoteException from label13 to label14 with label15;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public boolean findFocus(int, long, int, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, long) throws android.os.RemoteException
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        int i0, i2, i3, i5, i6, $i7, $i8, i9;
        long l1, l4, l10;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r1;
        android.graphics.Region r2;
        java.lang.Object r3, $r7;
        boolean z0, $z1;
        java.lang.Throwable r4, r5, $r17, $r19;
        com.android.server.accessibility.AccessibilityManagerService $r6, $r8, $r10, $r11, $r13, $r14, $r16;
        com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy $r9, $r12, $r15;
        android.os.RemoteException $r18;
        android.view.accessibility.IAccessibilityInteractionConnection r20;
        android.view.MagnificationSpec r21;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        l4 := @parameter5: long;

        $r6 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        r2 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.graphics.Region access$3400(com.android.server.accessibility.AccessibilityManagerService)>($r6);

        $r8 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r7 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$000(com.android.server.accessibility.AccessibilityManagerService)>($r8);

        r3 = $r7;

        entermonitor $r7;

     label01:
        $r10 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r9 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r10);

        i6 = virtualinvoke $r9.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: int resolveCallingUserIdEnforcingPermissionsLocked(int)>(-2);

        $r11 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $i7 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: int access$100(com.android.server.accessibility.AccessibilityManagerService)>($r11);

        if i6 == $i7 goto label03;

        exitmonitor r3;

     label02:
        return 0;

     label03:
        i5 = specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int resolveAccessibilityWindowIdForFindFocusLocked(int,int)>(i0, i2);

        $r13 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r12 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r13);

        z0 = virtualinvoke $r12.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: boolean canGetAccessibilityNodeInfoLocked(com.android.server.accessibility.AccessibilityManagerService$Service,int)>(r0, i5);

        if z0 != 0 goto label05;

        exitmonitor r3;

     label04:
        return 0;

     label05:
        r20 = specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.view.accessibility.IAccessibilityInteractionConnection getConnectionLocked(int)>(i5);

        if r20 != null goto label07;

        exitmonitor r3;

     label06:
        return 0;

     label07:
        $r14 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r15 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r14);

        $z1 = virtualinvoke $r15.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: boolean computePartialInteractiveRegionForWindowLocked(int,android.graphics.Region)>(i5, r2);

        if $z1 != 0 goto label08;

        r2 = null;

     label08:
        exitmonitor r3;

     label09:
        goto label12;

     label10:
        $r19 := @caughtexception;

        r4 = $r19;

        exitmonitor r3;

     label11:
        throw r4;

     label12:
        i9 = staticinvoke <android.os.Binder: int getCallingPid()>();

        l10 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r16 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        r21 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.view.MagnificationSpec access$3500(com.android.server.accessibility.AccessibilityManagerService,int)>($r16, i5);

     label13:
        $i8 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mFetchFlags>;

        interfaceinvoke r20.<android.view.accessibility.IAccessibilityInteractionConnection: void findFocus(long,int,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>(l1, i2, r2, i3, r1, $i8, i9, l4, r21);

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l10);

        return 1;

     label15:
        $r18 := @caughtexception;

     label16:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l10);

        goto label19;

     label17:
        $r17 := @caughtexception;

        r5 = $r17;

     label18:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l10);

        throw r5;

     label19:
        return 0;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch android.os.RemoteException from label13 to label14 with label15;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public boolean focusSearch(int, long, int, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, long) throws android.os.RemoteException
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        int i0, i2, i3, i5, i6, $i7, $i8, i9;
        long l1, l4, l10;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r1;
        android.graphics.Region r2;
        java.lang.Object r3, $r7;
        boolean z0, $z1;
        java.lang.Throwable r4, r5, $r17, $r19;
        com.android.server.accessibility.AccessibilityManagerService $r6, $r8, $r10, $r11, $r13, $r14, $r16;
        com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy $r9, $r12, $r15;
        android.os.RemoteException $r18;
        android.view.accessibility.IAccessibilityInteractionConnection r20;
        android.view.MagnificationSpec r21;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        l4 := @parameter5: long;

        $r6 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        r2 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.graphics.Region access$3400(com.android.server.accessibility.AccessibilityManagerService)>($r6);

        $r8 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r7 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$000(com.android.server.accessibility.AccessibilityManagerService)>($r8);

        r3 = $r7;

        entermonitor $r7;

     label01:
        $r10 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r9 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r10);

        i6 = virtualinvoke $r9.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: int resolveCallingUserIdEnforcingPermissionsLocked(int)>(-2);

        $r11 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $i7 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: int access$100(com.android.server.accessibility.AccessibilityManagerService)>($r11);

        if i6 == $i7 goto label03;

        exitmonitor r3;

     label02:
        return 0;

     label03:
        i5 = specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int resolveAccessibilityWindowIdLocked(int)>(i0);

        $r13 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r12 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r13);

        z0 = virtualinvoke $r12.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: boolean canGetAccessibilityNodeInfoLocked(com.android.server.accessibility.AccessibilityManagerService$Service,int)>(r0, i5);

        if z0 != 0 goto label05;

        exitmonitor r3;

     label04:
        return 0;

     label05:
        r20 = specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.view.accessibility.IAccessibilityInteractionConnection getConnectionLocked(int)>(i5);

        if r20 != null goto label07;

        exitmonitor r3;

     label06:
        return 0;

     label07:
        $r14 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r15 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r14);

        $z1 = virtualinvoke $r15.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: boolean computePartialInteractiveRegionForWindowLocked(int,android.graphics.Region)>(i5, r2);

        if $z1 != 0 goto label08;

        r2 = null;

     label08:
        exitmonitor r3;

     label09:
        goto label12;

     label10:
        $r19 := @caughtexception;

        r4 = $r19;

        exitmonitor r3;

     label11:
        throw r4;

     label12:
        i9 = staticinvoke <android.os.Binder: int getCallingPid()>();

        l10 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r16 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        r21 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.view.MagnificationSpec access$3500(com.android.server.accessibility.AccessibilityManagerService,int)>($r16, i5);

     label13:
        $i8 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mFetchFlags>;

        interfaceinvoke r20.<android.view.accessibility.IAccessibilityInteractionConnection: void focusSearch(long,int,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>(l1, i2, r2, i3, r1, $i8, i9, l4, r21);

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l10);

        return 1;

     label15:
        $r18 := @caughtexception;

     label16:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l10);

        goto label19;

     label17:
        $r17 := @caughtexception;

        r5 = $r17;

     label18:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l10);

        throw r5;

     label19:
        return 0;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch android.os.RemoteException from label13 to label14 with label15;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public boolean performAccessibilityAction(int, long, int, android.os.Bundle, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, long) throws android.os.RemoteException
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        int i0, i2, i3, i5, i6, $i7, $i8, i9;
        long l1, l4, l10;
        android.os.Bundle r1;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r2;
        java.lang.Object r3, $r8;
        boolean z0;
        java.lang.Throwable r4, r6, $r14, $r15;
        com.android.server.accessibility.AccessibilityManagerService $r5, $r7, $r10, $r11;
        com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy $r9, $r12;
        android.os.RemoteException $r13;
        android.view.accessibility.IAccessibilityInteractionConnection r16;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        r1 := @parameter3: android.os.Bundle;

        i3 := @parameter4: int;

        r2 := @parameter5: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        l4 := @parameter6: long;

        $r5 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r8 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$000(com.android.server.accessibility.AccessibilityManagerService)>($r5);

        r3 = $r8;

        entermonitor $r8;

     label01:
        $r7 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r9 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r7);

        i6 = virtualinvoke $r9.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: int resolveCallingUserIdEnforcingPermissionsLocked(int)>(-2);

        $r10 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $i7 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: int access$100(com.android.server.accessibility.AccessibilityManagerService)>($r10);

        if i6 == $i7 goto label03;

        exitmonitor r3;

     label02:
        return 0;

     label03:
        i5 = specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int resolveAccessibilityWindowIdLocked(int)>(i0);

        $r11 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r12 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r11);

        z0 = virtualinvoke $r12.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: boolean canGetAccessibilityNodeInfoLocked(com.android.server.accessibility.AccessibilityManagerService$Service,int)>(r0, i5);

        if z0 != 0 goto label05;

        exitmonitor r3;

     label04:
        return 0;

     label05:
        r16 = specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.view.accessibility.IAccessibilityInteractionConnection getConnectionLocked(int)>(i5);

        if r16 != null goto label07;

        exitmonitor r3;

     label06:
        return 0;

     label07:
        exitmonitor r3;

     label08:
        goto label11;

     label09:
        $r15 := @caughtexception;

        r4 = $r15;

        exitmonitor r3;

     label10:
        throw r4;

     label11:
        i9 = staticinvoke <android.os.Binder: int getCallingPid()>();

        l10 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label12:
        $i8 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mFetchFlags>;

        interfaceinvoke r16.<android.view.accessibility.IAccessibilityInteractionConnection: void performAccessibilityAction(long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>(l1, i2, r1, i3, r2, $i8, i9, l4);

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l10);

        goto label18;

     label14:
        $r13 := @caughtexception;

     label15:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l10);

        goto label18;

     label16:
        $r14 := @caughtexception;

        r6 = $r14;

     label17:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l10);

        throw r6;

     label18:
        return 1;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch android.os.RemoteException from label12 to label13 with label14;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    public boolean performGlobalAction(int)
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        int i0, i1, $i2;
        java.lang.Object r1, $r5;
        java.lang.Throwable r2, r3, $r9, $r10;
        com.android.server.accessibility.AccessibilityManagerService $r4, $r6, $r8;
        com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy $r7;
        long l3;
        boolean z0, z1, z2, z3, z4, z5, z6;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r5 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$000(com.android.server.accessibility.AccessibilityManagerService)>($r4);

        r1 = $r5;

        entermonitor $r5;

     label01:
        $r6 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r7 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r6);

        i1 = virtualinvoke $r7.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: int resolveCallingUserIdEnforcingPermissionsLocked(int)>(-2);

        $r8 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $i2 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: int access$100(com.android.server.accessibility.AccessibilityManagerService)>($r8);

        if i1 == $i2 goto label03;

        exitmonitor r1;

     label02:
        return 0;

     label03:
        exitmonitor r1;

     label04:
        goto label07;

     label05:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r1;

     label06:
        throw r2;

     label07:
        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label08:
        tableswitch(i0)
        {
            case 1: goto label09;
            case 2: goto label11;
            case 3: goto label13;
            case 4: goto label15;
            case 5: goto label17;
            case 6: goto label19;
            default: goto label21;
        };

     label09:
        specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: void sendDownAndUpKeyEvents(int)>(4);

        z0 = 1;

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return z0;

     label11:
        specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: void sendDownAndUpKeyEvents(int)>(3);

        z1 = 1;

     label12:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return z1;

     label13:
        specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: void openRecents()>();

        z2 = 1;

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return z2;

     label15:
        specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: void expandNotifications()>();

        z3 = 1;

     label16:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return z3;

     label17:
        specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: void expandQuickSettings()>();

        z4 = 1;

     label18:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return z4;

     label19:
        specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: void showGlobalActions()>();

        z5 = 1;

     label20:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return z5;

     label21:
        z6 = 0;

     label22:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return z6;

     label23:
        $r10 := @caughtexception;

        r3 = $r10;

     label24:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw r3;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label08 to label10 with label23;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.Throwable from label13 to label14 with label23;
        catch java.lang.Throwable from label15 to label16 with label23;
        catch java.lang.Throwable from label17 to label18 with label23;
        catch java.lang.Throwable from label19 to label20 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
    }

    public boolean computeClickPointInScreen(int, long, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, long) throws android.os.RemoteException
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        int i0, i2, i4, i5, $i6, i7;
        long l1, l3, l8;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r1;
        android.graphics.Region r2;
        java.lang.Object r3, $r9;
        boolean z0, $z1;
        java.lang.Throwable r4, r6, $r17, $r18;
        com.android.server.accessibility.AccessibilityManagerService $r5, $r7, $r8, $r11, $r12, $r14, $r16;
        com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy $r10, $r13, $r15;
        android.os.RemoteException $r19;
        android.view.accessibility.IAccessibilityInteractionConnection r20;
        android.view.MagnificationSpec r21;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        r1 := @parameter3: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        l3 := @parameter4: long;

        $r5 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        r2 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.graphics.Region access$3400(com.android.server.accessibility.AccessibilityManagerService)>($r5);

        $r7 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r9 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$000(com.android.server.accessibility.AccessibilityManagerService)>($r7);

        r3 = $r9;

        entermonitor $r9;

     label01:
        $r8 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r10 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r8);

        i5 = virtualinvoke $r10.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: int resolveCallingUserIdEnforcingPermissionsLocked(int)>(-2);

        $r11 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $i6 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: int access$100(com.android.server.accessibility.AccessibilityManagerService)>($r11);

        if i5 == $i6 goto label03;

        exitmonitor r3;

     label02:
        return 0;

     label03:
        i4 = specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int resolveAccessibilityWindowIdLocked(int)>(i0);

        $r12 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r13 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r12);

        z0 = virtualinvoke $r13.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: boolean canRetrieveWindowContentLocked(com.android.server.accessibility.AccessibilityManagerService$Service)>(r0);

        if z0 != 0 goto label05;

        exitmonitor r3;

     label04:
        return 0;

     label05:
        r20 = specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.view.accessibility.IAccessibilityInteractionConnection getConnectionLocked(int)>(i4);

        if r20 != null goto label07;

        exitmonitor r3;

     label06:
        return 0;

     label07:
        $r14 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r15 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r14);

        $z1 = virtualinvoke $r15.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: boolean computePartialInteractiveRegionForWindowLocked(int,android.graphics.Region)>(i4, r2);

        if $z1 != 0 goto label08;

        r2 = null;

     label08:
        exitmonitor r3;

     label09:
        goto label12;

     label10:
        $r18 := @caughtexception;

        r4 = $r18;

        exitmonitor r3;

     label11:
        throw r4;

     label12:
        i7 = staticinvoke <android.os.Binder: int getCallingPid()>();

        l8 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r16 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        r21 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.view.MagnificationSpec access$3500(com.android.server.accessibility.AccessibilityManagerService,int)>($r16, i4);

     label13:
        interfaceinvoke r20.<android.view.accessibility.IAccessibilityInteractionConnection: void computeClickPointInScreen(long,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,long,android.view.MagnificationSpec)>(l1, r2, i2, r1, i7, l3, r21);

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l8);

        return 1;

     label15:
        $r19 := @caughtexception;

     label16:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l8);

        goto label19;

     label17:
        $r17 := @caughtexception;

        r6 = $r17;

     label18:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l8);

        throw r6;

     label19:
        return 0;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch android.os.RemoteException from label13 to label14 with label15;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.lang.Object r4, $r9;
        java.lang.Throwable r5, $r44;
        com.android.server.accessibility.AccessibilityManagerService $r6, $r8, $r14;
        com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy $r7;
        java.lang.StringBuilder $r10, $r11, $r19, $r20, $r22, $r23, $r27, $r28, $r31, $r32, $r35, $r36, $r37, $r38, $r43;
        android.accessibilityservice.AccessibilityServiceInfo $r12, $r29;
        android.content.pm.ResolveInfo $r13;
        android.content.Context $r15;
        java.lang.CharSequence $r16;
        android.content.pm.PackageManager $r17;
        java.lang.String $r18, $r24, $r26, $r33, $r34, $r39, $r41;
        int $i0, $i1, $i2;
        long $l3;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r6 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r7 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r6);

        staticinvoke <com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: void access$1100(com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy,java.lang.String,java.lang.String)>($r7, "android.permission.DUMP", "dump");

        $r8 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r9 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$000(com.android.server.accessibility.AccessibilityManagerService)>($r8);

        r4 = $r9;

        entermonitor $r9;

     label1:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service[label=");

        $r12 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.accessibilityservice.AccessibilityServiceInfo mAccessibilityServiceInfo>;

        $r13 = virtualinvoke $r12.<android.accessibilityservice.AccessibilityServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>();

        $r14 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r15 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.content.Context access$1600(com.android.server.accessibility.AccessibilityManagerService)>($r14);

        $r17 = virtualinvoke $r15.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r16 = virtualinvoke $r13.<android.content.pm.ResolveInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>($r17);

        $r19 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r18);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", feedbackType");

        $i0 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mFeedbackType>;

        $r24 = staticinvoke <android.accessibilityservice.AccessibilityServiceInfo: java.lang.String feedbackTypeToString(int)>($i0);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r26);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", capabilities=");

        $r29 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.accessibilityservice.AccessibilityServiceInfo mAccessibilityServiceInfo>;

        $i1 = virtualinvoke $r29.<android.accessibilityservice.AccessibilityServiceInfo: int getCapabilities()>();

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r33);

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", eventTypes=");

        $i2 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mEventTypes>;

        $r34 = staticinvoke <android.view.accessibility.AccessibilityEvent: java.lang.String eventTypeToString(int)>($i2);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r39 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r39);

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", notificationTimeout=");

        $l3 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: long mNotificationTimeout>;

        $r43 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r41 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r41);

        virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("]");

        exitmonitor r4;

     label2:
        goto label5;

     label3:
        $r44 := @caughtexception;

        r5 = $r44;

        exitmonitor r4;

     label4:
        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        android.content.ComponentName r1;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        r1 := @parameter0: android.content.ComponentName;

        return;
    }

    public void linkToOwnDeathLocked() throws android.os.RemoteException
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        $r1 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.os.IBinder mService>;

        interfaceinvoke $r1.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

        return;
    }

    public void unlinkToOwnDeathLocked()
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        $r1 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.os.IBinder mService>;

        interfaceinvoke $r1.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

        return;
    }

    public void resetLocked()
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        int $i0;
        android.accessibilityservice.IAccessibilityServiceClient $r2;
        android.os.RemoteException $r3;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

     label1:
        $r2 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.accessibilityservice.IAccessibilityServiceClient mServiceInterface>;

        $i0 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mId>;

        interfaceinvoke $r2.<android.accessibilityservice.IAccessibilityServiceClient: void setConnection(android.accessibilityservice.IAccessibilityServiceConnection,int)>(null, $i0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.os.IBinder mService> = null;

        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.accessibilityservice.IAccessibilityServiceClient mServiceInterface> = null;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isConnectedLocked()
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        android.os.IBinder $r1;
        boolean $z0;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        $r1 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.os.IBinder mService>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void binderDied()
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        java.lang.Object r1, $r5;
        com.android.server.accessibility.AccessibilityManagerService$UserState r2;
        java.lang.Throwable r3, $r15;
        com.android.server.accessibility.AccessibilityManagerService $r4, $r7, $r8, $r13, $r14;
        boolean $z0, $z1, $z4;
        com.android.server.accessibility.AccessibilityManagerService$Service$KeyEventDispatcher $r6;
        int $i0;
        android.accessibilityservice.AccessibilityServiceInfo $r9;
        java.util.List $r10;
        android.content.ComponentName $r11;
        java.util.Set $r12;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        $r4 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r5 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$000(com.android.server.accessibility.AccessibilityManagerService)>($r4);

        r1 = $r5;

        entermonitor $r5;

     label1:
        $z0 = virtualinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: boolean isConnectedLocked()>();

        if $z0 != 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        r0.<com.android.server.accessibility.AccessibilityManagerService$Service: boolean mWasConnectedAndDied> = 1;

        $r6 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService$Service$KeyEventDispatcher mKeyEventDispatcher>;

        virtualinvoke $r6.<com.android.server.accessibility.AccessibilityManagerService$Service$KeyEventDispatcher: void flush()>();

        $r7 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $i0 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mUserId>;

        r2 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$UserState access$600(com.android.server.accessibility.AccessibilityManagerService,int)>($r7, $i0);

        $r8 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        staticinvoke <com.android.server.accessibility.AccessibilityManagerService: void access$3000(com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$Service,com.android.server.accessibility.AccessibilityManagerService$UserState)>($r8, r0, r2);

        virtualinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: void resetLocked()>();

        $z1 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: boolean mIsAutomation>;

        if $z1 == 0 goto label4;

        $r10 = r2.<com.android.server.accessibility.AccessibilityManagerService$UserState: java.util.List mInstalledServices>;

        $r9 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.accessibilityservice.AccessibilityServiceInfo mAccessibilityServiceInfo>;

        interfaceinvoke $r10.<java.util.List: boolean remove(java.lang.Object)>($r9);

        $r12 = r2.<com.android.server.accessibility.AccessibilityManagerService$UserState: java.util.Set mEnabledServices>;

        $r11 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.content.ComponentName mComponentName>;

        interfaceinvoke $r12.<java.util.Set: boolean remove(java.lang.Object)>($r11);

        virtualinvoke r2.<com.android.server.accessibility.AccessibilityManagerService$UserState: void destroyUiAutomationService()>();

        $r13 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $z4 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: boolean access$400(com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState)>($r13, r2);

        if $z4 == 0 goto label4;

        $r14 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        staticinvoke <com.android.server.accessibility.AccessibilityManagerService: void access$500(com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState)>($r14, r2);

     label4:
        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r15 := @caughtexception;

        r3 = $r15;

        exitmonitor r1;

     label7:
        throw r3;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void notifyAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        android.view.accessibility.AccessibilityEvent r1, r3, r4;
        java.lang.Object r2, $r8, $r10;
        int i0, i1;
        android.os.Message r5;
        java.lang.Throwable r6, $r14;
        com.android.server.accessibility.AccessibilityManagerService $r7;
        android.util.SparseArray $r9, $r11;
        android.os.Handler $r12, $r13, $r15;
        long $l2;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r7 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r8 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$000(com.android.server.accessibility.AccessibilityManagerService)>($r7);

        r2 = $r8;

        entermonitor $r8;

     label1:
        i0 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: int getEventType()>();

        r3 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(android.view.accessibility.AccessibilityEvent)>(r1);

        $r9 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.util.SparseArray mPendingEvents>;

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r4 = (android.view.accessibility.AccessibilityEvent) $r10;

        $r11 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.util.SparseArray mPendingEvents>;

        virtualinvoke $r11.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r3);

        i1 = i0;

        if r4 == null goto label2;

        $r15 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.os.Handler mEventDispatchHandler>;

        virtualinvoke $r15.<android.os.Handler: void removeMessages(int)>(i1);

        virtualinvoke r4.<android.view.accessibility.AccessibilityEvent: void recycle()>();

     label2:
        $r12 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.os.Handler mEventDispatchHandler>;

        r5 = virtualinvoke $r12.<android.os.Handler: android.os.Message obtainMessage(int)>(i1);

        $r13 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.os.Handler mEventDispatchHandler>;

        $l2 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: long mNotificationTimeout>;

        virtualinvoke $r13.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r5, $l2);

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r14 := @caughtexception;

        r6 = $r14;

        exitmonitor r2;

     label5:
        throw r6;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void notifyAccessibilityEventInternal(int)
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        int i0, $i1;
        android.accessibilityservice.IAccessibilityServiceClient r1;
        android.view.accessibility.AccessibilityEvent r2;
        java.lang.Object r3, $r7, $r9;
        java.lang.Throwable r4, r5, $r13, $r21;
        com.android.server.accessibility.AccessibilityManagerService $r6, $r11;
        android.util.SparseArray $r8, $r10;
        com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy $r12;
        boolean $z0;
        android.os.RemoteException $r14, r22;
        java.lang.StringBuilder $r15, $r16, $r17, $r18, $r19;
        java.lang.String $r20;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        i0 := @parameter0: int;

        $r6 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r7 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$000(com.android.server.accessibility.AccessibilityManagerService)>($r6);

        r3 = $r7;

        entermonitor $r7;

     label01:
        r1 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.accessibilityservice.IAccessibilityServiceClient mServiceInterface>;

        if r1 != null goto label03;

        exitmonitor r3;

     label02:
        return;

     label03:
        $r8 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.util.SparseArray mPendingEvents>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (android.view.accessibility.AccessibilityEvent) $r9;

        if r2 != null goto label05;

        exitmonitor r3;

     label04:
        return;

     label05:
        $r10 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.util.SparseArray mPendingEvents>;

        virtualinvoke $r10.<android.util.SparseArray: void remove(int)>(i0);

        $r11 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r12 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r11);

        $z0 = virtualinvoke $r12.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: boolean canRetrieveWindowContentLocked(com.android.server.accessibility.AccessibilityManagerService$Service)>(r0);

        if $z0 == 0 goto label06;

        $i1 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: int mId>;

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setConnectionId(int)>($i1);

        goto label07;

     label06:
        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setSource(android.view.View)>(null);

     label07:
        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setSealed(boolean)>(1);

        exitmonitor r3;

     label08:
        goto label11;

     label09:
        $r13 := @caughtexception;

        r4 = $r13;

        exitmonitor r3;

     label10:
        throw r4;

     label11:
        interfaceinvoke r1.<android.accessibilityservice.IAccessibilityServiceClient: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r2);

     label12:
        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void recycle()>();

        goto label17;

     label13:
        $r14 := @caughtexception;

        r22 = $r14;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error during sending ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AccessibilityManagerService", $r20, r22);

     label14:
        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void recycle()>();

        goto label17;

     label15:
        $r21 := @caughtexception;

        r5 = $r21;

     label16:
        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void recycle()>();

        throw r5;

     label17:
        return;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch android.os.RemoteException from label11 to label12 with label13;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public void notifyGesture(int)
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        int i0;
        com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler $r1;
        android.os.Message $r2;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler mInvocationHandler>;

        $r2 = virtualinvoke $r1.<com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler: android.os.Message obtainMessage(int,int,int)>(1, i0, 0);

        virtualinvoke $r2.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void notifyKeyEvent(android.view.KeyEvent, int)
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        android.view.KeyEvent r1;
        int i0;
        com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        r1 := @parameter0: android.view.KeyEvent;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler mInvocationHandler>;

        $r3 = virtualinvoke $r2.<com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(2, i0, 0, r1);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void notifyClearAccessibilityNodeInfoCache()
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler $r1;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        $r1 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler mInvocationHandler>;

        virtualinvoke $r1.<com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler: boolean sendEmptyMessage(int)>(3);

        return;
    }

    private void notifyGestureInternal(int)
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        int i0;
        android.accessibilityservice.IAccessibilityServiceClient r1;
        java.lang.Object r2, $r5;
        java.lang.Throwable r3, $r6;
        com.android.server.accessibility.AccessibilityManagerService $r4;
        android.os.RemoteException $r7, r15;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12;
        android.os.IBinder $r13;
        java.lang.String $r14;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r5 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$000(com.android.server.accessibility.AccessibilityManagerService)>($r4);

        r2 = $r5;

        entermonitor $r5;

     label1:
        r1 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.accessibilityservice.IAccessibilityServiceClient mServiceInterface>;

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        if r1 == null goto label9;

     label6:
        interfaceinvoke r1.<android.accessibilityservice.IAccessibilityServiceClient: void onGesture(int)>(i0);

     label7:
        goto label9;

     label8:
        $r7 := @caughtexception;

        r15 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error during sending gesture ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r13 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.os.IBinder mService>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AccessibilityManagerService", $r14, r15);

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
        catch android.os.RemoteException from label6 to label7 with label8;
    }

    private void notifyKeyEventInternal(android.view.KeyEvent, int)
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        android.view.KeyEvent r1;
        int i0;
        com.android.server.accessibility.AccessibilityManagerService$Service$KeyEventDispatcher $r2;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        r1 := @parameter0: android.view.KeyEvent;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService$Service$KeyEventDispatcher mKeyEventDispatcher>;

        virtualinvoke $r2.<com.android.server.accessibility.AccessibilityManagerService$Service$KeyEventDispatcher: void notifyKeyEvent(android.view.KeyEvent,int)>(r1, i0);

        return;
    }

    private void notifyClearAccessibilityCacheInternal()
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        android.accessibilityservice.IAccessibilityServiceClient r1;
        java.lang.Object r2, $r5;
        java.lang.Throwable r3, $r6;
        com.android.server.accessibility.AccessibilityManagerService $r4;
        android.os.RemoteException $r7, r8;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        $r4 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r5 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$000(com.android.server.accessibility.AccessibilityManagerService)>($r4);

        r2 = $r5;

        entermonitor $r5;

     label1:
        r1 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: android.accessibilityservice.IAccessibilityServiceClient mServiceInterface>;

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        if r1 == null goto label9;

     label6:
        interfaceinvoke r1.<android.accessibilityservice.IAccessibilityServiceClient: void clearAccessibilityCache()>();

     label7:
        goto label9;

     label8:
        $r7 := @caughtexception;

        r8 = $r7;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AccessibilityManagerService", "Error during requesting accessibility info cache to be cleared.", r8);

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
        catch android.os.RemoteException from label6 to label7 with label8;
    }

    private void sendDownAndUpKeyEvents(int)
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        int i0;
        long l1, l2, l3;
        android.view.KeyEvent r1, r2;
        android.hardware.input.InputManager $r3, $r4;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r1 = staticinvoke <android.view.KeyEvent: android.view.KeyEvent obtain(long,long,int,int,int,int,int,int,int,int,java.lang.String)>(l2, l2, 0, i0, 0, 0, -1, 0, 8, 257, null);

        $r3 = staticinvoke <android.hardware.input.InputManager: android.hardware.input.InputManager getInstance()>();

        virtualinvoke $r3.<android.hardware.input.InputManager: boolean injectInputEvent(android.view.InputEvent,int)>(r1, 0);

        virtualinvoke r1.<android.view.KeyEvent: void recycle()>();

        l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r2 = staticinvoke <android.view.KeyEvent: android.view.KeyEvent obtain(long,long,int,int,int,int,int,int,int,int,java.lang.String)>(l2, l3, 1, i0, 0, 0, -1, 0, 8, 257, null);

        $r4 = staticinvoke <android.hardware.input.InputManager: android.hardware.input.InputManager getInstance()>();

        virtualinvoke $r4.<android.hardware.input.InputManager: boolean injectInputEvent(android.view.InputEvent,int)>(r2, 0);

        virtualinvoke r2.<android.view.KeyEvent: void recycle()>();

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;
    }

    private void expandNotifications()
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        long l0;
        android.app.StatusBarManager r1;
        com.android.server.accessibility.AccessibilityManagerService $r2;
        android.content.Context $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r2 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r3 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.content.Context access$1600(com.android.server.accessibility.AccessibilityManagerService)>($r2);

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("statusbar");

        r1 = (android.app.StatusBarManager) $r4;

        virtualinvoke r1.<android.app.StatusBarManager: void expandNotificationsPanel()>();

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;
    }

    private void expandQuickSettings()
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        long l0;
        android.app.StatusBarManager r1;
        com.android.server.accessibility.AccessibilityManagerService $r2;
        android.content.Context $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r2 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r3 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.content.Context access$1600(com.android.server.accessibility.AccessibilityManagerService)>($r2);

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("statusbar");

        r1 = (android.app.StatusBarManager) $r4;

        virtualinvoke r1.<android.app.StatusBarManager: void expandSettingsPanel()>();

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;
    }

    private void openRecents()
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        long l0;
        com.android.internal.statusbar.IStatusBarService r1;
        android.os.IBinder $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("statusbar");

        r1 = staticinvoke <com.android.internal.statusbar.IStatusBarService$Stub: com.android.internal.statusbar.IStatusBarService asInterface(android.os.IBinder)>($r3);

     label1:
        interfaceinvoke r1.<com.android.internal.statusbar.IStatusBarService: void toggleRecentApps()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("AccessibilityManagerService", "Error toggling recent apps.");

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void showGlobalActions()
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        com.android.server.accessibility.AccessibilityManagerService $r1;
        android.view.WindowManagerInternal $r2;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        $r1 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r2 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.view.WindowManagerInternal access$3600(com.android.server.accessibility.AccessibilityManagerService)>($r1);

        virtualinvoke $r2.<android.view.WindowManagerInternal: void showGlobalActions()>();

        return;
    }

    private android.view.accessibility.IAccessibilityInteractionConnection getConnectionLocked(int)
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        int i0;
        com.android.server.accessibility.AccessibilityManagerService$AccessibilityConnectionWrapper r1;
        com.android.server.accessibility.AccessibilityManagerService $r2, $r7;
        android.util.SparseArray $r3, $r9;
        java.lang.Object $r4, $r10;
        android.view.accessibility.IAccessibilityInteractionConnection $r5, $r6;
        com.android.server.accessibility.AccessibilityManagerService$UserState $r8;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r3 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: android.util.SparseArray access$3700(com.android.server.accessibility.AccessibilityManagerService)>($r2);

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.accessibility.AccessibilityManagerService$AccessibilityConnectionWrapper) $r4;

        if r1 != null goto label1;

        $r7 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r8 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$UserState access$200(com.android.server.accessibility.AccessibilityManagerService)>($r7);

        $r9 = $r8.<com.android.server.accessibility.AccessibilityManagerService$UserState: android.util.SparseArray mInteractionConnections>;

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.accessibility.AccessibilityManagerService$AccessibilityConnectionWrapper) $r10;

     label1:
        if r1 == null goto label2;

        $r5 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService$AccessibilityConnectionWrapper: android.view.accessibility.IAccessibilityInteractionConnection access$3800(com.android.server.accessibility.AccessibilityManagerService$AccessibilityConnectionWrapper)>(r1);

        if $r5 == null goto label2;

        $r6 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService$AccessibilityConnectionWrapper: android.view.accessibility.IAccessibilityInteractionConnection access$3800(com.android.server.accessibility.AccessibilityManagerService$AccessibilityConnectionWrapper)>(r1);

        return $r6;

     label2:
        return null;
    }

    private int resolveAccessibilityWindowIdLocked(int)
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        int i0, $i1;
        com.android.server.accessibility.AccessibilityManagerService $r1;
        com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy $r2;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        i0 := @parameter0: int;

        if i0 != 2147483647 goto label1;

        $r1 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r2 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r1);

        $i1 = virtualinvoke $r2.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: int getActiveWindowId()>();

        return $i1;

     label1:
        return i0;
    }

    private int resolveAccessibilityWindowIdForFindFocusLocked(int, int)
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        int i0, i1, $i2, $i3, $i4;
        com.android.server.accessibility.AccessibilityManagerService $r1, $r3, $r5;
        com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy $r2, $r4, $r6;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != 2147483647 goto label1;

        $r5 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r6 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r5);

        $i4 = $r6.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: int mActiveWindowId>;

        return $i4;

     label1:
        if i0 != -2 goto label3;

        if i1 != 1 goto label2;

        $r3 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r4 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r3);

        $i3 = $r4.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: int mFocusedWindowId>;

        return $i3;

     label2:
        if i1 != 2 goto label3;

        $r1 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r2 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r1);

        $i2 = $r2.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: int mAccessibilityFocusedWindowId>;

        return $i2;

     label3:
        return i0;
    }

    static void access$2700(com.android.server.accessibility.AccessibilityManagerService$Service, int)
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        int i0;

        r0 := @parameter0: com.android.server.accessibility.AccessibilityManagerService$Service;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: void notifyAccessibilityEventInternal(int)>(i0);

        return;
    }

    static void access$3900(com.android.server.accessibility.AccessibilityManagerService$Service, int)
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        int i0;

        r0 := @parameter0: com.android.server.accessibility.AccessibilityManagerService$Service;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: void notifyGestureInternal(int)>(i0);

        return;
    }

    static void access$4000(com.android.server.accessibility.AccessibilityManagerService$Service, android.view.KeyEvent, int)
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;
        android.view.KeyEvent r1;
        int i0;

        r0 := @parameter0: com.android.server.accessibility.AccessibilityManagerService$Service;

        r1 := @parameter1: android.view.KeyEvent;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: void notifyKeyEventInternal(android.view.KeyEvent,int)>(r1, i0);

        return;
    }

    static void access$4100(com.android.server.accessibility.AccessibilityManagerService$Service)
    {
        com.android.server.accessibility.AccessibilityManagerService$Service r0;

        r0 := @parameter0: com.android.server.accessibility.AccessibilityManagerService$Service;

        specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$Service: void notifyClearAccessibilityCacheInternal()>();

        return;
    }
}
