public class com.android.server.SystemConfig extends java.lang.Object
{
    static final java.lang.String TAG;
    static com.android.server.SystemConfig sInstance;
    int[] mGlobalGids;
    final android.util.SparseArray mSystemPermissions;
    final android.util.ArrayMap mSharedLibraries;
    final java.util.HashMap mAvailableFeatures;
    final android.util.ArrayMap mPermissions;
    final android.util.ArraySet mAllowInPowerSave;
    final android.util.ArraySet mFixedImeApps;

    public static com.android.server.SystemConfig getInstance()
    {
        java.lang.Class r0;
        java.lang.Throwable r1, $r5;
        com.android.server.SystemConfig $r2, $r3, $r4;

        r0 = class "com/android/server/SystemConfig";

        entermonitor class "com/android/server/SystemConfig";

     label1:
        $r2 = <com.android.server.SystemConfig: com.android.server.SystemConfig sInstance>;

        if $r2 != null goto label2;

        $r4 = new com.android.server.SystemConfig;

        specialinvoke $r4.<com.android.server.SystemConfig: void <init>()>();

        <com.android.server.SystemConfig: com.android.server.SystemConfig sInstance> = $r4;

     label2:
        $r3 = <com.android.server.SystemConfig: com.android.server.SystemConfig sInstance>;

        exitmonitor r0;

     label3:
        return $r3;

     label4:
        $r5 := @caughtexception;

        r1 = $r5;

        exitmonitor r0;

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int[] getGlobalGids()
    {
        com.android.server.SystemConfig r0;
        int[] $r1;

        r0 := @this: com.android.server.SystemConfig;

        $r1 = r0.<com.android.server.SystemConfig: int[] mGlobalGids>;

        return $r1;
    }

    public android.util.SparseArray getSystemPermissions()
    {
        com.android.server.SystemConfig r0;
        android.util.SparseArray $r1;

        r0 := @this: com.android.server.SystemConfig;

        $r1 = r0.<com.android.server.SystemConfig: android.util.SparseArray mSystemPermissions>;

        return $r1;
    }

    public android.util.ArrayMap getSharedLibraries()
    {
        com.android.server.SystemConfig r0;
        android.util.ArrayMap $r1;

        r0 := @this: com.android.server.SystemConfig;

        $r1 = r0.<com.android.server.SystemConfig: android.util.ArrayMap mSharedLibraries>;

        return $r1;
    }

    public java.util.HashMap getAvailableFeatures()
    {
        com.android.server.SystemConfig r0;
        java.util.HashMap $r1;

        r0 := @this: com.android.server.SystemConfig;

        $r1 = r0.<com.android.server.SystemConfig: java.util.HashMap mAvailableFeatures>;

        return $r1;
    }

    public android.util.ArrayMap getPermissions()
    {
        com.android.server.SystemConfig r0;
        android.util.ArrayMap $r1;

        r0 := @this: com.android.server.SystemConfig;

        $r1 = r0.<com.android.server.SystemConfig: android.util.ArrayMap mPermissions>;

        return $r1;
    }

    public android.util.ArraySet getAllowInPowerSave()
    {
        com.android.server.SystemConfig r0;
        android.util.ArraySet $r1;

        r0 := @this: com.android.server.SystemConfig;

        $r1 = r0.<com.android.server.SystemConfig: android.util.ArraySet mAllowInPowerSave>;

        return $r1;
    }

    public android.util.ArraySet getFixedImeApps()
    {
        com.android.server.SystemConfig r0;
        android.util.ArraySet $r1;

        r0 := @this: com.android.server.SystemConfig;

        $r1 = r0.<com.android.server.SystemConfig: android.util.ArraySet mFixedImeApps>;

        return $r1;
    }

    void <init>()
    {
        com.android.server.SystemConfig r0;
        android.util.SparseArray $r1;
        android.util.ArrayMap $r2, $r4;
        java.util.HashMap $r3;
        android.util.ArraySet $r5, $r6;
        java.io.File $r7, $r9, $r10, $r12, $r13, $r15, $r17, $r18;
        java.lang.String[] $r8, $r11, $r14, $r16;

        r0 := @this: com.android.server.SystemConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.SparseArray;

        specialinvoke $r1.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.SystemConfig: android.util.SparseArray mSystemPermissions> = $r1;

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.SystemConfig: android.util.ArrayMap mSharedLibraries> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.SystemConfig: java.util.HashMap mAvailableFeatures> = $r3;

        $r4 = new android.util.ArrayMap;

        specialinvoke $r4.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.SystemConfig: android.util.ArrayMap mPermissions> = $r4;

        $r5 = new android.util.ArraySet;

        specialinvoke $r5.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.SystemConfig: android.util.ArraySet mAllowInPowerSave> = $r5;

        $r6 = new android.util.ArraySet;

        specialinvoke $r6.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.SystemConfig: android.util.ArraySet mFixedImeApps> = $r6;

        $r7 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        $r8 = newarray (java.lang.String)[2];

        $r8[0] = "etc";

        $r8[1] = "sysconfig";

        $r9 = staticinvoke <android.os.Environment: java.io.File buildPath(java.io.File,java.lang.String[])>($r7, $r8);

        virtualinvoke r0.<com.android.server.SystemConfig: void readPermissions(java.io.File,boolean)>($r9, 0);

        $r10 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        $r11 = newarray (java.lang.String)[2];

        $r11[0] = "etc";

        $r11[1] = "permissions";

        $r12 = staticinvoke <android.os.Environment: java.io.File buildPath(java.io.File,java.lang.String[])>($r10, $r11);

        virtualinvoke r0.<com.android.server.SystemConfig: void readPermissions(java.io.File,boolean)>($r12, 0);

        $r13 = staticinvoke <android.os.Environment: java.io.File getOemDirectory()>();

        $r14 = newarray (java.lang.String)[2];

        $r14[0] = "etc";

        $r14[1] = "sysconfig";

        $r15 = staticinvoke <android.os.Environment: java.io.File buildPath(java.io.File,java.lang.String[])>($r13, $r14);

        virtualinvoke r0.<com.android.server.SystemConfig: void readPermissions(java.io.File,boolean)>($r15, 1);

        $r17 = staticinvoke <android.os.Environment: java.io.File getOemDirectory()>();

        $r16 = newarray (java.lang.String)[2];

        $r16[0] = "etc";

        $r16[1] = "permissions";

        $r18 = staticinvoke <android.os.Environment: java.io.File buildPath(java.io.File,java.lang.String[])>($r17, $r16);

        virtualinvoke r0.<com.android.server.SystemConfig: void readPermissions(java.io.File,boolean)>($r18, 1);

        return;
    }

    void readPermissions(java.io.File, boolean)
    {
        com.android.server.SystemConfig r0;
        java.io.File r1, r3, $r9, $r10, r30;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.io.File[] r2;
        int i0, i1;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r28, $r29;
        java.lang.String $r8, $r11, $r12, $r17, $r22, $r27;

        r0 := @this: com.android.server.SystemConfig;

        r1 := @parameter0: java.io.File;

        z0 := @parameter1: boolean;

        $z1 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label01;

        $z2 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z2 != 0 goto label03;

     label01:
        if z0 != 0 goto label02;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No directory ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", skipping");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SystemConfig", $r8);

     label02:
        return;

     label03:
        $z3 = virtualinvoke r1.<java.io.File: boolean canRead()>();

        if $z3 != 0 goto label04;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Directory ");

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be read");

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SystemConfig", $r27);

        return;

     label04:
        r2 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>();

        i0 = lengthof r2;

        i1 = 0;

     label05:
        if i1 >= i0 goto label10;

        r3 = r2[i1];

        $r11 = virtualinvoke r3.<java.io.File: java.lang.String getPath()>();

        $z4 = virtualinvoke $r11.<java.lang.String: boolean endsWith(java.lang.String)>("etc/permissions/platform.xml");

        if $z4 == 0 goto label06;

        goto label09;

     label06:
        $r12 = virtualinvoke r3.<java.io.File: java.lang.String getPath()>();

        $z5 = virtualinvoke $r12.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z5 != 0 goto label07;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non-xml file ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r21 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" directory, ignoring");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemConfig", $r22);

        goto label09;

     label07:
        $z6 = virtualinvoke r3.<java.io.File: boolean canRead()>();

        if $z6 != 0 goto label08;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permissions library file ");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be read");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SystemConfig", $r17);

        goto label09;

     label08:
        specialinvoke r0.<com.android.server.SystemConfig: void readPermissionsFromXml(java.io.File,boolean)>(r3, z0);

     label09:
        i1 = i1 + 1;

        goto label05;

     label10:
        $r10 = new java.io.File;

        $r9 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, "etc/permissions/platform.xml");

        r30 = $r10;

        specialinvoke r0.<com.android.server.SystemConfig: void readPermissionsFromXml(java.io.File,boolean)>(r30, z0);

        return;
    }

    private void readPermissionsFromXml(java.io.File, boolean)
    {
        com.android.server.SystemConfig r0;
        java.io.File r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        int i0, i1, i2, $i3, $i4;
        java.lang.String r2, r3, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r16, $r20, $r23, $r25, $r28, $r31, $r34, $r39, $r41, $r42, $r48, $r53, $r58, $r60, $r62, $r64, $r66, $r70, $r73, $r77, $r78, $r82, $r84, $r91, r95, r96, r97, r98, r99, r100, r101, r102, r104, r105;
        java.util.HashSet r4, $r51;
        java.io.FileReader $r5, r93;
        java.lang.StringBuilder $r14, $r17, $r18, $r21, $r22, $r24, $r29, $r30, $r32, $r33, $r35, $r37, $r38, $r40, $r43, $r46, $r47, $r49, $r52, $r54, $r55, $r56, $r57, $r59, $r61, $r63, $r65, $r67, $r68, $r69, $r71, $r72, $r74, $r75, $r76, $r79, $r88, $r89, $r90;
        android.util.ArraySet $r15, $r19;
        java.util.HashMap $r26;
        android.content.pm.FeatureInfo $r27, r103;
        android.util.ArrayMap $r36;
        android.util.SparseArray $r44, $r50;
        java.lang.Object $r45;
        java.io.FileNotFoundException $r80;
        org.xmlpull.v1.XmlPullParserException $r81, $r86, $r92, r106;
        int[] $r83, $r85;
        java.io.IOException $r87, r107;
        org.xmlpull.v1.XmlPullParser r94;

        r0 := @this: com.android.server.SystemConfig;

        r1 := @parameter0: java.io.File;

        z0 := @parameter1: boolean;

     label01:
        $r5 = new java.io.FileReader;

        specialinvoke $r5.<java.io.FileReader: void <init>(java.io.File)>(r1);

        r93 = $r5;

     label02:
        goto label04;

     label03:
        $r80 := @caughtexception;

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find or open permissions file ");

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SystemConfig", $r91);

        return;

     label04:
        r94 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r94.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>(r93);

     label05:
        $i3 = interfaceinvoke r94.<org.xmlpull.v1.XmlPullParser: int next()>();

        i0 = $i3;

        if $i3 == 2 goto label06;

        if i0 == 1 goto label06;

        goto label05;

     label06:
        if i0 == 2 goto label07;

        $r81 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r81.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("No start tag found");

        throw $r81;

     label07:
        $r6 = interfaceinvoke r94.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("permissions");

        if $z1 != 0 goto label08;

        $r84 = interfaceinvoke r94.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z9 = virtualinvoke $r84.<java.lang.String: boolean equals(java.lang.Object)>("config");

        if $z9 != 0 goto label08;

        $r86 = new org.xmlpull.v1.XmlPullParserException;

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $r74 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected start tag: found ");

        $r77 = interfaceinvoke r94.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r76 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        $r79 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expected \'permissions\' or \'config\'");

        $r78 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r86.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r78);

        throw $r86;

     label08:
        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>(r94);

        $i4 = interfaceinvoke r94.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i4 != 1 goto label09;

        goto label34;

     label09:
        r2 = interfaceinvoke r94.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = "group";

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label12;

        if z0 != 0 goto label12;

        r3 = interfaceinvoke r94.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "gid");

        if r3 == null goto label10;

        i1 = staticinvoke <android.os.Process: int getGidForName(java.lang.String)>(r3);

        $r83 = r0.<com.android.server.SystemConfig: int[] mGlobalGids>;

        $r85 = staticinvoke <com.android.internal.util.ArrayUtils: int[] appendInt(int[],int)>($r83, i1);

        r0.<com.android.server.SystemConfig: int[] mGlobalGids> = $r85;

        goto label11;

     label10:
        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<group> without gid at ");

        $r70 = interfaceinvoke r94.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r69 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);

        $r82 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SystemConfig", $r82);

     label11:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r94);

        goto label08;

     label12:
        $r8 = "permission";

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label14;

        if z0 != 0 goto label14;

        r95 = interfaceinvoke r94.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        if r95 != null goto label13;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<permission> without name at ");

        $r66 = interfaceinvoke r94.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r65 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r73 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SystemConfig", $r73);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r94);

        goto label08;

     label13:
        r96 = virtualinvoke r95.<java.lang.String: java.lang.String intern()>();

        virtualinvoke r0.<com.android.server.SystemConfig: void readPermission(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r94, r96);

        goto label33;

     label14:
        $r9 = "assign-permission";

        $z4 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z4 == 0 goto label19;

        if z0 != 0 goto label19;

        r97 = interfaceinvoke r94.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        if r97 != null goto label15;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<assign-permission> without name at ");

        $r62 = interfaceinvoke r94.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r59 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SystemConfig", $r60);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r94);

        goto label08;

     label15:
        r98 = interfaceinvoke r94.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "uid");

        if r98 != null goto label16;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<assign-permission> without uid at ");

        $r53 = interfaceinvoke r94.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r54 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        $r64 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SystemConfig", $r64);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r94);

        goto label08;

     label16:
        i2 = staticinvoke <android.os.Process: int getUidForName(java.lang.String)>(r98);

        if i2 >= 0 goto label17;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<assign-permission> with unknown uid \"");

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r98);

        $r49 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" at ");

        $r48 = interfaceinvoke r94.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r57 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SystemConfig", $r58);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r94);

        goto label08;

     label17:
        r99 = virtualinvoke r97.<java.lang.String: java.lang.String intern()>();

        $r44 = r0.<com.android.server.SystemConfig: android.util.SparseArray mSystemPermissions>;

        $r45 = virtualinvoke $r44.<android.util.SparseArray: java.lang.Object get(int)>(i2);

        r4 = (java.util.HashSet) $r45;

        if r4 != null goto label18;

        $r51 = new java.util.HashSet;

        specialinvoke $r51.<java.util.HashSet: void <init>()>();

        r4 = $r51;

        $r50 = r0.<com.android.server.SystemConfig: android.util.SparseArray mSystemPermissions>;

        virtualinvoke $r50.<android.util.SparseArray: void put(int,java.lang.Object)>(i2, r4);

     label18:
        virtualinvoke r4.<java.util.HashSet: boolean add(java.lang.Object)>(r99);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r94);

        goto label33;

     label19:
        $r10 = "library";

        $z5 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z5 == 0 goto label23;

        if z0 != 0 goto label23;

        r100 = interfaceinvoke r94.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        r101 = interfaceinvoke r94.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "file");

        if r100 != null goto label20;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<library> without name at ");

        $r39 = interfaceinvoke r94.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SystemConfig", $r41);

        goto label22;

     label20:
        if r101 != null goto label21;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<library> without file at ");

        $r34 = interfaceinvoke r94.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r42 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SystemConfig", $r42);

        goto label22;

     label21:
        $r36 = r0.<com.android.server.SystemConfig: android.util.ArrayMap mSharedLibraries>;

        virtualinvoke $r36.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r100, r101);

     label22:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r94);

        goto label08;

     label23:
        $r11 = "feature";

        $z6 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z6 == 0 goto label26;

        r102 = interfaceinvoke r94.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        if r102 != null goto label24;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<feature> without name at ");

        $r28 = interfaceinvoke r94.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SystemConfig", $r31);

        goto label25;

     label24:
        $r27 = new android.content.pm.FeatureInfo;

        specialinvoke $r27.<android.content.pm.FeatureInfo: void <init>()>();

        r103 = $r27;

        r103.<android.content.pm.FeatureInfo: java.lang.String name> = r102;

        $r26 = r0.<com.android.server.SystemConfig: java.util.HashMap mAvailableFeatures>;

        virtualinvoke $r26.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r102, r103);

     label25:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r94);

        goto label08;

     label26:
        $r12 = "allow-in-power-save";

        $z7 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z7 == 0 goto label29;

        r104 = interfaceinvoke r94.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "package");

        if r104 != null goto label27;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<allow-in-power-save> without package at ");

        $r25 = interfaceinvoke r94.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SystemConfig", $r23);

        goto label28;

     label27:
        $r19 = r0.<com.android.server.SystemConfig: android.util.ArraySet mAllowInPowerSave>;

        virtualinvoke $r19.<android.util.ArraySet: boolean add(java.lang.Object)>(r104);

     label28:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r94);

        goto label08;

     label29:
        $r13 = "fixed-ime-app";

        $z8 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z8 == 0 goto label32;

        r105 = interfaceinvoke r94.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "package");

        if r105 != null goto label30;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<fixed-ime-app> without package at ");

        $r16 = interfaceinvoke r94.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SystemConfig", $r20);

        goto label31;

     label30:
        $r15 = r0.<com.android.server.SystemConfig: android.util.ArraySet mFixedImeApps>;

        virtualinvoke $r15.<android.util.ArraySet: boolean add(java.lang.Object)>(r105);

     label31:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r94);

        goto label08;

     label32:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r94);

        goto label08;

     label33:
        goto label08;

     label34:
        virtualinvoke r93.<java.io.FileReader: void close()>();

     label35:
        goto label38;

     label36:
        $r92 := @caughtexception;

        r106 = $r92;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SystemConfig", "Got execption parsing permissions.", r106);

        goto label38;

     label37:
        $r87 := @caughtexception;

        r107 = $r87;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("SystemConfig", "Got execption parsing permissions.", r107);

     label38:
        return;

        catch java.io.FileNotFoundException from label01 to label02 with label03;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label35 with label36;
        catch java.io.IOException from label04 to label35 with label37;
    }

    void readPermission(org.xmlpull.v1.XmlPullParser, java.lang.String) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.SystemConfig r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r4, r5, $r8, $r10, $r12, r19;
        com.android.server.SystemConfig$PermissionEntry r3, $r16;
        int i0, i1, i2, $i3, $i5;
        android.util.ArrayMap $r6, $r18;
        java.lang.Object $r7;
        boolean $z0;
        java.lang.StringBuilder $r9, $r11, $r13;
        int[] $r14, $r15;

        r0 := @this: com.android.server.SystemConfig;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        r19 = virtualinvoke r2.<java.lang.String: java.lang.String intern()>();

        $r6 = r0.<com.android.server.SystemConfig: android.util.ArrayMap mPermissions>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r19);

        r3 = (com.android.server.SystemConfig$PermissionEntry) $r7;

        if r3 != null goto label1;

        $r16 = new com.android.server.SystemConfig$PermissionEntry;

        specialinvoke $r16.<com.android.server.SystemConfig$PermissionEntry: void <init>(java.lang.String)>(r19);

        r3 = $r16;

        $r18 = r0.<com.android.server.SystemConfig: android.util.ArrayMap mPermissions>;

        virtualinvoke $r18.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r19, r3);

     label1:
        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label2:
        $i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i1 = $i3;

        if $i3 == 1 goto label7;

        if i1 != 3 goto label3;

        $i5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i5 <= i0 goto label7;

     label3:
        if i1 == 3 goto label2;

        if i1 != 4 goto label4;

        goto label2;

     label4:
        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r8 = "group";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label6;

        r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "gid");

        if r5 == null goto label5;

        i2 = staticinvoke <android.os.Process: int getGidForName(java.lang.String)>(r5);

        $r15 = r3.<com.android.server.SystemConfig$PermissionEntry: int[] gids>;

        $r14 = staticinvoke <com.android.internal.util.ArrayUtils: int[] appendInt(int[],int)>($r15, i2);

        r3.<com.android.server.SystemConfig$PermissionEntry: int[] gids> = $r14;

        goto label6;

     label5:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<group> without gid at ");

        $r10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SystemConfig", $r12);

     label6:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label2;

     label7:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.SystemConfig: java.lang.String TAG> = "SystemConfig";

        return;
    }
}
