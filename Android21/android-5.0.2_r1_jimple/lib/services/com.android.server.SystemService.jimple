public abstract class com.android.server.SystemService extends java.lang.Object
{
    public static final int PHASE_WAIT_FOR_DEFAULT_DISPLAY;
    public static final int PHASE_LOCK_SETTINGS_READY;
    public static final int PHASE_SYSTEM_SERVICES_READY;
    public static final int PHASE_ACTIVITY_MANAGER_READY;
    public static final int PHASE_THIRD_PARTY_APPS_CAN_START;
    public static final int PHASE_BOOT_COMPLETED;
    private final android.content.Context mContext;

    public void <init>(android.content.Context)
    {
        com.android.server.SystemService r0;
        android.content.Context r1;

        r0 := @this: com.android.server.SystemService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.SystemService: android.content.Context mContext> = r1;

        return;
    }

    public final android.content.Context getContext()
    {
        com.android.server.SystemService r0;
        android.content.Context $r1;

        r0 := @this: com.android.server.SystemService;

        $r1 = r0.<com.android.server.SystemService: android.content.Context mContext>;

        return $r1;
    }

    public final boolean isSafeMode()
    {
        com.android.server.SystemService r0;
        com.android.server.SystemServiceManager $r1;
        boolean $z0;

        r0 := @this: com.android.server.SystemService;

        $r1 = specialinvoke r0.<com.android.server.SystemService: com.android.server.SystemServiceManager getManager()>();

        $z0 = virtualinvoke $r1.<com.android.server.SystemServiceManager: boolean isSafeMode()>();

        return $z0;
    }

    public abstract void onStart();

    public void onBootPhase(int)
    {
        com.android.server.SystemService r0;
        int i0;

        r0 := @this: com.android.server.SystemService;

        i0 := @parameter0: int;

        return;
    }

    public void onStartUser(int)
    {
        com.android.server.SystemService r0;
        int i0;

        r0 := @this: com.android.server.SystemService;

        i0 := @parameter0: int;

        return;
    }

    public void onSwitchUser(int)
    {
        com.android.server.SystemService r0;
        int i0;

        r0 := @this: com.android.server.SystemService;

        i0 := @parameter0: int;

        return;
    }

    public void onStopUser(int)
    {
        com.android.server.SystemService r0;
        int i0;

        r0 := @this: com.android.server.SystemService;

        i0 := @parameter0: int;

        return;
    }

    public void onCleanupUser(int)
    {
        com.android.server.SystemService r0;
        int i0;

        r0 := @this: com.android.server.SystemService;

        i0 := @parameter0: int;

        return;
    }

    protected final void publishBinderService(java.lang.String, android.os.IBinder)
    {
        com.android.server.SystemService r0;
        java.lang.String r1;
        android.os.IBinder r2;

        r0 := @this: com.android.server.SystemService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.IBinder;

        virtualinvoke r0.<com.android.server.SystemService: void publishBinderService(java.lang.String,android.os.IBinder,boolean)>(r1, r2, 0);

        return;
    }

    protected final void publishBinderService(java.lang.String, android.os.IBinder, boolean)
    {
        com.android.server.SystemService r0;
        java.lang.String r1;
        android.os.IBinder r2;
        boolean z0;

        r0 := @this: com.android.server.SystemService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.IBinder;

        z0 := @parameter2: boolean;

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder,boolean)>(r1, r2, z0);

        return;
    }

    protected final android.os.IBinder getBinderService(java.lang.String)
    {
        com.android.server.SystemService r0;
        java.lang.String r1;
        android.os.IBinder $r2;

        r0 := @this: com.android.server.SystemService;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>(r1);

        return $r2;
    }

    protected final void publishLocalService(java.lang.Class, java.lang.Object)
    {
        com.android.server.SystemService r0;
        java.lang.Class r1;
        java.lang.Object r2;

        r0 := @this: com.android.server.SystemService;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Object;

        staticinvoke <com.android.server.LocalServices: void addService(java.lang.Class,java.lang.Object)>(r1, r2);

        return;
    }

    protected final java.lang.Object getLocalService(java.lang.Class)
    {
        com.android.server.SystemService r0;
        java.lang.Class r1;
        java.lang.Object $r2;

        r0 := @this: com.android.server.SystemService;

        r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(r1);

        return $r2;
    }

    private com.android.server.SystemServiceManager getManager()
    {
        com.android.server.SystemService r0;
        java.lang.Object $r1;
        com.android.server.SystemServiceManager $r2;

        r0 := @this: com.android.server.SystemService;

        $r1 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "com/android/server/SystemServiceManager");

        $r2 = (com.android.server.SystemServiceManager) $r1;

        return $r2;
    }

    public static void <clinit>()
    {
        <com.android.server.SystemService: int PHASE_BOOT_COMPLETED> = 1000;

        <com.android.server.SystemService: int PHASE_THIRD_PARTY_APPS_CAN_START> = 600;

        <com.android.server.SystemService: int PHASE_ACTIVITY_MANAGER_READY> = 550;

        <com.android.server.SystemService: int PHASE_SYSTEM_SERVICES_READY> = 500;

        <com.android.server.SystemService: int PHASE_LOCK_SETTINGS_READY> = 480;

        <com.android.server.SystemService: int PHASE_WAIT_FOR_DEFAULT_DISPLAY> = 100;

        return;
    }
}
