public class com.android.server.wm.DisplaySettings extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final android.util.AtomicFile mFile;
    private final java.util.HashMap mEntries;

    public void <init>(android.content.Context)
    {
        com.android.server.wm.DisplaySettings r0;
        android.content.Context r1;
        java.io.File r2, r3, $r5, $r7;
        java.util.HashMap $r4;
        android.util.AtomicFile $r6;

        r0 := @this: com.android.server.wm.DisplaySettings;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.wm.DisplaySettings: java.util.HashMap mEntries> = $r4;

        r0.<com.android.server.wm.DisplaySettings: android.content.Context mContext> = r1;

        r2 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, "system");

        r3 = $r5;

        $r6 = new android.util.AtomicFile;

        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, "display_settings.xml");

        specialinvoke $r6.<android.util.AtomicFile: void <init>(java.io.File)>($r7);

        r0.<com.android.server.wm.DisplaySettings: android.util.AtomicFile mFile> = $r6;

        return;
    }

    public void getOverscanLocked(java.lang.String, android.graphics.Rect)
    {
        com.android.server.wm.DisplaySettings r0;
        java.lang.String r1;
        android.graphics.Rect r2;
        com.android.server.wm.DisplaySettings$Entry r3;
        java.util.HashMap $r4;
        java.lang.Object $r5;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.wm.DisplaySettings;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.graphics.Rect;

        $r4 = r0.<com.android.server.wm.DisplaySettings: java.util.HashMap mEntries>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.android.server.wm.DisplaySettings$Entry) $r5;

        if r3 == null goto label1;

        $i0 = r3.<com.android.server.wm.DisplaySettings$Entry: int overscanLeft>;

        r2.<android.graphics.Rect: int left> = $i0;

        $i1 = r3.<com.android.server.wm.DisplaySettings$Entry: int overscanTop>;

        r2.<android.graphics.Rect: int top> = $i1;

        $i2 = r3.<com.android.server.wm.DisplaySettings$Entry: int overscanRight>;

        r2.<android.graphics.Rect: int right> = $i2;

        $i3 = r3.<com.android.server.wm.DisplaySettings$Entry: int overscanBottom>;

        r2.<android.graphics.Rect: int bottom> = $i3;

        goto label2;

     label1:
        virtualinvoke r2.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

     label2:
        return;
    }

    public void setOverscanLocked(java.lang.String, int, int, int, int)
    {
        com.android.server.wm.DisplaySettings r0;
        java.lang.String r1;
        int i0, i1, i2, i3;
        com.android.server.wm.DisplaySettings$Entry r2, $r5;
        java.util.HashMap $r3, $r6, $r8;
        java.lang.Object $r4;

        r0 := @this: com.android.server.wm.DisplaySettings;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        if i0 != 0 goto label1;

        if i1 != 0 goto label1;

        if i2 != 0 goto label1;

        if i3 != 0 goto label1;

        $r8 = r0.<com.android.server.wm.DisplaySettings: java.util.HashMap mEntries>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        return;

     label1:
        $r3 = r0.<com.android.server.wm.DisplaySettings: java.util.HashMap mEntries>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.wm.DisplaySettings$Entry) $r4;

        if r2 != null goto label2;

        $r5 = new com.android.server.wm.DisplaySettings$Entry;

        specialinvoke $r5.<com.android.server.wm.DisplaySettings$Entry: void <init>(java.lang.String)>(r1);

        r2 = $r5;

        $r6 = r0.<com.android.server.wm.DisplaySettings: java.util.HashMap mEntries>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

     label2:
        r2.<com.android.server.wm.DisplaySettings$Entry: int overscanLeft> = i0;

        r2.<com.android.server.wm.DisplaySettings$Entry: int overscanTop> = i1;

        r2.<com.android.server.wm.DisplaySettings$Entry: int overscanRight> = i2;

        r2.<com.android.server.wm.DisplaySettings$Entry: int overscanBottom> = i3;

        return;
    }

    public void readSettingsLocked()
    {
        com.android.server.wm.DisplaySettings r0;
        java.io.FileInputStream r1;
        org.xmlpull.v1.XmlPullParser r3;
        int i0, i1, $i2, $i3, $i4, i13;
        java.lang.String r4, $r10, $r12, $r21, $r27, $r32, $r41, $r46, $r52, $r68;
        java.lang.Throwable r5, $r62;
        android.util.AtomicFile $r7, $r39;
        java.util.HashMap $r8, $r19, $r31, $r37, $r53, $r60, $r61, $r64;
        boolean $z0, z1, z2;
        java.lang.StringBuilder $r9, $r11, $r13, $r16, $r17, $r18, $r23, $r26, $r28, $r30, $r33, $r34, $r35, $r40, $r42, $r43, $r44, $r45, $r49, $r50, $r51, $r56, $r59, $r66, $r67;
        java.lang.IllegalStateException $r14, $r15, r70;
        java.io.IOException $r20, $r22, $r24, $r25, $r47, $r54, $r58, $r63, $r65, r78;
        java.lang.IndexOutOfBoundsException $r29, r80;
        java.io.FileNotFoundException $r36;
        java.io.File $r38;
        org.xmlpull.v1.XmlPullParserException $r48, r76;
        java.lang.NumberFormatException $r55, r74;
        java.lang.NullPointerException $r57, r72;

        r0 := @this: com.android.server.wm.DisplaySettings;

     label01:
        $r7 = r0.<com.android.server.wm.DisplaySettings: android.util.AtomicFile mFile>;

        r1 = virtualinvoke $r7.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label02:
        goto label04;

     label03:
        $r36 := @caughtexception;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No existing display settings ");

        $r39 = r0.<com.android.server.wm.DisplaySettings: android.util.AtomicFile mFile>;

        $r38 = virtualinvoke $r39.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; starting empty");

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WindowManager", $r41);

        return;

     label04:
        z1 = 0;

     label05:
        r3 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r1, null);

     label06:
        $i2 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: int next()>();

        i0 = $i2;

        if $i2 == 2 goto label07;

        if i0 == 1 goto label07;

        goto label06;

     label07:
        if i0 == 2 goto label08;

        $r15 = new java.lang.IllegalStateException;

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>("no start tag found");

        throw $r15;

     label08:
        i1 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label09:
        $i3 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: int next()>();

        i13 = $i3;

        if $i3 == 1 goto label14;

        if i13 != 3 goto label10;

        $i4 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 <= i1 goto label14;

     label10:
        if i13 == 3 goto label09;

        if i13 != 4 goto label11;

        goto label09;

     label11:
        r4 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("display");

        if $z0 == 0 goto label12;

        specialinvoke r0.<com.android.server.wm.DisplaySettings: void readDisplay(org.xmlpull.v1.XmlPullParser)>(r3);

        goto label13;

     label12:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <display-settings>: ");

        $r10 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r12);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r3);

     label13:
        goto label09;

     label14:
        z2 = 1;

     label15:
        if z2 != 0 goto label16;

        $r8 = r0.<com.android.server.wm.DisplaySettings: java.util.HashMap mEntries>;

        virtualinvoke $r8.<java.util.HashMap: void clear()>();

     label16:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label17:
        goto label55;

     label18:
        $r54 := @caughtexception;

        goto label55;

     label19:
        $r14 := @caughtexception;

        r70 = $r14;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r70);

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r21);

     label20:
        if z1 != 0 goto label21;

        $r19 = r0.<com.android.server.wm.DisplaySettings: java.util.HashMap mEntries>;

        virtualinvoke $r19.<java.util.HashMap: void clear()>();

     label21:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label22:
        goto label55;

     label23:
        $r20 := @caughtexception;

        goto label55;

     label24:
        $r57 := @caughtexception;

        r72 = $r57;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r72);

        $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r68);

     label25:
        if z1 != 0 goto label26;

        $r64 = r0.<com.android.server.wm.DisplaySettings: java.util.HashMap mEntries>;

        virtualinvoke $r64.<java.util.HashMap: void clear()>();

     label26:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label27:
        goto label55;

     label28:
        $r47 := @caughtexception;

        goto label55;

     label29:
        $r55 := @caughtexception;

        r74 = $r55;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r74);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r52);

     label30:
        if z1 != 0 goto label31;

        $r60 = r0.<com.android.server.wm.DisplaySettings: java.util.HashMap mEntries>;

        virtualinvoke $r60.<java.util.HashMap: void clear()>();

     label31:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label32:
        goto label55;

     label33:
        $r58 := @caughtexception;

        goto label55;

     label34:
        $r48 := @caughtexception;

        r76 = $r48;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r76);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r46);

     label35:
        if z1 != 0 goto label36;

        $r53 = r0.<com.android.server.wm.DisplaySettings: java.util.HashMap mEntries>;

        virtualinvoke $r53.<java.util.HashMap: void clear()>();

     label36:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label37:
        goto label55;

     label38:
        $r24 := @caughtexception;

        goto label55;

     label39:
        $r22 := @caughtexception;

        r78 = $r22;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r78);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r27);

     label40:
        if z1 != 0 goto label41;

        $r31 = r0.<com.android.server.wm.DisplaySettings: java.util.HashMap mEntries>;

        virtualinvoke $r31.<java.util.HashMap: void clear()>();

     label41:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label42:
        goto label55;

     label43:
        $r63 := @caughtexception;

        goto label55;

     label44:
        $r29 := @caughtexception;

        r80 = $r29;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r80);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r32);

     label45:
        if z1 != 0 goto label46;

        $r37 = r0.<com.android.server.wm.DisplaySettings: java.util.HashMap mEntries>;

        virtualinvoke $r37.<java.util.HashMap: void clear()>();

     label46:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label47:
        goto label55;

     label48:
        $r65 := @caughtexception;

        goto label55;

     label49:
        $r62 := @caughtexception;

        r5 = $r62;

     label50:
        if z1 != 0 goto label51;

        $r61 = r0.<com.android.server.wm.DisplaySettings: java.util.HashMap mEntries>;

        virtualinvoke $r61.<java.util.HashMap: void clear()>();

     label51:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label52:
        goto label54;

     label53:
        $r25 := @caughtexception;

     label54:
        throw r5;

     label55:
        return;

        catch java.io.FileNotFoundException from label01 to label02 with label03;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.lang.IllegalStateException from label05 to label15 with label19;
        catch java.io.IOException from label21 to label22 with label23;
        catch java.lang.NullPointerException from label05 to label15 with label24;
        catch java.io.IOException from label26 to label27 with label28;
        catch java.lang.NumberFormatException from label05 to label15 with label29;
        catch java.io.IOException from label31 to label32 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label15 with label34;
        catch java.io.IOException from label36 to label37 with label38;
        catch java.io.IOException from label05 to label15 with label39;
        catch java.io.IOException from label41 to label42 with label43;
        catch java.lang.IndexOutOfBoundsException from label05 to label15 with label44;
        catch java.io.IOException from label46 to label47 with label48;
        catch java.lang.Throwable from label05 to label15 with label49;
        catch java.lang.Throwable from label19 to label20 with label49;
        catch java.lang.Throwable from label24 to label25 with label49;
        catch java.lang.Throwable from label29 to label30 with label49;
        catch java.lang.Throwable from label34 to label35 with label49;
        catch java.lang.Throwable from label39 to label40 with label49;
        catch java.lang.Throwable from label44 to label45 with label49;
        catch java.io.IOException from label51 to label52 with label53;
        catch java.lang.Throwable from label49 to label50 with label49;
    }

    private int getIntAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        com.android.server.wm.DisplaySettings r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3;
        int $i0;
        java.lang.NumberFormatException $r4;

        r0 := @this: com.android.server.wm.DisplaySettings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

     label1:
        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r2);

        if r3 == null goto label2;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        goto label3;

     label2:
        $i0 = 0;

     label3:
        return $i0;

     label4:
        $r4 := @caughtexception;

        return 0;

        catch java.lang.NumberFormatException from label1 to label3 with label4;
    }

    private void readDisplay(org.xmlpull.v1.XmlPullParser) throws java.lang.NumberFormatException, org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.wm.DisplaySettings r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2;
        com.android.server.wm.DisplaySettings$Entry r3, $r4;
        int $i0, $i1, $i2, $i3;
        java.util.HashMap $r5;

        r0 := @this: com.android.server.wm.DisplaySettings;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        if r2 == null goto label1;

        $r4 = new com.android.server.wm.DisplaySettings$Entry;

        specialinvoke $r4.<com.android.server.wm.DisplaySettings$Entry: void <init>(java.lang.String)>(r2);

        r3 = $r4;

        $i0 = specialinvoke r0.<com.android.server.wm.DisplaySettings: int getIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "overscanLeft");

        r3.<com.android.server.wm.DisplaySettings$Entry: int overscanLeft> = $i0;

        $i1 = specialinvoke r0.<com.android.server.wm.DisplaySettings: int getIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "overscanTop");

        r3.<com.android.server.wm.DisplaySettings$Entry: int overscanTop> = $i1;

        $i2 = specialinvoke r0.<com.android.server.wm.DisplaySettings: int getIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "overscanRight");

        r3.<com.android.server.wm.DisplaySettings$Entry: int overscanRight> = $i2;

        $i3 = specialinvoke r0.<com.android.server.wm.DisplaySettings: int getIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, "overscanBottom");

        r3.<com.android.server.wm.DisplaySettings$Entry: int overscanBottom> = $i3;

        $r5 = r0.<com.android.server.wm.DisplaySettings: java.util.HashMap mEntries>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

     label1:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        return;
    }

    public void writeSettingsLocked()
    {
        com.android.server.wm.DisplaySettings r0;
        java.io.FileOutputStream r1;
        java.io.IOException r2, $r24, $r32, r34;
        java.util.Iterator r3;
        com.android.server.wm.DisplaySettings$Entry r4;
        android.util.AtomicFile $r5, $r13, $r31;
        com.android.internal.util.FastXmlSerializer $r6, r33;
        java.lang.Boolean $r7;
        java.util.HashMap $r9;
        java.util.Collection $r10;
        boolean $z0;
        java.lang.Object $r12;
        java.lang.String $r14, $r18, $r20, $r22, $r26, $r28;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.StringBuilder $r25, $r29, $r30;

        r0 := @this: com.android.server.wm.DisplaySettings;

     label01:
        $r5 = r0.<com.android.server.wm.DisplaySettings: android.util.AtomicFile mFile>;

        r1 = virtualinvoke $r5.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label02:
        goto label04;

     label03:
        $r24 := @caughtexception;

        r2 = $r24;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write display settings: ");

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r28);

        return;

     label04:
        $r6 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r6.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r33 = $r6;

        interfaceinvoke r33.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r1, "utf-8");

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r33.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r7);

        interfaceinvoke r33.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "display-settings");

        $r9 = r0.<com.android.server.wm.DisplaySettings: java.util.HashMap mEntries>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.wm.DisplaySettings$Entry) $r12;

        interfaceinvoke r33.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "display");

        $r14 = r4.<com.android.server.wm.DisplaySettings$Entry: java.lang.String name>;

        interfaceinvoke r33.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r14);

        $i0 = r4.<com.android.server.wm.DisplaySettings$Entry: int overscanLeft>;

        if $i0 == 0 goto label06;

        $i7 = r4.<com.android.server.wm.DisplaySettings$Entry: int overscanLeft>;

        $r26 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7);

        interfaceinvoke r33.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "overscanLeft", $r26);

     label06:
        $i2 = r4.<com.android.server.wm.DisplaySettings$Entry: int overscanTop>;

        if $i2 == 0 goto label07;

        $i6 = r4.<com.android.server.wm.DisplaySettings$Entry: int overscanTop>;

        $r22 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        interfaceinvoke r33.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "overscanTop", $r22);

     label07:
        $i1 = r4.<com.android.server.wm.DisplaySettings$Entry: int overscanRight>;

        if $i1 == 0 goto label08;

        $i5 = r4.<com.android.server.wm.DisplaySettings$Entry: int overscanRight>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i5);

        interfaceinvoke r33.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "overscanRight", $r20);

     label08:
        $i3 = r4.<com.android.server.wm.DisplaySettings$Entry: int overscanBottom>;

        if $i3 == 0 goto label09;

        $i4 = r4.<com.android.server.wm.DisplaySettings$Entry: int overscanBottom>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        interfaceinvoke r33.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "overscanBottom", $r18);

     label09:
        interfaceinvoke r33.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "display");

        goto label05;

     label10:
        interfaceinvoke r33.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "display-settings");

        interfaceinvoke r33.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        $r13 = r0.<com.android.server.wm.DisplaySettings: android.util.AtomicFile mFile>;

        virtualinvoke $r13.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r1);

     label11:
        goto label13;

     label12:
        $r32 := @caughtexception;

        r34 = $r32;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Failed to write display settings, restoring backup.", r34);

        $r31 = r0.<com.android.server.wm.DisplaySettings: android.util.AtomicFile mFile>;

        virtualinvoke $r31.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r1);

     label13:
        return;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.io.IOException from label04 to label11 with label12;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.DisplaySettings: java.lang.String TAG> = "WindowManager";

        return;
    }
}
