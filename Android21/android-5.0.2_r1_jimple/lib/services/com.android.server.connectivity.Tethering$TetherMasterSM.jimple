class com.android.server.connectivity.Tethering$TetherMasterSM extends com.android.internal.util.StateMachine
{
    static final int CMD_TETHER_MODE_REQUESTED;
    static final int CMD_TETHER_MODE_UNREQUESTED;
    static final int CMD_UPSTREAM_CHANGED;
    static final int CMD_CELL_CONNECTION_RENEW;
    static final int CMD_RETRY_UPSTREAM;
    private int mSequenceNumber;
    private com.android.internal.util.State mInitialState;
    private com.android.internal.util.State mTetherModeAliveState;
    private com.android.internal.util.State mSetIpForwardingEnabledErrorState;
    private com.android.internal.util.State mSetIpForwardingDisabledErrorState;
    private com.android.internal.util.State mStartTetheringErrorState;
    private com.android.internal.util.State mStopTetheringErrorState;
    private com.android.internal.util.State mSetDnsForwardersErrorState;
    private java.util.ArrayList mNotifyList;
    private int mCurrentConnectionSequence;
    private int mMobileApnReserved;
    private java.lang.String mUpstreamIfaceName;
    private static final int UPSTREAM_SETTLE_TIME_MS;
    private static final int CELL_CONNECTION_RENEW_MS;
    final com.android.server.connectivity.Tethering this$0;

    void <init>(com.android.server.connectivity.Tethering, java.lang.String, android.os.Looper)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM r0;
        com.android.server.connectivity.Tethering r1;
        java.lang.String r2;
        android.os.Looper r3;
        com.android.server.connectivity.Tethering$TetherMasterSM$InitialState $r4;
        com.android.internal.util.State $r5, $r7, $r9, $r11, $r13, $r15, $r16, $r18;
        com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState $r6;
        com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingEnabledErrorState $r8;
        com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingDisabledErrorState $r10;
        com.android.server.connectivity.Tethering$TetherMasterSM$StartTetheringErrorState $r12;
        com.android.server.connectivity.Tethering$TetherMasterSM$StopTetheringErrorState $r14;
        com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState $r17;
        java.util.ArrayList $r19;

        r0 := @this: com.android.server.connectivity.Tethering$TetherMasterSM;

        r1 := @parameter0: com.android.server.connectivity.Tethering;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Looper;

        r0.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0> = r1;

        specialinvoke r0.<com.android.internal.util.StateMachine: void <init>(java.lang.String,android.os.Looper)>(r2, r3);

        r0.<com.android.server.connectivity.Tethering$TetherMasterSM: int mMobileApnReserved> = -1;

        r0.<com.android.server.connectivity.Tethering$TetherMasterSM: java.lang.String mUpstreamIfaceName> = null;

        $r4 = new com.android.server.connectivity.Tethering$TetherMasterSM$InitialState;

        specialinvoke $r4.<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)>(r0);

        r0.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State mInitialState> = $r4;

        $r5 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State mInitialState>;

        virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM: void addState(com.android.internal.util.State)>($r5);

        $r6 = new com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState;

        specialinvoke $r6.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)>(r0);

        r0.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State mTetherModeAliveState> = $r6;

        $r7 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State mTetherModeAliveState>;

        virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM: void addState(com.android.internal.util.State)>($r7);

        $r8 = new com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingEnabledErrorState;

        specialinvoke $r8.<com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingEnabledErrorState: void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)>(r0);

        r0.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State mSetIpForwardingEnabledErrorState> = $r8;

        $r9 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State mSetIpForwardingEnabledErrorState>;

        virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM: void addState(com.android.internal.util.State)>($r9);

        $r10 = new com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingDisabledErrorState;

        specialinvoke $r10.<com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingDisabledErrorState: void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)>(r0);

        r0.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State mSetIpForwardingDisabledErrorState> = $r10;

        $r11 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State mSetIpForwardingDisabledErrorState>;

        virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM: void addState(com.android.internal.util.State)>($r11);

        $r12 = new com.android.server.connectivity.Tethering$TetherMasterSM$StartTetheringErrorState;

        specialinvoke $r12.<com.android.server.connectivity.Tethering$TetherMasterSM$StartTetheringErrorState: void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)>(r0);

        r0.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State mStartTetheringErrorState> = $r12;

        $r13 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State mStartTetheringErrorState>;

        virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM: void addState(com.android.internal.util.State)>($r13);

        $r14 = new com.android.server.connectivity.Tethering$TetherMasterSM$StopTetheringErrorState;

        specialinvoke $r14.<com.android.server.connectivity.Tethering$TetherMasterSM$StopTetheringErrorState: void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)>(r0);

        r0.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State mStopTetheringErrorState> = $r14;

        $r15 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State mStopTetheringErrorState>;

        virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM: void addState(com.android.internal.util.State)>($r15);

        $r17 = new com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState;

        specialinvoke $r17.<com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState: void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)>(r0);

        r0.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State mSetDnsForwardersErrorState> = $r17;

        $r16 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State mSetDnsForwardersErrorState>;

        virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM: void addState(com.android.internal.util.State)>($r16);

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.connectivity.Tethering$TetherMasterSM: java.util.ArrayList mNotifyList> = $r19;

        $r18 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State mInitialState>;

        virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM: void setInitialState(com.android.internal.util.State)>($r18);

        return;
    }

    static int access$2900(com.android.server.connectivity.Tethering$TetherMasterSM)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM r0;
        int $i0;

        r0 := @parameter0: com.android.server.connectivity.Tethering$TetherMasterSM;

        $i0 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM: int mMobileApnReserved>;

        return $i0;
    }

    static int access$2902(com.android.server.connectivity.Tethering$TetherMasterSM, int)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM r0;
        int i0;

        r0 := @parameter0: com.android.server.connectivity.Tethering$TetherMasterSM;

        i0 := @parameter1: int;

        r0.<com.android.server.connectivity.Tethering$TetherMasterSM: int mMobileApnReserved> = i0;

        return i0;
    }

    static int access$3104(com.android.server.connectivity.Tethering$TetherMasterSM)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM r0;
        int $i0, $i1;

        r0 := @parameter0: com.android.server.connectivity.Tethering$TetherMasterSM;

        $i0 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM: int mCurrentConnectionSequence>;

        $i1 = $i0 + 1;

        r0.<com.android.server.connectivity.Tethering$TetherMasterSM: int mCurrentConnectionSequence> = $i1;

        return $i1;
    }

    static com.android.internal.util.State access$3200(com.android.server.connectivity.Tethering$TetherMasterSM)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.connectivity.Tethering$TetherMasterSM;

        $r1 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State mSetIpForwardingEnabledErrorState>;

        return $r1;
    }

    static void access$3300(com.android.server.connectivity.Tethering$TetherMasterSM, com.android.internal.util.IState)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.connectivity.Tethering$TetherMasterSM;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static com.android.internal.util.State access$3500(com.android.server.connectivity.Tethering$TetherMasterSM)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.connectivity.Tethering$TetherMasterSM;

        $r1 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State mStartTetheringErrorState>;

        return $r1;
    }

    static void access$3600(com.android.server.connectivity.Tethering$TetherMasterSM, com.android.internal.util.IState)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.connectivity.Tethering$TetherMasterSM;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static com.android.internal.util.State access$3700(com.android.server.connectivity.Tethering$TetherMasterSM)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.connectivity.Tethering$TetherMasterSM;

        $r1 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State mStopTetheringErrorState>;

        return $r1;
    }

    static void access$3800(com.android.server.connectivity.Tethering$TetherMasterSM, com.android.internal.util.IState)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.connectivity.Tethering$TetherMasterSM;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static com.android.internal.util.State access$3900(com.android.server.connectivity.Tethering$TetherMasterSM)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.connectivity.Tethering$TetherMasterSM;

        $r1 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State mSetIpForwardingDisabledErrorState>;

        return $r1;
    }

    static void access$4000(com.android.server.connectivity.Tethering$TetherMasterSM, com.android.internal.util.IState)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.connectivity.Tethering$TetherMasterSM;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static com.android.internal.util.State access$4100(com.android.server.connectivity.Tethering$TetherMasterSM)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.connectivity.Tethering$TetherMasterSM;

        $r1 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State mInitialState>;

        return $r1;
    }

    static void access$4200(com.android.server.connectivity.Tethering$TetherMasterSM, com.android.internal.util.IState)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.connectivity.Tethering$TetherMasterSM;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static com.android.internal.util.State access$4600(com.android.server.connectivity.Tethering$TetherMasterSM)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.connectivity.Tethering$TetherMasterSM;

        $r1 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State mSetDnsForwardersErrorState>;

        return $r1;
    }

    static void access$4700(com.android.server.connectivity.Tethering$TetherMasterSM, com.android.internal.util.IState)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.connectivity.Tethering$TetherMasterSM;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static java.lang.String access$4802(com.android.server.connectivity.Tethering$TetherMasterSM, java.lang.String)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.connectivity.Tethering$TetherMasterSM;

        r1 := @parameter1: java.lang.String;

        r0.<com.android.server.connectivity.Tethering$TetherMasterSM: java.lang.String mUpstreamIfaceName> = r1;

        return r1;
    }

    static java.util.ArrayList access$4900(com.android.server.connectivity.Tethering$TetherMasterSM)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.server.connectivity.Tethering$TetherMasterSM;

        $r1 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM: java.util.ArrayList mNotifyList>;

        return $r1;
    }

    static com.android.internal.util.State access$5000(com.android.server.connectivity.Tethering$TetherMasterSM)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.connectivity.Tethering$TetherMasterSM;

        $r1 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State mTetherModeAliveState>;

        return $r1;
    }

    static void access$5100(com.android.server.connectivity.Tethering$TetherMasterSM, com.android.internal.util.IState)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.connectivity.Tethering$TetherMasterSM;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static java.lang.String access$4800(com.android.server.connectivity.Tethering$TetherMasterSM)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.connectivity.Tethering$TetherMasterSM;

        $r1 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM: java.lang.String mUpstreamIfaceName>;

        return $r1;
    }

    static int access$3100(com.android.server.connectivity.Tethering$TetherMasterSM)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM r0;
        int $i0;

        r0 := @parameter0: com.android.server.connectivity.Tethering$TetherMasterSM;

        $i0 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM: int mCurrentConnectionSequence>;

        return $i0;
    }

    public static void <clinit>()
    {
        <com.android.server.connectivity.Tethering$TetherMasterSM: int CELL_CONNECTION_RENEW_MS> = 40000;

        <com.android.server.connectivity.Tethering$TetherMasterSM: int UPSTREAM_SETTLE_TIME_MS> = 10000;

        <com.android.server.connectivity.Tethering$TetherMasterSM: int CMD_RETRY_UPSTREAM> = 5;

        <com.android.server.connectivity.Tethering$TetherMasterSM: int CMD_CELL_CONNECTION_RENEW> = 4;

        <com.android.server.connectivity.Tethering$TetherMasterSM: int CMD_UPSTREAM_CHANGED> = 3;

        <com.android.server.connectivity.Tethering$TetherMasterSM: int CMD_TETHER_MODE_UNREQUESTED> = 2;

        <com.android.server.connectivity.Tethering$TetherMasterSM: int CMD_TETHER_MODE_REQUESTED> = 1;

        return;
    }
}
