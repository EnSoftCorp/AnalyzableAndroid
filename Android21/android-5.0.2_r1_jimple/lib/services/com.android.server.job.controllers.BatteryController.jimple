public class com.android.server.job.controllers.BatteryController extends com.android.server.job.controllers.StateController
{
    private static final java.lang.String TAG;
    private static final java.lang.Object sCreationLock;
    private static volatile com.android.server.job.controllers.BatteryController sController;
    private static final java.lang.String ACTION_CHARGING_STABLE;
    private static final long STABLE_CHARGING_THRESHOLD_MILLIS;
    private java.util.List mTrackedTasks;
    private com.android.server.job.controllers.BatteryController$ChargingTracker mChargeTracker;

    public static com.android.server.job.controllers.BatteryController get(com.android.server.job.JobSchedulerService)
    {
        com.android.server.job.JobSchedulerService r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r8;
        com.android.server.job.controllers.BatteryController $r4, $r5, $r6;
        android.content.Context $r7;

        r0 := @parameter0: com.android.server.job.JobSchedulerService;

        $r3 = <com.android.server.job.controllers.BatteryController: java.lang.Object sCreationLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = <com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController sController>;

        if $r4 != null goto label2;

        $r6 = new com.android.server.job.controllers.BatteryController;

        $r7 = virtualinvoke r0.<com.android.server.job.JobSchedulerService: android.content.Context getContext()>();

        specialinvoke $r6.<com.android.server.job.controllers.BatteryController: void <init>(com.android.server.job.StateChangedListener,android.content.Context)>(r0, $r7);

        <com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController sController> = $r6;

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        $r5 = <com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController sController>;

        return $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public com.android.server.job.controllers.BatteryController$ChargingTracker getTracker()
    {
        com.android.server.job.controllers.BatteryController r0;
        com.android.server.job.controllers.BatteryController$ChargingTracker $r1;

        r0 := @this: com.android.server.job.controllers.BatteryController;

        $r1 = r0.<com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController$ChargingTracker mChargeTracker>;

        return $r1;
    }

    public static com.android.server.job.controllers.BatteryController getForTesting(com.android.server.job.StateChangedListener, android.content.Context)
    {
        com.android.server.job.StateChangedListener r0;
        android.content.Context r1;
        com.android.server.job.controllers.BatteryController $r2;

        r0 := @parameter0: com.android.server.job.StateChangedListener;

        r1 := @parameter1: android.content.Context;

        $r2 = new com.android.server.job.controllers.BatteryController;

        specialinvoke $r2.<com.android.server.job.controllers.BatteryController: void <init>(com.android.server.job.StateChangedListener,android.content.Context)>(r0, r1);

        return $r2;
    }

    private void <init>(com.android.server.job.StateChangedListener, android.content.Context)
    {
        com.android.server.job.controllers.BatteryController r0;
        com.android.server.job.StateChangedListener r1;
        android.content.Context r2;
        java.util.ArrayList $r3;
        com.android.server.job.controllers.BatteryController$ChargingTracker $r4, $r5;

        r0 := @this: com.android.server.job.controllers.BatteryController;

        r1 := @parameter0: com.android.server.job.StateChangedListener;

        r2 := @parameter1: android.content.Context;

        specialinvoke r0.<com.android.server.job.controllers.StateController: void <init>(com.android.server.job.StateChangedListener,android.content.Context)>(r1, r2);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.job.controllers.BatteryController: java.util.List mTrackedTasks> = $r3;

        $r4 = new com.android.server.job.controllers.BatteryController$ChargingTracker;

        specialinvoke $r4.<com.android.server.job.controllers.BatteryController$ChargingTracker: void <init>(com.android.server.job.controllers.BatteryController)>(r0);

        r0.<com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController$ChargingTracker mChargeTracker> = $r4;

        $r5 = r0.<com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController$ChargingTracker mChargeTracker>;

        virtualinvoke $r5.<com.android.server.job.controllers.BatteryController$ChargingTracker: void startTracking()>();

        return;
    }

    public void maybeStartTrackingJob(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.BatteryController r0;
        com.android.server.job.controllers.JobStatus r1;
        boolean z0, $z1;
        java.util.List r2, $r6, $r7;
        java.lang.Throwable r3, $r9;
        com.android.server.job.controllers.BatteryController$ChargingTracker $r4, $r5;
        java.util.concurrent.atomic.AtomicBoolean $r8;

        r0 := @this: com.android.server.job.controllers.BatteryController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        $r4 = r0.<com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController$ChargingTracker mChargeTracker>;

        z0 = virtualinvoke $r4.<com.android.server.job.controllers.BatteryController$ChargingTracker: boolean isOnStablePower()>();

        $z1 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: boolean hasChargingConstraint()>();

        if $z1 == 0 goto label5;

        $r6 = r0.<com.android.server.job.controllers.BatteryController: java.util.List mTrackedTasks>;

        r2 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<com.android.server.job.controllers.BatteryController: java.util.List mTrackedTasks>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r8 = r1.<com.android.server.job.controllers.JobStatus: java.util.concurrent.atomic.AtomicBoolean chargingConstraintSatisfied>;

        virtualinvoke $r8.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(z0);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        if z0 == 0 goto label6;

        $r5 = r0.<com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController$ChargingTracker mChargeTracker>;

        virtualinvoke $r5.<com.android.server.job.controllers.BatteryController$ChargingTracker: void setStableChargingAlarm()>();

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void maybeStopTrackingJob(com.android.server.job.controllers.JobStatus)
    {
        com.android.server.job.controllers.BatteryController r0;
        com.android.server.job.controllers.JobStatus r1;
        java.util.List r2, $r4, $r5;
        java.lang.Throwable r3, $r6;
        boolean $z0;

        r0 := @this: com.android.server.job.controllers.BatteryController;

        r1 := @parameter0: com.android.server.job.controllers.JobStatus;

        $z0 = virtualinvoke r1.<com.android.server.job.controllers.JobStatus: boolean hasChargingConstraint()>();

        if $z0 == 0 goto label5;

        $r4 = r0.<com.android.server.job.controllers.BatteryController: java.util.List mTrackedTasks>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.job.controllers.BatteryController: java.util.List mTrackedTasks>;

        interfaceinvoke $r5.<java.util.List: boolean remove(java.lang.Object)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void maybeReportNewChargingState()
    {
        com.android.server.job.controllers.BatteryController r0;
        boolean z0, z1, z2, $z3;
        java.util.List r1, $r6, $r7;
        java.util.Iterator r2;
        com.android.server.job.controllers.JobStatus r3;
        java.lang.Throwable r4, $r12;
        com.android.server.job.controllers.BatteryController$ChargingTracker $r5;
        com.android.server.job.StateChangedListener $r8, $r10;
        java.lang.Object $r9;
        java.util.concurrent.atomic.AtomicBoolean $r11;

        r0 := @this: com.android.server.job.controllers.BatteryController;

        $r5 = r0.<com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController$ChargingTracker mChargeTracker>;

        z0 = virtualinvoke $r5.<com.android.server.job.controllers.BatteryController$ChargingTracker: boolean isOnStablePower()>();

        z1 = 0;

        $r6 = r0.<com.android.server.job.controllers.BatteryController: java.util.List mTrackedTasks>;

        r1 = $r6;

        entermonitor $r6;

     label01:
        $r7 = r0.<com.android.server.job.controllers.BatteryController: java.util.List mTrackedTasks>;

        r2 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label04;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.job.controllers.JobStatus) $r9;

        $r11 = r3.<com.android.server.job.controllers.JobStatus: java.util.concurrent.atomic.AtomicBoolean chargingConstraintSatisfied>;

        z2 = virtualinvoke $r11.<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>(z0);

        if z2 == z0 goto label03;

        z1 = 1;

     label03:
        goto label02;

     label04:
        exitmonitor r1;

     label05:
        goto label08;

     label06:
        $r12 := @caughtexception;

        r4 = $r12;

        exitmonitor r1;

     label07:
        throw r4;

     label08:
        if z1 == 0 goto label09;

        $r10 = r0.<com.android.server.job.controllers.BatteryController: com.android.server.job.StateChangedListener mStateChangedListener>;

        interfaceinvoke $r10.<com.android.server.job.StateChangedListener: void onControllerStateChanged()>();

     label09:
        if z0 == 0 goto label10;

        $r8 = r0.<com.android.server.job.controllers.BatteryController: com.android.server.job.StateChangedListener mStateChangedListener>;

        interfaceinvoke $r8.<com.android.server.job.StateChangedListener: void onRunJobNow(com.android.server.job.controllers.JobStatus)>(null);

     label10:
        return;

        catch java.lang.Throwable from label01 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
    }

    public void dumpControllerState(java.io.PrintWriter)
    {
        com.android.server.job.controllers.BatteryController r0;
        java.io.PrintWriter r1;
        java.util.List r2, $r10, $r11;
        java.util.Iterator r3;
        java.lang.Throwable r4, $r21;
        java.lang.StringBuilder $r5, $r6, $r8, $r12, $r14, $r16;
        com.android.server.job.controllers.BatteryController$ChargingTracker $r7;
        boolean $z0, $z1, $z2;
        java.lang.String $r9, $r17, $r19, $r22;
        java.lang.Object $r13, $r18;
        int $i0, $i1;
        com.android.server.job.controllers.JobStatus $r15, $r20;

        r0 := @this: com.android.server.job.controllers.BatteryController;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Batt.");

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stable power: ");

        $r7 = r0.<com.android.server.job.controllers.BatteryController: com.android.server.job.controllers.BatteryController$ChargingTracker mChargeTracker>;

        $z0 = virtualinvoke $r7.<com.android.server.job.controllers.BatteryController$ChargingTracker: boolean isOnStablePower()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        $r10 = r0.<com.android.server.job.controllers.BatteryController: java.util.List mTrackedTasks>;

        r2 = $r10;

        entermonitor $r10;

     label1:
        $r11 = r0.<com.android.server.job.controllers.BatteryController: java.util.List mTrackedTasks>;

        r3 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r18 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r20 = (com.android.server.job.controllers.JobStatus) $r18;

        $i1 = virtualinvoke $r20.<java.lang.Object: int hashCode()>();

        $r22 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r22);

     label2:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r13 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (com.android.server.job.controllers.JobStatus) $r13;

        $i0 = virtualinvoke $r15.<java.lang.Object: int hashCode()>();

        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r19);

        goto label2;

     label3:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r21 := @caughtexception;

        r4 = $r21;

        exitmonitor r2;

     label6:
        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    static void access$000(com.android.server.job.controllers.BatteryController)
    {
        com.android.server.job.controllers.BatteryController r0;

        r0 := @parameter0: com.android.server.job.controllers.BatteryController;

        specialinvoke r0.<com.android.server.job.controllers.BatteryController: void maybeReportNewChargingState()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        <com.android.server.job.controllers.BatteryController: long STABLE_CHARGING_THRESHOLD_MILLIS> = 120000L;

        <com.android.server.job.controllers.BatteryController: java.lang.String ACTION_CHARGING_STABLE> = "com.android.server.task.controllers.BatteryController.ACTION_CHARGING_STABLE";

        <com.android.server.job.controllers.BatteryController: java.lang.String TAG> = "JobScheduler.Batt";

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.android.server.job.controllers.BatteryController: java.lang.Object sCreationLock> = $r0;

        return;
    }
}
