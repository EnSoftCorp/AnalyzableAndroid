public class com.android.server.NetworkScoreService extends android.net.INetworkScoreService$Stub
{
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final java.util.Map mScoreCaches;

    public void <init>(android.content.Context)
    {
        com.android.server.NetworkScoreService r0;
        android.content.Context r1;
        java.util.HashMap $r2;

        r0 := @this: com.android.server.NetworkScoreService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.net.INetworkScoreService$Stub: void <init>()>();

        r0.<com.android.server.NetworkScoreService: android.content.Context mContext> = r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.NetworkScoreService: java.util.Map mScoreCaches> = $r2;

        return;
    }

    void systemReady()
    {
        com.android.server.NetworkScoreService r0;
        android.content.ContentResolver r1;
        java.lang.String r2;
        android.content.Context $r3, $r4, $r6;
        int $i0;
        android.content.res.Resources $r5;
        boolean $z0;

        r0 := @this: com.android.server.NetworkScoreService;

        $r3 = r0.<com.android.server.NetworkScoreService: android.content.Context mContext>;

        r1 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "network_scoring_provisioned", 0);

        if $i0 != 0 goto label2;

        $r4 = r0.<com.android.server.NetworkScoreService: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(17039428);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 != 0 goto label1;

        $r6 = r0.<com.android.server.NetworkScoreService: android.content.Context mContext>;

        staticinvoke <android.net.NetworkScorerAppManager: boolean setActiveScorer(android.content.Context,java.lang.String)>($r6, r2);

     label1:
        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>(r1, "network_scoring_provisioned", 1);

     label2:
        return;
    }

    public boolean updateScores(android.net.ScoredNetwork[])
    {
        com.android.server.NetworkScoreService r0;
        android.net.ScoredNetwork[] r1, r3;
        java.util.HashMap r2, $r7;
        int i0, i1, $i2, $i4, $i5, $i6;
        android.net.ScoredNetwork r4;
        java.util.List r5, $r19;
        android.content.Context $r6;
        boolean $z0, $z1, $z2, $z4;
        java.util.Set $r8;
        java.lang.Object $r9, $r10, $r12, $r14, $r20, $r24, $r39;
        java.util.Map $r11;
        java.lang.StringBuilder $r13, $r15, $r16, $r17, $r28, $r30, $r33, $r34, $r35, $r36, $r38;
        java.lang.String $r18, $r31, $r37;
        android.net.NetworkKey $r21, $r27;
        java.util.ArrayList $r22;
        java.lang.Integer $r23, $r25;
        java.lang.SecurityException $r29;
        android.os.RemoteException $r32, r43;
        java.util.Iterator r40;
        java.util.Map$Entry r41;
        android.net.INetworkScoreCache r42;

        r0 := @this: com.android.server.NetworkScoreService;

        r1 := @parameter0: android.net.ScoredNetwork[];

        $r6 = r0.<com.android.server.NetworkScoreService: android.content.Context mContext>;

        $i2 = staticinvoke <com.android.server.NetworkScoreService: int getCallingUid()>();

        $z0 = staticinvoke <android.net.NetworkScorerAppManager: boolean isCallerActiveScorer(android.content.Context,int)>($r6, $i2);

        if $z0 != 0 goto label01;

        $r29 = new java.lang.SecurityException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caller with UID ");

        $i6 = staticinvoke <com.android.server.NetworkScoreService: int getCallingUid()>();

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not the active scorer.");

        $r31 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.lang.SecurityException: void <init>(java.lang.String)>($r31);

        throw $r29;

     label01:
        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r2 = $r7;

        r3 = r1;

        i0 = lengthof r3;

        i1 = 0;

     label02:
        if i1 >= i0 goto label04;

        r4 = r3[i1];

        $r21 = r4.<android.net.ScoredNetwork: android.net.NetworkKey networkKey>;

        $i4 = $r21.<android.net.NetworkKey: int type>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r24 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r23);

        r5 = (java.util.List) $r24;

        if r5 != null goto label03;

        $r22 = new java.util.ArrayList;

        specialinvoke $r22.<java.util.ArrayList: void <init>()>();

        r5 = $r22;

        $r27 = r4.<android.net.ScoredNetwork: android.net.NetworkKey networkKey>;

        $i5 = $r27.<android.net.NetworkKey: int type>;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, r5);

     label03:
        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r4);

        i1 = i1 + 1;

        goto label02;

     label04:
        $r8 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        r40 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label12;

        $r9 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>();

        r41 = (java.util.Map$Entry) $r9;

        $r11 = r0.<com.android.server.NetworkScoreService: java.util.Map mScoreCaches>;

        $r10 = interfaceinvoke r41.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        r42 = (android.net.INetworkScoreCache) $r12;

        if r42 == null goto label10;

     label06:
        $r20 = interfaceinvoke r41.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r19 = (java.util.List) $r20;

        interfaceinvoke r42.<android.net.INetworkScoreCache: void updateScores(java.util.List)>($r19);

     label07:
        goto label11;

     label08:
        $r32 := @caughtexception;

        r43 = $r32;

        $z4 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NetworkScoreService", 2);

        if $z4 == 0 goto label09;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to update scores of type ");

        $r39 = interfaceinvoke r41.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r39);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("NetworkScoreService", $r37, r43);

     label09:
        goto label11;

     label10:
        $z2 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NetworkScoreService", 2);

        if $z2 == 0 goto label11;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No scorer registered for type ");

        $r14 = interfaceinvoke r41.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", discarding");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("NetworkScoreService", $r18);

     label11:
        goto label05;

     label12:
        return 1;

        catch android.os.RemoteException from label06 to label07 with label08;
    }

    public boolean clearScores()
    {
        com.android.server.NetworkScoreService r0;
        android.content.Context $r1, $r2;
        int $i0, $i1;
        boolean $z0;
        java.lang.SecurityException $r3;

        r0 := @this: com.android.server.NetworkScoreService;

        $r1 = r0.<com.android.server.NetworkScoreService: android.content.Context mContext>;

        $i0 = staticinvoke <com.android.server.NetworkScoreService: int getCallingUid()>();

        $z0 = staticinvoke <android.net.NetworkScorerAppManager: boolean isCallerActiveScorer(android.content.Context,int)>($r1, $i0);

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.server.NetworkScoreService: android.content.Context mContext>;

        $i1 = virtualinvoke $r2.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.BROADCAST_SCORE_NETWORKS");

        if $i1 != 0 goto label2;

     label1:
        specialinvoke r0.<com.android.server.NetworkScoreService: void clearInternal()>();

        return 1;

     label2:
        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("Caller is neither the active scorer nor the scorer manager.");

        throw $r3;
    }

    public boolean setActiveScorer(java.lang.String)
    {
        com.android.server.NetworkScoreService r0;
        java.lang.String r1;
        android.content.Context $r2;
        boolean $z0;

        r0 := @this: com.android.server.NetworkScoreService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.NetworkScoreService: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BROADCAST_SCORE_NETWORKS", "NetworkScoreService");

        $z0 = specialinvoke r0.<com.android.server.NetworkScoreService: boolean setScorerInternal(java.lang.String)>(r1);

        return $z0;
    }

    public void disableScoring()
    {
        com.android.server.NetworkScoreService r0;
        android.content.Context $r1, $r2;
        int $i0, $i1;
        boolean $z0;
        java.lang.SecurityException $r3;

        r0 := @this: com.android.server.NetworkScoreService;

        $r1 = r0.<com.android.server.NetworkScoreService: android.content.Context mContext>;

        $i0 = staticinvoke <com.android.server.NetworkScoreService: int getCallingUid()>();

        $z0 = staticinvoke <android.net.NetworkScorerAppManager: boolean isCallerActiveScorer(android.content.Context,int)>($r1, $i0);

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.server.NetworkScoreService: android.content.Context mContext>;

        $i1 = virtualinvoke $r2.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.BROADCAST_SCORE_NETWORKS");

        if $i1 != 0 goto label2;

     label1:
        specialinvoke r0.<com.android.server.NetworkScoreService: boolean setScorerInternal(java.lang.String)>(null);

        goto label3;

     label2:
        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>("Caller is neither the active scorer nor the scorer manager.");

        throw $r3;

     label3:
        return;
    }

    private boolean setScorerInternal(java.lang.String)
    {
        com.android.server.NetworkScoreService r0;
        java.lang.String r1;
        long l0;
        boolean z0, z1;
        android.content.Intent r2, $r5;
        java.lang.Throwable r3, $r9;
        android.content.Context $r4, $r8;
        android.os.UserHandle $r7;

        r0 := @this: com.android.server.NetworkScoreService;

        r1 := @parameter0: java.lang.String;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        specialinvoke r0.<com.android.server.NetworkScoreService: void clearInternal()>();

        $r4 = r0.<com.android.server.NetworkScoreService: android.content.Context mContext>;

        z0 = staticinvoke <android.net.NetworkScorerAppManager: boolean setActiveScorer(android.content.Context,java.lang.String)>($r4, r1);

        if z0 == 0 goto label2;

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.net.scoring.SCORER_CHANGED");

        r2 = $r5;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("newScorer", r1);

        $r8 = r0.<com.android.server.NetworkScoreService: android.content.Context mContext>;

        $r7 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r8.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r2, $r7);

     label2:
        z1 = z0;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z1;

     label4:
        $r9 := @caughtexception;

        r3 = $r9;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void clearInternal()
    {
        com.android.server.NetworkScoreService r0;
        java.util.Set r1;
        java.util.Iterator r2;
        android.net.INetworkScoreCache r3;
        android.os.RemoteException r4, $r6;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: com.android.server.NetworkScoreService;

        r1 = specialinvoke r0.<com.android.server.NetworkScoreService: java.util.Set getScoreCaches()>();

        r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.net.INetworkScoreCache) $r5;

     label2:
        interfaceinvoke r3.<android.net.INetworkScoreCache: void clearScores()>();

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        r4 = $r6;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NetworkScoreService", 2);

        if $z1 == 0 goto label5;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("NetworkScoreService", "Unable to clear scores", r4);

     label5:
        goto label1;

     label6:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void registerNetworkScoreCache(int, android.net.INetworkScoreCache)
    {
        com.android.server.NetworkScoreService r0;
        int i0;
        android.net.INetworkScoreCache r1;
        java.util.Map r2, $r5, $r6, $r8;
        java.lang.Throwable r3, $r15;
        android.content.Context $r4;
        java.lang.Integer $r7, $r9;
        boolean $z0;
        java.lang.IllegalArgumentException $r11;
        java.lang.StringBuilder $r12, $r13, $r14;
        java.lang.String $r16;

        r0 := @this: com.android.server.NetworkScoreService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.INetworkScoreCache;

        $r4 = r0.<com.android.server.NetworkScoreService: android.content.Context mContext>;

        virtualinvoke $r4.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BROADCAST_SCORE_NETWORKS", "NetworkScoreService");

        $r5 = r0.<com.android.server.NetworkScoreService: java.util.Map mScoreCaches>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.NetworkScoreService: java.util.Map mScoreCaches>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Score cache already registered for type ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r11;

     label2:
        $r8 = r0.<com.android.server.NetworkScoreService: java.util.Map mScoreCaches>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r1);

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r15 := @caughtexception;

        r3 = $r15;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.NetworkScoreService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        android.net.NetworkScorerAppManager$NetworkScorerAppData r4;
        java.util.Iterator r5;
        android.net.INetworkScoreCache r6;
        android.os.RemoteException r7, $r17;
        android.content.Context $r8, $r9;
        java.lang.StringBuilder $r10, $r11, $r13;
        java.lang.String $r12, $r14;
        java.util.Set $r15;
        java.lang.Object $r16;
        boolean $z0, $z1;
        android.os.IBinder $r18;

        r0 := @this: com.android.server.NetworkScoreService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r8 = r0.<com.android.server.NetworkScoreService: android.content.Context mContext>;

        virtualinvoke $r8.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DUMP", "NetworkScoreService");

        $r9 = r0.<com.android.server.NetworkScoreService: android.content.Context mContext>;

        r4 = staticinvoke <android.net.NetworkScorerAppManager: android.net.NetworkScorerAppManager$NetworkScorerAppData getActiveScorer(android.content.Context)>($r9);

        if r4 != null goto label1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Scoring is disabled.");

        return;

     label1:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current scorer: ");

        $r12 = r4.<android.net.NetworkScorerAppManager$NetworkScorerAppData: java.lang.String mPackageName>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

        $r15 = specialinvoke r0.<com.android.server.NetworkScoreService: java.util.Set getScoreCaches()>();

        r5 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.net.INetworkScoreCache) $r16;

     label3:
        $r18 = interfaceinvoke r6.<android.net.INetworkScoreCache: android.os.IBinder asBinder()>();

        interfaceinvoke $r18.<android.os.IBinder: void dump(java.io.FileDescriptor,java.lang.String[])>(r1, r3);

     label4:
        goto label6;

     label5:
        $r17 := @caughtexception;

        r7 = $r17;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Unable to dump score cache");

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("NetworkScoreService", 2);

        if $z1 == 0 goto label6;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("NetworkScoreService", "Unable to dump score cache", r7);

     label6:
        goto label2;

     label7:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private java.util.Set getScoreCaches()
    {
        com.android.server.NetworkScoreService r0;
        java.util.Map r1, $r3, $r5;
        java.lang.Throwable r2, $r7;
        java.util.HashSet $r4;
        java.util.Collection $r6;

        r0 := @this: com.android.server.NetworkScoreService;

        $r3 = r0.<com.android.server.NetworkScoreService: java.util.Map mScoreCaches>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = new java.util.HashSet;

        $r5 = r0.<com.android.server.NetworkScoreService: java.util.Map mScoreCaches>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r4.<java.util.HashSet: void <init>(java.util.Collection)>($r6);

        exitmonitor r1;

     label2:
        return $r4;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.NetworkScoreService: java.lang.String TAG> = "NetworkScoreService";

        return;
    }
}
