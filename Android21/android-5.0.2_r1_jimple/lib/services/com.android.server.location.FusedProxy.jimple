public final class com.android.server.location.FusedProxy extends java.lang.Object
{
    private final java.lang.String TAG;
    private final com.android.server.ServiceWatcher mServiceWatcher;
    private final com.android.server.location.FusedLocationHardwareSecure mLocationHardware;

    private void <init>(android.content.Context, android.os.Handler, android.hardware.location.IFusedLocationHardware, int, int, int)
    {
        com.android.server.location.FusedProxy r0;
        android.content.Context r1;
        android.os.Handler r2;
        android.hardware.location.IFusedLocationHardware r3;
        int i0, i1, i2;
        com.android.server.location.FusedProxy$1 r4, $r6;
        com.android.server.location.FusedLocationHardwareSecure $r5;
        com.android.server.ServiceWatcher $r7;

        r0 := @this: com.android.server.location.FusedProxy;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: android.hardware.location.IFusedLocationHardware;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.location.FusedProxy: java.lang.String TAG> = "FusedProxy";

        $r5 = new com.android.server.location.FusedLocationHardwareSecure;

        specialinvoke $r5.<com.android.server.location.FusedLocationHardwareSecure: void <init>(android.hardware.location.IFusedLocationHardware,android.content.Context,java.lang.String)>(r3, r1, "android.permission.LOCATION_HARDWARE");

        r0.<com.android.server.location.FusedProxy: com.android.server.location.FusedLocationHardwareSecure mLocationHardware> = $r5;

        $r6 = new com.android.server.location.FusedProxy$1;

        specialinvoke $r6.<com.android.server.location.FusedProxy$1: void <init>(com.android.server.location.FusedProxy)>(r0);

        r4 = $r6;

        $r7 = new com.android.server.ServiceWatcher;

        specialinvoke $r7.<com.android.server.ServiceWatcher: void <init>(android.content.Context,java.lang.String,java.lang.String,int,int,int,java.lang.Runnable,android.os.Handler)>(r1, "FusedProxy", "com.android.location.service.FusedProvider", i0, i1, i2, r4, r2);

        r0.<com.android.server.location.FusedProxy: com.android.server.ServiceWatcher mServiceWatcher> = $r7;

        return;
    }

    public static com.android.server.location.FusedProxy createAndBind(android.content.Context, android.os.Handler, android.hardware.location.IFusedLocationHardware, int, int, int)
    {
        android.content.Context r0;
        android.os.Handler r1;
        android.hardware.location.IFusedLocationHardware r2;
        int i0, i1, i2;
        com.android.server.location.FusedProxy r3, $r4;
        com.android.server.ServiceWatcher $r5;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.os.Handler;

        r2 := @parameter2: android.hardware.location.IFusedLocationHardware;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        $r4 = new com.android.server.location.FusedProxy;

        specialinvoke $r4.<com.android.server.location.FusedProxy: void <init>(android.content.Context,android.os.Handler,android.hardware.location.IFusedLocationHardware,int,int,int)>(r0, r1, r2, i0, i1, i2);

        r3 = $r4;

        $r5 = r3.<com.android.server.location.FusedProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        $z0 = virtualinvoke $r5.<com.android.server.ServiceWatcher: boolean start()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        return r3;
    }

    private void bindProvider(android.hardware.location.IFusedLocationHardware)
    {
        com.android.server.location.FusedProxy r0;
        android.hardware.location.IFusedLocationHardware r1;
        android.location.IFusedProvider r2;
        android.os.RemoteException r3, $r6;
        com.android.server.ServiceWatcher $r4;
        android.os.IBinder $r5;
        java.lang.String $r7;

        r0 := @this: com.android.server.location.FusedProxy;

        r1 := @parameter0: android.hardware.location.IFusedLocationHardware;

        $r4 = r0.<com.android.server.location.FusedProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        $r5 = virtualinvoke $r4.<com.android.server.ServiceWatcher: android.os.IBinder getBinder()>();

        r2 = staticinvoke <android.location.IFusedProvider$Stub: android.location.IFusedProvider asInterface(android.os.IBinder)>($r5);

        if r2 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FusedProxy", "No instance of FusedProvider found on FusedLocationHardware connected.");

        return;

     label1:
        interfaceinvoke r2.<android.location.IFusedProvider: void onFusedLocationHardwareChange(android.hardware.location.IFusedLocationHardware)>(r1);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = virtualinvoke r3.<android.os.RemoteException: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FusedProxy", $r7);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static com.android.server.location.FusedLocationHardwareSecure access$000(com.android.server.location.FusedProxy)
    {
        com.android.server.location.FusedProxy r0;
        com.android.server.location.FusedLocationHardwareSecure $r1;

        r0 := @parameter0: com.android.server.location.FusedProxy;

        $r1 = r0.<com.android.server.location.FusedProxy: com.android.server.location.FusedLocationHardwareSecure mLocationHardware>;

        return $r1;
    }

    static void access$100(com.android.server.location.FusedProxy, android.hardware.location.IFusedLocationHardware)
    {
        com.android.server.location.FusedProxy r0;
        android.hardware.location.IFusedLocationHardware r1;

        r0 := @parameter0: com.android.server.location.FusedProxy;

        r1 := @parameter1: android.hardware.location.IFusedLocationHardware;

        specialinvoke r0.<com.android.server.location.FusedProxy: void bindProvider(android.hardware.location.IFusedLocationHardware)>(r1);

        return;
    }
}
