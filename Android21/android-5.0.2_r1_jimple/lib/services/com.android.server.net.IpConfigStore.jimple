public class com.android.server.net.IpConfigStore extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final boolean DBG;
    protected final com.android.server.net.DelayedDiskWrite mWriter;
    protected static final java.lang.String ID_KEY;
    protected static final java.lang.String IP_ASSIGNMENT_KEY;
    protected static final java.lang.String LINK_ADDRESS_KEY;
    protected static final java.lang.String GATEWAY_KEY;
    protected static final java.lang.String DNS_KEY;
    protected static final java.lang.String PROXY_SETTINGS_KEY;
    protected static final java.lang.String PROXY_HOST_KEY;
    protected static final java.lang.String PROXY_PORT_KEY;
    protected static final java.lang.String PROXY_PAC_FILE;
    protected static final java.lang.String EXCLUSION_LIST_KEY;
    protected static final java.lang.String EOS;
    protected static final int IPCONFIG_FILE_VERSION;

    public void <init>()
    {
        com.android.server.net.IpConfigStore r0;
        com.android.server.net.DelayedDiskWrite $r1;

        r0 := @this: com.android.server.net.IpConfigStore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.android.server.net.DelayedDiskWrite;

        specialinvoke $r1.<com.android.server.net.DelayedDiskWrite: void <init>()>();

        r0.<com.android.server.net.IpConfigStore: com.android.server.net.DelayedDiskWrite mWriter> = $r1;

        return;
    }

    private boolean writeConfig(java.io.DataOutputStream, int, android.net.IpConfiguration) throws java.io.IOException
    {
        com.android.server.net.IpConfigStore r0;
        java.io.DataOutputStream r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.net.IpConfiguration r2;
        boolean z0, $z1;
        android.net.StaticIpConfiguration r3;
        android.net.LinkAddress r4, $r20;
        java.net.InetAddress r5, $r23, $r26, $r28;
        android.net.IpConfiguration$IpAssignment $r6, $r8, $r32;
        int[] $r7, $r11;
        java.lang.String $r9, $r13, $r14, $r17, $r19, $r21, $r25, $r27, $r29, $r30, $r37, r40;
        android.net.IpConfiguration$ProxySettings $r10, $r12, $r15, $r16;
        android.net.Uri $r18;
        java.util.ArrayList $r22;
        java.lang.Object $r24;
        java.lang.NullPointerException $r31, r42;
        java.lang.StringBuilder $r33, $r34, $r35, $r36;
        java.util.Iterator r38;
        android.net.ProxyInfo r39, r41;

        r0 := @this: com.android.server.net.IpConfigStore;

        r1 := @parameter0: java.io.DataOutputStream;

        i0 := @parameter1: int;

        r2 := @parameter2: android.net.IpConfiguration;

        z0 = 0;

     label01:
        $r7 = <com.android.server.net.IpConfigStore$2: int[] $SwitchMap$android$net$IpConfiguration$IpAssignment>;

        $r6 = r2.<android.net.IpConfiguration: android.net.IpConfiguration$IpAssignment ipAssignment>;

        $i1 = virtualinvoke $r6.<android.net.IpConfiguration$IpAssignment: int ordinal()>();

        $i2 = $r7[$i1];

        tableswitch($i2)
        {
            case 1: goto label02;
            case 2: goto label07;
            case 3: goto label08;
            default: goto label09;
        };

     label02:
        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("ipAssignment");

        $r8 = r2.<android.net.IpConfiguration: android.net.IpConfiguration$IpAssignment ipAssignment>;

        $r9 = virtualinvoke $r8.<android.net.IpConfiguration$IpAssignment: java.lang.String toString()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r9);

        r3 = r2.<android.net.IpConfiguration: android.net.StaticIpConfiguration staticIpConfiguration>;

        if r3 == null goto label06;

        $r20 = r3.<android.net.StaticIpConfiguration: android.net.LinkAddress ipAddress>;

        if $r20 == null goto label03;

        r4 = r3.<android.net.StaticIpConfiguration: android.net.LinkAddress ipAddress>;

        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("linkAddress");

        $r26 = virtualinvoke r4.<android.net.LinkAddress: java.net.InetAddress getAddress()>();

        $r27 = virtualinvoke $r26.<java.net.InetAddress: java.lang.String getHostAddress()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r27);

        $i6 = virtualinvoke r4.<android.net.LinkAddress: int getPrefixLength()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i6);

     label03:
        $r23 = r3.<android.net.StaticIpConfiguration: java.net.InetAddress gateway>;

        if $r23 == null goto label04;

        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("gateway");

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>(0);

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>(1);

        $r28 = r3.<android.net.StaticIpConfiguration: java.net.InetAddress gateway>;

        $r29 = virtualinvoke $r28.<java.net.InetAddress: java.lang.String getHostAddress()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r29);

     label04:
        $r22 = r3.<android.net.StaticIpConfiguration: java.util.ArrayList dnsServers>;

        r38 = virtualinvoke $r22.<java.util.ArrayList: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r24 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.net.InetAddress) $r24;

        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("dns");

        $r25 = virtualinvoke r5.<java.net.InetAddress: java.lang.String getHostAddress()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r25);

        goto label05;

     label06:
        z0 = 1;

        goto label10;

     label07:
        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("ipAssignment");

        $r32 = r2.<android.net.IpConfiguration: android.net.IpConfiguration$IpAssignment ipAssignment>;

        $r30 = virtualinvoke $r32.<android.net.IpConfiguration$IpAssignment: java.lang.String toString()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r30);

        z0 = 1;

        goto label10;

     label08:
        goto label10;

     label09:
        virtualinvoke r0.<com.android.server.net.IpConfigStore: void loge(java.lang.String)>("Ignore invalid ip assignment while writing");

     label10:
        $r11 = <com.android.server.net.IpConfigStore$2: int[] $SwitchMap$android$net$IpConfiguration$ProxySettings>;

        $r10 = r2.<android.net.IpConfiguration: android.net.IpConfiguration$ProxySettings proxySettings>;

        $i4 = virtualinvoke $r10.<android.net.IpConfiguration$ProxySettings: int ordinal()>();

        $i3 = $r11[$i4];

        tableswitch($i3)
        {
            case 1: goto label11;
            case 2: goto label13;
            case 3: goto label14;
            case 4: goto label15;
            default: goto label16;
        };

     label11:
        r39 = r2.<android.net.IpConfiguration: android.net.ProxyInfo httpProxy>;

        r40 = virtualinvoke r39.<android.net.ProxyInfo: java.lang.String getExclusionListAsString()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("proxySettings");

        $r12 = r2.<android.net.IpConfiguration: android.net.IpConfiguration$ProxySettings proxySettings>;

        $r14 = virtualinvoke $r12.<android.net.IpConfiguration$ProxySettings: java.lang.String toString()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r14);

        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("proxyHost");

        $r13 = virtualinvoke r39.<android.net.ProxyInfo: java.lang.String getHost()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r13);

        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("proxyPort");

        $i5 = virtualinvoke r39.<android.net.ProxyInfo: int getPort()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>($i5);

        if r40 == null goto label12;

        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("exclusionList");

        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(r40);

     label12:
        z0 = 1;

        goto label17;

     label13:
        r41 = r2.<android.net.IpConfiguration: android.net.ProxyInfo httpProxy>;

        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("proxySettings");

        $r16 = r2.<android.net.IpConfiguration: android.net.IpConfiguration$ProxySettings proxySettings>;

        $r19 = virtualinvoke $r16.<android.net.IpConfiguration$ProxySettings: java.lang.String toString()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r19);

        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("proxyPac");

        $r18 = virtualinvoke r41.<android.net.ProxyInfo: android.net.Uri getPacFileUrl()>();

        $r21 = virtualinvoke $r18.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r21);

        z0 = 1;

        goto label17;

     label14:
        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("proxySettings");

        $r15 = r2.<android.net.IpConfiguration: android.net.IpConfiguration$ProxySettings proxySettings>;

        $r17 = virtualinvoke $r15.<android.net.IpConfiguration$ProxySettings: java.lang.String toString()>();

        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r17);

        z0 = 1;

        goto label17;

     label15:
        goto label17;

     label16:
        virtualinvoke r0.<com.android.server.net.IpConfigStore: void loge(java.lang.String)>("Ignore invalid proxy settings while writing");

     label17:
        if z0 == 0 goto label18;

        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("id");

        virtualinvoke r1.<java.io.DataOutputStream: void writeInt(int)>(i0);

     label18:
        goto label20;

     label19:
        $r31 := @caughtexception;

        r42 = $r31;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure in writing ");

        $r33 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r42);

        $r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.net.IpConfigStore: void loge(java.lang.String)>($r37);

     label20:
        virtualinvoke r1.<java.io.DataOutputStream: void writeUTF(java.lang.String)>("eos");

        return z0;

        catch java.lang.NullPointerException from label01 to label18 with label19;
    }

    public void writeIpAndProxyConfigurations(java.lang.String, android.util.SparseArray)
    {
        com.android.server.net.IpConfigStore r0;
        java.lang.String r1;
        android.util.SparseArray r2;
        com.android.server.net.IpConfigStore$1 $r3;
        com.android.server.net.DelayedDiskWrite $r4;

        r0 := @this: com.android.server.net.IpConfigStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.util.SparseArray;

        $r4 = r0.<com.android.server.net.IpConfigStore: com.android.server.net.DelayedDiskWrite mWriter>;

        $r3 = new com.android.server.net.IpConfigStore$1;

        specialinvoke $r3.<com.android.server.net.IpConfigStore$1: void <init>(com.android.server.net.IpConfigStore,android.util.SparseArray)>(r0, r2);

        virtualinvoke $r4.<com.android.server.net.DelayedDiskWrite: void write(java.lang.String,com.android.server.net.DelayedDiskWrite$Writer)>(r1, $r3);

        return;
    }

    public android.util.SparseArray readIpAndProxyConfigurations(java.lang.String)
    {
        com.android.server.net.IpConfigStore r0;
        java.lang.String r1, r6, r7, r8, r9, $r25, $r33, $r35, $r42, $r44, $r46, $r47, $r49, $r51, $r57, $r63, $r65, $r70, $r76;
        android.util.SparseArray r2, $r14;
        java.io.DataInputStream r3, $r16;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        android.net.IpConfiguration$ProxySettings r4, $r28, $r32;
        android.net.StaticIpConfiguration r5, $r18;
        android.net.LinkAddress r10, $r41, $r58, $r62, r81;
        java.net.InetAddress r11, $r34, $r43, $r45, $r53, $r54, $r59, r82;
        java.lang.Throwable r12, $r75;
        android.net.RouteInfo r13, $r40;
        java.io.BufferedInputStream $r15;
        java.io.FileInputStream $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.lang.StringBuilder $r19, $r20, $r21, $r24, $r37, $r38, $r39, $r48, $r50, $r52, $r55, $r56, $r61, $r64, $r72, $r73, $r77, $r78, $r79;
        android.net.IpConfiguration $r22, r84;
        int[] $r23, $r26;
        android.net.ProxyInfo $r27, $r29, r85, r86;
        android.net.IpConfiguration$IpAssignment $r30, $r31, r80;
        java.util.ArrayList $r36;
        java.io.IOException $r60, r87;
        java.lang.Exception $r66, $r68, $r69, $r71;
        java.lang.IllegalArgumentException $r67, r83;
        java.io.EOFException $r74;

        r0 := @this: com.android.server.net.IpConfigStore;

        r1 := @parameter0: java.lang.String;

        $r14 = new android.util.SparseArray;

        specialinvoke $r14.<android.util.SparseArray: void <init>()>();

        r2 = $r14;

        r3 = null;

     label01:
        $r16 = new java.io.DataInputStream;

        $r15 = new java.io.BufferedInputStream;

        $r17 = new java.io.FileInputStream;

        specialinvoke $r17.<java.io.FileInputStream: void <init>(java.lang.String)>(r1);

        specialinvoke $r15.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r17);

        specialinvoke $r16.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r15);

        r3 = $r16;

        i0 = virtualinvoke r3.<java.io.DataInputStream: int readInt()>();

        if i0 == 2 goto label07;

        if i0 == 1 goto label07;

        virtualinvoke r0.<com.android.server.net.IpConfigStore: void loge(java.lang.String)>("Bad version on IP configuration file, ignore read");

     label02:
        if r3 == null goto label06;

     label03:
        virtualinvoke r3.<java.io.DataInputStream: void close()>();

     label04:
        goto label06;

     label05:
        $r71 := @caughtexception;

     label06:
        return null;

     label07:
        i10 = -1;

        r80 = <android.net.IpConfiguration$IpAssignment: android.net.IpConfiguration$IpAssignment DHCP>;

        r4 = <android.net.IpConfiguration$ProxySettings: android.net.IpConfiguration$ProxySettings NONE>;

        $r18 = new android.net.StaticIpConfiguration;

        specialinvoke $r18.<android.net.StaticIpConfiguration: void <init>()>();

        r5 = $r18;

        r6 = null;

        r7 = null;

        i1 = -1;

        r8 = null;

     label08:
        r9 = virtualinvoke r3.<java.io.DataInputStream: java.lang.String readUTF()>();

     label09:
        $z1 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("id");

        if $z1 == 0 goto label10;

        i10 = virtualinvoke r3.<java.io.DataInputStream: int readInt()>();

        goto label30;

     label10:
        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("ipAssignment");

        if $z0 == 0 goto label11;

        $r63 = virtualinvoke r3.<java.io.DataInputStream: java.lang.String readUTF()>();

        r80 = staticinvoke <android.net.IpConfiguration$IpAssignment: android.net.IpConfiguration$IpAssignment valueOf(java.lang.String)>($r63);

        goto label30;

     label11:
        $z3 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("linkAddress");

        if $z3 == 0 goto label14;

        $r58 = new android.net.LinkAddress;

        $r57 = virtualinvoke r3.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r59 = staticinvoke <android.net.NetworkUtils: java.net.InetAddress numericToInetAddress(java.lang.String)>($r57);

        $i9 = virtualinvoke r3.<java.io.DataInputStream: int readInt()>();

        specialinvoke $r58.<android.net.LinkAddress: void <init>(java.net.InetAddress,int)>($r59, $i9);

        r10 = $r58;

        $r54 = virtualinvoke r10.<android.net.LinkAddress: java.net.InetAddress getAddress()>();

        $z12 = $r54 instanceof java.net.Inet4Address;

        if $z12 == 0 goto label12;

        $r62 = r5.<android.net.StaticIpConfiguration: android.net.LinkAddress ipAddress>;

        if $r62 != null goto label12;

        r5.<android.net.StaticIpConfiguration: android.net.LinkAddress ipAddress> = r10;

        goto label13;

     label12:
        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non-IPv4 or duplicate address: ");

        $r64 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.net.IpConfigStore: void loge(java.lang.String)>($r65);

     label13:
        goto label30;

     label14:
        $z2 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("gateway");

        if $z2 == 0 goto label21;

        r81 = null;

        r11 = null;

        if i0 != 1 goto label16;

        $r51 = virtualinvoke r3.<java.io.DataInputStream: java.lang.String readUTF()>();

        r82 = staticinvoke <android.net.NetworkUtils: java.net.InetAddress numericToInetAddress(java.lang.String)>($r51);

        $r53 = r5.<android.net.StaticIpConfiguration: java.net.InetAddress gateway>;

        if $r53 != null goto label15;

        r5.<android.net.StaticIpConfiguration: java.net.InetAddress gateway> = r82;

        goto label20;

     label15:
        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate gateway: ");

        $r47 = virtualinvoke r82.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.net.IpConfigStore: void loge(java.lang.String)>($r49);

        goto label20;

     label16:
        $i6 = virtualinvoke r3.<java.io.DataInputStream: int readInt()>();

        if $i6 != 1 goto label17;

        $r41 = new android.net.LinkAddress;

        $r42 = virtualinvoke r3.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r43 = staticinvoke <android.net.NetworkUtils: java.net.InetAddress numericToInetAddress(java.lang.String)>($r42);

        $i8 = virtualinvoke r3.<java.io.DataInputStream: int readInt()>();

        specialinvoke $r41.<android.net.LinkAddress: void <init>(java.net.InetAddress,int)>($r43, $i8);

        r81 = $r41;

     label17:
        $i7 = virtualinvoke r3.<java.io.DataInputStream: int readInt()>();

        if $i7 != 1 goto label18;

        $r46 = virtualinvoke r3.<java.io.DataInputStream: java.lang.String readUTF()>();

        r11 = staticinvoke <android.net.NetworkUtils: java.net.InetAddress numericToInetAddress(java.lang.String)>($r46);

     label18:
        $r40 = new android.net.RouteInfo;

        specialinvoke $r40.<android.net.RouteInfo: void <init>(android.net.LinkAddress,java.net.InetAddress)>(r81, r11);

        r13 = $r40;

        $z11 = virtualinvoke r13.<android.net.RouteInfo: boolean isIPv4Default()>();

        if $z11 == 0 goto label19;

        $r45 = r5.<android.net.StaticIpConfiguration: java.net.InetAddress gateway>;

        if $r45 != null goto label19;

        r5.<android.net.StaticIpConfiguration: java.net.InetAddress gateway> = r11;

        goto label20;

     label19:
        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non-IPv4 default or duplicate route: ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        $r44 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.net.IpConfigStore: void loge(java.lang.String)>($r44);

     label20:
        goto label30;

     label21:
        $z5 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("dns");

        if $z5 == 0 goto label22;

        $r36 = r5.<android.net.StaticIpConfiguration: java.util.ArrayList dnsServers>;

        $r35 = virtualinvoke r3.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r34 = staticinvoke <android.net.NetworkUtils: java.net.InetAddress numericToInetAddress(java.lang.String)>($r35);

        virtualinvoke $r36.<java.util.ArrayList: boolean add(java.lang.Object)>($r34);

        goto label30;

     label22:
        $z4 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("proxySettings");

        if $z4 == 0 goto label23;

        $r33 = virtualinvoke r3.<java.io.DataInputStream: java.lang.String readUTF()>();

        r4 = staticinvoke <android.net.IpConfiguration$ProxySettings: android.net.IpConfiguration$ProxySettings valueOf(java.lang.String)>($r33);

        goto label30;

     label23:
        $z8 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("proxyHost");

        if $z8 == 0 goto label24;

        r6 = virtualinvoke r3.<java.io.DataInputStream: java.lang.String readUTF()>();

        goto label30;

     label24:
        $z9 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("proxyPort");

        if $z9 == 0 goto label25;

        i1 = virtualinvoke r3.<java.io.DataInputStream: int readInt()>();

        goto label30;

     label25:
        $z6 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("proxyPac");

        if $z6 == 0 goto label26;

        r7 = virtualinvoke r3.<java.io.DataInputStream: java.lang.String readUTF()>();

        goto label30;

     label26:
        $z7 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("exclusionList");

        if $z7 == 0 goto label27;

        r8 = virtualinvoke r3.<java.io.DataInputStream: java.lang.String readUTF()>();

        goto label30;

     label27:
        $z10 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("eos");

        if $z10 == 0 goto label29;

     label28:
        goto label32;

     label29:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignore unknown key ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("while reading");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.net.IpConfigStore: void loge(java.lang.String)>($r25);

     label30:
        goto label08;

     label31:
        $r67 := @caughtexception;

        r83 = $r67;

        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r78 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignore invalid address while reading");

        $r77 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r83);

        $r76 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.net.IpConfigStore: void loge(java.lang.String)>($r76);

        goto label08;

     label32:
        if i10 == -1 goto label44;

        $r22 = new android.net.IpConfiguration;

        specialinvoke $r22.<android.net.IpConfiguration: void <init>()>();

        r84 = $r22;

        virtualinvoke r2.<android.util.SparseArray: void put(int,java.lang.Object)>(i10, r84);

        $r23 = <com.android.server.net.IpConfigStore$2: int[] $SwitchMap$android$net$IpConfiguration$IpAssignment>;

        $i3 = virtualinvoke r80.<android.net.IpConfiguration$IpAssignment: int ordinal()>();

        $i4 = $r23[$i3];

        tableswitch($i4)
        {
            case 1: goto label33;
            case 2: goto label34;
            case 3: goto label35;
            default: goto label36;
        };

     label33:
        r84.<android.net.IpConfiguration: android.net.StaticIpConfiguration staticIpConfiguration> = r5;

        r84.<android.net.IpConfiguration: android.net.IpConfiguration$IpAssignment ipAssignment> = r80;

        goto label37;

     label34:
        r84.<android.net.IpConfiguration: android.net.IpConfiguration$IpAssignment ipAssignment> = r80;

        goto label37;

     label35:
        virtualinvoke r0.<com.android.server.net.IpConfigStore: void loge(java.lang.String)>("BUG: Found UNASSIGNED IP on file, use DHCP");

        $r31 = <android.net.IpConfiguration$IpAssignment: android.net.IpConfiguration$IpAssignment DHCP>;

        r84.<android.net.IpConfiguration: android.net.IpConfiguration$IpAssignment ipAssignment> = $r31;

        goto label37;

     label36:
        virtualinvoke r0.<com.android.server.net.IpConfigStore: void loge(java.lang.String)>("Ignore invalid ip assignment while reading.");

        $r30 = <android.net.IpConfiguration$IpAssignment: android.net.IpConfiguration$IpAssignment UNASSIGNED>;

        r84.<android.net.IpConfiguration: android.net.IpConfiguration$IpAssignment ipAssignment> = $r30;

     label37:
        $r26 = <com.android.server.net.IpConfigStore$2: int[] $SwitchMap$android$net$IpConfiguration$ProxySettings>;

        $i2 = virtualinvoke r4.<android.net.IpConfiguration$ProxySettings: int ordinal()>();

        $i5 = $r26[$i2];

        tableswitch($i5)
        {
            case 1: goto label38;
            case 2: goto label39;
            case 3: goto label40;
            case 4: goto label41;
            default: goto label42;
        };

     label38:
        $r29 = new android.net.ProxyInfo;

        specialinvoke $r29.<android.net.ProxyInfo: void <init>(java.lang.String,int,java.lang.String)>(r6, i1, r8);

        r85 = $r29;

        r84.<android.net.IpConfiguration: android.net.IpConfiguration$ProxySettings proxySettings> = r4;

        r84.<android.net.IpConfiguration: android.net.ProxyInfo httpProxy> = r85;

        goto label43;

     label39:
        $r27 = new android.net.ProxyInfo;

        specialinvoke $r27.<android.net.ProxyInfo: void <init>(java.lang.String)>(r7);

        r86 = $r27;

        r84.<android.net.IpConfiguration: android.net.IpConfiguration$ProxySettings proxySettings> = r4;

        r84.<android.net.IpConfiguration: android.net.ProxyInfo httpProxy> = r86;

        goto label43;

     label40:
        r84.<android.net.IpConfiguration: android.net.IpConfiguration$ProxySettings proxySettings> = r4;

        goto label43;

     label41:
        virtualinvoke r0.<com.android.server.net.IpConfigStore: void loge(java.lang.String)>("BUG: Found UNASSIGNED proxy on file, use NONE");

        $r28 = <android.net.IpConfiguration$ProxySettings: android.net.IpConfiguration$ProxySettings NONE>;

        r84.<android.net.IpConfiguration: android.net.IpConfiguration$ProxySettings proxySettings> = $r28;

        goto label43;

     label42:
        virtualinvoke r0.<com.android.server.net.IpConfigStore: void loge(java.lang.String)>("Ignore invalid proxy settings while reading");

        $r32 = <android.net.IpConfiguration$ProxySettings: android.net.IpConfiguration$ProxySettings UNASSIGNED>;

        r84.<android.net.IpConfiguration: android.net.IpConfiguration$ProxySettings proxySettings> = $r32;

     label43:
        goto label45;

     label44:
        virtualinvoke r0.<com.android.server.net.IpConfigStore: void log(java.lang.String)>("Missing id while parsing configuration");

     label45:
        goto label07;

     label46:
        $r74 := @caughtexception;

     label47:
        if r3 == null goto label62;

     label48:
        virtualinvoke r3.<java.io.DataInputStream: void close()>();

     label49:
        goto label62;

     label50:
        $r69 := @caughtexception;

        goto label62;

     label51:
        $r60 := @caughtexception;

        r87 = $r60;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing configuration: ");

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r87);

        $r70 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.net.IpConfigStore: void loge(java.lang.String)>($r70);

     label52:
        if r3 == null goto label62;

     label53:
        virtualinvoke r3.<java.io.DataInputStream: void close()>();

     label54:
        goto label62;

     label55:
        $r68 := @caughtexception;

        goto label62;

     label56:
        $r75 := @caughtexception;

        r12 = $r75;

     label57:
        if r3 == null goto label61;

     label58:
        virtualinvoke r3.<java.io.DataInputStream: void close()>();

     label59:
        goto label61;

     label60:
        $r66 := @caughtexception;

     label61:
        throw r12;

     label62:
        return r2;

        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.IllegalArgumentException from label09 to label28 with label31;
        catch java.lang.IllegalArgumentException from label29 to label30 with label31;
        catch java.io.EOFException from label01 to label02 with label46;
        catch java.io.EOFException from label07 to label46 with label46;
        catch java.lang.Exception from label48 to label49 with label50;
        catch java.io.IOException from label01 to label02 with label51;
        catch java.io.IOException from label07 to label46 with label51;
        catch java.lang.Exception from label53 to label54 with label55;
        catch java.lang.Throwable from label01 to label02 with label56;
        catch java.lang.Throwable from label07 to label47 with label56;
        catch java.lang.Throwable from label51 to label52 with label56;
        catch java.lang.Exception from label58 to label59 with label60;
        catch java.lang.Throwable from label56 to label57 with label56;
    }

    protected void loge(java.lang.String)
    {
        com.android.server.net.IpConfigStore r0;
        java.lang.String r1;

        r0 := @this: com.android.server.net.IpConfigStore;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("IpConfigStore", r1);

        return;
    }

    protected void log(java.lang.String)
    {
        com.android.server.net.IpConfigStore r0;
        java.lang.String r1;

        r0 := @this: com.android.server.net.IpConfigStore;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("IpConfigStore", r1);

        return;
    }

    static boolean access$000(com.android.server.net.IpConfigStore, java.io.DataOutputStream, int, android.net.IpConfiguration) throws java.io.IOException
    {
        com.android.server.net.IpConfigStore r0;
        java.io.DataOutputStream r1;
        int i0;
        android.net.IpConfiguration r2;
        boolean $z0;

        r0 := @parameter0: com.android.server.net.IpConfigStore;

        r1 := @parameter1: java.io.DataOutputStream;

        i0 := @parameter2: int;

        r2 := @parameter3: android.net.IpConfiguration;

        $z0 = specialinvoke r0.<com.android.server.net.IpConfigStore: boolean writeConfig(java.io.DataOutputStream,int,android.net.IpConfiguration)>(r1, i0, r2);

        return $z0;
    }

    public static void <clinit>()
    {
        <com.android.server.net.IpConfigStore: int IPCONFIG_FILE_VERSION> = 2;

        <com.android.server.net.IpConfigStore: java.lang.String EOS> = "eos";

        <com.android.server.net.IpConfigStore: java.lang.String EXCLUSION_LIST_KEY> = "exclusionList";

        <com.android.server.net.IpConfigStore: java.lang.String PROXY_PAC_FILE> = "proxyPac";

        <com.android.server.net.IpConfigStore: java.lang.String PROXY_PORT_KEY> = "proxyPort";

        <com.android.server.net.IpConfigStore: java.lang.String PROXY_HOST_KEY> = "proxyHost";

        <com.android.server.net.IpConfigStore: java.lang.String PROXY_SETTINGS_KEY> = "proxySettings";

        <com.android.server.net.IpConfigStore: java.lang.String DNS_KEY> = "dns";

        <com.android.server.net.IpConfigStore: java.lang.String GATEWAY_KEY> = "gateway";

        <com.android.server.net.IpConfigStore: java.lang.String LINK_ADDRESS_KEY> = "linkAddress";

        <com.android.server.net.IpConfigStore: java.lang.String IP_ASSIGNMENT_KEY> = "ipAssignment";

        <com.android.server.net.IpConfigStore: java.lang.String ID_KEY> = "id";

        <com.android.server.net.IpConfigStore: boolean DBG> = 1;

        <com.android.server.net.IpConfigStore: java.lang.String TAG> = "IpConfigStore";

        return;
    }
}
