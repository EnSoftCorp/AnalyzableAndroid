public final class com.android.server.content.ContentService extends android.content.IContentService$Stub
{
    private static final java.lang.String TAG;
    private android.content.Context mContext;
    private boolean mFactoryTest;
    private final com.android.server.content.ContentService$ObserverNode mRootNode;
    private com.android.server.content.SyncManager mSyncManager;
    private final java.lang.Object mSyncManagerLock;

    private com.android.server.content.SyncManager getSyncManager()
    {
        com.android.server.content.ContentService r0;
        java.lang.Object r1, $r4;
        android.database.sqlite.SQLiteException r2, $r10;
        java.lang.Throwable r3, $r9;
        boolean $z0, $z1;
        com.android.server.content.SyncManager $r5, $r6, $r7;
        android.content.Context $r8;

        r0 := @this: com.android.server.content.ContentService;

        $z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("config.disable_network", 0);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r4 = r0.<com.android.server.content.ContentService: java.lang.Object mSyncManagerLock>;

        r1 = $r4;

        entermonitor $r4;

     label2:
        $r5 = r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager mSyncManager>;

        if $r5 != null goto label3;

        $r7 = new com.android.server.content.SyncManager;

        $r8 = r0.<com.android.server.content.ContentService: android.content.Context mContext>;

        $z1 = r0.<com.android.server.content.ContentService: boolean mFactoryTest>;

        specialinvoke $r7.<com.android.server.content.SyncManager: void <init>(android.content.Context,boolean)>($r8, $z1);

        r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager mSyncManager> = $r7;

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        r2 = $r10;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ContentService", "Can\'t create SyncManager", r2);

     label5:
        $r6 = r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager mSyncManager>;

        exitmonitor r1;

     label6:
        return $r6;

     label7:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r1;

     label8:
        throw r3;

        catch android.database.sqlite.SQLiteException from label2 to label3 with label4;
        catch java.lang.Throwable from label2 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    protected synchronized void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.content.ContentService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        long l0;
        com.android.server.content.ContentService$ObserverNode r4, $r14, $r16;
        int[] r5;
        android.util.SparseIntArray r6, $r13;
        java.util.ArrayList r7, $r15;
        int i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        java.lang.Throwable r8, r9, $r20, $r22;
        android.content.Context $r10;
        com.android.server.content.SyncManager $r11, $r12;
        com.android.server.content.ContentService$1 $r17;
        java.lang.Integer $r18, $r21;
        java.lang.Object $r19;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r10 = r0.<com.android.server.content.ContentService: android.content.Context mContext>;

        virtualinvoke $r10.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DUMP", "caller doesn\'t have the DUMP permission");

        l0 = staticinvoke <com.android.server.content.ContentService: long clearCallingIdentity()>();

     label01:
        $r12 = r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager mSyncManager>;

        if $r12 != null goto label02;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("No SyncManager created!  (Disk full?)");

        goto label03;

     label02:
        $r11 = r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager mSyncManager>;

        virtualinvoke $r11.<com.android.server.content.SyncManager: void dump(java.io.FileDescriptor,java.io.PrintWriter)>(r1, r2);

     label03:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Observer tree:");

        $r14 = r0.<com.android.server.content.ContentService: com.android.server.content.ContentService$ObserverNode mRootNode>;

        r4 = $r14;

        entermonitor $r14;

     label04:
        r5 = newarray (int)[2];

        $r13 = new android.util.SparseIntArray;

        specialinvoke $r13.<android.util.SparseIntArray: void <init>()>();

        r6 = $r13;

        $r16 = r0.<com.android.server.content.ContentService: com.android.server.content.ContentService$ObserverNode mRootNode>;

        virtualinvoke $r16.<com.android.server.content.ContentService$ObserverNode: void dumpLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],java.lang.String,java.lang.String,int[],android.util.SparseIntArray)>(r1, r2, r3, "", "  ", r5, r6);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r7 = $r15;

        i1 = 0;

     label05:
        $i3 = virtualinvoke r6.<android.util.SparseIntArray: int size()>();

        if i1 >= $i3 goto label06;

        $i8 = virtualinvoke r6.<android.util.SparseIntArray: int keyAt(int)>(i1);

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        virtualinvoke r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r21);

        i1 = i1 + 1;

        goto label05;

     label06:
        $r17 = new com.android.server.content.ContentService$1;

        specialinvoke $r17.<com.android.server.content.ContentService$1: void <init>(com.android.server.content.ContentService,android.util.SparseIntArray)>(r0, r6);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r7, $r17);

        i9 = 0;

     label07:
        $i5 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        if i9 >= $i5 goto label08;

        $r19 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        $r18 = (java.lang.Integer) $r19;

        i2 = virtualinvoke $r18.<java.lang.Integer: int intValue()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  pid ");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $i7 = virtualinvoke r6.<android.util.SparseIntArray: int get(int)>(i2);

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i7);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" observers");

        i9 = i9 + 1;

        goto label07;

     label08:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" Total number of nodes: ");

        $i4 = r5[0];

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i4);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" Total number of observers: ");

        $i6 = r5[1];

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i6);

        exitmonitor r4;

     label09:
        goto label12;

     label10:
        $r20 := @caughtexception;

        r8 = $r20;

        exitmonitor r4;

     label11:
        throw r8;

     label12:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l0);

        goto label15;

     label13:
        $r22 := @caughtexception;

        r9 = $r22;

     label14:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l0);

        throw r9;

     label15:
        return;

        catch java.lang.Throwable from label04 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label01 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        com.android.server.content.ContentService r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        java.lang.RuntimeException r3, $r4;
        boolean $z0, $z1;

        r0 := @this: com.android.server.content.ContentService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

     label1:
        $z0 = specialinvoke r0.<android.content.IContentService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

        $z1 = r3 instanceof java.lang.SecurityException;

        if $z1 != 0 goto label4;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ContentService", "Content Service Crash", r3);

     label4:
        throw r3;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    void <init>(android.content.Context, boolean)
    {
        java.lang.Object $r0;
        com.android.server.content.ContentService r1;
        android.content.Context r2;
        boolean z0;
        com.android.server.content.ContentService$ObserverNode $r3;

        r1 := @this: com.android.server.content.ContentService;

        r2 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        specialinvoke r1.<android.content.IContentService$Stub: void <init>()>();

        $r3 = new com.android.server.content.ContentService$ObserverNode;

        specialinvoke $r3.<com.android.server.content.ContentService$ObserverNode: void <init>(java.lang.String)>("");

        r1.<com.android.server.content.ContentService: com.android.server.content.ContentService$ObserverNode mRootNode> = $r3;

        r1.<com.android.server.content.ContentService: com.android.server.content.SyncManager mSyncManager> = null;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        r1.<com.android.server.content.ContentService: java.lang.Object mSyncManagerLock> = $r0;

        r1.<com.android.server.content.ContentService: android.content.Context mContext> = r2;

        r1.<com.android.server.content.ContentService: boolean mFactoryTest> = z0;

        return;
    }

    public void systemReady()
    {
        com.android.server.content.ContentService r0;

        r0 := @this: com.android.server.content.ContentService;

        specialinvoke r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager getSyncManager()>();

        return;
    }

    public void registerContentObserver(android.net.Uri, boolean, android.database.IContentObserver, int)
    {
        com.android.server.content.ContentService r0;
        android.net.Uri r1;
        boolean z0;
        android.database.IContentObserver r2;
        int i0, $i1, $i2;
        com.android.server.content.ContentService$ObserverNode r3, $r6, $r7, $r8;
        java.lang.Throwable r4, $r14;
        java.lang.IllegalArgumentException $r5;
        java.security.InvalidParameterException $r9;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.String $r13;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: android.net.Uri;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.database.IContentObserver;

        i0 := @parameter3: int;

        if r2 == null goto label1;

        if r1 != null goto label2;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You must pass a valid uri and observer");

        throw $r5;

     label2:
        specialinvoke r0.<com.android.server.content.ContentService: void enforceCrossUserPermission(int,java.lang.String)>(i0, "no permission to observe other users\' provider view");

        if i0 >= 0 goto label4;

        if i0 != -2 goto label3;

        i0 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        goto label4;

     label3:
        if i0 == -1 goto label4;

        $r9 = new java.security.InvalidParameterException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad user handle for registerContentObserver: ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.security.InvalidParameterException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label4:
        $r6 = r0.<com.android.server.content.ContentService: com.android.server.content.ContentService$ObserverNode mRootNode>;

        r3 = $r6;

        entermonitor $r6;

     label5:
        $r7 = r0.<com.android.server.content.ContentService: com.android.server.content.ContentService$ObserverNode mRootNode>;

        $r8 = r0.<com.android.server.content.ContentService: com.android.server.content.ContentService$ObserverNode mRootNode>;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke $r7.<com.android.server.content.ContentService$ObserverNode: void addObserverLocked(android.net.Uri,android.database.IContentObserver,boolean,java.lang.Object,int,int,int)>(r1, r2, z0, $r8, $i1, $i2, i0);

        exitmonitor r3;

     label6:
        goto label9;

     label7:
        $r14 := @caughtexception;

        r4 = $r14;

        exitmonitor r3;

     label8:
        throw r4;

     label9:
        return;

        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void registerContentObserver(android.net.Uri, boolean, android.database.IContentObserver)
    {
        com.android.server.content.ContentService r0;
        android.net.Uri r1;
        boolean z0;
        android.database.IContentObserver r2;
        int $i0;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: android.net.Uri;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.database.IContentObserver;

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        virtualinvoke r0.<com.android.server.content.ContentService: void registerContentObserver(android.net.Uri,boolean,android.database.IContentObserver,int)>(r1, z0, r2, $i0);

        return;
    }

    public void unregisterContentObserver(android.database.IContentObserver)
    {
        com.android.server.content.ContentService r0;
        android.database.IContentObserver r1;
        com.android.server.content.ContentService$ObserverNode r2, $r4, $r5;
        java.lang.Throwable r3, $r7;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: android.database.IContentObserver;

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You must pass a valid observer");

        throw $r6;

     label1:
        $r4 = r0.<com.android.server.content.ContentService: com.android.server.content.ContentService$ObserverNode mRootNode>;

        r2 = $r4;

        entermonitor $r4;

     label2:
        $r5 = r0.<com.android.server.content.ContentService: com.android.server.content.ContentService$ObserverNode mRootNode>;

        virtualinvoke $r5.<com.android.server.content.ContentService$ObserverNode: boolean removeObserverLocked(android.database.IContentObserver)>(r1);

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void notifyChange(android.net.Uri, android.database.IContentObserver, boolean, boolean, int)
    {
        com.android.server.content.ContentService r0;
        android.net.Uri r1;
        android.database.IContentObserver r2, $r20, $r21, $r43, $r48;
        boolean z0, z1, $z2, $z3, $z4;
        int i0, i1, i2, i4, i5, i9, i10;
        long l3;
        java.util.ArrayList r3, r9, $r14;
        com.android.server.content.ContentService$ObserverNode r4, r8, $r15, $r16, $r42, $r50;
        java.lang.Throwable r5, r11, r13, $r51, $r52, $r54;
        com.android.server.content.ContentService$ObserverCall r6;
        android.os.IBinder r10, $r49;
        com.android.server.content.ContentService$ObserverNode$ObserverEntry r12;
        java.lang.String $r17, $r25, $r32, $r46;
        java.lang.Object $r18, $r47;
        java.lang.StringBuilder $r19, $r22, $r23, $r24, $r26, $r27, $r28, $r29, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r44, $r45;
        java.security.InvalidParameterException $r30;
        android.content.Context $r31;
        android.os.RemoteException $r41;
        com.android.server.content.SyncManager r55;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.database.IContentObserver;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i0 := @parameter4: int;

        $z2 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("ContentService", 2);

        if $z2 == 0 goto label01;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Notifying update of ");

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r40 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ");

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from observer ");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r44 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", syncToNetwork ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ContentService", $r46);

     label01:
        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if i0 == i1 goto label02;

        $r31 = r0.<com.android.server.content.ContentService: android.content.Context mContext>;

        virtualinvoke $r31.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS", "no permission to notify other users");

     label02:
        if i0 >= 0 goto label04;

        if i0 != -2 goto label03;

        i0 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        goto label04;

     label03:
        if i0 == -1 goto label04;

        $r30 = new java.security.InvalidParameterException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad user handle for notifyChange: ");

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.security.InvalidParameterException: void <init>(java.lang.String)>($r32);

        throw $r30;

     label04:
        i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l3 = staticinvoke <com.android.server.content.ContentService: long clearCallingIdentity()>();

     label05:
        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r3 = $r14;

        $r16 = r0.<com.android.server.content.ContentService: com.android.server.content.ContentService$ObserverNode mRootNode>;

        r4 = $r16;

        entermonitor $r16;

     label06:
        $r15 = r0.<com.android.server.content.ContentService: com.android.server.content.ContentService$ObserverNode mRootNode>;

        virtualinvoke $r15.<com.android.server.content.ContentService$ObserverNode: void collectObserversLocked(android.net.Uri,int,android.database.IContentObserver,boolean,int,java.util.ArrayList)>(r1, 0, r2, z0, i0, r3);

        exitmonitor r4;

     label07:
        goto label10;

     label08:
        $r51 := @caughtexception;

        r5 = $r51;

        exitmonitor r4;

     label09:
        throw r5;

     label10:
        i9 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i10 = 0;

     label11:
        if i10 >= i9 goto label23;

        $r18 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        r6 = (com.android.server.content.ContentService$ObserverCall) $r18;

     label12:
        $r20 = r6.<com.android.server.content.ContentService$ObserverCall: android.database.IContentObserver mObserver>;

        $z4 = r6.<com.android.server.content.ContentService$ObserverCall: boolean mSelfChange>;

        interfaceinvoke $r20.<android.database.IContentObserver: void onChange(boolean,android.net.Uri,int)>($z4, r1, i0);

        $z3 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("ContentService", 2);

        if $z3 == 0 goto label13;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Notified ");

        $r21 = r6.<com.android.server.content.ContentService$ObserverCall: android.database.IContentObserver mObserver>;

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("update at ");

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("ContentService", $r25);

     label13:
        goto label22;

     label14:
        $r41 := @caughtexception;

        $r42 = r0.<com.android.server.content.ContentService: com.android.server.content.ContentService$ObserverNode mRootNode>;

        r8 = $r42;

        entermonitor $r42;

     label15:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ContentService", "Found dead observer, removing");

        $r43 = r6.<com.android.server.content.ContentService$ObserverCall: android.database.IContentObserver mObserver>;

        r10 = interfaceinvoke $r43.<android.database.IContentObserver: android.os.IBinder asBinder()>();

        $r50 = r6.<com.android.server.content.ContentService$ObserverCall: com.android.server.content.ContentService$ObserverNode mNode>;

        r9 = staticinvoke <com.android.server.content.ContentService$ObserverNode: java.util.ArrayList access$000(com.android.server.content.ContentService$ObserverNode)>($r50);

        i5 = virtualinvoke r9.<java.util.ArrayList: int size()>();

        i4 = 0;

     label16:
        if i4 >= i5 goto label18;

        $r47 = virtualinvoke r9.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r12 = (com.android.server.content.ContentService$ObserverNode$ObserverEntry) $r47;

        $r48 = r12.<com.android.server.content.ContentService$ObserverNode$ObserverEntry: android.database.IContentObserver observer>;

        $r49 = interfaceinvoke $r48.<android.database.IContentObserver: android.os.IBinder asBinder()>();

        if $r49 != r10 goto label17;

        virtualinvoke r9.<java.util.ArrayList: java.lang.Object remove(int)>(i4);

        i4 = i4 + -1;

        i5 = i5 + -1;

     label17:
        i4 = i4 + 1;

        goto label16;

     label18:
        exitmonitor r8;

     label19:
        goto label22;

     label20:
        $r54 := @caughtexception;

        r11 = $r54;

        exitmonitor r8;

     label21:
        throw r11;

     label22:
        i10 = i10 + 1;

        goto label11;

     label23:
        if z1 == 0 goto label24;

        r55 = specialinvoke r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager getSyncManager()>();

        if r55 == null goto label24;

        $r17 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        virtualinvoke r55.<com.android.server.content.SyncManager: void scheduleLocalSync(android.accounts.Account,int,int,java.lang.String)>(null, i1, i2, $r17);

     label24:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l3);

        goto label27;

     label25:
        $r52 := @caughtexception;

        r13 = $r52;

     label26:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l3);

        throw r13;

     label27:
        return;

        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch android.os.RemoteException from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
        catch java.lang.Throwable from label05 to label24 with label25;
        catch java.lang.Throwable from label25 to label26 with label25;
    }

    public void notifyChange(android.net.Uri, android.database.IContentObserver, boolean, boolean)
    {
        com.android.server.content.ContentService r0;
        android.net.Uri r1;
        android.database.IContentObserver r2;
        boolean z0, z1;
        int $i0;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.database.IContentObserver;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        virtualinvoke r0.<com.android.server.content.ContentService: void notifyChange(android.net.Uri,android.database.IContentObserver,boolean,boolean,int)>(r1, r2, z0, z1, $i0);

        return;
    }

    public void requestSync(android.accounts.Account, java.lang.String, android.os.Bundle)
    {
        com.android.server.content.ContentService r0;
        android.accounts.Account r1;
        java.lang.String r2;
        android.os.Bundle r3;
        int i0, i1;
        long l2;
        com.android.server.content.SyncManager r4;
        java.lang.Throwable r5, $r6;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        staticinvoke <android.content.ContentResolver: void validateSyncExtrasBundle(android.os.Bundle)>(r3);

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l2 = staticinvoke <com.android.server.content.ContentService: long clearCallingIdentity()>();

     label1:
        r4 = specialinvoke r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager getSyncManager()>();

        if r4 == null goto label2;

        virtualinvoke r4.<com.android.server.content.SyncManager: void scheduleSync(android.accounts.Account,int,int,java.lang.String,android.os.Bundle,long,long,boolean)>(r1, i0, i1, r2, r3, 0L, 0L, 0);

     label2:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l2);

        goto label5;

     label3:
        $r6 := @caughtexception;

        r5 = $r6;

     label4:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l2);

        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void sync(android.content.SyncRequest)
    {
        com.android.server.content.ContentService r0;
        android.content.SyncRequest r1;
        int $i0;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: android.content.SyncRequest;

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        virtualinvoke r0.<com.android.server.content.ContentService: void syncAsUser(android.content.SyncRequest,int)>(r1, $i0);

        return;
    }

    public void syncAsUser(android.content.SyncRequest, int)
    {
        com.android.server.content.ContentService r0;
        android.content.SyncRequest r1;
        int i0, i1;
        long l2, l3, l4, l5, l8;
        com.android.server.content.SyncManager r2, $r14;
        android.os.Bundle r3;
        com.android.server.content.SyncStorageEngine$EndPoint r4, $r12;
        java.lang.StringBuilder $r5, $r7, $r8, $r17, $r19, $r21, $r22;
        java.lang.Throwable r6, $r23;
        java.lang.String $r9, $r10, $r16, $r20;
        boolean $z0;
        android.accounts.Account $r11, $r15;
        android.content.Context $r13;
        byte $b6;
        com.android.server.content.SyncStorageEngine $r18;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: android.content.SyncRequest;

        i0 := @parameter1: int;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no permission to request sync as user: ");

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.content.ContentService: void enforceCrossUserPermission(int,java.lang.String)>(i0, $r9);

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l2 = staticinvoke <com.android.server.content.ContentService: long clearCallingIdentity()>();

     label1:
        r2 = specialinvoke r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager getSyncManager()>();

        if r2 != null goto label3;

     label2:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l2);

        return;

     label3:
        r3 = virtualinvoke r1.<android.content.SyncRequest: android.os.Bundle getBundle()>();

        l3 = virtualinvoke r1.<android.content.SyncRequest: long getSyncFlexTime()>();

        l4 = virtualinvoke r1.<android.content.SyncRequest: long getSyncRunTime()>();

        $z0 = virtualinvoke r1.<android.content.SyncRequest: boolean isPeriodic()>();

        if $z0 == 0 goto label5;

        $r13 = r0.<com.android.server.content.ContentService: android.content.Context mContext>;

        virtualinvoke $r13.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.WRITE_SYNC_SETTINGS", "no permission to write the sync settings");

        $r12 = new com.android.server.content.SyncStorageEngine$EndPoint;

        $r15 = virtualinvoke r1.<android.content.SyncRequest: android.accounts.Account getAccount()>();

        $r16 = virtualinvoke r1.<android.content.SyncRequest: java.lang.String getProvider()>();

        specialinvoke $r12.<com.android.server.content.SyncStorageEngine$EndPoint: void <init>(android.accounts.Account,java.lang.String,int)>($r15, $r16, i0);

        r4 = $r12;

        $b6 = l4 cmp 60L;

        if $b6 >= 0 goto label4;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested poll frequency of ");

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l4);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds being rounded up to 60 seconds.");

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ContentService", $r20);

        l4 = 60L;

     label4:
        $r14 = specialinvoke r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager getSyncManager()>();

        $r18 = virtualinvoke $r14.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine getSyncStorageEngine()>();

        virtualinvoke $r18.<com.android.server.content.SyncStorageEngine: void updateOrAddPeriodicSync(com.android.server.content.SyncStorageEngine$EndPoint,long,long,android.os.Bundle)>(r4, l4, l3, r3);

        goto label6;

     label5:
        l8 = l3 * 1000L;

        l5 = l4 * 1000L;

        $r11 = virtualinvoke r1.<android.content.SyncRequest: android.accounts.Account getAccount()>();

        $r10 = virtualinvoke r1.<android.content.SyncRequest: java.lang.String getProvider()>();

        virtualinvoke r2.<com.android.server.content.SyncManager: void scheduleSync(android.accounts.Account,int,int,java.lang.String,android.os.Bundle,long,long,boolean)>($r11, i0, i1, $r10, r3, l8, l5, 0);

     label6:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l2);

        goto label9;

     label7:
        $r23 := @caughtexception;

        r6 = $r23;

     label8:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l2);

        throw r6;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void cancelSync(android.accounts.Account, java.lang.String, android.content.ComponentName)
    {
        com.android.server.content.ContentService r0;
        android.accounts.Account r1;
        java.lang.String r2;
        android.content.ComponentName r3;
        int $i0;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.ComponentName;

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        virtualinvoke r0.<com.android.server.content.ContentService: void cancelSyncAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>(r1, r2, r3, $i0);

        return;
    }

    public void cancelSyncAsUser(android.accounts.Account, java.lang.String, android.content.ComponentName, int)
    {
        com.android.server.content.ContentService r0;
        android.accounts.Account r1;
        java.lang.String r2, $r10;
        android.content.ComponentName r3;
        int i0, $i2;
        long l1;
        com.android.server.content.SyncManager r4;
        com.android.server.content.SyncStorageEngine$EndPoint r5, $r11, $r12;
        java.lang.Throwable r6, $r14;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.IllegalArgumentException $r13;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.ComponentName;

        i0 := @parameter3: int;

        if r2 == null goto label1;

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i2 != 0 goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Authority must be non-empty");

        throw $r13;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no permission to modify the sync settings for user ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.content.ContentService: void enforceCrossUserPermission(int,java.lang.String)>(i0, $r10);

        l1 = staticinvoke <com.android.server.content.ContentService: long clearCallingIdentity()>();

     label2:
        r4 = specialinvoke r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager getSyncManager()>();

        if r4 == null goto label5;

        if r3 != null goto label3;

        $r11 = new com.android.server.content.SyncStorageEngine$EndPoint;

        specialinvoke $r11.<com.android.server.content.SyncStorageEngine$EndPoint: void <init>(android.accounts.Account,java.lang.String,int)>(r1, r2, i0);

        r5 = $r11;

        goto label4;

     label3:
        $r12 = new com.android.server.content.SyncStorageEngine$EndPoint;

        specialinvoke $r12.<com.android.server.content.SyncStorageEngine$EndPoint: void <init>(android.content.ComponentName,int)>(r3, i0);

        r5 = $r12;

     label4:
        virtualinvoke r4.<com.android.server.content.SyncManager: void clearScheduledSyncOperations(com.android.server.content.SyncStorageEngine$EndPoint)>(r5);

        virtualinvoke r4.<com.android.server.content.SyncManager: void cancelActiveSync(com.android.server.content.SyncStorageEngine$EndPoint,android.os.Bundle)>(r5, null);

     label5:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        goto label8;

     label6:
        $r14 := @caughtexception;

        r6 = $r14;

     label7:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        throw r6;

     label8:
        return;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void cancelRequest(android.content.SyncRequest)
    {
        com.android.server.content.ContentService r0;
        android.content.SyncRequest r1;
        com.android.server.content.SyncManager r2, $r11;
        int i0;
        long l1;
        com.android.server.content.SyncStorageEngine$EndPoint r3, $r10;
        android.os.Bundle r4, $r8, $r9;
        android.accounts.Account r5;
        java.lang.String r6;
        java.lang.Throwable r7, $r13;
        boolean $z0;
        android.content.Context $r12;
        com.android.server.content.SyncStorageEngine $r14;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: android.content.SyncRequest;

        r2 = specialinvoke r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager getSyncManager()>();

        if r2 != null goto label1;

        return;

     label1:
        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        l1 = staticinvoke <com.android.server.content.ContentService: long clearCallingIdentity()>();

     label2:
        $r8 = new android.os.Bundle;

        $r9 = virtualinvoke r1.<android.content.SyncRequest: android.os.Bundle getBundle()>();

        specialinvoke $r8.<android.os.Bundle: void <init>(android.os.Bundle)>($r9);

        r4 = $r8;

        r5 = virtualinvoke r1.<android.content.SyncRequest: android.accounts.Account getAccount()>();

        r6 = virtualinvoke r1.<android.content.SyncRequest: java.lang.String getProvider()>();

        $r10 = new com.android.server.content.SyncStorageEngine$EndPoint;

        specialinvoke $r10.<com.android.server.content.SyncStorageEngine$EndPoint: void <init>(android.accounts.Account,java.lang.String,int)>(r5, r6, i0);

        r3 = $r10;

        $z0 = virtualinvoke r1.<android.content.SyncRequest: boolean isPeriodic()>();

        if $z0 == 0 goto label3;

        $r12 = r0.<com.android.server.content.ContentService: android.content.Context mContext>;

        virtualinvoke $r12.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.WRITE_SYNC_SETTINGS", "no permission to write the sync settings");

        $r11 = specialinvoke r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager getSyncManager()>();

        $r14 = virtualinvoke $r11.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine getSyncStorageEngine()>();

        virtualinvoke $r14.<com.android.server.content.SyncStorageEngine: void removePeriodicSync(com.android.server.content.SyncStorageEngine$EndPoint,android.os.Bundle)>(r3, r4);

     label3:
        virtualinvoke r2.<com.android.server.content.SyncManager: void cancelScheduledSyncOperation(com.android.server.content.SyncStorageEngine$EndPoint,android.os.Bundle)>(r3, r4);

        virtualinvoke r2.<com.android.server.content.SyncManager: void cancelActiveSync(com.android.server.content.SyncStorageEngine$EndPoint,android.os.Bundle)>(r3, r4);

     label4:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        goto label7;

     label5:
        $r13 := @caughtexception;

        r7 = $r13;

     label6:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        throw r7;

     label7:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public android.content.SyncAdapterType[] getSyncAdapterTypes()
    {
        com.android.server.content.ContentService r0;
        int $i0;
        android.content.SyncAdapterType[] $r1;

        r0 := @this: com.android.server.content.ContentService;

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r1 = virtualinvoke r0.<com.android.server.content.ContentService: android.content.SyncAdapterType[] getSyncAdapterTypesAsUser(int)>($i0);

        return $r1;
    }

    public android.content.SyncAdapterType[] getSyncAdapterTypesAsUser(int)
    {
        com.android.server.content.ContentService r0;
        int i0;
        long l1;
        com.android.server.content.SyncManager r1;
        android.content.SyncAdapterType[] r2;
        java.lang.Throwable r3, $r8;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.android.server.content.ContentService;

        i0 := @parameter0: int;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no permission to read sync settings for user ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.content.ContentService: void enforceCrossUserPermission(int,java.lang.String)>(i0, $r7);

        l1 = staticinvoke <com.android.server.content.ContentService: long clearCallingIdentity()>();

     label1:
        r1 = specialinvoke r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager getSyncManager()>();

        r2 = virtualinvoke r1.<com.android.server.content.SyncManager: android.content.SyncAdapterType[] getSyncAdapterTypes(int)>(i0);

     label2:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        return r2;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

     label4:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean getSyncAutomatically(android.accounts.Account, java.lang.String)
    {
        com.android.server.content.ContentService r0;
        android.accounts.Account r1;
        java.lang.String r2;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $z0 = virtualinvoke r0.<com.android.server.content.ContentService: boolean getSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,int)>(r1, r2, $i0);

        return $z0;
    }

    public boolean getSyncAutomaticallyAsUser(android.accounts.Account, java.lang.String, int)
    {
        com.android.server.content.ContentService r0;
        android.accounts.Account r1;
        java.lang.String r2, $r8;
        int i0;
        long l1;
        com.android.server.content.SyncManager r3;
        boolean z0;
        java.lang.Throwable r4, $r11;
        java.lang.StringBuilder $r5, $r6, $r7;
        android.content.Context $r9;
        com.android.server.content.SyncStorageEngine $r10;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no permission to read the sync settings for user ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.content.ContentService: void enforceCrossUserPermission(int,java.lang.String)>(i0, $r8);

        $r9 = r0.<com.android.server.content.ContentService: android.content.Context mContext>;

        virtualinvoke $r9.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.READ_SYNC_SETTINGS", "no permission to read the sync settings");

        l1 = staticinvoke <com.android.server.content.ContentService: long clearCallingIdentity()>();

     label1:
        r3 = specialinvoke r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager getSyncManager()>();

        if r3 == null goto label3;

        $r10 = virtualinvoke r3.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine getSyncStorageEngine()>();

        z0 = virtualinvoke $r10.<com.android.server.content.SyncStorageEngine: boolean getSyncAutomatically(android.accounts.Account,int,java.lang.String)>(r1, i0, r2);

     label2:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        return z0;

     label3:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        goto label6;

     label4:
        $r11 := @caughtexception;

        r4 = $r11;

     label5:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        throw r4;

     label6:
        return 0;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void setSyncAutomatically(android.accounts.Account, java.lang.String, boolean)
    {
        com.android.server.content.ContentService r0;
        android.accounts.Account r1;
        java.lang.String r2;
        boolean z0;
        int $i0;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        virtualinvoke r0.<com.android.server.content.ContentService: void setSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,boolean,int)>(r1, r2, z0, $i0);

        return;
    }

    public void setSyncAutomaticallyAsUser(android.accounts.Account, java.lang.String, boolean, int)
    {
        com.android.server.content.ContentService r0;
        android.accounts.Account r1;
        java.lang.String r2, $r9;
        boolean z0, $z1;
        int i0;
        long l1;
        com.android.server.content.SyncManager r3;
        java.lang.Throwable r4, $r11;
        android.content.Context $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        com.android.server.content.SyncStorageEngine $r10;
        java.lang.IllegalArgumentException $r12;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 == 0 goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Authority must be non-empty");

        throw $r12;

     label1:
        $r5 = r0.<com.android.server.content.ContentService: android.content.Context mContext>;

        virtualinvoke $r5.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.WRITE_SYNC_SETTINGS", "no permission to write the sync settings");

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no permission to modify the sync settings for user ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.content.ContentService: void enforceCrossUserPermission(int,java.lang.String)>(i0, $r9);

        l1 = staticinvoke <com.android.server.content.ContentService: long clearCallingIdentity()>();

     label2:
        r3 = specialinvoke r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager getSyncManager()>();

        if r3 == null goto label3;

        $r10 = virtualinvoke r3.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine getSyncStorageEngine()>();

        virtualinvoke $r10.<com.android.server.content.SyncStorageEngine: void setSyncAutomatically(android.accounts.Account,int,java.lang.String,boolean)>(r1, i0, r2, z0);

     label3:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        goto label6;

     label4:
        $r11 := @caughtexception;

        r4 = $r11;

     label5:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        throw r4;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void addPeriodicSync(android.accounts.Account, java.lang.String, android.os.Bundle, long)
    {
        com.android.server.content.ContentService r0;
        android.accounts.Account r1;
        java.lang.String r2, $r13;
        android.os.Bundle r3;
        long l0, l2, l3;
        int i1;
        com.android.server.content.SyncStorageEngine$EndPoint r4, $r7;
        java.lang.Throwable r5, $r16;
        boolean $z0;
        android.content.Context $r6;
        byte $b4;
        com.android.server.content.SyncStorageEngine $r8;
        com.android.server.content.SyncManager $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r14;
        java.lang.IllegalArgumentException $r15, $r17;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        l0 := @parameter3: long;

        if r1 != null goto label1;

        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Account must not be null");

        throw $r17;

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label2;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Authority must not be empty.");

        throw $r15;

     label2:
        $r6 = r0.<com.android.server.content.ContentService: android.content.Context mContext>;

        virtualinvoke $r6.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.WRITE_SYNC_SETTINGS", "no permission to write the sync settings");

        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $b4 = l0 cmp 60L;

        if $b4 >= 0 goto label3;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested poll frequency of ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seconds being rounded up to 60 seconds.");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ContentService", $r13);

        l0 = 60L;

     label3:
        l2 = staticinvoke <com.android.server.content.SyncStorageEngine: long calculateDefaultFlexTime(long)>(l0);

        l3 = staticinvoke <com.android.server.content.ContentService: long clearCallingIdentity()>();

     label4:
        $r7 = new com.android.server.content.SyncStorageEngine$EndPoint;

        specialinvoke $r7.<com.android.server.content.SyncStorageEngine$EndPoint: void <init>(android.accounts.Account,java.lang.String,int)>(r1, r2, i1);

        r4 = $r7;

        $r9 = specialinvoke r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager getSyncManager()>();

        $r8 = virtualinvoke $r9.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine getSyncStorageEngine()>();

        virtualinvoke $r8.<com.android.server.content.SyncStorageEngine: void updateOrAddPeriodicSync(com.android.server.content.SyncStorageEngine$EndPoint,long,long,android.os.Bundle)>(r4, l0, l2, r3);

     label5:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l3);

        goto label8;

     label6:
        $r16 := @caughtexception;

        r5 = $r16;

     label7:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l3);

        throw r5;

     label8:
        return;

        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void removePeriodicSync(android.accounts.Account, java.lang.String, android.os.Bundle)
    {
        com.android.server.content.ContentService r0;
        android.accounts.Account r1;
        java.lang.String r2;
        android.os.Bundle r3;
        int i0;
        long l1;
        java.lang.Throwable r4, $r10;
        boolean $z0;
        android.content.Context $r5;
        com.android.server.content.SyncManager $r6;
        com.android.server.content.SyncStorageEngine $r7;
        com.android.server.content.SyncStorageEngine$EndPoint $r8;
        java.lang.IllegalArgumentException $r9, $r11;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        if r1 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Account must not be null");

        throw $r11;

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Authority must not be empty");

        throw $r9;

     label2:
        $r5 = r0.<com.android.server.content.ContentService: android.content.Context mContext>;

        virtualinvoke $r5.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.WRITE_SYNC_SETTINGS", "no permission to write the sync settings");

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        l1 = staticinvoke <com.android.server.content.ContentService: long clearCallingIdentity()>();

     label3:
        $r6 = specialinvoke r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager getSyncManager()>();

        $r7 = virtualinvoke $r6.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine getSyncStorageEngine()>();

        $r8 = new com.android.server.content.SyncStorageEngine$EndPoint;

        specialinvoke $r8.<com.android.server.content.SyncStorageEngine$EndPoint: void <init>(android.accounts.Account,java.lang.String,int)>(r1, r2, i0);

        virtualinvoke $r7.<com.android.server.content.SyncStorageEngine: void removePeriodicSync(com.android.server.content.SyncStorageEngine$EndPoint,android.os.Bundle)>($r8, r3);

     label4:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        goto label7;

     label5:
        $r10 := @caughtexception;

        r4 = $r10;

     label6:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.util.List getPeriodicSyncs(android.accounts.Account, java.lang.String, android.content.ComponentName)
    {
        com.android.server.content.ContentService r0;
        android.accounts.Account r1;
        java.lang.String r2;
        android.content.ComponentName r3;
        int i0;
        long l1;
        java.util.List r4;
        java.lang.Throwable r5, $r11;
        boolean $z0;
        android.content.Context $r6;
        com.android.server.content.SyncManager $r7;
        com.android.server.content.SyncStorageEngine $r8;
        com.android.server.content.SyncStorageEngine$EndPoint $r9;
        java.lang.IllegalArgumentException $r10, $r12;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.ComponentName;

        if r1 != null goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Account must not be null");

        throw $r12;

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label2;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Authority must not be empty");

        throw $r10;

     label2:
        $r6 = r0.<com.android.server.content.ContentService: android.content.Context mContext>;

        virtualinvoke $r6.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.READ_SYNC_SETTINGS", "no permission to read the sync settings");

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        l1 = staticinvoke <com.android.server.content.ContentService: long clearCallingIdentity()>();

     label3:
        $r7 = specialinvoke r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager getSyncManager()>();

        $r8 = virtualinvoke $r7.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine getSyncStorageEngine()>();

        $r9 = new com.android.server.content.SyncStorageEngine$EndPoint;

        specialinvoke $r9.<com.android.server.content.SyncStorageEngine$EndPoint: void <init>(android.accounts.Account,java.lang.String,int)>(r1, r2, i0);

        r4 = virtualinvoke $r8.<com.android.server.content.SyncStorageEngine: java.util.List getPeriodicSyncs(com.android.server.content.SyncStorageEngine$EndPoint)>($r9);

     label4:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        return r4;

     label5:
        $r11 := @caughtexception;

        r5 = $r11;

     label6:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        throw r5;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int getIsSyncable(android.accounts.Account, java.lang.String)
    {
        com.android.server.content.ContentService r0;
        android.accounts.Account r1;
        java.lang.String r2;
        int $i0, $i1;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $i1 = virtualinvoke r0.<com.android.server.content.ContentService: int getIsSyncableAsUser(android.accounts.Account,java.lang.String,int)>(r1, r2, $i0);

        return $i1;
    }

    public int getIsSyncableAsUser(android.accounts.Account, java.lang.String, int)
    {
        com.android.server.content.ContentService r0;
        android.accounts.Account r1;
        java.lang.String r2, $r8;
        int i0, i2;
        long l1;
        com.android.server.content.SyncManager r3;
        java.lang.Throwable r4, $r10;
        java.lang.StringBuilder $r5, $r6, $r7;
        android.content.Context $r9;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no permission to read the sync settings for user ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.content.ContentService: void enforceCrossUserPermission(int,java.lang.String)>(i0, $r8);

        $r9 = r0.<com.android.server.content.ContentService: android.content.Context mContext>;

        virtualinvoke $r9.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.READ_SYNC_SETTINGS", "no permission to read the sync settings");

        l1 = staticinvoke <com.android.server.content.ContentService: long clearCallingIdentity()>();

     label1:
        r3 = specialinvoke r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager getSyncManager()>();

        if r3 == null goto label3;

        i2 = virtualinvoke r3.<com.android.server.content.SyncManager: int getIsSyncable(android.accounts.Account,int,java.lang.String)>(r1, i0, r2);

     label2:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        return i2;

     label3:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        goto label6;

     label4:
        $r10 := @caughtexception;

        r4 = $r10;

     label5:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        throw r4;

     label6:
        return -1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void setIsSyncable(android.accounts.Account, java.lang.String, int)
    {
        com.android.server.content.ContentService r0;
        android.accounts.Account r1;
        java.lang.String r2;
        int i0, i1;
        long l2;
        com.android.server.content.SyncManager r3;
        java.lang.Throwable r4, $r8;
        boolean $z0;
        android.content.Context $r5;
        com.android.server.content.SyncStorageEngine $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Authority must not be empty");

        throw $r7;

     label1:
        $r5 = r0.<com.android.server.content.ContentService: android.content.Context mContext>;

        virtualinvoke $r5.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.WRITE_SYNC_SETTINGS", "no permission to write the sync settings");

        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        l2 = staticinvoke <com.android.server.content.ContentService: long clearCallingIdentity()>();

     label2:
        r3 = specialinvoke r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager getSyncManager()>();

        if r3 == null goto label3;

        $r6 = virtualinvoke r3.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine getSyncStorageEngine()>();

        virtualinvoke $r6.<com.android.server.content.SyncStorageEngine: void setIsSyncable(android.accounts.Account,int,java.lang.String,int)>(r1, i1, r2, i0);

     label3:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l2);

        goto label6;

     label4:
        $r8 := @caughtexception;

        r4 = $r8;

     label5:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l2);

        throw r4;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean getMasterSyncAutomatically()
    {
        com.android.server.content.ContentService r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.content.ContentService;

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $z0 = virtualinvoke r0.<com.android.server.content.ContentService: boolean getMasterSyncAutomaticallyAsUser(int)>($i0);

        return $z0;
    }

    public boolean getMasterSyncAutomaticallyAsUser(int)
    {
        com.android.server.content.ContentService r0;
        int i0;
        long l1;
        com.android.server.content.SyncManager r1;
        boolean z0;
        java.lang.Throwable r2, $r9;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        android.content.Context $r7;
        com.android.server.content.SyncStorageEngine $r8;

        r0 := @this: com.android.server.content.ContentService;

        i0 := @parameter0: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no permission to read the sync settings for user ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.content.ContentService: void enforceCrossUserPermission(int,java.lang.String)>(i0, $r6);

        $r7 = r0.<com.android.server.content.ContentService: android.content.Context mContext>;

        virtualinvoke $r7.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.READ_SYNC_SETTINGS", "no permission to read the sync settings");

        l1 = staticinvoke <com.android.server.content.ContentService: long clearCallingIdentity()>();

     label1:
        r1 = specialinvoke r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager getSyncManager()>();

        if r1 == null goto label3;

        $r8 = virtualinvoke r1.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine getSyncStorageEngine()>();

        z0 = virtualinvoke $r8.<com.android.server.content.SyncStorageEngine: boolean getMasterSyncAutomatically(int)>(i0);

     label2:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        return z0;

     label3:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        goto label6;

     label4:
        $r9 := @caughtexception;

        r2 = $r9;

     label5:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        throw r2;

     label6:
        return 0;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void setMasterSyncAutomatically(boolean)
    {
        com.android.server.content.ContentService r0;
        boolean z0;
        int $i0;

        r0 := @this: com.android.server.content.ContentService;

        z0 := @parameter0: boolean;

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        virtualinvoke r0.<com.android.server.content.ContentService: void setMasterSyncAutomaticallyAsUser(boolean,int)>(z0, $i0);

        return;
    }

    public void setMasterSyncAutomaticallyAsUser(boolean, int)
    {
        com.android.server.content.ContentService r0;
        boolean z0;
        int i0;
        long l1;
        com.android.server.content.SyncManager r1;
        java.lang.Throwable r2, $r9;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        android.content.Context $r7;
        com.android.server.content.SyncStorageEngine $r8;

        r0 := @this: com.android.server.content.ContentService;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no permission to set the sync status for user ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.content.ContentService: void enforceCrossUserPermission(int,java.lang.String)>(i0, $r6);

        $r7 = r0.<com.android.server.content.ContentService: android.content.Context mContext>;

        virtualinvoke $r7.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.WRITE_SYNC_SETTINGS", "no permission to write the sync settings");

        l1 = staticinvoke <com.android.server.content.ContentService: long clearCallingIdentity()>();

     label1:
        r1 = specialinvoke r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager getSyncManager()>();

        if r1 == null goto label2;

        $r8 = virtualinvoke r1.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine getSyncStorageEngine()>();

        virtualinvoke $r8.<com.android.server.content.SyncStorageEngine: void setMasterSyncAutomatically(boolean,int)>(z0, i0);

     label2:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        goto label5;

     label3:
        $r9 := @caughtexception;

        r2 = $r9;

     label4:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isSyncActive(android.accounts.Account, java.lang.String, android.content.ComponentName)
    {
        com.android.server.content.ContentService r0;
        android.accounts.Account r1;
        java.lang.String r2;
        android.content.ComponentName r3;
        int i0;
        long l2;
        com.android.server.content.SyncManager r4;
        boolean z0, z1;
        java.lang.Throwable r5, $r9;
        android.content.Context $r6;
        com.android.server.content.SyncStorageEngine$EndPoint $r7;
        com.android.server.content.SyncStorageEngine $r8;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.ComponentName;

        $r6 = r0.<com.android.server.content.ContentService: android.content.Context mContext>;

        virtualinvoke $r6.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.READ_SYNC_STATS", "no permission to read the sync stats");

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        staticinvoke <android.os.Binder: int getCallingUid()>();

        l2 = staticinvoke <com.android.server.content.ContentService: long clearCallingIdentity()>();

     label1:
        r4 = specialinvoke r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager getSyncManager()>();

        if r4 != null goto label3;

        z0 = 0;

     label2:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l2);

        return z0;

     label3:
        $r8 = virtualinvoke r4.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine getSyncStorageEngine()>();

        $r7 = new com.android.server.content.SyncStorageEngine$EndPoint;

        specialinvoke $r7.<com.android.server.content.SyncStorageEngine$EndPoint: void <init>(android.accounts.Account,java.lang.String,int)>(r1, r2, i0);

        z1 = virtualinvoke $r8.<com.android.server.content.SyncStorageEngine: boolean isSyncActive(com.android.server.content.SyncStorageEngine$EndPoint)>($r7);

     label4:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l2);

        return z1;

     label5:
        $r9 := @caughtexception;

        r5 = $r9;

     label6:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l2);

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.util.List getCurrentSyncs()
    {
        com.android.server.content.ContentService r0;
        int $i0;
        java.util.List $r1;

        r0 := @this: com.android.server.content.ContentService;

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r1 = virtualinvoke r0.<com.android.server.content.ContentService: java.util.List getCurrentSyncsAsUser(int)>($i0);

        return $r1;
    }

    public java.util.List getCurrentSyncsAsUser(int)
    {
        com.android.server.content.ContentService r0;
        int i0;
        long l1;
        java.util.List r1;
        java.lang.Throwable r2, $r10;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        android.content.Context $r7;
        com.android.server.content.SyncManager $r8;
        com.android.server.content.SyncStorageEngine $r9;

        r0 := @this: com.android.server.content.ContentService;

        i0 := @parameter0: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no permission to read the sync settings for user ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.content.ContentService: void enforceCrossUserPermission(int,java.lang.String)>(i0, $r6);

        $r7 = r0.<com.android.server.content.ContentService: android.content.Context mContext>;

        virtualinvoke $r7.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.READ_SYNC_STATS", "no permission to read the sync stats");

        l1 = staticinvoke <com.android.server.content.ContentService: long clearCallingIdentity()>();

     label1:
        $r8 = specialinvoke r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager getSyncManager()>();

        $r9 = virtualinvoke $r8.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine getSyncStorageEngine()>();

        r1 = virtualinvoke $r9.<com.android.server.content.SyncStorageEngine: java.util.List getCurrentSyncsCopy(int)>(i0);

     label2:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        return r1;

     label3:
        $r10 := @caughtexception;

        r2 = $r10;

     label4:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.content.SyncStatusInfo getSyncStatus(android.accounts.Account, java.lang.String, android.content.ComponentName)
    {
        com.android.server.content.ContentService r0;
        android.accounts.Account r1;
        java.lang.String r2;
        android.content.ComponentName r3;
        int $i0;
        android.content.SyncStatusInfo $r4;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.ComponentName;

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r4 = virtualinvoke r0.<com.android.server.content.ContentService: android.content.SyncStatusInfo getSyncStatusAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>(r1, r2, r3, $i0);

        return $r4;
    }

    public android.content.SyncStatusInfo getSyncStatusAsUser(android.accounts.Account, java.lang.String, android.content.ComponentName, int)
    {
        com.android.server.content.ContentService r0;
        android.accounts.Account r1;
        java.lang.String r2, $r11;
        android.content.ComponentName r3;
        int i0;
        long l1;
        com.android.server.content.SyncManager r4;
        android.content.SyncStatusInfo r5;
        java.lang.Throwable r6, $r16;
        boolean $z0;
        java.lang.StringBuilder $r7, $r8, $r9;
        android.content.Context $r10;
        java.lang.IllegalArgumentException $r12, $r15;
        com.android.server.content.SyncStorageEngine $r13;
        com.android.server.content.SyncStorageEngine$EndPoint $r14, r17;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.ComponentName;

        i0 := @parameter3: int;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Authority must not be empty");

        throw $r15;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no permission to read the sync stats for user ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.content.ContentService: void enforceCrossUserPermission(int,java.lang.String)>(i0, $r11);

        $r10 = r0.<com.android.server.content.ContentService: android.content.Context mContext>;

        virtualinvoke $r10.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.READ_SYNC_STATS", "no permission to read the sync stats");

        staticinvoke <android.os.Binder: int getCallingUid()>();

        l1 = staticinvoke <com.android.server.content.ContentService: long clearCallingIdentity()>();

     label2:
        r4 = specialinvoke r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager getSyncManager()>();

        if r4 != null goto label4;

     label3:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        return null;

     label4:
        if r1 == null goto label5;

        if r2 == null goto label5;

        $r14 = new com.android.server.content.SyncStorageEngine$EndPoint;

        specialinvoke $r14.<com.android.server.content.SyncStorageEngine$EndPoint: void <init>(android.accounts.Account,java.lang.String,int)>(r1, r2, i0);

        r17 = $r14;

        goto label6;

     label5:
        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must call sync status with valid authority");

        throw $r12;

     label6:
        $r13 = virtualinvoke r4.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine getSyncStorageEngine()>();

        r5 = virtualinvoke $r13.<com.android.server.content.SyncStorageEngine: android.content.SyncStatusInfo getStatusByAuthority(com.android.server.content.SyncStorageEngine$EndPoint)>(r17);

     label7:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        return r5;

     label8:
        $r16 := @caughtexception;

        r6 = $r16;

     label9:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        throw r6;

        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label4 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public boolean isSyncPending(android.accounts.Account, java.lang.String, android.content.ComponentName)
    {
        com.android.server.content.ContentService r0;
        android.accounts.Account r1;
        java.lang.String r2;
        android.content.ComponentName r3;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.ComponentName;

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $z0 = virtualinvoke r0.<com.android.server.content.ContentService: boolean isSyncPendingAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>(r1, r2, r3, $i0);

        return $z0;
    }

    public boolean isSyncPendingAsUser(android.accounts.Account, java.lang.String, android.content.ComponentName, int)
    {
        com.android.server.content.ContentService r0;
        android.accounts.Account r1;
        java.lang.String r2, $r11;
        android.content.ComponentName r3;
        int i0;
        long l2;
        com.android.server.content.SyncManager r4;
        com.android.server.content.SyncStorageEngine$EndPoint r5, $r12;
        boolean z0;
        java.lang.Throwable r6, $r15;
        android.content.Context $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.IllegalArgumentException $r13;
        com.android.server.content.SyncStorageEngine $r14;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.ComponentName;

        i0 := @parameter3: int;

        $r7 = r0.<com.android.server.content.ContentService: android.content.Context mContext>;

        virtualinvoke $r7.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.READ_SYNC_STATS", "no permission to read the sync stats");

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no permission to retrieve the sync settings for user ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.content.ContentService: void enforceCrossUserPermission(int,java.lang.String)>(i0, $r11);

        staticinvoke <android.os.Binder: int getCallingUid()>();

        l2 = staticinvoke <com.android.server.content.ContentService: long clearCallingIdentity()>();

        r4 = specialinvoke r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager getSyncManager()>();

        if r4 != null goto label1;

        return 0;

     label1:
        if r1 == null goto label2;

        if r2 == null goto label2;

        $r12 = new com.android.server.content.SyncStorageEngine$EndPoint;

        specialinvoke $r12.<com.android.server.content.SyncStorageEngine$EndPoint: void <init>(android.accounts.Account,java.lang.String,int)>(r1, r2, i0);

        r5 = $r12;

        goto label3;

     label2:
        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid authority specified");

        throw $r13;

     label3:
        $r14 = virtualinvoke r4.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine getSyncStorageEngine()>();

        z0 = virtualinvoke $r14.<com.android.server.content.SyncStorageEngine: boolean isSyncPending(com.android.server.content.SyncStorageEngine$EndPoint)>(r5);

     label4:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l2);

        return z0;

     label5:
        $r15 := @caughtexception;

        r6 = $r15;

     label6:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l2);

        throw r6;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void addStatusChangeListener(int, android.content.ISyncStatusObserver)
    {
        com.android.server.content.ContentService r0;
        int i0;
        android.content.ISyncStatusObserver r1;
        long l1;
        com.android.server.content.SyncManager r2;
        java.lang.Throwable r3, $r5;
        com.android.server.content.SyncStorageEngine $r4;

        r0 := @this: com.android.server.content.ContentService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.ISyncStatusObserver;

        l1 = staticinvoke <com.android.server.content.ContentService: long clearCallingIdentity()>();

     label1:
        r2 = specialinvoke r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager getSyncManager()>();

        if r2 == null goto label2;

        if r1 == null goto label2;

        $r4 = virtualinvoke r2.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine getSyncStorageEngine()>();

        virtualinvoke $r4.<com.android.server.content.SyncStorageEngine: void addStatusChangeListener(int,android.content.ISyncStatusObserver)>(i0, r1);

     label2:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l1);

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeStatusChangeListener(android.content.ISyncStatusObserver)
    {
        com.android.server.content.ContentService r0;
        android.content.ISyncStatusObserver r1;
        long l0;
        com.android.server.content.SyncManager r2;
        java.lang.Throwable r3, $r5;
        com.android.server.content.SyncStorageEngine $r4;

        r0 := @this: com.android.server.content.ContentService;

        r1 := @parameter0: android.content.ISyncStatusObserver;

        l0 = staticinvoke <com.android.server.content.ContentService: long clearCallingIdentity()>();

     label1:
        r2 = specialinvoke r0.<com.android.server.content.ContentService: com.android.server.content.SyncManager getSyncManager()>();

        if r2 == null goto label2;

        if r1 == null goto label2;

        $r4 = virtualinvoke r2.<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine getSyncStorageEngine()>();

        virtualinvoke $r4.<com.android.server.content.SyncStorageEngine: void removeStatusChangeListener(android.content.ISyncStatusObserver)>(r1);

     label2:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l0);

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        staticinvoke <com.android.server.content.ContentService: void restoreCallingIdentity(long)>(l0);

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static com.android.server.content.ContentService main(android.content.Context, boolean)
    {
        android.content.Context r0;
        boolean z0;
        com.android.server.content.ContentService r1, $r2;

        r0 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        $r2 = new com.android.server.content.ContentService;

        specialinvoke $r2.<com.android.server.content.ContentService: void <init>(android.content.Context,boolean)>(r0, z0);

        r1 = $r2;

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("content", r1);

        return r1;
    }

    private void enforceCrossUserPermission(int, java.lang.String)
    {
        com.android.server.content.ContentService r0;
        int i0, i1;
        java.lang.String r1;
        android.content.Context $r2;

        r0 := @this: com.android.server.content.ContentService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if i1 == i0 goto label1;

        $r2 = r0.<com.android.server.content.ContentService: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.INTERACT_ACROSS_USERS_FULL", r1);

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.content.ContentService: java.lang.String TAG> = "ContentService";

        return;
    }
}
