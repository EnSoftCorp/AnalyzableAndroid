final class com.android.server.hdmi.ActiveSourceHandler extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final com.android.server.hdmi.HdmiCecLocalDeviceTv mSource;
    private final com.android.server.hdmi.HdmiControlService mService;
    private final android.hardware.hdmi.IHdmiControlCallback mCallback;

    static com.android.server.hdmi.ActiveSourceHandler create(com.android.server.hdmi.HdmiCecLocalDeviceTv, android.hardware.hdmi.IHdmiControlCallback)
    {
        com.android.server.hdmi.HdmiCecLocalDeviceTv r0;
        android.hardware.hdmi.IHdmiControlCallback r1;
        com.android.server.hdmi.ActiveSourceHandler $r2;

        r0 := @parameter0: com.android.server.hdmi.HdmiCecLocalDeviceTv;

        r1 := @parameter1: android.hardware.hdmi.IHdmiControlCallback;

        if r0 != null goto label1;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActiveSourceHandler", "Wrong arguments");

        return null;

     label1:
        $r2 = new com.android.server.hdmi.ActiveSourceHandler;

        specialinvoke $r2.<com.android.server.hdmi.ActiveSourceHandler: void <init>(com.android.server.hdmi.HdmiCecLocalDeviceTv,android.hardware.hdmi.IHdmiControlCallback)>(r0, r1);

        return $r2;
    }

    private void <init>(com.android.server.hdmi.HdmiCecLocalDeviceTv, android.hardware.hdmi.IHdmiControlCallback)
    {
        com.android.server.hdmi.ActiveSourceHandler r0;
        com.android.server.hdmi.HdmiCecLocalDeviceTv r1, $r3;
        android.hardware.hdmi.IHdmiControlCallback r2;
        com.android.server.hdmi.HdmiControlService $r4;

        r0 := @this: com.android.server.hdmi.ActiveSourceHandler;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecLocalDeviceTv;

        r2 := @parameter1: android.hardware.hdmi.IHdmiControlCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.hdmi.ActiveSourceHandler: com.android.server.hdmi.HdmiCecLocalDeviceTv mSource> = r1;

        $r3 = r0.<com.android.server.hdmi.ActiveSourceHandler: com.android.server.hdmi.HdmiCecLocalDeviceTv mSource>;

        $r4 = virtualinvoke $r3.<com.android.server.hdmi.HdmiCecLocalDeviceTv: com.android.server.hdmi.HdmiControlService getService()>();

        r0.<com.android.server.hdmi.ActiveSourceHandler: com.android.server.hdmi.HdmiControlService mService> = $r4;

        r0.<com.android.server.hdmi.ActiveSourceHandler: android.hardware.hdmi.IHdmiControlCallback mCallback> = r2;

        return;
    }

    void process(com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource)
    {
        com.android.server.hdmi.ActiveSourceHandler r0;
        com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource r1, r3, r12;
        com.android.server.hdmi.HdmiCecLocalDeviceTv r2;
        android.hardware.hdmi.HdmiDeviceInfo r4;
        boolean z0, $z1, $z2, $z3;
        com.android.server.hdmi.HdmiCecMessage r5, r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        com.android.server.hdmi.HdmiControlService $r6, $r8, $r10;
        com.android.server.hdmi.RoutingControlAction $r7;
        android.hardware.hdmi.IHdmiControlCallback $r9, $r11;

        r0 := @this: com.android.server.hdmi.ActiveSourceHandler;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource;

        r2 = r0.<com.android.server.hdmi.ActiveSourceHandler: com.android.server.hdmi.HdmiCecLocalDeviceTv mSource>;

        r3 = virtualinvoke r2.<com.android.server.hdmi.HdmiCecLocalDeviceTv: com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource getActiveSource()>();

        $z1 = virtualinvoke r3.<com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        specialinvoke r0.<com.android.server.hdmi.ActiveSourceHandler: void invokeCallback(int)>(0);

        return;

     label1:
        $r6 = r0.<com.android.server.hdmi.ActiveSourceHandler: com.android.server.hdmi.HdmiControlService mService>;

        $i0 = r1.<com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource: int logicalAddress>;

        r4 = virtualinvoke $r6.<com.android.server.hdmi.HdmiControlService: android.hardware.hdmi.HdmiDeviceInfo getDeviceInfo(int)>($i0);

        if r4 != null goto label2;

        virtualinvoke r2.<com.android.server.hdmi.HdmiCecLocalDeviceTv: void startNewDeviceAction(com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource)>(r1);

     label2:
        $z2 = virtualinvoke r2.<com.android.server.hdmi.HdmiCecLocalDeviceTv: boolean isProhibitMode()>();

        if $z2 != 0 goto label5;

        virtualinvoke r2.<com.android.server.hdmi.HdmiCecLocalDeviceTv: void updateActiveSource(com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource)>(r1);

        $r11 = r0.<com.android.server.hdmi.ActiveSourceHandler: android.hardware.hdmi.IHdmiControlCallback mCallback>;

        if $r11 != null goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        z0 = $z3;

        $i9 = r1.<com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource: int physicalAddress>;

        virtualinvoke r2.<com.android.server.hdmi.HdmiCecLocalDeviceTv: void updateActiveInput(int,boolean)>($i9, z0);

        specialinvoke r0.<com.android.server.hdmi.ActiveSourceHandler: void invokeCallback(int)>(0);

        goto label7;

     label5:
        r12 = virtualinvoke r2.<com.android.server.hdmi.HdmiCecLocalDeviceTv: com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource getActiveSource()>();

        $i1 = r12.<com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource: int logicalAddress>;

        $i2 = specialinvoke r0.<com.android.server.hdmi.ActiveSourceHandler: int getSourceAddress()>();

        if $i1 != $i2 goto label6;

        $i7 = r12.<com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource: int logicalAddress>;

        $i8 = r12.<com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource: int physicalAddress>;

        r5 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildActiveSource(int,int)>($i7, $i8);

        $r10 = r0.<com.android.server.hdmi.ActiveSourceHandler: com.android.server.hdmi.HdmiControlService mService>;

        virtualinvoke $r10.<com.android.server.hdmi.HdmiControlService: void sendCecCommand(com.android.server.hdmi.HdmiCecMessage)>(r5);

        virtualinvoke r2.<com.android.server.hdmi.HdmiCecLocalDeviceTv: void updateActiveSource(com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource)>(r12);

        specialinvoke r0.<com.android.server.hdmi.ActiveSourceHandler: void invokeCallback(int)>(0);

        goto label7;

     label6:
        $i4 = specialinvoke r0.<com.android.server.hdmi.ActiveSourceHandler: int getSourceAddress()>();

        $i5 = r1.<com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource: int physicalAddress>;

        $i3 = r12.<com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource: int physicalAddress>;

        r13 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildRoutingChange(int,int,int)>($i4, $i5, $i3);

        $r8 = r0.<com.android.server.hdmi.ActiveSourceHandler: com.android.server.hdmi.HdmiControlService mService>;

        virtualinvoke $r8.<com.android.server.hdmi.HdmiControlService: void sendCecCommand(com.android.server.hdmi.HdmiCecMessage)>(r13);

        $r7 = new com.android.server.hdmi.RoutingControlAction;

        $i6 = r12.<com.android.server.hdmi.HdmiCecLocalDevice$ActiveSource: int physicalAddress>;

        $r9 = r0.<com.android.server.hdmi.ActiveSourceHandler: android.hardware.hdmi.IHdmiControlCallback mCallback>;

        specialinvoke $r7.<com.android.server.hdmi.RoutingControlAction: void <init>(com.android.server.hdmi.HdmiCecLocalDevice,int,boolean,android.hardware.hdmi.IHdmiControlCallback)>(r2, $i6, 1, $r9);

        virtualinvoke r2.<com.android.server.hdmi.HdmiCecLocalDeviceTv: void addAndStartAction(com.android.server.hdmi.HdmiCecFeatureAction)>($r7);

     label7:
        return;
    }

    private final int getSourceAddress()
    {
        com.android.server.hdmi.ActiveSourceHandler r0;
        com.android.server.hdmi.HdmiCecLocalDeviceTv $r1;
        android.hardware.hdmi.HdmiDeviceInfo $r2;
        int $i0;

        r0 := @this: com.android.server.hdmi.ActiveSourceHandler;

        $r1 = r0.<com.android.server.hdmi.ActiveSourceHandler: com.android.server.hdmi.HdmiCecLocalDeviceTv mSource>;

        $r2 = virtualinvoke $r1.<com.android.server.hdmi.HdmiCecLocalDeviceTv: android.hardware.hdmi.HdmiDeviceInfo getDeviceInfo()>();

        $i0 = virtualinvoke $r2.<android.hardware.hdmi.HdmiDeviceInfo: int getLogicalAddress()>();

        return $i0;
    }

    private void invokeCallback(int)
    {
        com.android.server.hdmi.ActiveSourceHandler r0;
        int i0;
        android.os.RemoteException r1, $r4;
        android.hardware.hdmi.IHdmiControlCallback $r2, $r3;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: com.android.server.hdmi.ActiveSourceHandler;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.hdmi.ActiveSourceHandler: android.hardware.hdmi.IHdmiControlCallback mCallback>;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.hdmi.ActiveSourceHandler: android.hardware.hdmi.IHdmiControlCallback mCallback>;

        interfaceinvoke $r3.<android.hardware.hdmi.IHdmiControlCallback: void onComplete(int)>(i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Callback failed:");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActiveSourceHandler", $r8);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.hdmi.ActiveSourceHandler: java.lang.String TAG> = "ActiveSourceHandler";

        return;
    }
}
