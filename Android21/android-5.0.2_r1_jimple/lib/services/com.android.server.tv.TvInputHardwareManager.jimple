class com.android.server.tv.TvInputHardwareManager extends java.lang.Object implements com.android.server.tv.TvInputHal$Callback
{
    private static final java.lang.String TAG;
    private final com.android.server.tv.TvInputHardwareManager$Listener mListener;
    private final com.android.server.tv.TvInputHal mHal;
    private final android.util.SparseArray mConnections;
    private final java.util.List mHardwareList;
    private final java.util.List mHdmiDeviceList;
    private final android.util.SparseArray mHardwareInputIdMap;
    private final android.util.SparseArray mHdmiInputIdMap;
    private final java.util.Map mInputMap;
    private final android.media.AudioManager mAudioManager;
    private android.hardware.hdmi.IHdmiControlService mHdmiControlService;
    private final android.hardware.hdmi.IHdmiHotplugEventListener mHdmiHotplugEventListener;
    private final android.hardware.hdmi.IHdmiDeviceEventListener mHdmiDeviceEventListener;
    private final android.hardware.hdmi.IHdmiSystemAudioModeChangeListener mHdmiSystemAudioModeChangeListener;
    private final android.util.SparseBooleanArray mHdmiStateMap;
    private final java.util.List mPendingHdmiDeviceEvents;
    private final android.os.Handler mHandler;
    private final java.lang.Object mLock;

    public void <init>(android.content.Context, com.android.server.tv.TvInputHardwareManager$Listener)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        android.content.Context r1;
        com.android.server.tv.TvInputHardwareManager$Listener r2;
        com.android.server.tv.TvInputHal $r3, $r18;
        android.util.SparseArray $r4, $r7, $r8;
        java.util.ArrayList $r5;
        java.util.LinkedList $r6, $r14;
        android.util.ArrayMap $r9;
        com.android.server.tv.TvInputHardwareManager$HdmiHotplugEventListener $r10;
        com.android.server.tv.TvInputHardwareManager$HdmiDeviceEventListener $r11;
        com.android.server.tv.TvInputHardwareManager$HdmiSystemAudioModeChangeListener $r12;
        android.util.SparseBooleanArray $r13;
        com.android.server.tv.TvInputHardwareManager$ListenerHandler $r15;
        java.lang.Object $r16, $r17;
        android.media.AudioManager $r19;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.tv.TvInputHardwareManager$Listener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new com.android.server.tv.TvInputHal;

        specialinvoke $r3.<com.android.server.tv.TvInputHal: void <init>(com.android.server.tv.TvInputHal$Callback)>(r0);

        r0.<com.android.server.tv.TvInputHardwareManager: com.android.server.tv.TvInputHal mHal> = $r3;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mHardwareList> = $r5;

        $r6 = new java.util.LinkedList;

        specialinvoke $r6.<java.util.LinkedList: void <init>()>();

        r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mHdmiDeviceList> = $r6;

        $r7 = new android.util.SparseArray;

        specialinvoke $r7.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHardwareInputIdMap> = $r7;

        $r8 = new android.util.SparseArray;

        specialinvoke $r8.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHdmiInputIdMap> = $r8;

        $r9 = new android.util.ArrayMap;

        specialinvoke $r9.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.tv.TvInputHardwareManager: java.util.Map mInputMap> = $r9;

        $r10 = new com.android.server.tv.TvInputHardwareManager$HdmiHotplugEventListener;

        specialinvoke $r10.<com.android.server.tv.TvInputHardwareManager$HdmiHotplugEventListener: void <init>(com.android.server.tv.TvInputHardwareManager,com.android.server.tv.TvInputHardwareManager$1)>(r0, null);

        r0.<com.android.server.tv.TvInputHardwareManager: android.hardware.hdmi.IHdmiHotplugEventListener mHdmiHotplugEventListener> = $r10;

        $r11 = new com.android.server.tv.TvInputHardwareManager$HdmiDeviceEventListener;

        specialinvoke $r11.<com.android.server.tv.TvInputHardwareManager$HdmiDeviceEventListener: void <init>(com.android.server.tv.TvInputHardwareManager,com.android.server.tv.TvInputHardwareManager$1)>(r0, null);

        r0.<com.android.server.tv.TvInputHardwareManager: android.hardware.hdmi.IHdmiDeviceEventListener mHdmiDeviceEventListener> = $r11;

        $r12 = new com.android.server.tv.TvInputHardwareManager$HdmiSystemAudioModeChangeListener;

        specialinvoke $r12.<com.android.server.tv.TvInputHardwareManager$HdmiSystemAudioModeChangeListener: void <init>(com.android.server.tv.TvInputHardwareManager,com.android.server.tv.TvInputHardwareManager$1)>(r0, null);

        r0.<com.android.server.tv.TvInputHardwareManager: android.hardware.hdmi.IHdmiSystemAudioModeChangeListener mHdmiSystemAudioModeChangeListener> = $r12;

        $r13 = new android.util.SparseBooleanArray;

        specialinvoke $r13.<android.util.SparseBooleanArray: void <init>()>();

        r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseBooleanArray mHdmiStateMap> = $r13;

        $r14 = new java.util.LinkedList;

        specialinvoke $r14.<java.util.LinkedList: void <init>()>();

        r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mPendingHdmiDeviceEvents> = $r14;

        $r15 = new com.android.server.tv.TvInputHardwareManager$ListenerHandler;

        specialinvoke $r15.<com.android.server.tv.TvInputHardwareManager$ListenerHandler: void <init>(com.android.server.tv.TvInputHardwareManager,com.android.server.tv.TvInputHardwareManager$1)>(r0, null);

        r0.<com.android.server.tv.TvInputHardwareManager: android.os.Handler mHandler> = $r15;

        $r17 = new java.lang.Object;

        specialinvoke $r17.<java.lang.Object: void <init>()>();

        r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock> = $r17;

        r0.<com.android.server.tv.TvInputHardwareManager: com.android.server.tv.TvInputHardwareManager$Listener mListener> = r2;

        $r16 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r19 = (android.media.AudioManager) $r16;

        r0.<com.android.server.tv.TvInputHardwareManager: android.media.AudioManager mAudioManager> = $r19;

        $r18 = r0.<com.android.server.tv.TvInputHardwareManager: com.android.server.tv.TvInputHal mHal>;

        virtualinvoke $r18.<com.android.server.tv.TvInputHal: void init()>();

        return;
    }

    public void onBootPhase(int)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        int i0;
        android.os.RemoteException r1, $r15;
        android.os.IBinder $r2;
        android.hardware.hdmi.IHdmiControlService $r3, $r4, $r6, $r8, $r10, $r11;
        android.hardware.hdmi.IHdmiHotplugEventListener $r5;
        android.hardware.hdmi.IHdmiDeviceEventListener $r7;
        android.hardware.hdmi.IHdmiSystemAudioModeChangeListener $r9;
        java.util.List $r12, $r13;
        java.lang.String $r14;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        i0 := @parameter0: int;

        if i0 != 500 goto label4;

        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("hdmi_control");

        $r3 = staticinvoke <android.hardware.hdmi.IHdmiControlService$Stub: android.hardware.hdmi.IHdmiControlService asInterface(android.os.IBinder)>($r2);

        r0.<com.android.server.tv.TvInputHardwareManager: android.hardware.hdmi.IHdmiControlService mHdmiControlService> = $r3;

        $r4 = r0.<com.android.server.tv.TvInputHardwareManager: android.hardware.hdmi.IHdmiControlService mHdmiControlService>;

        if $r4 == null goto label4;

     label1:
        $r6 = r0.<com.android.server.tv.TvInputHardwareManager: android.hardware.hdmi.IHdmiControlService mHdmiControlService>;

        $r5 = r0.<com.android.server.tv.TvInputHardwareManager: android.hardware.hdmi.IHdmiHotplugEventListener mHdmiHotplugEventListener>;

        interfaceinvoke $r6.<android.hardware.hdmi.IHdmiControlService: void addHotplugEventListener(android.hardware.hdmi.IHdmiHotplugEventListener)>($r5);

        $r8 = r0.<com.android.server.tv.TvInputHardwareManager: android.hardware.hdmi.IHdmiControlService mHdmiControlService>;

        $r7 = r0.<com.android.server.tv.TvInputHardwareManager: android.hardware.hdmi.IHdmiDeviceEventListener mHdmiDeviceEventListener>;

        interfaceinvoke $r8.<android.hardware.hdmi.IHdmiControlService: void addDeviceEventListener(android.hardware.hdmi.IHdmiDeviceEventListener)>($r7);

        $r10 = r0.<com.android.server.tv.TvInputHardwareManager: android.hardware.hdmi.IHdmiControlService mHdmiControlService>;

        $r9 = r0.<com.android.server.tv.TvInputHardwareManager: android.hardware.hdmi.IHdmiSystemAudioModeChangeListener mHdmiSystemAudioModeChangeListener>;

        interfaceinvoke $r10.<android.hardware.hdmi.IHdmiControlService: void addSystemAudioModeChangeListener(android.hardware.hdmi.IHdmiSystemAudioModeChangeListener)>($r9);

        $r12 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mHdmiDeviceList>;

        $r11 = r0.<com.android.server.tv.TvInputHardwareManager: android.hardware.hdmi.IHdmiControlService mHdmiControlService>;

        $r13 = interfaceinvoke $r11.<android.hardware.hdmi.IHdmiControlService: java.util.List getInputDevices()>();

        interfaceinvoke $r12.<java.util.List: boolean addAll(java.util.Collection)>($r13);

     label2:
        goto label4;

     label3:
        $r15 := @caughtexception;

        r1 = $r15;

        $r14 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r14, "Error registering listeners to HdmiControlService:", r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onDeviceAvailable(android.media.tv.TvInputHardwareInfo, android.media.tv.TvStreamConfig[])
    {
        com.android.server.tv.TvInputHardwareManager r0;
        android.media.tv.TvInputHardwareInfo r1;
        android.media.tv.TvStreamConfig[] r2;
        java.lang.Object r3, $r6;
        com.android.server.tv.TvInputHardwareManager$Connection r4, $r7;
        java.lang.Throwable r5, $r11;
        android.util.SparseArray $r8;
        int $i0, $i1;
        android.os.Handler $r9;
        android.os.Message $r10;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        r1 := @parameter0: android.media.tv.TvInputHardwareInfo;

        r2 := @parameter1: android.media.tv.TvStreamConfig[];

        $r6 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        r3 = $r6;

        entermonitor $r6;

     label1:
        $r7 = new com.android.server.tv.TvInputHardwareManager$Connection;

        specialinvoke $r7.<com.android.server.tv.TvInputHardwareManager$Connection: void <init>(com.android.server.tv.TvInputHardwareManager,android.media.tv.TvInputHardwareInfo)>(r0, r1);

        r4 = $r7;

        virtualinvoke r4.<com.android.server.tv.TvInputHardwareManager$Connection: void updateConfigsLocked(android.media.tv.TvStreamConfig[])>(r2);

        $r8 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $i0 = virtualinvoke r1.<android.media.tv.TvInputHardwareInfo: int getDeviceId()>();

        virtualinvoke $r8.<android.util.SparseArray: void put(int,java.lang.Object)>($i0, r4);

        specialinvoke r0.<com.android.server.tv.TvInputHardwareManager: void buildHardwareListLocked()>();

        $r9 = r0.<com.android.server.tv.TvInputHardwareManager: android.os.Handler mHandler>;

        $r10 = virtualinvoke $r9.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(2, 0, 0, r1);

        virtualinvoke $r10.<android.os.Message: void sendToTarget()>();

        $i1 = virtualinvoke r1.<android.media.tv.TvInputHardwareInfo: int getType()>();

        if $i1 != 9 goto label2;

        specialinvoke r0.<com.android.server.tv.TvInputHardwareManager: void processPendingHdmiDeviceEventsLocked()>();

     label2:
        exitmonitor r3;

     label3:
        goto label6;

     label4:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r3;

     label5:
        throw r5;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void buildHardwareListLocked()
    {
        com.android.server.tv.TvInputHardwareManager r0;
        int i0, $i1;
        java.util.List $r1, $r4;
        android.util.SparseArray $r2, $r3;
        java.lang.Object $r5;
        com.android.server.tv.TvInputHardwareManager$Connection $r6;
        android.media.tv.TvInputHardwareInfo $r7;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        $r1 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mHardwareList>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        i0 = 0;

     label1:
        $r2 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $i1 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        if i0 >= $i1 goto label2;

        $r4 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mHardwareList>;

        $r3 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $r5 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r6 = (com.android.server.tv.TvInputHardwareManager$Connection) $r5;

        $r7 = virtualinvoke $r6.<com.android.server.tv.TvInputHardwareManager$Connection: android.media.tv.TvInputHardwareInfo getHardwareInfoLocked()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r7);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void onDeviceUnavailable(int)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        int i0, $i1, $i2, $i3;
        java.lang.Object r1, $r7, $r9, $r14;
        com.android.server.tv.TvInputHardwareManager$Connection r2;
        android.media.tv.TvInputHardwareInfo r3;
        java.util.Iterator r4;
        android.hardware.hdmi.HdmiDeviceInfo r5;
        java.lang.Throwable r6, $r22;
        android.util.SparseArray $r8, $r10;
        android.os.Handler $r11, $r15;
        android.os.Message $r12, $r17;
        java.util.List $r13;
        boolean $z0;
        java.lang.StringBuilder $r16, $r18, $r21;
        java.lang.String $r19, $r20;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        i0 := @parameter0: int;

        $r7 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        r1 = $r7;

        entermonitor $r7;

     label01:
        $r8 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.tv.TvInputHardwareManager$Connection) $r9;

        if r2 != null goto label03;

        $r19 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onDeviceUnavailable: Cannot find a connection with ");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r19, $r20);

        exitmonitor r1;

     label02:
        return;

     label03:
        virtualinvoke r2.<com.android.server.tv.TvInputHardwareManager$Connection: void resetLocked(com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl,android.media.tv.ITvInputHardwareCallback,android.media.tv.TvInputInfo,java.lang.Integer,java.lang.Integer)>(null, null, null, null, null);

        $r10 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        virtualinvoke $r10.<android.util.SparseArray: void remove(int)>(i0);

        specialinvoke r0.<com.android.server.tv.TvInputHardwareManager: void buildHardwareListLocked()>();

        r3 = virtualinvoke r2.<com.android.server.tv.TvInputHardwareManager$Connection: android.media.tv.TvInputHardwareInfo getHardwareInfoLocked()>();

        $i1 = virtualinvoke r3.<android.media.tv.TvInputHardwareInfo: int getType()>();

        if $i1 != 9 goto label06;

        $r13 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mHdmiDeviceList>;

        r4 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.hardware.hdmi.HdmiDeviceInfo) $r14;

        $i2 = virtualinvoke r5.<android.hardware.hdmi.HdmiDeviceInfo: int getPortId()>();

        $i3 = virtualinvoke r3.<android.media.tv.TvInputHardwareInfo: int getHdmiPortId()>();

        if $i2 != $i3 goto label05;

        $r15 = r0.<com.android.server.tv.TvInputHardwareManager: android.os.Handler mHandler>;

        $r17 = virtualinvoke $r15.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(5, 0, 0, r5);

        virtualinvoke $r17.<android.os.Message: void sendToTarget()>();

        interfaceinvoke r4.<java.util.Iterator: void remove()>();

     label05:
        goto label04;

     label06:
        $r11 = r0.<com.android.server.tv.TvInputHardwareManager: android.os.Handler mHandler>;

        $r12 = virtualinvoke $r11.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(3, 0, 0, r3);

        virtualinvoke $r12.<android.os.Message: void sendToTarget()>();

        exitmonitor r1;

     label07:
        goto label10;

     label08:
        $r22 := @caughtexception;

        r6 = $r22;

        exitmonitor r1;

     label09:
        throw r6;

     label10:
        return;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void onStreamConfigurationChanged(int, android.media.tv.TvStreamConfig[])
    {
        com.android.server.tv.TvInputHardwareManager r0;
        int i0;
        android.media.tv.TvStreamConfig[] r1;
        java.lang.Object r2, $r6, $r8;
        com.android.server.tv.TvInputHardwareManager$Connection r3;
        android.os.RemoteException r4, $r16;
        java.lang.Throwable r5, $r15;
        android.util.SparseArray $r7;
        android.media.tv.ITvInputHardwareCallback $r9;
        java.lang.StringBuilder $r10, $r12, $r13;
        java.lang.String $r11, $r14, $r17;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.tv.TvStreamConfig[];

        $r6 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        r2 = $r6;

        entermonitor $r6;

     label01:
        $r7 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.tv.TvInputHardwareManager$Connection) $r8;

        if r3 != null goto label03;

        $r11 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StreamConfigurationChanged: Cannot find a connection with ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r11, $r14);

        exitmonitor r2;

     label02:
        return;

     label03:
        virtualinvoke r3.<com.android.server.tv.TvInputHardwareManager$Connection: void updateConfigsLocked(android.media.tv.TvStreamConfig[])>(r1);

     label04:
        $r9 = virtualinvoke r3.<com.android.server.tv.TvInputHardwareManager$Connection: android.media.tv.ITvInputHardwareCallback getCallbackLocked()>();

        interfaceinvoke $r9.<android.media.tv.ITvInputHardwareCallback: void onStreamConfigChanged(android.media.tv.TvStreamConfig[])>(r1);

     label05:
        goto label07;

     label06:
        $r16 := @caughtexception;

        r4 = $r16;

        $r17 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r17, "error in onStreamConfigurationChanged", r4);

     label07:
        exitmonitor r2;

     label08:
        goto label11;

     label09:
        $r15 := @caughtexception;

        r5 = $r15;

        exitmonitor r2;

     label10:
        throw r5;

     label11:
        return;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void onFirstFrameCaptured(int, int)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        int i0, i1;
        java.lang.Object r1, $r5, $r7;
        com.android.server.tv.TvInputHardwareManager$Connection r2;
        java.lang.Runnable r3;
        java.lang.Throwable r4, $r13;
        android.util.SparseArray $r6;
        java.lang.StringBuilder $r8, $r10, $r11;
        java.lang.String $r9, $r12;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r5 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        r1 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.tv.TvInputHardwareManager$Connection) $r7;

        if r2 != null goto label3;

        $r9 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FirstFrameCaptured: Cannot find a connection with ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r9, $r12);

        exitmonitor r1;

     label2:
        return;

     label3:
        r3 = virtualinvoke r2.<com.android.server.tv.TvInputHardwareManager$Connection: java.lang.Runnable getOnFirstFrameCapturedLocked()>();

        if r3 == null goto label4;

        interfaceinvoke r3.<java.lang.Runnable: void run()>();

        virtualinvoke r2.<com.android.server.tv.TvInputHardwareManager$Connection: void setOnFirstFrameCapturedLocked(java.lang.Runnable)>(null);

     label4:
        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r13 := @caughtexception;

        r4 = $r13;

        exitmonitor r1;

     label7:
        throw r4;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public java.util.List getHardwareList()
    {
        com.android.server.tv.TvInputHardwareManager r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        java.util.List $r4, $r5;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        $r3 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mHardwareList>;

        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4);

        exitmonitor r1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.List getHdmiDeviceList()
    {
        com.android.server.tv.TvInputHardwareManager r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        java.util.List $r4, $r5;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        $r3 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mHdmiDeviceList>;

        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4);

        exitmonitor r1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private boolean checkUidChangedLocked(com.android.server.tv.TvInputHardwareManager$Connection, int, int)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        com.android.server.tv.TvInputHardwareManager$Connection r1;
        int i0, i1, $i2, $i3;
        java.lang.Integer r2, r3;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        r1 := @parameter0: com.android.server.tv.TvInputHardwareManager$Connection;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = virtualinvoke r1.<com.android.server.tv.TvInputHardwareManager$Connection: java.lang.Integer getCallingUidLocked()>();

        r3 = virtualinvoke r1.<com.android.server.tv.TvInputHardwareManager$Connection: java.lang.Integer getResolvedUserIdLocked()>();

        if r2 == null goto label1;

        if r3 != null goto label2;

     label1:
        return 1;

     label2:
        $i2 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        if $i2 != i0 goto label3;

        $i3 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        if $i3 == i1 goto label4;

     label3:
        return 1;

     label4:
        return 0;
    }

    private int convertConnectedToState(boolean)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        boolean z0;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        return 0;

     label1:
        return 2;
    }

    public void addHardwareTvInput(int, android.media.tv.TvInputInfo)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.media.tv.TvInputInfo r1;
        java.lang.Object r2, $r7, $r9, $r18, $r25;
        java.lang.String r3, r5, $r11, $r13, $r19, $r23, $r33;
        android.media.tv.TvInputHardwareInfo r4;
        java.lang.Throwable r6, $r36;
        android.util.SparseArray $r8, $r10, $r17;
        java.util.Map $r12, $r28;
        android.util.SparseBooleanArray $r14, $r16, $r21;
        boolean $z0, $z1;
        android.os.Handler $r20;
        java.lang.StringBuilder $r22, $r26, $r27, $r29, $r30, $r31, $r32, $r34, $r35;
        android.os.Message $r24;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.tv.TvInputInfo;

        $r7 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        r2 = $r7;

        entermonitor $r7;

     label01:
        $r8 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHardwareInputIdMap>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (java.lang.String) $r9;

        if r3 == null goto label02;

        $r23 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to override previous registration: old = ");

        $r28 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.Map mInputMap>;

        $r25 = interfaceinvoke $r28.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r29 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", new = ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r33 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r23, $r33);

     label02:
        $r10 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHardwareInputIdMap>;

        $r11 = virtualinvoke r1.<android.media.tv.TvInputInfo: java.lang.String getId()>();

        virtualinvoke $r10.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r11);

        $r12 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.Map mInputMap>;

        $r13 = virtualinvoke r1.<android.media.tv.TvInputInfo: java.lang.String getId()>();

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, r1);

        i1 = 0;

     label03:
        $r14 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseBooleanArray mHdmiStateMap>;

        $i2 = virtualinvoke $r14.<android.util.SparseBooleanArray: int size()>();

        if i1 >= $i2 goto label06;

        $r16 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseBooleanArray mHdmiStateMap>;

        $i3 = virtualinvoke $r16.<android.util.SparseBooleanArray: int keyAt(int)>(i1);

        r4 = specialinvoke r0.<com.android.server.tv.TvInputHardwareManager: android.media.tv.TvInputHardwareInfo findHardwareInfoForHdmiPortLocked(int)>($i3);

        if r4 != null goto label04;

        goto label05;

     label04:
        $r17 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHardwareInputIdMap>;

        $i4 = virtualinvoke r4.<android.media.tv.TvInputHardwareInfo: int getDeviceId()>();

        $r18 = virtualinvoke $r17.<android.util.SparseArray: java.lang.Object get(int)>($i4);

        r5 = (java.lang.String) $r18;

        if r5 == null goto label05;

        $r19 = virtualinvoke r1.<android.media.tv.TvInputInfo: java.lang.String getId()>();

        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z0 == 0 goto label05;

        $r20 = r0.<com.android.server.tv.TvInputHardwareManager: android.os.Handler mHandler>;

        $r21 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseBooleanArray mHdmiStateMap>;

        $z1 = virtualinvoke $r21.<android.util.SparseBooleanArray: boolean valueAt(int)>(i1);

        $i5 = specialinvoke r0.<com.android.server.tv.TvInputHardwareManager: int convertConnectedToState(boolean)>($z1);

        $r24 = virtualinvoke $r20.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(1, $i5, 0, r5);

        virtualinvoke $r24.<android.os.Message: void sendToTarget()>();

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r36 := @caughtexception;

        r6 = $r36;

        exitmonitor r2;

     label09:
        throw r6;

     label10:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private static int indexOfEqualValue(android.util.SparseArray, java.lang.Object)
    {
        android.util.SparseArray r0;
        java.lang.Object r1, $r2;
        int i0, $i1;
        boolean $z0;

        r0 := @parameter0: android.util.SparseArray;

        r1 := @parameter1: java.lang.Object;

        i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<android.util.SparseArray: int size()>();

        if i0 >= $i1 goto label3;

        $r2 = virtualinvoke r0.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return i0;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return -1;
    }

    public void addHdmiTvInput(int, android.media.tv.TvInputInfo)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        int i0, i1, $i2;
        android.media.tv.TvInputInfo r1;
        java.lang.Object r2, $r6, $r9, $r18;
        java.lang.String r3, r4, $r12, $r14, $r17, $r28, $r35, $r37;
        java.lang.Throwable r5, $r38;
        android.util.SparseArray $r7, $r8, $r10;
        java.util.Map $r11, $r19;
        java.lang.StringBuilder $r15, $r16, $r20, $r21, $r22, $r23, $r24, $r25, $r27, $r29, $r30, $r31, $r32, $r33, $r34, $r39, $r40;
        java.lang.IllegalArgumentException $r26, $r36;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.tv.TvInputInfo;

        $i2 = virtualinvoke r1.<android.media.tv.TvInputInfo: int getType()>();

        if $i2 == 1007 goto label1;

        $r36 = new java.lang.IllegalArgumentException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("info (");

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") has non-HDMI type.");

        $r37 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r37);

        throw $r36;

     label1:
        $r6 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        r2 = $r6;

        entermonitor $r6;

     label2:
        r3 = virtualinvoke r1.<android.media.tv.TvInputInfo: java.lang.String getParentId()>();

        $r7 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHardwareInputIdMap>;

        i1 = staticinvoke <com.android.server.tv.TvInputHardwareManager: int indexOfEqualValue(android.util.SparseArray,java.lang.Object)>($r7, r3);

        if i1 >= 0 goto label3;

        $r26 = new java.lang.IllegalArgumentException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("info (");

        $r29 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") has invalid parentId.");

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r35);

        throw $r26;

     label3:
        $r8 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHdmiInputIdMap>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r4 = (java.lang.String) $r9;

        if r4 == null goto label4;

        $r17 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to override previous registration: old = ");

        $r19 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.Map mInputMap>;

        $r18 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        $r21 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", new = ");

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r17, $r28);

     label4:
        $r10 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHdmiInputIdMap>;

        $r12 = virtualinvoke r1.<android.media.tv.TvInputInfo: java.lang.String getId()>();

        virtualinvoke $r10.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, $r12);

        $r11 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.Map mInputMap>;

        $r14 = virtualinvoke r1.<android.media.tv.TvInputInfo: java.lang.String getId()>();

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r1);

        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r38 := @caughtexception;

        r5 = $r38;

        exitmonitor r2;

     label7:
        throw r5;

     label8:
        return;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void removeTvInput(java.lang.String)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        java.lang.String r1;
        java.lang.Object r2, $r4;
        int i0, i1;
        java.lang.Throwable r3, $r11;
        java.util.Map $r5;
        android.util.SparseArray $r7, $r8, $r9, $r10;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.Map mInputMap>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r7 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHardwareInputIdMap>;

        i0 = staticinvoke <com.android.server.tv.TvInputHardwareManager: int indexOfEqualValue(android.util.SparseArray,java.lang.Object)>($r7, r1);

        if i0 < 0 goto label2;

        $r10 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHardwareInputIdMap>;

        virtualinvoke $r10.<android.util.SparseArray: void removeAt(int)>(i0);

     label2:
        $r8 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHdmiInputIdMap>;

        i1 = staticinvoke <com.android.server.tv.TvInputHardwareManager: int indexOfEqualValue(android.util.SparseArray,java.lang.Object)>($r8, r1);

        if i1 < 0 goto label3;

        $r9 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHdmiInputIdMap>;

        virtualinvoke $r9.<android.util.SparseArray: void removeAt(int)>(i1);

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public android.media.tv.ITvInputHardware acquireHardware(int, android.media.tv.ITvInputHardwareCallback, android.media.tv.TvInputInfo, int, int)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        int i0, i1, i2;
        android.media.tv.ITvInputHardwareCallback r1;
        android.media.tv.TvInputInfo r2;
        java.lang.Object r3, $r8, $r10;
        com.android.server.tv.TvInputHardwareManager$Connection r4;
        com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl r5, $r12;
        java.lang.Throwable r7, $r23;
        android.util.SparseArray $r9;
        boolean $z0;
        android.media.tv.ITvInputHardware $r11;
        android.os.IBinder $r13;
        android.media.tv.TvInputHardwareInfo $r14;
        java.lang.Integer $r15, $r16;
        java.lang.String $r17, $r21;
        java.lang.StringBuilder $r18, $r19, $r20;
        java.lang.NullPointerException $r22;
        android.os.RemoteException $r24;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.tv.ITvInputHardwareCallback;

        r2 := @parameter2: android.media.tv.TvInputInfo;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        if r1 != null goto label01;

        $r22 = new java.lang.NullPointerException;

        specialinvoke $r22.<java.lang.NullPointerException: void <init>()>();

        throw $r22;

     label01:
        $r8 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        r3 = $r8;

        entermonitor $r8;

     label02:
        $r9 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r4 = (com.android.server.tv.TvInputHardwareManager$Connection) $r10;

        if r4 != null goto label04;

        $r17 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid deviceId : ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r17, $r21);

        exitmonitor r3;

     label03:
        return null;

     label04:
        $z0 = specialinvoke r0.<com.android.server.tv.TvInputHardwareManager: boolean checkUidChangedLocked(com.android.server.tv.TvInputHardwareManager$Connection,int,int)>(r4, i1, i2);

        if $z0 == 0 goto label10;

        $r12 = new com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl;

        $r14 = virtualinvoke r4.<com.android.server.tv.TvInputHardwareManager$Connection: android.media.tv.TvInputHardwareInfo getHardwareInfoLocked()>();

        specialinvoke $r12.<com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl: void <init>(com.android.server.tv.TvInputHardwareManager,android.media.tv.TvInputHardwareInfo)>(r0, $r14);

        r5 = $r12;

     label05:
        $r13 = interfaceinvoke r1.<android.media.tv.ITvInputHardwareCallback: android.os.IBinder asBinder()>();

        interfaceinvoke $r13.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r4, 0);

     label06:
        goto label09;

     label07:
        $r24 := @caughtexception;

        virtualinvoke r5.<com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl: void release()>();

        exitmonitor r3;

     label08:
        return null;

     label09:
        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        virtualinvoke r4.<com.android.server.tv.TvInputHardwareManager$Connection: void resetLocked(com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl,android.media.tv.ITvInputHardwareCallback,android.media.tv.TvInputInfo,java.lang.Integer,java.lang.Integer)>(r5, r1, r2, $r16, $r15);

     label10:
        $r11 = virtualinvoke r4.<com.android.server.tv.TvInputHardwareManager$Connection: android.media.tv.ITvInputHardware getHardwareLocked()>();

        exitmonitor r3;

     label11:
        return $r11;

     label12:
        $r23 := @caughtexception;

        r7 = $r23;

        exitmonitor r3;

     label13:
        throw r7;

        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label04 to label08 with label12;
        catch java.lang.Throwable from label09 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public void releaseHardware(int, android.media.tv.ITvInputHardware, int, int)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        int i0, i1, i2;
        android.media.tv.ITvInputHardware r1, $r8;
        java.lang.Object r2, $r5, $r7;
        com.android.server.tv.TvInputHardwareManager$Connection r3;
        java.lang.Throwable r4, $r14;
        android.util.SparseArray $r6;
        boolean $z0;
        java.lang.StringBuilder $r9, $r10, $r13;
        java.lang.String $r11, $r12;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.tv.ITvInputHardware;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r5 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label01:
        $r6 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.tv.TvInputHardwareManager$Connection) $r7;

        if r3 != null goto label03;

        $r11 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid deviceId : ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r11, $r12);

        exitmonitor r2;

     label02:
        return;

     label03:
        $r8 = virtualinvoke r3.<com.android.server.tv.TvInputHardwareManager$Connection: android.media.tv.ITvInputHardware getHardwareLocked()>();

        if $r8 != r1 goto label04;

        $z0 = specialinvoke r0.<com.android.server.tv.TvInputHardwareManager: boolean checkUidChangedLocked(com.android.server.tv.TvInputHardwareManager$Connection,int,int)>(r3, i1, i2);

        if $z0 == 0 goto label06;

     label04:
        exitmonitor r2;

     label05:
        return;

     label06:
        virtualinvoke r3.<com.android.server.tv.TvInputHardwareManager$Connection: void resetLocked(com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl,android.media.tv.ITvInputHardwareCallback,android.media.tv.TvInputInfo,java.lang.Integer,java.lang.Integer)>(null, null, null, null, null);

        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r14 := @caughtexception;

        r4 = $r14;

        exitmonitor r2;

     label09:
        throw r4;

     label10:
        return;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private android.media.tv.TvInputHardwareInfo findHardwareInfoForHdmiPortLocked(int)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        int i0, $i1, $i2;
        java.util.Iterator r1;
        android.media.tv.TvInputHardwareInfo r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mHardwareList>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.media.tv.TvInputHardwareInfo) $r4;

        $i1 = virtualinvoke r2.<android.media.tv.TvInputHardwareInfo: int getType()>();

        if $i1 != 9 goto label2;

        $i2 = virtualinvoke r2.<android.media.tv.TvInputHardwareInfo: int getHdmiPortId()>();

        if $i2 != i0 goto label2;

        return r2;

     label2:
        goto label1;

     label3:
        return null;
    }

    private int findDeviceIdForInputIdLocked(java.lang.String)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        java.lang.String r1, $r7;
        int i0, $i1;
        com.android.server.tv.TvInputHardwareManager$Connection r2;
        android.util.SparseArray $r3, $r4;
        java.lang.Object $r5;
        android.media.tv.TvInputInfo $r6;
        boolean $z0;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        r1 := @parameter0: java.lang.String;

        i0 = 0;

     label1:
        $r3 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $i1 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if i0 >= $i1 goto label3;

        $r4 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.tv.TvInputHardwareManager$Connection) $r5;

        $r6 = virtualinvoke r2.<com.android.server.tv.TvInputHardwareManager$Connection: android.media.tv.TvInputInfo getInfoLocked()>();

        $r7 = virtualinvoke $r6.<android.media.tv.TvInputInfo: java.lang.String getId()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return i0;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return -1;
    }

    public java.util.List getAvailableTvStreamConfigList(java.lang.String, int, int)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        java.lang.String r1, $r12, $r16;
        int i0, i1, i2, i3, i4, $i5;
        java.util.ArrayList r2, $r8;
        java.lang.Object r3, $r9, $r10;
        com.android.server.tv.TvInputHardwareManager$Connection r4;
        android.media.tv.TvStreamConfig[] r5;
        android.media.tv.TvStreamConfig r6;
        java.lang.Throwable r7, $r17;
        android.util.SparseArray $r11;
        java.lang.StringBuilder $r13, $r14, $r15;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r2 = $r8;

        $r9 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        r3 = $r9;

        entermonitor $r9;

     label01:
        i2 = specialinvoke r0.<com.android.server.tv.TvInputHardwareManager: int findDeviceIdForInputIdLocked(java.lang.String)>(r1);

        if i2 >= 0 goto label03;

        $r12 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid inputId : ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r12, $r16);

        exitmonitor r3;

     label02:
        return r2;

     label03:
        $r11 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $r10 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object get(int)>(i2);

        r4 = (com.android.server.tv.TvInputHardwareManager$Connection) $r10;

        r5 = virtualinvoke r4.<com.android.server.tv.TvInputHardwareManager$Connection: android.media.tv.TvStreamConfig[] getConfigsLocked()>();

        i3 = lengthof r5;

        i4 = 0;

     label04:
        if i4 >= i3 goto label06;

        r6 = r5[i4];

        $i5 = virtualinvoke r6.<android.media.tv.TvStreamConfig: int getType()>();

        if $i5 != 2 goto label05;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r6);

     label05:
        i4 = i4 + 1;

        goto label04;

     label06:
        exitmonitor r3;

     label07:
        goto label10;

     label08:
        $r17 := @caughtexception;

        r7 = $r17;

        exitmonitor r3;

     label09:
        throw r7;

     label10:
        return r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public boolean captureFrame(java.lang.String, android.view.Surface, android.media.tv.TvStreamConfig, int, int)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        java.lang.String r1, $r15, $r16;
        android.view.Surface r2;
        android.media.tv.TvStreamConfig r3;
        int i0, i1, i2;
        java.lang.Object r4, $r9, $r11;
        com.android.server.tv.TvInputHardwareManager$Connection r5;
        com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl r6;
        java.lang.Runnable r7;
        boolean z0;
        java.lang.Throwable r8, $r18;
        android.util.SparseArray $r10;
        java.lang.StringBuilder $r12, $r14, $r17;
        com.android.server.tv.TvInputHardwareManager$1 $r13;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.view.Surface;

        r3 := @parameter2: android.media.tv.TvStreamConfig;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $r9 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        r4 = $r9;

        entermonitor $r9;

     label01:
        i2 = specialinvoke r0.<com.android.server.tv.TvInputHardwareManager: int findDeviceIdForInputIdLocked(java.lang.String)>(r1);

        if i2 >= 0 goto label03;

        $r15 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid inputId : ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r15, $r16);

        exitmonitor r4;

     label02:
        return 0;

     label03:
        $r10 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object get(int)>(i2);

        r5 = (com.android.server.tv.TvInputHardwareManager$Connection) $r11;

        r6 = virtualinvoke r5.<com.android.server.tv.TvInputHardwareManager$Connection: com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl getHardwareImplLocked()>();

        if r6 == null goto label07;

        r7 = virtualinvoke r5.<com.android.server.tv.TvInputHardwareManager$Connection: java.lang.Runnable getOnFirstFrameCapturedLocked()>();

        if r7 == null goto label04;

        interfaceinvoke r7.<java.lang.Runnable: void run()>();

        virtualinvoke r5.<com.android.server.tv.TvInputHardwareManager$Connection: void setOnFirstFrameCapturedLocked(java.lang.Runnable)>(null);

     label04:
        z0 = staticinvoke <com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl: boolean access$400(com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl,android.view.Surface,android.media.tv.TvStreamConfig)>(r6, r2, r3);

        if z0 == 0 goto label05;

        $r13 = new com.android.server.tv.TvInputHardwareManager$1;

        specialinvoke $r13.<com.android.server.tv.TvInputHardwareManager$1: void <init>(com.android.server.tv.TvInputHardwareManager,com.android.server.tv.TvInputHardwareManager$TvInputHardwareImpl,android.media.tv.TvStreamConfig)>(r0, r6, r3);

        virtualinvoke r5.<com.android.server.tv.TvInputHardwareManager$Connection: void setOnFirstFrameCapturedLocked(java.lang.Runnable)>($r13);

     label05:
        exitmonitor r4;

     label06:
        return z0;

     label07:
        exitmonitor r4;

     label08:
        goto label11;

     label09:
        $r18 := @caughtexception;

        r8 = $r18;

        exitmonitor r4;

     label10:
        throw r8;

     label11:
        return 0;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private void processPendingHdmiDeviceEventsLocked()
    {
        com.android.server.tv.TvInputHardwareManager r0;
        java.util.Iterator r1;
        android.os.Message r2;
        android.hardware.hdmi.HdmiDeviceInfo r3;
        android.media.tv.TvInputHardwareInfo r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6, $r7;
        int $i0;

        r0 := @this: com.android.server.tv.TvInputHardwareManager;

        $r5 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mPendingHdmiDeviceEvents>;

        r1 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.os.Message) $r6;

        $r7 = r2.<android.os.Message: java.lang.Object obj>;

        r3 = (android.hardware.hdmi.HdmiDeviceInfo) $r7;

        $i0 = virtualinvoke r3.<android.hardware.hdmi.HdmiDeviceInfo: int getPortId()>();

        r4 = specialinvoke r0.<com.android.server.tv.TvInputHardwareManager: android.media.tv.TvInputHardwareInfo findHardwareInfoForHdmiPortLocked(int)>($i0);

        if r4 == null goto label2;

        virtualinvoke r2.<android.os.Message: void sendToTarget()>();

        interfaceinvoke r1.<java.util.Iterator: void remove()>();

     label2:
        goto label1;

     label3:
        return;
    }

    static java.lang.String access$600()
    {
        java.lang.String $r0;

        $r0 = <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG>;

        return $r0;
    }

    static java.lang.Object access$700(com.android.server.tv.TvInputHardwareManager)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        $r1 = r0.<com.android.server.tv.TvInputHardwareManager: java.lang.Object mLock>;

        return $r1;
    }

    static android.media.AudioManager access$1300(com.android.server.tv.TvInputHardwareManager)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        android.media.AudioManager $r1;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        $r1 = r0.<com.android.server.tv.TvInputHardwareManager: android.media.AudioManager mAudioManager>;

        return $r1;
    }

    static com.android.server.tv.TvInputHal access$1400(com.android.server.tv.TvInputHardwareManager)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        com.android.server.tv.TvInputHal $r1;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        $r1 = r0.<com.android.server.tv.TvInputHardwareManager: com.android.server.tv.TvInputHal mHal>;

        return $r1;
    }

    static com.android.server.tv.TvInputHardwareManager$Listener access$1500(com.android.server.tv.TvInputHardwareManager)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        com.android.server.tv.TvInputHardwareManager$Listener $r1;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        $r1 = r0.<com.android.server.tv.TvInputHardwareManager: com.android.server.tv.TvInputHardwareManager$Listener mListener>;

        return $r1;
    }

    static android.util.SparseBooleanArray access$1600(com.android.server.tv.TvInputHardwareManager)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        android.util.SparseBooleanArray $r1;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        $r1 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseBooleanArray mHdmiStateMap>;

        return $r1;
    }

    static android.media.tv.TvInputHardwareInfo access$1700(com.android.server.tv.TvInputHardwareManager, int)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        int i0;
        android.media.tv.TvInputHardwareInfo $r1;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.tv.TvInputHardwareManager: android.media.tv.TvInputHardwareInfo findHardwareInfoForHdmiPortLocked(int)>(i0);

        return $r1;
    }

    static android.util.SparseArray access$1800(com.android.server.tv.TvInputHardwareManager)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        $r1 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHardwareInputIdMap>;

        return $r1;
    }

    static int access$1900(com.android.server.tv.TvInputHardwareManager, boolean)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        boolean z0;
        int $i0;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        z0 := @parameter1: boolean;

        $i0 = specialinvoke r0.<com.android.server.tv.TvInputHardwareManager: int convertConnectedToState(boolean)>(z0);

        return $i0;
    }

    static android.os.Handler access$2000(com.android.server.tv.TvInputHardwareManager)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        $r1 = r0.<com.android.server.tv.TvInputHardwareManager: android.os.Handler mHandler>;

        return $r1;
    }

    static java.util.List access$2100(com.android.server.tv.TvInputHardwareManager)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        java.util.List $r1;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        $r1 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mHdmiDeviceList>;

        return $r1;
    }

    static android.util.SparseArray access$2200(com.android.server.tv.TvInputHardwareManager)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        $r1 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mHdmiInputIdMap>;

        return $r1;
    }

    static java.util.List access$2300(com.android.server.tv.TvInputHardwareManager)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        java.util.List $r1;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        $r1 = r0.<com.android.server.tv.TvInputHardwareManager: java.util.List mPendingHdmiDeviceEvents>;

        return $r1;
    }

    static android.util.SparseArray access$2400(com.android.server.tv.TvInputHardwareManager)
    {
        com.android.server.tv.TvInputHardwareManager r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.server.tv.TvInputHardwareManager;

        $r1 = r0.<com.android.server.tv.TvInputHardwareManager: android.util.SparseArray mConnections>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "com/android/server/tv/TvInputHardwareManager";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.tv.TvInputHardwareManager: java.lang.String TAG> = $r1;

        return;
    }
}
