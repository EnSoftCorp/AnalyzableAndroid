final class com.android.server.accessibility.AccessibilityManagerService$WindowsForAccessibilityCallback extends java.lang.Object implements android.view.WindowManagerInternal$WindowsForAccessibilityCallback
{
    final com.android.server.accessibility.AccessibilityManagerService this$0;

    void <init>(com.android.server.accessibility.AccessibilityManagerService)
    {
        com.android.server.accessibility.AccessibilityManagerService$WindowsForAccessibilityCallback r0;
        com.android.server.accessibility.AccessibilityManagerService r1;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$WindowsForAccessibilityCallback;

        r1 := @parameter0: com.android.server.accessibility.AccessibilityManagerService;

        r0.<com.android.server.accessibility.AccessibilityManagerService$WindowsForAccessibilityCallback: com.android.server.accessibility.AccessibilityManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onWindowsForAccessibilityChanged(java.util.List)
    {
        com.android.server.accessibility.AccessibilityManagerService$WindowsForAccessibilityCallback r0;
        java.util.List r1;
        java.lang.Object r2, $r8, $r13, $r14;
        java.util.ArrayList r3, $r9;
        int i0, i1;
        android.view.WindowInfo r4;
        android.view.accessibility.AccessibilityWindowInfo r5;
        java.lang.Throwable r6, $r15;
        com.android.server.accessibility.AccessibilityManagerService $r7, $r10, $r12;
        com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy $r11;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$WindowsForAccessibilityCallback;

        r1 := @parameter0: java.util.List;

        $r7 = r0.<com.android.server.accessibility.AccessibilityManagerService$WindowsForAccessibilityCallback: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r8 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$000(com.android.server.accessibility.AccessibilityManagerService)>($r7);

        r2 = $r8;

        entermonitor $r8;

     label1:
        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r3 = $r9;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r14 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (android.view.WindowInfo) $r14;

        r5 = specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$WindowsForAccessibilityCallback: android.view.accessibility.AccessibilityWindowInfo populateReportedWindow(android.view.WindowInfo)>(r4);

        if r5 == null goto label3;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r5);

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $r10 = r0.<com.android.server.accessibility.AccessibilityManagerService$WindowsForAccessibilityCallback: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r11 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy access$3100(com.android.server.accessibility.AccessibilityManagerService)>($r10);

        virtualinvoke $r11.<com.android.server.accessibility.AccessibilityManagerService$SecurityPolicy: void updateWindowsLocked(java.util.List)>(r3);

        $r12 = r0.<com.android.server.accessibility.AccessibilityManagerService$WindowsForAccessibilityCallback: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r13 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: java.lang.Object access$000(com.android.server.accessibility.AccessibilityManagerService)>($r12);

        virtualinvoke $r13.<java.lang.Object: void notifyAll()>();

        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r15 := @caughtexception;

        r6 = $r15;

        exitmonitor r2;

     label7:
        throw r6;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private android.view.accessibility.AccessibilityWindowInfo populateReportedWindow(android.view.WindowInfo)
    {
        com.android.server.accessibility.AccessibilityManagerService$WindowsForAccessibilityCallback r0;
        android.view.WindowInfo r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        android.view.accessibility.AccessibilityWindowInfo r2;
        android.os.IBinder r3, $r4, $r8;
        com.android.server.accessibility.AccessibilityManagerService $r5, $r7, $r13;
        android.graphics.Rect $r6;
        boolean $z0;
        java.util.List $r9, $r10, $r12;
        java.lang.Object $r11;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$WindowsForAccessibilityCallback;

        r1 := @parameter0: android.view.WindowInfo;

        $r5 = r0.<com.android.server.accessibility.AccessibilityManagerService$WindowsForAccessibilityCallback: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r4 = r1.<android.view.WindowInfo: android.os.IBinder token>;

        i0 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: int access$4400(com.android.server.accessibility.AccessibilityManagerService,android.os.IBinder)>($r5, $r4);

        if i0 >= 0 goto label1;

        return null;

     label1:
        r2 = staticinvoke <android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo obtain()>();

        virtualinvoke r2.<android.view.accessibility.AccessibilityWindowInfo: void setId(int)>(i0);

        $i5 = r1.<android.view.WindowInfo: int type>;

        $i6 = specialinvoke r0.<com.android.server.accessibility.AccessibilityManagerService$WindowsForAccessibilityCallback: int getTypeForWindowManagerWindowType(int)>($i5);

        virtualinvoke r2.<android.view.accessibility.AccessibilityWindowInfo: void setType(int)>($i6);

        $i7 = r1.<android.view.WindowInfo: int layer>;

        virtualinvoke r2.<android.view.accessibility.AccessibilityWindowInfo: void setLayer(int)>($i7);

        $z0 = r1.<android.view.WindowInfo: boolean focused>;

        virtualinvoke r2.<android.view.accessibility.AccessibilityWindowInfo: void setFocused(boolean)>($z0);

        $r6 = r1.<android.view.WindowInfo: android.graphics.Rect boundsInScreen>;

        virtualinvoke r2.<android.view.accessibility.AccessibilityWindowInfo: void setBoundsInScreen(android.graphics.Rect)>($r6);

        $r7 = r0.<com.android.server.accessibility.AccessibilityManagerService$WindowsForAccessibilityCallback: com.android.server.accessibility.AccessibilityManagerService this$0>;

        $r8 = r1.<android.view.WindowInfo: android.os.IBinder parentToken>;

        i1 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: int access$4400(com.android.server.accessibility.AccessibilityManagerService,android.os.IBinder)>($r7, $r8);

        if i1 < 0 goto label2;

        virtualinvoke r2.<android.view.accessibility.AccessibilityWindowInfo: void setParentId(int)>(i1);

     label2:
        $r9 = r1.<android.view.WindowInfo: java.util.List childTokens>;

        if $r9 == null goto label5;

        $r10 = r1.<android.view.WindowInfo: java.util.List childTokens>;

        i2 = interfaceinvoke $r10.<java.util.List: int size()>();

        i3 = 0;

     label3:
        if i3 >= i2 goto label5;

        $r12 = r1.<android.view.WindowInfo: java.util.List childTokens>;

        $r11 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(i3);

        r3 = (android.os.IBinder) $r11;

        $r13 = r0.<com.android.server.accessibility.AccessibilityManagerService$WindowsForAccessibilityCallback: com.android.server.accessibility.AccessibilityManagerService this$0>;

        i4 = staticinvoke <com.android.server.accessibility.AccessibilityManagerService: int access$4400(com.android.server.accessibility.AccessibilityManagerService,android.os.IBinder)>($r13, r3);

        if i4 < 0 goto label4;

        virtualinvoke r2.<android.view.accessibility.AccessibilityWindowInfo: void addChild(int)>(i4);

     label4:
        i3 = i3 + 1;

        goto label3;

     label5:
        return r2;
    }

    private int getTypeForWindowManagerWindowType(int)
    {
        com.android.server.accessibility.AccessibilityManagerService$WindowsForAccessibilityCallback r0;
        int i0;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$WindowsForAccessibilityCallback;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 1000: goto label1;
            case 1001: goto label1;
            case 1002: goto label1;
            case 1003: goto label1;
            case 2000: goto label3;
            case 2001: goto label3;
            case 2002: goto label1;
            case 2003: goto label3;
            case 2005: goto label1;
            case 2006: goto label3;
            case 2007: goto label1;
            case 2008: goto label3;
            case 2009: goto label3;
            case 2010: goto label3;
            case 2011: goto label2;
            case 2012: goto label2;
            case 2014: goto label3;
            case 2017: goto label3;
            case 2019: goto label3;
            case 2020: goto label3;
            case 2024: goto label3;
            case 2028: goto label3;
            default: goto label4;
        };

     label1:
        return 1;

     label2:
        return 2;

     label3:
        return 3;

     label4:
        return -1;
    }
}
