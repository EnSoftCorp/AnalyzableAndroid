class com.android.server.wm.EmulatorDisplayOverlay extends java.lang.Object
{
    private static final java.lang.String TAG;
    private android.graphics.Point mScreenSize;
    private final android.view.SurfaceControl mSurfaceControl;
    private final android.view.Surface mSurface;
    private int mLastDW;
    private int mLastDH;
    private boolean mDrawNeeded;
    private android.graphics.drawable.Drawable mOverlay;
    private int mRotation;
    private boolean mVisible;

    public void <init>(android.content.Context, android.view.Display, android.view.SurfaceSession, int)
    {
        com.android.server.wm.EmulatorDisplayOverlay r0;
        android.content.Context r1;
        android.view.Display r2;
        android.view.SurfaceSession r3;
        int i0, $i1, $i2, $i3;
        android.view.SurfaceControl r4, $r9;
        android.view.Surface $r6, $r13;
        android.graphics.Point $r7, $r8, $r10, $r11;
        android.graphics.drawable.Drawable $r12;
        android.view.Surface$OutOfResourcesException $r14;

        r0 := @this: com.android.server.wm.EmulatorDisplayOverlay;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.Display;

        r3 := @parameter2: android.view.SurfaceSession;

        i0 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = new android.view.Surface;

        specialinvoke $r6.<android.view.Surface: void <init>()>();

        r0.<com.android.server.wm.EmulatorDisplayOverlay: android.view.Surface mSurface> = $r6;

        $r7 = new android.graphics.Point;

        specialinvoke $r7.<android.graphics.Point: void <init>()>();

        r0.<com.android.server.wm.EmulatorDisplayOverlay: android.graphics.Point mScreenSize> = $r7;

        $r8 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.graphics.Point mScreenSize>;

        virtualinvoke r2.<android.view.Display: void getSize(android.graphics.Point)>($r8);

        r4 = null;

     label1:
        $r9 = new android.view.SurfaceControl;

        $r10 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.graphics.Point mScreenSize>;

        $i2 = $r10.<android.graphics.Point: int x>;

        $r11 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.graphics.Point mScreenSize>;

        $i1 = $r11.<android.graphics.Point: int y>;

        specialinvoke $r9.<android.view.SurfaceControl: void <init>(android.view.SurfaceSession,java.lang.String,int,int,int,int)>(r3, "EmulatorDisplayOverlay", $i2, $i1, -3, 4);

        r4 = $r9;

        $i3 = virtualinvoke r2.<android.view.Display: int getLayerStack()>();

        virtualinvoke r4.<android.view.SurfaceControl: void setLayerStack(int)>($i3);

        virtualinvoke r4.<android.view.SurfaceControl: void setLayer(int)>(i0);

        virtualinvoke r4.<android.view.SurfaceControl: void setPosition(float,float)>(0.0F, 0.0F);

        virtualinvoke r4.<android.view.SurfaceControl: void show()>();

        $r13 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.view.Surface mSurface>;

        virtualinvoke $r13.<android.view.Surface: void copyFrom(android.view.SurfaceControl)>(r4);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

     label4:
        r0.<com.android.server.wm.EmulatorDisplayOverlay: android.view.SurfaceControl mSurfaceControl> = r4;

        r0.<com.android.server.wm.EmulatorDisplayOverlay: boolean mDrawNeeded> = 1;

        $r12 = virtualinvoke r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(17302242);

        r0.<com.android.server.wm.EmulatorDisplayOverlay: android.graphics.drawable.Drawable mOverlay> = $r12;

        return;

        catch android.view.Surface$OutOfResourcesException from label1 to label2 with label3;
    }

    private void drawIfNeeded()
    {
        com.android.server.wm.EmulatorDisplayOverlay r0;
        android.graphics.Rect r1, $r4;
        android.graphics.Canvas r2;
        boolean $z0, $z1;
        android.graphics.Point $r5, $r6, $r10, $r11;
        int $i0, $i1, $i2, $i3;
        android.view.Surface $r7, $r13;
        android.graphics.PorterDuff$Mode $r8;
        android.view.SurfaceControl $r9;
        android.graphics.drawable.Drawable $r12, $r14;
        android.view.Surface$OutOfResourcesException $r15;
        java.lang.IllegalArgumentException $r16;

        r0 := @this: com.android.server.wm.EmulatorDisplayOverlay;

        $z0 = r0.<com.android.server.wm.EmulatorDisplayOverlay: boolean mDrawNeeded>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.server.wm.EmulatorDisplayOverlay: boolean mVisible>;

        if $z1 != 0 goto label2;

     label1:
        return;

     label2:
        r0.<com.android.server.wm.EmulatorDisplayOverlay: boolean mDrawNeeded> = 0;

        $r4 = new android.graphics.Rect;

        $r5 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.graphics.Point mScreenSize>;

        $i1 = $r5.<android.graphics.Point: int x>;

        $r6 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.graphics.Point mScreenSize>;

        $i0 = $r6.<android.graphics.Point: int y>;

        specialinvoke $r4.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i1, $i0);

        r1 = $r4;

        r2 = null;

     label3:
        $r7 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.view.Surface mSurface>;

        r2 = virtualinvoke $r7.<android.view.Surface: android.graphics.Canvas lockCanvas(android.graphics.Rect)>(r1);

     label4:
        goto label7;

     label5:
        $r16 := @caughtexception;

        goto label7;

     label6:
        $r15 := @caughtexception;

     label7:
        if r2 != null goto label8;

        return;

     label8:
        $r8 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC>;

        virtualinvoke r2.<android.graphics.Canvas: void drawColor(int,android.graphics.PorterDuff$Mode)>(0, $r8);

        $r9 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r9.<android.view.SurfaceControl: void setPosition(float,float)>(0.0F, 0.0F);

        $r12 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.graphics.drawable.Drawable mOverlay>;

        $r10 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.graphics.Point mScreenSize>;

        $i3 = $r10.<android.graphics.Point: int x>;

        $r11 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.graphics.Point mScreenSize>;

        $i2 = $r11.<android.graphics.Point: int y>;

        virtualinvoke $r12.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i3, $i2);

        $r14 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.graphics.drawable.Drawable mOverlay>;

        virtualinvoke $r14.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r2);

        $r13 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.view.Surface mSurface>;

        virtualinvoke $r13.<android.view.Surface: void unlockCanvasAndPost(android.graphics.Canvas)>(r2);

        return;

        catch java.lang.IllegalArgumentException from label3 to label4 with label5;
        catch android.view.Surface$OutOfResourcesException from label3 to label4 with label6;
    }

    public void setVisibility(boolean)
    {
        com.android.server.wm.EmulatorDisplayOverlay r0;
        boolean z0;
        android.view.SurfaceControl $r1, $r2, $r3;

        r0 := @this: com.android.server.wm.EmulatorDisplayOverlay;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.view.SurfaceControl mSurfaceControl>;

        if $r1 != null goto label1;

        return;

     label1:
        r0.<com.android.server.wm.EmulatorDisplayOverlay: boolean mVisible> = z0;

        specialinvoke r0.<com.android.server.wm.EmulatorDisplayOverlay: void drawIfNeeded()>();

        if z0 == 0 goto label2;

        $r3 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r3.<android.view.SurfaceControl: void show()>();

        goto label3;

     label2:
        $r2 = r0.<com.android.server.wm.EmulatorDisplayOverlay: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r2.<android.view.SurfaceControl: void hide()>();

     label3:
        return;
    }

    void positionSurface(int, int, int)
    {
        com.android.server.wm.EmulatorDisplayOverlay r0;
        int i0, i1, i2, $i3, $i4, $i5;

        r0 := @this: com.android.server.wm.EmulatorDisplayOverlay;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = r0.<com.android.server.wm.EmulatorDisplayOverlay: int mLastDW>;

        if $i3 != i0 goto label1;

        $i4 = r0.<com.android.server.wm.EmulatorDisplayOverlay: int mLastDH>;

        if $i4 != i1 goto label1;

        $i5 = r0.<com.android.server.wm.EmulatorDisplayOverlay: int mRotation>;

        if $i5 != i2 goto label1;

        return;

     label1:
        r0.<com.android.server.wm.EmulatorDisplayOverlay: int mLastDW> = i0;

        r0.<com.android.server.wm.EmulatorDisplayOverlay: int mLastDH> = i1;

        r0.<com.android.server.wm.EmulatorDisplayOverlay: boolean mDrawNeeded> = 1;

        r0.<com.android.server.wm.EmulatorDisplayOverlay: int mRotation> = i2;

        specialinvoke r0.<com.android.server.wm.EmulatorDisplayOverlay: void drawIfNeeded()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.EmulatorDisplayOverlay: java.lang.String TAG> = "EmulatorDisplayOverlay";

        return;
    }
}
