public class com.android.server.backup.FullBackupJob extends android.app.job.JobService
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private static android.content.ComponentName sIdleService;
    private static final int JOB_ID;
    android.app.job.JobParameters mParams;

    public void <init>()
    {
        com.android.server.backup.FullBackupJob r0;

        r0 := @this: com.android.server.backup.FullBackupJob;

        specialinvoke r0.<android.app.job.JobService: void <init>()>();

        return;
    }

    public static void schedule(android.content.Context, long)
    {
        android.content.Context r0;
        long l0;
        android.app.job.JobScheduler r1;
        android.app.job.JobInfo$Builder r2, $r4, $r6, $r7;
        java.lang.Object $r3;
        android.content.ComponentName $r5;
        byte $b1;
        android.app.job.JobInfo $r8;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        $r3 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("jobscheduler");

        r1 = (android.app.job.JobScheduler) $r3;

        $r4 = new android.app.job.JobInfo$Builder;

        $r5 = <com.android.server.backup.FullBackupJob: android.content.ComponentName sIdleService>;

        specialinvoke $r4.<android.app.job.JobInfo$Builder: void <init>(int,android.content.ComponentName)>(20536, $r5);

        $r6 = virtualinvoke $r4.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiresDeviceIdle(boolean)>(1);

        $r7 = virtualinvoke $r6.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiredNetworkType(int)>(2);

        r2 = virtualinvoke $r7.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiresCharging(boolean)>(1);

        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label1;

        virtualinvoke r2.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setMinimumLatency(long)>(l0);

     label1:
        $r8 = virtualinvoke r2.<android.app.job.JobInfo$Builder: android.app.job.JobInfo build()>();

        virtualinvoke r1.<android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>($r8);

        return;
    }

    public void finishBackupPass()
    {
        com.android.server.backup.FullBackupJob r0;
        android.app.job.JobParameters $r1, $r2;

        r0 := @this: com.android.server.backup.FullBackupJob;

        $r1 = r0.<com.android.server.backup.FullBackupJob: android.app.job.JobParameters mParams>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.backup.FullBackupJob: android.app.job.JobParameters mParams>;

        virtualinvoke r0.<com.android.server.backup.FullBackupJob: void jobFinished(android.app.job.JobParameters,boolean)>($r2, 0);

        r0.<com.android.server.backup.FullBackupJob: android.app.job.JobParameters mParams> = null;

     label1:
        return;
    }

    public boolean onStartJob(android.app.job.JobParameters)
    {
        com.android.server.backup.FullBackupJob r0;
        android.app.job.JobParameters r1;
        com.android.server.backup.BackupManagerService r2;
        boolean $z0;

        r0 := @this: com.android.server.backup.FullBackupJob;

        r1 := @parameter0: android.app.job.JobParameters;

        r0.<com.android.server.backup.FullBackupJob: android.app.job.JobParameters mParams> = r1;

        r2 = staticinvoke <com.android.server.backup.BackupManagerService: com.android.server.backup.BackupManagerService getInstance()>();

        $z0 = virtualinvoke r2.<com.android.server.backup.BackupManagerService: boolean beginFullBackup(com.android.server.backup.FullBackupJob)>(r0);

        return $z0;
    }

    public boolean onStopJob(android.app.job.JobParameters)
    {
        com.android.server.backup.FullBackupJob r0;
        android.app.job.JobParameters r1, $r3;
        com.android.server.backup.BackupManagerService r2;

        r0 := @this: com.android.server.backup.FullBackupJob;

        r1 := @parameter0: android.app.job.JobParameters;

        $r3 = r0.<com.android.server.backup.FullBackupJob: android.app.job.JobParameters mParams>;

        if $r3 == null goto label1;

        r0.<com.android.server.backup.FullBackupJob: android.app.job.JobParameters mParams> = null;

        r2 = staticinvoke <com.android.server.backup.BackupManagerService: com.android.server.backup.BackupManagerService getInstance()>();

        virtualinvoke r2.<com.android.server.backup.BackupManagerService: void endFullBackup()>();

     label1:
        return 0;
    }

    static void <clinit>()
    {
        android.content.ComponentName $r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        <com.android.server.backup.FullBackupJob: int JOB_ID> = 20536;

        <com.android.server.backup.FullBackupJob: boolean DEBUG> = 1;

        <com.android.server.backup.FullBackupJob: java.lang.String TAG> = "FullBackupJob";

        $r0 = new android.content.ComponentName;

        $r1 = class "com/android/server/backup/FullBackupJob";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r0.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("android", $r2);

        <com.android.server.backup.FullBackupJob: android.content.ComponentName sIdleService> = $r0;

        return;
    }
}
