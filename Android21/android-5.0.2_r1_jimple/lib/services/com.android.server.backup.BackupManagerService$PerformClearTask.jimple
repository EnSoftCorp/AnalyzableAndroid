class com.android.server.backup.BackupManagerService$PerformClearTask extends java.lang.Object implements java.lang.Runnable
{
    com.android.internal.backup.IBackupTransport mTransport;
    android.content.pm.PackageInfo mPackage;
    final com.android.server.backup.BackupManagerService this$0;

    void <init>(com.android.server.backup.BackupManagerService, com.android.internal.backup.IBackupTransport, android.content.pm.PackageInfo)
    {
        com.android.server.backup.BackupManagerService$PerformClearTask r0;
        com.android.server.backup.BackupManagerService r1;
        com.android.internal.backup.IBackupTransport r2;
        android.content.pm.PackageInfo r3;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformClearTask;

        r1 := @parameter0: com.android.server.backup.BackupManagerService;

        r2 := @parameter1: com.android.internal.backup.IBackupTransport;

        r3 := @parameter2: android.content.pm.PackageInfo;

        r0.<com.android.server.backup.BackupManagerService$PerformClearTask: com.android.server.backup.BackupManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.backup.BackupManagerService$PerformClearTask: com.android.internal.backup.IBackupTransport mTransport> = r2;

        r0.<com.android.server.backup.BackupManagerService$PerformClearTask: android.content.pm.PackageInfo mPackage> = r3;

        return;
    }

    public void run()
    {
        com.android.server.backup.BackupManagerService$PerformClearTask r0;
        java.io.File r1, r2, $r5, $r8, $r10;
        java.lang.Throwable r3, $r23;
        com.android.server.backup.BackupManagerService $r6, $r16, $r21, $r24, $r27;
        com.android.internal.backup.IBackupTransport $r7, $r14, $r15, $r19, $r22, $r38;
        java.lang.String $r9, $r12, $r34;
        android.content.pm.PackageInfo $r11, $r13, $r35;
        android.os.RemoteException $r17, $r25, $r29, $r30, $r37;
        android.os.PowerManager$WakeLock $r18, $r20, $r26, $r28;
        java.lang.StringBuilder $r31, $r33, $r36;
        java.lang.Exception $r32;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformClearTask;

     label01:
        $r5 = new java.io.File;

        $r6 = r0.<com.android.server.backup.BackupManagerService$PerformClearTask: com.android.server.backup.BackupManagerService this$0>;

        $r8 = $r6.<com.android.server.backup.BackupManagerService: java.io.File mBaseStateDir>;

        $r7 = r0.<com.android.server.backup.BackupManagerService$PerformClearTask: com.android.internal.backup.IBackupTransport mTransport>;

        $r9 = interfaceinvoke $r7.<com.android.internal.backup.IBackupTransport: java.lang.String transportDirName()>();

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r8, $r9);

        r1 = $r5;

        $r10 = new java.io.File;

        $r11 = r0.<com.android.server.backup.BackupManagerService$PerformClearTask: android.content.pm.PackageInfo mPackage>;

        $r12 = $r11.<android.content.pm.PackageInfo: java.lang.String packageName>;

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, $r12);

        r2 = $r10;

        virtualinvoke r2.<java.io.File: boolean delete()>();

        $r14 = r0.<com.android.server.backup.BackupManagerService$PerformClearTask: com.android.internal.backup.IBackupTransport mTransport>;

        $r13 = r0.<com.android.server.backup.BackupManagerService$PerformClearTask: android.content.pm.PackageInfo mPackage>;

        interfaceinvoke $r14.<com.android.internal.backup.IBackupTransport: int clearBackupData(android.content.pm.PackageInfo)>($r13);

     label02:
        $r15 = r0.<com.android.server.backup.BackupManagerService$PerformClearTask: com.android.internal.backup.IBackupTransport mTransport>;

        interfaceinvoke $r15.<com.android.internal.backup.IBackupTransport: int finishBackup()>();

     label03:
        goto label05;

     label04:
        $r25 := @caughtexception;

     label05:
        $r16 = r0.<com.android.server.backup.BackupManagerService$PerformClearTask: com.android.server.backup.BackupManagerService this$0>;

        $r18 = $r16.<com.android.server.backup.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r18.<android.os.PowerManager$WakeLock: void release()>();

        goto label21;

     label06:
        $r17 := @caughtexception;

     label07:
        $r19 = r0.<com.android.server.backup.BackupManagerService$PerformClearTask: com.android.internal.backup.IBackupTransport mTransport>;

        interfaceinvoke $r19.<com.android.internal.backup.IBackupTransport: int finishBackup()>();

     label08:
        goto label10;

     label09:
        $r37 := @caughtexception;

     label10:
        $r21 = r0.<com.android.server.backup.BackupManagerService$PerformClearTask: com.android.server.backup.BackupManagerService this$0>;

        $r20 = $r21.<com.android.server.backup.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r20.<android.os.PowerManager$WakeLock: void release()>();

        goto label21;

     label11:
        $r32 := @caughtexception;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Transport threw attempting to clear data for ");

        $r35 = r0.<com.android.server.backup.BackupManagerService$PerformClearTask: android.content.pm.PackageInfo mPackage>;

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r35);

        $r34 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", $r34);

     label12:
        $r38 = r0.<com.android.server.backup.BackupManagerService$PerformClearTask: com.android.internal.backup.IBackupTransport mTransport>;

        interfaceinvoke $r38.<com.android.internal.backup.IBackupTransport: int finishBackup()>();

     label13:
        goto label15;

     label14:
        $r30 := @caughtexception;

     label15:
        $r27 = r0.<com.android.server.backup.BackupManagerService$PerformClearTask: com.android.server.backup.BackupManagerService this$0>;

        $r28 = $r27.<com.android.server.backup.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r28.<android.os.PowerManager$WakeLock: void release()>();

        goto label21;

     label16:
        $r23 := @caughtexception;

        r3 = $r23;

     label17:
        $r22 = r0.<com.android.server.backup.BackupManagerService$PerformClearTask: com.android.internal.backup.IBackupTransport mTransport>;

        interfaceinvoke $r22.<com.android.internal.backup.IBackupTransport: int finishBackup()>();

     label18:
        goto label20;

     label19:
        $r29 := @caughtexception;

     label20:
        $r24 = r0.<com.android.server.backup.BackupManagerService$PerformClearTask: com.android.server.backup.BackupManagerService this$0>;

        $r26 = $r24.<com.android.server.backup.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r26.<android.os.PowerManager$WakeLock: void release()>();

        throw r3;

     label21:
        return;

        catch android.os.RemoteException from label02 to label03 with label04;
        catch android.os.RemoteException from label01 to label02 with label06;
        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.Exception from label01 to label02 with label11;
        catch android.os.RemoteException from label12 to label13 with label14;
        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch android.os.RemoteException from label17 to label18 with label19;
        catch java.lang.Throwable from label16 to label17 with label16;
    }
}
