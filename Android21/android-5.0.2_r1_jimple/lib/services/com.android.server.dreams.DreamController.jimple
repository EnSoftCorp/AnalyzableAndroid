final class com.android.server.dreams.DreamController extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final int DREAM_CONNECTION_TIMEOUT;
    private static final int DREAM_FINISH_TIMEOUT;
    private final android.content.Context mContext;
    private final android.os.Handler mHandler;
    private final com.android.server.dreams.DreamController$Listener mListener;
    private final android.view.IWindowManager mIWindowManager;
    private final android.content.Intent mDreamingStartedIntent;
    private final android.content.Intent mDreamingStoppedIntent;
    private final android.content.Intent mCloseNotificationShadeIntent;
    private com.android.server.dreams.DreamController$DreamRecord mCurrentDream;
    private final java.lang.Runnable mStopUnconnectedDreamRunnable;
    private final java.lang.Runnable mStopStubbornDreamRunnable;

    public void <init>(android.content.Context, android.os.Handler, com.android.server.dreams.DreamController$Listener)
    {
        com.android.server.dreams.DreamController r0;
        android.content.Context r1;
        android.os.Handler r2;
        com.android.server.dreams.DreamController$Listener r3;
        android.content.Intent $r4, $r5, $r6, $r7, $r8;
        com.android.server.dreams.DreamController$1 $r9;
        com.android.server.dreams.DreamController$2 $r10;
        android.view.IWindowManager $r11;

        r0 := @this: com.android.server.dreams.DreamController;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: com.android.server.dreams.DreamController$Listener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.DREAMING_STARTED");

        $r5 = virtualinvoke $r4.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        r0.<com.android.server.dreams.DreamController: android.content.Intent mDreamingStartedIntent> = $r5;

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.DREAMING_STOPPED");

        $r7 = virtualinvoke $r6.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        r0.<com.android.server.dreams.DreamController: android.content.Intent mDreamingStoppedIntent> = $r7;

        $r8 = new android.content.Intent;

        specialinvoke $r8.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.CLOSE_SYSTEM_DIALOGS");

        r0.<com.android.server.dreams.DreamController: android.content.Intent mCloseNotificationShadeIntent> = $r8;

        $r9 = new com.android.server.dreams.DreamController$1;

        specialinvoke $r9.<com.android.server.dreams.DreamController$1: void <init>(com.android.server.dreams.DreamController)>(r0);

        r0.<com.android.server.dreams.DreamController: java.lang.Runnable mStopUnconnectedDreamRunnable> = $r9;

        $r10 = new com.android.server.dreams.DreamController$2;

        specialinvoke $r10.<com.android.server.dreams.DreamController$2: void <init>(com.android.server.dreams.DreamController)>(r0);

        r0.<com.android.server.dreams.DreamController: java.lang.Runnable mStopStubbornDreamRunnable> = $r10;

        r0.<com.android.server.dreams.DreamController: android.content.Context mContext> = r1;

        r0.<com.android.server.dreams.DreamController: android.os.Handler mHandler> = r2;

        r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$Listener mListener> = r3;

        $r11 = staticinvoke <android.view.WindowManagerGlobal: android.view.IWindowManager getWindowManagerService()>();

        r0.<com.android.server.dreams.DreamController: android.view.IWindowManager mIWindowManager> = $r11;

        return;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.dreams.DreamController r0;
        java.io.PrintWriter r1;
        com.android.server.dreams.DreamController$DreamRecord $r2, $r5, $r11, $r16, $r21, $r26, $r30, $r39, $r41, $r48;
        java.lang.StringBuilder $r3, $r4, $r7, $r9, $r10, $r13, $r15, $r17, $r18, $r19, $r22, $r23, $r24, $r27, $r28, $r29, $r32, $r34, $r35, $r37, $r38, $r40, $r43, $r44, $r46, $r47, $r49;
        android.os.Binder $r6;
        java.lang.String $r8, $r14, $r20, $r25, $r31, $r33, $r42, $r45, $r50;
        android.content.ComponentName $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0;
        android.service.dreams.IDreamService $r36;

        r0 := @this: com.android.server.dreams.DreamController;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Dreamland:");

        $r2 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        if $r2 == null goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  mCurrentDream:");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mToken=");

        $r5 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $r6 = $r5.<com.android.server.dreams.DreamController$DreamRecord: android.os.Binder mToken>;

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mName=");

        $r11 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $r12 = $r11.<com.android.server.dreams.DreamController$DreamRecord: android.content.ComponentName mName>;

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mIsTest=");

        $r16 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $z0 = $r16.<com.android.server.dreams.DreamController$DreamRecord: boolean mIsTest>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mCanDoze=");

        $r21 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $z1 = $r21.<com.android.server.dreams.DreamController$DreamRecord: boolean mCanDoze>;

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r25);

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mUserId=");

        $r26 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $i0 = $r26.<com.android.server.dreams.DreamController$DreamRecord: int mUserId>;

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r31);

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mBound=");

        $r30 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $z2 = $r30.<com.android.server.dreams.DreamController$DreamRecord: boolean mBound>;

        $r35 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r33 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r33);

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mService=");

        $r39 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $r36 = $r39.<com.android.server.dreams.DreamController$DreamRecord: android.service.dreams.IDreamService mService>;

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r36);

        $r42 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r42);

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mSentStartBroadcast=");

        $r41 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $z3 = $r41.<com.android.server.dreams.DreamController$DreamRecord: boolean mSentStartBroadcast>;

        $r46 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r45);

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mWakingGently=");

        $r48 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $z4 = $r48.<com.android.server.dreams.DreamController$DreamRecord: boolean mWakingGently>;

        $r47 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r50 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r50);

        goto label2;

     label1:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  mCurrentDream: null");

     label2:
        return;
    }

    public void startDream(android.os.Binder, android.content.ComponentName, boolean, boolean, int)
    {
        com.android.server.dreams.DreamController r0;
        android.os.Binder r1;
        android.content.ComponentName r2;
        boolean z0, z1, $z2;
        int i0;
        android.os.RemoteException r3, $r40;
        java.lang.SecurityException r4, $r35;
        java.lang.Throwable r5, $r37;
        android.os.UserHandle $r6, $r23;
        android.content.Intent $r7, $r22, r41;
        android.content.Context $r8, $r26;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r29, $r32, $r33, $r34, $r36, $r39;
        java.lang.String $r18, $r31, $r38;
        android.view.IWindowManager $r19;
        com.android.server.dreams.DreamController$DreamRecord $r20, $r25, $r27;
        java.lang.Runnable $r28;
        android.os.Handler $r30;

        r0 := @this: com.android.server.dreams.DreamController;

        r1 := @parameter0: android.os.Binder;

        r2 := @parameter1: android.content.ComponentName;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i0 := @parameter4: int;

        virtualinvoke r0.<com.android.server.dreams.DreamController: void stopDream(boolean)>(1);

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(131072L, "startDream");

     label01:
        $r8 = r0.<com.android.server.dreams.DreamController: android.content.Context mContext>;

        $r7 = r0.<com.android.server.dreams.DreamController: android.content.Intent mCloseNotificationShadeIntent>;

        $r6 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r8.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r7, $r6);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting dream: name=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isTest=");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", canDoze=");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", userId=");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("DreamController", $r18);

        $r20 = new com.android.server.dreams.DreamController$DreamRecord;

        specialinvoke $r20.<com.android.server.dreams.DreamController$DreamRecord: void <init>(com.android.server.dreams.DreamController,android.os.Binder,android.content.ComponentName,boolean,boolean,int)>(r0, r1, r2, z0, z1, i0);

        r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream> = $r20;

     label02:
        $r19 = r0.<com.android.server.dreams.DreamController: android.view.IWindowManager mIWindowManager>;

        interfaceinvoke $r19.<android.view.IWindowManager: void addWindowToken(android.os.IBinder,int)>(r1, 2023);

     label03:
        goto label06;

     label04:
        $r40 := @caughtexception;

        r3 = $r40;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DreamController", "Unable to add window token for dream.", r3);

        virtualinvoke r0.<com.android.server.dreams.DreamController: void stopDream(boolean)>(1);

     label05:
        staticinvoke <android.os.Trace: void traceEnd(long)>(131072L);

        return;

     label06:
        $r22 = new android.content.Intent;

        specialinvoke $r22.<android.content.Intent: void <init>(java.lang.String)>("android.service.dreams.DreamService");

        r41 = $r22;

        virtualinvoke r41.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r2);

        virtualinvoke r41.<android.content.Intent: android.content.Intent addFlags(int)>(8388608);

     label07:
        $r26 = r0.<com.android.server.dreams.DreamController: android.content.Context mContext>;

        $r25 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $r23 = new android.os.UserHandle;

        specialinvoke $r23.<android.os.UserHandle: void <init>(int)>(i0);

        $z2 = virtualinvoke $r26.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>(r41, $r25, 1, $r23);

        if $z2 != 0 goto label09;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to bind dream service: ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r41);

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("DreamController", $r31);

        virtualinvoke r0.<com.android.server.dreams.DreamController: void stopDream(boolean)>(1);

     label08:
        staticinvoke <android.os.Trace: void traceEnd(long)>(131072L);

        return;

     label09:
        goto label12;

     label10:
        $r35 := @caughtexception;

        r4 = $r35;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to bind dream service: ");

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r41);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DreamController", $r38, r4);

        virtualinvoke r0.<com.android.server.dreams.DreamController: void stopDream(boolean)>(1);

     label11:
        staticinvoke <android.os.Trace: void traceEnd(long)>(131072L);

        return;

     label12:
        $r27 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $r27.<com.android.server.dreams.DreamController$DreamRecord: boolean mBound> = 1;

        $r30 = r0.<com.android.server.dreams.DreamController: android.os.Handler mHandler>;

        $r28 = r0.<com.android.server.dreams.DreamController: java.lang.Runnable mStopUnconnectedDreamRunnable>;

        virtualinvoke $r30.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r28, 5000L);

     label13:
        staticinvoke <android.os.Trace: void traceEnd(long)>(131072L);

        goto label16;

     label14:
        $r37 := @caughtexception;

        r5 = $r37;

     label15:
        staticinvoke <android.os.Trace: void traceEnd(long)>(131072L);

        throw r5;

     label16:
        return;

        catch android.os.RemoteException from label02 to label03 with label04;
        catch java.lang.SecurityException from label07 to label08 with label10;
        catch java.lang.Throwable from label01 to label05 with label14;
        catch java.lang.Throwable from label06 to label08 with label14;
        catch java.lang.Throwable from label09 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public void stopDream(boolean)
    {
        com.android.server.dreams.DreamController r0;
        boolean z0, $z1, $z2, $z3, $z4, $z7;
        java.lang.Throwable r3, $r40;
        com.android.server.dreams.DreamController$DreamRecord $r4, $r30, $r33, $r34, $r35, r45;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        android.content.ComponentName $r7;
        int $i0;
        java.lang.String $r15;
        android.os.Handler $r16, $r18, $r26, $r37;
        java.lang.Runnable $r17, $r19, $r38;
        android.service.dreams.IDreamService $r20, $r25, $r28, $r36, $r39;
        android.os.Binder $r21;
        com.android.server.dreams.DreamController$3 $r22;
        android.view.IWindowManager $r23;
        android.content.Context $r24, $r32;
        android.os.UserHandle $r27;
        android.os.IBinder $r29;
        android.content.Intent $r31;
        android.os.RemoteException $r41, $r42, $r44, r47;
        java.util.NoSuchElementException $r43;

        r0 := @this: com.android.server.dreams.DreamController;

        z0 := @parameter0: boolean;

        $r4 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        if $r4 != null goto label01;

        return;

     label01:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(131072L, "stopDream");

     label02:
        if z0 != 0 goto label08;

        $r30 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $z7 = $r30.<com.android.server.dreams.DreamController$DreamRecord: boolean mWakingGently>;

        if $z7 == 0 goto label04;

     label03:
        staticinvoke <android.os.Trace: void traceEnd(long)>(131072L);

        return;

     label04:
        $r35 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $r36 = $r35.<com.android.server.dreams.DreamController$DreamRecord: android.service.dreams.IDreamService mService>;

        if $r36 == null goto label08;

        $r33 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $r33.<com.android.server.dreams.DreamController$DreamRecord: boolean mWakingGently> = 1;

     label05:
        $r34 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $r39 = $r34.<com.android.server.dreams.DreamController$DreamRecord: android.service.dreams.IDreamService mService>;

        interfaceinvoke $r39.<android.service.dreams.IDreamService: void wakeUp()>();

        $r37 = r0.<com.android.server.dreams.DreamController: android.os.Handler mHandler>;

        $r38 = r0.<com.android.server.dreams.DreamController: java.lang.Runnable mStopStubbornDreamRunnable>;

        virtualinvoke $r37.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r38, 5000L);

     label06:
        staticinvoke <android.os.Trace: void traceEnd(long)>(131072L);

        return;

     label07:
        $r41 := @caughtexception;

     label08:
        r45 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream> = null;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stopping dream: name=");

        $r7 = r45.<com.android.server.dreams.DreamController$DreamRecord: android.content.ComponentName mName>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isTest=");

        $z1 = r45.<com.android.server.dreams.DreamController$DreamRecord: boolean mIsTest>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", canDoze=");

        $z2 = r45.<com.android.server.dreams.DreamController$DreamRecord: boolean mCanDoze>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", userId=");

        $i0 = r45.<com.android.server.dreams.DreamController$DreamRecord: int mUserId>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("DreamController", $r15);

        $r16 = r0.<com.android.server.dreams.DreamController: android.os.Handler mHandler>;

        $r17 = r0.<com.android.server.dreams.DreamController: java.lang.Runnable mStopUnconnectedDreamRunnable>;

        virtualinvoke $r16.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r17);

        $r18 = r0.<com.android.server.dreams.DreamController: android.os.Handler mHandler>;

        $r19 = r0.<com.android.server.dreams.DreamController: java.lang.Runnable mStopStubbornDreamRunnable>;

        virtualinvoke $r18.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r19);

        $z3 = r45.<com.android.server.dreams.DreamController$DreamRecord: boolean mSentStartBroadcast>;

        if $z3 == 0 goto label09;

        $r32 = r0.<com.android.server.dreams.DreamController: android.content.Context mContext>;

        $r31 = r0.<com.android.server.dreams.DreamController: android.content.Intent mDreamingStoppedIntent>;

        $r27 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r32.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r31, $r27);

     label09:
        $r20 = r45.<com.android.server.dreams.DreamController$DreamRecord: android.service.dreams.IDreamService mService>;

        if $r20 == null goto label17;

     label10:
        $r25 = r45.<com.android.server.dreams.DreamController$DreamRecord: android.service.dreams.IDreamService mService>;

        interfaceinvoke $r25.<android.service.dreams.IDreamService: void detach()>();

     label11:
        goto label13;

     label12:
        $r44 := @caughtexception;

     label13:
        $r28 = r45.<com.android.server.dreams.DreamController$DreamRecord: android.service.dreams.IDreamService mService>;

        $r29 = interfaceinvoke $r28.<android.service.dreams.IDreamService: android.os.IBinder asBinder()>();

        interfaceinvoke $r29.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r45, 0);

     label14:
        goto label16;

     label15:
        $r43 := @caughtexception;

     label16:
        r45.<com.android.server.dreams.DreamController$DreamRecord: android.service.dreams.IDreamService mService> = null;

     label17:
        $z4 = r45.<com.android.server.dreams.DreamController$DreamRecord: boolean mBound>;

        if $z4 == 0 goto label18;

        $r24 = r0.<com.android.server.dreams.DreamController: android.content.Context mContext>;

        virtualinvoke $r24.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r45);

     label18:
        $r23 = r0.<com.android.server.dreams.DreamController: android.view.IWindowManager mIWindowManager>;

        $r21 = r45.<com.android.server.dreams.DreamController$DreamRecord: android.os.Binder mToken>;

        interfaceinvoke $r23.<android.view.IWindowManager: void removeWindowToken(android.os.IBinder)>($r21);

     label19:
        goto label21;

     label20:
        $r42 := @caughtexception;

        r47 = $r42;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("DreamController", "Error removing window token for dream.", r47);

     label21:
        $r26 = r0.<com.android.server.dreams.DreamController: android.os.Handler mHandler>;

        $r22 = new com.android.server.dreams.DreamController$3;

        specialinvoke $r22.<com.android.server.dreams.DreamController$3: void <init>(com.android.server.dreams.DreamController,com.android.server.dreams.DreamController$DreamRecord)>(r0, r45);

        virtualinvoke $r26.<android.os.Handler: boolean post(java.lang.Runnable)>($r22);

     label22:
        staticinvoke <android.os.Trace: void traceEnd(long)>(131072L);

        goto label25;

     label23:
        $r40 := @caughtexception;

        r3 = $r40;

     label24:
        staticinvoke <android.os.Trace: void traceEnd(long)>(131072L);

        throw r3;

     label25:
        return;

        catch android.os.RemoteException from label05 to label06 with label07;
        catch android.os.RemoteException from label10 to label11 with label12;
        catch java.util.NoSuchElementException from label13 to label14 with label15;
        catch android.os.RemoteException from label18 to label19 with label20;
        catch java.lang.Throwable from label02 to label03 with label23;
        catch java.lang.Throwable from label04 to label06 with label23;
        catch java.lang.Throwable from label07 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
    }

    private void attach(android.service.dreams.IDreamService)
    {
        com.android.server.dreams.DreamController r0;
        android.service.dreams.IDreamService r1;
        android.os.RemoteException r2, $r14;
        android.os.IBinder $r3;
        com.android.server.dreams.DreamController$DreamRecord $r4, $r5, $r6, $r8, $r9, $r13;
        boolean $z0, $z1;
        android.os.Binder $r7;
        android.os.UserHandle $r10;
        android.content.Intent $r11;
        android.content.Context $r12;

        r0 := @this: com.android.server.dreams.DreamController;

        r1 := @parameter0: android.service.dreams.IDreamService;

     label1:
        $r3 = interfaceinvoke r1.<android.service.dreams.IDreamService: android.os.IBinder asBinder()>();

        $r4 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        interfaceinvoke $r3.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r4, 0);

        $r5 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $r7 = $r5.<com.android.server.dreams.DreamController$DreamRecord: android.os.Binder mToken>;

        $r6 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $z0 = $r6.<com.android.server.dreams.DreamController$DreamRecord: boolean mCanDoze>;

        interfaceinvoke r1.<android.service.dreams.IDreamService: void attach(android.os.IBinder,boolean)>($r7, $z0);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        r2 = $r14;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("DreamController", "The dream service died unexpectedly.", r2);

        virtualinvoke r0.<com.android.server.dreams.DreamController: void stopDream(boolean)>(1);

        return;

     label4:
        $r8 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $r8.<com.android.server.dreams.DreamController$DreamRecord: android.service.dreams.IDreamService mService> = r1;

        $r9 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $z1 = $r9.<com.android.server.dreams.DreamController$DreamRecord: boolean mIsTest>;

        if $z1 != 0 goto label5;

        $r12 = r0.<com.android.server.dreams.DreamController: android.content.Context mContext>;

        $r11 = r0.<com.android.server.dreams.DreamController: android.content.Intent mDreamingStartedIntent>;

        $r10 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r12.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r11, $r10);

        $r13 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        $r13.<com.android.server.dreams.DreamController$DreamRecord: boolean mSentStartBroadcast> = 1;

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static com.android.server.dreams.DreamController$DreamRecord access$000(com.android.server.dreams.DreamController)
    {
        com.android.server.dreams.DreamController r0;
        com.android.server.dreams.DreamController$DreamRecord $r1;

        r0 := @parameter0: com.android.server.dreams.DreamController;

        $r1 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$DreamRecord mCurrentDream>;

        return $r1;
    }

    static com.android.server.dreams.DreamController$Listener access$100(com.android.server.dreams.DreamController)
    {
        com.android.server.dreams.DreamController r0;
        com.android.server.dreams.DreamController$Listener $r1;

        r0 := @parameter0: com.android.server.dreams.DreamController;

        $r1 = r0.<com.android.server.dreams.DreamController: com.android.server.dreams.DreamController$Listener mListener>;

        return $r1;
    }

    static android.os.Handler access$200(com.android.server.dreams.DreamController)
    {
        com.android.server.dreams.DreamController r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.dreams.DreamController;

        $r1 = r0.<com.android.server.dreams.DreamController: android.os.Handler mHandler>;

        return $r1;
    }

    static void access$300(com.android.server.dreams.DreamController, android.service.dreams.IDreamService)
    {
        com.android.server.dreams.DreamController r0;
        android.service.dreams.IDreamService r1;

        r0 := @parameter0: com.android.server.dreams.DreamController;

        r1 := @parameter1: android.service.dreams.IDreamService;

        specialinvoke r0.<com.android.server.dreams.DreamController: void attach(android.service.dreams.IDreamService)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.dreams.DreamController: int DREAM_FINISH_TIMEOUT> = 5000;

        <com.android.server.dreams.DreamController: int DREAM_CONNECTION_TIMEOUT> = 5000;

        <com.android.server.dreams.DreamController: java.lang.String TAG> = "DreamController";

        return;
    }
}
