final class com.android.server.am.ActivityStack extends java.lang.Object
{
    static final int LAUNCH_TICK;
    static final int PAUSE_TIMEOUT;
    static final int STOP_TIMEOUT;
    static final int DESTROY_TIMEOUT;
    static final long ACTIVITY_INACTIVE_RESET_TIME;
    static final long START_WARN_TIME;
    static final boolean SHOW_APP_STARTING_PREVIEW;
    static final long TRANSLUCENT_CONVERSION_TIMEOUT;
    static final boolean SCREENSHOT_FORCE_565;
    final com.android.server.am.ActivityManagerService mService;
    final com.android.server.wm.WindowManagerService mWindowManager;
    private java.util.ArrayList mTaskHistory;
    final java.util.ArrayList mValidateAppTokens;
    final java.util.ArrayList mLRUActivities;
    final java.util.ArrayList mNoAnimActivities;
    com.android.server.am.ActivityRecord mPausingActivity;
    com.android.server.am.ActivityRecord mLastPausedActivity;
    com.android.server.am.ActivityRecord mLastNoHistoryActivity;
    com.android.server.am.ActivityRecord mResumedActivity;
    com.android.server.am.ActivityRecord mLastStartedActivity;
    com.android.server.am.ActivityRecord mTranslucentActivityWaiting;
    private java.util.ArrayList mUndrawnActivitiesBelowTopTranslucent;
    boolean mConfigWillChange;
    long mLaunchStartTime;
    long mFullyDrawnStartTime;
    private com.android.server.am.ActivityRecord mLastScreenshotActivity;
    private android.graphics.Bitmap mLastScreenshotBitmap;
    int mCurrentUser;
    final int mStackId;
    final com.android.server.am.ActivityStackSupervisor$ActivityContainer mActivityContainer;
    java.util.ArrayList mStacks;
    int mDisplayId;
    final com.android.server.am.ActivityStackSupervisor mStackSupervisor;
    private boolean inResumeTopActivity;
    static final int PAUSE_TIMEOUT_MSG;
    static final int DESTROY_TIMEOUT_MSG;
    static final int LAUNCH_TICK_MSG;
    static final int STOP_TIMEOUT_MSG;
    static final int DESTROY_ACTIVITIES_MSG;
    static final int TRANSLUCENT_TIMEOUT_MSG;
    static final int RELEASE_BACKGROUND_RESOURCES_TIMEOUT_MSG;
    final android.os.Handler mHandler;
    static final int FINISH_IMMEDIATELY;
    static final int FINISH_AFTER_PAUSE;
    static final int FINISH_AFTER_VISIBLE;

    int numActivities()
    {
        com.android.server.am.ActivityStack r0;
        int i0, i1, $i2, $i3;
        java.util.ArrayList $r1, $r2, $r5;
        java.lang.Object $r3;
        com.android.server.am.TaskRecord $r4;

        r0 := @this: com.android.server.am.ActivityStack;

        i0 = 0;

        $r1 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = $i2 - 1;

     label1:
        if i1 < 0 goto label2;

        $r2 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (com.android.server.am.TaskRecord) $r3;

        $r5 = $r4.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i3 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i0 = i0 + $i3;

        i1 = i1 + -1;

        goto label1;

     label2:
        return i0;
    }

    void <init>(com.android.server.am.ActivityStackSupervisor$ActivityContainer)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r1;
        java.util.ArrayList $r2, $r3, $r4, $r5, $r6;
        com.android.server.am.ActivityStackSupervisor $r7, $r8;
        com.android.server.am.ActivityManagerService $r9, $r11, $r14, $r16;
        com.android.server.am.ActivityStack$ActivityStackHandler $r10;
        com.android.server.am.ActivityManagerService$MainHandler $r12;
        android.os.Looper $r13;
        com.android.server.wm.WindowManagerService $r15;
        int $i0, $i1;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityStackSupervisor$ActivityContainer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityStack: java.util.ArrayList mValidateAppTokens> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityStack: java.util.ArrayList mLRUActivities> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityStack: java.util.ArrayList mNoAnimActivities> = $r5;

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity> = null;

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastPausedActivity> = null;

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastNoHistoryActivity> = null;

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity> = null;

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastStartedActivity> = null;

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mTranslucentActivityWaiting> = null;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityStack: java.util.ArrayList mUndrawnActivitiesBelowTopTranslucent> = $r6;

        r0.<com.android.server.am.ActivityStack: long mLaunchStartTime> = 0L;

        r0.<com.android.server.am.ActivityStack: long mFullyDrawnStartTime> = 0L;

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastScreenshotActivity> = null;

        r0.<com.android.server.am.ActivityStack: android.graphics.Bitmap mLastScreenshotBitmap> = null;

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor$ActivityContainer mActivityContainer> = r1;

        $r7 = virtualinvoke r1.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor getOuter()>();

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor> = $r7;

        $r8 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r9 = $r8.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService> = $r9;

        $r10 = new com.android.server.am.ActivityStack$ActivityStackHandler;

        $r11 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r12 = $r11.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        $r13 = virtualinvoke $r12.<com.android.server.am.ActivityManagerService$MainHandler: android.os.Looper getLooper()>();

        specialinvoke $r10.<com.android.server.am.ActivityStack$ActivityStackHandler: void <init>(com.android.server.am.ActivityStack,android.os.Looper)>(r0, $r13);

        r0.<com.android.server.am.ActivityStack: android.os.Handler mHandler> = $r10;

        $r14 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r15 = $r14.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager> = $r15;

        $i0 = r1.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: int mStackId>;

        r0.<com.android.server.am.ActivityStack: int mStackId> = $i0;

        $r16 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $i1 = $r16.<com.android.server.am.ActivityManagerService: int mCurrentUserId>;

        r0.<com.android.server.am.ActivityStack: int mCurrentUser> = $i1;

        return;
    }

    private boolean isCurrentProfileLocked(int)
    {
        com.android.server.am.ActivityStack r0;
        int i0, i1, $i2, $i3, $i4;
        com.android.server.am.ActivityManagerService $r1, $r3;
        int[] $r2, $r4;

        r0 := @this: com.android.server.am.ActivityStack;

        i0 := @parameter0: int;

        $i2 = r0.<com.android.server.am.ActivityStack: int mCurrentUser>;

        if i0 != $i2 goto label1;

        return 1;

     label1:
        i1 = 0;

     label2:
        $r1 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r2 = $r1.<com.android.server.am.ActivityManagerService: int[] mCurrentProfileIds>;

        $i3 = lengthof $r2;

        if i1 >= $i3 goto label4;

        $r3 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r4 = $r3.<com.android.server.am.ActivityManagerService: int[] mCurrentProfileIds>;

        $i4 = $r4[i1];

        if $i4 != i0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    boolean okToShowLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1;
        int $i0, $i1, $i2;
        boolean $z0, $z1;
        android.content.pm.ActivityInfo $r2;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $i0 = r1.<com.android.server.am.ActivityRecord: int userId>;

        $z0 = specialinvoke r0.<com.android.server.am.ActivityStack: boolean isCurrentProfileLocked(int)>($i0);

        if $z0 != 0 goto label1;

        $r2 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i1 = $r2.<android.content.pm.ActivityInfo: int flags>;

        $i2 = $i1 & 1024;

        if $i2 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    final com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1, r2;
        int i0, $i1;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        com.android.server.am.TaskRecord $r6;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $r3 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label3;

        $r4 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r6 = (com.android.server.am.TaskRecord) $r5;

        r2 = virtualinvoke $r6.<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(r1);

        if r2 == null goto label2;

        return r2;

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        return null;
    }

    final com.android.server.am.ActivityRecord topRunningNonDelayedActivityLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1, r4;
        int i0, i1, $i2, $i3;
        com.android.server.am.TaskRecord r2;
        java.util.ArrayList r3, $r5, $r6;
        java.lang.Object $r7, $r8;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $r5 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i2 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label5;

        $r6 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.am.TaskRecord) $r7;

        r3 = r2.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i3 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label2:
        if i1 < 0 goto label4;

        $r8 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r4 = (com.android.server.am.ActivityRecord) $r8;

        $z0 = r4.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z0 != 0 goto label3;

        $z1 = r4.<com.android.server.am.ActivityRecord: boolean delayedResume>;

        if $z1 != 0 goto label3;

        if r4 == r1 goto label3;

        $z2 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean okToShowLocked(com.android.server.am.ActivityRecord)>(r4);

        if $z2 == 0 goto label3;

        return r4;

     label3:
        i1 = i1 + -1;

        goto label2;

     label4:
        i0 = i0 + -1;

        goto label1;

     label5:
        return null;
    }

    final com.android.server.am.ActivityRecord topRunningActivityLocked(android.os.IBinder, int)
    {
        com.android.server.am.ActivityStack r0;
        android.os.IBinder r1;
        int i0, i1, i2, $i3, $i4, $i5;
        com.android.server.am.TaskRecord r2;
        java.util.ArrayList r3, $r5, $r6;
        com.android.server.am.ActivityRecord r4;
        java.lang.Object $r7, $r8;
        boolean $z0, $z1;
        android.view.IApplicationToken$Stub $r9;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        $r5 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i3 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label1:
        if i1 < 0 goto label6;

        $r6 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.am.TaskRecord) $r7;

        $i4 = r2.<com.android.server.am.TaskRecord: int taskId>;

        if $i4 != i0 goto label2;

        goto label5;

     label2:
        r3 = r2.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i5 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i2 = $i5 - 1;

     label3:
        if i2 < 0 goto label5;

        $r8 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r4 = (com.android.server.am.ActivityRecord) $r8;

        $z0 = r4.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z0 != 0 goto label4;

        $r9 = r4.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        if r1 == $r9 goto label4;

        $z1 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean okToShowLocked(com.android.server.am.ActivityRecord)>(r4);

        if $z1 == 0 goto label4;

        return r4;

     label4:
        i2 = i2 + -1;

        goto label3;

     label5:
        i1 = i1 + -1;

        goto label1;

     label6:
        return null;
    }

    final com.android.server.am.ActivityRecord topActivity()
    {
        com.android.server.am.ActivityStack r0;
        int i0, i1, $i2, $i3;
        java.util.ArrayList r1, $r3, $r4;
        com.android.server.am.ActivityRecord r2;
        java.lang.Object $r5, $r7;
        com.android.server.am.TaskRecord $r6;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityStack;

        $r3 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label5;

        $r4 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r6 = (com.android.server.am.TaskRecord) $r5;

        r1 = $r6.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label2:
        if i1 < 0 goto label4;

        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.am.ActivityRecord) $r7;

        $z0 = r2.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z0 != 0 goto label3;

        return r2;

     label3:
        i1 = i1 + -1;

        goto label2;

     label4:
        i0 = i0 + -1;

        goto label1;

     label5:
        return null;
    }

    final com.android.server.am.TaskRecord topTask()
    {
        com.android.server.am.ActivityStack r0;
        int i0, $i1;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        com.android.server.am.TaskRecord $r4;

        r0 := @this: com.android.server.am.ActivityStack;

        $r1 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i0 <= 0 goto label1;

        $r2 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i1 = i0 - 1;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r4 = (com.android.server.am.TaskRecord) $r3;

        return $r4;

     label1:
        return null;
    }

    com.android.server.am.TaskRecord taskForIdLocked(int)
    {
        com.android.server.am.ActivityStack r0;
        int i0, i1, $i2, $i3;
        com.android.server.am.TaskRecord r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.am.ActivityStack;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = $i2 - 1;

     label1:
        if i1 < 0 goto label3;

        $r3 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (com.android.server.am.TaskRecord) $r4;

        $i3 = r1.<com.android.server.am.TaskRecord: int taskId>;

        if $i3 != i0 goto label2;

        return r1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return null;
    }

    com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)
    {
        com.android.server.am.ActivityStack r0, $r6;
        android.os.IBinder r1;
        com.android.server.am.ActivityRecord r2;
        com.android.server.am.TaskRecord r3;
        java.util.ArrayList $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: android.os.IBinder;

        r2 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord forToken(android.os.IBinder)>(r1);

        if r2 == null goto label2;

        r3 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if r3 == null goto label2;

        $r4 = r3.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean contains(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        $r5 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $z1 = virtualinvoke $r5.<java.util.ArrayList: boolean contains(java.lang.Object)>(r3);

        if $z1 == 0 goto label2;

        $r6 = r3.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        if $r6 == r0 goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", "Illegal state! task does not point to stack it is in.");

     label1:
        return r2;

     label2:
        return null;
    }

    final boolean updateLRUListLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1;
        boolean z0;
        java.util.ArrayList $r2, $r3;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $r2 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mLRUActivities>;

        z0 = virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r3 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mLRUActivities>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return z0;
    }

    final boolean isHomeStack()
    {
        com.android.server.am.ActivityStack r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityStack;

        $i0 = r0.<com.android.server.am.ActivityStack: int mStackId>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    final boolean isOnHomeDisplay()
    {
        com.android.server.am.ActivityStack r0;
        boolean $z0, $z1;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer $r1;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r2;
        int $i0;

        r0 := @this: com.android.server.am.ActivityStack;

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean isAttached()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor$ActivityContainer mActivityContainer>;

        $r2 = $r1.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor$ActivityDisplay mActivityDisplay>;

        $i0 = $r2.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: int mDisplayId>;

        if $i0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    final void moveToFront()
    {
        com.android.server.am.ActivityStack r0;
        boolean $z0, $z1, $z4;
        java.util.ArrayList $r1, $r2;
        com.android.server.am.ActivityStackSupervisor $r3;

        r0 := @this: com.android.server.am.ActivityStack;

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean isAttached()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean isOnHomeDisplay()>();

        if $z1 == 0 goto label1;

        $r3 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $z4 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean isHomeStack()>();

        virtualinvoke $r3.<com.android.server.am.ActivityStackSupervisor: void moveHomeStack(boolean)>($z4);

     label1:
        $r1 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mStacks>;

        virtualinvoke $r1.<java.util.ArrayList: boolean remove(java.lang.Object)>(r0);

        $r2 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mStacks>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

     label2:
        return;
    }

    final boolean isAttached()
    {
        com.android.server.am.ActivityStack r0;
        java.util.ArrayList $r1;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityStack;

        $r1 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mStacks>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    com.android.server.am.ActivityRecord findTaskLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1, r7;
        android.content.Intent r2, r8, r9;
        android.content.pm.ActivityInfo r3;
        android.content.ComponentName r4, $r17, $r18, $r19, $r20, $r25;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        android.net.Uri r5, r10, $r26;
        com.android.server.am.TaskRecord r6;
        android.content.pm.ApplicationInfo $r11;
        java.lang.String $r12, $r21, $r22, $r23, $r24, $r27;
        java.util.ArrayList $r13, $r15;
        java.lang.Object $r14;
        android.service.voice.IVoiceInteractionSession $r16;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r2 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        r3 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        r4 = virtualinvoke r2.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r12 = r3.<android.content.pm.ActivityInfo: java.lang.String targetActivity>;

        if $r12 == null goto label01;

        $r25 = new android.content.ComponentName;

        $r27 = r3.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r24 = r3.<android.content.pm.ActivityInfo: java.lang.String targetActivity>;

        specialinvoke $r25.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r27, $r24);

        r4 = $r25;

     label01:
        $r11 = r3.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r11.<android.content.pm.ApplicationInfo: int uid>;

        i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        if r2 == null goto label02;

        $z3 = 1;

        goto label03;

     label02:
        $z3 = 0;

     label03:
        $z2 = virtualinvoke r2.<android.content.Intent: boolean isDocument()>();

        z0 = $z3 & $z2;

        if z0 == 0 goto label04;

        $r26 = virtualinvoke r2.<android.content.Intent: android.net.Uri getData()>();

        goto label05;

     label04:
        $r26 = null;

     label05:
        r5 = $r26;

        $r13 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i3 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label06:
        if i1 < 0 goto label16;

        $r15 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r14 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r6 = (com.android.server.am.TaskRecord) $r14;

        $r16 = r6.<com.android.server.am.TaskRecord: android.service.voice.IVoiceInteractionSession voiceSession>;

        if $r16 == null goto label07;

        goto label15;

     label07:
        $i4 = r6.<com.android.server.am.TaskRecord: int userId>;

        if $i4 == i0 goto label08;

        goto label15;

     label08:
        r7 = virtualinvoke r6.<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord getTopActivity()>();

        if r7 == null goto label15;

        $z4 = r7.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z4 != 0 goto label15;

        $i6 = r7.<com.android.server.am.ActivityRecord: int userId>;

        if $i6 != i0 goto label15;

        $i5 = r7.<com.android.server.am.ActivityRecord: int launchMode>;

        if $i5 != 3 goto label09;

        goto label15;

     label09:
        r8 = r6.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        r9 = r6.<com.android.server.am.TaskRecord: android.content.Intent affinityIntent>;

        if r8 == null goto label10;

        $z8 = virtualinvoke r8.<android.content.Intent: boolean isDocument()>();

        if $z8 == 0 goto label10;

        z1 = 1;

        r10 = virtualinvoke r8.<android.content.Intent: android.net.Uri getData()>();

        goto label12;

     label10:
        if r9 == null goto label11;

        $z9 = virtualinvoke r9.<android.content.Intent: boolean isDocument()>();

        if $z9 == 0 goto label11;

        z1 = 1;

        r10 = virtualinvoke r9.<android.content.Intent: android.net.Uri getData()>();

        goto label12;

     label11:
        z1 = 0;

        r10 = null;

     label12:
        if z0 != 0 goto label13;

        if z1 != 0 goto label13;

        $r22 = r6.<com.android.server.am.TaskRecord: java.lang.String rootAffinity>;

        if $r22 == null goto label13;

        $r21 = r6.<com.android.server.am.TaskRecord: java.lang.String rootAffinity>;

        $r23 = r1.<com.android.server.am.ActivityRecord: java.lang.String taskAffinity>;

        $z7 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r23);

        if $z7 == 0 goto label15;

        return r7;

     label13:
        if r8 == null goto label14;

        $r19 = virtualinvoke r8.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r19 == null goto label14;

        $r20 = virtualinvoke r8.<android.content.Intent: android.content.ComponentName getComponent()>();

        $i8 = virtualinvoke $r20.<android.content.ComponentName: int compareTo(android.content.ComponentName)>(r4);

        if $i8 != 0 goto label14;

        $z6 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r5, r10);

        if $z6 == 0 goto label14;

        return r7;

     label14:
        if r9 == null goto label15;

        $r17 = virtualinvoke r9.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r17 == null goto label15;

        $r18 = virtualinvoke r9.<android.content.Intent: android.content.ComponentName getComponent()>();

        $i7 = virtualinvoke $r18.<android.content.ComponentName: int compareTo(android.content.ComponentName)>(r4);

        if $i7 != 0 goto label15;

        $z5 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r5, r10);

        if $z5 == 0 goto label15;

        return r7;

     label15:
        i1 = i1 + -1;

        goto label06;

     label16:
        return null;
    }

    com.android.server.am.ActivityRecord findActivityLocked(android.content.Intent, android.content.pm.ActivityInfo)
    {
        com.android.server.am.ActivityStack r0;
        android.content.Intent r1, $r14;
        android.content.pm.ActivityInfo r2;
        android.content.ComponentName r3, $r13, $r16;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        com.android.server.am.TaskRecord r4;
        java.util.ArrayList r5, $r9, $r10;
        com.android.server.am.ActivityRecord r6;
        java.lang.String $r7, $r15, $r17;
        android.content.pm.ApplicationInfo $r8;
        java.lang.Object $r11, $r12;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: android.content.pm.ActivityInfo;

        r3 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r7 = r2.<android.content.pm.ActivityInfo: java.lang.String targetActivity>;

        if $r7 == null goto label1;

        $r16 = new android.content.ComponentName;

        $r17 = r2.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r15 = r2.<android.content.pm.ActivityInfo: java.lang.String targetActivity>;

        specialinvoke $r16.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r17, $r15);

        r3 = $r16;

     label1:
        $r8 = r2.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r8.<android.content.pm.ApplicationInfo: int uid>;

        i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i3);

        $r9 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i4 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        i1 = $i4 - 1;

     label2:
        if i1 < 0 goto label7;

        $r10 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r4 = (com.android.server.am.TaskRecord) $r11;

        $i5 = r4.<com.android.server.am.TaskRecord: int userId>;

        $z0 = specialinvoke r0.<com.android.server.am.ActivityStack: boolean isCurrentProfileLocked(int)>($i5);

        if $z0 != 0 goto label3;

        return null;

     label3:
        r5 = r4.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i6 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        i2 = $i6 - 1;

     label4:
        if i2 < 0 goto label6;

        $r12 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r6 = (com.android.server.am.ActivityRecord) $r12;

        $z1 = r6.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z1 != 0 goto label5;

        $r14 = r6.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r13 = virtualinvoke $r14.<android.content.Intent: android.content.ComponentName getComponent()>();

        $z2 = virtualinvoke $r13.<android.content.ComponentName: boolean equals(java.lang.Object)>(r3);

        if $z2 == 0 goto label5;

        $i7 = r6.<com.android.server.am.ActivityRecord: int userId>;

        if $i7 != i0 goto label5;

        return r6;

     label5:
        i2 = i2 + -1;

        goto label4;

     label6:
        i1 = i1 + -1;

        goto label2;

     label7:
        return null;
    }

    final void switchUserLocked(int)
    {
        com.android.server.am.ActivityStack r0;
        int i0, i1, i2, $i3, $i4;
        com.android.server.am.TaskRecord r1;
        java.util.ArrayList $r2, $r3, $r5, $r7;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityStack;

        i0 := @parameter0: int;

        $i3 = r0.<com.android.server.am.ActivityStack: int mCurrentUser>;

        if $i3 != i0 goto label1;

        return;

     label1:
        r0.<com.android.server.am.ActivityStack: int mCurrentUser> = i0;

        $r2 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i2 = 0;

     label2:
        if i2 >= i1 goto label5;

        $r3 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r1 = (com.android.server.am.TaskRecord) $r4;

        $i4 = r1.<com.android.server.am.TaskRecord: int userId>;

        $z0 = specialinvoke r0.<com.android.server.am.ActivityStack: boolean isCurrentProfileLocked(int)>($i4);

        if $z0 == 0 goto label3;

        $r5 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        virtualinvoke $r5.<java.util.ArrayList: java.lang.Object remove(int)>(i2);

        $r7 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        i1 = i1 + -1;

        goto label4;

     label3:
        i2 = i2 + 1;

     label4:
        goto label2;

     label5:
        return;
    }

    void minimalResumeActivityLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1;
        com.android.server.am.ActivityStack$ActivityState $r2;
        com.android.server.am.TaskRecord $r3, $r4;
        com.android.server.am.ActivityManagerService $r5;
        com.android.server.am.ActivityStackSupervisor $r6;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $r2 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState RESUMED>;

        r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state> = $r2;

        r1.<com.android.server.am.ActivityRecord: boolean stopped> = 0;

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity> = r1;

        $r3 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke $r3.<com.android.server.am.TaskRecord: void touchActiveTime()>();

        $r5 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r4 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke $r5.<com.android.server.am.ActivityManagerService: void addRecentTaskLocked(com.android.server.am.TaskRecord)>($r4);

        specialinvoke r0.<com.android.server.am.ActivityStack: void completeResumeLocked(com.android.server.am.ActivityRecord)>(r1);

        $r6 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r6.<com.android.server.am.ActivityStackSupervisor: void checkReadyForSleepLocked()>();

        virtualinvoke r0.<com.android.server.am.ActivityStack: void setLaunchTime(com.android.server.am.ActivityRecord)>(r1);

        return;
    }

    private void startLaunchTraces()
    {
        com.android.server.am.ActivityStack r0;
        long $l0;
        byte $b1;

        r0 := @this: com.android.server.am.ActivityStack;

        $l0 = r0.<com.android.server.am.ActivityStack: long mFullyDrawnStartTime>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        staticinvoke <android.os.Trace: void asyncTraceEnd(long,java.lang.String,int)>(64L, "drawing", 0);

     label1:
        staticinvoke <android.os.Trace: void asyncTraceBegin(long,java.lang.String,int)>(64L, "launching", 0);

        staticinvoke <android.os.Trace: void asyncTraceBegin(long,java.lang.String,int)>(64L, "drawing", 0);

        return;
    }

    private void stopFullyDrawnTraceIfNeeded()
    {
        com.android.server.am.ActivityStack r0;
        long $l0, $l2;
        byte $b1, $b3;

        r0 := @this: com.android.server.am.ActivityStack;

        $l0 = r0.<com.android.server.am.ActivityStack: long mFullyDrawnStartTime>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $l2 = r0.<com.android.server.am.ActivityStack: long mLaunchStartTime>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label1;

        staticinvoke <android.os.Trace: void asyncTraceEnd(long,java.lang.String,int)>(64L, "drawing", 0);

        r0.<com.android.server.am.ActivityStack: long mFullyDrawnStartTime> = 0L;

     label1:
        return;
    }

    void setLaunchTime(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1;
        long $l0, $l2, $l4, $l5, $l6, $l8;
        byte $b1, $b3, $b7;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $l0 = r1.<com.android.server.am.ActivityRecord: long displayStartTime>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $l5 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r1.<com.android.server.am.ActivityRecord: long displayStartTime> = $l5;

        r1.<com.android.server.am.ActivityRecord: long fullyDrawnStartTime> = $l5;

        $l6 = r0.<com.android.server.am.ActivityStack: long mLaunchStartTime>;

        $b7 = $l6 cmp 0L;

        if $b7 != 0 goto label2;

        specialinvoke r0.<com.android.server.am.ActivityStack: void startLaunchTraces()>();

        $l8 = r1.<com.android.server.am.ActivityRecord: long displayStartTime>;

        r0.<com.android.server.am.ActivityStack: long mFullyDrawnStartTime> = $l8;

        r0.<com.android.server.am.ActivityStack: long mLaunchStartTime> = $l8;

        goto label2;

     label1:
        $l2 = r0.<com.android.server.am.ActivityStack: long mLaunchStartTime>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label2;

        specialinvoke r0.<com.android.server.am.ActivityStack: void startLaunchTraces()>();

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.am.ActivityStack: long mFullyDrawnStartTime> = $l4;

        r0.<com.android.server.am.ActivityStack: long mLaunchStartTime> = $l4;

     label2:
        return;
    }

    void clearLaunchTime(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1;
        com.android.server.am.ActivityStackSupervisor $r2, $r4, $r5;
        java.util.ArrayList $r3;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $r2 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r3 = $r2.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingActivityLaunched>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        r1.<com.android.server.am.ActivityRecord: long fullyDrawnStartTime> = 0L;

        r1.<com.android.server.am.ActivityRecord: long displayStartTime> = 0L;

        goto label2;

     label1:
        $r4 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r4.<com.android.server.am.ActivityStackSupervisor: void removeTimeoutsForActivityLocked(com.android.server.am.ActivityRecord)>(r1);

        $r5 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r5.<com.android.server.am.ActivityStackSupervisor: void scheduleIdleTimeoutLocked(com.android.server.am.ActivityRecord)>(r1);

     label2:
        return;
    }

    void awakeFromSleepingLocked()
    {
        com.android.server.am.ActivityStack r0;
        int i0, i1, $i2, $i3;
        java.util.ArrayList r1, $r2, $r3;
        java.lang.Object $r4, $r6;
        com.android.server.am.TaskRecord $r5;
        com.android.server.am.ActivityRecord $r7;

        r0 := @this: com.android.server.am.ActivityStack;

        $r2 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label4;

        $r3 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r5 = (com.android.server.am.TaskRecord) $r4;

        r1 = $r5.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label2:
        if i1 < 0 goto label3;

        $r6 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r7 = (com.android.server.am.ActivityRecord) $r6;

        virtualinvoke $r7.<com.android.server.am.ActivityRecord: void setSleeping(boolean)>(0);

        i1 = i1 + -1;

        goto label2;

     label3:
        i0 = i0 + -1;

        goto label1;

     label4:
        return;
    }

    boolean checkReadyForSleepLocked()
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord $r1, $r2;

        r0 := @this: com.android.server.am.ActivityStack;

        $r1 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if $r1 == null goto label1;

        virtualinvoke r0.<com.android.server.am.ActivityStack: boolean startPausingLocked(boolean,boolean,boolean,boolean)>(0, 1, 0, 0);

        return 1;

     label1:
        $r2 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity>;

        if $r2 == null goto label2;

        return 1;

     label2:
        return 0;
    }

    void goToSleep()
    {
        com.android.server.am.ActivityStack r0;
        int i0, i1, $i2, $i3;
        java.util.ArrayList r1, $r3, $r4;
        com.android.server.am.ActivityRecord r2;
        java.lang.Object $r5, $r7;
        com.android.server.am.TaskRecord $r6;
        com.android.server.am.ActivityStack$ActivityState $r8, $r9, $r10, $r11;

        r0 := @this: com.android.server.am.ActivityStack;

        virtualinvoke r0.<com.android.server.am.ActivityStack: void ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord,int)>(null, 0);

        $r3 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label6;

        $r4 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r6 = (com.android.server.am.TaskRecord) $r5;

        r1 = $r6.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label2:
        if i1 < 0 goto label5;

        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.am.ActivityRecord) $r7;

        $r9 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r8 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState STOPPING>;

        if $r9 == $r8 goto label3;

        $r11 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r10 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState STOPPED>;

        if $r11 != $r10 goto label4;

     label3:
        virtualinvoke r2.<com.android.server.am.ActivityRecord: void setSleeping(boolean)>(1);

     label4:
        i1 = i1 + -1;

        goto label2;

     label5:
        i0 = i0 + -1;

        goto label1;

     label6:
        return;
    }

    private void invalidateLastScreenshot()
    {
        com.android.server.am.ActivityStack r0;
        android.graphics.Bitmap $r1, $r2;

        r0 := @this: com.android.server.am.ActivityStack;

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastScreenshotActivity> = null;

        $r1 = r0.<com.android.server.am.ActivityStack: android.graphics.Bitmap mLastScreenshotBitmap>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.am.ActivityStack: android.graphics.Bitmap mLastScreenshotBitmap>;

        virtualinvoke $r2.<android.graphics.Bitmap: void recycle()>();

     label1:
        r0.<com.android.server.am.ActivityStack: android.graphics.Bitmap mLastScreenshotBitmap> = null;

        return;
    }

    public final android.graphics.Bitmap screenshotActivities(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1, $r10, $r19;
        int i0, i1, $i3, $i4;
        boolean $z0, $z1, $z2;
        com.android.server.am.ActivityManagerService $r2, $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9;
        com.android.server.wm.WindowManagerService $r11;
        android.view.IApplicationToken$Stub $r12;
        android.graphics.Bitmap $r13, $r14, $r15, $r16, $r17, $r20, $r23, $r24;
        android.graphics.Bitmap$Config $r18;
        com.android.server.am.ActivityStack$ActivityState $r21, $r22;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $z0 = r1.<com.android.server.am.ActivityRecord: boolean noDisplay>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        $z1 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean isHomeStack()>();

        if $z1 == 0 goto label2;

        specialinvoke r0.<com.android.server.am.ActivityStack: void invalidateLastScreenshot()>();

        return null;

     label2:
        $r2 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        i0 = $r2.<com.android.server.am.ActivityManagerService: int mThumbnailWidth>;

        $r3 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        i1 = $r3.<com.android.server.am.ActivityManagerService: int mThumbnailHeight>;

        if i0 <= 0 goto label5;

        $r10 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastScreenshotActivity>;

        if r1 != $r10 goto label3;

        $r20 = r0.<com.android.server.am.ActivityStack: android.graphics.Bitmap mLastScreenshotBitmap>;

        if $r20 == null goto label3;

        $r19 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastScreenshotActivity>;

        $r21 = $r19.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r22 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState RESUMED>;

        if $r21 == $r22 goto label3;

        $r23 = r0.<com.android.server.am.ActivityStack: android.graphics.Bitmap mLastScreenshotBitmap>;

        $i3 = virtualinvoke $r23.<android.graphics.Bitmap: int getWidth()>();

        if $i3 != i0 goto label3;

        $r24 = r0.<com.android.server.am.ActivityStack: android.graphics.Bitmap mLastScreenshotBitmap>;

        $i4 = virtualinvoke $r24.<android.graphics.Bitmap: int getHeight()>();

        if $i4 == i1 goto label4;

     label3:
        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastScreenshotActivity> = r1;

        $r11 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $r12 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        $z2 = <com.android.server.am.ActivityStack: boolean SCREENSHOT_FORCE_565>;

        $r14 = virtualinvoke $r11.<com.android.server.wm.WindowManagerService: android.graphics.Bitmap screenshotApplications(android.os.IBinder,int,int,int,boolean)>($r12, 0, i0, i1, $z2);

        r0.<com.android.server.am.ActivityStack: android.graphics.Bitmap mLastScreenshotBitmap> = $r14;

     label4:
        $r13 = r0.<com.android.server.am.ActivityStack: android.graphics.Bitmap mLastScreenshotBitmap>;

        if $r13 == null goto label5;

        $r15 = r0.<com.android.server.am.ActivityStack: android.graphics.Bitmap mLastScreenshotBitmap>;

        $r16 = r0.<com.android.server.am.ActivityStack: android.graphics.Bitmap mLastScreenshotBitmap>;

        $r18 = virtualinvoke $r16.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        $r17 = virtualinvoke $r15.<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>($r18, 1);

        return $r17;

     label5:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid thumbnail dimensions: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r9);

        return null;
    }

    final boolean startPausingLocked(boolean, boolean, boolean, boolean)
    {
        com.android.server.am.ActivityStack r0, $r17;
        boolean z0, z1, z2, z3, $z4, $z5, $z8, $z9;
        com.android.server.am.ActivityRecord r1, r2, $r4, $r6, $r16, $r34, $r43;
        java.lang.Exception r3, $r40;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer $r5;
        android.content.Intent $r7;
        int $i0, $i1, $i3, $i4, $i6, $i7, $i8;
        com.android.server.am.ActivityStack$ActivityState $r8;
        com.android.server.am.TaskRecord $r9, $r31, $r32;
        com.android.server.am.ActivityStackSupervisor $r10, $r15, $r22, $r36, $r37;
        com.android.server.am.ActivityManagerService $r11, $r13, $r14, $r26;
        com.android.server.am.ProcessRecord $r12, $r20, $r27;
        android.os.Handler $r18, $r19;
        long $l2;
        android.app.IApplicationThread $r21, $r29;
        java.lang.Object[] $r23;
        java.lang.Integer $r24, $r25;
        java.lang.String $r28, $r39;
        android.view.IApplicationToken$Stub $r30;
        android.graphics.Bitmap $r33;
        android.content.pm.ActivityInfo $r35;
        java.lang.StringBuilder $r38, $r41, $r42;
        android.os.Message r44;

        r0 := @this: com.android.server.am.ActivityStack;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        z3 := @parameter3: boolean;

        $r4 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity>;

        if $r4 == null goto label01;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Going to pause when pause is already pending for ");

        $r43 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity>;

        $r38 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", $r39);

        specialinvoke r0.<com.android.server.am.ActivityStack: void completePauseLocked(boolean)>(0);

     label01:
        r1 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if r1 != null goto label03;

        if z2 != 0 goto label02;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String)>("ActivityManager", "Trying to pause when nothing is resumed");

        $r36 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r36.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

     label02:
        return 0;

     label03:
        $r5 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor$ActivityContainer mActivityContainer>;

        $r6 = $r5.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityRecord mParentActivity>;

        if $r6 != null goto label04;

        $r37 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r37.<com.android.server.am.ActivityStackSupervisor: void pauseChildStacks(com.android.server.am.ActivityRecord,boolean,boolean,boolean,boolean)>(r1, z0, z1, z2, z3);

     label04:
        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity> = null;

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity> = r1;

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastPausedActivity> = r1;

        $r7 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $i0 = virtualinvoke $r7.<android.content.Intent: int getFlags()>();

        $i1 = $i0 & 1073741824;

        if $i1 != 0 goto label05;

        $r35 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i8 = $r35.<android.content.pm.ActivityInfo: int flags>;

        $i7 = $i8 & 128;

        if $i7 == 0 goto label06;

     label05:
        $r34 = r1;

        goto label07;

     label06:
        $r34 = null;

     label07:
        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastNoHistoryActivity> = $r34;

        $r8 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState PAUSING>;

        r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state> = $r8;

        $r9 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke $r9.<com.android.server.am.TaskRecord: void touchActiveTime()>();

        virtualinvoke r0.<com.android.server.am.ActivityStack: void clearLaunchTime(com.android.server.am.ActivityRecord)>(r1);

        $r10 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        r2 = virtualinvoke $r10.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord topRunningActivityLocked()>();

        $r11 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $z4 = $r11.<com.android.server.am.ActivityManagerService: boolean mHasRecents>;

        if $z4 == 0 goto label09;

        if r2 == null goto label08;

        $z9 = r2.<com.android.server.am.ActivityRecord: boolean noDisplay>;

        if $z9 != 0 goto label08;

        $r31 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r32 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r31 == $r32 goto label09;

     label08:
        $r33 = virtualinvoke r0.<com.android.server.am.ActivityStack: android.graphics.Bitmap screenshotActivities(com.android.server.am.ActivityRecord)>(r1);

        virtualinvoke r1.<com.android.server.am.ActivityRecord: void updateThumbnail(android.graphics.Bitmap,java.lang.CharSequence)>($r33, null);

     label09:
        specialinvoke r0.<com.android.server.am.ActivityStack: void stopFullyDrawnTraceIfNeeded()>();

        $r13 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r13.<com.android.server.am.ActivityManagerService: void updateCpuStats()>();

        $r12 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r12 == null goto label13;

        $r20 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r21 = $r20.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r21 == null goto label13;

     label10:
        $r23 = newarray (java.lang.Object)[3];

        $i3 = r1.<com.android.server.am.ActivityRecord: int userId>;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r23[0] = $r25;

        $i4 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r1);

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r23[1] = $r24;

        $r28 = r1.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        $r23[2] = $r28;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30013, $r23);

        $r26 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r26.<com.android.server.am.ActivityManagerService: void updateUsageStats(com.android.server.am.ActivityRecord,boolean)>(r1, 0);

        $r27 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r29 = $r27.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r30 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        $z8 = r1.<com.android.server.am.ActivityRecord: boolean finishing>;

        $i6 = r1.<com.android.server.am.ActivityRecord: int configChangeFlags>;

        interfaceinvoke $r29.<android.app.IApplicationThread: void schedulePauseActivity(android.os.IBinder,boolean,boolean,int,boolean)>($r30, $z8, z0, $i6, z3);

     label11:
        goto label14;

     label12:
        $r40 := @caughtexception;

        r3 = $r40;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Exception thrown during pause", r3);

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity> = null;

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastPausedActivity> = null;

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastNoHistoryActivity> = null;

        goto label14;

     label13:
        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity> = null;

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastPausedActivity> = null;

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastNoHistoryActivity> = null;

     label14:
        $r14 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $z5 = virtualinvoke $r14.<com.android.server.am.ActivityManagerService: boolean isSleepingOrShuttingDown()>();

        if $z5 != 0 goto label15;

        $r22 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r22.<com.android.server.am.ActivityStackSupervisor: void acquireLaunchWakelock()>();

     label15:
        $r16 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity>;

        if $r16 == null goto label18;

        if z1 != 0 goto label16;

        virtualinvoke r1.<com.android.server.am.ActivityRecord: void pauseKeyDispatchingLocked()>();

     label16:
        if z3 == 0 goto label17;

        specialinvoke r0.<com.android.server.am.ActivityStack: void completePauseLocked(boolean)>(0);

        return 0;

     label17:
        $r18 = r0.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        r44 = virtualinvoke $r18.<android.os.Handler: android.os.Message obtainMessage(int)>(101);

        r44.<android.os.Message: java.lang.Object obj> = r1;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r1.<com.android.server.am.ActivityRecord: long pauseTime> = $l2;

        $r19 = r0.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        virtualinvoke $r19.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r44, 500L);

        return 1;

     label18:
        if z2 != 0 goto label19;

        $r15 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r17 = virtualinvoke $r15.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>();

        virtualinvoke $r17.<com.android.server.am.ActivityStack: boolean resumeTopActivityLocked(com.android.server.am.ActivityRecord)>(null);

     label19:
        return 0;

        catch java.lang.Exception from label10 to label11 with label12;
    }

    final void activityPausedLocked(android.os.IBinder, boolean)
    {
        com.android.server.am.ActivityStack r0;
        android.os.IBinder r1;
        boolean z0;
        com.android.server.am.ActivityRecord r2, $r4, $r9, $r11;
        android.os.Handler $r3;
        java.lang.Object[] $r5;
        int $i0, $i2;
        java.lang.Integer $r6, $r7;
        java.lang.String $r8, $r10;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        if r2 == null goto label4;

        $r3 = r0.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: void removeMessages(int,java.lang.Object)>(101, r2);

        $r4 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity>;

        if $r4 != r2 goto label1;

        specialinvoke r0.<com.android.server.am.ActivityStack: void completePauseLocked(boolean)>(1);

        goto label4;

     label1:
        $r5 = newarray (java.lang.Object)[4];

        $i0 = r2.<com.android.server.am.ActivityRecord: int userId>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[0] = $r6;

        $i2 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r2);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r5[1] = $r7;

        $r8 = r2.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        $r5[2] = $r8;

        $r9 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity>;

        if $r9 == null goto label2;

        $r11 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity>;

        $r10 = $r11.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        goto label3;

     label2:
        $r10 = "(none)";

     label3:
        $r5[3] = $r10;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30012, $r5);

     label4:
        return;
    }

    final void activityStoppedLocked(com.android.server.am.ActivityRecord, android.os.Bundle, android.os.PersistableBundle, java.lang.CharSequence)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1, $r11;
        android.os.Bundle r2;
        android.os.PersistableBundle r3;
        java.lang.CharSequence r4;
        com.android.server.am.ActivityStack$ActivityState $r5, $r6, $r8;
        boolean $z0, $z1, $z2;
        android.os.Handler $r7, $r21;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer $r9;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r10;
        com.android.server.am.ActivityStackSupervisor $r12, $r13, $r14;
        com.android.server.am.TaskRecord $r15;
        java.lang.StringBuilder $r16, $r18, $r20;
        com.android.server.am.ActivityManagerService $r17;
        java.lang.String $r19;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.os.PersistableBundle;

        r4 := @parameter3: java.lang.CharSequence;

        $r6 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r5 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState STOPPING>;

        if $r6 == $r5 goto label1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity reported stop, but no longer stopping: ");

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r19);

        $r21 = r0.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        virtualinvoke $r21.<android.os.Handler: void removeMessages(int,java.lang.Object)>(104, r1);

        return;

     label1:
        if r3 == null goto label2;

        r1.<com.android.server.am.ActivityRecord: android.os.PersistableBundle persistentState> = r3;

        $r17 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r15 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke $r17.<com.android.server.am.ActivityManagerService: void notifyTaskPersisterLocked(com.android.server.am.TaskRecord,boolean)>($r15, 0);

     label2:
        if r2 == null goto label3;

        r1.<com.android.server.am.ActivityRecord: android.os.Bundle icicle> = r2;

        r1.<com.android.server.am.ActivityRecord: boolean haveState> = 1;

        r1.<com.android.server.am.ActivityRecord: int launchCount> = 0;

        virtualinvoke r1.<com.android.server.am.ActivityRecord: void updateThumbnail(android.graphics.Bitmap,java.lang.CharSequence)>(null, r4);

     label3:
        $z0 = r1.<com.android.server.am.ActivityRecord: boolean stopped>;

        if $z0 != 0 goto label7;

        $r7 = r0.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        virtualinvoke $r7.<android.os.Handler: void removeMessages(int,java.lang.Object)>(104, r1);

        r1.<com.android.server.am.ActivityRecord: boolean stopped> = 1;

        $r8 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState STOPPED>;

        r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state> = $r8;

        $r9 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor$ActivityContainer mActivityContainer>;

        $r10 = $r9.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor$ActivityDisplay mActivityDisplay>;

        $r11 = $r10.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: com.android.server.am.ActivityRecord mVisibleBehindActivity>;

        if $r11 != r1 goto label4;

        $r14 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r14.<com.android.server.am.ActivityStackSupervisor: boolean requestVisibleBehindLocked(com.android.server.am.ActivityRecord,boolean)>(r1, 0);

     label4:
        $z1 = r1.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z1 == 0 goto label5;

        virtualinvoke r1.<com.android.server.am.ActivityRecord: void clearOptionsLocked()>();

        goto label7;

     label5:
        $z2 = r1.<com.android.server.am.ActivityRecord: boolean configDestroy>;

        if $z2 == 0 goto label6;

        virtualinvoke r0.<com.android.server.am.ActivityStack: boolean destroyActivityLocked(com.android.server.am.ActivityRecord,boolean,java.lang.String)>(r1, 1, "stop-config");

        $r13 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r13.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

        goto label7;

     label6:
        $r12 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r12.<com.android.server.am.ActivityStackSupervisor: void updatePreviousProcessLocked(com.android.server.am.ActivityRecord)>(r1);

     label7:
        return;
    }

    private void completePauseLocked(boolean)
    {
        com.android.server.am.ActivityStack r0, r2;
        boolean z0, $z1, $z2, $z5, $z6, $z7, $z9, $z10;
        com.android.server.am.ActivityRecord r1, r3;
        com.android.internal.os.BatteryStatsImpl r4, r5;
        com.android.internal.os.BatteryStatsImpl$Uid$Proc r6;
        java.lang.Throwable r7, $r37;
        com.android.server.am.ProcessRecord $r8, $r12, $r27;
        long $l0, $l3, $l5, l9;
        byte $b1, $b4;
        com.android.server.am.ActivityManagerService $r9, $r11, $r15, $r21;
        com.android.server.am.BatteryStatsService $r10, $r14;
        int $i2, $i6, $i7, $i8;
        com.android.internal.os.ProcessCpuTracker $r13;
        android.content.pm.ApplicationInfo $r17;
        android.content.pm.ActivityInfo $r18, $r20;
        java.lang.String $r19;
        com.android.server.am.ActivityStackSupervisor $r22, $r23, $r24, $r26, $r29, $r30, $r32, $r34, $r36;
        com.android.server.am.ActivityStack$ActivityState $r25;
        java.util.ArrayList $r28, $r31, $r33, $r35;

        r0 := @this: com.android.server.am.ActivityStack;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity>;

        if r1 == null goto label08;

        $r25 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState PAUSED>;

        r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state> = $r25;

        $z7 = r1.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z7 == 0 goto label01;

        r1 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord finishCurrentActivityLocked(com.android.server.am.ActivityRecord,int,boolean)>(r1, 2, 0);

        goto label07;

     label01:
        $r27 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r27 == null goto label06;

        $z5 = r1.<com.android.server.am.ActivityRecord: boolean waitingVisible>;

        if $z5 == 0 goto label02;

        r1.<com.android.server.am.ActivityRecord: boolean waitingVisible> = 0;

        $r36 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r35 = $r36.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingVisibleActivities>;

        virtualinvoke $r35.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

     label02:
        $z6 = r1.<com.android.server.am.ActivityRecord: boolean configDestroy>;

        if $z6 == 0 goto label03;

        virtualinvoke r0.<com.android.server.am.ActivityStack: boolean destroyActivityLocked(com.android.server.am.ActivityRecord,boolean,java.lang.String)>(r1, 1, "pause-config");

        goto label07;

     label03:
        $z9 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean hasVisibleBehindActivity()>();

        if $z9 != 0 goto label07;

        $r29 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r28 = $r29.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStoppingActivities>;

        virtualinvoke $r28.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r32 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r31 = $r32.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStoppingActivities>;

        $i7 = virtualinvoke $r31.<java.util.ArrayList: int size()>();

        if $i7 > 3 goto label04;

        $z10 = r1.<com.android.server.am.ActivityRecord: boolean frontOfTask>;

        if $z10 == 0 goto label05;

        $r33 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i8 = virtualinvoke $r33.<java.util.ArrayList: int size()>();

        if $i8 > 1 goto label05;

     label04:
        $r30 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r30.<com.android.server.am.ActivityStackSupervisor: void scheduleIdleLocked()>();

        goto label07;

     label05:
        $r34 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r34.<com.android.server.am.ActivityStackSupervisor: void checkReadyForSleepLocked()>();

        goto label07;

     label06:
        r1 = null;

     label07:
        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity> = null;

     label08:
        if z0 == 0 goto label11;

        $r22 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        r2 = virtualinvoke $r22.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>();

        $r21 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $z2 = virtualinvoke $r21.<com.android.server.am.ActivityManagerService: boolean isSleepingOrShuttingDown()>();

        if $z2 != 0 goto label09;

        $r26 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r26.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked(com.android.server.am.ActivityStack,com.android.server.am.ActivityRecord,android.os.Bundle)>(r2, r1, null);

        goto label11;

     label09:
        $r24 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r24.<com.android.server.am.ActivityStackSupervisor: void checkReadyForSleepLocked()>();

        r3 = virtualinvoke r2.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        if r3 == null goto label10;

        if r1 == null goto label11;

        if r3 == r1 goto label11;

     label10:
        $r23 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r23.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked(com.android.server.am.ActivityStack,com.android.server.am.ActivityRecord,android.os.Bundle)>(r2, null, null);

     label11:
        if r1 == null goto label18;

        virtualinvoke r1.<com.android.server.am.ActivityRecord: void resumeKeyDispatchingLocked()>();

        $r8 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r8 == null goto label17;

        $l0 = r1.<com.android.server.am.ActivityRecord: long cpuTimeAtResume>;

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label17;

        $r9 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r10 = $r9.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        $z1 = virtualinvoke $r10.<com.android.server.am.BatteryStatsService: boolean isOnBattery()>();

        if $z1 == 0 goto label17;

        $r11 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r13 = $r11.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        $r12 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $i2 = $r12.<com.android.server.am.ProcessRecord: int pid>;

        $l3 = virtualinvoke $r13.<com.android.internal.os.ProcessCpuTracker: long getCpuTimeForPid(int)>($i2);

        $l5 = r1.<com.android.server.am.ActivityRecord: long cpuTimeAtResume>;

        l9 = $l3 - $l5;

        $b4 = l9 cmp 0L;

        if $b4 <= 0 goto label17;

        $r15 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r14 = $r15.<com.android.server.am.ActivityManagerService: com.android.server.am.BatteryStatsService mBatteryStatsService>;

        r4 = virtualinvoke $r14.<com.android.server.am.BatteryStatsService: com.android.internal.os.BatteryStatsImpl getActiveStatistics()>();

        r5 = r4;

        entermonitor r4;

     label12:
        $r18 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r17 = $r18.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i6 = $r17.<android.content.pm.ApplicationInfo: int uid>;

        $r20 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r19 = $r20.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        r6 = virtualinvoke r4.<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl$Uid$Proc getProcessStatsLocked(int,java.lang.String)>($i6, $r19);

        if r6 == null goto label13;

        virtualinvoke r6.<com.android.internal.os.BatteryStatsImpl$Uid$Proc: void addForegroundTimeLocked(long)>(l9);

     label13:
        exitmonitor r5;

     label14:
        goto label17;

     label15:
        $r37 := @caughtexception;

        r7 = $r37;

        exitmonitor r5;

     label16:
        throw r7;

     label17:
        r1.<com.android.server.am.ActivityRecord: long cpuTimeAtResume> = 0L;

     label18:
        return;

        catch java.lang.Throwable from label12 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    private void completeResumeLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1, $r7, $r10, $r21;
        com.android.server.am.ProcessRecord r2, $r6, $r13, $r23;
        boolean $z0, $z1, $z3;
        com.android.server.am.ActivityStackSupervisor $r3, $r4, $r16;
        java.util.ArrayList $r5, $r19;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer $r8, $r11;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r9, $r12;
        com.android.server.am.ActivityManagerService $r14, $r20, $r22;
        com.android.internal.os.ProcessCpuTracker $r15;
        int $i0;
        long $l1;
        com.android.server.am.TaskRecord $r17;
        java.lang.Object $r18;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r1.<com.android.server.am.ActivityRecord: boolean idle> = 0;

        r1.<com.android.server.am.ActivityRecord: java.util.ArrayList results> = null;

        r1.<com.android.server.am.ActivityRecord: java.util.ArrayList newIntents> = null;

        $z0 = virtualinvoke r1.<com.android.server.am.ActivityRecord: boolean isHomeActivity()>();

        if $z0 == 0 goto label1;

        $z3 = virtualinvoke r1.<com.android.server.am.ActivityRecord: boolean isNotResolverActivity()>();

        if $z3 == 0 goto label1;

        $r17 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r19 = $r17.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $r18 = virtualinvoke $r19.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r21 = (com.android.server.am.ActivityRecord) $r18;

        r2 = $r21.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if r2 == null goto label1;

        $r20 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r23 = $r20.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        if r2 == $r23 goto label1;

        $r22 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r22.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess> = r2;

     label1:
        $z1 = r1.<com.android.server.am.ActivityRecord: boolean nowVisible>;

        if $z1 == 0 goto label2;

        $r16 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r16.<com.android.server.am.ActivityStackSupervisor: void notifyActivityDrawnForKeyguard()>();

     label2:
        $r3 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r3.<com.android.server.am.ActivityStackSupervisor: void scheduleIdleTimeoutLocked(com.android.server.am.ActivityRecord)>(r1);

        $r4 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r4.<com.android.server.am.ActivityStackSupervisor: boolean reportResumedActivityLocked(com.android.server.am.ActivityRecord)>(r1);

        virtualinvoke r1.<com.android.server.am.ActivityRecord: void resumeKeyDispatchingLocked()>();

        $r5 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mNoAnimActivities>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $r6 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r6 == null goto label3;

        $r14 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r15 = $r14.<com.android.server.am.ActivityManagerService: com.android.internal.os.ProcessCpuTracker mProcessCpuTracker>;

        $r13 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $i0 = $r13.<com.android.server.am.ProcessRecord: int pid>;

        $l1 = virtualinvoke $r15.<com.android.internal.os.ProcessCpuTracker: long getCpuTimeForPid(int)>($i0);

        r1.<com.android.server.am.ActivityRecord: long cpuTimeAtResume> = $l1;

        goto label4;

     label3:
        r1.<com.android.server.am.ActivityRecord: long cpuTimeAtResume> = 0L;

     label4:
        $r7 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastScreenshotActivity>;

        if r1 != $r7 goto label5;

        specialinvoke r0.<com.android.server.am.ActivityStack: void invalidateLastScreenshot()>();

     label5:
        r1.<com.android.server.am.ActivityRecord: android.app.ActivityOptions returningOptions> = null;

        $r8 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor$ActivityContainer mActivityContainer>;

        $r9 = $r8.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor$ActivityDisplay mActivityDisplay>;

        $r10 = $r9.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: com.android.server.am.ActivityRecord mVisibleBehindActivity>;

        if $r10 != r1 goto label6;

        $r11 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor$ActivityContainer mActivityContainer>;

        $r12 = $r11.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor$ActivityDisplay mActivityDisplay>;

        virtualinvoke $r12.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: void setVisibleBehindActivity(com.android.server.am.ActivityRecord)>(null);

     label6:
        return;
    }

    private void setVisibile(com.android.server.am.ActivityRecord, boolean)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1;
        boolean z0;
        java.util.ArrayList r2;
        int i0, $i1;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer r3;
        android.view.IApplicationToken$Stub $r4;
        com.android.server.wm.WindowManagerService $r5;
        java.lang.Object $r6;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        z0 := @parameter1: boolean;

        r1.<com.android.server.am.ActivityRecord: boolean visible> = z0;

        $r5 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $r4 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r5.<com.android.server.wm.WindowManagerService: void setAppVisibility(android.os.IBinder,boolean)>($r4, z0);

        r2 = r1.<com.android.server.am.ActivityRecord: java.util.ArrayList mChildContainers>;

        $i1 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label2;

        $r6 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.am.ActivityStackSupervisor$ActivityContainer) $r6;

        virtualinvoke r3.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void setVisible(boolean)>(z0);

        i0 = i0 + -1;

        goto label1;

     label2:
        return;
    }

    com.android.server.am.ActivityRecord findNextTranslucentActivity(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStack r0, r3, $r10;
        com.android.server.am.ActivityRecord r1, r6, $r15;
        com.android.server.am.TaskRecord r2, $r13;
        int i0, i1, i2, i3, i4, i5, $i6;
        java.util.ArrayList r4, r5, $r7, $r8, $r9, r16, r17;
        java.lang.Object $r11, $r12, $r14;
        boolean $z0, $z1;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r2 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if r2 != null goto label01;

        return null;

     label01:
        r3 = r2.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        if r3 != null goto label02;

        return null;

     label02:
        $r7 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mStacks>;

        i0 = virtualinvoke $r7.<java.util.ArrayList: int indexOf(java.lang.Object)>(r3);

        r4 = r3.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        i1 = virtualinvoke r4.<java.util.ArrayList: int indexOf(java.lang.Object)>(r2);

        r5 = r2.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i6 = virtualinvoke r5.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        i2 = $i6 + 1;

        $r8 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mStacks>;

        i3 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

     label03:
        if i0 >= i3 goto label11;

        $r9 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mStacks>;

        $r11 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r10 = (com.android.server.am.ActivityStack) $r11;

        r16 = $r10.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        i4 = virtualinvoke r16.<java.util.ArrayList: int size()>();

     label04:
        if i1 >= i4 goto label10;

        $r12 = virtualinvoke r16.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r13 = (com.android.server.am.TaskRecord) $r12;

        r17 = $r13.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        i5 = virtualinvoke r17.<java.util.ArrayList: int size()>();

     label05:
        if i2 >= i5 goto label09;

        $r14 = virtualinvoke r17.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r6 = (com.android.server.am.ActivityRecord) $r14;

        $z0 = r6.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z0 != 0 goto label08;

        $z1 = r6.<com.android.server.am.ActivityRecord: boolean fullscreen>;

        if $z1 == 0 goto label06;

        $r15 = null;

        goto label07;

     label06:
        $r15 = r6;

     label07:
        return $r15;

     label08:
        i2 = i2 + 1;

        goto label05;

     label09:
        i2 = 0;

        i1 = i1 + 1;

        goto label04;

     label10:
        i1 = 0;

        i0 = i0 + 1;

        goto label03;

     label11:
        return null;
    }

    private boolean isStackVisible()
    {
        com.android.server.am.ActivityStack r0, $r9;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        java.util.ArrayList r1, r3, $r6, $r7, $r8;
        com.android.server.am.TaskRecord r2;
        com.android.server.am.ActivityRecord r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.android.server.am.ActivityStackSupervisor $r5;
        java.lang.Object $r10, $r11, $r12;

        r0 := @this: com.android.server.am.ActivityStack;

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean isAttached()>();

        if $z0 != 0 goto label01;

        return 0;

     label01:
        $r5 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $z1 = virtualinvoke $r5.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r0);

        if $z1 == 0 goto label02;

        return 1;

     label02:
        $r6 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mStacks>;

        $i3 = virtualinvoke $r6.<java.util.ArrayList: int indexOf(java.lang.Object)>(r0);

        i0 = $i3 + 1;

     label03:
        $r7 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mStacks>;

        $i4 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if i0 >= $i4 goto label10;

        $r8 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mStacks>;

        $r10 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r9 = (com.android.server.am.ActivityStack) $r10;

        r1 = virtualinvoke $r9.<com.android.server.am.ActivityStack: java.util.ArrayList getAllTasks()>();

        i1 = 0;

     label04:
        $i5 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i1 >= $i5 goto label09;

        $r11 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.am.TaskRecord) $r11;

        r3 = r2.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        i2 = 0;

     label05:
        $i6 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i2 >= $i6 goto label08;

        $r12 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r4 = (com.android.server.am.ActivityRecord) $r12;

        $z2 = r4.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z2 != 0 goto label07;

        $z4 = r4.<com.android.server.am.ActivityRecord: boolean visible>;

        if $z4 == 0 goto label07;

        $z3 = r4.<com.android.server.am.ActivityRecord: boolean fullscreen>;

        if $z3 != 0 goto label06;

        $z6 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean isHomeStack()>();

        if $z6 != 0 goto label07;

        $z5 = r4.<com.android.server.am.ActivityRecord: boolean frontOfTask>;

        if $z5 == 0 goto label07;

        $z7 = virtualinvoke r2.<com.android.server.am.TaskRecord: boolean isOverHomeStack()>();

        if $z7 == 0 goto label07;

     label06:
        return 0;

     label07:
        i2 = i2 + 1;

        goto label05;

     label08:
        i1 = i1 + 1;

        goto label04;

     label09:
        i0 = i0 + 1;

        goto label03;

     label10:
        return 1;
    }

    final void ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord, int)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1, r2, r5, $r7, $r9, $r23, $r44, $r46;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z13, $z14, $z16, $z18;
        com.android.server.am.TaskRecord r3;
        java.util.ArrayList r4, $r8, $r10, $r12, $r25, $r39, $r50, $r51;
        java.lang.Object $r11, $r13;
        com.android.server.am.ProcessRecord $r14, $r15, $r16, $r21, $r24, $r30, $r35, $r37, $r38;
        com.android.server.am.ActivityStackSupervisor $r17, $r40, $r41, $r45;
        com.android.server.am.ActivityStack$ActivityState $r18, $r19, $r34;
        android.app.IApplicationThread $r20, $r26, $r32, $r36, $r43;
        android.view.IApplicationToken$Stub $r22, $r28, $r42;
        android.app.ActivityOptions $r27, $r29, $r31;
        int[] $r33;
        android.os.Handler $r47;
        android.os.RemoteException $r48;
        java.lang.Exception $r49, $r63, r65, r66;
        java.lang.StringBuilder $r52, $r55, $r57, $r61, $r62, $r64;
        android.content.ComponentName $r53, $r58;
        java.lang.String $r54, $r60;
        android.content.Intent $r56, $r59;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        i0 := @parameter1: int;

        r2 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        if r2 != null goto label01;

        return;

     label01:
        $r7 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mTranslucentActivityWaiting>;

        if $r7 == r2 goto label03;

        $r51 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mUndrawnActivitiesBelowTopTranslucent>;

        virtualinvoke $r51.<java.util.ArrayList: void clear()>();

        $r46 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mTranslucentActivityWaiting>;

        if $r46 == null goto label02;

        virtualinvoke r0.<com.android.server.am.ActivityStack: void notifyActivityDrawnLocked(com.android.server.am.ActivityRecord)>(null);

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mTranslucentActivityWaiting> = null;

     label02:
        $r47 = r0.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        virtualinvoke $r47.<android.os.Handler: void removeMessages(int)>(106);

     label03:
        z0 = 1;

        $z2 = specialinvoke r0.<com.android.server.am.ActivityStack: boolean isStackVisible()>();

        if $z2 != 0 goto label04;

        $z18 = 1;

        goto label05;

     label04:
        $z18 = 0;

     label05:
        z1 = $z18;

        $r8 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i3 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label06:
        if i1 < 0 goto label37;

        $r12 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r11 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.server.am.TaskRecord) $r11;

        r4 = r3.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i4 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        i2 = $i4 - 1;

     label07:
        if i2 < 0 goto label36;

        $r13 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r5 = (com.android.server.am.ActivityRecord) $r13;

        $z4 = r5.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z4 == 0 goto label08;

        goto label35;

     label08:
        if z0 == 0 goto label09;

        if r5 == r2 goto label09;

        goto label35;

     label09:
        z0 = 0;

        if z1 == 0 goto label10;

        $z14 = r5.<com.android.server.am.ActivityRecord: boolean mLaunchTaskBehind>;

        if $z14 == 0 goto label27;

     label10:
        if r5 == r1 goto label11;

        virtualinvoke r0.<com.android.server.am.ActivityStack: boolean ensureActivityConfigurationLocked(com.android.server.am.ActivityRecord,int)>(r5, 0);

     label11:
        $r14 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r14 == null goto label12;

        $r16 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r20 = $r16.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r20 != null goto label16;

     label12:
        if r5 == r1 goto label13;

        $r15 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke r5.<com.android.server.am.ActivityRecord: void startFreezingScreenLocked(com.android.server.am.ProcessRecord,int)>($r15, i0);

     label13:
        $z5 = r5.<com.android.server.am.ActivityRecord: boolean visible>;

        if $z5 == 0 goto label14;

        $z10 = r5.<com.android.server.am.ActivityRecord: boolean mLaunchTaskBehind>;

        if $z10 == 0 goto label15;

     label14:
        specialinvoke r0.<com.android.server.am.ActivityStack: void setVisibile(com.android.server.am.ActivityRecord,boolean)>(r5, 1);

     label15:
        if r5 == r1 goto label25;

        $r17 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r17.<com.android.server.am.ActivityStackSupervisor: void startSpecificActivityLocked(com.android.server.am.ActivityRecord,boolean,boolean)>(r5, 0, 0);

        goto label25;

     label16:
        $z11 = r5.<com.android.server.am.ActivityRecord: boolean visible>;

        if $z11 == 0 goto label20;

        virtualinvoke r5.<com.android.server.am.ActivityRecord: void stopFreezingScreenLocked(boolean)>(0);

     label17:
        $r31 = r5.<com.android.server.am.ActivityRecord: android.app.ActivityOptions returningOptions>;

        if $r31 == null goto label18;

        $r30 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r32 = $r30.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r28 = r5.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        $r29 = r5.<com.android.server.am.ActivityRecord: android.app.ActivityOptions returningOptions>;

        interfaceinvoke $r32.<android.app.IApplicationThread: void scheduleOnNewActivityOptions(android.os.IBinder,android.app.ActivityOptions)>($r28, $r29);

     label18:
        goto label25;

     label19:
        $r48 := @caughtexception;

        goto label25;

     label20:
        r5.<com.android.server.am.ActivityRecord: boolean visible> = 1;

        $r19 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r18 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState RESUMED>;

        if $r19 == $r18 goto label25;

        if r5 == r1 goto label25;

     label21:
        $r23 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mTranslucentActivityWaiting>;

        if $r23 == null goto label22;

        $r27 = r5.<com.android.server.am.ActivityRecord: android.app.ActivityOptions returningOptions>;

        virtualinvoke r5.<com.android.server.am.ActivityRecord: void updateOptionsLocked(android.app.ActivityOptions)>($r27);

        $r25 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mUndrawnActivitiesBelowTopTranslucent>;

        virtualinvoke $r25.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label22:
        specialinvoke r0.<com.android.server.am.ActivityStack: void setVisibile(com.android.server.am.ActivityRecord,boolean)>(r5, 1);

        r5.<com.android.server.am.ActivityRecord: boolean sleeping> = 0;

        $r24 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r24.<com.android.server.am.ProcessRecord: boolean pendingUiClean> = 1;

        $r21 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r26 = $r21.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r22 = r5.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        interfaceinvoke $r26.<android.app.IApplicationThread: void scheduleWindowVisibility(android.os.IBinder,boolean)>($r22, 1);

        virtualinvoke r5.<com.android.server.am.ActivityRecord: void stopFreezingScreenLocked(boolean)>(0);

     label23:
        goto label25;

     label24:
        $r49 := @caughtexception;

        r65 = $r49;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown making visibile: ");

        $r56 = r5.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r53 = virtualinvoke $r56.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r52 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r53);

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r54, r65);

     label25:
        $i5 = r5.<com.android.server.am.ActivityRecord: int configChangeFlags>;

        i0 = i0 | $i5;

        $z7 = r5.<com.android.server.am.ActivityRecord: boolean fullscreen>;

        if $z7 == 0 goto label26;

        z1 = 1;

        goto label35;

     label26:
        $z6 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean isHomeStack()>();

        if $z6 != 0 goto label35;

        $z9 = r5.<com.android.server.am.ActivityRecord: boolean frontOfTask>;

        if $z9 == 0 goto label35;

        $z8 = virtualinvoke r3.<com.android.server.am.TaskRecord: boolean isOverHomeStack()>();

        if $z8 == 0 goto label35;

        z1 = 1;

        goto label35;

     label27:
        $z13 = r5.<com.android.server.am.ActivityRecord: boolean visible>;

        if $z13 == 0 goto label35;

     label28:
        specialinvoke r0.<com.android.server.am.ActivityStack: void setVisibile(com.android.server.am.ActivityRecord,boolean)>(r5, 0);

        $r33 = <com.android.server.am.ActivityStack$1: int[] $SwitchMap$com$android$server$am$ActivityStack$ActivityState>;

        $r34 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $i7 = virtualinvoke $r34.<com.android.server.am.ActivityStack$ActivityState: int ordinal()>();

        $i6 = $r33[$i7];

        tableswitch($i6)
        {
            case 1: goto label29;
            case 2: goto label29;
            case 3: goto label30;
            case 4: goto label30;
            case 5: goto label30;
            case 6: goto label30;
            default: goto label33;
        };

     label29:
        $r38 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r38 == null goto label33;

        $r37 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r36 = $r37.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r36 == null goto label33;

        $r35 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r43 = $r35.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r42 = r5.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        interfaceinvoke $r43.<android.app.IApplicationThread: void scheduleWindowVisibility(android.os.IBinder,boolean)>($r42, 0);

        goto label33;

     label30:
        $r44 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord getVisibleBehindActivity()>();

        if $r44 != r5 goto label31;

        virtualinvoke r0.<com.android.server.am.ActivityStack: void releaseBackgroundResources()>();

        goto label33;

     label31:
        $r45 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r39 = $r45.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStoppingActivities>;

        $z16 = virtualinvoke $r39.<java.util.ArrayList: boolean contains(java.lang.Object)>(r5);

        if $z16 != 0 goto label32;

        $r41 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r50 = $r41.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStoppingActivities>;

        virtualinvoke $r50.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label32:
        $r40 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r40.<com.android.server.am.ActivityStackSupervisor: void scheduleIdleLocked()>();

        goto label33;

     label33:
        goto label35;

     label34:
        $r63 := @caughtexception;

        r66 = $r63;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown making hidden: ");

        $r59 = r5.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r58 = virtualinvoke $r59.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r61 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r58);

        $r60 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r60, r66);

     label35:
        i2 = i2 + -1;

        goto label07;

     label36:
        i1 = i1 + -1;

        goto label06;

     label37:
        $r9 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mTranslucentActivityWaiting>;

        if $r9 == null goto label38;

        $r10 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mUndrawnActivitiesBelowTopTranslucent>;

        $z3 = virtualinvoke $r10.<java.util.ArrayList: boolean isEmpty()>();

        if $z3 == 0 goto label38;

        virtualinvoke r0.<com.android.server.am.ActivityStack: void notifyActivityDrawnLocked(com.android.server.am.ActivityRecord)>(null);

     label38:
        return;

        catch android.os.RemoteException from label17 to label18 with label19;
        catch java.lang.Exception from label21 to label23 with label24;
        catch java.lang.Exception from label28 to label33 with label34;
    }

    void convertToTranslucent(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1;
        java.util.ArrayList $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mTranslucentActivityWaiting> = r1;

        $r2 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mUndrawnActivitiesBelowTopTranslucent>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        $r3 = r0.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>(106, 2000L);

        return;
    }

    void notifyActivityDrawnLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1, r2;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer $r4;
        java.util.ArrayList $r5, $r15, $r16;
        android.os.Handler $r6;
        android.view.IApplicationToken$Stub $r7, $r13;
        com.android.server.wm.WindowManagerService $r8;
        com.android.server.am.ProcessRecord $r9, $r10, $r12;
        android.app.IApplicationThread $r11, $r14;
        boolean $z0, $z1, $z2;
        android.os.RemoteException $r17;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $r4 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor$ActivityContainer mActivityContainer>;

        virtualinvoke $r4.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void setDrawn()>();

        if r1 == null goto label1;

        $r15 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mUndrawnActivitiesBelowTopTranslucent>;

        $z1 = virtualinvoke $r15.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        if $z1 == 0 goto label7;

        $r16 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mUndrawnActivitiesBelowTopTranslucent>;

        $z2 = virtualinvoke $r16.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 == 0 goto label7;

     label1:
        r2 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mTranslucentActivityWaiting>;

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mTranslucentActivityWaiting> = null;

        $r5 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mUndrawnActivitiesBelowTopTranslucent>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $r6 = r0.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.os.Handler: void removeMessages(int)>(106);

        if r2 == null goto label7;

        $r8 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $r7 = r2.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r8.<com.android.server.wm.WindowManagerService: void setWindowOpaque(android.os.IBinder,boolean)>($r7, 0);

        $r9 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r9 == null goto label7;

        $r10 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r11 = $r10.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r11 == null goto label7;

     label2:
        $r12 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r14 = $r12.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r13 = r2.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        if r1 == null goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        interfaceinvoke $r14.<android.app.IApplicationThread: void scheduleTranslucentConversionComplete(android.os.IBinder,boolean)>($r13, $z0);

     label5:
        goto label7;

     label6:
        $r17 := @caughtexception;

     label7:
        return;

        catch android.os.RemoteException from label2 to label5 with label6;
    }

    void cancelInitializingActivities()
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1, r3;
        boolean z0, $z1;
        int i0, i1, $i2, $i3;
        java.util.ArrayList r2, $r4, $r5;
        java.lang.Object $r6, $r8;
        com.android.server.am.TaskRecord $r7;
        com.android.server.am.ActivityStack$ActivityState $r9, $r10;
        com.android.server.wm.WindowManagerService $r11;
        android.view.IApplicationToken$Stub $r12;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        z0 = 1;

        $r4 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label6;

        $r5 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r7 = (com.android.server.am.TaskRecord) $r6;

        r2 = $r7.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label2:
        if i1 < 0 goto label5;

        $r8 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.server.am.ActivityRecord) $r8;

        if z0 == 0 goto label3;

        if r3 != r1 goto label4;

        z0 = 0;

        goto label4;

     label3:
        $r10 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r9 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState INITIALIZING>;

        if $r10 != $r9 goto label4;

        $z1 = r3.<com.android.server.am.ActivityRecord: boolean mStartingWindowShown>;

        if $z1 == 0 goto label4;

        r3.<com.android.server.am.ActivityRecord: boolean mStartingWindowShown> = 0;

        $r11 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $r12 = r3.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r11.<com.android.server.wm.WindowManagerService: void removeAppStartingWindow(android.os.IBinder)>($r12);

     label4:
        i1 = i1 + -1;

        goto label2;

     label5:
        i0 = i0 + -1;

        goto label1;

     label6:
        return;
    }

    final boolean resumeTopActivityLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean resumeTopActivityLocked(com.android.server.am.ActivityRecord,android.os.Bundle)>(r1, null);

        return $z0;
    }

    final boolean resumeTopActivityLocked(com.android.server.am.ActivityRecord, android.os.Bundle)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1;
        android.os.Bundle r2;
        java.lang.Throwable r3, $r4;
        boolean $z1, z2;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r2 := @parameter1: android.os.Bundle;

        $z1 = r0.<com.android.server.am.ActivityStack: boolean inResumeTopActivity>;

        if $z1 == 0 goto label1;

        return 0;

     label1:
        r0.<com.android.server.am.ActivityStack: boolean inResumeTopActivity> = 1;

        z2 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean resumeTopActivityInnerLocked(com.android.server.am.ActivityRecord,android.os.Bundle)>(r1, r2);

     label2:
        r0.<com.android.server.am.ActivityStack: boolean inResumeTopActivity> = 0;

        goto label5;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        r0.<com.android.server.am.ActivityStack: boolean inResumeTopActivity> = 0;

        throw r3;

     label5:
        return z2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    final boolean resumeTopActivityInnerLocked(com.android.server.am.ActivityRecord, android.os.Bundle)
    {
        com.android.server.am.ActivityStack r0, $r128, r183;
        com.android.server.am.ActivityRecord r1, r3, r4, r9, $r18, $r32, $r86, $r108, $r109, $r120, $r131, r184;
        android.os.Bundle r2, r7;
        boolean z0, z1, z2, $z3, $z4, $z5, $z8, $z10, $z11, $z12, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z28, $z29, $z30, $z31, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z48, $z49, z50, z51;
        com.android.server.am.TaskRecord r5, $r57, $r58, $r64, $r96, $r97, $r102, $r103, $r126, $r139, $r153, r181;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i19, $i21, $i22, $i23, $i26, $i27, $i28, $i29, $i30, i32;
        android.app.ActivityOptions r8;
        com.android.server.am.ActivityStack$ActivityState r10, $r55, $r140, $r141, $r151, $r152;
        android.content.res.Configuration r11, $r93;
        com.android.server.am.ActivityManagerService $r12, $r17, $r19, $r31, $r42, $r53, $r54, $r56, $r61, $r68, $r71, $r85, $r89, $r123, $r150, $r179;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer $r13, $r14;
        com.android.server.am.ActivityStackSupervisor $r15, $r16, $r23, $r24, $r25, $r27, $r29, $r36, $r51, $r60, $r77, $r80, $r90, $r106, $r127, $r130, $r138, $r142, $r154, $r172, $r176;
        android.util.SparseArray $r20;
        java.util.ArrayList $r21, $r26, $r28, $r33, $r62, $r74, $r88, $r95, $r101, $r105, $r129, $r137, $r143, $r144, r185;
        java.lang.Object $r22, $r145;
        android.content.pm.ActivityInfo $r30, $r39, $r174;
        java.lang.String $r34, $r45, $r73, $r135, $r146, $r158, $r164, $r173, $r178;
        android.content.pm.IPackageManager $r35;
        com.android.server.wm.WindowManagerService $r37, $r43, $r49, $r91, $r94, $r98, $r100, $r104, $r107, $r110, $r112, $r114, $r132, $r136, $r180;
        android.content.pm.ApplicationInfo $r38, $r175;
        com.android.server.am.ProcessRecord $r40, $r46, $r52, $r67, $r69, $r70, $r72, $r76, $r83, $r92, $r119, $r122, $r124;
        android.content.res.CompatibilityInfo $r41, $r167;
        android.view.IApplicationToken$Stub $r44, $r48, $r75, $r78, $r82, $r87, $r99, $r111, $r113, $r121, $r157, $r177;
        android.app.IApplicationThread $r47, $r79, $r81, $r84, $r125;
        java.lang.CharSequence $r50, $r168;
        java.lang.Object[] $r59;
        java.lang.Integer $r63, $r65, $r66;
        byte $b17, $b18;
        java.lang.StringBuilder $r115, $r116, $r117, $r118, $r133, $r134, $r147, $r148, $r159, $r160, $r161, $r163, $r165, $r166, $r169, $r170, $r171;
        java.lang.IllegalArgumentException $r149, r182;
        android.os.RemoteException $r155;
        java.lang.Exception $r156, $r162, r187;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r2 := @parameter1: android.os.Bundle;

        $r12 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $z3 = $r12.<com.android.server.am.ActivityManagerService: boolean mBooting>;

        if $z3 != 0 goto label01;

        $r150 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $z42 = $r150.<com.android.server.am.ActivityManagerService: boolean mBooted>;

        if $z42 != 0 goto label01;

        return 0;

     label01:
        $r14 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor$ActivityContainer mActivityContainer>;

        r3 = $r14.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityRecord mParentActivity>;

        if r3 == null goto label02;

        $r151 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r152 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState RESUMED>;

        if $r151 != $r152 goto label03;

     label02:
        $r13 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor$ActivityContainer mActivityContainer>;

        $z4 = virtualinvoke $r13.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: boolean isAttachedLocked()>();

        if $z4 != 0 goto label04;

     label03:
        return 0;

     label04:
        virtualinvoke r0.<com.android.server.am.ActivityStack: void cancelInitializingActivities()>();

        r4 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        $r16 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        z0 = $r16.<com.android.server.am.ActivityStackSupervisor: boolean mUserLeaving>;

        $r15 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r15.<com.android.server.am.ActivityStackSupervisor: boolean mUserLeaving> = 0;

        if r1 == null goto label05;

        $r153 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        goto label06;

     label05:
        $r153 = null;

     label06:
        r5 = $r153;

        if r4 != null goto label12;

        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r2);

        if r5 == null goto label07;

        $z43 = virtualinvoke r5.<com.android.server.am.TaskRecord: boolean isOverHomeStack()>();

        if $z43 != 0 goto label08;

     label07:
        $i23 = 1;

        goto label09;

     label08:
        $i23 = virtualinvoke r5.<com.android.server.am.TaskRecord: int getTaskToReturnTo()>();

     label09:
        i0 = $i23;

        $z46 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean isOnHomeDisplay()>();

        if $z46 == 0 goto label10;

        $r154 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $z45 = virtualinvoke $r154.<com.android.server.am.ActivityStackSupervisor: boolean resumeHomeStackTask(int,com.android.server.am.ActivityRecord)>(i0, r1);

        if $z45 == 0 goto label10;

        $z44 = 1;

        goto label11;

     label10:
        $z44 = 0;

     label11:
        return $z44;

     label12:
        r4.<com.android.server.am.ActivityRecord: boolean delayedResume> = 0;

        $r18 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if $r18 != r4 goto label13;

        $r141 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r140 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState RESUMED>;

        if $r141 != $r140 goto label13;

        $r142 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $z38 = virtualinvoke $r142.<com.android.server.am.ActivityStackSupervisor: boolean allResumedActivitiesComplete()>();

        if $z38 == 0 goto label13;

        $r136 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r136.<com.android.server.wm.WindowManagerService: void executeAppTransition()>();

        $r137 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mNoAnimActivities>;

        virtualinvoke $r137.<java.util.ArrayList: void clear()>();

        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r2);

        $r138 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r138.<com.android.server.am.ActivityStackSupervisor: void notifyActivityDrawnForKeyguard()>();

        return 0;

     label13:
        r181 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if r5 == null goto label21;

        $r128 = r5.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        if $r128 != r0 goto label21;

        $z36 = virtualinvoke r5.<com.android.server.am.TaskRecord: boolean isOverHomeStack()>();

        if $z36 == 0 goto label21;

        $z35 = r1.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z35 == 0 goto label21;

        $z33 = r1.<com.android.server.am.ActivityRecord: boolean frontOfTask>;

        if $z33 == 0 goto label21;

        if r5 != r181 goto label14;

        virtualinvoke r5.<com.android.server.am.TaskRecord: void setFrontOfTask()>();

        goto label21;

     label14:
        $r126 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.TaskRecord topTask()>();

        if r5 == $r126 goto label15;

        $r143 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i21 = virtualinvoke $r143.<java.util.ArrayList: int indexOf(java.lang.Object)>(r5);

        i1 = $i21 + 1;

        $r144 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r145 = virtualinvoke $r144.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r139 = (com.android.server.am.TaskRecord) $r145;

        virtualinvoke $r139.<com.android.server.am.TaskRecord: void setTaskToReturnTo(int)>(1);

        goto label21;

     label15:
        if r5 == null goto label16;

        $z41 = virtualinvoke r5.<com.android.server.am.TaskRecord: boolean isOverHomeStack()>();

        if $z41 != 0 goto label17;

     label16:
        $i22 = 1;

        goto label18;

     label17:
        $i22 = virtualinvoke r5.<com.android.server.am.TaskRecord: int getTaskToReturnTo()>();

     label18:
        i32 = $i22;

        $z34 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean isOnHomeDisplay()>();

        if $z34 == 0 goto label19;

        $r127 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $z39 = virtualinvoke $r127.<com.android.server.am.ActivityStackSupervisor: boolean resumeHomeStackTask(int,com.android.server.am.ActivityRecord)>(i32, r1);

        if $z39 == 0 goto label19;

        $z40 = 1;

        goto label20;

     label19:
        $z40 = 0;

     label20:
        return $z40;

     label21:
        $r17 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $z5 = virtualinvoke $r17.<com.android.server.am.ActivityManagerService: boolean isSleepingOrShuttingDown()>();

        if $z5 == 0 goto label22;

        $r131 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastPausedActivity>;

        if $r131 != r4 goto label22;

        $r130 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $z37 = virtualinvoke $r130.<com.android.server.am.ActivityStackSupervisor: boolean allPausedActivitiesComplete()>();

        if $z37 == 0 goto label22;

        $r132 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r132.<com.android.server.wm.WindowManagerService: void executeAppTransition()>();

        $r129 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mNoAnimActivities>;

        virtualinvoke $r129.<java.util.ArrayList: void clear()>();

        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r2);

        return 0;

     label22:
        $r19 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r20 = $r19.<com.android.server.am.ActivityManagerService: android.util.SparseArray mStartedUsers>;

        $i3 = r4.<com.android.server.am.ActivityRecord: int userId>;

        $r22 = virtualinvoke $r20.<android.util.SparseArray: java.lang.Object get(int)>($i3);

        if $r22 != null goto label23;

        $r115 = new java.lang.StringBuilder;

        specialinvoke $r115.<java.lang.StringBuilder: void <init>()>();

        $r117 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping resume of top activity ");

        $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r116 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": user ");

        $i19 = r4.<com.android.server.am.ActivityRecord: int userId>;

        $r134 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r133 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is stopped");

        $r135 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r135);

        return 0;

     label23:
        $r23 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r21 = $r23.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStoppingActivities>;

        virtualinvoke $r21.<java.util.ArrayList: boolean remove(java.lang.Object)>(r4);

        $r25 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r26 = $r25.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mGoingToSleepActivities>;

        virtualinvoke $r26.<java.util.ArrayList: boolean remove(java.lang.Object)>(r4);

        r4.<com.android.server.am.ActivityRecord: boolean sleeping> = 0;

        $r24 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r28 = $r24.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingVisibleActivities>;

        virtualinvoke $r28.<java.util.ArrayList: boolean remove(java.lang.Object)>(r4);

        $r27 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $z8 = virtualinvoke $r27.<com.android.server.am.ActivityStackSupervisor: boolean allPausedActivitiesComplete()>();

        if $z8 != 0 goto label24;

        return 0;

     label24:
        $r30 = r4.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i5 = $r30.<android.content.pm.ActivityInfo: int flags>;

        $i4 = $i5 & 16384;

        if $i4 == 0 goto label25;

        $z31 = 1;

        goto label26;

     label25:
        $z31 = 0;

     label26:
        z50 = $z31;

        $r29 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        z1 = virtualinvoke $r29.<com.android.server.am.ActivityStackSupervisor: boolean pauseBackStacks(boolean,boolean,boolean)>(z0, 1, z50);

        $r32 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if $r32 == null goto label27;

        $z30 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean startPausingLocked(boolean,boolean,boolean,boolean)>(z0, 0, 1, z50);

        z1 = z1 | $z30;

     label27:
        if z1 == 0 goto label29;

        $r119 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r119 == null goto label28;

        $r124 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r125 = $r124.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r125 == null goto label28;

        $r123 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r122 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r123.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>($r122, 1, null);

     label28:
        return 1;

     label29:
        $r31 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $z10 = virtualinvoke $r31.<com.android.server.am.ActivityManagerService: boolean isSleeping()>();

        if $z10 == 0 goto label30;

        $r109 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastNoHistoryActivity>;

        if $r109 == null goto label30;

        $r108 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastNoHistoryActivity>;

        $z26 = $r108.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z26 != 0 goto label30;

        $r120 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastNoHistoryActivity>;

        $r121 = $r120.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke r0.<com.android.server.am.ActivityStack: boolean requestFinishActivityLocked(android.os.IBinder,int,android.content.Intent,java.lang.String,boolean)>($r121, 0, null, "no-history", 0);

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastNoHistoryActivity> = null;

     label30:
        if r1 == null goto label32;

        if r1 == r4 goto label32;

        $z29 = r1.<com.android.server.am.ActivityRecord: boolean waitingVisible>;

        if $z29 != 0 goto label31;

        if r4 == null goto label31;

        $z25 = r4.<com.android.server.am.ActivityRecord: boolean nowVisible>;

        if $z25 != 0 goto label31;

        r1.<com.android.server.am.ActivityRecord: boolean waitingVisible> = 1;

        $r106 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r105 = $r106.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingVisibleActivities>;

        virtualinvoke $r105.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        goto label32;

     label31:
        $z28 = r1.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z28 == 0 goto label32;

        $r107 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $r113 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r107.<com.android.server.wm.WindowManagerService: void setAppVisibility(android.os.IBinder,boolean)>($r113, 0);

     label32:
        $r35 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r34 = r4.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        $i6 = r4.<com.android.server.am.ActivityRecord: int userId>;

        interfaceinvoke $r35.<android.content.pm.IPackageManager: void setPackageStoppedState(java.lang.String,boolean,int)>($r34, 0, $i6);

     label33:
        goto label36;

     label34:
        $r155 := @caughtexception;

        goto label36;

     label35:
        $r149 := @caughtexception;

        r182 = $r149;

        $r148 = new java.lang.StringBuilder;

        specialinvoke $r148.<java.lang.StringBuilder: void <init>()>();

        $r147 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed trying to unstop package ");

        $r146 = r4.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        $r165 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r146);

        $r166 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r163 = virtualinvoke $r166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r182);

        $r164 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r164);

     label36:
        z51 = 1;

        if r1 == null goto label46;

        $z22 = r1.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z22 == 0 goto label41;

        $r95 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mNoAnimActivities>;

        $z21 = virtualinvoke $r95.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z21 == 0 goto label37;

        z51 = 0;

        $r114 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r114.<com.android.server.wm.WindowManagerService: void prepareAppTransition(int,boolean)>(0, 0);

        goto label40;

     label37:
        $r98 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $r97 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r96 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r97 != $r96 goto label38;

        $b18 = 7;

        goto label39;

     label38:
        $b18 = 9;

     label39:
        virtualinvoke $r98.<com.android.server.wm.WindowManagerService: void prepareAppTransition(int,boolean)>($b18, 0);

     label40:
        $r112 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $r99 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r112.<com.android.server.wm.WindowManagerService: void setAppWillBeHidden(android.os.IBinder)>($r99);

        $r110 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $r111 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r110.<com.android.server.wm.WindowManagerService: void setAppVisibility(android.os.IBinder,boolean)>($r111, 0);

        goto label48;

     label41:
        $r101 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mNoAnimActivities>;

        $z23 = virtualinvoke $r101.<java.util.ArrayList: boolean contains(java.lang.Object)>(r4);

        if $z23 == 0 goto label42;

        z51 = 0;

        $r94 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r94.<com.android.server.wm.WindowManagerService: void prepareAppTransition(int,boolean)>(0, 0);

        goto label48;

     label42:
        $r104 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $r103 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r102 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r103 != $r102 goto label43;

        $b17 = 6;

        goto label45;

     label43:
        $z24 = r4.<com.android.server.am.ActivityRecord: boolean mLaunchTaskBehind>;

        if $z24 == 0 goto label44;

        $b17 = 16;

        goto label45;

     label44:
        $b17 = 8;

     label45:
        virtualinvoke $r104.<com.android.server.wm.WindowManagerService: void prepareAppTransition(int,boolean)>($b17, 0);

        goto label48;

     label46:
        $r33 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mNoAnimActivities>;

        $z11 = virtualinvoke $r33.<java.util.ArrayList: boolean contains(java.lang.Object)>(r4);

        if $z11 == 0 goto label47;

        z51 = 0;

        $r100 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r100.<com.android.server.wm.WindowManagerService: void prepareAppTransition(int,boolean)>(0, 0);

        goto label48;

     label47:
        $r37 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r37.<com.android.server.wm.WindowManagerService: void prepareAppTransition(int,boolean)>(6, 0);

     label48:
        r7 = null;

        if z51 == 0 goto label50;

        r8 = virtualinvoke r4.<com.android.server.am.ActivityRecord: android.app.ActivityOptions getOptionsForTargetActivityLocked()>();

        if r8 == null goto label49;

        r7 = virtualinvoke r8.<android.app.ActivityOptions: android.os.Bundle toBundle()>();

     label49:
        virtualinvoke r4.<com.android.server.am.ActivityRecord: void applyOptionsLocked()>();

        goto label51;

     label50:
        virtualinvoke r4.<com.android.server.am.ActivityRecord: void clearOptionsLocked()>();

     label51:
        $r36 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        r183 = virtualinvoke $r36.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getLastStack()>();

        $r40 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r40 == null goto label74;

        $r46 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r47 = $r46.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r47 == null goto label74;

        $r49 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $r48 = r4.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r49.<com.android.server.wm.WindowManagerService: void setAppVisibility(android.os.IBinder,boolean)>($r48, 1);

        virtualinvoke r4.<com.android.server.am.ActivityRecord: void startLaunchTickingLocked()>();

        if r183 != null goto label52;

        $r86 = null;

        goto label53;

     label52:
        $r86 = r183.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

     label53:
        r9 = $r86;

        r10 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r56 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r56.<com.android.server.am.ActivityManagerService: void updateCpuStats()>();

        $r55 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState RESUMED>;

        r4.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state> = $r55;

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity> = r4;

        $r58 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke $r58.<com.android.server.am.TaskRecord: void touchActiveTime()>();

        $r53 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r57 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke $r53.<com.android.server.am.ActivityManagerService: void addRecentTaskLocked(com.android.server.am.TaskRecord)>($r57);

        $r54 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r52 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r54.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>($r52, 1, null);

        virtualinvoke r0.<com.android.server.am.ActivityStack: boolean updateLRUListLocked(com.android.server.am.ActivityRecord)>(r4);

        $r61 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r61.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

        z2 = 1;

        $r60 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $z14 = virtualinvoke $r60.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r0);

        if $z14 == 0 goto label59;

        $r91 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $r89 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r93 = $r89.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $r92 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $z20 = virtualinvoke r4.<com.android.server.am.ActivityRecord: boolean mayFreezeScreenLocked(com.android.server.am.ProcessRecord)>($r92);

        if $z20 == 0 goto label54;

        $r87 = r4.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        goto label55;

     label54:
        $r87 = null;

     label55:
        r11 = virtualinvoke $r91.<com.android.server.wm.WindowManagerService: android.content.res.Configuration updateOrientationFromAppTokens(android.content.res.Configuration,android.os.IBinder)>($r93, $r87);

        if r11 == null goto label56;

        r4.<com.android.server.am.ActivityRecord: boolean frozenBeforeDestroy> = 1;

     label56:
        $r85 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $z18 = virtualinvoke $r85.<com.android.server.am.ActivityManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean)>(r11, r4, 0, 0);

        if $z18 != 0 goto label57;

        $z17 = 1;

        goto label58;

     label57:
        $z17 = 0;

     label58:
        z2 = $z17;

     label59:
        if z2 == 0 goto label62;

        r184 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        if r184 == r4 goto label60;

        $r90 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r90.<com.android.server.am.ActivityStackSupervisor: void scheduleResumeTopActivities()>();

     label60:
        $r80 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $z19 = virtualinvoke $r80.<com.android.server.am.ActivityStackSupervisor: boolean reportResumedActivityLocked(com.android.server.am.ActivityRecord)>(r4);

        if $z19 == 0 goto label61;

        $r88 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mNoAnimActivities>;

        virtualinvoke $r88.<java.util.ArrayList: void clear()>();

        return 1;

     label61:
        return 0;

     label62:
        r185 = r4.<com.android.server.am.ActivityRecord: java.util.ArrayList results>;

        if r185 == null goto label63;

        i2 = virtualinvoke r185.<java.util.ArrayList: int size()>();

        $z16 = r4.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z16 != 0 goto label63;

        if i2 <= 0 goto label63;

        $r83 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r81 = $r83.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r82 = r4.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        interfaceinvoke $r81.<android.app.IApplicationThread: void scheduleSendResult(android.os.IBinder,java.util.List)>($r82, r185);

     label63:
        $r62 = r4.<com.android.server.am.ActivityRecord: java.util.ArrayList newIntents>;

        if $r62 == null goto label64;

        $r76 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r84 = $r76.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r74 = r4.<com.android.server.am.ActivityRecord: java.util.ArrayList newIntents>;

        $r75 = r4.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        interfaceinvoke $r84.<android.app.IApplicationThread: void scheduleNewIntent(java.util.List,android.os.IBinder)>($r74, $r75);

     label64:
        $r59 = newarray (java.lang.Object)[4];

        $i12 = r4.<com.android.server.am.ActivityRecord: int userId>;

        $r66 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        $r59[0] = $r66;

        $i14 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r4);

        $r65 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        $r59[1] = $r65;

        $r64 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $i13 = $r64.<com.android.server.am.TaskRecord: int taskId>;

        $r63 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        $r59[2] = $r63;

        $r73 = r4.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        $r59[3] = $r73;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30007, $r59);

        r4.<com.android.server.am.ActivityRecord: boolean sleeping> = 0;

        $r71 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r71.<com.android.server.am.ActivityManagerService: void showAskCompatModeDialogLocked(com.android.server.am.ActivityRecord)>(r4);

        $r72 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r72.<com.android.server.am.ProcessRecord: boolean pendingUiClean> = 1;

        $r69 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r69.<com.android.server.am.ProcessRecord: void forceProcessStateUpTo(int)>(2);

        virtualinvoke r4.<com.android.server.am.ActivityRecord: void clearOptionsLocked()>();

        $r70 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r79 = $r70.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r78 = r4.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        $r67 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $i16 = $r67.<com.android.server.am.ProcessRecord: int repProcState>;

        $r68 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $z15 = virtualinvoke $r68.<com.android.server.am.ActivityManagerService: boolean isNextTransitionForward()>();

        interfaceinvoke $r79.<android.app.IApplicationThread: void scheduleResumeActivity(android.os.IBinder,int,boolean,android.os.Bundle)>($r78, $i16, $z15, r7);

        $r77 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r77.<com.android.server.am.ActivityStackSupervisor: void checkReadyForSleepLocked()>();

     label65:
        goto label70;

     label66:
        $r156 := @caughtexception;

        r4.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state> = r10;

        if r183 == null goto label67;

        r183.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity> = r9;

     label67:
        $r171 = new java.lang.StringBuilder;

        specialinvoke $r171.<java.lang.StringBuilder: void <init>()>();

        $r169 = virtualinvoke $r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restarting because process died: ");

        $r170 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r173 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r173);

        $z48 = r4.<com.android.server.am.ActivityRecord: boolean hasBeenLaunched>;

        if $z48 != 0 goto label68;

        r4.<com.android.server.am.ActivityRecord: boolean hasBeenLaunched> = 1;

        goto label69;

     label68:
        if r183 == null goto label69;

        $r176 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $z49 = virtualinvoke $r176.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r183);

        if $z49 == 0 goto label69;

        $r180 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $r177 = r4.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        $r178 = r4.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        $i28 = r4.<com.android.server.am.ActivityRecord: int theme>;

        $r179 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r174 = r4.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r175 = $r174.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r167 = virtualinvoke $r179.<com.android.server.am.ActivityManagerService: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)>($r175);

        $r168 = r4.<com.android.server.am.ActivityRecord: java.lang.CharSequence nonLocalizedLabel>;

        $i29 = r4.<com.android.server.am.ActivityRecord: int labelRes>;

        $i30 = r4.<com.android.server.am.ActivityRecord: int icon>;

        $i26 = r4.<com.android.server.am.ActivityRecord: int logo>;

        $i27 = r4.<com.android.server.am.ActivityRecord: int windowFlags>;

        virtualinvoke $r180.<com.android.server.wm.WindowManagerService: void setAppStartingWindow(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int,int,android.os.IBinder,boolean)>($r177, $r178, $i28, $r167, $r168, $i29, $i30, $i26, $i27, null, 1);

     label69:
        $r172 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r172.<com.android.server.am.ActivityStackSupervisor: void startSpecificActivityLocked(com.android.server.am.ActivityRecord,boolean,boolean)>(r4, 1, 0);

        return 1;

     label70:
        r4.<com.android.server.am.ActivityRecord: boolean visible> = 1;

        specialinvoke r0.<com.android.server.am.ActivityStack: void completeResumeLocked(com.android.server.am.ActivityRecord)>(r4);

     label71:
        goto label73;

     label72:
        $r162 := @caughtexception;

        r187 = $r162;

        $r161 = new java.lang.StringBuilder;

        specialinvoke $r161.<java.lang.StringBuilder: void <init>()>();

        $r159 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown during resume of ");

        $r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r158 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r158, r187);

        $r157 = r4.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke r0.<com.android.server.am.ActivityStack: boolean requestFinishActivityLocked(android.os.IBinder,int,android.content.Intent,java.lang.String,boolean)>($r157, 0, null, "resume-exception", 1);

        return 1;

     label73:
        r4.<com.android.server.am.ActivityRecord: boolean stopped> = 0;

        goto label77;

     label74:
        $z12 = r4.<com.android.server.am.ActivityRecord: boolean hasBeenLaunched>;

        if $z12 != 0 goto label75;

        r4.<com.android.server.am.ActivityRecord: boolean hasBeenLaunched> = 1;

        goto label76;

     label75:
        $r43 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $r44 = r4.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        $r45 = r4.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        $i7 = r4.<com.android.server.am.ActivityRecord: int theme>;

        $r42 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r39 = r4.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r38 = $r39.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r41 = virtualinvoke $r42.<com.android.server.am.ActivityManagerService: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)>($r38);

        $r50 = r4.<com.android.server.am.ActivityRecord: java.lang.CharSequence nonLocalizedLabel>;

        $i11 = r4.<com.android.server.am.ActivityRecord: int labelRes>;

        $i10 = r4.<com.android.server.am.ActivityRecord: int icon>;

        $i9 = r4.<com.android.server.am.ActivityRecord: int logo>;

        $i8 = r4.<com.android.server.am.ActivityRecord: int windowFlags>;

        virtualinvoke $r43.<com.android.server.wm.WindowManagerService: void setAppStartingWindow(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int,int,android.os.IBinder,boolean)>($r44, $r45, $i7, $r41, $r50, $i11, $i10, $i9, $i8, null, 1);

     label76:
        $r51 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r51.<com.android.server.am.ActivityStackSupervisor: void startSpecificActivityLocked(com.android.server.am.ActivityRecord,boolean,boolean)>(r4, 1, 1);

     label77:
        return 1;

        catch android.os.RemoteException from label32 to label33 with label34;
        catch java.lang.IllegalArgumentException from label32 to label33 with label35;
        catch java.lang.Exception from label62 to label65 with label66;
        catch java.lang.Exception from label70 to label71 with label72;
    }

    private void insertTaskAtTop(com.android.server.am.TaskRecord)
    {
        com.android.server.am.ActivityStack r0, r2;
        com.android.server.am.TaskRecord r1, $r8, $r10, $r11, $r12;
        boolean z0, $z1, $z3, $z4, $z5;
        java.util.ArrayList $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r7;
        com.android.server.am.ActivityStackSupervisor $r9;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        $z1 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean isOnHomeDisplay()>();

        if $z1 == 0 goto label06;

        $r9 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        r2 = virtualinvoke $r9.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getLastStack()>();

        z0 = virtualinvoke r2.<com.android.server.am.ActivityStack: boolean isHomeStack()>();

        $z5 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean isHomeStack()>();

        if $z5 != 0 goto label05;

        if z0 != 0 goto label01;

        $r12 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.TaskRecord topTask()>();

        if $r12 == r1 goto label05;

     label01:
        if z0 == 0 goto label03;

        $r10 = virtualinvoke r2.<com.android.server.am.ActivityStack: com.android.server.am.TaskRecord topTask()>();

        if $r10 != null goto label02;

        $i2 = 1;

        goto label04;

     label02:
        $r11 = virtualinvoke r2.<com.android.server.am.ActivityStack: com.android.server.am.TaskRecord topTask()>();

        $i2 = $r11.<com.android.server.am.TaskRecord: int taskType>;

        goto label04;

     label03:
        $i2 = 0;

     label04:
        virtualinvoke r1.<com.android.server.am.TaskRecord: void setTaskToReturnTo(int)>($i2);

     label05:
        goto label07;

     label06:
        virtualinvoke r1.<com.android.server.am.TaskRecord: void setTaskToReturnTo(int)>(0);

     label07:
        $r3 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r4 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        i3 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i0 = r1.<com.android.server.am.TaskRecord: int userId>;

        $z3 = specialinvoke r0.<com.android.server.am.ActivityStack: boolean isCurrentProfileLocked(int)>($i0);

        if $z3 != 0 goto label10;

     label08:
        i3 = i3 + -1;

        if i3 < 0 goto label09;

        $r6 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r8 = (com.android.server.am.TaskRecord) $r7;

        $i1 = $r8.<com.android.server.am.TaskRecord: int userId>;

        $z4 = specialinvoke r0.<com.android.server.am.ActivityStack: boolean isCurrentProfileLocked(int)>($i1);

        if $z4 != 0 goto label08;

        goto label09;

     label09:
        i3 = i3 + 1;

     label10:
        $r5 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        virtualinvoke $r5.<java.util.ArrayList: void add(int,java.lang.Object)>(i3, r1);

        virtualinvoke r0.<com.android.server.am.ActivityStack: void updateTaskMovement(com.android.server.am.TaskRecord,boolean)>(r1, 1);

        return;
    }

    final void startActivityLocked(com.android.server.am.ActivityRecord, boolean, boolean, boolean, android.os.Bundle)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1, r5, $r33, $r58;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z8, $z9, $z11, $z12, $z13, $z14, $z15, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, z26;
        android.os.Bundle r2;
        com.android.server.am.TaskRecord r3, r4, $r6, $r12, $r27, $r28, $r49, $r57, $r65, $r68, r71;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43;
        android.content.Intent $r7, $r34;
        com.android.server.wm.WindowManagerService $r8, $r10, $r20, $r31, $r39, $r42, $r66, $r69;
        java.util.ArrayList $r9, $r11, $r40, $r43, $r54, $r55, $r56, $r60, $r61;
        android.content.pm.ActivityInfo $r13, $r14, $r16, $r18, $r38, $r48, $r50, $r51, $r62, $r63, $r64;
        android.service.voice.IVoiceInteractionSession $r15, $r47, $r70;
        android.view.IApplicationToken$Stub $r17, $r21, $r29, $r32, $r52, $r67;
        com.android.server.am.ActivityStackSupervisor $r19, $r53;
        android.content.pm.ApplicationInfo $r22, $r44;
        com.android.server.am.ActivityManagerService $r23, $r37;
        android.content.res.CompatibilityInfo $r24;
        java.lang.String $r25, $r46;
        java.lang.CharSequence $r26;
        android.app.ActivityOptions $r30;
        android.app.IApplicationThread $r36;
        byte $b20;
        java.lang.Object $r41, $r59;
        com.android.internal.app.ProcessMap $r45;
        com.android.server.am.ProcessRecord r72;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        r2 := @parameter4: android.os.Bundle;

        r3 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        i0 = r3.<com.android.server.am.TaskRecord: int taskId>;

        $z5 = r1.<com.android.server.am.ActivityRecord: boolean mLaunchTaskBehind>;

        if $z5 != 0 goto label02;

        $r68 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.TaskRecord taskForIdLocked(int)>(i0);

        if $r68 == null goto label01;

        if z0 == 0 goto label02;

     label01:
        specialinvoke r0.<com.android.server.am.ActivityStack: void insertTaskAtTop(com.android.server.am.TaskRecord)>(r3);

        $r69 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r69.<com.android.server.wm.WindowManagerService: void moveTaskToTop(int)>(i0);

     label02:
        r4 = null;

        if z0 != 0 goto label11;

        z3 = 1;

        $r61 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i35 = virtualinvoke $r61.<java.util.ArrayList: int size()>();

        i1 = $i35 - 1;

     label03:
        if i1 < 0 goto label11;

        $r60 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r59 = virtualinvoke $r60.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r4 = (com.android.server.am.TaskRecord) $r59;

        $r58 = virtualinvoke r4.<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord getTopActivity()>();

        if $r58 != null goto label04;

        goto label10;

     label04:
        $r57 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if r4 != $r57 goto label09;

        if z3 != 0 goto label11;

        virtualinvoke r4.<com.android.server.am.TaskRecord: void addActivityToTop(com.android.server.am.ActivityRecord)>(r1);

        virtualinvoke r1.<com.android.server.am.ActivityRecord: void putInHistory()>();

        $r66 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $r56 = r4.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i38 = virtualinvoke $r56.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        $r67 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        $r65 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $i42 = $r65.<com.android.server.am.TaskRecord: int taskId>;

        $i43 = r0.<com.android.server.am.ActivityStack: int mStackId>;

        $r64 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i41 = $r64.<android.content.pm.ActivityInfo: int screenOrientation>;

        $z25 = r1.<com.android.server.am.ActivityRecord: boolean fullscreen>;

        $r63 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i37 = $r63.<android.content.pm.ActivityInfo: int flags>;

        $i36 = $i37 & 1024;

        if $i36 == 0 goto label05;

        $z23 = 1;

        goto label06;

     label05:
        $z23 = 0;

     label06:
        $i39 = r1.<com.android.server.am.ActivityRecord: int userId>;

        $r62 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i40 = $r62.<android.content.pm.ActivityInfo: int configChanges>;

        $r70 = r4.<com.android.server.am.TaskRecord: android.service.voice.IVoiceInteractionSession voiceSession>;

        if $r70 == null goto label07;

        $z22 = 1;

        goto label08;

     label07:
        $z22 = 0;

     label08:
        $z24 = r1.<com.android.server.am.ActivityRecord: boolean mLaunchTaskBehind>;

        virtualinvoke $r66.<com.android.server.wm.WindowManagerService: void addAppToken(int,android.view.IApplicationToken,int,int,int,boolean,boolean,int,int,boolean,boolean)>($i38, $r67, $i42, $i43, $i41, $z25, $z23, $i39, $i40, $z22, $z24);

        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r2);

        return;

     label09:
        $i34 = r4.<com.android.server.am.TaskRecord: int numFullscreen>;

        if $i34 <= 0 goto label10;

        z3 = 0;

     label10:
        i1 = i1 + -1;

        goto label03;

     label11:
        $r6 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if r4 != $r6 goto label12;

        $r55 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i33 = virtualinvoke $r55.<java.util.ArrayList: int indexOf(java.lang.Object)>(r4);

        $r54 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i32 = virtualinvoke $r54.<java.util.ArrayList: int size()>();

        $i31 = $i32 - 1;

        if $i33 == $i31 goto label12;

        $r53 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r53.<com.android.server.am.ActivityStackSupervisor: boolean mUserLeaving> = 0;

     label12:
        r71 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke r71.<com.android.server.am.TaskRecord: void addActivityToTop(com.android.server.am.ActivityRecord)>(r1);

        virtualinvoke r71.<com.android.server.am.TaskRecord: void setFrontOfTask()>();

        virtualinvoke r1.<com.android.server.am.ActivityRecord: void putInHistory()>();

        $z6 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean isHomeStack()>();

        if $z6 == 0 goto label13;

        $i21 = virtualinvoke r0.<com.android.server.am.ActivityStack: int numActivities()>();

        if $i21 <= 0 goto label36;

     label13:
        z26 = z0;

        r72 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if r72 != null goto label14;

        $r37 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r45 = $r37.<com.android.server.am.ActivityManagerService: com.android.internal.app.ProcessMap mProcessNames>;

        $r46 = r1.<com.android.server.am.ActivityRecord: java.lang.String processName>;

        $r38 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r44 = $r38.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i22 = $r44.<android.content.pm.ApplicationInfo: int uid>;

        $r41 = virtualinvoke $r45.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>($r46, $i22);

        r72 = (com.android.server.am.ProcessRecord) $r41;

     label14:
        if r72 == null goto label15;

        $r36 = r72.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r36 != null goto label16;

     label15:
        z26 = 1;

     label16:
        $r7 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $i2 = virtualinvoke $r7.<android.content.Intent: int getFlags()>();

        $i3 = $i2 & 65536;

        if $i3 == 0 goto label17;

        $r39 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r39.<com.android.server.wm.WindowManagerService: void prepareAppTransition(int,boolean)>(0, z2);

        $r40 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mNoAnimActivities>;

        virtualinvoke $r40.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        goto label21;

     label17:
        $r8 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        if z0 == 0 goto label19;

        $z17 = r1.<com.android.server.am.ActivityRecord: boolean mLaunchTaskBehind>;

        if $z17 == 0 goto label18;

        $b20 = 16;

        goto label20;

     label18:
        $b20 = 8;

        goto label20;

     label19:
        $b20 = 6;

     label20:
        virtualinvoke $r8.<com.android.server.wm.WindowManagerService: void prepareAppTransition(int,boolean)>($b20, z2);

        $r9 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mNoAnimActivities>;

        virtualinvoke $r9.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

     label21:
        $r10 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $r11 = r71.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i4 = virtualinvoke $r11.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        $r17 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        $r12 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $i9 = $r12.<com.android.server.am.TaskRecord: int taskId>;

        $i11 = r0.<com.android.server.am.ActivityStack: int mStackId>;

        $r14 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i10 = $r14.<android.content.pm.ActivityInfo: int screenOrientation>;

        $z8 = r1.<com.android.server.am.ActivityRecord: boolean fullscreen>;

        $r13 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i6 = $r13.<android.content.pm.ActivityInfo: int flags>;

        $i5 = $i6 & 1024;

        if $i5 == 0 goto label22;

        $z15 = 1;

        goto label23;

     label22:
        $z15 = 0;

     label23:
        $i7 = r1.<com.android.server.am.ActivityRecord: int userId>;

        $r16 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i8 = $r16.<android.content.pm.ActivityInfo: int configChanges>;

        $r15 = r71.<com.android.server.am.TaskRecord: android.service.voice.IVoiceInteractionSession voiceSession>;

        if $r15 == null goto label24;

        $z14 = 1;

        goto label25;

     label24:
        $z14 = 0;

     label25:
        $z9 = r1.<com.android.server.am.ActivityRecord: boolean mLaunchTaskBehind>;

        virtualinvoke $r10.<com.android.server.wm.WindowManagerService: void addAppToken(int,android.view.IApplicationToken,int,int,int,boolean,boolean,int,int,boolean,boolean)>($i4, $r17, $i9, $i11, $i10, $z8, $z15, $i7, $i8, $z14, $z9);

        z4 = 1;

        if z0 == 0 goto label28;

        $r34 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $i18 = virtualinvoke $r34.<android.content.Intent: int getFlags()>();

        $i19 = $i18 & 2097152;

        if $i19 == 0 goto label29;

        virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord resetTaskIfNeededLocked(com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord)>(r1, r1);

        $r33 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningNonDelayedActivityLocked(com.android.server.am.ActivityRecord)>(null);

        if $r33 != r1 goto label26;

        $z13 = 1;

        goto label27;

     label26:
        $z13 = 0;

     label27:
        z4 = $z13;

        goto label29;

     label28:
        if r2 == null goto label29;

        $r30 = new android.app.ActivityOptions;

        specialinvoke $r30.<android.app.ActivityOptions: void <init>(android.os.Bundle)>(r2);

        $i17 = virtualinvoke $r30.<android.app.ActivityOptions: int getAnimationType()>();

        if $i17 != 5 goto label29;

        z4 = 0;

     label29:
        $z11 = r1.<com.android.server.am.ActivityRecord: boolean mLaunchTaskBehind>;

        if $z11 == 0 goto label30;

        $r31 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $r32 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r31.<com.android.server.wm.WindowManagerService: void setAppVisibility(android.os.IBinder,boolean)>($r32, 1);

        virtualinvoke r0.<com.android.server.am.ActivityStack: void ensureActivitiesVisibleLocked(com.android.server.am.ActivityRecord,int)>(null, 0);

        goto label35;

     label30:
        if z4 == 0 goto label35;

        r5 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if r5 == null goto label32;

        $r27 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r28 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r27 == $r28 goto label31;

        r5 = null;

        goto label32;

     label31:
        $z12 = r5.<com.android.server.am.ActivityRecord: boolean nowVisible>;

        if $z12 == 0 goto label32;

        r5 = null;

     label32:
        $r20 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $r21 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        $r25 = r1.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        $i13 = r1.<com.android.server.am.ActivityRecord: int theme>;

        $r23 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r18 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r22 = $r18.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r24 = virtualinvoke $r23.<com.android.server.am.ActivityManagerService: android.content.res.CompatibilityInfo compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)>($r22);

        $r26 = r1.<com.android.server.am.ActivityRecord: java.lang.CharSequence nonLocalizedLabel>;

        $i14 = r1.<com.android.server.am.ActivityRecord: int labelRes>;

        $i15 = r1.<com.android.server.am.ActivityRecord: int icon>;

        $i16 = r1.<com.android.server.am.ActivityRecord: int logo>;

        $i12 = r1.<com.android.server.am.ActivityRecord: int windowFlags>;

        if r5 == null goto label33;

        $r29 = r5.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        goto label34;

     label33:
        $r29 = null;

     label34:
        virtualinvoke $r20.<com.android.server.wm.WindowManagerService: void setAppStartingWindow(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int,int,android.os.IBinder,boolean)>($r21, $r25, $i13, $r24, $r26, $i14, $i15, $i16, $i12, $r29, z26);

        r1.<com.android.server.am.ActivityRecord: boolean mStartingWindowShown> = 1;

     label35:
        goto label41;

     label36:
        $r42 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $r43 = r71.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i25 = virtualinvoke $r43.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        $r52 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        $r49 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $i26 = $r49.<com.android.server.am.TaskRecord: int taskId>;

        $i28 = r0.<com.android.server.am.ActivityStack: int mStackId>;

        $r51 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i27 = $r51.<android.content.pm.ActivityInfo: int screenOrientation>;

        $z18 = r1.<com.android.server.am.ActivityRecord: boolean fullscreen>;

        $r50 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i24 = $r50.<android.content.pm.ActivityInfo: int flags>;

        $i23 = $i24 & 1024;

        if $i23 == 0 goto label37;

        $z21 = 1;

        goto label38;

     label37:
        $z21 = 0;

     label38:
        $i29 = r1.<com.android.server.am.ActivityRecord: int userId>;

        $r48 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i30 = $r48.<android.content.pm.ActivityInfo: int configChanges>;

        $r47 = r71.<com.android.server.am.TaskRecord: android.service.voice.IVoiceInteractionSession voiceSession>;

        if $r47 == null goto label39;

        $z20 = 1;

        goto label40;

     label39:
        $z20 = 0;

     label40:
        $z19 = r1.<com.android.server.am.ActivityRecord: boolean mLaunchTaskBehind>;

        virtualinvoke $r42.<com.android.server.wm.WindowManagerService: void addAppToken(int,android.view.IApplicationToken,int,int,int,boolean,boolean,int,int,boolean,boolean)>($i25, $r52, $i26, $i28, $i27, $z18, $z21, $i29, $i30, $z20, $z19);

        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r2);

        r2 = null;

     label41:
        if z1 == 0 goto label42;

        $r19 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r19.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked(com.android.server.am.ActivityStack,com.android.server.am.ActivityRecord,android.os.Bundle)>(r0, r1, r2);

     label42:
        return;
    }

    final void validateAppTokensLocked()
    {
        com.android.server.am.ActivityStack r0;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        com.android.server.am.TaskRecord r1;
        java.util.ArrayList r2, $r5, $r6, $r7, $r8, $r9, $r13, $r15;
        com.android.server.wm.TaskGroup r3, $r12;
        com.android.server.am.ActivityRecord r4;
        com.android.server.wm.WindowManagerService $r10;
        boolean $z0;
        java.lang.Object $r11, $r14;
        android.view.IApplicationToken$Stub $r16;

        r0 := @this: com.android.server.am.ActivityStack;

        $r5 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mValidateAppTokens>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        $r6 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mValidateAppTokens>;

        $i4 = virtualinvoke r0.<com.android.server.am.ActivityStack: int numActivities()>();

        virtualinvoke $r6.<java.util.ArrayList: void ensureCapacity(int)>($i4);

        $r7 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        $r9 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r11 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (com.android.server.am.TaskRecord) $r11;

        r2 = r1.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $z0 = virtualinvoke r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        goto label4;

     label2:
        $r12 = new com.android.server.wm.TaskGroup;

        specialinvoke $r12.<com.android.server.wm.TaskGroup: void <init>()>();

        r3 = $r12;

        $i6 = r1.<com.android.server.am.TaskRecord: int taskId>;

        r3.<com.android.server.wm.TaskGroup: int taskId> = $i6;

        $r13 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mValidateAppTokens>;

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i3 = 0;

     label3:
        if i3 >= i2 goto label4;

        $r14 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r4 = (com.android.server.am.ActivityRecord) $r14;

        $r15 = r3.<com.android.server.wm.TaskGroup: java.util.ArrayList tokens>;

        $r16 = r4.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

        i3 = i3 + 1;

        goto label3;

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        $r10 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $i5 = r0.<com.android.server.am.ActivityStack: int mStackId>;

        $r8 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mValidateAppTokens>;

        virtualinvoke $r10.<com.android.server.wm.WindowManagerService: void validateAppTokens(int,java.util.List)>($i5, $r8);

        return;
    }

    final android.app.ActivityOptions resetTargetTaskIfNeededLocked(com.android.server.am.TaskRecord, boolean)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.TaskRecord r1, r5, $r27, $r29, $r32;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, z17;
        android.app.ActivityOptions r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15;
        java.util.ArrayList r3, $r16, $r31, $r33, $r36, $r37;
        com.android.server.am.ActivityRecord r4, r6, r7, $r35, $r39, r40;
        java.lang.Object $r8, $r11, $r20, $r30, $r34, $r38;
        android.content.pm.ActivityInfo $r9, $r19;
        android.content.Intent $r10, $r17;
        java.lang.String $r12, $r13, $r14, $r25, $r26, $r28;
        com.android.server.am.ActivityStackSupervisor $r15;
        android.view.IApplicationToken$Stub $r18, $r24;
        com.android.server.wm.WindowManagerService $r21, $r22, $r23;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        z0 := @parameter1: boolean;

        r2 = null;

        i0 = -1;

        z1 = 1;

        r3 = r1.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i2 = virtualinvoke r1.<com.android.server.am.TaskRecord: int findEffectiveRootIndex()>();

        i3 = i1 - 1;

     label01:
        if i3 <= i2 goto label33;

        $r8 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r4 = (com.android.server.am.ActivityRecord) $r8;

        $z6 = r4.<com.android.server.am.ActivityRecord: boolean frontOfTask>;

        if $z6 == 0 goto label02;

        goto label33;

     label02:
        $r9 = r4.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        i4 = $r9.<android.content.pm.ActivityInfo: int flags>;

        $i8 = i4 & 2;

        if $i8 == 0 goto label03;

        $z16 = 1;

        goto label04;

     label03:
        $z16 = 0;

     label04:
        z2 = $z16;

        $i9 = i4 & 64;

        if $i9 == 0 goto label05;

        $z15 = 1;

        goto label06;

     label05:
        $z15 = 0;

     label06:
        z3 = $z15;

        $r10 = r4.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $i11 = virtualinvoke $r10.<android.content.Intent: int getFlags()>();

        $i10 = $i11 & 524288;

        if $i10 == 0 goto label07;

        $z14 = 1;

        goto label08;

     label07:
        $z14 = 0;

     label08:
        z4 = $z14;

        if z2 != 0 goto label09;

        if z4 != 0 goto label09;

        $r39 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        if $r39 == null goto label09;

        if i0 >= 0 goto label32;

        i0 = i3;

        goto label32;

     label09:
        if z2 != 0 goto label21;

        if z4 != 0 goto label21;

        if z3 == 0 goto label21;

        $r13 = r4.<com.android.server.am.ActivityRecord: java.lang.String taskAffinity>;

        if $r13 == null goto label21;

        $r12 = r4.<com.android.server.am.ActivityRecord: java.lang.String taskAffinity>;

        $r14 = r1.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        $z9 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z9 != 0 goto label21;

        $r16 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $z10 = virtualinvoke $r16.<java.util.ArrayList: boolean isEmpty()>();

        if $z10 != 0 goto label10;

        $r31 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r30 = virtualinvoke $r31.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r29 = (com.android.server.am.TaskRecord) $r30;

        $r36 = $r29.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $z13 = virtualinvoke $r36.<java.util.ArrayList: boolean isEmpty()>();

        if $z13 != 0 goto label10;

        $r37 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r38 = virtualinvoke $r37.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r32 = (com.android.server.am.TaskRecord) $r38;

        $r33 = $r32.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $r34 = virtualinvoke $r33.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r35 = (com.android.server.am.ActivityRecord) $r34;

        goto label11;

     label10:
        $r35 = null;

     label11:
        r6 = $r35;

        if r6 == null goto label12;

        $r28 = r4.<com.android.server.am.ActivityRecord: java.lang.String taskAffinity>;

        if $r28 == null goto label12;

        $r25 = r4.<com.android.server.am.ActivityRecord: java.lang.String taskAffinity>;

        $r27 = r6.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r26 = $r27.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        $z12 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z12 == 0 goto label12;

        r5 = r6.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        goto label13;

     label12:
        $r15 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $i12 = virtualinvoke $r15.<com.android.server.am.ActivityStackSupervisor: int getNextTaskId()>();

        $r19 = r4.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        r5 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.TaskRecord createTaskRecord(int,android.content.pm.ActivityInfo,android.content.Intent,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,boolean)>($i12, $r19, null, null, null, 0);

        $r17 = r4.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        r5.<com.android.server.am.TaskRecord: android.content.Intent affinityIntent> = $r17;

     label13:
        i5 = r5.<com.android.server.am.TaskRecord: int taskId>;

        $r22 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $r18 = r4.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r22.<com.android.server.wm.WindowManagerService: void setAppGroupId(android.os.IBinder,int)>($r18, i5);

        z5 = z1;

        if i0 >= 0 goto label14;

        $i13 = i3;

        goto label15;

     label14:
        $i13 = i0;

     label15:
        i6 = $i13;

        i7 = i6;

     label16:
        if i7 < i3 goto label20;

        $r20 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r7 = (com.android.server.am.ActivityRecord) $r20;

        $z11 = r7.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z11 == 0 goto label17;

        goto label19;

     label17:
        z1 = 0;

        if z5 == 0 goto label18;

        if r2 != null goto label18;

        r2 = virtualinvoke r7.<com.android.server.am.ActivityRecord: android.app.ActivityOptions takeOptionsLocked()>();

        if r2 == null goto label18;

        z5 = 0;

     label18:
        virtualinvoke r7.<com.android.server.am.ActivityRecord: void setTask(com.android.server.am.TaskRecord,com.android.server.am.TaskRecord)>(r5, null);

        virtualinvoke r5.<com.android.server.am.TaskRecord: void addActivityAtBottom(com.android.server.am.ActivityRecord)>(r7);

        $r23 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $r24 = r7.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r23.<com.android.server.wm.WindowManagerService: void setAppGroupId(android.os.IBinder,int)>($r24, i5);

     label19:
        i7 = i7 + -1;

        goto label16;

     label20:
        $r21 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r21.<com.android.server.wm.WindowManagerService: void moveTaskToBottom(int)>(i5);

        i0 = -1;

        goto label32;

     label21:
        if z0 != 0 goto label22;

        if z2 != 0 goto label22;

        if z4 == 0 goto label31;

     label22:
        if z4 == 0 goto label23;

        i14 = i1 - 1;

        goto label25;

     label23:
        if i0 >= 0 goto label24;

        i14 = i3;

        goto label25;

     label24:
        i14 = i0;

     label25:
        z17 = z1;

        i15 = i3;

     label26:
        if i15 > i14 goto label30;

        $r11 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i15);

        r40 = (com.android.server.am.ActivityRecord) $r11;

        $z8 = r40.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z8 == 0 goto label27;

        goto label29;

     label27:
        z1 = 0;

        if z17 == 0 goto label28;

        if r2 != null goto label28;

        r2 = virtualinvoke r40.<com.android.server.am.ActivityRecord: android.app.ActivityOptions takeOptionsLocked()>();

        if r2 == null goto label28;

        z17 = 0;

     label28:
        $z7 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean finishActivityLocked(com.android.server.am.ActivityRecord,int,android.content.Intent,java.lang.String,boolean)>(r40, 0, null, "reset", 0);

        if $z7 == 0 goto label29;

        i14 = i14 + -1;

        i15 = i15 + -1;

     label29:
        i15 = i15 + 1;

        goto label26;

     label30:
        i0 = -1;

        goto label32;

     label31:
        i0 = -1;

     label32:
        i3 = i3 + -1;

        goto label01;

     label33:
        return r2;
    }

    private int resetAffinityTaskIfNeededLocked(com.android.server.am.TaskRecord, com.android.server.am.TaskRecord, boolean, boolean, int)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.TaskRecord r1, r2;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z9, $z10, $z11;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17;
        java.lang.String r3, $r10;
        java.util.ArrayList r4, $r21, r25;
        com.android.server.am.ActivityRecord r5, r6, r7, $r11, r24;
        java.lang.Object $r8, $r12, $r17, $r19;
        android.content.pm.ActivityInfo $r9, $r14;
        com.android.server.wm.WindowManagerService $r13, $r22;
        android.content.ComponentName $r15, $r20;
        android.content.Intent $r16, $r18;
        android.view.IApplicationToken$Stub $r23;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        r2 := @parameter1: com.android.server.am.TaskRecord;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i0 := @parameter4: int;

        i1 = -1;

        i2 = r2.<com.android.server.am.TaskRecord: int taskId>;

        r3 = r2.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        r4 = r1.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        i3 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        i4 = virtualinvoke r1.<com.android.server.am.TaskRecord: int findEffectiveRootIndex()>();

        i5 = i3 - 1;

     label01:
        if i5 <= i4 goto label23;

        $r8 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r5 = (com.android.server.am.ActivityRecord) $r8;

        $z4 = r5.<com.android.server.am.ActivityRecord: boolean frontOfTask>;

        if $z4 == 0 goto label02;

        goto label23;

     label02:
        $r9 = r5.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        i6 = $r9.<android.content.pm.ActivityInfo: int flags>;

        $i10 = i6 & 2;

        if $i10 == 0 goto label03;

        $z10 = 1;

        goto label04;

     label03:
        $z10 = 0;

     label04:
        z2 = $z10;

        $i9 = i6 & 64;

        if $i9 == 0 goto label05;

        $z11 = 1;

        goto label06;

     label05:
        $z11 = 0;

     label06:
        z3 = $z11;

        $r11 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        if $r11 == null goto label07;

        if i1 >= 0 goto label22;

        i1 = i5;

        goto label22;

     label07:
        if z0 == 0 goto label22;

        if z3 == 0 goto label22;

        if r3 == null goto label22;

        $r10 = r5.<com.android.server.am.ActivityRecord: java.lang.String taskAffinity>;

        $z5 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z5 == 0 goto label22;

        if z1 != 0 goto label08;

        if z2 == 0 goto label15;

     label08:
        if i1 < 0 goto label09;

        $i11 = i1;

        goto label10;

     label09:
        $i11 = i5;

     label10:
        i7 = $i11;

        i8 = i7;

     label11:
        if i8 < i5 goto label14;

        $r12 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        r6 = (com.android.server.am.ActivityRecord) $r12;

        $z6 = r6.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z6 == 0 goto label12;

        goto label13;

     label12:
        virtualinvoke r0.<com.android.server.am.ActivityStack: boolean finishActivityLocked(com.android.server.am.ActivityRecord,int,android.content.Intent,java.lang.String,boolean)>(r6, 0, null, "reset", 0);

     label13:
        i8 = i8 + -1;

        goto label11;

     label14:
        goto label21;

     label15:
        if i0 >= 0 goto label16;

        $r21 = r2.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        i0 = virtualinvoke $r21.<java.util.ArrayList: int size()>();

     label16:
        if i1 < 0 goto label17;

        $i14 = i1;

        goto label18;

     label17:
        $i14 = i5;

     label18:
        i15 = $i14;

        i16 = i15;

     label19:
        if i16 < i5 goto label20;

        $r19 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i16);

        r24 = (com.android.server.am.ActivityRecord) $r19;

        virtualinvoke r24.<com.android.server.am.ActivityRecord: void setTask(com.android.server.am.TaskRecord,com.android.server.am.TaskRecord)>(r2, null);

        virtualinvoke r2.<com.android.server.am.TaskRecord: void addActivityAtIndex(int,com.android.server.am.ActivityRecord)>(i0, r24);

        $r22 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $r23 = r24.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r22.<com.android.server.wm.WindowManagerService: void setAppGroupId(android.os.IBinder,int)>($r23, i2);

        i16 = i16 + -1;

        goto label19;

     label20:
        $r13 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r13.<com.android.server.wm.WindowManagerService: void moveTaskToTop(int)>(i2);

        $r14 = r5.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i13 = $r14.<android.content.pm.ActivityInfo: int launchMode>;

        if $i13 != 1 goto label21;

        r25 = r2.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        i17 = virtualinvoke r25.<java.util.ArrayList: int indexOf(java.lang.Object)>(r5);

        if i17 <= 0 goto label21;

        $i12 = i17 - 1;

        $r17 = virtualinvoke r25.<java.util.ArrayList: java.lang.Object get(int)>($i12);

        r7 = (com.android.server.am.ActivityRecord) $r17;

        $r18 = r7.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r15 = virtualinvoke $r18.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r16 = r5.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r20 = virtualinvoke $r16.<android.content.Intent: android.content.ComponentName getComponent()>();

        $z9 = virtualinvoke $r15.<android.content.ComponentName: boolean equals(java.lang.Object)>($r20);

        if $z9 == 0 goto label21;

        virtualinvoke r0.<com.android.server.am.ActivityStack: boolean finishActivityLocked(com.android.server.am.ActivityRecord,int,android.content.Intent,java.lang.String,boolean)>(r7, 0, null, "replace", 0);

     label21:
        i1 = -1;

     label22:
        i5 = i5 + -1;

        goto label01;

     label23:
        return i0;
    }

    final com.android.server.am.ActivityRecord resetTaskIfNeededLocked(com.android.server.am.ActivityRecord, com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1, r2, r14;
        boolean z0, z1, $z2;
        com.android.server.am.TaskRecord r3, r5, $r11;
        android.app.ActivityOptions r4;
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        android.content.pm.ActivityInfo $r6;
        java.util.ArrayList $r7, $r8, $r10, $r13;
        java.lang.Object $r9, $r12;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r2 := @parameter1: com.android.server.am.ActivityRecord;

        $r6 = r2.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i2 = $r6.<android.content.pm.ActivityInfo: int flags>;

        $i3 = $i2 & 4;

        if $i3 == 0 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        z0 = $z2;

        r3 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        z1 = 0;

        r4 = null;

        i0 = -1;

        $r7 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i4 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        i1 = $i4 - 1;

     label03:
        if i1 < 0 goto label06;

        $r13 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r12 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r5 = (com.android.server.am.TaskRecord) $r12;

        if r5 != r3 goto label04;

        r4 = virtualinvoke r0.<com.android.server.am.ActivityStack: android.app.ActivityOptions resetTargetTaskIfNeededLocked(com.android.server.am.TaskRecord,boolean)>(r3, z0);

        z1 = 1;

        goto label05;

     label04:
        i0 = specialinvoke r0.<com.android.server.am.ActivityStack: int resetAffinityTaskIfNeededLocked(com.android.server.am.TaskRecord,com.android.server.am.TaskRecord,boolean,boolean,int)>(r5, r3, z1, z0, i0);

     label05:
        i1 = i1 + -1;

        goto label03;

     label06:
        $r8 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        i6 = virtualinvoke $r8.<java.util.ArrayList: int indexOf(java.lang.Object)>(r3);

     label07:
        $r10 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i5 = i6;

        i6 = i6 + -1;

        $r9 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>($i5);

        $r11 = (com.android.server.am.TaskRecord) $r9;

        r14 = virtualinvoke $r11.<com.android.server.am.TaskRecord: com.android.server.am.ActivityRecord getTopActivity()>();

        if r14 != null goto label08;

        if i6 >= 0 goto label07;

     label08:
        if r4 == null goto label10;

        if r14 == null goto label09;

        virtualinvoke r14.<com.android.server.am.ActivityRecord: void updateOptionsLocked(android.app.ActivityOptions)>(r4);

        goto label10;

     label09:
        virtualinvoke r4.<android.app.ActivityOptions: void abort()>();

     label10:
        return r14;
    }

    void sendActivityResultLocked(int, com.android.server.am.ActivityRecord, java.lang.String, int, int, android.content.Intent)
    {
        com.android.server.am.ActivityStack r0;
        int i0, i1, i2, $i3;
        com.android.server.am.ActivityRecord r1, $r5;
        java.lang.String r2, $r14, $r20;
        android.content.Intent r3;
        java.util.ArrayList r4, $r9;
        com.android.server.am.ProcessRecord $r6, $r7, $r11;
        android.app.IApplicationThread $r8, $r12;
        android.app.ResultInfo $r10;
        android.view.IApplicationToken$Stub $r13;
        com.android.server.am.ActivityManagerService $r15;
        com.android.server.am.UriPermissionOwner $r16;
        java.lang.StringBuilder $r17, $r19, $r21;
        java.lang.Exception $r18, r22;

        r0 := @this: com.android.server.am.ActivityStack;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.am.ActivityRecord;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: android.content.Intent;

        if i0 <= 0 goto label1;

        $r15 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r14 = r1.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        $r16 = virtualinvoke r1.<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner getUriPermissionsLocked()>();

        $i3 = r1.<com.android.server.am.ActivityRecord: int userId>;

        virtualinvoke $r15.<com.android.server.am.ActivityManagerService: void grantUriPermissionFromIntentLocked(int,java.lang.String,android.content.Intent,com.android.server.am.UriPermissionOwner,int)>(i0, $r14, r3, $r16, $i3);

     label1:
        $r5 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if $r5 != r1 goto label5;

        $r6 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r6 == null goto label5;

        $r7 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r8 = $r7.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r8 == null goto label5;

     label2:
        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r4 = $r9;

        $r10 = new android.app.ResultInfo;

        specialinvoke $r10.<android.app.ResultInfo: void <init>(java.lang.String,int,int,android.content.Intent)>(r2, i1, i2, r3);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        $r11 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r12 = $r11.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r13 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        interfaceinvoke $r12.<android.app.IApplicationThread: void scheduleSendResult(android.os.IBinder,java.util.List)>($r13, r4);

     label3:
        return;

     label4:
        $r18 := @caughtexception;

        r22 = $r18;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown sending result to ");

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r20, r22);

     label5:
        virtualinvoke r1.<com.android.server.am.ActivityRecord: void addResultLocked(com.android.server.am.ActivityRecord,java.lang.String,int,int,android.content.Intent)>(null, r2, i1, i2, r3);

        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    private void adjustFocusedActivityLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1, r2, $r6, r11;
        com.android.server.am.TaskRecord r3, $r9;
        com.android.server.am.ActivityStackSupervisor $r4, $r7, $r10;
        boolean $z0, $z1, $z2;
        com.android.server.am.ActivityManagerService $r5, $r8;
        int $i0;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $r4 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $z0 = virtualinvoke $r4.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r0);

        if $z0 == 0 goto label2;

        $r5 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r6 = $r5.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityRecord mFocusedActivity>;

        if $r6 != r1 goto label2;

        r2 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        if r2 == r1 goto label1;

        r3 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $z1 = r1.<com.android.server.am.ActivityRecord: boolean frontOfTask>;

        if $z1 == 0 goto label1;

        $r9 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.TaskRecord topTask()>();

        if r3 != $r9 goto label1;

        $z2 = virtualinvoke r3.<com.android.server.am.TaskRecord: boolean isOverHomeStack()>();

        if $z2 == 0 goto label1;

        $r10 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $i0 = virtualinvoke r3.<com.android.server.am.TaskRecord: int getTaskToReturnTo()>();

        virtualinvoke $r10.<com.android.server.am.ActivityStackSupervisor: void moveHomeStackTaskToTop(int)>($i0);

     label1:
        $r7 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        r11 = virtualinvoke $r7.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityRecord topRunningActivityLocked()>();

        if r11 == null goto label2;

        $r8 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r8.<com.android.server.am.ActivityManagerService: void setFocusedActivityLocked(com.android.server.am.ActivityRecord)>(r11);

     label2:
        return;
    }

    final void stopActivityLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1;
        android.os.Message r2;
        android.content.Intent $r3;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1, $z2, $z3, $z5, $z7;
        com.android.server.am.ProcessRecord $r4, $r5, $r8;
        android.app.IApplicationThread $r6, $r11;
        com.android.server.am.ActivityStack$ActivityState $r7, $r19;
        android.view.IApplicationToken$Stub $r9, $r14, $r17;
        com.android.server.am.ActivityManagerService $r10, $r15;
        android.os.Handler $r12, $r13;
        com.android.server.wm.WindowManagerService $r16;
        android.content.pm.ActivityInfo $r18;
        java.lang.Exception $r20, r21;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $r3 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $i0 = virtualinvoke $r3.<android.content.Intent: int getFlags()>();

        $i1 = $i0 & 1073741824;

        if $i1 != 0 goto label1;

        $r18 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i4 = $r18.<android.content.pm.ActivityInfo: int flags>;

        $i3 = $i4 & 128;

        if $i3 == 0 goto label2;

     label1:
        $z0 = r1.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z0 != 0 goto label2;

        $r15 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $z5 = virtualinvoke $r15.<com.android.server.am.ActivityManagerService: boolean isSleeping()>();

        if $z5 != 0 goto label2;

        $r17 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke r0.<com.android.server.am.ActivityStack: boolean requestFinishActivityLocked(android.os.IBinder,int,android.content.Intent,java.lang.String,boolean)>($r17, 0, null, "no-history", 0);

     label2:
        $r4 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r4 == null goto label8;

        $r5 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r6 = $r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r6 == null goto label8;

        specialinvoke r0.<com.android.server.am.ActivityStack: void adjustFocusedActivityLocked(com.android.server.am.ActivityRecord)>(r1);

        virtualinvoke r1.<com.android.server.am.ActivityRecord: void resumeKeyDispatchingLocked()>();

     label3:
        r1.<com.android.server.am.ActivityRecord: boolean stopped> = 0;

        $r7 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState STOPPING>;

        r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state> = $r7;

        $z1 = r1.<com.android.server.am.ActivityRecord: boolean visible>;

        if $z1 != 0 goto label4;

        $r16 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $r14 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r16.<com.android.server.wm.WindowManagerService: void setAppVisibility(android.os.IBinder,boolean)>($r14, 0);

     label4:
        $r8 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r11 = $r8.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r9 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        $z2 = r1.<com.android.server.am.ActivityRecord: boolean visible>;

        $i2 = r1.<com.android.server.am.ActivityRecord: int configChangeFlags>;

        interfaceinvoke $r11.<android.app.IApplicationThread: void scheduleStopActivity(android.os.IBinder,boolean,int)>($r9, $z2, $i2);

        $r10 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $z3 = virtualinvoke $r10.<com.android.server.am.ActivityManagerService: boolean isSleepingOrShuttingDown()>();

        if $z3 == 0 goto label5;

        virtualinvoke r1.<com.android.server.am.ActivityRecord: void setSleeping(boolean)>(1);

     label5:
        $r12 = r0.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        r2 = virtualinvoke $r12.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(104, r1);

        $r13 = r0.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        virtualinvoke $r13.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r2, 10000L);

     label6:
        goto label8;

     label7:
        $r20 := @caughtexception;

        r21 = $r20;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", "Exception thrown during pause", r21);

        r1.<com.android.server.am.ActivityRecord: boolean stopped> = 1;

        $r19 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState STOPPED>;

        r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state> = $r19;

        $z7 = r1.<com.android.server.am.ActivityRecord: boolean configDestroy>;

        if $z7 == 0 goto label8;

        virtualinvoke r0.<com.android.server.am.ActivityStack: boolean destroyActivityLocked(com.android.server.am.ActivityRecord,boolean,java.lang.String)>(r1, 1, "stop-except");

     label8:
        return;

        catch java.lang.Exception from label3 to label6 with label7;
    }

    final boolean requestFinishActivityLocked(android.os.IBinder, int, android.content.Intent, java.lang.String, boolean)
    {
        com.android.server.am.ActivityStack r0;
        android.os.IBinder r1;
        int i0;
        android.content.Intent r2;
        java.lang.String r3;
        boolean z0;
        com.android.server.am.ActivityRecord r4;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.Intent;

        r3 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        r4 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        if r4 != null goto label1;

        return 0;

     label1:
        virtualinvoke r0.<com.android.server.am.ActivityStack: boolean finishActivityLocked(com.android.server.am.ActivityRecord,int,android.content.Intent,java.lang.String,boolean)>(r4, i0, r2, r3, z0);

        return 1;
    }

    final void finishSubActivityLocked(com.android.server.am.ActivityRecord, java.lang.String, int)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1, r4, $r11;
        java.lang.String r2, $r12, $r13, $r14;
        int i0, i1, i2, $i3, $i4, $i5;
        java.util.ArrayList r3, $r5, $r7;
        com.android.server.am.ActivityManagerService $r6;
        java.lang.Object $r8, $r10;
        com.android.server.am.TaskRecord $r9;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r5 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i3 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label1:
        if i1 < 0 goto label7;

        $r7 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r9 = (com.android.server.am.TaskRecord) $r8;

        r3 = $r9.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i4 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i2 = $i4 - 1;

     label2:
        if i2 < 0 goto label6;

        $r10 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r4 = (com.android.server.am.ActivityRecord) $r10;

        $r11 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        if $r11 != r1 goto label5;

        $i5 = r4.<com.android.server.am.ActivityRecord: int requestCode>;

        if $i5 != i0 goto label5;

        $r13 = r4.<com.android.server.am.ActivityRecord: java.lang.String resultWho>;

        if $r13 != null goto label3;

        if r2 == null goto label4;

     label3:
        $r12 = r4.<com.android.server.am.ActivityRecord: java.lang.String resultWho>;

        if $r12 == null goto label5;

        $r14 = r4.<com.android.server.am.ActivityRecord: java.lang.String resultWho>;

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label5;

     label4:
        virtualinvoke r0.<com.android.server.am.ActivityStack: boolean finishActivityLocked(com.android.server.am.ActivityRecord,int,android.content.Intent,java.lang.String,boolean)>(r4, 0, null, "request-sub", 0);

     label5:
        i2 = i2 + -1;

        goto label2;

     label6:
        i1 = i1 + -1;

        goto label1;

     label7:
        $r6 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r6.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

        return;
    }

    final void finishTopRunningActivityLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ProcessRecord r1, $r3, $r29, $r30;
        com.android.server.am.ActivityRecord r2, r40;
        int i0, i1, $i4, i5;
        java.lang.StringBuilder $r4, $r5, $r9, $r22, $r25, $r28;
        android.content.Intent $r6, $r23;
        android.content.ComponentName $r7, $r24;
        java.lang.String $r8, $r10, $r26, $r27;
        java.util.ArrayList $r11, $r14, $r15, $r19, $r36, $r39;
        com.android.server.am.TaskRecord $r12, $r13, $r16, $r37;
        java.lang.Object $r17, $r18, $r38;
        com.android.server.am.ActivityStack$ActivityState $r20, $r21, $r32, $r33, $r34, $r35;
        boolean $z1;
        com.android.server.am.ActivityManagerService $r31;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        if r2 == null goto label6;

        $r3 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r3 != r1 goto label6;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Force finishing activity ");

        $r6 = r2.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r7 = virtualinvoke $r6.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r8 = virtualinvoke $r7.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r10);

        $r11 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r12 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        i0 = virtualinvoke $r11.<java.util.ArrayList: int indexOf(java.lang.Object)>($r12);

        $r13 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r14 = $r13.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        i1 = virtualinvoke $r14.<java.util.ArrayList: int indexOf(java.lang.Object)>(r2);

        virtualinvoke r0.<com.android.server.am.ActivityStack: boolean finishActivityLocked(com.android.server.am.ActivityRecord,int,android.content.Intent,java.lang.String,boolean)>(r2, 0, null, "crashed", 0);

        i5 = i1 + -1;

        if i5 >= 0 goto label3;

     label1:
        i0 = i0 + -1;

        if i0 >= 0 goto label2;

        goto label3;

     label2:
        $r39 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r38 = virtualinvoke $r39.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r37 = (com.android.server.am.TaskRecord) $r38;

        $r36 = $r37.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i4 = virtualinvoke $r36.<java.util.ArrayList: int size()>();

        i5 = $i4 - 1;

        if i5 < 0 goto label1;

     label3:
        if i5 < 0 goto label6;

        $r15 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r17 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r16 = (com.android.server.am.TaskRecord) $r17;

        $r19 = $r16.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $r18 = virtualinvoke $r19.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r40 = (com.android.server.am.ActivityRecord) $r18;

        $r20 = r40.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r21 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState RESUMED>;

        if $r20 == $r21 goto label4;

        $r35 = r40.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r34 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState PAUSING>;

        if $r35 == $r34 goto label4;

        $r33 = r40.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r32 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState PAUSED>;

        if $r33 != $r32 goto label6;

     label4:
        $z1 = virtualinvoke r40.<com.android.server.am.ActivityRecord: boolean isHomeActivity()>();

        if $z1 == 0 goto label5;

        $r31 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r30 = $r31.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHomeProcess>;

        $r29 = r40.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r30 == $r29 goto label6;

     label5:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Force finishing activity ");

        $r23 = r40.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r24 = virtualinvoke $r23.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r27 = virtualinvoke $r24.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r26);

        virtualinvoke r0.<com.android.server.am.ActivityStack: boolean finishActivityLocked(com.android.server.am.ActivityRecord,int,android.content.Intent,java.lang.String,boolean)>(r40, 0, null, "crashed", 0);

     label6:
        return;
    }

    final void finishVoiceTask(android.service.voice.IVoiceInteractionSession)
    {
        com.android.server.am.ActivityStack r0;
        android.service.voice.IVoiceInteractionSession r1, $r9, $r10;
        android.os.IBinder r2, $r12;
        boolean z0, $z1;
        int i0, i1, $i2, $i3;
        com.android.server.am.TaskRecord r3;
        com.android.server.am.ActivityRecord r4;
        java.util.ArrayList $r5, $r7, $r11, $r13;
        com.android.server.am.ActivityManagerService $r6;
        java.lang.Object $r8, $r14;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: android.service.voice.IVoiceInteractionSession;

        r2 = interfaceinvoke r1.<android.service.voice.IVoiceInteractionSession: android.os.IBinder asBinder()>();

        z0 = 0;

        $r5 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i2 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label5;

        $r7 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.am.TaskRecord) $r8;

        $r9 = r3.<com.android.server.am.TaskRecord: android.service.voice.IVoiceInteractionSession voiceSession>;

        if $r9 == null goto label4;

        $r10 = r3.<com.android.server.am.TaskRecord: android.service.voice.IVoiceInteractionSession voiceSession>;

        $r12 = interfaceinvoke $r10.<android.service.voice.IVoiceInteractionSession: android.os.IBinder asBinder()>();

        if $r12 != r2 goto label4;

        $r11 = r3.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i3 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label2:
        if i1 < 0 goto label4;

        $r13 = r3.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $r14 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r4 = (com.android.server.am.ActivityRecord) $r14;

        $z1 = r4.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z1 != 0 goto label3;

        virtualinvoke r0.<com.android.server.am.ActivityStack: boolean finishActivityLocked(com.android.server.am.ActivityRecord,int,android.content.Intent,java.lang.String,boolean)>(r4, 0, null, "finish-voice", 0);

        z0 = 1;

     label3:
        i1 = i1 + -1;

        goto label2;

     label4:
        i0 = i0 + -1;

        goto label1;

     label5:
        if z0 == 0 goto label6;

        $r6 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r6.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

     label6:
        return;
    }

    final boolean finishActivityAffinityLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1, r3;
        java.util.ArrayList r2;
        int i0;
        com.android.server.am.TaskRecord $r4;
        java.lang.Object $r5;
        java.lang.String $r6, $r7;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $r4 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r2 = $r4.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        i0 = virtualinvoke r2.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

     label1:
        if i0 < 0 goto label3;

        $r5 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.am.ActivityRecord) $r5;

        $r7 = r3.<com.android.server.am.ActivityRecord: java.lang.String taskAffinity>;

        $r6 = r1.<com.android.server.am.ActivityRecord: java.lang.String taskAffinity>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r7, $r6);

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        virtualinvoke r0.<com.android.server.am.ActivityStack: boolean finishActivityLocked(com.android.server.am.ActivityRecord,int,android.content.Intent,java.lang.String,boolean)>(r3, 0, null, "request-affinity", 1);

        i0 = i0 + -1;

        goto label1;

     label3:
        return 1;
    }

    final void finishActivityResultsLocked(com.android.server.am.ActivityRecord, int, android.content.Intent)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1, r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.content.Intent r2;
        android.content.pm.ActivityInfo $r4, $r7;
        android.content.pm.ApplicationInfo $r5, $r8;
        java.lang.String $r6, $r11;
        com.android.server.am.ActivityManagerService $r9;
        com.android.server.am.UriPermissionOwner $r10;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.Intent;

        r3 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        if r3 == null goto label3;

        $i2 = r3.<com.android.server.am.ActivityRecord: int userId>;

        $i1 = r1.<com.android.server.am.ActivityRecord: int userId>;

        if $i2 == $i1 goto label1;

        if r2 == null goto label1;

        $i6 = r1.<com.android.server.am.ActivityRecord: int userId>;

        virtualinvoke r2.<android.content.Intent: void setContentUserHint(int)>($i6);

     label1:
        $r4 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r5 = $r4.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i3 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        if $i3 <= 0 goto label2;

        $r9 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r7 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r8 = $r7.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i5 = $r8.<android.content.pm.ApplicationInfo: int uid>;

        $r11 = r3.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        $r10 = virtualinvoke r3.<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner getUriPermissionsLocked()>();

        $i7 = r3.<com.android.server.am.ActivityRecord: int userId>;

        virtualinvoke $r9.<com.android.server.am.ActivityManagerService: void grantUriPermissionFromIntentLocked(int,java.lang.String,android.content.Intent,com.android.server.am.UriPermissionOwner,int)>($i5, $r11, r2, $r10, $i7);

     label2:
        $r6 = r1.<com.android.server.am.ActivityRecord: java.lang.String resultWho>;

        $i4 = r1.<com.android.server.am.ActivityRecord: int requestCode>;

        virtualinvoke r3.<com.android.server.am.ActivityRecord: void addResultLocked(com.android.server.am.ActivityRecord,java.lang.String,int,int,android.content.Intent)>(r1, $r6, $i4, i0, r2);

        r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo> = null;

     label3:
        r1.<com.android.server.am.ActivityRecord: java.util.ArrayList results> = null;

        r1.<com.android.server.am.ActivityRecord: java.util.HashSet pendingResults> = null;

        r1.<com.android.server.am.ActivityRecord: java.util.ArrayList newIntents> = null;

        r1.<com.android.server.am.ActivityRecord: android.os.Bundle icicle> = null;

        return;
    }

    final boolean finishActivityLocked(com.android.server.am.ActivityRecord, int, android.content.Intent, java.lang.String, boolean)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1, r6, $r12, $r15, $r17;
        int i0, i1, $i2, $i3, $i4, $i6, $i7, $i9, $i10, $i11;
        android.content.Intent r2, $r21, $r25;
        java.lang.String r3, $r11, $r26;
        boolean z0, $z1, $z2, $z3, z5;
        com.android.server.am.TaskRecord r4;
        java.util.ArrayList r5;
        java.lang.Object[] $r7;
        java.lang.Integer $r8, $r9, $r10;
        com.android.server.am.ActivityStack$ActivityState $r13, $r14;
        com.android.server.wm.WindowManagerService $r16, $r18;
        android.view.IApplicationToken$Stub $r19;
        byte $b8;
        com.android.server.am.ActivityStackSupervisor $r20;
        java.lang.StringBuilder $r23, $r27, $r28;
        java.lang.Object $r24;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.Intent;

        r3 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        $z1 = r1.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z1 == 0 goto label01;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate finish request for ");

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r26);

        return 0;

     label01:
        virtualinvoke r1.<com.android.server.am.ActivityRecord: void makeFinishing()>();

        r4 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r7 = newarray (java.lang.Object)[5];

        $i2 = r1.<com.android.server.am.ActivityRecord: int userId>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r7[0] = $r8;

        $i3 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r1);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r7[1] = $r9;

        $i4 = r4.<com.android.server.am.TaskRecord: int taskId>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r7[2] = $r10;

        $r11 = r1.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        $r7[3] = $r11;

        $r7[4] = r3;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30001, $r7);

        r5 = r4.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        i1 = virtualinvoke r5.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        $i6 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        $i7 = $i6 - 1;

        if i1 >= $i7 goto label02;

        virtualinvoke r4.<com.android.server.am.TaskRecord: void setFrontOfTask()>();

        $r21 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $i11 = virtualinvoke $r21.<android.content.Intent: int getFlags()>();

        $i9 = $i11 & 524288;

        if $i9 == 0 goto label02;

        $i10 = i1 + 1;

        $r24 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>($i10);

        r6 = (com.android.server.am.ActivityRecord) $r24;

        $r25 = r6.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        virtualinvoke $r25.<android.content.Intent: android.content.Intent addFlags(int)>(524288);

     label02:
        virtualinvoke r1.<com.android.server.am.ActivityRecord: void pauseKeyDispatchingLocked()>();

        specialinvoke r0.<com.android.server.am.ActivityStack: void adjustFocusedActivityLocked(com.android.server.am.ActivityRecord)>(r1);

        virtualinvoke r0.<com.android.server.am.ActivityStack: void finishActivityResultsLocked(com.android.server.am.ActivityRecord,int,android.content.Intent)>(r1, i0, r2);

        $r12 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if $r12 != r1 goto label09;

        if i1 > 0 goto label03;

        $z3 = 1;

        goto label04;

     label03:
        $z3 = 0;

     label04:
        z5 = $z3;

        $r18 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        if z5 == 0 goto label05;

        $b8 = 9;

        goto label06;

     label05:
        $b8 = 7;

     label06:
        virtualinvoke $r18.<com.android.server.wm.WindowManagerService: void prepareAppTransition(int,boolean)>($b8, 0);

        $r16 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $r19 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r16.<com.android.server.wm.WindowManagerService: void setAppVisibility(android.os.IBinder,boolean)>($r19, 0);

        $r17 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity>;

        if $r17 != null goto label07;

        virtualinvoke r0.<com.android.server.am.ActivityStack: boolean startPausingLocked(boolean,boolean,boolean,boolean)>(0, 0, 0, 0);

     label07:
        if z5 == 0 goto label08;

        $r20 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r20.<com.android.server.am.ActivityStackSupervisor: void endLockTaskModeIfTaskEnding(com.android.server.am.TaskRecord)>(r4);

     label08:
        goto label12;

     label09:
        $r13 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r14 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState PAUSING>;

        if $r13 == $r14 goto label12;

        $r15 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord finishCurrentActivityLocked(com.android.server.am.ActivityRecord,int,boolean)>(r1, 1, z0);

        if $r15 != null goto label10;

        $z2 = 1;

        goto label11;

     label10:
        $z2 = 0;

     label11:
        return $z2;

     label12:
        return 0;
    }

    final com.android.server.am.ActivityRecord finishCurrentActivityLocked(com.android.server.am.ActivityRecord, int, boolean)
    {
        com.android.server.am.ActivityStack r0, $r17;
        com.android.server.am.ActivityRecord r1, $r9, $r12;
        int i0, $i1, $i2;
        boolean z0, z1, $z7, $z9, $z11;
        com.android.server.am.ActivityStack$ActivityState r2, $r10, $r13, $r15, $r23;
        com.android.server.am.ActivityStackSupervisor $r3, $r5, $r7, $r11, $r14, $r18, $r20, $r22, $r24, $r27, $r28;
        java.util.ArrayList $r4, $r6, $r8, $r16, $r19, $r25, $r26, $r29;
        com.android.server.am.ActivityManagerService $r21;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if i0 != 2 goto label05;

        $z7 = r1.<com.android.server.am.ActivityRecord: boolean nowVisible>;

        if $z7 == 0 goto label05;

        $r20 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r19 = $r20.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStoppingActivities>;

        $z9 = virtualinvoke $r19.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z9 != 0 goto label03;

        $r22 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r26 = $r22.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStoppingActivities>;

        virtualinvoke $r26.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r24 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r25 = $r24.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStoppingActivities>;

        $i1 = virtualinvoke $r25.<java.util.ArrayList: int size()>();

        if $i1 > 3 goto label01;

        $z11 = r1.<com.android.server.am.ActivityRecord: boolean frontOfTask>;

        if $z11 == 0 goto label02;

        $r29 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i2 = virtualinvoke $r29.<java.util.ArrayList: int size()>();

        if $i2 > 1 goto label02;

     label01:
        $r28 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r28.<com.android.server.am.ActivityStackSupervisor: void scheduleIdleLocked()>();

        goto label03;

     label02:
        $r27 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r27.<com.android.server.am.ActivityStackSupervisor: void checkReadyForSleepLocked()>();

     label03:
        $r23 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState STOPPING>;

        r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state> = $r23;

        if z0 == 0 goto label04;

        $r21 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r21.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

     label04:
        return r1;

     label05:
        $r3 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r4 = $r3.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStoppingActivities>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r5 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r6 = $r5.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mGoingToSleepActivities>;

        virtualinvoke $r6.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r7 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r8 = $r7.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingVisibleActivities>;

        virtualinvoke $r8.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r9 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if $r9 != r1 goto label06;

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity> = null;

     label06:
        r2 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r10 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState FINISHING>;

        r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state> = $r10;

        if i0 == 0 goto label07;

        $r13 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState STOPPED>;

        if r2 == $r13 goto label07;

        $r15 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState INITIALIZING>;

        if r2 != $r15 goto label11;

     label07:
        virtualinvoke r1.<com.android.server.am.ActivityRecord: void makeFinishing()>();

        z1 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean destroyActivityLocked(com.android.server.am.ActivityRecord,boolean,java.lang.String)>(r1, 1, "finish-imm");

        if z1 == 0 goto label08;

        $r11 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r11.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

     label08:
        if z1 == 0 goto label09;

        $r12 = null;

        goto label10;

     label09:
        $r12 = r1;

     label10:
        return $r12;

     label11:
        $r14 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r16 = $r14.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mFinishingActivities>;

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        virtualinvoke r1.<com.android.server.am.ActivityRecord: void resumeKeyDispatchingLocked()>();

        $r18 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r17 = virtualinvoke $r18.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStack getFocusedStack()>();

        virtualinvoke $r17.<com.android.server.am.ActivityStack: boolean resumeTopActivityLocked(com.android.server.am.ActivityRecord)>(null);

        return r1;
    }

    void finishAllActivitiesLocked(boolean)
    {
        com.android.server.am.ActivityStack r0;
        boolean z0, z1, $z2;
        int i0, i1, $i2, $i3;
        java.util.ArrayList r1, $r3, $r5;
        com.android.server.am.ActivityRecord r2;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer $r4;
        java.lang.Object $r6, $r8;
        com.android.server.am.TaskRecord $r7;
        java.lang.StringBuilder $r9, $r10, $r11, $r13;
        java.lang.String $r12;

        r0 := @this: com.android.server.am.ActivityStack;

        z0 := @parameter0: boolean;

        z1 = 1;

        $r3 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label6;

        $r5 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r7 = (com.android.server.am.TaskRecord) $r6;

        r1 = $r7.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label2:
        if i1 < 0 goto label5;

        $r8 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.am.ActivityRecord) $r8;

        z1 = 0;

        $z2 = r2.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z2 == 0 goto label3;

        if z0 != 0 goto label3;

        goto label4;

     label3:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("finishAllActivitiesLocked: finishing ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" immediately");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityManager", $r12);

        virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord finishCurrentActivityLocked(com.android.server.am.ActivityRecord,int,boolean)>(r2, 0, 0);

     label4:
        i1 = i1 + -1;

        goto label2;

     label5:
        i0 = i0 + -1;

        goto label1;

     label6:
        if z1 == 0 goto label7;

        $r4 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor$ActivityContainer mActivityContainer>;

        virtualinvoke $r4.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void onTaskListEmptyLocked()>();

     label7:
        return;
    }

    final boolean shouldUpRecreateTaskLocked(com.android.server.am.ActivityRecord, java.lang.String)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1;
        java.lang.String r2, $r5, $r7, $r18, $r20, $r24;
        int i0, $i1;
        com.android.server.am.TaskRecord r3, $r4, $r6, $r8, $r9, $r11, $r13, $r14, $r19;
        boolean $z0, $z1, $z2, $z3;
        android.content.Intent $r10, $r12;
        java.util.ArrayList $r15, $r17;
        java.lang.Object $r16;
        java.lang.StringBuilder $r21, $r22, $r23;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r2 := @parameter1: java.lang.String;

        if r1 == null goto label1;

        $r4 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r5 = $r4.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        if $r5 == null goto label1;

        $r6 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r7 = $r6.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label2;

     label1:
        return 1;

     label2:
        $z1 = r1.<com.android.server.am.ActivityRecord: boolean frontOfTask>;

        if $z1 == 0 goto label6;

        $r8 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r8 == null goto label6;

        $r9 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r10 = virtualinvoke $r9.<com.android.server.am.TaskRecord: android.content.Intent getBaseIntent()>();

        if $r10 == null goto label6;

        $r11 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r12 = virtualinvoke $r11.<com.android.server.am.TaskRecord: android.content.Intent getBaseIntent()>();

        $z2 = virtualinvoke $r12.<android.content.Intent: boolean isDocument()>();

        if $z2 == 0 goto label6;

        $r13 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $i1 = virtualinvoke $r13.<com.android.server.am.TaskRecord: int getTaskToReturnTo()>();

        if $i1 == 0 goto label3;

        return 1;

     label3:
        $r15 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r14 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        i0 = virtualinvoke $r15.<java.util.ArrayList: int indexOf(java.lang.Object)>($r14);

        if i0 > 0 goto label4;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("shouldUpRecreateTask: task not in history for ");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r24);

        return 0;

     label4:
        if i0 != 0 goto label5;

        return 1;

     label5:
        $r17 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r16 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.am.TaskRecord) $r16;

        $r19 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r20 = $r19.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        $r18 = r3.<com.android.server.am.TaskRecord: java.lang.String affinity>;

        $z3 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z3 != 0 goto label6;

        return 1;

     label6:
        return 0;
    }

    final boolean navigateUpToLocked(android.os.IBinder, android.content.Intent, int, android.content.Intent)
    {
        com.android.server.am.ActivityStack r0;
        android.os.IBinder r1;
        android.content.Intent r2, r3;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, i11, i12, i13;
        com.android.server.am.ActivityRecord r4, r7, r9, r10, $r40, r44;
        com.android.server.am.TaskRecord r5;
        java.util.ArrayList r6, $r13;
        boolean z0, z1, $z2, $z5, $z6, $z7;
        android.content.ComponentName r8, $r20;
        android.content.pm.ActivityInfo r12, $r16, $r18, $r33, $r37;
        java.lang.Object $r14, $r28, $r34;
        com.android.server.am.ActivityManagerService $r15, $r42;
        android.content.pm.ApplicationInfo $r17;
        android.content.pm.IPackageManager $r19;
        com.android.server.am.ProcessRecord $r21;
        android.view.IApplicationToken$Stub $r22, $r25, $r27, $r30;
        android.app.IApplicationThread $r23;
        java.lang.String $r24, $r29, $r31, $r32, $r35, $r36;
        com.android.server.am.ActivityStackSupervisor $r26;
        com.android.server.Watchdog $r38;
        android.os.RemoteException $r39, $r41;
        android.app.IActivityController r43;
        long l10;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        r3 := @parameter3: android.content.Intent;

        r4 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord forToken(android.os.IBinder)>(r1);

        r5 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r6 = r5.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        i1 = virtualinvoke r6.<java.util.ArrayList: int indexOf(java.lang.Object)>(r4);

        $r13 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $z2 = virtualinvoke $r13.<java.util.ArrayList: boolean contains(java.lang.Object)>(r5);

        if $z2 == 0 goto label01;

        if i1 >= 0 goto label02;

     label01:
        return 0;

     label02:
        i2 = i1 - 1;

        if i2 >= 0 goto label03;

        $r40 = null;

        goto label04;

     label03:
        $r14 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r40 = (com.android.server.am.ActivityRecord) $r14;

     label04:
        r7 = $r40;

        z0 = 0;

        r8 = virtualinvoke r2.<android.content.Intent: android.content.ComponentName getComponent()>();

        if i1 <= 0 goto label07;

        if r8 == null goto label07;

        i3 = i2;

     label05:
        if i3 < 0 goto label07;

        $r34 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r9 = (com.android.server.am.ActivityRecord) $r34;

        $r33 = r9.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r32 = $r33.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r31 = virtualinvoke r8.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z6 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        if $z6 == 0 goto label06;

        $r37 = r9.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r36 = $r37.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r35 = virtualinvoke r8.<android.content.ComponentName: java.lang.String getClassName()>();

        $z7 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>($r35);

        if $z7 == 0 goto label06;

        i2 = i3;

        r7 = r9;

        z0 = 1;

        goto label07;

     label06:
        i3 = i3 + -1;

        goto label05;

     label07:
        $r15 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        r43 = $r15.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        if r43 == null goto label12;

        $r30 = r4.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        r44 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(android.os.IBinder,int)>($r30, 0);

        if r44 == null goto label12;

        z1 = 1;

     label08:
        $r29 = r44.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        z1 = interfaceinvoke r43.<android.app.IActivityController: boolean activityResuming(java.lang.String)>($r29);

     label09:
        goto label11;

     label10:
        $r41 := @caughtexception;

        $r42 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r42.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController> = null;

        $r38 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r38.<com.android.server.Watchdog: void setActivityController(android.app.IActivityController)>(null);

     label11:
        if z1 != 0 goto label12;

        return 0;

     label12:
        l10 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        i11 = i1;

     label13:
        if i11 <= i2 goto label14;

        $r28 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        r10 = (com.android.server.am.ActivityRecord) $r28;

        $r27 = r10.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke r0.<com.android.server.am.ActivityStack: boolean requestFinishActivityLocked(android.os.IBinder,int,android.content.Intent,java.lang.String,boolean)>($r27, i0, r3, "navigate-up", 1);

        i0 = 0;

        r3 = null;

        i11 = i11 + -1;

        goto label13;

     label14:
        if r7 == null goto label22;

        if z0 == 0 goto label22;

        $r16 = r7.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        i12 = $r16.<android.content.pm.ActivityInfo: int launchMode>;

        i13 = virtualinvoke r2.<android.content.Intent: int getFlags()>();

        if i12 == 3 goto label15;

        if i12 == 2 goto label15;

        if i12 == 1 goto label15;

        $i6 = i13 & 67108864;

        if $i6 == 0 goto label16;

     label15:
        $r18 = r4.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r17 = $r18.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i5 = $r17.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke r7.<com.android.server.am.ActivityRecord: void deliverNewIntentLocked(int,android.content.Intent)>($i5, r2);

        goto label22;

     label16:
        $r19 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $r20 = virtualinvoke r2.<android.content.Intent: android.content.ComponentName getComponent()>();

        $i8 = r4.<com.android.server.am.ActivityRecord: int userId>;

        r12 = interfaceinvoke $r19.<android.content.pm.IPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>($r20, 0, $i8);

        $r26 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r21 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r23 = $r21.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r22 = r7.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        $i9 = r7.<com.android.server.am.ActivityRecord: int launchedFromUid>;

        $r24 = r7.<com.android.server.am.ActivityRecord: java.lang.String launchedFromPackage>;

        $i7 = r7.<com.android.server.am.ActivityRecord: int launchedFromUid>;

        i4 = virtualinvoke $r26.<com.android.server.am.ActivityStackSupervisor: int startActivityLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.pm.ActivityInfo,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,android.os.IBinder,java.lang.String,int,int,int,java.lang.String,int,int,int,android.os.Bundle,boolean,com.android.server.am.ActivityRecord[],com.android.server.am.ActivityStackSupervisor$ActivityContainer,com.android.server.am.TaskRecord)>($r23, r2, null, r12, null, null, $r22, null, 0, -1, $i9, $r24, -1, $i7, 0, null, 1, null, null, null);

        if i4 != 0 goto label17;

        $z5 = 1;

        goto label18;

     label17:
        $z5 = 0;

     label18:
        z0 = $z5;

     label19:
        goto label21;

     label20:
        $r39 := @caughtexception;

        z0 = 0;

     label21:
        $r25 = r7.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke r0.<com.android.server.am.ActivityStack: boolean requestFinishActivityLocked(android.os.IBinder,int,android.content.Intent,java.lang.String,boolean)>($r25, i0, r3, "navigate-up", 1);

     label22:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l10);

        return z0;

        catch android.os.RemoteException from label08 to label09 with label10;
        catch android.os.RemoteException from label16 to label19 with label20;
    }

    final void cleanUpActivityLocked(com.android.server.am.ActivityRecord, boolean, boolean)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1, $r5, $r6, $r12;
        boolean z0, z1, $z4, $z6;
        java.util.Iterator r2;
        java.lang.ref.WeakReference r3;
        com.android.server.am.PendingIntentRecord r4;
        com.android.server.am.ActivityManagerService $r7, $r19;
        com.android.server.am.ActivityStackSupervisor $r8, $r10, $r13;
        java.util.ArrayList $r9, $r11;
        java.util.HashSet $r14, $r15;
        java.lang.Object $r16, $r17;
        com.android.server.am.ActivityStack$ActivityState $r18;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r5 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if $r5 != r1 goto label1;

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity> = null;

     label1:
        $r6 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity>;

        if $r6 != r1 goto label2;

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity> = null;

     label2:
        $r7 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r7.<com.android.server.am.ActivityManagerService: void clearFocusedActivity(com.android.server.am.ActivityRecord)>(r1);

        r1.<com.android.server.am.ActivityRecord: boolean configDestroy> = 0;

        r1.<com.android.server.am.ActivityRecord: boolean frozenBeforeDestroy> = 0;

        if z1 == 0 goto label3;

        $r18 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState DESTROYED>;

        r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state> = $r18;

        r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app> = null;

     label3:
        $r8 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r9 = $r8.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mFinishingActivities>;

        virtualinvoke $r9.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r10 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r11 = $r10.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingVisibleActivities>;

        virtualinvoke $r11.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $z4 = r1.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z4 == 0 goto label7;

        $r15 = r1.<com.android.server.am.ActivityRecord: java.util.HashSet pendingResults>;

        if $r15 == null goto label7;

        $r14 = r1.<com.android.server.am.ActivityRecord: java.util.HashSet pendingResults>;

        r2 = virtualinvoke $r14.<java.util.HashSet: java.util.Iterator iterator()>();

     label4:
        $z6 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label6;

        $r17 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.ref.WeakReference) $r17;

        $r16 = virtualinvoke r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (com.android.server.am.PendingIntentRecord) $r16;

        if r4 == null goto label5;

        $r19 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r19.<com.android.server.am.ActivityManagerService: void cancelIntentSenderLocked(com.android.server.am.PendingIntentRecord,boolean)>(r4, 0);

     label5:
        goto label4;

     label6:
        r1.<com.android.server.am.ActivityRecord: java.util.HashSet pendingResults> = null;

     label7:
        if z0 == 0 goto label8;

        virtualinvoke r0.<com.android.server.am.ActivityStack: void cleanUpActivityServicesLocked(com.android.server.am.ActivityRecord)>(r1);

     label8:
        specialinvoke r0.<com.android.server.am.ActivityStack: void removeTimeoutsForActivityLocked(com.android.server.am.ActivityRecord)>(r1);

        $r12 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord getVisibleBehindActivity()>();

        if $r12 != r1 goto label9;

        $r13 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r13.<com.android.server.am.ActivityStackSupervisor: boolean requestVisibleBehindLocked(com.android.server.am.ActivityRecord,boolean)>(r1, 0);

     label9:
        return;
    }

    private void removeTimeoutsForActivityLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1;
        com.android.server.am.ActivityStackSupervisor $r2;
        android.os.Handler $r3, $r4, $r5;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $r2 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r2.<com.android.server.am.ActivityStackSupervisor: void removeTimeoutsForActivityLocked(com.android.server.am.ActivityRecord)>(r1);

        $r3 = r0.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: void removeMessages(int,java.lang.Object)>(101, r1);

        $r4 = r0.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: void removeMessages(int,java.lang.Object)>(104, r1);

        $r5 = r0.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        virtualinvoke $r5.<android.os.Handler: void removeMessages(int,java.lang.Object)>(102, r1);

        virtualinvoke r1.<com.android.server.am.ActivityRecord: void finishLaunchTickingLocked()>();

        return;
    }

    private void removeActivityFromHistoryLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1;
        com.android.server.am.TaskRecord r2, $r8;
        com.android.server.am.ActivityStackSupervisor $r3, $r7, $r9;
        com.android.server.am.ActivityStack$ActivityState $r4;
        android.view.IApplicationToken$Stub $r5;
        com.android.server.wm.WindowManagerService $r6;
        boolean $z0, $z1, $z2;
        int $i0;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $r3 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r3.<com.android.server.am.ActivityStackSupervisor: void removeChildActivityContainers(com.android.server.am.ActivityRecord)>(r1);

        virtualinvoke r0.<com.android.server.am.ActivityStack: void finishActivityResultsLocked(com.android.server.am.ActivityRecord,int,android.content.Intent)>(r1, 0, null);

        virtualinvoke r1.<com.android.server.am.ActivityRecord: void makeFinishing()>();

        virtualinvoke r1.<com.android.server.am.ActivityRecord: void takeFromHistory()>();

        specialinvoke r0.<com.android.server.am.ActivityStack: void removeTimeoutsForActivityLocked(com.android.server.am.ActivityRecord)>(r1);

        $r4 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState DESTROYED>;

        r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state> = $r4;

        r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app> = null;

        $r6 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $r5 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r6.<com.android.server.wm.WindowManagerService: void removeAppToken(android.os.IBinder)>($r5);

        r2 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if r2 == null goto label2;

        $z0 = virtualinvoke r2.<com.android.server.am.TaskRecord: boolean removeActivity(com.android.server.am.ActivityRecord)>(r1);

        if $z0 == 0 goto label2;

        $r7 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $z1 = virtualinvoke $r7.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r0);

        if $z1 == 0 goto label1;

        $r8 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.TaskRecord topTask()>();

        if r2 != $r8 goto label1;

        $z2 = virtualinvoke r2.<com.android.server.am.TaskRecord: boolean isOverHomeStack()>();

        if $z2 == 0 goto label1;

        $r9 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $i0 = virtualinvoke r2.<com.android.server.am.TaskRecord: int getTaskToReturnTo()>();

        virtualinvoke $r9.<com.android.server.am.ActivityStackSupervisor: void moveHomeStackTaskToTop(int)>($i0);

     label1:
        virtualinvoke r0.<com.android.server.am.ActivityStack: void removeTask(com.android.server.am.TaskRecord)>(r2);

     label2:
        virtualinvoke r0.<com.android.server.am.ActivityStack: void cleanUpActivityServicesLocked(com.android.server.am.ActivityRecord)>(r1);

        virtualinvoke r1.<com.android.server.am.ActivityRecord: void removeUriPermissionsLocked()>();

        return;
    }

    final void cleanUpActivityServicesLocked(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1;
        java.util.Iterator r2;
        com.android.server.am.ConnectionRecord r3;
        java.util.HashSet $r4, $r5;
        boolean $z0;
        java.lang.Object $r6;
        com.android.server.am.ActivityManagerService $r7;
        com.android.server.am.ActiveServices $r8;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $r4 = r1.<com.android.server.am.ActivityRecord: java.util.HashSet connections>;

        if $r4 == null goto label3;

        $r5 = r1.<com.android.server.am.ActivityRecord: java.util.HashSet connections>;

        r2 = virtualinvoke $r5.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.am.ConnectionRecord) $r6;

        $r7 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r8 = $r7.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        virtualinvoke $r8.<com.android.server.am.ActiveServices: void removeConnectionLocked(com.android.server.am.ConnectionRecord,com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord)>(r3, null, r1);

        goto label1;

     label2:
        r1.<com.android.server.am.ActivityRecord: java.util.HashSet connections> = null;

     label3:
        return;
    }

    final void scheduleDestroyActivities(com.android.server.am.ProcessRecord, java.lang.String)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ProcessRecord r1;
        java.lang.String r2;
        android.os.Message r3;
        android.os.Handler $r4, $r6;
        com.android.server.am.ActivityStack$ScheduleDestroyArgs $r5;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        r3 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int)>(105);

        $r5 = new com.android.server.am.ActivityStack$ScheduleDestroyArgs;

        specialinvoke $r5.<com.android.server.am.ActivityStack$ScheduleDestroyArgs: void <init>(com.android.server.am.ProcessRecord,java.lang.String)>(r1, r2);

        r3.<android.os.Message: java.lang.Object obj> = $r5;

        $r6 = r0.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.os.Handler: boolean sendMessage(android.os.Message)>(r3);

        return;
    }

    final void destroyActivitiesLocked(com.android.server.am.ProcessRecord, java.lang.String)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ProcessRecord r1, $r11;
        java.lang.String r2;
        boolean z0, z1, $z3, $z4, $z5, $z6;
        int i0, i1, $i2, $i3;
        java.util.ArrayList r3, $r5, $r7;
        com.android.server.am.ActivityRecord r4;
        com.android.server.am.ActivityStackSupervisor $r6;
        java.lang.Object $r8, $r10;
        com.android.server.am.TaskRecord $r9;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: java.lang.String;

        z0 = 0;

        z1 = 0;

        $r5 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i2 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i0 = $i2 - 1;

     label01:
        if i0 < 0 goto label09;

        $r7 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r9 = (com.android.server.am.TaskRecord) $r8;

        r3 = $r9.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i3 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label02:
        if i1 < 0 goto label08;

        $r10 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r4 = (com.android.server.am.ActivityRecord) $r10;

        $z4 = r4.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z4 == 0 goto label03;

        goto label07;

     label03:
        $z3 = r4.<com.android.server.am.ActivityRecord: boolean fullscreen>;

        if $z3 == 0 goto label04;

        z0 = 1;

     label04:
        if r1 == null goto label05;

        $r11 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r11 == r1 goto label05;

        goto label07;

     label05:
        if z0 != 0 goto label06;

        goto label07;

     label06:
        $z6 = virtualinvoke r4.<com.android.server.am.ActivityRecord: boolean isDestroyable()>();

        if $z6 == 0 goto label07;

        $z5 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean destroyActivityLocked(com.android.server.am.ActivityRecord,boolean,java.lang.String)>(r4, 1, r2);

        if $z5 == 0 goto label07;

        z1 = 1;

     label07:
        i1 = i1 + -1;

        goto label02;

     label08:
        i0 = i0 + -1;

        goto label01;

     label09:
        if z1 == 0 goto label10;

        $r6 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r6.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

     label10:
        return;
    }

    final boolean safelyDestroyActivityLocked(com.android.server.am.ActivityRecord, java.lang.String)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1;
        java.lang.String r2;
        boolean $z0, $z1;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r1.<com.android.server.am.ActivityRecord: boolean isDestroyable()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean destroyActivityLocked(com.android.server.am.ActivityRecord,boolean,java.lang.String)>(r1, 1, r2);

        return $z1;

     label1:
        return 0;
    }

    final int releaseSomeActivitiesLocked(com.android.server.am.ProcessRecord, android.util.ArraySet, java.lang.String)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ProcessRecord r1, $r13;
        android.util.ArraySet r2;
        java.lang.String r3;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        com.android.server.am.TaskRecord r4;
        java.util.ArrayList r5, $r7, $r8, $r10;
        com.android.server.am.ActivityRecord r6;
        boolean $z0, $z1;
        java.lang.Object $r9, $r11, $r12, $r14;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        r2 := @parameter1: android.util.ArraySet;

        r3 := @parameter2: java.lang.String;

        $i5 = virtualinvoke r2.<android.util.ArraySet: int size()>();

        i0 = $i5 / 4;

        if i0 >= 1 goto label1;

        i0 = 1;

     label1:
        i1 = 0;

        i2 = 0;

     label2:
        $r7 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i6 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if i2 >= $i6 goto label9;

        if i0 <= 0 goto label9;

        $r8 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r4 = (com.android.server.am.TaskRecord) $r9;

        $z0 = virtualinvoke r2.<android.util.ArraySet: boolean contains(java.lang.Object)>(r4);

        if $z0 != 0 goto label3;

        goto label8;

     label3:
        i3 = 0;

        r5 = r4.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        i4 = 0;

     label4:
        $i7 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        if i4 >= $i7 goto label7;

        $r11 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r6 = (com.android.server.am.ActivityRecord) $r11;

        $r13 = r6.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r13 != r1 goto label6;

        $z1 = virtualinvoke r6.<com.android.server.am.ActivityRecord: boolean isDestroyable()>();

        if $z1 == 0 goto label6;

        virtualinvoke r0.<com.android.server.am.ActivityStack: boolean destroyActivityLocked(com.android.server.am.ActivityRecord,boolean,java.lang.String)>(r6, 1, r3);

        $r14 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        if $r14 == r6 goto label5;

        i4 = i4 + -1;

     label5:
        i3 = i3 + 1;

     label6:
        i4 = i4 + 1;

        goto label4;

     label7:
        if i3 <= 0 goto label8;

        i1 = i1 + i3;

        i0 = i0 + -1;

        $r10 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r12 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        if $r12 == r4 goto label8;

        i2 = i2 + -1;

     label8:
        i2 = i2 + 1;

        goto label2;

     label9:
        return i1;
    }

    final boolean destroyActivityLocked(com.android.server.am.ActivityRecord, boolean, java.lang.String)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z10, $z11, $z12;
        java.lang.String r2, $r9, $r18;
        java.lang.Object[] $r4;
        int $i0, $i1, $i2, $i4, $i6;
        java.lang.Integer $r5, $r6, $r8;
        com.android.server.am.TaskRecord $r7;
        com.android.server.am.ProcessRecord $r10, $r17, $r24, $r27, $r28, $r32, $r34, $r36, $r38;
        java.util.ArrayList $r11, $r25, $r31, $r37;
        com.android.server.am.ActivityStack$ActivityState $r12, $r22, $r23;
        java.lang.StringBuilder $r13, $r14, $r15, $r16;
        android.app.IApplicationThread $r19;
        android.view.IApplicationToken$Stub $r20;
        android.os.Handler $r21, $r26;
        com.android.server.am.ActivityManagerService $r29, $r30, $r33, $r39, $r41, $r42;
        com.android.server.am.ActiveServices $r35;
        java.lang.Exception $r40;
        com.android.server.am.ActivityManagerService$MainHandler $r43;
        android.os.Message r44;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        $r4 = newarray (java.lang.Object)[5];

        $i0 = r1.<com.android.server.am.ActivityRecord: int userId>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r4[0] = $r5;

        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r1);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4[1] = $r6;

        $r7 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $i2 = $r7.<com.android.server.am.TaskRecord: int taskId>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4[2] = $r8;

        $r9 = r1.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        $r4[3] = $r9;

        $r4[4] = r2;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30018, $r4);

        z1 = 0;

        virtualinvoke r0.<com.android.server.am.ActivityStack: void cleanUpActivityLocked(com.android.server.am.ActivityRecord,boolean,boolean)>(r1, 0, 0);

        $r10 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r10 == null goto label01;

        $z11 = 1;

        goto label02;

     label01:
        $z11 = 0;

     label02:
        z2 = $z11;

        if z2 == 0 goto label11;

        if z0 == 0 goto label04;

        $r24 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r25 = $r24.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        virtualinvoke $r25.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r29 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r27 = $r29.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess>;

        $r28 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r27 != $r28 goto label03;

        $r38 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r37 = $r38.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $i6 = virtualinvoke $r37.<java.util.ArrayList: int size()>();

        if $i6 > 0 goto label03;

        $r41 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r41.<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord mHeavyWeightProcess> = null;

        $r42 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r43 = $r42.<com.android.server.am.ActivityManagerService: com.android.server.am.ActivityManagerService$MainHandler mHandler>;

        virtualinvoke $r43.<com.android.server.am.ActivityManagerService$MainHandler: boolean sendEmptyMessage(int)>(25);

     label03:
        $r32 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r31 = $r32.<com.android.server.am.ProcessRecord: java.util.ArrayList activities>;

        $z10 = virtualinvoke $r31.<java.util.ArrayList: boolean isEmpty()>();

        if $z10 == 0 goto label04;

        $r30 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r35 = $r30.<com.android.server.am.ActivityManagerService: com.android.server.am.ActiveServices mServices>;

        $r36 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r35.<com.android.server.am.ActiveServices: void updateServiceConnectionActivitiesLocked(com.android.server.am.ProcessRecord)>($r36);

        $r33 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r34 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke $r33.<com.android.server.am.ActivityManagerService: void updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)>($r34, 0, null);

        $r39 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r39.<com.android.server.am.ActivityManagerService: void updateOomAdjLocked()>();

     label04:
        z3 = 0;

     label05:
        $r17 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r19 = $r17.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r20 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        $z7 = r1.<com.android.server.am.ActivityRecord: boolean finishing>;

        $i4 = r1.<com.android.server.am.ActivityRecord: int configChangeFlags>;

        interfaceinvoke $r19.<android.app.IApplicationThread: void scheduleDestroyActivity(android.os.IBinder,boolean,int)>($r20, $z7, $i4);

     label06:
        goto label08;

     label07:
        $r40 := @caughtexception;

        $z12 = r1.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z12 == 0 goto label08;

        specialinvoke r0.<com.android.server.am.ActivityStack: void removeActivityFromHistoryLocked(com.android.server.am.ActivityRecord)>(r1);

        z1 = 1;

        z3 = 1;

     label08:
        r1.<com.android.server.am.ActivityRecord: boolean nowVisible> = 0;

        $z6 = r1.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z6 == 0 goto label09;

        if z3 != 0 goto label09;

        $r23 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState DESTROYING>;

        r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state> = $r23;

        $r21 = r0.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        r44 = virtualinvoke $r21.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(102, r1);

        $r26 = r0.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        virtualinvoke $r26.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r44, 10000L);

        goto label10;

     label09:
        $r22 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState DESTROYED>;

        r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state> = $r22;

        r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app> = null;

     label10:
        goto label13;

     label11:
        $z4 = r1.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z4 == 0 goto label12;

        specialinvoke r0.<com.android.server.am.ActivityStack: void removeActivityFromHistoryLocked(com.android.server.am.ActivityRecord)>(r1);

        z1 = 1;

        goto label13;

     label12:
        $r12 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState DESTROYED>;

        r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state> = $r12;

        r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app> = null;

     label13:
        r1.<com.android.server.am.ActivityRecord: int configChangeFlags> = 0;

        $r11 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mLRUActivities>;

        $z5 = virtualinvoke $r11.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        if $z5 != 0 goto label14;

        if z2 == 0 goto label14;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Activity ");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" being finished, but not in LRU list");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r18);

     label14:
        return z1;

        catch java.lang.Exception from label05 to label06 with label07;
    }

    final void activityDestroyedLocked(android.os.IBinder)
    {
        com.android.server.am.ActivityStack r0;
        android.os.IBinder r1;
        long l0;
        com.android.server.am.ActivityRecord r2, $r4;
        java.lang.Throwable r3, $r9;
        com.android.server.am.ActivityStackSupervisor $r5;
        com.android.server.am.ActivityStack$ActivityState $r6, $r7;
        android.os.Handler $r8;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: android.os.IBinder;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r2 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord forToken(android.os.IBinder)>(r1);

        if r2 == null goto label2;

        $r8 = r0.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        virtualinvoke $r8.<android.os.Handler: void removeMessages(int,java.lang.Object)>(102, r2);

     label2:
        $r4 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r1);

        if $r4 == null goto label3;

        $r7 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r6 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState DESTROYING>;

        if $r7 != $r6 goto label3;

        virtualinvoke r0.<com.android.server.am.ActivityStack: void cleanUpActivityLocked(com.android.server.am.ActivityRecord,boolean,boolean)>(r2, 1, 0);

        specialinvoke r0.<com.android.server.am.ActivityStack: void removeActivityFromHistoryLocked(com.android.server.am.ActivityRecord)>(r2);

     label3:
        $r5 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r5.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label7;

     label5:
        $r9 := @caughtexception;

        r3 = $r9;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    void releaseBackgroundResources()
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1, $r4;
        boolean $z0, $z1;
        android.os.Handler $r3, $r17;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;
        android.view.IApplicationToken$Stub $r10, $r16;
        com.android.server.am.ProcessRecord $r11, $r12, $r13;
        android.app.IApplicationThread $r14, $r15;
        android.os.RemoteException $r18;

        r0 := @this: com.android.server.am.ActivityStack;

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean hasVisibleBehindActivity()>();

        if $z0 == 0 goto label7;

        $r3 = r0.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        $z1 = virtualinvoke $r3.<android.os.Handler: boolean hasMessages(int)>(107);

        if $z1 != 0 goto label7;

        r1 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord getVisibleBehindActivity()>();

        $r4 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        if r1 != $r4 goto label1;

        return;

     label1:
        if r1 == null goto label6;

        $r12 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r12 == null goto label6;

        $r11 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r14 = $r11.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r14 == null goto label6;

     label2:
        $r13 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r15 = $r13.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r16 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        interfaceinvoke $r15.<android.app.IApplicationThread: void scheduleCancelVisibleBehind(android.os.IBinder)>($r16);

     label3:
        goto label5;

     label4:
        $r18 := @caughtexception;

     label5:
        $r17 = r0.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        virtualinvoke $r17.<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>(107, 500L);

        goto label7;

     label6:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("releaseBackgroundResources: activity ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" no longer running");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r9);

        $r10 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke r0.<com.android.server.am.ActivityStack: void backgroundResourcesReleased(android.os.IBinder)>($r10);

     label7:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    final void backgroundResourcesReleased(android.os.IBinder)
    {
        com.android.server.am.ActivityStack r0;
        android.os.IBinder r1;
        com.android.server.am.ActivityRecord r2;
        android.os.Handler $r3;
        com.android.server.am.ActivityStackSupervisor $r4, $r5;
        java.util.ArrayList $r6;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: android.os.IBinder;

        $r3 = r0.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: void removeMessages(int)>(107);

        r2 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord getVisibleBehindActivity()>();

        if r2 == null goto label1;

        $r5 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r6 = $r5.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStoppingActivities>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        virtualinvoke r0.<com.android.server.am.ActivityStack: void setVisibleBehindActivity(com.android.server.am.ActivityRecord)>(null);

     label1:
        $r4 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r4.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

        return;
    }

    boolean hasVisibleBehindActivity()
    {
        com.android.server.am.ActivityStack r0;
        boolean $z0, $z1, $z2;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer $r1;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r2;

        r0 := @this: com.android.server.am.ActivityStack;

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean isAttached()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor$ActivityContainer mActivityContainer>;

        $r2 = $r1.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor$ActivityDisplay mActivityDisplay>;

        $z1 = virtualinvoke $r2.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: boolean hasVisibleBehindActivity()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    void setVisibleBehindActivity(com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1;
        boolean $z0;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer $r2;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r3;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean isAttached()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor$ActivityContainer mActivityContainer>;

        $r3 = $r2.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor$ActivityDisplay mActivityDisplay>;

        virtualinvoke $r3.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: void setVisibleBehindActivity(com.android.server.am.ActivityRecord)>(r1);

     label1:
        return;
    }

    com.android.server.am.ActivityRecord getVisibleBehindActivity()
    {
        com.android.server.am.ActivityStack r0;
        boolean $z0;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer $r1;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r2;
        com.android.server.am.ActivityRecord $r3;

        r0 := @this: com.android.server.am.ActivityStack;

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean isAttached()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor$ActivityContainer mActivityContainer>;

        $r2 = $r1.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: com.android.server.am.ActivityStackSupervisor$ActivityDisplay mActivityDisplay>;

        $r3 = $r2.<com.android.server.am.ActivityStackSupervisor$ActivityDisplay: com.android.server.am.ActivityRecord mVisibleBehindActivity>;

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    private void removeHistoryRecordsForAppLocked(java.util.ArrayList, com.android.server.am.ProcessRecord, java.lang.String)
    {
        com.android.server.am.ActivityStack r0;
        java.util.ArrayList r1;
        com.android.server.am.ProcessRecord r2, $r6;
        java.lang.String r3;
        int i0;
        com.android.server.am.ActivityRecord r4;
        java.lang.Object $r5;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: com.android.server.am.ProcessRecord;

        r3 := @parameter2: java.lang.String;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

     label1:
        if i0 <= 0 goto label3;

        i0 = i0 + -1;

        $r5 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r4 = (com.android.server.am.ActivityRecord) $r5;

        $r6 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r6 != r2 goto label2;

        virtualinvoke r1.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        specialinvoke r0.<com.android.server.am.ActivityStack: void removeTimeoutsForActivityLocked(com.android.server.am.ActivityRecord)>(r4);

     label2:
        goto label1;

     label3:
        return;
    }

    boolean removeHistoryRecordsForAppLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ProcessRecord r1, $r18;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7;
        int i1, i2, $i3, $i4, $i5, $i7, $i8, $i9;
        java.util.ArrayList r2, $r4, $r6, $r8, $r10, $r11, $r13, $r14;
        com.android.server.am.ActivityRecord r3;
        com.android.server.am.ActivityStackSupervisor $r5, $r7, $r9, $r12;
        com.android.server.am.TaskRecord $r15, $r28;
        java.lang.Object $r16, $r17;
        java.lang.StringBuilder $r19, $r20, $r22, $r23;
        java.lang.String $r21, $r31;
        java.lang.Object[] $r24;
        java.lang.Integer $r25, $r26, $r27;
        com.android.server.am.ActivityStack$ActivityState $r29, $r30;
        long $l11, $l12, $l13;
        com.android.server.am.ActivityManagerService $r32;
        byte $b14;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r4 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mLRUActivities>;

        specialinvoke r0.<com.android.server.am.ActivityStack: void removeHistoryRecordsForAppLocked(java.util.ArrayList,com.android.server.am.ProcessRecord,java.lang.String)>($r4, r1, "mLRUActivities");

        $r5 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r6 = $r5.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mStoppingActivities>;

        specialinvoke r0.<com.android.server.am.ActivityStack: void removeHistoryRecordsForAppLocked(java.util.ArrayList,com.android.server.am.ProcessRecord,java.lang.String)>($r6, r1, "mStoppingActivities");

        $r7 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r8 = $r7.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mGoingToSleepActivities>;

        specialinvoke r0.<com.android.server.am.ActivityStack: void removeHistoryRecordsForAppLocked(java.util.ArrayList,com.android.server.am.ProcessRecord,java.lang.String)>($r8, r1, "mGoingToSleepActivities");

        $r9 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r10 = $r9.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingVisibleActivities>;

        specialinvoke r0.<com.android.server.am.ActivityStack: void removeHistoryRecordsForAppLocked(java.util.ArrayList,com.android.server.am.ProcessRecord,java.lang.String)>($r10, r1, "mWaitingVisibleActivities");

        $r12 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r11 = $r12.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mFinishingActivities>;

        specialinvoke r0.<com.android.server.am.ActivityStack: void removeHistoryRecordsForAppLocked(java.util.ArrayList,com.android.server.am.ProcessRecord,java.lang.String)>($r11, r1, "mFinishingActivities");

        z0 = 0;

        virtualinvoke r0.<com.android.server.am.ActivityStack: int numActivities()>();

        $r13 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i3 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label01:
        if i1 < 0 goto label14;

        $r14 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r16 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r15 = (com.android.server.am.TaskRecord) $r16;

        r2 = $r15.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i4 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i2 = $i4 - 1;

     label02:
        if i2 < 0 goto label13;

        $r17 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r3 = (com.android.server.am.ActivityRecord) $r17;

        $r18 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r18 != r1 goto label12;

        $z2 = r3.<com.android.server.am.ActivityRecord: boolean haveState>;

        if $z2 != 0 goto label03;

        $z7 = r3.<com.android.server.am.ActivityRecord: boolean stateNotNeeded>;

        if $z7 == 0 goto label04;

     label03:
        $z3 = r3.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z3 == 0 goto label05;

     label04:
        z1 = 1;

        goto label07;

     label05:
        $i5 = r3.<com.android.server.am.ActivityRecord: int launchCount>;

        if $i5 <= 2 goto label06;

        $l13 = r3.<com.android.server.am.ActivityRecord: long lastLaunchTime>;

        $l12 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l11 = $l12 - 60000L;

        $b14 = $l13 cmp $l11;

        if $b14 <= 0 goto label06;

        z1 = 1;

        goto label07;

     label06:
        z1 = 0;

     label07:
        if z1 == 0 goto label09;

        $z6 = r3.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z6 != 0 goto label08;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Force removing ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": app died, no saved state");

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r21);

        $r24 = newarray (java.lang.Object)[5];

        $i7 = r3.<com.android.server.am.ActivityRecord: int userId>;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r24[0] = $r26;

        $i8 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r3);

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r24[1] = $r25;

        $r28 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $i9 = $r28.<com.android.server.am.TaskRecord: int taskId>;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r24[2] = $r27;

        $r31 = r3.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        $r24[3] = $r31;

        $r24[4] = "proc died without state saved";

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30001, $r24);

        $r29 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r30 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState RESUMED>;

        if $r29 != $r30 goto label08;

        $r32 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        virtualinvoke $r32.<com.android.server.am.ActivityManagerService: void updateUsageStats(com.android.server.am.ActivityRecord,boolean)>(r3, 0);

     label08:
        specialinvoke r0.<com.android.server.am.ActivityStack: void removeActivityFromHistoryLocked(com.android.server.am.ActivityRecord)>(r3);

        goto label11;

     label09:
        $z5 = r3.<com.android.server.am.ActivityRecord: boolean visible>;

        if $z5 == 0 goto label10;

        z0 = 1;

     label10:
        r3.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app> = null;

        r3.<com.android.server.am.ActivityRecord: boolean nowVisible> = 0;

        $z4 = r3.<com.android.server.am.ActivityRecord: boolean haveState>;

        if $z4 != 0 goto label11;

        r3.<com.android.server.am.ActivityRecord: android.os.Bundle icicle> = null;

     label11:
        virtualinvoke r0.<com.android.server.am.ActivityStack: void cleanUpActivityLocked(com.android.server.am.ActivityRecord,boolean,boolean)>(r3, 1, 1);

     label12:
        i2 = i2 + -1;

        goto label02;

     label13:
        i1 = i1 + -1;

        goto label01;

     label14:
        return z0;
    }

    final void updateTransitLocked(int, android.os.Bundle)
    {
        com.android.server.am.ActivityStack r0;
        int i0;
        android.os.Bundle r1;
        com.android.server.am.ActivityRecord r2;
        com.android.server.wm.WindowManagerService $r3;
        com.android.server.am.ActivityStack$ActivityState $r4, $r5;

        r0 := @this: com.android.server.am.ActivityStack;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        if r1 == null goto label2;

        r2 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        if r2 == null goto label1;

        $r5 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r4 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState RESUMED>;

        if $r5 == $r4 goto label1;

        virtualinvoke r2.<com.android.server.am.ActivityRecord: void updateOptionsLocked(android.os.Bundle)>(r1);

        goto label2;

     label1:
        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r1);

     label2:
        $r3 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r3.<com.android.server.wm.WindowManagerService: void prepareAppTransition(int,boolean)>(i0, 0);

        return;
    }

    void updateTaskMovement(com.android.server.am.TaskRecord, boolean)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.TaskRecord r1;
        boolean z0, $z1;
        long $l0, $l1, $l2;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        z0 := @parameter1: boolean;

        $z1 = r1.<com.android.server.am.TaskRecord: boolean isPersistable>;

        if $z1 == 0 goto label1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r1.<com.android.server.am.TaskRecord: long mLastTimeMoved> = $l0;

        if z0 != 0 goto label1;

        $l1 = r1.<com.android.server.am.TaskRecord: long mLastTimeMoved>;

        $l2 = $l1 * -1L;

        r1.<com.android.server.am.TaskRecord: long mLastTimeMoved> = $l2;

     label1:
        return;
    }

    void moveHomeStackTaskToTop(int)
    {
        com.android.server.am.ActivityStack r0;
        int i0, i1, i2, $i3, $i4, $i5;
        com.android.server.am.TaskRecord r1;
        java.util.ArrayList $r2, $r3, $r5, $r7;
        java.lang.Object $r4;
        com.android.server.wm.WindowManagerService $r8;

        r0 := @this: com.android.server.am.ActivityStack;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i3 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

        i2 = i1;

     label1:
        if i2 < 0 goto label3;

        $r3 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r1 = (com.android.server.am.TaskRecord) $r4;

        $i4 = r1.<com.android.server.am.TaskRecord: int taskType>;

        if $i4 != i0 goto label2;

        $r5 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        virtualinvoke $r5.<java.util.ArrayList: java.lang.Object remove(int)>(i2);

        $r7 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        virtualinvoke $r7.<java.util.ArrayList: void add(int,java.lang.Object)>(i1, r1);

        virtualinvoke r0.<com.android.server.am.ActivityStack: void updateTaskMovement(com.android.server.am.TaskRecord,boolean)>(r1, 1);

        $r8 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $i5 = r1.<com.android.server.am.TaskRecord: int taskId>;

        virtualinvoke $r8.<com.android.server.wm.WindowManagerService: void moveTaskToTop(int)>($i5);

        return;

     label2:
        i2 = i2 + -1;

        goto label1;

     label3:
        return;
    }

    final void moveTaskToFrontLocked(com.android.server.am.TaskRecord, com.android.server.am.ActivityRecord, android.os.Bundle)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.TaskRecord r1;
        com.android.server.am.ActivityRecord r2, r4;
        android.os.Bundle r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9;
        java.util.ArrayList $r5, $r6, $r15;
        android.content.Intent $r7, $r13;
        com.android.server.wm.WindowManagerService $r8, $r14;
        com.android.server.am.ActivityStackSupervisor $r9;
        java.lang.Object[] $r10;
        java.lang.Integer $r11, $r12;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        r2 := @parameter1: com.android.server.am.ActivityRecord;

        r3 := @parameter2: android.os.Bundle;

        $r5 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $r6 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        i1 = virtualinvoke $r6.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        if i0 == 0 goto label1;

        if i1 >= 0 goto label4;

     label1:
        if r2 == null goto label2;

        $r7 = r2.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $i2 = virtualinvoke $r7.<android.content.Intent: int getFlags()>();

        $i3 = $i2 & 65536;

        if $i3 == 0 goto label2;

        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r3);

        goto label3;

     label2:
        virtualinvoke r0.<com.android.server.am.ActivityStack: void updateTransitLocked(int,android.os.Bundle)>(10, r3);

     label3:
        return;

     label4:
        virtualinvoke r0.<com.android.server.am.ActivityStack: void moveToFront()>();

        specialinvoke r0.<com.android.server.am.ActivityStack: void insertTaskAtTop(com.android.server.am.TaskRecord)>(r1);

        if r2 == null goto label6;

        $r13 = r2.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $i9 = virtualinvoke $r13.<android.content.Intent: int getFlags()>();

        $i8 = $i9 & 65536;

        if $i8 == 0 goto label6;

        $r14 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r14.<com.android.server.wm.WindowManagerService: void prepareAppTransition(int,boolean)>(0, 0);

        r4 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        if r4 == null goto label5;

        $r15 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mNoAnimActivities>;

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label5:
        staticinvoke <android.app.ActivityOptions: void abort(android.os.Bundle)>(r3);

        goto label7;

     label6:
        virtualinvoke r0.<com.android.server.am.ActivityStack: void updateTransitLocked(int,android.os.Bundle)>(10, r3);

     label7:
        $r8 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $i4 = r1.<com.android.server.am.TaskRecord: int taskId>;

        virtualinvoke $r8.<com.android.server.wm.WindowManagerService: void moveTaskToTop(int)>($i4);

        $r9 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r9.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

        $r10 = newarray (java.lang.Object)[2];

        $i5 = r1.<com.android.server.am.TaskRecord: int userId>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r10[0] = $r11;

        $i6 = r1.<com.android.server.am.TaskRecord: int taskId>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r10[1] = $r12;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30002, $r10);

        return;
    }

    final boolean moveTaskToBackLocked(int, com.android.server.am.ActivityRecord)
    {
        com.android.server.am.ActivityStack r0;
        int i0, $i2, $i3, i5, i6, i7;
        com.android.server.am.ActivityRecord r1, r3, $r17, $r22, r41;
        com.android.server.am.TaskRecord r2, $r23, r40, r42;
        boolean z0, $z1, $z3, $z5, $z6, $z7, $z8, $z9;
        java.lang.StringBuilder $r5, $r6, $r7, $r33, $r34, $r35;
        java.lang.String $r8, $r32, $r38;
        com.android.server.am.ActivityStackSupervisor $r9, $r10, $r16, $r19;
        java.util.ArrayList $r11, $r12, $r13, $r24, $r27;
        com.android.server.wm.WindowManagerService $r14, $r15, $r25;
        com.android.server.am.ActivityManagerService $r18, $r20, $r28, $r30, $r36;
        android.content.Intent $r21;
        java.lang.Object $r26;
        android.app.IActivityController $r29, $r31;
        android.os.RemoteException $r37;
        com.android.server.Watchdog $r39;

        r0 := @this: com.android.server.am.ActivityStack;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.am.ActivityRecord;

        r2 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.TaskRecord taskForIdLocked(int)>(i0);

        if r2 != null goto label01;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveTaskToBack: bad taskId=");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r38);

        return 0;

     label01:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveTaskToBack: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r8);

        $r9 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r9.<com.android.server.am.ActivityStackSupervisor: void endLockTaskModeIfTaskEnding(com.android.server.am.TaskRecord)>(r2);

        $r10 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $z1 = virtualinvoke $r10.<com.android.server.am.ActivityStackSupervisor: boolean isFrontStack(com.android.server.am.ActivityStack)>(r0);

        if $z1 == 0 goto label07;

        $r30 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r29 = $r30.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        if $r29 == null goto label07;

        r3 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(android.os.IBinder,int)>(null, i0);

        if r3 != null goto label02;

        r3 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(android.os.IBinder,int)>(null, 0);

     label02:
        if r3 == null goto label07;

        z0 = 1;

     label03:
        $r28 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r31 = $r28.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController>;

        $r32 = r3.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        z0 = interfaceinvoke $r31.<android.app.IActivityController: boolean activityResuming(java.lang.String)>($r32);

     label04:
        goto label06;

     label05:
        $r37 := @caughtexception;

        $r36 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r36.<com.android.server.am.ActivityManagerService: android.app.IActivityController mController> = null;

        $r39 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r39.<com.android.server.Watchdog: void setActivityController(android.app.IActivityController)>(null);

     label06:
        if z0 != 0 goto label07;

        return 0;

     label07:
        $r11 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        virtualinvoke $r11.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

        $r12 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        virtualinvoke $r12.<java.util.ArrayList: void add(int,java.lang.Object)>(0, r2);

        virtualinvoke r0.<com.android.server.am.ActivityStack: void updateTaskMovement(com.android.server.am.TaskRecord,boolean)>(r2, 0);

        $r13 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        i5 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        i6 = i5 - 1;

     label08:
        if i6 < 1 goto label11;

        $r27 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r26 = virtualinvoke $r27.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r40 = (com.android.server.am.TaskRecord) $r26;

        $z9 = virtualinvoke r40.<com.android.server.am.TaskRecord: boolean isOverHomeStack()>();

        if $z9 == 0 goto label09;

        goto label11;

     label09:
        if i6 != 1 goto label10;

        virtualinvoke r40.<com.android.server.am.TaskRecord: void setTaskToReturnTo(int)>(1);

     label10:
        i6 = i6 + -1;

        goto label08;

     label11:
        if r1 == null goto label13;

        $r21 = r1.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $i2 = virtualinvoke $r21.<android.content.Intent: int getFlags()>();

        $i3 = $i2 & 65536;

        if $i3 == 0 goto label13;

        $r25 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r25.<com.android.server.wm.WindowManagerService: void prepareAppTransition(int,boolean)>(0, 0);

        r41 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        if r41 == null goto label12;

        $r24 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mNoAnimActivities>;

        virtualinvoke $r24.<java.util.ArrayList: boolean add(java.lang.Object)>(r41);

     label12:
        goto label14;

     label13:
        $r15 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r15.<com.android.server.wm.WindowManagerService: void prepareAppTransition(int,boolean)>(11, 0);

     label14:
        $r14 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        virtualinvoke $r14.<com.android.server.wm.WindowManagerService: void moveTaskToBottom(int)>(i0);

        $r17 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if $r17 == null goto label15;

        $r22 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        $r23 = $r22.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        goto label16;

     label15:
        $r23 = null;

     label16:
        r42 = $r23;

        if r42 != r2 goto label17;

        $z7 = virtualinvoke r2.<com.android.server.am.TaskRecord: boolean isOverHomeStack()>();

        if $z7 != 0 goto label18;

     label17:
        if i5 > 1 goto label20;

        $z3 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean isOnHomeDisplay()>();

        if $z3 == 0 goto label20;

     label18:
        $r18 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $z5 = $r18.<com.android.server.am.ActivityManagerService: boolean mBooting>;

        if $z5 != 0 goto label19;

        $r20 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $z6 = $r20.<com.android.server.am.ActivityManagerService: boolean mBooted>;

        if $z6 != 0 goto label19;

        return 0;

     label19:
        i7 = virtualinvoke r2.<com.android.server.am.TaskRecord: int getTaskToReturnTo()>();

        virtualinvoke r2.<com.android.server.am.TaskRecord: void setTaskToReturnTo(int)>(0);

        $r19 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $z8 = virtualinvoke $r19.<com.android.server.am.ActivityStackSupervisor: boolean resumeHomeStackTask(int,com.android.server.am.ActivityRecord)>(i7, null);

        return $z8;

     label20:
        $r16 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r16.<com.android.server.am.ActivityStackSupervisor: boolean resumeTopActivitiesLocked()>();

        return 1;

        catch android.os.RemoteException from label03 to label04 with label05;
    }

    static final void logStartActivity(int, com.android.server.am.ActivityRecord, com.android.server.am.TaskRecord)
    {
        int i0, $i1, $i2, $i3, $i4;
        com.android.server.am.ActivityRecord r0;
        com.android.server.am.TaskRecord r1;
        android.net.Uri r2;
        java.lang.String r3, $r8, $r12, $r13, $r16;
        android.content.Intent $r4, $r10, $r11, $r14;
        java.lang.Object[] $r5;
        java.lang.Integer $r6, $r7, $r9, $r15;

        i0 := @parameter0: int;

        r0 := @parameter1: com.android.server.am.ActivityRecord;

        r1 := @parameter2: com.android.server.am.TaskRecord;

        $r4 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        r2 = virtualinvoke $r4.<android.content.Intent: android.net.Uri getData()>();

        if r2 == null goto label1;

        $r16 = virtualinvoke r2.<android.net.Uri: java.lang.String toSafeString()>();

        goto label2;

     label1:
        $r16 = null;

     label2:
        r3 = $r16;

        $r5 = newarray (java.lang.Object)[8];

        $i1 = r0.<com.android.server.am.ActivityRecord: int userId>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5[0] = $r6;

        $i2 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r5[1] = $r7;

        $i3 = r1.<com.android.server.am.TaskRecord: int taskId>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r5[2] = $r9;

        $r8 = r0.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        $r5[3] = $r8;

        $r10 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r12 = virtualinvoke $r10.<android.content.Intent: java.lang.String getAction()>();

        $r5[4] = $r12;

        $r11 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r13 = virtualinvoke $r11.<android.content.Intent: java.lang.String getType()>();

        $r5[5] = $r13;

        $r5[6] = r3;

        $r14 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $i4 = virtualinvoke $r14.<android.content.Intent: int getFlags()>();

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r5[7] = $r15;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(i0, $r5);

        return;
    }

    final boolean ensureActivityConfigurationLocked(com.android.server.am.ActivityRecord, int)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.content.res.Configuration r2, r3, $r6;
        boolean $z0, $z1, $z4, $z6, $z7;
        com.android.server.am.ActivityManagerService $r5;
        com.android.server.am.ProcessRecord $r7, $r8, $r11, $r12, $r14, $r19, $r20, $r22;
        android.app.IApplicationThread $r9, $r13, $r23, $r25;
        android.content.pm.ActivityInfo $r10;
        com.android.server.am.ActivityStack$ActivityState $r15, $r16, $r17, $r18;
        android.view.IApplicationToken$Stub $r21;
        android.os.RemoteException $r24;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        i0 := @parameter1: int;

        $z0 = r0.<com.android.server.am.ActivityStack: boolean mConfigWillChange>;

        if $z0 == 0 goto label01;

        return 1;

     label01:
        $r5 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        r2 = $r5.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        $r6 = r1.<com.android.server.am.ActivityRecord: android.content.res.Configuration configuration>;

        if $r6 != r2 goto label02;

        $z6 = r1.<com.android.server.am.ActivityRecord: boolean forceNewConfig>;

        if $z6 != 0 goto label02;

        return 1;

     label02:
        $z1 = r1.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z1 == 0 goto label03;

        virtualinvoke r1.<com.android.server.am.ActivityRecord: void stopFreezingScreenLocked(boolean)>(0);

        return 1;

     label03:
        r3 = r1.<com.android.server.am.ActivityRecord: android.content.res.Configuration configuration>;

        r1.<com.android.server.am.ActivityRecord: android.content.res.Configuration configuration> = r2;

        i1 = virtualinvoke r3.<android.content.res.Configuration: int diff(android.content.res.Configuration)>(r2);

        if i1 != 0 goto label04;

        $z7 = r1.<com.android.server.am.ActivityRecord: boolean forceNewConfig>;

        if $z7 != 0 goto label04;

        return 1;

     label04:
        $r7 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r7 == null goto label05;

        $r8 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r9 = $r8.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r9 != null goto label06;

     label05:
        virtualinvoke r1.<com.android.server.am.ActivityRecord: void stopFreezingScreenLocked(boolean)>(0);

        r1.<com.android.server.am.ActivityRecord: boolean forceNewConfig> = 0;

        return 1;

     label06:
        $r10 = r1.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i3 = virtualinvoke $r10.<android.content.pm.ActivityInfo: int getRealConfigChanged()>();

        $i2 = $i3 ^ -1;

        $i5 = i1 & $i2;

        if $i5 != 0 goto label07;

        $z4 = r1.<com.android.server.am.ActivityRecord: boolean forceNewConfig>;

        if $z4 == 0 goto label13;

     label07:
        $i4 = r1.<com.android.server.am.ActivityRecord: int configChangeFlags>;

        $i6 = $i4 | i1;

        r1.<com.android.server.am.ActivityRecord: int configChangeFlags> = $i6;

        $r11 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke r1.<com.android.server.am.ActivityRecord: void startFreezingScreenLocked(com.android.server.am.ProcessRecord,int)>($r11, i0);

        r1.<com.android.server.am.ActivityRecord: boolean forceNewConfig> = 0;

        $r12 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r12 == null goto label08;

        $r14 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r13 = $r14.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r13 != null goto label09;

     label08:
        virtualinvoke r0.<com.android.server.am.ActivityStack: boolean destroyActivityLocked(com.android.server.am.ActivityRecord,boolean,java.lang.String)>(r1, 1, "config");

        goto label12;

     label09:
        $r15 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r16 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState PAUSING>;

        if $r15 != $r16 goto label10;

        r1.<com.android.server.am.ActivityRecord: boolean configDestroy> = 1;

        return 1;

     label10:
        $r17 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r18 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState RESUMED>;

        if $r17 != $r18 goto label11;

        $i8 = r1.<com.android.server.am.ActivityRecord: int configChangeFlags>;

        specialinvoke r0.<com.android.server.am.ActivityStack: boolean relaunchActivityLocked(com.android.server.am.ActivityRecord,int,boolean)>(r1, $i8, 1);

        r1.<com.android.server.am.ActivityRecord: int configChangeFlags> = 0;

        goto label12;

     label11:
        $i7 = r1.<com.android.server.am.ActivityRecord: int configChangeFlags>;

        specialinvoke r0.<com.android.server.am.ActivityStack: boolean relaunchActivityLocked(com.android.server.am.ActivityRecord,int,boolean)>(r1, $i7, 0);

        r1.<com.android.server.am.ActivityRecord: int configChangeFlags> = 0;

     label12:
        return 0;

     label13:
        $r19 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r19 == null goto label17;

        $r22 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r23 = $r22.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r23 == null goto label17;

     label14:
        $r20 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r25 = $r20.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r21 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        interfaceinvoke $r25.<android.app.IApplicationThread: void scheduleActivityConfigurationChanged(android.os.IBinder)>($r21);

     label15:
        goto label17;

     label16:
        $r24 := @caughtexception;

     label17:
        virtualinvoke r1.<com.android.server.am.ActivityRecord: void stopFreezingScreenLocked(boolean)>(0);

        return 1;

        catch android.os.RemoteException from label14 to label15 with label16;
    }

    private boolean relaunchActivityLocked(com.android.server.am.ActivityRecord, int, boolean)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ActivityRecord r1;
        int i0, $i1, $i3, $i4;
        boolean z0, $z1;
        java.util.ArrayList r2, r3;
        java.lang.Object[] $r5;
        short $s2;
        java.lang.Integer $r6, $r7, $r10;
        com.android.server.am.TaskRecord $r8;
        java.lang.String $r9;
        com.android.server.am.ProcessRecord $r11, $r12;
        com.android.server.am.ActivityStackSupervisor $r13;
        com.android.server.am.ActivityManagerService $r14;
        android.content.res.Configuration $r15, $r17;
        android.app.IApplicationThread $r16;
        android.view.IApplicationToken$Stub $r18;
        com.android.server.am.ActivityStack$ActivityState $r19, $r22;
        android.os.Handler $r20;
        android.os.RemoteException $r21;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 = null;

        r3 = null;

        if z0 == 0 goto label01;

        r2 = r1.<com.android.server.am.ActivityRecord: java.util.ArrayList results>;

        r3 = r1.<com.android.server.am.ActivityRecord: java.util.ArrayList newIntents>;

     label01:
        if z0 == 0 goto label02;

        $s2 = 30019;

        goto label03;

     label02:
        $s2 = 30020;

     label03:
        $r5 = newarray (java.lang.Object)[4];

        $i1 = r1.<com.android.server.am.ActivityRecord: int userId>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r5[0] = $r6;

        $i3 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r1);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r5[1] = $r7;

        $r8 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $i4 = $r8.<com.android.server.am.TaskRecord: int taskId>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r5[2] = $r10;

        $r9 = r1.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        $r5[3] = $r9;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>($s2, $r5);

        $r11 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke r1.<com.android.server.am.ActivityRecord: void startFreezingScreenLocked(com.android.server.am.ProcessRecord,int)>($r11, 0);

        $r13 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r13.<com.android.server.am.ActivityStackSupervisor: void removeChildActivityContainers(com.android.server.am.ActivityRecord)>(r1);

     label04:
        r1.<com.android.server.am.ActivityRecord: boolean forceNewConfig> = 0;

        $r12 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r16 = $r12.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r18 = r1.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        if z0 != 0 goto label05;

        $z1 = 1;

        goto label06;

     label05:
        $z1 = 0;

     label06:
        $r15 = new android.content.res.Configuration;

        $r14 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r17 = $r14.<com.android.server.am.ActivityManagerService: android.content.res.Configuration mConfiguration>;

        specialinvoke $r15.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r17);

        interfaceinvoke $r16.<android.app.IApplicationThread: void scheduleRelaunchActivity(android.os.IBinder,java.util.List,java.util.List,int,boolean,android.content.res.Configuration)>($r18, r2, r3, i0, $z1, $r15);

     label07:
        goto label09;

     label08:
        $r21 := @caughtexception;

     label09:
        if z0 == 0 goto label10;

        r1.<com.android.server.am.ActivityRecord: java.util.ArrayList results> = null;

        r1.<com.android.server.am.ActivityRecord: java.util.ArrayList newIntents> = null;

        $r22 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState RESUMED>;

        r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state> = $r22;

        goto label11;

     label10:
        $r20 = r0.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        virtualinvoke $r20.<android.os.Handler: void removeMessages(int,java.lang.Object)>(101, r1);

        $r19 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState PAUSED>;

        r1.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state> = $r19;

     label11:
        return 1;

        catch android.os.RemoteException from label04 to label07 with label08;
    }

    boolean willActivityBeVisibleLocked(android.os.IBinder)
    {
        com.android.server.am.ActivityStack r0;
        android.os.IBinder r1;
        int i0, i1, $i2, $i4;
        java.util.ArrayList r2, $r4, $r10;
        com.android.server.am.ActivityRecord r3, r14;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;
        java.lang.Object $r9, $r13;
        com.android.server.am.TaskRecord $r11;
        android.view.IApplicationToken$Stub $r12;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: android.os.IBinder;

        $r4 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i0 = $i2 - 1;

     label01:
        if i0 < 0 goto label06;

        $r10 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r9 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r11 = (com.android.server.am.TaskRecord) $r9;

        r2 = $r11.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i4 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i1 = $i4 - 1;

     label02:
        if i1 < 0 goto label05;

        $r13 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.server.am.ActivityRecord) $r13;

        $r12 = r3.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        if $r12 != r1 goto label03;

        return 1;

     label03:
        $z4 = r3.<com.android.server.am.ActivityRecord: boolean fullscreen>;

        if $z4 == 0 goto label04;

        $z3 = r3.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z3 != 0 goto label04;

        return 0;

     label04:
        i1 = i1 + -1;

        goto label02;

     label05:
        i0 = i0 + -1;

        goto label01;

     label06:
        r14 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord forToken(android.os.IBinder)>(r1);

        if r14 != null goto label07;

        return 0;

     label07:
        $z0 = r14.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z0 == 0 goto label08;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("willActivityBeVisibleLocked: Returning false, would have returned true for r=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ActivityManager", $r8);

     label08:
        $z1 = r14.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z1 != 0 goto label09;

        $z2 = 1;

        goto label10;

     label09:
        $z2 = 0;

     label10:
        return $z2;
    }

    void closeSystemDialogsLocked()
    {
        com.android.server.am.ActivityStack r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.util.ArrayList r1, $r3, $r4;
        com.android.server.am.ActivityRecord r2;
        java.lang.Object $r5, $r7;
        com.android.server.am.TaskRecord $r6;
        android.content.pm.ActivityInfo $r8;

        r0 := @this: com.android.server.am.ActivityStack;

        $r3 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label5;

        $r4 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r6 = (com.android.server.am.TaskRecord) $r5;

        r1 = $r6.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label2:
        if i1 < 0 goto label4;

        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.am.ActivityRecord) $r7;

        $r8 = r2.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $i4 = $r8.<android.content.pm.ActivityInfo: int flags>;

        $i5 = $i4 & 256;

        if $i5 == 0 goto label3;

        virtualinvoke r0.<com.android.server.am.ActivityStack: boolean finishActivityLocked(com.android.server.am.ActivityRecord,int,android.content.Intent,java.lang.String,boolean)>(r2, 0, null, "close-sys", 1);

     label3:
        i1 = i1 + -1;

        goto label2;

     label4:
        i0 = i0 + -1;

        goto label1;

     label5:
        return;
    }

    boolean forceStopPackageLocked(java.lang.String, boolean, boolean, int)
    {
        com.android.server.am.ActivityStack r0;
        java.lang.String r1, $r10, $r15, $r24;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        int i0, i1, i2, i3, $i4, $i7, $i8;
        com.android.server.am.TaskRecord r2, $r9, $r25;
        android.content.ComponentName r3, $r17;
        java.util.ArrayList r4, $r6, $r8;
        com.android.server.am.ActivityRecord r5;
        java.lang.Object $r7, $r11;
        com.android.server.am.ProcessRecord $r12, $r18, $r19, $r23;
        java.lang.StringBuilder $r13, $r14, $r16, $r20, $r21, $r22;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i0 := @parameter3: int;

        z2 = 0;

        r2 = null;

        r3 = null;

        $r6 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i4 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i1 = $i4 - 1;

     label01:
        if i1 < 0 goto label17;

        $r8 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r7 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r9 = (com.android.server.am.TaskRecord) $r7;

        r4 = $r9.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        i2 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        i3 = 0;

     label02:
        if i3 >= i2 goto label16;

        $r11 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r5 = (com.android.server.am.ActivityRecord) $r11;

        $r10 = r5.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z4 != 0 goto label03;

        if r1 != null goto label04;

        $i8 = r5.<com.android.server.am.ActivityRecord: int userId>;

        if $i8 != i0 goto label04;

     label03:
        $z9 = 1;

        goto label05;

     label04:
        $z9 = 0;

     label05:
        z3 = $z9;

        if i0 == -1 goto label06;

        $i7 = r5.<com.android.server.am.ActivityRecord: int userId>;

        if $i7 != i0 goto label15;

     label06:
        if z3 != 0 goto label07;

        $r25 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r25 != r2 goto label15;

     label07:
        $r12 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r12 == null goto label08;

        if z1 != 0 goto label08;

        $r23 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $z10 = $r23.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z10 != 0 goto label15;

     label08:
        if z0 != 0 goto label10;

        $z8 = r5.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z8 == 0 goto label09;

        goto label15;

     label09:
        return 1;

     label10:
        $z5 = virtualinvoke r5.<com.android.server.am.ActivityRecord: boolean isHomeActivity()>();

        if $z5 == 0 goto label12;

        if r3 == null goto label11;

        $r17 = r5.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        $z7 = virtualinvoke r3.<android.content.ComponentName: boolean equals(java.lang.Object)>($r17);

        if $z7 == 0 goto label11;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip force-stop again ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r24);

        goto label15;

     label11:
        r3 = r5.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

     label12:
        z2 = 1;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Force finishing activity ");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ActivityManager", $r15);

        if z3 == 0 goto label14;

        $r18 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r18 == null goto label13;

        $r19 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r19.<com.android.server.am.ProcessRecord: boolean removed> = 1;

     label13:
        r5.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app> = null;

     label14:
        r2 = r5.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $z6 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean finishActivityLocked(com.android.server.am.ActivityRecord,int,android.content.Intent,java.lang.String,boolean)>(r5, 0, null, "force-stop", 1);

        if $z6 == 0 goto label15;

        i2 = i2 + -1;

        i3 = i3 + -1;

     label15:
        i3 = i3 + 1;

        goto label02;

     label16:
        i1 = i1 + -1;

        goto label01;

     label17:
        return z2;
    }

    void getTasksLocked(java.util.List, int, boolean)
    {
        com.android.server.am.ActivityStack r0;
        java.util.List r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i9;
        boolean z0, $z1, $z3;
        com.android.server.am.TaskRecord r2, $r14, $r15;
        com.android.server.am.ActivityRecord r3, r4;
        java.util.ArrayList r5, $r6, $r7;
        java.lang.Object $r8, $r16;
        android.app.ActivityManager$RunningTaskInfo $r9, r23;
        android.content.ComponentName $r10, $r12;
        android.content.Intent $r11, $r13;
        long $l8;
        java.lang.CharSequence $r17;
        com.android.server.am.ProcessRecord $r18, $r19;
        com.android.server.am.ActivityStack$ActivityState $r20, $r22;
        android.app.IApplicationThread $r21;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r6 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i5 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i1 = $i5 - 1;

     label01:
        if i1 < 0 goto label11;

        $r7 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.am.TaskRecord) $r8;

        r3 = null;

        r4 = null;

        i2 = 0;

        i3 = 0;

        r5 = r2.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $z1 = virtualinvoke r5.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label02;

        goto label10;

     label02:
        if z0 != 0 goto label03;

        $z3 = virtualinvoke r2.<com.android.server.am.TaskRecord: boolean isHomeTask()>();

        if $z3 != 0 goto label03;

        $i9 = r2.<com.android.server.am.TaskRecord: int effectiveUid>;

        if $i9 == i0 goto label03;

        goto label10;

     label03:
        $i6 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        i4 = $i6 - 1;

     label04:
        if i4 < 0 goto label08;

        $r16 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r3 = (com.android.server.am.ActivityRecord) $r16;

        if r4 == null goto label05;

        $r20 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r22 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState INITIALIZING>;

        if $r20 != $r22 goto label06;

     label05:
        r4 = r3;

        i3 = 0;

        i2 = 0;

     label06:
        i2 = i2 + 1;

        $r19 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r19 == null goto label07;

        $r18 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r21 = $r18.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r21 == null goto label07;

        i3 = i3 + 1;

     label07:
        i4 = i4 + -1;

        goto label04;

     label08:
        $r9 = new android.app.ActivityManager$RunningTaskInfo;

        specialinvoke $r9.<android.app.ActivityManager$RunningTaskInfo: void <init>()>();

        r23 = $r9;

        $i7 = r2.<com.android.server.am.TaskRecord: int taskId>;

        r23.<android.app.ActivityManager$RunningTaskInfo: int id> = $i7;

        $r11 = r3.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r10 = virtualinvoke $r11.<android.content.Intent: android.content.ComponentName getComponent()>();

        r23.<android.app.ActivityManager$RunningTaskInfo: android.content.ComponentName baseActivity> = $r10;

        $r13 = r4.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r12 = virtualinvoke $r13.<android.content.Intent: android.content.ComponentName getComponent()>();

        r23.<android.app.ActivityManager$RunningTaskInfo: android.content.ComponentName topActivity> = $r12;

        $l8 = r2.<com.android.server.am.TaskRecord: long lastActiveTime>;

        r23.<android.app.ActivityManager$RunningTaskInfo: long lastActiveTime> = $l8;

        $r14 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r14 == null goto label09;

        $r15 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r17 = $r15.<com.android.server.am.TaskRecord: java.lang.CharSequence lastDescription>;

        r23.<android.app.ActivityManager$RunningTaskInfo: java.lang.CharSequence description> = $r17;

     label09:
        r23.<android.app.ActivityManager$RunningTaskInfo: int numActivities> = i2;

        r23.<android.app.ActivityManager$RunningTaskInfo: int numRunning> = i3;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r23);

     label10:
        i1 = i1 + -1;

        goto label01;

     label11:
        return;
    }

    public void unhandledBackLocked()
    {
        com.android.server.am.ActivityStack r0;
        int i0, i1, $i2, $i3;
        java.util.ArrayList r1, $r2, $r3;
        java.lang.Object $r4, $r6;
        com.android.server.am.TaskRecord $r5;
        com.android.server.am.ActivityRecord $r7;

        r0 := @this: com.android.server.am.ActivityStack;

        $r2 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i0 = $i2 - 1;

        if i0 < 0 goto label1;

        $r3 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r5 = (com.android.server.am.TaskRecord) $r4;

        r1 = $r5.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

        if i1 <= 0 goto label1;

        $r6 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r7 = (com.android.server.am.ActivityRecord) $r6;

        virtualinvoke r0.<com.android.server.am.ActivityStack: boolean finishActivityLocked(com.android.server.am.ActivityRecord,int,android.content.Intent,java.lang.String,boolean)>($r7, 0, null, "unhandled-back", 1);

     label1:
        return;
    }

    boolean handleAppDiedLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ProcessRecord r1, $r5, $r7;
        com.android.server.am.ActivityRecord $r2, $r3, $r4, $r6;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r2 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity>;

        if $r2 == null goto label1;

        $r6 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity>;

        $r7 = $r6.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r7 != r1 goto label1;

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity> = null;

     label1:
        $r3 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastPausedActivity>;

        if $r3 == null goto label2;

        $r4 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastPausedActivity>;

        $r5 = $r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r5 != r1 goto label2;

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastPausedActivity> = null;

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mLastNoHistoryActivity> = null;

     label2:
        $z0 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean removeHistoryRecordsForAppLocked(com.android.server.am.ProcessRecord)>(r1);

        return $z0;
    }

    void handleAppCrashLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.ProcessRecord r1, $r9;
        int i0, i1, $i2, $i3;
        java.util.ArrayList r2, $r4, $r5;
        com.android.server.am.ActivityRecord r3;
        java.lang.Object $r6, $r8;
        com.android.server.am.TaskRecord $r7;
        java.lang.StringBuilder $r10, $r12, $r16;
        android.content.Intent $r11;
        java.lang.String $r13, $r15;
        android.content.ComponentName $r14;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        $r4 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label5;

        $r5 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r7 = (com.android.server.am.TaskRecord) $r6;

        r2 = $r7.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i3 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label2:
        if i1 < 0 goto label4;

        $r8 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.server.am.ActivityRecord) $r8;

        $r9 = r3.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r9 != r1 goto label3;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Force finishing activity ");

        $r11 = r3.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r14 = virtualinvoke $r11.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r13 = virtualinvoke $r14.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityManager", $r15);

        r3.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app> = null;

        virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord finishCurrentActivityLocked(com.android.server.am.ActivityRecord,int,boolean)>(r3, 0, 0);

     label3:
        i1 = i1 + -1;

        goto label2;

     label4:
        i0 = i0 + -1;

        goto label1;

     label5:
        return;
    }

    boolean dumpActivitiesLocked(java.io.FileDescriptor, java.io.PrintWriter, boolean, boolean, java.lang.String, boolean, java.lang.String)
    {
        com.android.server.am.ActivityStack r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        boolean z0, z1, z2, z3, $z4, $z6;
        java.lang.String r3, r4, $r17;
        int i0, $i1, $i2;
        com.android.server.am.TaskRecord r5, $r10;
        java.util.ArrayList $r6, $r7, $r9, $r12;
        java.lang.Object $r8, $r11;
        java.lang.StringBuilder $r13, $r16, $r18;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r3 := @parameter4: java.lang.String;

        z2 := @parameter5: boolean;

        r4 := @parameter6: java.lang.String;

        z3 = 0;

        $r6 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label5;

        $r7 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r5 = (com.android.server.am.TaskRecord) $r8;

        $r9 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r11 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r10 = (com.android.server.am.TaskRecord) $r11;

        $r12 = $r10.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        if z0 != 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Task id #");

        $i2 = r5.<com.android.server.am.TaskRecord: int taskId>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $z6 = staticinvoke <com.android.server.am.ActivityStackSupervisor: boolean dumpHistoryList(java.io.FileDescriptor,java.io.PrintWriter,java.util.List,java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.String,boolean,java.lang.String,java.lang.String)>(r1, r2, $r12, "    ", "Hist", 1, $z4, z1, r3, z2, r4, $r17);

        z3 = z3 | $z6;

        if z3 == 0 goto label4;

        r4 = null;

     label4:
        i0 = i0 + -1;

        goto label1;

     label5:
        return z3;
    }

    java.util.ArrayList getDumpActivitiesLocked(java.lang.String)
    {
        com.android.server.am.ActivityStack r0;
        java.lang.String r1, $r6, $r7;
        java.util.ArrayList r2, r3, $r5, $r9, $r10, $r13, $r17, $r19, $r21, $r24, $r25;
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7;
        com.android.server.am.ActivityRecord r4;
        boolean $z0, $z1, $z2, $z4;
        com.android.server.am.ActivityManagerService$ItemMatcher $r8, r27;
        com.android.server.am.TaskRecord $r11, $r20, $r23;
        java.lang.Object $r12, $r14, $r18, $r22, $r26;
        android.content.ComponentName $r15;
        android.content.Intent $r16;
        java.util.Iterator r28;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: java.lang.String;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = $r5;

        $r6 = "all";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label03;

        $r21 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i5 = virtualinvoke $r21.<java.util.ArrayList: int size()>();

        i0 = $i5 - 1;

     label01:
        if i0 < 0 goto label02;

        $r25 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r26 = virtualinvoke $r25.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r23 = (com.android.server.am.TaskRecord) $r26;

        $r24 = $r23.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        virtualinvoke r2.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r24);

        i0 = i0 + -1;

        goto label01;

     label02:
        goto label10;

     label03:
        $r7 = "top";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label05;

        $r17 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i3 = virtualinvoke $r17.<java.util.ArrayList: int size()>();

        i6 = $i3 - 1;

        if i6 < 0 goto label04;

        $r19 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r18 = virtualinvoke $r19.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r20 = (com.android.server.am.TaskRecord) $r18;

        r3 = $r20.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i4 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i1 = $i4 - 1;

        if i1 < 0 goto label04;

        $r22 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

     label04:
        goto label10;

     label05:
        $r8 = new com.android.server.am.ActivityManagerService$ItemMatcher;

        specialinvoke $r8.<com.android.server.am.ActivityManagerService$ItemMatcher: void <init>()>();

        r27 = $r8;

        virtualinvoke r27.<com.android.server.am.ActivityManagerService$ItemMatcher: void build(java.lang.String)>(r1);

        $r9 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i2 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        i7 = $i2 - 1;

     label06:
        if i7 < 0 goto label10;

        $r10 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r12 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        $r11 = (com.android.server.am.TaskRecord) $r12;

        $r13 = $r11.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        r28 = virtualinvoke $r13.<java.util.ArrayList: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $r14 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.am.ActivityRecord) $r14;

        $r16 = r4.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r15 = virtualinvoke $r16.<android.content.Intent: android.content.ComponentName getComponent()>();

        $z4 = virtualinvoke r27.<com.android.server.am.ActivityManagerService$ItemMatcher: boolean match(java.lang.Object,android.content.ComponentName)>(r4, $r15);

        if $z4 == 0 goto label08;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label08:
        goto label07;

     label09:
        i7 = i7 + -1;

        goto label06;

     label10:
        return r2;
    }

    com.android.server.am.ActivityRecord restartPackage(java.lang.String)
    {
        com.android.server.am.ActivityStack r0;
        java.lang.String r1, $r11;
        com.android.server.am.ActivityRecord r2, r4;
        int i0, i1, $i2, $i3;
        java.util.ArrayList r3, $r5, $r6;
        java.lang.Object $r7, $r9;
        com.android.server.am.TaskRecord $r8;
        android.content.pm.ActivityInfo $r10;
        boolean $z0, $z1;
        com.android.server.am.ProcessRecord $r12;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        $r5 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i2 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i0 = $i2 - 1;

     label1:
        if i0 < 0 goto label5;

        $r6 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r8 = (com.android.server.am.TaskRecord) $r7;

        r3 = $r8.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i3 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

     label2:
        if i1 < 0 goto label4;

        $r9 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r4 = (com.android.server.am.ActivityRecord) $r9;

        $r10 = r4.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info>;

        $r11 = $r10.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        r4.<com.android.server.am.ActivityRecord: boolean forceNewConfig> = 1;

        if r2 == null goto label3;

        if r4 != r2 goto label3;

        $z1 = r4.<com.android.server.am.ActivityRecord: boolean visible>;

        if $z1 == 0 goto label3;

        $r12 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke r4.<com.android.server.am.ActivityRecord: void startFreezingScreenLocked(com.android.server.am.ProcessRecord,int)>($r12, 256);

     label3:
        i1 = i1 + -1;

        goto label2;

     label4:
        i0 = i0 + -1;

        goto label1;

     label5:
        return r2;
    }

    void removeTask(com.android.server.am.TaskRecord)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.TaskRecord r1, r3, $r27;
        com.android.server.am.ActivityRecord r2;
        int i0, i1, $i2, $i3, $i4, $i5;
        com.android.server.am.ActivityStackSupervisor $r5, $r15;
        com.android.server.wm.WindowManagerService $r6;
        java.util.ArrayList $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r16, $r20, $r24;
        boolean $z0, $z2, $z3, $z4, $z6, $z7, $z8, $z10, $z11, z12;
        com.android.server.am.ActivityStackSupervisor$ActivityContainer $r12;
        android.service.voice.IVoiceInteractionSession $r17, $r22;
        com.android.server.am.ActivityManagerService $r18, $r19;
        android.content.Intent $r21;
        com.android.server.am.TaskPersister $r23;
        java.lang.Object $r25;
        android.os.RemoteException $r26;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        $r5 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r5.<com.android.server.am.ActivityStackSupervisor: void endLockTaskModeIfTaskEnding(com.android.server.am.TaskRecord)>(r1);

        $r6 = r0.<com.android.server.am.ActivityStack: com.android.server.wm.WindowManagerService mWindowManager>;

        $i2 = r1.<com.android.server.am.TaskRecord: int taskId>;

        virtualinvoke $r6.<com.android.server.wm.WindowManagerService: void removeTask(int)>($i2);

        r2 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if r2 == null goto label01;

        $r27 = r2.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r27 != r1 goto label01;

        r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity> = null;

     label01:
        $r7 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        i0 = virtualinvoke $r7.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        $r8 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i3 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        i1 = $i3 - 1;

        $z0 = virtualinvoke r1.<com.android.server.am.TaskRecord: boolean isOverHomeStack()>();

        if $z0 == 0 goto label02;

        if i0 >= i1 goto label02;

        $r24 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i5 = i0 + 1;

        $r25 = virtualinvoke $r24.<java.util.ArrayList: java.lang.Object get(int)>($i5);

        r3 = (com.android.server.am.TaskRecord) $r25;

        $z11 = virtualinvoke r3.<com.android.server.am.TaskRecord: boolean isOverHomeStack()>();

        if $z11 != 0 goto label02;

        virtualinvoke r3.<com.android.server.am.TaskRecord: void setTaskToReturnTo(int)>(1);

     label02:
        $r9 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        virtualinvoke $r9.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        virtualinvoke r0.<com.android.server.am.ActivityStack: void updateTaskMovement(com.android.server.am.TaskRecord,boolean)>(r1, 1);

        $r10 = r1.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $z2 = virtualinvoke $r10.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 == 0 goto label10;

        $r17 = r1.<com.android.server.am.TaskRecord: android.service.voice.IVoiceInteractionSession voiceSession>;

        if $r17 == null goto label03;

        $z10 = 1;

        goto label04;

     label03:
        $z10 = 0;

     label04:
        z12 = $z10;

        if z12 == 0 goto label08;

     label05:
        $r22 = r1.<com.android.server.am.TaskRecord: android.service.voice.IVoiceInteractionSession voiceSession>;

        $r21 = r1.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        $i4 = r1.<com.android.server.am.TaskRecord: int taskId>;

        interfaceinvoke $r22.<android.service.voice.IVoiceInteractionSession: void taskFinished(android.content.Intent,int)>($r21, $i4);

     label06:
        goto label08;

     label07:
        $r26 := @caughtexception;

     label08:
        $z8 = virtualinvoke r1.<com.android.server.am.TaskRecord: boolean autoRemoveFromRecents()>();

        if $z8 != 0 goto label09;

        if z12 == 0 goto label10;

     label09:
        $r19 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r20 = $r19.<com.android.server.am.ActivityManagerService: java.util.ArrayList mRecentTasks>;

        virtualinvoke $r20.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r18 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        $r23 = $r18.<com.android.server.am.ActivityManagerService: com.android.server.am.TaskPersister mTaskPersister>;

        virtualinvoke r1.<com.android.server.am.TaskRecord: void removedFromRecents(com.android.server.am.TaskPersister)>($r23);

     label10:
        $r11 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $z4 = virtualinvoke $r11.<java.util.ArrayList: boolean isEmpty()>();

        if $z4 == 0 goto label15;

        $z3 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean isOnHomeDisplay()>();

        if $z3 == 0 goto label13;

        $r15 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $z7 = virtualinvoke r0.<com.android.server.am.ActivityStack: boolean isHomeStack()>();

        if $z7 != 0 goto label11;

        $z6 = 1;

        goto label12;

     label11:
        $z6 = 0;

     label12:
        virtualinvoke $r15.<com.android.server.am.ActivityStackSupervisor: void moveHomeStack(boolean)>($z6);

     label13:
        $r13 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mStacks>;

        if $r13 == null goto label14;

        $r14 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mStacks>;

        virtualinvoke $r14.<java.util.ArrayList: boolean remove(java.lang.Object)>(r0);

        $r16 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mStacks>;

        virtualinvoke $r16.<java.util.ArrayList: void add(int,java.lang.Object)>(0, r0);

     label14:
        $r12 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityStackSupervisor$ActivityContainer mActivityContainer>;

        virtualinvoke $r12.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void onTaskListEmptyLocked()>();

     label15:
        return;

        catch android.os.RemoteException from label05 to label06 with label07;
    }

    com.android.server.am.TaskRecord createTaskRecord(int, android.content.pm.ActivityInfo, android.content.Intent, android.service.voice.IVoiceInteractionSession, com.android.internal.app.IVoiceInteractor, boolean)
    {
        com.android.server.am.ActivityStack r0;
        int i0;
        android.content.pm.ActivityInfo r1;
        android.content.Intent r2;
        android.service.voice.IVoiceInteractionSession r3;
        com.android.internal.app.IVoiceInteractor r4;
        boolean z0;
        com.android.server.am.TaskRecord r5, $r6;
        com.android.server.am.ActivityManagerService $r7;

        r0 := @this: com.android.server.am.ActivityStack;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.pm.ActivityInfo;

        r2 := @parameter2: android.content.Intent;

        r3 := @parameter3: android.service.voice.IVoiceInteractionSession;

        r4 := @parameter4: com.android.internal.app.IVoiceInteractor;

        z0 := @parameter5: boolean;

        $r6 = new com.android.server.am.TaskRecord;

        $r7 = r0.<com.android.server.am.ActivityStack: com.android.server.am.ActivityManagerService mService>;

        specialinvoke $r6.<com.android.server.am.TaskRecord: void <init>(com.android.server.am.ActivityManagerService,int,android.content.pm.ActivityInfo,android.content.Intent,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor)>($r7, i0, r1, r2, r3, r4);

        r5 = $r6;

        virtualinvoke r0.<com.android.server.am.ActivityStack: void addTask(com.android.server.am.TaskRecord,boolean,boolean)>(r5, z0, 0);

        return r5;
    }

    java.util.ArrayList getAllTasks()
    {
        com.android.server.am.ActivityStack r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: com.android.server.am.ActivityStack;

        $r1 = new java.util.ArrayList;

        $r2 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        return $r1;
    }

    void addTask(com.android.server.am.TaskRecord, boolean, boolean)
    {
        com.android.server.am.ActivityStack r0;
        com.android.server.am.TaskRecord r1;
        boolean z0, z1;
        java.util.ArrayList $r3;
        android.service.voice.IVoiceInteractionSession $r4, $r6;
        int $i0;
        android.content.Intent $r5;
        android.os.RemoteException $r7;

        r0 := @this: com.android.server.am.ActivityStack;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r1.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack> = r0;

        if z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.am.ActivityStack: void insertTaskAtTop(com.android.server.am.TaskRecord)>(r1);

        goto label2;

     label1:
        $r3 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        virtualinvoke $r3.<java.util.ArrayList: void add(int,java.lang.Object)>(0, r1);

        virtualinvoke r0.<com.android.server.am.ActivityStack: void updateTaskMovement(com.android.server.am.TaskRecord,boolean)>(r1, 0);

     label2:
        if z1 != 0 goto label6;

        $r4 = r1.<com.android.server.am.TaskRecord: android.service.voice.IVoiceInteractionSession voiceSession>;

        if $r4 == null goto label6;

     label3:
        $r6 = r1.<com.android.server.am.TaskRecord: android.service.voice.IVoiceInteractionSession voiceSession>;

        $r5 = r1.<com.android.server.am.TaskRecord: android.content.Intent intent>;

        $i0 = r1.<com.android.server.am.TaskRecord: int taskId>;

        interfaceinvoke $r6.<android.service.voice.IVoiceInteractionSession: void taskStarted(android.content.Intent,int)>($r5, $i0);

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;

     label6:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public int getStackId()
    {
        com.android.server.am.ActivityStack r0;
        int $i0;

        r0 := @this: com.android.server.am.ActivityStack;

        $i0 = r0.<com.android.server.am.ActivityStack: int mStackId>;

        return $i0;
    }

    public java.lang.String toString()
    {
        com.android.server.am.ActivityStack r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6, $r7, $r9, $r10;
        int $i0, $i1, $i2;
        java.lang.String $r3, $r11;
        java.util.ArrayList $r8;

        r0 := @this: com.android.server.am.ActivityStack;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ActivityStack{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stackId=");

        $i1 = r0.<com.android.server.am.ActivityStack: int mStackId>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r8 = r0.<com.android.server.am.ActivityStack: java.util.ArrayList mTaskHistory>;

        $i2 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tasks}");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    static void <clinit>()
    {
        boolean $z0;

        <com.android.server.am.ActivityStack: int FINISH_AFTER_VISIBLE> = 2;

        <com.android.server.am.ActivityStack: int FINISH_AFTER_PAUSE> = 1;

        <com.android.server.am.ActivityStack: int FINISH_IMMEDIATELY> = 0;

        <com.android.server.am.ActivityStack: int RELEASE_BACKGROUND_RESOURCES_TIMEOUT_MSG> = 107;

        <com.android.server.am.ActivityStack: int TRANSLUCENT_TIMEOUT_MSG> = 106;

        <com.android.server.am.ActivityStack: int DESTROY_ACTIVITIES_MSG> = 105;

        <com.android.server.am.ActivityStack: int STOP_TIMEOUT_MSG> = 104;

        <com.android.server.am.ActivityStack: int LAUNCH_TICK_MSG> = 103;

        <com.android.server.am.ActivityStack: int DESTROY_TIMEOUT_MSG> = 102;

        <com.android.server.am.ActivityStack: int PAUSE_TIMEOUT_MSG> = 101;

        <com.android.server.am.ActivityStack: long TRANSLUCENT_CONVERSION_TIMEOUT> = 2000L;

        <com.android.server.am.ActivityStack: boolean SHOW_APP_STARTING_PREVIEW> = 1;

        <com.android.server.am.ActivityStack: long START_WARN_TIME> = 5000L;

        <com.android.server.am.ActivityStack: long ACTIVITY_INACTIVE_RESET_TIME> = 0L;

        <com.android.server.am.ActivityStack: int DESTROY_TIMEOUT> = 10000;

        <com.android.server.am.ActivityStack: int STOP_TIMEOUT> = 10000;

        <com.android.server.am.ActivityStack: int PAUSE_TIMEOUT> = 500;

        <com.android.server.am.ActivityStack: int LAUNCH_TICK> = 500;

        $z0 = staticinvoke <android.app.ActivityManager: boolean isLowRamDeviceStatic()>();

        <com.android.server.am.ActivityStack: boolean SCREENSHOT_FORCE_565> = $z0;

        return;
    }
}
