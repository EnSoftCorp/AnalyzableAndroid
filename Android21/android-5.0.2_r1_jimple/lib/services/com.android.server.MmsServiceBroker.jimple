public class com.android.server.MmsServiceBroker extends com.android.server.SystemService
{
    private static final java.lang.String TAG;
    private static final android.content.ComponentName MMS_SERVICE_COMPONENT;
    private static final int MSG_TRY_CONNECTING;
    private static final android.net.Uri FAKE_SMS_SENT_URI;
    private static final android.net.Uri FAKE_MMS_SENT_URI;
    private static final android.net.Uri FAKE_SMS_DRAFT_URI;
    private static final android.net.Uri FAKE_MMS_DRAFT_URI;
    private static final long SERVICE_CONNECTION_WAIT_TIME_MS;
    private static final long RETRY_DELAY_ON_DISCONNECTION_MS;
    private android.content.Context mContext;
    private volatile com.android.internal.telephony.IMms mService;
    private volatile android.app.AppOpsManager mAppOpsManager;
    private volatile android.content.pm.PackageManager mPackageManager;
    private volatile android.telephony.TelephonyManager mTelephonyManager;
    private final android.os.Handler mConnectionHandler;
    private android.content.ServiceConnection mConnection;

    public void <init>(android.content.Context)
    {
        com.android.server.MmsServiceBroker r0;
        android.content.Context r1;
        com.android.server.MmsServiceBroker$1 $r2;
        com.android.server.MmsServiceBroker$2 $r3;

        r0 := @this: com.android.server.MmsServiceBroker;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        r0.<com.android.server.MmsServiceBroker: android.app.AppOpsManager mAppOpsManager> = null;

        r0.<com.android.server.MmsServiceBroker: android.content.pm.PackageManager mPackageManager> = null;

        r0.<com.android.server.MmsServiceBroker: android.telephony.TelephonyManager mTelephonyManager> = null;

        $r2 = new com.android.server.MmsServiceBroker$1;

        specialinvoke $r2.<com.android.server.MmsServiceBroker$1: void <init>(com.android.server.MmsServiceBroker)>(r0);

        r0.<com.android.server.MmsServiceBroker: android.os.Handler mConnectionHandler> = $r2;

        $r3 = new com.android.server.MmsServiceBroker$2;

        specialinvoke $r3.<com.android.server.MmsServiceBroker$2: void <init>(com.android.server.MmsServiceBroker)>(r0);

        r0.<com.android.server.MmsServiceBroker: android.content.ServiceConnection mConnection> = $r3;

        r0.<com.android.server.MmsServiceBroker: android.content.Context mContext> = r1;

        r0.<com.android.server.MmsServiceBroker: com.android.internal.telephony.IMms mService> = null;

        return;
    }

    public void onStart()
    {
        com.android.server.MmsServiceBroker r0;
        com.android.server.MmsServiceBroker$BinderService $r1;

        r0 := @this: com.android.server.MmsServiceBroker;

        $r1 = new com.android.server.MmsServiceBroker$BinderService;

        specialinvoke $r1.<com.android.server.MmsServiceBroker$BinderService: void <init>(com.android.server.MmsServiceBroker,com.android.server.MmsServiceBroker$1)>(r0, null);

        virtualinvoke r0.<com.android.server.MmsServiceBroker: void publishBinderService(java.lang.String,android.os.IBinder)>("imms", $r1);

        return;
    }

    public void systemRunning()
    {
        com.android.server.MmsServiceBroker r0;

        r0 := @this: com.android.server.MmsServiceBroker;

        specialinvoke r0.<com.android.server.MmsServiceBroker: void tryConnecting()>();

        return;
    }

    private void tryConnecting()
    {
        com.android.server.MmsServiceBroker r0, r1;
        android.content.Intent r2, $r7;
        java.lang.SecurityException r3, $r12;
        java.lang.Throwable r4, $r13;
        com.android.internal.telephony.IMms $r6;
        android.content.ComponentName $r8;
        android.content.ServiceConnection $r10;
        android.content.Context $r11;
        boolean $z0;

        r0 := @this: com.android.server.MmsServiceBroker;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("MmsServiceBroker", "Connecting to MmsService");

        r1 = r0;

        entermonitor r0;

     label01:
        $r6 = r0.<com.android.server.MmsServiceBroker: com.android.internal.telephony.IMms mService>;

        if $r6 == null goto label03;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("MmsServiceBroker", "Already connected");

        exitmonitor r1;

     label02:
        return;

     label03:
        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>()>();

        r2 = $r7;

        $r8 = <com.android.server.MmsServiceBroker: android.content.ComponentName MMS_SERVICE_COMPONENT>;

        virtualinvoke r2.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r8);

     label04:
        $r11 = r0.<com.android.server.MmsServiceBroker: android.content.Context mContext>;

        $r10 = r0.<com.android.server.MmsServiceBroker: android.content.ServiceConnection mConnection>;

        $z0 = virtualinvoke $r11.<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>(r2, $r10, 1);

        if $z0 != 0 goto label05;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("MmsServiceBroker", "Failed to bind to MmsService");

     label05:
        goto label07;

     label06:
        $r12 := @caughtexception;

        r3 = $r12;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MmsServiceBroker", "Forbidden to bind to MmsService", r3);

     label07:
        exitmonitor r1;

     label08:
        goto label11;

     label09:
        $r13 := @caughtexception;

        r4 = $r13;

        exitmonitor r1;

     label10:
        throw r4;

     label11:
        return;

        catch java.lang.SecurityException from label04 to label05 with label06;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private void ensureService()
    {
        com.android.server.MmsServiceBroker r0, r1;
        long l0, l1, $l4, $l6;
        java.lang.InterruptedException r2, $r11;
        java.lang.Throwable r3, $r12;
        com.android.internal.telephony.IMms $r5, $r10;
        android.os.Handler $r6, $r7;
        android.os.Message $r8;
        byte $b3;
        java.lang.RuntimeException $r9;

        r0 := @this: com.android.server.MmsServiceBroker;

        r1 = r0;

        entermonitor r0;

     label01:
        $r5 = r0.<com.android.server.MmsServiceBroker: com.android.internal.telephony.IMms mService>;

        if $r5 != null goto label10;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("MmsServiceBroker", "MmsService not connected. Try connecting...");

        $r7 = r0.<com.android.server.MmsServiceBroker: android.os.Handler mConnectionHandler>;

        $r6 = r0.<com.android.server.MmsServiceBroker: android.os.Handler mConnectionHandler>;

        $r8 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage(int)>(1);

        virtualinvoke $r7.<android.os.Handler: boolean sendMessage(android.os.Message)>($r8);

        $l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l0 = $l4 + 4000L;

        l1 = 4000L;

     label02:
        $b3 = l1 cmp 0L;

        if $b3 <= 0 goto label09;

     label03:
        virtualinvoke r0.<java.lang.Object: void wait(long)>(l1);

     label04:
        goto label06;

     label05:
        $r11 := @caughtexception;

        r2 = $r11;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MmsServiceBroker", "Connection wait interrupted", r2);

     label06:
        $r10 = r0.<com.android.server.MmsServiceBroker: com.android.internal.telephony.IMms mService>;

        if $r10 == null goto label08;

        exitmonitor r1;

     label07:
        return;

     label08:
        $l6 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = l0 - $l6;

        goto label02;

     label09:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("MmsServiceBroker", "Can not connect to MmsService (timed out)");

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>("Timed out in connecting to MmsService");

        throw $r9;

     label10:
        exitmonitor r1;

     label11:
        goto label14;

     label12:
        $r12 := @caughtexception;

        r3 = $r12;

        exitmonitor r1;

     label13:
        throw r3;

     label14:
        return;

        catch java.lang.InterruptedException from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label07 with label12;
        catch java.lang.Throwable from label08 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private com.android.internal.telephony.IMms getServiceGuarded()
    {
        com.android.server.MmsServiceBroker r0;
        com.android.internal.telephony.IMms $r1;

        r0 := @this: com.android.server.MmsServiceBroker;

        specialinvoke r0.<com.android.server.MmsServiceBroker: void ensureService()>();

        $r1 = r0.<com.android.server.MmsServiceBroker: com.android.internal.telephony.IMms mService>;

        return $r1;
    }

    private android.app.AppOpsManager getAppOpsManager()
    {
        com.android.server.MmsServiceBroker r0;
        android.app.AppOpsManager $r1, $r2, $r5;
        android.content.Context $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.MmsServiceBroker;

        $r1 = r0.<com.android.server.MmsServiceBroker: android.app.AppOpsManager mAppOpsManager>;

        if $r1 != null goto label1;

        $r3 = r0.<com.android.server.MmsServiceBroker: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("appops");

        $r5 = (android.app.AppOpsManager) $r4;

        r0.<com.android.server.MmsServiceBroker: android.app.AppOpsManager mAppOpsManager> = $r5;

     label1:
        $r2 = r0.<com.android.server.MmsServiceBroker: android.app.AppOpsManager mAppOpsManager>;

        return $r2;
    }

    private android.content.pm.PackageManager getPackageManager()
    {
        com.android.server.MmsServiceBroker r0;
        android.content.pm.PackageManager $r1, $r2, $r4;
        android.content.Context $r3;

        r0 := @this: com.android.server.MmsServiceBroker;

        $r1 = r0.<com.android.server.MmsServiceBroker: android.content.pm.PackageManager mPackageManager>;

        if $r1 != null goto label1;

        $r3 = r0.<com.android.server.MmsServiceBroker: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r0.<com.android.server.MmsServiceBroker: android.content.pm.PackageManager mPackageManager> = $r4;

     label1:
        $r2 = r0.<com.android.server.MmsServiceBroker: android.content.pm.PackageManager mPackageManager>;

        return $r2;
    }

    private android.telephony.TelephonyManager getTelephonyManager()
    {
        com.android.server.MmsServiceBroker r0;
        android.telephony.TelephonyManager $r1, $r2, $r5;
        android.content.Context $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.MmsServiceBroker;

        $r1 = r0.<com.android.server.MmsServiceBroker: android.telephony.TelephonyManager mTelephonyManager>;

        if $r1 != null goto label1;

        $r3 = r0.<com.android.server.MmsServiceBroker: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r5 = (android.telephony.TelephonyManager) $r4;

        r0.<com.android.server.MmsServiceBroker: android.telephony.TelephonyManager mTelephonyManager> = $r5;

     label1:
        $r2 = r0.<com.android.server.MmsServiceBroker: android.telephony.TelephonyManager mTelephonyManager>;

        return $r2;
    }

    private void enforceCarrierPrivilege()
    {
        com.android.server.MmsServiceBroker r0;
        java.lang.String[] r1, r2;
        int i0, i1, $i2, $i3;
        java.lang.String r3;
        android.content.pm.PackageManager $r4;
        java.lang.SecurityException $r5;
        android.telephony.TelephonyManager $r6;

        r0 := @this: com.android.server.MmsServiceBroker;

        $r4 = specialinvoke r0.<com.android.server.MmsServiceBroker: android.content.pm.PackageManager getPackageManager()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r1 = virtualinvoke $r4.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>($i2);

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        $r6 = specialinvoke r0.<com.android.server.MmsServiceBroker: android.telephony.TelephonyManager getTelephonyManager()>();

        $i3 = virtualinvoke $r6.<android.telephony.TelephonyManager: int checkCarrierPrivilegesForPackage(java.lang.String)>(r3);

        if $i3 != 1 goto label2;

        return;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r5 = new java.lang.SecurityException;

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>("No carrier privilege");

        throw $r5;
    }

    static void access$000(com.android.server.MmsServiceBroker)
    {
        com.android.server.MmsServiceBroker r0;

        r0 := @parameter0: com.android.server.MmsServiceBroker;

        specialinvoke r0.<com.android.server.MmsServiceBroker: void tryConnecting()>();

        return;
    }

    static com.android.internal.telephony.IMms access$102(com.android.server.MmsServiceBroker, com.android.internal.telephony.IMms)
    {
        com.android.server.MmsServiceBroker r0;
        com.android.internal.telephony.IMms r1;

        r0 := @parameter0: com.android.server.MmsServiceBroker;

        r1 := @parameter1: com.android.internal.telephony.IMms;

        r0.<com.android.server.MmsServiceBroker: com.android.internal.telephony.IMms mService> = r1;

        return r1;
    }

    static android.os.Handler access$200(com.android.server.MmsServiceBroker)
    {
        com.android.server.MmsServiceBroker r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.MmsServiceBroker;

        $r1 = r0.<com.android.server.MmsServiceBroker: android.os.Handler mConnectionHandler>;

        return $r1;
    }

    static android.content.Context access$400(com.android.server.MmsServiceBroker)
    {
        com.android.server.MmsServiceBroker r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.MmsServiceBroker;

        $r1 = r0.<com.android.server.MmsServiceBroker: android.content.Context mContext>;

        return $r1;
    }

    static android.app.AppOpsManager access$500(com.android.server.MmsServiceBroker)
    {
        com.android.server.MmsServiceBroker r0;
        android.app.AppOpsManager $r1;

        r0 := @parameter0: com.android.server.MmsServiceBroker;

        $r1 = specialinvoke r0.<com.android.server.MmsServiceBroker: android.app.AppOpsManager getAppOpsManager()>();

        return $r1;
    }

    static com.android.internal.telephony.IMms access$600(com.android.server.MmsServiceBroker)
    {
        com.android.server.MmsServiceBroker r0;
        com.android.internal.telephony.IMms $r1;

        r0 := @parameter0: com.android.server.MmsServiceBroker;

        $r1 = specialinvoke r0.<com.android.server.MmsServiceBroker: com.android.internal.telephony.IMms getServiceGuarded()>();

        return $r1;
    }

    static void access$700(com.android.server.MmsServiceBroker)
    {
        com.android.server.MmsServiceBroker r0;

        r0 := @parameter0: com.android.server.MmsServiceBroker;

        specialinvoke r0.<com.android.server.MmsServiceBroker: void enforceCarrierPrivilege()>();

        return;
    }

    static android.net.Uri access$800()
    {
        android.net.Uri $r0;

        $r0 = <com.android.server.MmsServiceBroker: android.net.Uri FAKE_SMS_SENT_URI>;

        return $r0;
    }

    static android.net.Uri access$900()
    {
        android.net.Uri $r0;

        $r0 = <com.android.server.MmsServiceBroker: android.net.Uri FAKE_MMS_SENT_URI>;

        return $r0;
    }

    static android.net.Uri access$1000()
    {
        android.net.Uri $r0;

        $r0 = <com.android.server.MmsServiceBroker: android.net.Uri FAKE_SMS_DRAFT_URI>;

        return $r0;
    }

    static android.net.Uri access$1100()
    {
        android.net.Uri $r0;

        $r0 = <com.android.server.MmsServiceBroker: android.net.Uri FAKE_MMS_DRAFT_URI>;

        return $r0;
    }

    static void <clinit>()
    {
        android.content.ComponentName $r0;
        android.net.Uri $r1, $r2, $r3, $r4;

        <com.android.server.MmsServiceBroker: long RETRY_DELAY_ON_DISCONNECTION_MS> = 3000L;

        <com.android.server.MmsServiceBroker: long SERVICE_CONNECTION_WAIT_TIME_MS> = 4000L;

        <com.android.server.MmsServiceBroker: int MSG_TRY_CONNECTING> = 1;

        <com.android.server.MmsServiceBroker: java.lang.String TAG> = "MmsServiceBroker";

        $r0 = new android.content.ComponentName;

        specialinvoke $r0.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("com.android.mms.service", "com.android.mms.service.MmsService");

        <com.android.server.MmsServiceBroker: android.content.ComponentName MMS_SERVICE_COMPONENT> = $r0;

        $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://sms/sent/0");

        <com.android.server.MmsServiceBroker: android.net.Uri FAKE_SMS_SENT_URI> = $r1;

        $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://mms/sent/0");

        <com.android.server.MmsServiceBroker: android.net.Uri FAKE_MMS_SENT_URI> = $r2;

        $r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://sms/draft/0");

        <com.android.server.MmsServiceBroker: android.net.Uri FAKE_SMS_DRAFT_URI> = $r3;

        $r4 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://mms/draft/0");

        <com.android.server.MmsServiceBroker: android.net.Uri FAKE_MMS_DRAFT_URI> = $r4;

        return;
    }
}
