class com.android.server.TelephonyRegistry extends com.android.internal.telephony.ITelephonyRegistry$Stub
{
    private static final java.lang.String TAG;
    private static final boolean DBG;
    private static final boolean DBG_LOC;
    private static final boolean VDBG;
    private final android.content.Context mContext;
    private final java.util.ArrayList mRemoveList;
    private final java.util.ArrayList mRecords;
    private final com.android.internal.app.IBatteryStats mBatteryStats;
    private int mNumPhones;
    private int[] mCallState;
    private java.lang.String[] mCallIncomingNumber;
    private android.telephony.ServiceState[] mServiceState;
    private android.telephony.SignalStrength[] mSignalStrength;
    private boolean[] mMessageWaiting;
    private boolean[] mCallForwarding;
    private int[] mDataActivity;
    private int[] mDataConnectionState;
    private boolean[] mDataConnectionPossible;
    private java.lang.String[] mDataConnectionReason;
    private java.lang.String[] mDataConnectionApn;
    private java.util.ArrayList mConnectedApns;
    private android.net.LinkProperties[] mDataConnectionLinkProperties;
    private android.net.NetworkCapabilities[] mDataConnectionNetworkCapabilities;
    private android.os.Bundle[] mCellLocation;
    private int[] mDataConnectionNetworkType;
    private int mOtaspMode;
    private java.util.ArrayList mCellInfo;
    private android.telephony.VoLteServiceState mVoLteServiceState;
    private android.telephony.DataConnectionRealTimeInfo mDcRtInfo;
    private int mRingingCallState;
    private int mForegroundCallState;
    private int mBackgroundCallState;
    private android.telephony.PreciseCallState mPreciseCallState;
    private android.telephony.PreciseDataConnectionState mPreciseDataConnectionState;
    static final int PHONE_STATE_PERMISSION_MASK;
    static final int PRECISE_PHONE_STATE_PERMISSION_MASK;
    private static final int MSG_USER_SWITCHED;
    private static final int MSG_UPDATE_DEFAULT_SUB;
    private final android.os.Handler mHandler;
    private final android.content.BroadcastReceiver mBroadcastReceiver;
    private com.android.server.TelephonyRegistry$LogSSC[] logSSC;
    private int next;

    void <init>(android.content.Context)
    {
        com.android.server.TelephonyRegistry r0;
        android.content.Context r1;
        android.telephony.CellLocation r2;
        int i0, i1, i2;
        java.util.ArrayList $r3, $r4, $r14, $r28, $r29, $r48;
        android.telephony.VoLteServiceState $r5;
        android.telephony.DataConnectionRealTimeInfo $r6;
        android.telephony.PreciseCallState $r7;
        android.telephony.PreciseDataConnectionState $r8;
        com.android.server.TelephonyRegistry$1 $r9;
        com.android.server.TelephonyRegistry$2 $r10;
        com.android.server.TelephonyRegistry$LogSSC[] $r11;
        com.android.internal.app.IBatteryStats $r12;
        android.telephony.TelephonyManager $r13;
        int[] $r15, $r16, $r17, $r19, $r32, $r33, $r38;
        java.lang.String[] $r18, $r24, $r25, $r39, $r45, $r46;
        android.telephony.SignalStrength[] $r20, $r43;
        android.telephony.ServiceState[] $r21, $r37;
        boolean[] $r22, $r23, $r27, $r40, $r41, $r47;
        android.os.Bundle[] $r26, $r34, $r49;
        android.net.LinkProperties[] $r30;
        android.net.NetworkCapabilities[] $r31;
        android.os.Bundle $r35, $r44;
        android.telephony.ServiceState $r36;
        android.telephony.SignalStrength $r42;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.internal.telephony.ITelephonyRegistry$Stub: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords> = $r4;

        r0.<com.android.server.TelephonyRegistry: int mOtaspMode> = 1;

        r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mCellInfo> = null;

        $r5 = new android.telephony.VoLteServiceState;

        specialinvoke $r5.<android.telephony.VoLteServiceState: void <init>()>();

        r0.<com.android.server.TelephonyRegistry: android.telephony.VoLteServiceState mVoLteServiceState> = $r5;

        $r6 = new android.telephony.DataConnectionRealTimeInfo;

        specialinvoke $r6.<android.telephony.DataConnectionRealTimeInfo: void <init>()>();

        r0.<com.android.server.TelephonyRegistry: android.telephony.DataConnectionRealTimeInfo mDcRtInfo> = $r6;

        r0.<com.android.server.TelephonyRegistry: int mRingingCallState> = 0;

        r0.<com.android.server.TelephonyRegistry: int mForegroundCallState> = 0;

        r0.<com.android.server.TelephonyRegistry: int mBackgroundCallState> = 0;

        $r7 = new android.telephony.PreciseCallState;

        specialinvoke $r7.<android.telephony.PreciseCallState: void <init>()>();

        r0.<com.android.server.TelephonyRegistry: android.telephony.PreciseCallState mPreciseCallState> = $r7;

        $r8 = new android.telephony.PreciseDataConnectionState;

        specialinvoke $r8.<android.telephony.PreciseDataConnectionState: void <init>()>();

        r0.<com.android.server.TelephonyRegistry: android.telephony.PreciseDataConnectionState mPreciseDataConnectionState> = $r8;

        $r9 = new com.android.server.TelephonyRegistry$1;

        specialinvoke $r9.<com.android.server.TelephonyRegistry$1: void <init>(com.android.server.TelephonyRegistry)>(r0);

        r0.<com.android.server.TelephonyRegistry: android.os.Handler mHandler> = $r9;

        $r10 = new com.android.server.TelephonyRegistry$2;

        specialinvoke $r10.<com.android.server.TelephonyRegistry$2: void <init>(com.android.server.TelephonyRegistry)>(r0);

        r0.<com.android.server.TelephonyRegistry: android.content.BroadcastReceiver mBroadcastReceiver> = $r10;

        $r11 = newarray (com.android.server.TelephonyRegistry$LogSSC)[10];

        r0.<com.android.server.TelephonyRegistry: com.android.server.TelephonyRegistry$LogSSC[] logSSC> = $r11;

        r0.<com.android.server.TelephonyRegistry: int next> = 0;

        r2 = staticinvoke <android.telephony.CellLocation: android.telephony.CellLocation getEmpty()>();

        r0.<com.android.server.TelephonyRegistry: android.content.Context mContext> = r1;

        $r12 = staticinvoke <com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats getService()>();

        r0.<com.android.server.TelephonyRegistry: com.android.internal.app.IBatteryStats mBatteryStats> = $r12;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mConnectedApns> = $r14;

        $r13 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        i0 = virtualinvoke $r13.<android.telephony.TelephonyManager: int getPhoneCount()>();

        r0.<com.android.server.TelephonyRegistry: int mNumPhones> = i0;

        $r15 = newarray (int)[i0];

        r0.<com.android.server.TelephonyRegistry: int[] mCallState> = $r15;

        $r17 = newarray (int)[i0];

        r0.<com.android.server.TelephonyRegistry: int[] mDataActivity> = $r17;

        $r16 = newarray (int)[i0];

        r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionState> = $r16;

        $r19 = newarray (int)[i0];

        r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionNetworkType> = $r19;

        $r18 = newarray (java.lang.String)[i0];

        r0.<com.android.server.TelephonyRegistry: java.lang.String[] mCallIncomingNumber> = $r18;

        $r21 = newarray (android.telephony.ServiceState)[i0];

        r0.<com.android.server.TelephonyRegistry: android.telephony.ServiceState[] mServiceState> = $r21;

        $r20 = newarray (android.telephony.SignalStrength)[i0];

        r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength[] mSignalStrength> = $r20;

        $r23 = newarray (boolean)[i0];

        r0.<com.android.server.TelephonyRegistry: boolean[] mMessageWaiting> = $r23;

        $r22 = newarray (boolean)[i0];

        r0.<com.android.server.TelephonyRegistry: boolean[] mDataConnectionPossible> = $r22;

        $r25 = newarray (java.lang.String)[i0];

        r0.<com.android.server.TelephonyRegistry: java.lang.String[] mDataConnectionReason> = $r25;

        $r24 = newarray (java.lang.String)[i0];

        r0.<com.android.server.TelephonyRegistry: java.lang.String[] mDataConnectionApn> = $r24;

        $r27 = newarray (boolean)[i0];

        r0.<com.android.server.TelephonyRegistry: boolean[] mCallForwarding> = $r27;

        $r26 = newarray (android.os.Bundle)[i0];

        r0.<com.android.server.TelephonyRegistry: android.os.Bundle[] mCellLocation> = $r26;

        $r30 = newarray (android.net.LinkProperties)[i0];

        r0.<com.android.server.TelephonyRegistry: android.net.LinkProperties[] mDataConnectionLinkProperties> = $r30;

        $r31 = newarray (android.net.NetworkCapabilities)[i0];

        r0.<com.android.server.TelephonyRegistry: android.net.NetworkCapabilities[] mDataConnectionNetworkCapabilities> = $r31;

        $r28 = new java.util.ArrayList;

        specialinvoke $r28.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mCellInfo> = $r28;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r32 = r0.<com.android.server.TelephonyRegistry: int[] mCallState>;

        $r32[i1] = 0;

        $r33 = r0.<com.android.server.TelephonyRegistry: int[] mDataActivity>;

        $r33[i1] = 0;

        $r38 = r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionState>;

        $r38[i1] = -1;

        $r39 = r0.<com.android.server.TelephonyRegistry: java.lang.String[] mCallIncomingNumber>;

        $r39[i1] = "";

        $r37 = r0.<com.android.server.TelephonyRegistry: android.telephony.ServiceState[] mServiceState>;

        $r36 = new android.telephony.ServiceState;

        specialinvoke $r36.<android.telephony.ServiceState: void <init>()>();

        $r37[i1] = $r36;

        $r43 = r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength[] mSignalStrength>;

        $r42 = new android.telephony.SignalStrength;

        specialinvoke $r42.<android.telephony.SignalStrength: void <init>()>();

        $r43[i1] = $r42;

        $r40 = r0.<com.android.server.TelephonyRegistry: boolean[] mMessageWaiting>;

        $r40[i1] = 0;

        $r41 = r0.<com.android.server.TelephonyRegistry: boolean[] mCallForwarding>;

        $r41[i1] = 0;

        $r47 = r0.<com.android.server.TelephonyRegistry: boolean[] mDataConnectionPossible>;

        $r47[i1] = 0;

        $r46 = r0.<com.android.server.TelephonyRegistry: java.lang.String[] mDataConnectionReason>;

        $r46[i1] = "";

        $r45 = r0.<com.android.server.TelephonyRegistry: java.lang.String[] mDataConnectionApn>;

        $r45[i1] = "";

        $r49 = r0.<com.android.server.TelephonyRegistry: android.os.Bundle[] mCellLocation>;

        $r44 = new android.os.Bundle;

        specialinvoke $r44.<android.os.Bundle: void <init>()>();

        $r49[i1] = $r44;

        $r48 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mCellInfo>;

        virtualinvoke $r48.<java.util.ArrayList: void add(int,java.lang.Object)>(i1, null);

        i1 = i1 + 1;

        goto label1;

     label2:
        if r2 == null goto label4;

        i2 = 0;

     label3:
        if i2 >= i0 goto label4;

        $r34 = r0.<com.android.server.TelephonyRegistry: android.os.Bundle[] mCellLocation>;

        $r35 = $r34[i2];

        virtualinvoke r2.<android.telephony.CellLocation: void fillInNotifierBundle(android.os.Bundle)>($r35);

        i2 = i2 + 1;

        goto label3;

     label4:
        $r29 = new java.util.ArrayList;

        specialinvoke $r29.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mConnectedApns> = $r29;

        return;
    }

    public void systemRunning()
    {
        com.android.server.TelephonyRegistry r0;
        android.content.IntentFilter r1, $r2;
        android.content.BroadcastReceiver $r3;
        android.content.Context $r4;

        r0 := @this: com.android.server.TelephonyRegistry;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_SWITCHED");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_REMOVED");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.ACTION_DEFAULT_SUBSCRIPTION_CHANGED");

        staticinvoke <com.android.server.TelephonyRegistry: void log(java.lang.String)>("systemRunning register for intents");

        $r4 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r3 = r0.<com.android.server.TelephonyRegistry: android.content.BroadcastReceiver mBroadcastReceiver>;

        virtualinvoke $r4.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r3, r1);

        return;
    }

    public void listen(java.lang.String, com.android.internal.telephony.IPhoneStateListener, int, boolean)
    {
        com.android.server.TelephonyRegistry r0;
        java.lang.String r1;
        com.android.internal.telephony.IPhoneStateListener r2;
        int i0;
        boolean z0;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.internal.telephony.IPhoneStateListener;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        virtualinvoke r0.<com.android.server.TelephonyRegistry: void listenForSubscriber(long,java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>(9223372036854775807L, r1, r2, i0, z0);

        return;
    }

    public void listenForSubscriber(long, java.lang.String, com.android.internal.telephony.IPhoneStateListener, int, boolean)
    {
        com.android.server.TelephonyRegistry r0;
        long l0;
        java.lang.String r1;
        com.android.internal.telephony.IPhoneStateListener r2;
        int i1;
        boolean z0;

        r0 := @this: com.android.server.TelephonyRegistry;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.internal.telephony.IPhoneStateListener;

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean,long)>(r1, r2, i1, z0, l0);

        return;
    }

    private void listen(java.lang.String, com.android.internal.telephony.IPhoneStateListener, int, boolean, long)
    {
        com.android.server.TelephonyRegistry r0;
        java.lang.String r1, $r30;
        com.android.internal.telephony.IPhoneStateListener r2, $r12, $r14, $r15, $r17, $r19, $r23, $r28, $r31, $r32, $r35, $r40, $r41, $r43, $r53;
        int i0, i2, i3, i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        long l1, $l6;
        java.util.ArrayList r3, $r7, $r8, $r10, $r16, $r52;
        android.os.IBinder r4, $r6, $r46, $r48, $r56, $r58, $r60, $r62, $r64, $r66, $r68, $r69, $r71, $r73, $r75, $r77, $r79;
        java.lang.Throwable r5, $r54;
        com.android.server.TelephonyRegistry$Record $r9, r81;
        android.telephony.PreciseCallState $r11;
        android.telephony.PreciseDataConnectionState $r13;
        android.telephony.DataConnectionRealTimeInfo $r18;
        java.util.List $r20;
        java.lang.Object $r21, $r47;
        int[] $r22, $r26, $r27, $r33;
        android.telephony.SignalStrength $r24, $r44;
        android.telephony.SignalStrength[] $r25, $r45;
        java.lang.String[] $r29;
        boolean[] $r34, $r36;
        android.os.Bundle $r37, $r39;
        android.os.Bundle[] $r38;
        android.telephony.ServiceState $r42, $r50;
        android.os.RemoteException $r49, $r55, $r57, $r59, $r61, $r63, $r65, $r67, $r70, $r72, $r74, $r76, $r78, $r80;
        android.telephony.ServiceState[] $r51;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.internal.telephony.IPhoneStateListener;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        l1 := @parameter4: long;

        i2 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        staticinvoke <android.os.UserHandle: int myUserId()>();

        if i0 == 0 goto label70;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void checkListenerPermission(int)>(i0);

        $r7 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r3 = $r7;

        entermonitor $r7;

     label01:
        r4 = interfaceinvoke r2.<com.android.internal.telephony.IPhoneStateListener: android.os.IBinder asBinder()>();

        $r8 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        i3 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        i4 = 0;

     label02:
        if i4 >= i3 goto label04;

        $r52 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        $r47 = virtualinvoke $r52.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r81 = (com.android.server.TelephonyRegistry$Record) $r47;

        $r46 = r81.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        if r4 != $r46 goto label03;

        goto label07;

     label03:
        i4 = i4 + 1;

        goto label02;

     label04:
        $r9 = new com.android.server.TelephonyRegistry$Record;

        specialinvoke $r9.<com.android.server.TelephonyRegistry$Record: void <init>(com.android.server.TelephonyRegistry$1)>(null);

        r81 = $r9;

        r81.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder> = r4;

        r81.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback> = r2;

        r81.<com.android.server.TelephonyRegistry$Record: java.lang.String pkgForDebug> = r1;

        r81.<com.android.server.TelephonyRegistry$Record: int callerUid> = i2;

        $z1 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubId(long)>(l1);

        if $z1 != 0 goto label05;

        r81.<com.android.server.TelephonyRegistry$Record: long subId> = 9223372036854775807L;

        goto label06;

     label05:
        r81.<com.android.server.TelephonyRegistry$Record: long subId> = l1;

     label06:
        $l6 = r81.<com.android.server.TelephonyRegistry$Record: long subId>;

        $i5 = staticinvoke <android.telephony.SubscriptionManager: int getPhoneId(long)>($l6);

        r81.<com.android.server.TelephonyRegistry$Record: int phoneId> = $i5;

        $r10 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r81);

     label07:
        i25 = r81.<com.android.server.TelephonyRegistry$Record: int phoneId>;

        r81.<com.android.server.TelephonyRegistry$Record: int events> = i0;

        if z0 == 0 goto label65;

        $z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i25);

        if $z2 == 0 goto label65;

        $i8 = i0 & 1;

        if $i8 == 0 goto label11;

     label08:
        $r53 = r81.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r42 = new android.telephony.ServiceState;

        $r51 = r0.<com.android.server.TelephonyRegistry: android.telephony.ServiceState[] mServiceState>;

        $r50 = $r51[i25];

        specialinvoke $r42.<android.telephony.ServiceState: void <init>(android.telephony.ServiceState)>($r50);

        interfaceinvoke $r53.<com.android.internal.telephony.IPhoneStateListener: void onServiceStateChanged(android.telephony.ServiceState)>($r42);

     label09:
        goto label11;

     label10:
        $r76 := @caughtexception;

        $r75 = r81.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r75);

     label11:
        $i7 = i0 & 2;

        if $i7 == 0 goto label17;

     label12:
        $r45 = r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength[] mSignalStrength>;

        $r44 = $r45[i25];

        i26 = virtualinvoke $r44.<android.telephony.SignalStrength: int getGsmSignalStrength()>();

        $r41 = r81.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        if i26 != 99 goto label13;

        $i24 = -1;

        goto label14;

     label13:
        $i24 = i26;

     label14:
        interfaceinvoke $r41.<com.android.internal.telephony.IPhoneStateListener: void onSignalStrengthChanged(int)>($i24);

     label15:
        goto label17;

     label16:
        $r63 := @caughtexception;

        $r64 = r81.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r64);

     label17:
        $i10 = i0 & 4;

        if $i10 == 0 goto label21;

     label18:
        $r43 = r81.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r36 = r0.<com.android.server.TelephonyRegistry: boolean[] mMessageWaiting>;

        $z6 = $r36[i25];

        interfaceinvoke $r43.<com.android.internal.telephony.IPhoneStateListener: void onMessageWaitingIndicatorChanged(boolean)>($z6);

     label19:
        goto label21;

     label20:
        $r67 := @caughtexception;

        $r68 = r81.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r68);

     label21:
        $i11 = i0 & 8;

        if $i11 == 0 goto label25;

     label22:
        $r35 = r81.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r34 = r0.<com.android.server.TelephonyRegistry: boolean[] mCallForwarding>;

        $z5 = $r34[i25];

        interfaceinvoke $r35.<com.android.internal.telephony.IPhoneStateListener: void onCallForwardingIndicatorChanged(boolean)>($z5);

     label23:
        goto label25;

     label24:
        $r70 := @caughtexception;

        $r69 = r81.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r69);

     label25:
        $z3 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validateEventsAndUserLocked(com.android.server.TelephonyRegistry$Record,int)>(r81, 16);

        if $z3 == 0 goto label29;

     label26:
        $r40 = r81.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r37 = new android.os.Bundle;

        $r38 = r0.<com.android.server.TelephonyRegistry: android.os.Bundle[] mCellLocation>;

        $r39 = $r38[i25];

        specialinvoke $r37.<android.os.Bundle: void <init>(android.os.Bundle)>($r39);

        interfaceinvoke $r40.<com.android.internal.telephony.IPhoneStateListener: void onCellLocationChanged(android.os.Bundle)>($r37);

     label27:
        goto label29;

     label28:
        $r80 := @caughtexception;

        $r79 = r81.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r79);

     label29:
        $i9 = i0 & 32;

        if $i9 == 0 goto label33;

     label30:
        $r31 = r81.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r33 = r0.<com.android.server.TelephonyRegistry: int[] mCallState>;

        $i21 = $r33[i25];

        $r29 = r0.<com.android.server.TelephonyRegistry: java.lang.String[] mCallIncomingNumber>;

        $r30 = $r29[i25];

        interfaceinvoke $r31.<com.android.internal.telephony.IPhoneStateListener: void onCallStateChanged(int,java.lang.String)>($i21, $r30);

     label31:
        goto label33;

     label32:
        $r55 := @caughtexception;

        $r56 = r81.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r56);

     label33:
        $i14 = i0 & 64;

        if $i14 == 0 goto label37;

     label34:
        $r32 = r81.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r27 = r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionState>;

        $i23 = $r27[i25];

        $r26 = r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionNetworkType>;

        $i22 = $r26[i25];

        interfaceinvoke $r32.<com.android.internal.telephony.IPhoneStateListener: void onDataConnectionStateChanged(int,int)>($i23, $i22);

     label35:
        goto label37;

     label36:
        $r49 := @caughtexception;

        $r48 = r81.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r48);

     label37:
        $i15 = i0 & 128;

        if $i15 == 0 goto label41;

     label38:
        $r28 = r81.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r22 = r0.<com.android.server.TelephonyRegistry: int[] mDataActivity>;

        $i20 = $r22[i25];

        interfaceinvoke $r28.<com.android.internal.telephony.IPhoneStateListener: void onDataActivity(int)>($i20);

     label39:
        goto label41;

     label40:
        $r74 := @caughtexception;

        $r73 = r81.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r73);

     label41:
        $i12 = i0 & 256;

        if $i12 == 0 goto label45;

     label42:
        $r23 = r81.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r25 = r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength[] mSignalStrength>;

        $r24 = $r25[i25];

        interfaceinvoke $r23.<com.android.internal.telephony.IPhoneStateListener: void onSignalStrengthsChanged(android.telephony.SignalStrength)>($r24);

     label43:
        goto label45;

     label44:
        $r59 := @caughtexception;

        $r60 = r81.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r60);

     label45:
        $i13 = i0 & 512;

        if $i13 == 0 goto label49;

     label46:
        $r19 = r81.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $i19 = r0.<com.android.server.TelephonyRegistry: int mOtaspMode>;

        interfaceinvoke $r19.<com.android.internal.telephony.IPhoneStateListener: void onOtaspChanged(int)>($i19);

     label47:
        goto label49;

     label48:
        $r57 := @caughtexception;

        $r58 = r81.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r58);

     label49:
        $z4 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validateEventsAndUserLocked(com.android.server.TelephonyRegistry$Record,int)>(r81, 1024);

        if $z4 == 0 goto label53;

     label50:
        $r15 = r81.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r16 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mCellInfo>;

        $r21 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(i25);

        $r20 = (java.util.List) $r21;

        interfaceinvoke $r15.<com.android.internal.telephony.IPhoneStateListener: void onCellInfoChanged(java.util.List)>($r20);

     label51:
        goto label53;

     label52:
        $r61 := @caughtexception;

        $r62 = r81.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r62);

     label53:
        $i18 = i0 & 8192;

        if $i18 == 0 goto label57;

     label54:
        $r17 = r81.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r18 = r0.<com.android.server.TelephonyRegistry: android.telephony.DataConnectionRealTimeInfo mDcRtInfo>;

        interfaceinvoke $r17.<com.android.internal.telephony.IPhoneStateListener: void onDataConnectionRealTimeInfoChanged(android.telephony.DataConnectionRealTimeInfo)>($r18);

     label55:
        goto label57;

     label56:
        $r65 := @caughtexception;

        $r66 = r81.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r66);

     label57:
        $i16 = i0 & 2048;

        if $i16 == 0 goto label61;

     label58:
        $r12 = r81.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r11 = r0.<com.android.server.TelephonyRegistry: android.telephony.PreciseCallState mPreciseCallState>;

        interfaceinvoke $r12.<com.android.internal.telephony.IPhoneStateListener: void onPreciseCallStateChanged(android.telephony.PreciseCallState)>($r11);

     label59:
        goto label61;

     label60:
        $r72 := @caughtexception;

        $r71 = r81.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r71);

     label61:
        $i17 = i0 & 4096;

        if $i17 == 0 goto label65;

     label62:
        $r14 = r81.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r13 = r0.<com.android.server.TelephonyRegistry: android.telephony.PreciseDataConnectionState mPreciseDataConnectionState>;

        interfaceinvoke $r14.<com.android.internal.telephony.IPhoneStateListener: void onPreciseDataConnectionStateChanged(android.telephony.PreciseDataConnectionState)>($r13);

     label63:
        goto label65;

     label64:
        $r78 := @caughtexception;

        $r77 = r81.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r77);

     label65:
        exitmonitor r3;

     label66:
        goto label69;

     label67:
        $r54 := @caughtexception;

        r5 = $r54;

        exitmonitor r3;

     label68:
        throw r5;

     label69:
        goto label71;

     label70:
        $r6 = interfaceinvoke r2.<com.android.internal.telephony.IPhoneStateListener: android.os.IBinder asBinder()>();

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>($r6);

     label71:
        return;

        catch android.os.RemoteException from label08 to label09 with label10;
        catch android.os.RemoteException from label12 to label15 with label16;
        catch android.os.RemoteException from label18 to label19 with label20;
        catch android.os.RemoteException from label22 to label23 with label24;
        catch android.os.RemoteException from label26 to label27 with label28;
        catch android.os.RemoteException from label30 to label31 with label32;
        catch android.os.RemoteException from label34 to label35 with label36;
        catch android.os.RemoteException from label38 to label39 with label40;
        catch android.os.RemoteException from label42 to label43 with label44;
        catch android.os.RemoteException from label46 to label47 with label48;
        catch android.os.RemoteException from label50 to label51 with label52;
        catch android.os.RemoteException from label54 to label55 with label56;
        catch android.os.RemoteException from label58 to label59 with label60;
        catch android.os.RemoteException from label62 to label63 with label64;
        catch java.lang.Throwable from label01 to label66 with label67;
        catch java.lang.Throwable from label67 to label68 with label67;
    }

    private void remove(android.os.IBinder)
    {
        com.android.server.TelephonyRegistry r0;
        android.os.IBinder r1, $r9;
        java.util.ArrayList r2, $r4, $r5, $r6, $r10;
        int i0, i1;
        java.lang.Throwable r3, $r12;
        java.lang.Object $r7;
        com.android.server.TelephonyRegistry$Record $r8;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: android.os.IBinder;

        $r4 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label5;

        $r6 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r8 = (com.android.server.TelephonyRegistry$Record) $r7;

        $r9 = $r8.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        if $r9 != r1 goto label4;

        $r10 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        virtualinvoke $r10.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

        exitmonitor r2;

     label3:
        return;

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r12 := @caughtexception;

        r3 = $r12;

        exitmonitor r2;

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void notifyCallState(int, java.lang.String)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, $i1, $i3;
        java.lang.String r1;
        java.util.ArrayList r2, $r7, $r8, $r14;
        java.util.Iterator r3;
        com.android.server.TelephonyRegistry$Record r4;
        java.lang.Throwable r6, $r11;
        boolean $z0, $z1;
        java.lang.Object $r9;
        long $l2;
        com.android.internal.telephony.IPhoneStateListener $r10;
        byte $b4;
        android.os.IBinder $r12;
        android.os.RemoteException $r13;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyCallState()");

        if $z0 != 0 goto label01;

        return;

     label01:
        $r7 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = $r7;

        entermonitor $r7;

     label02:
        $r8 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r3 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.TelephonyRegistry$Record) $r9;

        $i1 = r4.<com.android.server.TelephonyRegistry$Record: int events>;

        $i3 = $i1 & 32;

        if $i3 == 0 goto label07;

        $l2 = r4.<com.android.server.TelephonyRegistry$Record: long subId>;

        $b4 = $l2 cmp 9223372036854775807L;

        if $b4 != 0 goto label07;

     label04:
        $r10 = r4.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r10.<com.android.internal.telephony.IPhoneStateListener: void onCallStateChanged(int,java.lang.String)>(i0, r1);

     label05:
        goto label07;

     label06:
        $r13 := @caughtexception;

        $r14 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r12 = r4.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

     label07:
        goto label03;

     label08:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r2;

     label09:
        goto label12;

     label10:
        $r11 := @caughtexception;

        r6 = $r11;

        exitmonitor r2;

     label11:
        throw r6;

     label12:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void broadcastCallStateChanged(int,java.lang.String,long)>(i0, r1, 9223372036854775807L);

        return;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void notifyCallStateForSubscriber(long, int, java.lang.String)
    {
        com.android.server.TelephonyRegistry r0;
        long l0, $l6, $l8;
        int i1, i2, $i3, $i4;
        java.lang.String r1;
        java.util.ArrayList r2, $r7, $r10, $r14;
        java.util.Iterator r3;
        com.android.server.TelephonyRegistry$Record r4;
        java.lang.Throwable r6, $r16;
        boolean $z0, $z1, $z2;
        java.lang.String[] $r8;
        int[] $r9;
        java.lang.Object $r11;
        byte $b5, $b7;
        android.os.RemoteException $r12;
        com.android.internal.telephony.IPhoneStateListener $r13;
        android.os.IBinder $r15;

        r0 := @this: com.android.server.TelephonyRegistry;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyCallState()");

        if $z0 != 0 goto label01;

        return;

     label01:
        $r7 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = $r7;

        entermonitor $r7;

     label02:
        i2 = staticinvoke <android.telephony.SubscriptionManager: int getPhoneId(long)>(l0);

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i2);

        if $z1 == 0 goto label08;

        $r9 = r0.<com.android.server.TelephonyRegistry: int[] mCallState>;

        $r9[i2] = i1;

        $r8 = r0.<com.android.server.TelephonyRegistry: java.lang.String[] mCallIncomingNumber>;

        $r8[i2] = r1;

        $r10 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r3 = virtualinvoke $r10.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.TelephonyRegistry$Record) $r11;

        $i4 = r4.<com.android.server.TelephonyRegistry$Record: int events>;

        $i3 = $i4 & 32;

        if $i3 == 0 goto label07;

        $l6 = r4.<com.android.server.TelephonyRegistry$Record: long subId>;

        $b5 = $l6 cmp l0;

        if $b5 != 0 goto label07;

        $l8 = r4.<com.android.server.TelephonyRegistry$Record: long subId>;

        $b7 = $l8 cmp 9223372036854775807L;

        if $b7 == 0 goto label07;

     label04:
        $r13 = r4.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r13.<com.android.internal.telephony.IPhoneStateListener: void onCallStateChanged(int,java.lang.String)>(i1, r1);

     label05:
        goto label07;

     label06:
        $r12 := @caughtexception;

        $r14 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r15 = r4.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

     label07:
        goto label03;

     label08:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r2;

     label09:
        goto label12;

     label10:
        $r16 := @caughtexception;

        r6 = $r16;

        exitmonitor r2;

     label11:
        throw r6;

     label12:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void broadcastCallStateChanged(int,java.lang.String,long)>(i1, r1, l0);

        return;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void notifyServiceStateForPhoneId(int, long, android.telephony.ServiceState)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, $i2, $i4;
        long l1, $l3, $l6;
        android.telephony.ServiceState r1, $r15;
        java.util.ArrayList r2, $r7, $r12, $r20;
        java.util.Iterator r3;
        com.android.server.TelephonyRegistry$Record r4;
        java.lang.Throwable r6, $r18;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;
        android.telephony.ServiceState[] $r13;
        java.lang.Object $r14;
        byte $b5, $b7;
        com.android.internal.telephony.IPhoneStateListener $r16;
        android.os.RemoteException $r17;
        android.os.IBinder $r19;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: android.telephony.ServiceState;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyServiceState()");

        if $z0 != 0 goto label01;

        return;

     label01:
        $r7 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = $r7;

        entermonitor $r7;

     label02:
        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i0);

        if $z1 == 0 goto label09;

        $r13 = r0.<com.android.server.TelephonyRegistry: android.telephony.ServiceState[] mServiceState>;

        $r13[i0] = r1;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void logServiceStateChanged(java.lang.String,long,int,android.telephony.ServiceState)>("notifyServiceStateForSubscriber", l1, i0, r1);

        $r12 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r3 = virtualinvoke $r12.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r14 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.TelephonyRegistry$Record) $r14;

        $i2 = r4.<com.android.server.TelephonyRegistry$Record: int events>;

        $i4 = $i2 & 1;

        if $i4 == 0 goto label07;

        $l3 = r4.<com.android.server.TelephonyRegistry$Record: long subId>;

        $b5 = $l3 cmp l1;

        if $b5 == 0 goto label04;

        $l6 = r4.<com.android.server.TelephonyRegistry$Record: long subId>;

        $b7 = $l6 cmp 9223372036854775807L;

        if $b7 != 0 goto label07;

     label04:
        $r16 = r4.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r15 = new android.telephony.ServiceState;

        specialinvoke $r15.<android.telephony.ServiceState: void <init>(android.telephony.ServiceState)>(r1);

        interfaceinvoke $r16.<com.android.internal.telephony.IPhoneStateListener: void onServiceStateChanged(android.telephony.ServiceState)>($r15);

     label05:
        goto label07;

     label06:
        $r17 := @caughtexception;

        $r20 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r19 = r4.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r20.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

     label07:
        goto label03;

     label08:
        goto label10;

     label09:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifyServiceStateForSubscriber: INVALID phoneId=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.TelephonyRegistry: void log(java.lang.String)>($r11);

     label10:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r2;

     label11:
        goto label14;

     label12:
        $r18 := @caughtexception;

        r6 = $r18;

        exitmonitor r2;

     label13:
        throw r6;

     label14:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void broadcastServiceStateChanged(android.telephony.ServiceState,long)>(r1, l1);

        return;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public void notifySignalStrength(android.telephony.SignalStrength)
    {
        com.android.server.TelephonyRegistry r0;
        android.telephony.SignalStrength r1;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: android.telephony.SignalStrength;

        virtualinvoke r0.<com.android.server.TelephonyRegistry: void notifySignalStrengthForSubscriber(long,android.telephony.SignalStrength)>(9223372036854775807L, r1);

        return;
    }

    public void notifySignalStrengthForSubscriber(long, android.telephony.SignalStrength)
    {
        com.android.server.TelephonyRegistry r0;
        long l0, $l6, $l9, $l12, $l14;
        android.telephony.SignalStrength r1, $r16;
        java.util.ArrayList r2, $r7, $r12, $r22, $r24;
        int i1, i2, $i3, $i4, $i5, $i7, $i11, i16;
        java.util.Iterator r3;
        com.android.server.TelephonyRegistry$Record r4;
        java.lang.Throwable r6, $r23;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;
        android.telephony.SignalStrength[] $r13;
        java.lang.Object $r14;
        byte $b8, $b10, $b13, $b15;
        com.android.internal.telephony.IPhoneStateListener $r15, $r17;
        android.os.RemoteException $r18, $r20;
        android.os.IBinder $r19, $r21;

        r0 := @this: com.android.server.TelephonyRegistry;

        l0 := @parameter0: long;

        r1 := @parameter1: android.telephony.SignalStrength;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifySignalStrength()");

        if $z0 != 0 goto label01;

        return;

     label01:
        $r7 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = $r7;

        entermonitor $r7;

     label02:
        i1 = staticinvoke <android.telephony.SubscriptionManager: int getPhoneId(long)>(l0);

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i1);

        if $z1 == 0 goto label15;

        $r13 = r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength[] mSignalStrength>;

        $r13[i1] = r1;

        $r12 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r3 = virtualinvoke $r12.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label14;

        $r14 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.TelephonyRegistry$Record) $r14;

        $i3 = r4.<com.android.server.TelephonyRegistry$Record: int events>;

        $i5 = $i3 & 256;

        if $i5 == 0 goto label07;

        $l12 = r4.<com.android.server.TelephonyRegistry$Record: long subId>;

        $b13 = $l12 cmp l0;

        if $b13 == 0 goto label04;

        $l14 = r4.<com.android.server.TelephonyRegistry$Record: long subId>;

        $b15 = $l14 cmp 9223372036854775807L;

        if $b15 != 0 goto label07;

     label04:
        $r17 = r4.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r16 = new android.telephony.SignalStrength;

        specialinvoke $r16.<android.telephony.SignalStrength: void <init>(android.telephony.SignalStrength)>(r1);

        interfaceinvoke $r17.<com.android.internal.telephony.IPhoneStateListener: void onSignalStrengthsChanged(android.telephony.SignalStrength)>($r16);

     label05:
        goto label07;

     label06:
        $r18 := @caughtexception;

        $r22 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r19 = r4.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r22.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

     label07:
        $i4 = r4.<com.android.server.TelephonyRegistry$Record: int events>;

        $i7 = $i4 & 2;

        if $i7 == 0 goto label13;

        $l6 = r4.<com.android.server.TelephonyRegistry$Record: long subId>;

        $b8 = $l6 cmp l0;

        if $b8 == 0 goto label08;

        $l9 = r4.<com.android.server.TelephonyRegistry$Record: long subId>;

        $b10 = $l9 cmp 9223372036854775807L;

        if $b10 != 0 goto label13;

     label08:
        i16 = virtualinvoke r1.<android.telephony.SignalStrength: int getGsmSignalStrength()>();

        if i16 != 99 goto label09;

        $i11 = -1;

        goto label10;

     label09:
        $i11 = i16;

     label10:
        i2 = $i11;

        $r15 = r4.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r15.<com.android.internal.telephony.IPhoneStateListener: void onSignalStrengthChanged(int)>(i2);

     label11:
        goto label13;

     label12:
        $r20 := @caughtexception;

        $r24 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r21 = r4.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r24.<java.util.ArrayList: boolean add(java.lang.Object)>($r21);

     label13:
        goto label03;

     label14:
        goto label16;

     label15:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifySignalStrengthForSubscriber: invalid phoneId=");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.TelephonyRegistry: void log(java.lang.String)>($r11);

     label16:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r2;

     label17:
        goto label20;

     label18:
        $r23 := @caughtexception;

        r6 = $r23;

        exitmonitor r2;

     label19:
        throw r6;

     label20:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void broadcastSignalStrengthChanged(android.telephony.SignalStrength,long)>(r1, l0);

        return;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch android.os.RemoteException from label08 to label11 with label12;
        catch java.lang.Throwable from label02 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    public void notifyCellInfo(java.util.List)
    {
        com.android.server.TelephonyRegistry r0;
        java.util.List r1;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: java.util.List;

        virtualinvoke r0.<com.android.server.TelephonyRegistry: void notifyCellInfoForSubscriber(long,java.util.List)>(9223372036854775807L, r1);

        return;
    }

    public void notifyCellInfoForSubscriber(long, java.util.List)
    {
        com.android.server.TelephonyRegistry r0;
        long l0, $l3, $l4;
        java.util.List r1;
        java.util.ArrayList r2, $r7, $r8, $r9, $r15;
        int i1;
        java.util.Iterator r3;
        com.android.server.TelephonyRegistry$Record r4;
        java.lang.Throwable r6, $r13;
        boolean $z1, $z2, $z3, $z4;
        java.lang.Object $r11;
        byte $b2, $b5;
        com.android.internal.telephony.IPhoneStateListener $r12;
        android.os.RemoteException $r14;
        android.os.IBinder $r16;

        r0 := @this: com.android.server.TelephonyRegistry;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.List;

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyCellInfo()");

        if $z1 != 0 goto label01;

        return;

     label01:
        $r7 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = $r7;

        entermonitor $r7;

     label02:
        i1 = staticinvoke <android.telephony.SubscriptionManager: int getPhoneId(long)>(l0);

        $z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i1);

        if $z2 == 0 goto label08;

        $r8 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mCellInfo>;

        virtualinvoke $r8.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i1, r1);

        $r9 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r3 = virtualinvoke $r9.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label08;

        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.TelephonyRegistry$Record) $r11;

        $z4 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validateEventsAndUserLocked(com.android.server.TelephonyRegistry$Record,int)>(r4, 1024);

        if $z4 == 0 goto label07;

        $l3 = r4.<com.android.server.TelephonyRegistry$Record: long subId>;

        $b2 = $l3 cmp l0;

        if $b2 == 0 goto label04;

        $l4 = r4.<com.android.server.TelephonyRegistry$Record: long subId>;

        $b5 = $l4 cmp 9223372036854775807L;

        if $b5 != 0 goto label07;

     label04:
        $r12 = r4.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r12.<com.android.internal.telephony.IPhoneStateListener: void onCellInfoChanged(java.util.List)>(r1);

     label05:
        goto label07;

     label06:
        $r14 := @caughtexception;

        $r15 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r16 = r4.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

     label07:
        goto label03;

     label08:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r2;

     label09:
        goto label12;

     label10:
        $r13 := @caughtexception;

        r6 = $r13;

        exitmonitor r2;

     label11:
        throw r6;

     label12:
        return;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void notifyDataConnectionRealTimeInfo(android.telephony.DataConnectionRealTimeInfo)
    {
        com.android.server.TelephonyRegistry r0;
        android.telephony.DataConnectionRealTimeInfo r1, $r10;
        java.util.ArrayList r2, $r7, $r8, $r14;
        java.util.Iterator r3;
        com.android.server.TelephonyRegistry$Record r4;
        java.lang.Throwable r6, $r11;
        boolean $z0, $z1, $z2;
        java.lang.Object $r9;
        com.android.internal.telephony.IPhoneStateListener $r12;
        android.os.RemoteException $r13;
        android.os.IBinder $r15;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: android.telephony.DataConnectionRealTimeInfo;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyDataConnectionRealTimeInfo()");

        if $z0 != 0 goto label01;

        return;

     label01:
        $r7 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = $r7;

        entermonitor $r7;

     label02:
        r0.<com.android.server.TelephonyRegistry: android.telephony.DataConnectionRealTimeInfo mDcRtInfo> = r1;

        $r8 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r3 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.TelephonyRegistry$Record) $r9;

        $z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validateEventsAndUserLocked(com.android.server.TelephonyRegistry$Record,int)>(r4, 8192);

        if $z2 == 0 goto label07;

     label04:
        $r12 = r4.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r10 = r0.<com.android.server.TelephonyRegistry: android.telephony.DataConnectionRealTimeInfo mDcRtInfo>;

        interfaceinvoke $r12.<com.android.internal.telephony.IPhoneStateListener: void onDataConnectionRealTimeInfoChanged(android.telephony.DataConnectionRealTimeInfo)>($r10);

     label05:
        goto label07;

     label06:
        $r13 := @caughtexception;

        $r14 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r15 = r4.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

     label07:
        goto label03;

     label08:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r2;

     label09:
        goto label12;

     label10:
        $r11 := @caughtexception;

        r6 = $r11;

        exitmonitor r2;

     label11:
        throw r6;

     label12:
        return;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void notifyMessageWaitingChangedForPhoneId(int, long, boolean)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, $i2, $i4;
        long l1, $l3, $l7;
        boolean z0, $z1, $z2, $z3;
        java.util.ArrayList r1, $r6, $r8, $r13;
        java.util.Iterator r2;
        com.android.server.TelephonyRegistry$Record r3;
        java.lang.Throwable r5, $r14;
        boolean[] $r7;
        java.lang.Object $r9;
        com.android.internal.telephony.IPhoneStateListener $r10;
        byte $b5, $b6;
        android.os.IBinder $r11;
        android.os.RemoteException $r12;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        z0 := @parameter2: boolean;

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyMessageWaitingChanged()");

        if $z1 != 0 goto label01;

        return;

     label01:
        $r6 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r1 = $r6;

        entermonitor $r6;

     label02:
        $z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i0);

        if $z2 == 0 goto label08;

        $r7 = r0.<com.android.server.TelephonyRegistry: boolean[] mMessageWaiting>;

        $r7[i0] = z0;

        $r8 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label08;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.TelephonyRegistry$Record) $r9;

        $i2 = r3.<com.android.server.TelephonyRegistry$Record: int events>;

        $i4 = $i2 & 4;

        if $i4 == 0 goto label07;

        $l3 = r3.<com.android.server.TelephonyRegistry$Record: long subId>;

        $b5 = $l3 cmp l1;

        if $b5 == 0 goto label04;

        $l7 = r3.<com.android.server.TelephonyRegistry$Record: long subId>;

        $b6 = $l7 cmp 9223372036854775807L;

        if $b6 != 0 goto label07;

     label04:
        $r10 = r3.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r10.<com.android.internal.telephony.IPhoneStateListener: void onMessageWaitingIndicatorChanged(boolean)>(z0);

     label05:
        goto label07;

     label06:
        $r12 := @caughtexception;

        $r13 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r11 = r3.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label07:
        goto label03;

     label08:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label09:
        goto label12;

     label10:
        $r14 := @caughtexception;

        r5 = $r14;

        exitmonitor r1;

     label11:
        throw r5;

     label12:
        return;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void notifyCallForwardingChanged(boolean)
    {
        com.android.server.TelephonyRegistry r0;
        boolean z0;

        r0 := @this: com.android.server.TelephonyRegistry;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.android.server.TelephonyRegistry: void notifyCallForwardingChangedForSubscriber(long,boolean)>(9223372036854775807L, z0);

        return;
    }

    public void notifyCallForwardingChangedForSubscriber(long, boolean)
    {
        com.android.server.TelephonyRegistry r0;
        long l0, $l5, $l6;
        boolean z0, $z1, $z2, $z3;
        java.util.ArrayList r1, $r6, $r8, $r12;
        int i1, $i2, $i3;
        java.util.Iterator r2;
        com.android.server.TelephonyRegistry$Record r3;
        java.lang.Throwable r5, $r14;
        boolean[] $r7;
        java.lang.Object $r9;
        byte $b4, $b7;
        com.android.internal.telephony.IPhoneStateListener $r10;
        android.os.RemoteException $r11;
        android.os.IBinder $r13;

        r0 := @this: com.android.server.TelephonyRegistry;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyCallForwardingChanged()");

        if $z1 != 0 goto label01;

        return;

     label01:
        $r6 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r1 = $r6;

        entermonitor $r6;

     label02:
        i1 = staticinvoke <android.telephony.SubscriptionManager: int getPhoneId(long)>(l0);

        $z2 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i1);

        if $z2 == 0 goto label08;

        $r7 = r0.<com.android.server.TelephonyRegistry: boolean[] mCallForwarding>;

        $r7[i1] = z0;

        $r8 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label08;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.TelephonyRegistry$Record) $r9;

        $i3 = r3.<com.android.server.TelephonyRegistry$Record: int events>;

        $i2 = $i3 & 8;

        if $i2 == 0 goto label07;

        $l5 = r3.<com.android.server.TelephonyRegistry$Record: long subId>;

        $b4 = $l5 cmp l0;

        if $b4 == 0 goto label04;

        $l6 = r3.<com.android.server.TelephonyRegistry$Record: long subId>;

        $b7 = $l6 cmp 9223372036854775807L;

        if $b7 != 0 goto label07;

     label04:
        $r10 = r3.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r10.<com.android.internal.telephony.IPhoneStateListener: void onCallForwardingIndicatorChanged(boolean)>(z0);

     label05:
        goto label07;

     label06:
        $r11 := @caughtexception;

        $r12 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r13 = r3.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

     label07:
        goto label03;

     label08:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label09:
        goto label12;

     label10:
        $r14 := @caughtexception;

        r5 = $r14;

        exitmonitor r1;

     label11:
        throw r5;

     label12:
        return;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void notifyDataActivity(int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.TelephonyRegistry: void notifyDataActivityForSubscriber(long,int)>(9223372036854775807L, i0);

        return;
    }

    public void notifyDataActivityForSubscriber(long, int)
    {
        com.android.server.TelephonyRegistry r0;
        long l0;
        int i1, i2, $i3, $i4;
        java.util.ArrayList r1, $r6, $r8, $r13;
        java.util.Iterator r2;
        com.android.server.TelephonyRegistry$Record r3;
        java.lang.Throwable r5, $r14;
        boolean $z0, $z1;
        int[] $r7;
        java.lang.Object $r9;
        com.android.internal.telephony.IPhoneStateListener $r10;
        android.os.IBinder $r11;
        android.os.RemoteException $r12;

        r0 := @this: com.android.server.TelephonyRegistry;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyDataActivity()");

        if $z0 != 0 goto label01;

        return;

     label01:
        $r6 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r1 = $r6;

        entermonitor $r6;

     label02:
        i2 = staticinvoke <android.telephony.SubscriptionManager: int getPhoneId(long)>(l0);

        $r7 = r0.<com.android.server.TelephonyRegistry: int[] mDataActivity>;

        $r7[i2] = i1;

        $r8 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.TelephonyRegistry$Record) $r9;

        $i3 = r3.<com.android.server.TelephonyRegistry$Record: int events>;

        $i4 = $i3 & 128;

        if $i4 == 0 goto label07;

     label04:
        $r10 = r3.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r10.<com.android.internal.telephony.IPhoneStateListener: void onDataActivity(int)>(i1);

     label05:
        goto label07;

     label06:
        $r12 := @caughtexception;

        $r13 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r11 = r3.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label07:
        goto label03;

     label08:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label09:
        goto label12;

     label10:
        $r14 := @caughtexception;

        r5 = $r14;

        exitmonitor r1;

     label11:
        throw r5;

     label12:
        return;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void notifyDataConnection(int, boolean, java.lang.String, java.lang.String, java.lang.String, android.net.LinkProperties, android.net.NetworkCapabilities, int, boolean)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1;
        boolean z0, z1;
        java.lang.String r1, r2, r3;
        android.net.LinkProperties r4;
        android.net.NetworkCapabilities r5;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: android.net.LinkProperties;

        r5 := @parameter6: android.net.NetworkCapabilities;

        i1 := @parameter7: int;

        z1 := @parameter8: boolean;

        virtualinvoke r0.<com.android.server.TelephonyRegistry: void notifyDataConnectionForSubscriber(long,int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,int,boolean)>(9223372036854775807L, i0, z0, r1, r2, r3, r4, r5, i1, z1);

        return;
    }

    public void notifyDataConnectionForSubscriber(long, int, boolean, java.lang.String, java.lang.String, java.lang.String, android.net.LinkProperties, android.net.NetworkCapabilities, int, boolean)
    {
        com.android.server.TelephonyRegistry r0;
        long l0, $l7, $l14;
        int i1, i2, i3, $i4, $i5, $i6, $i9, $i10, $i11, $i12, $i15;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.String r1, r2, r3, $r25;
        android.net.LinkProperties r4;
        android.net.NetworkCapabilities r5;
        java.util.ArrayList r6, $r11, $r12, $r18, $r24, $r33, $r35, $r39, $r43, $r44;
        java.util.Iterator r7, r46;
        com.android.server.TelephonyRegistry$Record r9, r47;
        java.lang.Throwable r10, $r45;
        java.lang.String[] $r13;
        boolean[] $r14;
        android.net.NetworkCapabilities[] $r15;
        android.net.LinkProperties[] $r16;
        int[] $r17, $r29, $r30, $r31, $r34, $r36, $r40;
        android.telephony.PreciseDataConnectionState $r19, $r21;
        java.lang.Object $r20, $r23;
        com.android.internal.telephony.IPhoneStateListener $r22, $r32;
        byte $b8, $b13;
        java.lang.StringBuilder $r26, $r27, $r28;
        android.os.RemoteException $r37, $r41;
        android.os.IBinder $r38, $r42;

        r0 := @this: com.android.server.TelephonyRegistry;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        r3 := @parameter5: java.lang.String;

        r4 := @parameter6: android.net.LinkProperties;

        r5 := @parameter7: android.net.NetworkCapabilities;

        i2 := @parameter8: int;

        z1 := @parameter9: boolean;

        $z3 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyDataConnection()");

        if $z3 != 0 goto label01;

        return;

     label01:
        $r11 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r6 = $r11;

        entermonitor $r11;

     label02:
        i3 = staticinvoke <android.telephony.SubscriptionManager: int getPhoneId(long)>(l0);

        z2 = 0;

        if i1 != 2 goto label03;

        $r33 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mConnectedApns>;

        $z8 = virtualinvoke $r33.<java.util.ArrayList: boolean contains(java.lang.Object)>(r3);

        if $z8 != 0 goto label04;

        $r39 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mConnectedApns>;

        virtualinvoke $r39.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        $r40 = r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionState>;

        $i15 = $r40[i3];

        if $i15 == i1 goto label04;

        $r36 = r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionState>;

        $r36[i3] = i1;

        z2 = 1;

        goto label04;

     label03:
        $r12 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mConnectedApns>;

        $z4 = virtualinvoke $r12.<java.util.ArrayList: boolean remove(java.lang.Object)>(r3);

        if $z4 == 0 goto label04;

        $r35 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mConnectedApns>;

        $z7 = virtualinvoke $r35.<java.util.ArrayList: boolean isEmpty()>();

        if $z7 == 0 goto label04;

        $r34 = r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionState>;

        $r34[i3] = i1;

        z2 = 1;

     label04:
        $r14 = r0.<com.android.server.TelephonyRegistry: boolean[] mDataConnectionPossible>;

        $r14[i3] = z0;

        $r13 = r0.<com.android.server.TelephonyRegistry: java.lang.String[] mDataConnectionReason>;

        $r13[i3] = r1;

        $r16 = r0.<com.android.server.TelephonyRegistry: android.net.LinkProperties[] mDataConnectionLinkProperties>;

        $r16[i3] = r4;

        $r15 = r0.<com.android.server.TelephonyRegistry: android.net.NetworkCapabilities[] mDataConnectionNetworkCapabilities>;

        $r15[i3] = r5;

        $r17 = r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionNetworkType>;

        $i4 = $r17[i3];

        if $i4 == i2 goto label05;

        $r31 = r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionNetworkType>;

        $r31[i3] = i2;

        z2 = 1;

     label05:
        if z2 == 0 goto label12;

        $r24 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r7 = virtualinvoke $r24.<java.util.ArrayList: java.util.Iterator iterator()>();

     label06:
        $z6 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label11;

        $r23 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (com.android.server.TelephonyRegistry$Record) $r23;

        $i9 = r9.<com.android.server.TelephonyRegistry$Record: int events>;

        $i10 = $i9 & 64;

        if $i10 == 0 goto label10;

        $l7 = r9.<com.android.server.TelephonyRegistry$Record: long subId>;

        $b8 = $l7 cmp l0;

        if $b8 == 0 goto label07;

        $l14 = r9.<com.android.server.TelephonyRegistry$Record: long subId>;

        $b13 = $l14 cmp 9223372036854775807L;

        if $b13 != 0 goto label10;

     label07:
        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Notify data connection state changed on sub: ");

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.TelephonyRegistry: void log(java.lang.String)>($r25);

        $r32 = r9.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r30 = r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionState>;

        $i11 = $r30[i3];

        $r29 = r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionNetworkType>;

        $i12 = $r29[i3];

        interfaceinvoke $r32.<com.android.internal.telephony.IPhoneStateListener: void onDataConnectionStateChanged(int,int)>($i11, $i12);

     label08:
        goto label10;

     label09:
        $r41 := @caughtexception;

        $r43 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r42 = r9.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r43.<java.util.ArrayList: boolean add(java.lang.Object)>($r42);

     label10:
        goto label06;

     label11:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

     label12:
        $r19 = new android.telephony.PreciseDataConnectionState;

        specialinvoke $r19.<android.telephony.PreciseDataConnectionState: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,java.lang.String)>(i1, i2, r3, r2, r1, r4, "");

        r0.<com.android.server.TelephonyRegistry: android.telephony.PreciseDataConnectionState mPreciseDataConnectionState> = $r19;

        $r18 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r46 = virtualinvoke $r18.<java.util.ArrayList: java.util.Iterator iterator()>();

     label13:
        $z5 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label18;

        $r20 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>();

        r47 = (com.android.server.TelephonyRegistry$Record) $r20;

        $i5 = r47.<com.android.server.TelephonyRegistry$Record: int events>;

        $i6 = $i5 & 4096;

        if $i6 == 0 goto label17;

     label14:
        $r22 = r47.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r21 = r0.<com.android.server.TelephonyRegistry: android.telephony.PreciseDataConnectionState mPreciseDataConnectionState>;

        interfaceinvoke $r22.<com.android.internal.telephony.IPhoneStateListener: void onPreciseDataConnectionStateChanged(android.telephony.PreciseDataConnectionState)>($r21);

     label15:
        goto label17;

     label16:
        $r37 := @caughtexception;

        $r44 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r38 = r47.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r44.<java.util.ArrayList: boolean add(java.lang.Object)>($r38);

     label17:
        goto label13;

     label18:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r6;

     label19:
        goto label22;

     label20:
        $r45 := @caughtexception;

        r10 = $r45;

        exitmonitor r6;

     label21:
        throw r10;

     label22:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void broadcastDataConnectionStateChanged(int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,boolean,long)>(i1, z0, r1, r2, r3, r4, r5, z1, l0);

        specialinvoke r0.<com.android.server.TelephonyRegistry: void broadcastPreciseDataConnectionStateChanged(int,int,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,java.lang.String)>(i1, i2, r3, r2, r1, r4, "");

        return;

        catch android.os.RemoteException from label07 to label08 with label09;
        catch android.os.RemoteException from label14 to label15 with label16;
        catch java.lang.Throwable from label02 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
    }

    public void notifyDataConnectionFailed(java.lang.String, java.lang.String)
    {
        com.android.server.TelephonyRegistry r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.TelephonyRegistry: void notifyDataConnectionFailedForSubscriber(long,java.lang.String,java.lang.String)>(9223372036854775807L, r1, r2);

        return;
    }

    public void notifyDataConnectionFailedForSubscriber(long, java.lang.String, java.lang.String)
    {
        com.android.server.TelephonyRegistry r0;
        long l0;
        java.lang.String r1, r2;
        java.util.ArrayList r3, $r8, $r10, $r17;
        java.util.Iterator r4;
        com.android.server.TelephonyRegistry$Record r5;
        java.lang.Throwable r7, $r14;
        boolean $z0, $z1;
        android.telephony.PreciseDataConnectionState $r9, $r13;
        java.lang.Object $r11;
        int $i1, $i2;
        com.android.internal.telephony.IPhoneStateListener $r12;
        android.os.IBinder $r15;
        android.os.RemoteException $r16;

        r0 := @this: com.android.server.TelephonyRegistry;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyDataConnectionFailed()");

        if $z0 != 0 goto label01;

        return;

     label01:
        $r8 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r3 = $r8;

        entermonitor $r8;

     label02:
        $r9 = new android.telephony.PreciseDataConnectionState;

        specialinvoke $r9.<android.telephony.PreciseDataConnectionState: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,java.lang.String)>(-1, 0, r2, "", r1, null, "");

        r0.<com.android.server.TelephonyRegistry: android.telephony.PreciseDataConnectionState mPreciseDataConnectionState> = $r9;

        $r10 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r4 = virtualinvoke $r10.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.TelephonyRegistry$Record) $r11;

        $i2 = r5.<com.android.server.TelephonyRegistry$Record: int events>;

        $i1 = $i2 & 4096;

        if $i1 == 0 goto label07;

     label04:
        $r12 = r5.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r13 = r0.<com.android.server.TelephonyRegistry: android.telephony.PreciseDataConnectionState mPreciseDataConnectionState>;

        interfaceinvoke $r12.<com.android.internal.telephony.IPhoneStateListener: void onPreciseDataConnectionStateChanged(android.telephony.PreciseDataConnectionState)>($r13);

     label05:
        goto label07;

     label06:
        $r16 := @caughtexception;

        $r17 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r15 = r5.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r17.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

     label07:
        goto label03;

     label08:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r3;

     label09:
        goto label12;

     label10:
        $r14 := @caughtexception;

        r7 = $r14;

        exitmonitor r3;

     label11:
        throw r7;

     label12:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void broadcastDataConnectionFailed(java.lang.String,java.lang.String,long)>(r1, r2, l0);

        specialinvoke r0.<com.android.server.TelephonyRegistry: void broadcastPreciseDataConnectionStateChanged(int,int,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,java.lang.String)>(-1, 0, r2, "", r1, null, "");

        return;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void notifyCellLocation(android.os.Bundle)
    {
        com.android.server.TelephonyRegistry r0;
        android.os.Bundle r1;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: android.os.Bundle;

        virtualinvoke r0.<com.android.server.TelephonyRegistry: void notifyCellLocationForSubscriber(long,android.os.Bundle)>(9223372036854775807L, r1);

        return;
    }

    public void notifyCellLocationForSubscriber(long, android.os.Bundle)
    {
        com.android.server.TelephonyRegistry r0;
        long l0, $l2, $l4;
        android.os.Bundle r1, $r17;
        java.util.ArrayList r2, $r13, $r15, $r20;
        int i1;
        java.util.Iterator r3;
        com.android.server.TelephonyRegistry$Record r4;
        java.lang.Throwable r6, $r22;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11;
        java.lang.String $r12;
        boolean $z0, $z1, $z2, $z3;
        android.os.Bundle[] $r14;
        java.lang.Object $r16;
        byte $b3, $b5;
        com.android.internal.telephony.IPhoneStateListener $r18;
        android.os.IBinder $r19;
        android.os.RemoteException $r21;

        r0 := @this: com.android.server.TelephonyRegistry;

        l0 := @parameter0: long;

        r1 := @parameter1: android.os.Bundle;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifyCellLocationForSubscriber: subId=");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cellLocation=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.TelephonyRegistry: void log(java.lang.String)>($r12);

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyCellLocation()");

        if $z0 != 0 goto label01;

        return;

     label01:
        $r13 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = $r13;

        entermonitor $r13;

     label02:
        i1 = staticinvoke <android.telephony.SubscriptionManager: int getPhoneId(long)>(l0);

        $z1 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validatePhoneId(int)>(i1);

        if $z1 == 0 goto label08;

        $r14 = r0.<com.android.server.TelephonyRegistry: android.os.Bundle[] mCellLocation>;

        $r14[i1] = r1;

        $r15 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r3 = virtualinvoke $r15.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r16 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.TelephonyRegistry$Record) $r16;

        $z3 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean validateEventsAndUserLocked(com.android.server.TelephonyRegistry$Record,int)>(r4, 16);

        if $z3 == 0 goto label07;

        $l2 = r4.<com.android.server.TelephonyRegistry$Record: long subId>;

        $b3 = $l2 cmp l0;

        if $b3 == 0 goto label04;

        $l4 = r4.<com.android.server.TelephonyRegistry$Record: long subId>;

        $b5 = $l4 cmp 9223372036854775807L;

        if $b5 != 0 goto label07;

     label04:
        $r18 = r4.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r17 = new android.os.Bundle;

        specialinvoke $r17.<android.os.Bundle: void <init>(android.os.Bundle)>(r1);

        interfaceinvoke $r18.<com.android.internal.telephony.IPhoneStateListener: void onCellLocationChanged(android.os.Bundle)>($r17);

     label05:
        goto label07;

     label06:
        $r21 := @caughtexception;

        $r20 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r19 = r4.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r20.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

     label07:
        goto label03;

     label08:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r2;

     label09:
        goto label12;

     label10:
        $r22 := @caughtexception;

        r6 = $r22;

        exitmonitor r2;

     label11:
        throw r6;

     label12:
        return;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void notifyOtaspChanged(int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, $i1, $i2;
        java.util.ArrayList r1, $r6, $r7, $r11;
        java.util.Iterator r2;
        com.android.server.TelephonyRegistry$Record r3;
        java.lang.Throwable r5, $r13;
        boolean $z0, $z1;
        java.lang.Object $r8;
        android.os.RemoteException $r9;
        com.android.internal.telephony.IPhoneStateListener $r10;
        android.os.IBinder $r12;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyOtaspChanged()");

        if $z0 != 0 goto label01;

        return;

     label01:
        $r6 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r1 = $r6;

        entermonitor $r6;

     label02:
        r0.<com.android.server.TelephonyRegistry: int mOtaspMode> = i0;

        $r7 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.TelephonyRegistry$Record) $r8;

        $i1 = r3.<com.android.server.TelephonyRegistry$Record: int events>;

        $i2 = $i1 & 512;

        if $i2 == 0 goto label07;

     label04:
        $r10 = r3.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r10.<com.android.internal.telephony.IPhoneStateListener: void onOtaspChanged(int)>(i0);

     label05:
        goto label07;

     label06:
        $r9 := @caughtexception;

        $r11 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r12 = r3.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

     label07:
        goto label03;

     label08:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label09:
        goto label12;

     label10:
        $r13 := @caughtexception;

        r5 = $r13;

        exitmonitor r1;

     label11:
        throw r5;

     label12:
        return;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void notifyPreciseCallState(int, int, int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, i2, $i3, $i4;
        java.util.ArrayList r1, $r6, $r8, $r14;
        java.util.Iterator r2;
        com.android.server.TelephonyRegistry$Record r3;
        java.lang.Throwable r5, $r11;
        boolean $z0, $z1;
        android.telephony.PreciseCallState $r7, $r10;
        java.lang.Object $r9;
        com.android.internal.telephony.IPhoneStateListener $r12;
        android.os.RemoteException $r13;
        android.os.IBinder $r15;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyPreciseCallState()");

        if $z0 != 0 goto label01;

        return;

     label01:
        $r6 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r1 = $r6;

        entermonitor $r6;

     label02:
        r0.<com.android.server.TelephonyRegistry: int mRingingCallState> = i0;

        r0.<com.android.server.TelephonyRegistry: int mForegroundCallState> = i1;

        r0.<com.android.server.TelephonyRegistry: int mBackgroundCallState> = i2;

        $r7 = new android.telephony.PreciseCallState;

        specialinvoke $r7.<android.telephony.PreciseCallState: void <init>(int,int,int,int,int)>(i0, i1, i2, -1, -1);

        r0.<com.android.server.TelephonyRegistry: android.telephony.PreciseCallState mPreciseCallState> = $r7;

        $r8 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.TelephonyRegistry$Record) $r9;

        $i3 = r3.<com.android.server.TelephonyRegistry$Record: int events>;

        $i4 = $i3 & 2048;

        if $i4 == 0 goto label07;

     label04:
        $r12 = r3.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r10 = r0.<com.android.server.TelephonyRegistry: android.telephony.PreciseCallState mPreciseCallState>;

        interfaceinvoke $r12.<com.android.internal.telephony.IPhoneStateListener: void onPreciseCallStateChanged(android.telephony.PreciseCallState)>($r10);

     label05:
        goto label07;

     label06:
        $r13 := @caughtexception;

        $r14 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r15 = r3.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

     label07:
        goto label03;

     label08:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label09:
        goto label12;

     label10:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r1;

     label11:
        throw r5;

     label12:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void broadcastPreciseCallStateChanged(int,int,int,int,int)>(i0, i1, i2, -1, -1);

        return;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void notifyDisconnectCause(int, int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.util.ArrayList r1, $r6, $r8, $r14;
        java.util.Iterator r2;
        com.android.server.TelephonyRegistry$Record r3;
        java.lang.Throwable r5, $r15;
        boolean $z0, $z1;
        android.telephony.PreciseCallState $r7, $r11;
        java.lang.Object $r9;
        com.android.internal.telephony.IPhoneStateListener $r10;
        android.os.IBinder $r12;
        android.os.RemoteException $r13;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyDisconnectCause()");

        if $z0 != 0 goto label01;

        return;

     label01:
        $r6 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r1 = $r6;

        entermonitor $r6;

     label02:
        $r7 = new android.telephony.PreciseCallState;

        $i4 = r0.<com.android.server.TelephonyRegistry: int mRingingCallState>;

        $i3 = r0.<com.android.server.TelephonyRegistry: int mForegroundCallState>;

        $i2 = r0.<com.android.server.TelephonyRegistry: int mBackgroundCallState>;

        specialinvoke $r7.<android.telephony.PreciseCallState: void <init>(int,int,int,int,int)>($i4, $i3, $i2, i0, i1);

        r0.<com.android.server.TelephonyRegistry: android.telephony.PreciseCallState mPreciseCallState> = $r7;

        $r8 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.TelephonyRegistry$Record) $r9;

        $i9 = r3.<com.android.server.TelephonyRegistry$Record: int events>;

        $i8 = $i9 & 2048;

        if $i8 == 0 goto label07;

     label04:
        $r10 = r3.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r11 = r0.<com.android.server.TelephonyRegistry: android.telephony.PreciseCallState mPreciseCallState>;

        interfaceinvoke $r10.<com.android.internal.telephony.IPhoneStateListener: void onPreciseCallStateChanged(android.telephony.PreciseCallState)>($r11);

     label05:
        goto label07;

     label06:
        $r13 := @caughtexception;

        $r14 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r12 = r3.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

     label07:
        goto label03;

     label08:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r1;

     label09:
        goto label12;

     label10:
        $r15 := @caughtexception;

        r5 = $r15;

        exitmonitor r1;

     label11:
        throw r5;

     label12:
        $i7 = r0.<com.android.server.TelephonyRegistry: int mRingingCallState>;

        $i5 = r0.<com.android.server.TelephonyRegistry: int mForegroundCallState>;

        $i6 = r0.<com.android.server.TelephonyRegistry: int mBackgroundCallState>;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void broadcastPreciseCallStateChanged(int,int,int,int,int)>($i7, $i5, $i6, i0, i1);

        return;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void notifyPreciseDataConnectionFailed(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.server.TelephonyRegistry r0;
        java.lang.String r1, r2, r3, r4;
        java.util.ArrayList r5, $r10, $r12, $r18;
        java.util.Iterator r6;
        com.android.server.TelephonyRegistry$Record r7;
        java.lang.Throwable r9, $r19;
        boolean $z0, $z1;
        android.telephony.PreciseDataConnectionState $r11, $r15;
        java.lang.Object $r13;
        int $i0, $i1;
        com.android.internal.telephony.IPhoneStateListener $r14;
        android.os.IBinder $r16;
        android.os.RemoteException $r17;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyPreciseDataConnectionFailed()");

        if $z0 != 0 goto label01;

        return;

     label01:
        $r10 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r5 = $r10;

        entermonitor $r10;

     label02:
        $r11 = new android.telephony.PreciseDataConnectionState;

        specialinvoke $r11.<android.telephony.PreciseDataConnectionState: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,java.lang.String)>(-1, 0, r2, r3, r1, null, r4);

        r0.<com.android.server.TelephonyRegistry: android.telephony.PreciseDataConnectionState mPreciseDataConnectionState> = $r11;

        $r12 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r6 = virtualinvoke $r12.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.android.server.TelephonyRegistry$Record) $r13;

        $i1 = r7.<com.android.server.TelephonyRegistry$Record: int events>;

        $i0 = $i1 & 4096;

        if $i0 == 0 goto label07;

     label04:
        $r14 = r7.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r15 = r0.<com.android.server.TelephonyRegistry: android.telephony.PreciseDataConnectionState mPreciseDataConnectionState>;

        interfaceinvoke $r14.<com.android.internal.telephony.IPhoneStateListener: void onPreciseDataConnectionStateChanged(android.telephony.PreciseDataConnectionState)>($r15);

     label05:
        goto label07;

     label06:
        $r17 := @caughtexception;

        $r18 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r16 = r7.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r18.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

     label07:
        goto label03;

     label08:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r5;

     label09:
        goto label12;

     label10:
        $r19 := @caughtexception;

        r9 = $r19;

        exitmonitor r5;

     label11:
        throw r9;

     label12:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void broadcastPreciseDataConnectionStateChanged(int,int,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,java.lang.String)>(-1, 0, r2, r3, r1, null, r4);

        return;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void notifyVoLteServiceStateChanged(android.telephony.VoLteServiceState)
    {
        com.android.server.TelephonyRegistry r0;
        android.telephony.VoLteServiceState r1, $r10, $r11;
        java.util.ArrayList r2, $r7, $r8, $r14;
        java.util.Iterator r3;
        com.android.server.TelephonyRegistry$Record r4;
        java.lang.Throwable r6, $r16;
        boolean $z0, $z1;
        java.lang.Object $r9;
        int $i0, $i1;
        android.os.RemoteException $r12;
        com.android.internal.telephony.IPhoneStateListener $r13;
        android.os.IBinder $r15;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: android.telephony.VoLteServiceState;

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyVoLteServiceStateChanged()");

        if $z0 != 0 goto label01;

        return;

     label01:
        $r7 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = $r7;

        entermonitor $r7;

     label02:
        r0.<com.android.server.TelephonyRegistry: android.telephony.VoLteServiceState mVoLteServiceState> = r1;

        $r8 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r3 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.TelephonyRegistry$Record) $r9;

        $i0 = r4.<com.android.server.TelephonyRegistry$Record: int events>;

        $i1 = $i0 & 16384;

        if $i1 == 0 goto label07;

     label04:
        $r13 = r4.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        $r11 = new android.telephony.VoLteServiceState;

        $r10 = r0.<com.android.server.TelephonyRegistry: android.telephony.VoLteServiceState mVoLteServiceState>;

        specialinvoke $r11.<android.telephony.VoLteServiceState: void <init>(android.telephony.VoLteServiceState)>($r10);

        interfaceinvoke $r13.<com.android.internal.telephony.IPhoneStateListener: void onVoLteServiceStateChanged(android.telephony.VoLteServiceState)>($r11);

     label05:
        goto label07;

     label06:
        $r12 := @caughtexception;

        $r14 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r15 = r4.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

     label07:
        goto label03;

     label08:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r2;

     label09:
        goto label12;

     label10:
        $r16 := @caughtexception;

        r6 = $r16;

        exitmonitor r2;

     label11:
        throw r6;

     label12:
        return;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void notifyOemHookRawEventForSubscriber(long, byte[])
    {
        com.android.server.TelephonyRegistry r0;
        long l0, $l4, $l5;
        byte[] r1;
        java.util.ArrayList r2, $r7, $r8, $r12;
        java.util.Iterator r3;
        com.android.server.TelephonyRegistry$Record r4;
        java.lang.Throwable r6, $r14;
        boolean $z0, $z1;
        java.lang.Object $r9;
        int $i1, $i2;
        byte $b3, $b6;
        com.android.internal.telephony.IPhoneStateListener $r10;
        android.os.RemoteException $r11;
        android.os.IBinder $r13;

        r0 := @this: com.android.server.TelephonyRegistry;

        l0 := @parameter0: long;

        r1 := @parameter1: byte[];

        $z0 = specialinvoke r0.<com.android.server.TelephonyRegistry: boolean checkNotifyPermission(java.lang.String)>("notifyOemHookRawEventForSubscriber");

        if $z0 != 0 goto label01;

        return;

     label01:
        $r7 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r2 = $r7;

        entermonitor $r7;

     label02:
        $r8 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r3 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.TelephonyRegistry$Record) $r9;

        $i2 = r4.<com.android.server.TelephonyRegistry$Record: int events>;

        $i1 = $i2 & 32768;

        if $i1 == 0 goto label07;

        $l4 = r4.<com.android.server.TelephonyRegistry$Record: long subId>;

        $b3 = $l4 cmp l0;

        if $b3 == 0 goto label04;

        $l5 = r4.<com.android.server.TelephonyRegistry$Record: long subId>;

        $b6 = $l5 cmp 9223372036854775807L;

        if $b6 != 0 goto label07;

     label04:
        $r10 = r4.<com.android.server.TelephonyRegistry$Record: com.android.internal.telephony.IPhoneStateListener callback>;

        interfaceinvoke $r10.<com.android.internal.telephony.IPhoneStateListener: void onOemHookRawEvent(byte[])>(r1);

     label05:
        goto label07;

     label06:
        $r11 := @caughtexception;

        $r12 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $r13 = r4.<com.android.server.TelephonyRegistry$Record: android.os.IBinder binder>;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

     label07:
        goto label03;

     label08:
        specialinvoke r0.<com.android.server.TelephonyRegistry: void handleRemoveListLocked()>();

        exitmonitor r2;

     label09:
        goto label12;

     label10:
        $r14 := @caughtexception;

        r6 = $r14;

        exitmonitor r2;

     label11:
        throw r6;

     label12:
        return;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.TelephonyRegistry r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3, $r35, $r78, $r84;
        java.util.ArrayList r4, $r8, $r9, $r19, $r109;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        com.android.server.TelephonyRegistry$Record r5;
        java.lang.Throwable r6, $r114;
        android.content.Context $r7;
        android.telephony.TelephonyManager $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r15, $r17, $r18, $r22, $r23, $r24, $r25, $r26, $r28, $r29, $r30, $r32, $r37, $r38, $r39, $r40, $r42, $r44, $r49, $r50, $r51, $r52, $r54, $r55, $r56, $r59, $r62, $r64, $r66, $r67, $r69, $r70, $r71, $r72, $r73, $r75, $r76, $r81, $r82, $r86, $r87, $r88, $r90, $r91, $r92, $r96, $r97, $r100, $r101, $r103, $r107, $r110, $r111, $r113, $r115, $r116, $r117, $r118, $r120;
        android.telephony.DataConnectionRealTimeInfo $r14;
        java.lang.String $r16, $r20, $r27, $r31, $r33, $r36, $r41, $r43, $r53, $r60, $r63, $r65, $r68, $r77, $r80, $r83, $r85, $r89, $r93, $r102, $r106, $r112, $r119;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r21, $r108;
        int[] $r34, $r61, $r74;
        android.telephony.ServiceState $r45;
        android.telephony.ServiceState[] $r46;
        android.telephony.SignalStrength $r47;
        android.telephony.SignalStrength[] $r48;
        boolean[] $r57, $r58, $r79;
        android.net.LinkProperties[] $r94;
        android.net.LinkProperties $r95;
        android.os.Bundle $r98;
        android.os.Bundle[] $r99;
        android.net.NetworkCapabilities $r104;
        android.net.NetworkCapabilities[] $r105;
        java.util.Iterator r121;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r7 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $i2 = virtualinvoke $r7.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i2 == 0 goto label01;

        $r116 = new java.lang.StringBuilder;

        specialinvoke $r116.<java.lang.StringBuilder: void <init>()>();

        $r115 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump telephony.registry from from pid=");

        $i7 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r117 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i8 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r120 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r119 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r119);

        return;

     label01:
        $r8 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r4 = $r8;

        entermonitor $r8;

     label02:
        $r9 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        i0 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("last known state:");

        i1 = 0;

     label03:
        $r10 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        $i3 = virtualinvoke $r10.<android.telephony.TelephonyManager: int getPhoneCount()>();

        if i1 >= $i3 goto label04;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Phone Id=");

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r31);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCallState=");

        $r34 = r0.<com.android.server.TelephonyRegistry: int[] mCallState>;

        $i4 = $r34[i1];

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r33);

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCallIncomingNumber=");

        $r35 = r0.<com.android.server.TelephonyRegistry: java.lang.String[] mCallIncomingNumber>;

        $r36 = $r35[i1];

        $r42 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r41);

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mServiceState=");

        $r46 = r0.<com.android.server.TelephonyRegistry: android.telephony.ServiceState[] mServiceState>;

        $r45 = $r46[i1];

        $r44 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r45);

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r43);

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mSignalStrength=");

        $r48 = r0.<com.android.server.TelephonyRegistry: android.telephony.SignalStrength[] mSignalStrength>;

        $r47 = $r48[i1];

        $r54 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r47);

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r53);

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mMessageWaiting=");

        $r58 = r0.<com.android.server.TelephonyRegistry: boolean[] mMessageWaiting>;

        $z2 = $r58[i1];

        $r59 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r60);

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCallForwarding=");

        $r57 = r0.<com.android.server.TelephonyRegistry: boolean[] mCallForwarding>;

        $z1 = $r57[i1];

        $r64 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r65);

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDataActivity=");

        $r61 = r0.<com.android.server.TelephonyRegistry: int[] mDataActivity>;

        $i5 = $r61[i1];

        $r62 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r63);

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDataConnectionState=");

        $r74 = r0.<com.android.server.TelephonyRegistry: int[] mDataConnectionState>;

        $i6 = $r74[i1];

        $r69 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r68 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r68);

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDataConnectionPossible=");

        $r79 = r0.<com.android.server.TelephonyRegistry: boolean[] mDataConnectionPossible>;

        $z3 = $r79[i1];

        $r81 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r80 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r80);

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDataConnectionReason=");

        $r78 = r0.<com.android.server.TelephonyRegistry: java.lang.String[] mDataConnectionReason>;

        $r77 = $r78[i1];

        $r88 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r89);

        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDataConnectionApn=");

        $r84 = r0.<com.android.server.TelephonyRegistry: java.lang.String[] mDataConnectionApn>;

        $r85 = $r84[i1];

        $r82 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r83);

        $r96 = new java.lang.StringBuilder;

        specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDataConnectionLinkProperties=");

        $r94 = r0.<com.android.server.TelephonyRegistry: android.net.LinkProperties[] mDataConnectionLinkProperties>;

        $r95 = $r94[i1];

        $r92 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r95);

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r93);

        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDataConnectionNetworkCapabilities=");

        $r105 = r0.<com.android.server.TelephonyRegistry: android.net.NetworkCapabilities[] mDataConnectionNetworkCapabilities>;

        $r104 = $r105[i1];

        $r103 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r104);

        $r102 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r102);

        $r101 = new java.lang.StringBuilder;

        specialinvoke $r101.<java.lang.StringBuilder: void <init>()>();

        $r100 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCellLocation=");

        $r99 = r0.<com.android.server.TelephonyRegistry: android.os.Bundle[] mCellLocation>;

        $r98 = $r99[i1];

        $r113 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r98);

        $r112 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r112);

        $r111 = new java.lang.StringBuilder;

        specialinvoke $r111.<java.lang.StringBuilder: void <init>()>();

        $r110 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCellInfo=");

        $r109 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mCellInfo>;

        $r108 = virtualinvoke $r109.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r107 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r108);

        $r106 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r106);

        i1 = i1 + 1;

        goto label03;

     label04:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDcRtInfo=");

        $r14 = r0.<com.android.server.TelephonyRegistry: android.telephony.DataConnectionRealTimeInfo mDcRtInfo>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("registrations: count=");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        $r19 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRecords>;

        r121 = virtualinvoke $r19.<java.util.ArrayList: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke r121.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r21 = interfaceinvoke r121.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.TelephonyRegistry$Record) $r21;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r27);

        goto label05;

     label06:
        exitmonitor r4;

     label07:
        goto label10;

     label08:
        $r114 := @caughtexception;

        r6 = $r114;

        exitmonitor r4;

     label09:
        throw r6;

     label10:
        return;

        catch java.lang.Throwable from label02 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private void broadcastServiceStateChanged(android.telephony.ServiceState, long)
    {
        com.android.server.TelephonyRegistry r0;
        android.telephony.ServiceState r1;
        long l0, l1;
        java.lang.Throwable r3, $r10;
        com.android.internal.app.IBatteryStats $r4;
        int $i2;
        android.content.Intent $r5, r13;
        android.os.Bundle $r6, r14;
        android.os.UserHandle $r9;
        android.content.Context $r11;
        android.os.RemoteException $r12;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: android.telephony.ServiceState;

        l0 := @parameter1: long;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.TelephonyRegistry: com.android.internal.app.IBatteryStats mBatteryStats>;

        $i2 = virtualinvoke r1.<android.telephony.ServiceState: int getState()>();

        interfaceinvoke $r4.<com.android.internal.app.IBatteryStats: void notePhoneState(int)>($i2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label7;

     label3:
        $r12 := @caughtexception;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label7;

     label5:
        $r10 := @caughtexception;

        r3 = $r10;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r3;

     label7:
        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.SERVICE_STATE");

        r13 = $r5;

        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>()>();

        r14 = $r6;

        virtualinvoke r1.<android.telephony.ServiceState: void fillInNotifierBundle(android.os.Bundle)>(r14);

        virtualinvoke r13.<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>(r14);

        virtualinvoke r13.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("subscription", l0);

        $r11 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r9 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r11.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r13, $r9);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void broadcastSignalStrengthChanged(android.telephony.SignalStrength, long)
    {
        com.android.server.TelephonyRegistry r0;
        android.telephony.SignalStrength r1;
        long l0, l1;
        java.lang.Throwable r3, $r13;
        com.android.internal.app.IBatteryStats $r4;
        android.content.Intent $r5, r14;
        android.os.Bundle $r7, r15;
        android.os.UserHandle $r10;
        android.os.RemoteException $r11;
        android.content.Context $r12;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: android.telephony.SignalStrength;

        l0 := @parameter1: long;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.TelephonyRegistry: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r4.<com.android.internal.app.IBatteryStats: void notePhoneSignalStrength(android.telephony.SignalStrength)>(r1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label7;

     label3:
        $r11 := @caughtexception;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label7;

     label5:
        $r13 := @caughtexception;

        r3 = $r13;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r3;

     label7:
        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.SIG_STR");

        r14 = $r5;

        virtualinvoke r14.<android.content.Intent: android.content.Intent addFlags(int)>(536870912);

        $r7 = new android.os.Bundle;

        specialinvoke $r7.<android.os.Bundle: void <init>()>();

        r15 = $r7;

        virtualinvoke r1.<android.telephony.SignalStrength: void fillInNotifierBundle(android.os.Bundle)>(r15);

        virtualinvoke r14.<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>(r15);

        virtualinvoke r14.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("subscription", l0);

        $r12 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r10 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r12.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r14, $r10);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void broadcastCallStateChanged(int, java.lang.String, long)
    {
        com.android.server.TelephonyRegistry r0;
        int i0;
        java.lang.String r1, $r7;
        long l1, l2;
        java.lang.Throwable r3, $r14;
        com.android.internal.app.IBatteryStats $r4, $r12;
        android.content.Intent $r5, r16;
        com.android.internal.telephony.PhoneConstants$State $r6;
        boolean $z0;
        android.content.Context $r10;
        android.os.UserHandle $r11;
        android.os.RemoteException $r15;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        if i0 != 0 goto label2;

        $r12 = r0.<com.android.server.TelephonyRegistry: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r12.<com.android.internal.app.IBatteryStats: void notePhoneOff()>();

        goto label3;

     label2:
        $r4 = r0.<com.android.server.TelephonyRegistry: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r4.<com.android.internal.app.IBatteryStats: void notePhoneOn()>();

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label8;

     label4:
        $r15 := @caughtexception;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label8;

     label6:
        $r14 := @caughtexception;

        r3 = $r14;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r3;

     label8:
        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.PHONE_STATE");

        r16 = $r5;

        $r6 = staticinvoke <com.android.internal.telephony.DefaultPhoneNotifier: com.android.internal.telephony.PhoneConstants$State convertCallState(int)>(i0);

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.PhoneConstants$State: java.lang.String toString()>();

        virtualinvoke r16.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("state", $r7);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label9;

        virtualinvoke r16.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("incoming_number", r1);

     label9:
        virtualinvoke r16.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("subscription", l1);

        $r10 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r11 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r10.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>(r16, $r11, "android.permission.READ_PHONE_STATE");

        return;

        catch android.os.RemoteException from label1 to label3 with label4;
        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private void broadcastDataConnectionStateChanged(int, boolean, java.lang.String, java.lang.String, java.lang.String, android.net.LinkProperties, android.net.NetworkCapabilities, boolean, long)
    {
        com.android.server.TelephonyRegistry r0;
        int i0;
        boolean z0, z1;
        java.lang.String r1, r2, r3, r7, $r11;
        android.net.LinkProperties r4;
        android.net.NetworkCapabilities r5;
        long l1;
        android.content.Intent r6, $r8;
        com.android.internal.telephony.PhoneConstants$DataState $r9;
        android.os.UserHandle $r14;
        android.content.Context $r17;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: android.net.LinkProperties;

        r5 := @parameter6: android.net.NetworkCapabilities;

        z1 := @parameter7: boolean;

        l1 := @parameter8: long;

        $r8 = new android.content.Intent;

        specialinvoke $r8.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.ANY_DATA_STATE");

        r6 = $r8;

        $r9 = staticinvoke <com.android.internal.telephony.DefaultPhoneNotifier: com.android.internal.telephony.PhoneConstants$DataState convertDataState(int)>(i0);

        $r11 = virtualinvoke $r9.<com.android.internal.telephony.PhoneConstants$DataState: java.lang.String toString()>();

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("state", $r11);

        if z0 != 0 goto label1;

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("networkUnvailable", 1);

     label1:
        if r1 == null goto label2;

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("reason", r1);

     label2:
        if r4 == null goto label3;

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("linkProperties", r4);

        r7 = virtualinvoke r4.<android.net.LinkProperties: java.lang.String getInterfaceName()>();

        if r7 == null goto label3;

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("iface", r7);

     label3:
        if r5 == null goto label4;

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("networkCapabilities", r5);

     label4:
        if z1 == 0 goto label5;

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("networkRoaming", 1);

     label5:
        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("apn", r2);

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("apnType", r3);

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("subscription", l1);

        $r17 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r14 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r17.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r6, $r14);

        return;
    }

    private void broadcastDataConnectionFailed(java.lang.String, java.lang.String, long)
    {
        com.android.server.TelephonyRegistry r0;
        java.lang.String r1, r2;
        long l0;
        android.content.Intent r3, $r4;
        android.os.UserHandle $r8;
        android.content.Context $r9;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.DATA_CONNECTION_FAILED");

        r3 = $r4;

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("reason", r1);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("apnType", r2);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("subscription", l0);

        $r9 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r8 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r9.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r3, $r8);

        return;
    }

    private void broadcastPreciseCallStateChanged(int, int, int, int, int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1, i2, i3, i4;
        android.content.Intent r1, $r2;
        android.os.UserHandle $r8;
        android.content.Context $r9;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.PRECISE_CALL_STATE");

        r1 = $r2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("ringing_state", i0);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("foreground_state", i1);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("background_state", i2);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("disconnect_cause", i3);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("precise_disconnect_cause", i4);

        $r9 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r8 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r9.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>(r1, $r8, "android.permission.READ_PRECISE_PHONE_STATE");

        return;
    }

    private void broadcastPreciseDataConnectionStateChanged(int, int, java.lang.String, java.lang.String, java.lang.String, android.net.LinkProperties, java.lang.String)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, i1;
        java.lang.String r1, r2, r3, r5;
        android.net.LinkProperties r4;
        android.content.Intent r6, $r7;
        android.os.UserHandle $r10;
        android.content.Context $r11;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: android.net.LinkProperties;

        r5 := @parameter6: java.lang.String;

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.PRECISE_DATA_CONNECTION_STATE_CHANGED");

        r6 = $r7;

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("state", i0);

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("networkType", i1);

        if r3 == null goto label1;

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("reason", r3);

     label1:
        if r1 == null goto label2;

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("apnType", r1);

     label2:
        if r2 == null goto label3;

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("apn", r2);

     label3:
        if r4 == null goto label4;

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("linkProperties", r4);

     label4:
        if r5 == null goto label5;

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("failCause", r5);

     label5:
        $r11 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $r10 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r11.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>(r6, $r10, "android.permission.READ_PRECISE_PHONE_STATE");

        return;
    }

    private boolean checkNotifyPermission(java.lang.String)
    {
        com.android.server.TelephonyRegistry r0;
        java.lang.String r1;
        android.content.Context $r3;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        $i0 = virtualinvoke $r3.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.MODIFY_PHONE_STATE");

        if $i0 != 0 goto label1;

        return 1;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Modify Phone State Permission Denial: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from pid=");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return 0;
    }

    private void checkListenerPermission(int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.content.Context $r1, $r2, $r3, $r4, $r5;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        $i1 = i0 & 16;

        if $i1 == 0 goto label1;

        $r5 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        virtualinvoke $r5.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_COARSE_LOCATION", null);

     label1:
        $i2 = i0 & 1024;

        if $i2 == 0 goto label2;

        $r4 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        virtualinvoke $r4.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_COARSE_LOCATION", null);

     label2:
        $i3 = i0 & 16620;

        if $i3 == 0 goto label3;

        $r3 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.READ_PHONE_STATE", null);

     label3:
        $i4 = i0 & 6144;

        if $i4 == 0 goto label4;

        $r2 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.READ_PRECISE_PHONE_STATE", null);

     label4:
        $i5 = i0 & 32768;

        if $i5 == 0 goto label5;

        $r1 = r0.<com.android.server.TelephonyRegistry: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.READ_PRIVILEGED_PHONE_STATE", null);

     label5:
        return;
    }

    private void handleRemoveListLocked()
    {
        com.android.server.TelephonyRegistry r0;
        java.util.Iterator r1;
        android.os.IBinder r2;
        java.util.ArrayList $r3, $r4, $r5;
        int $i0;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: com.android.server.TelephonyRegistry;

        $r3 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label3;

        $r4 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        r1 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.os.IBinder) $r6;

        specialinvoke r0.<com.android.server.TelephonyRegistry: void remove(android.os.IBinder)>(r2);

        goto label1;

     label2:
        $r5 = r0.<com.android.server.TelephonyRegistry: java.util.ArrayList mRemoveList>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

     label3:
        return;
    }

    private boolean validateEventsAndUserLocked(com.android.server.TelephonyRegistry$Record, int)
    {
        com.android.server.TelephonyRegistry r0;
        com.android.server.TelephonyRegistry$Record r1;
        int i0, i1, $i3, $i4, $i5;
        long l2;
        java.lang.Throwable r2, $r3;
        boolean $z1, z2;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: com.android.server.TelephonyRegistry$Record;

        i0 := @parameter1: int;

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        i1 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        $i3 = r1.<com.android.server.TelephonyRegistry$Record: int callerUid>;

        if $i3 != i1 goto label2;

        $i4 = r1.<com.android.server.TelephonyRegistry$Record: int events>;

        $i5 = $i4 & i0;

        if $i5 == 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z2 = $z1;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label7;

     label5:
        $r3 := @caughtexception;

        r2 = $r3;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r2;

     label7:
        return z2;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private boolean validatePhoneId(int)
    {
        com.android.server.TelephonyRegistry r0;
        int i0, $i1;
        boolean z0, $z1;

        r0 := @this: com.android.server.TelephonyRegistry;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = r0.<com.android.server.TelephonyRegistry: int mNumPhones>;

        if i0 >= $i1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        return z0;
    }

    private static void log(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("TelephonyRegistry", r0);

        return;
    }

    private void logServiceStateChanged(java.lang.String, long, int, android.telephony.ServiceState)
    {
        com.android.server.TelephonyRegistry r0;
        java.lang.String r1;
        long l0;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.telephony.ServiceState r2;
        android.text.format.Time r3, $r8;
        com.android.server.TelephonyRegistry$LogSSC[] $r4, $r5, $r6, $r9, $r11, $r13;
        com.android.server.TelephonyRegistry$LogSSC $r7, $r10, $r12;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r2 := @parameter3: android.telephony.ServiceState;

        $r4 = r0.<com.android.server.TelephonyRegistry: com.android.server.TelephonyRegistry$LogSSC[] logSSC>;

        if $r4 == null goto label1;

        $r5 = r0.<com.android.server.TelephonyRegistry: com.android.server.TelephonyRegistry$LogSSC[] logSSC>;

        $i2 = lengthof $r5;

        if $i2 != 0 goto label2;

     label1:
        return;

     label2:
        $r6 = r0.<com.android.server.TelephonyRegistry: com.android.server.TelephonyRegistry$LogSSC[] logSSC>;

        $i3 = r0.<com.android.server.TelephonyRegistry: int next>;

        $r7 = $r6[$i3];

        if $r7 != null goto label3;

        $r13 = r0.<com.android.server.TelephonyRegistry: com.android.server.TelephonyRegistry$LogSSC[] logSSC>;

        $i8 = r0.<com.android.server.TelephonyRegistry: int next>;

        $r12 = new com.android.server.TelephonyRegistry$LogSSC;

        specialinvoke $r12.<com.android.server.TelephonyRegistry$LogSSC: void <init>(com.android.server.TelephonyRegistry$1)>(null);

        $r13[$i8] = $r12;

     label3:
        $r8 = new android.text.format.Time;

        specialinvoke $r8.<android.text.format.Time: void <init>()>();

        r3 = $r8;

        virtualinvoke r3.<android.text.format.Time: void setToNow()>();

        $r9 = r0.<com.android.server.TelephonyRegistry: com.android.server.TelephonyRegistry$LogSSC[] logSSC>;

        $i4 = r0.<com.android.server.TelephonyRegistry: int next>;

        $r10 = $r9[$i4];

        virtualinvoke $r10.<com.android.server.TelephonyRegistry$LogSSC: void set(android.text.format.Time,java.lang.String,long,int,android.telephony.ServiceState)>(r3, r1, l0, i1, r2);

        $i5 = r0.<com.android.server.TelephonyRegistry: int next>;

        $i6 = $i5 + 1;

        r0.<com.android.server.TelephonyRegistry: int next> = $i6;

        $r11 = r0.<com.android.server.TelephonyRegistry: com.android.server.TelephonyRegistry$LogSSC[] logSSC>;

        $i7 = lengthof $r11;

        if $i6 < $i7 goto label4;

        r0.<com.android.server.TelephonyRegistry: int next> = 0;

     label4:
        return;
    }

    private void toStringLogSSC(java.lang.String)
    {
        com.android.server.TelephonyRegistry r0;
        java.lang.String r1, $r6, $r16, $r19, $r27;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.android.server.TelephonyRegistry$LogSSC[] $r2, $r7, $r11, $r15, $r17, $r21, $r25;
        java.lang.StringBuilder $r3, $r4, $r5, $r8, $r9, $r10, $r12, $r13, $r14, $r22, $r23, $r24;
        com.android.server.TelephonyRegistry$LogSSC $r18, $r20, $r26;

        r0 := @this: com.android.server.TelephonyRegistry;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.TelephonyRegistry: com.android.server.TelephonyRegistry$LogSSC[] logSSC>;

        if $r2 == null goto label1;

        $r7 = r0.<com.android.server.TelephonyRegistry: com.android.server.TelephonyRegistry$LogSSC[] logSSC>;

        $i1 = lengthof $r7;

        if $i1 == 0 goto label1;

        $i2 = r0.<com.android.server.TelephonyRegistry: int next>;

        if $i2 != 0 goto label2;

        $r25 = r0.<com.android.server.TelephonyRegistry: com.android.server.TelephonyRegistry$LogSSC[] logSSC>;

        $i7 = r0.<com.android.server.TelephonyRegistry: int next>;

        $r26 = $r25[$i7];

        if $r26 != null goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": logSSC is empty");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.TelephonyRegistry: void log(java.lang.String)>($r6);

        goto label5;

     label2:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": logSSC.length=");

        $r11 = r0.<com.android.server.TelephonyRegistry: com.android.server.TelephonyRegistry$LogSSC[] logSSC>;

        $i3 = lengthof $r11;

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" next=");

        $i4 = r0.<com.android.server.TelephonyRegistry: int next>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.TelephonyRegistry: void log(java.lang.String)>($r16);

        i0 = r0.<com.android.server.TelephonyRegistry: int next>;

        $r15 = r0.<com.android.server.TelephonyRegistry: com.android.server.TelephonyRegistry$LogSSC[] logSSC>;

        $r18 = $r15[i0];

        if $r18 != null goto label3;

        i0 = 0;

     label3:
        $r17 = r0.<com.android.server.TelephonyRegistry: com.android.server.TelephonyRegistry$LogSSC[] logSSC>;

        $r20 = $r17[i0];

        $r19 = virtualinvoke $r20.<com.android.server.TelephonyRegistry$LogSSC: java.lang.String toString()>();

        staticinvoke <com.android.server.TelephonyRegistry: void log(java.lang.String)>($r19);

        i0 = i0 + 1;

        $r21 = r0.<com.android.server.TelephonyRegistry: com.android.server.TelephonyRegistry$LogSSC[] logSSC>;

        $i5 = lengthof $r21;

        if i0 < $i5 goto label4;

        i0 = 0;

     label4:
        $i6 = r0.<com.android.server.TelephonyRegistry: int next>;

        if i0 != $i6 goto label3;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ----------------");

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.TelephonyRegistry: void log(java.lang.String)>($r27);

     label5:
        return;
    }

    static android.os.Bundle[] access$000(com.android.server.TelephonyRegistry)
    {
        com.android.server.TelephonyRegistry r0;
        android.os.Bundle[] $r1;

        r0 := @parameter0: com.android.server.TelephonyRegistry;

        $r1 = r0.<com.android.server.TelephonyRegistry: android.os.Bundle[] mCellLocation>;

        return $r1;
    }

    static android.os.Handler access$100(com.android.server.TelephonyRegistry)
    {
        com.android.server.TelephonyRegistry r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.TelephonyRegistry;

        $r1 = r0.<com.android.server.TelephonyRegistry: android.os.Handler mHandler>;

        return $r1;
    }

    public static void <clinit>()
    {
        <com.android.server.TelephonyRegistry: int MSG_UPDATE_DEFAULT_SUB> = 2;

        <com.android.server.TelephonyRegistry: int MSG_USER_SWITCHED> = 1;

        <com.android.server.TelephonyRegistry: int PRECISE_PHONE_STATE_PERMISSION_MASK> = 6144;

        <com.android.server.TelephonyRegistry: int PHONE_STATE_PERMISSION_MASK> = 16620;

        <com.android.server.TelephonyRegistry: boolean VDBG> = 0;

        <com.android.server.TelephonyRegistry: boolean DBG_LOC> = 0;

        <com.android.server.TelephonyRegistry: boolean DBG> = 0;

        <com.android.server.TelephonyRegistry: java.lang.String TAG> = "TelephonyRegistry";

        return;
    }
}
