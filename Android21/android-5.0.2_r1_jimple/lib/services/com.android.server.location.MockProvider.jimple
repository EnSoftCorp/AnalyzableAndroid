public class com.android.server.location.MockProvider extends java.lang.Object implements com.android.server.location.LocationProviderInterface
{
    private final java.lang.String mName;
    private final com.android.internal.location.ProviderProperties mProperties;
    private final android.location.ILocationManager mLocationManager;
    private final android.location.Location mLocation;
    private final android.os.Bundle mExtras;
    private int mStatus;
    private long mStatusUpdateTime;
    private boolean mHasLocation;
    private boolean mHasStatus;
    private boolean mEnabled;
    private static final java.lang.String TAG;

    public void <init>(java.lang.String, android.location.ILocationManager, com.android.internal.location.ProviderProperties)
    {
        com.android.server.location.MockProvider r0;
        java.lang.String r1;
        android.location.ILocationManager r2;
        com.android.internal.location.ProviderProperties r3;
        android.os.Bundle $r4;
        android.location.Location $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: com.android.server.location.MockProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.location.ILocationManager;

        r3 := @parameter2: com.android.internal.location.ProviderProperties;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        r0.<com.android.server.location.MockProvider: android.os.Bundle mExtras> = $r4;

        if r3 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("properties is null");

        throw $r6;

     label1:
        r0.<com.android.server.location.MockProvider: java.lang.String mName> = r1;

        r0.<com.android.server.location.MockProvider: android.location.ILocationManager mLocationManager> = r2;

        r0.<com.android.server.location.MockProvider: com.android.internal.location.ProviderProperties mProperties> = r3;

        $r5 = new android.location.Location;

        specialinvoke $r5.<android.location.Location: void <init>(java.lang.String)>(r1);

        r0.<com.android.server.location.MockProvider: android.location.Location mLocation> = $r5;

        return;
    }

    public java.lang.String getName()
    {
        com.android.server.location.MockProvider r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.location.MockProvider;

        $r1 = r0.<com.android.server.location.MockProvider: java.lang.String mName>;

        return $r1;
    }

    public com.android.internal.location.ProviderProperties getProperties()
    {
        com.android.server.location.MockProvider r0;
        com.android.internal.location.ProviderProperties $r1;

        r0 := @this: com.android.server.location.MockProvider;

        $r1 = r0.<com.android.server.location.MockProvider: com.android.internal.location.ProviderProperties mProperties>;

        return $r1;
    }

    public void disable()
    {
        com.android.server.location.MockProvider r0;

        r0 := @this: com.android.server.location.MockProvider;

        r0.<com.android.server.location.MockProvider: boolean mEnabled> = 0;

        return;
    }

    public void enable()
    {
        com.android.server.location.MockProvider r0;

        r0 := @this: com.android.server.location.MockProvider;

        r0.<com.android.server.location.MockProvider: boolean mEnabled> = 1;

        return;
    }

    public boolean isEnabled()
    {
        com.android.server.location.MockProvider r0;
        boolean $z0;

        r0 := @this: com.android.server.location.MockProvider;

        $z0 = r0.<com.android.server.location.MockProvider: boolean mEnabled>;

        return $z0;
    }

    public int getStatus(android.os.Bundle)
    {
        com.android.server.location.MockProvider r0;
        android.os.Bundle r1, $r2;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.server.location.MockProvider;

        r1 := @parameter0: android.os.Bundle;

        $z0 = r0.<com.android.server.location.MockProvider: boolean mHasStatus>;

        if $z0 == 0 goto label1;

        virtualinvoke r1.<android.os.Bundle: void clear()>();

        $r2 = r0.<com.android.server.location.MockProvider: android.os.Bundle mExtras>;

        virtualinvoke r1.<android.os.Bundle: void putAll(android.os.Bundle)>($r2);

        $i0 = r0.<com.android.server.location.MockProvider: int mStatus>;

        return $i0;

     label1:
        return 2;
    }

    public long getStatusUpdateTime()
    {
        com.android.server.location.MockProvider r0;
        long $l0;

        r0 := @this: com.android.server.location.MockProvider;

        $l0 = r0.<com.android.server.location.MockProvider: long mStatusUpdateTime>;

        return $l0;
    }

    public void setLocation(android.location.Location)
    {
        com.android.server.location.MockProvider r0;
        android.location.Location r1, $r3, $r4;
        boolean $z0;
        android.location.ILocationManager $r5;
        android.os.RemoteException $r6;

        r0 := @this: com.android.server.location.MockProvider;

        r1 := @parameter0: android.location.Location;

        $r3 = r0.<com.android.server.location.MockProvider: android.location.Location mLocation>;

        virtualinvoke $r3.<android.location.Location: void set(android.location.Location)>(r1);

        r0.<com.android.server.location.MockProvider: boolean mHasLocation> = 1;

        $z0 = r0.<com.android.server.location.MockProvider: boolean mEnabled>;

        if $z0 == 0 goto label4;

     label1:
        $r5 = r0.<com.android.server.location.MockProvider: android.location.ILocationManager mLocationManager>;

        $r4 = r0.<com.android.server.location.MockProvider: android.location.Location mLocation>;

        interfaceinvoke $r5.<android.location.ILocationManager: void reportLocation(android.location.Location,boolean)>($r4, 0);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MockProvider", "RemoteException calling reportLocation");

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void clearLocation()
    {
        com.android.server.location.MockProvider r0;

        r0 := @this: com.android.server.location.MockProvider;

        r0.<com.android.server.location.MockProvider: boolean mHasLocation> = 0;

        return;
    }

    public void setStatus(int, android.os.Bundle, long)
    {
        com.android.server.location.MockProvider r0;
        int i0;
        android.os.Bundle r1, $r2, $r3;
        long l1;

        r0 := @this: com.android.server.location.MockProvider;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        l1 := @parameter2: long;

        r0.<com.android.server.location.MockProvider: int mStatus> = i0;

        r0.<com.android.server.location.MockProvider: long mStatusUpdateTime> = l1;

        $r2 = r0.<com.android.server.location.MockProvider: android.os.Bundle mExtras>;

        virtualinvoke $r2.<android.os.Bundle: void clear()>();

        if r1 == null goto label1;

        $r3 = r0.<com.android.server.location.MockProvider: android.os.Bundle mExtras>;

        virtualinvoke $r3.<android.os.Bundle: void putAll(android.os.Bundle)>(r1);

     label1:
        r0.<com.android.server.location.MockProvider: boolean mHasStatus> = 1;

        return;
    }

    public void clearStatus()
    {
        com.android.server.location.MockProvider r0;

        r0 := @this: com.android.server.location.MockProvider;

        r0.<com.android.server.location.MockProvider: boolean mHasStatus> = 0;

        r0.<com.android.server.location.MockProvider: long mStatusUpdateTime> = 0L;

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.location.MockProvider r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;

        r0 := @this: com.android.server.location.MockProvider;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        virtualinvoke r0.<com.android.server.location.MockProvider: void dump(java.io.PrintWriter,java.lang.String)>(r2, "");

        return;
    }

    public void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.location.MockProvider r0;
        java.io.PrintWriter r1;
        java.lang.String r2, $r5, $r7, $r12, $r15, $r21, $r26, $r31, $r39, $r41;
        java.lang.StringBuilder $r3, $r4, $r6, $r8, $r9, $r10, $r11, $r13, $r14, $r16, $r19, $r20, $r22, $r23, $r24, $r25, $r27, $r28, $r29, $r30, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r40, $r42;
        boolean $z0, $z1;
        android.location.Location $r17;
        android.util.PrintWriterPrinter $r18;
        int $i0;
        long $l1;
        android.os.Bundle $r43;

        r0 := @this: com.android.server.location.MockProvider;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r5 = r0.<com.android.server.location.MockProvider: java.lang.String mName>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mHasLocation=");

        $z0 = r0.<com.android.server.location.MockProvider: boolean mHasLocation>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mLocation:");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r15);

        $r17 = r0.<com.android.server.location.MockProvider: android.location.Location mLocation>;

        $r18 = new android.util.PrintWriterPrinter;

        specialinvoke $r18.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>(r1);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<android.location.Location: void dump(android.util.Printer,java.lang.String)>($r18, $r21);

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mHasStatus=");

        $z1 = r0.<com.android.server.location.MockProvider: boolean mHasStatus>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r26);

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mStatus=");

        $i0 = r0.<com.android.server.location.MockProvider: int mStatus>;

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r31);

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r33 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mStatusUpdateTime=");

        $l1 = r0.<com.android.server.location.MockProvider: long mStatusUpdateTime>;

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r39);

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r42 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mExtras=");

        $r43 = r0.<com.android.server.location.MockProvider: android.os.Bundle mExtras>;

        $r40 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r41);

        return;
    }

    public void setRequest(com.android.internal.location.ProviderRequest, android.os.WorkSource)
    {
        com.android.server.location.MockProvider r0;
        com.android.internal.location.ProviderRequest r1;
        android.os.WorkSource r2;

        r0 := @this: com.android.server.location.MockProvider;

        r1 := @parameter0: com.android.internal.location.ProviderRequest;

        r2 := @parameter1: android.os.WorkSource;

        return;
    }

    public boolean sendExtraCommand(java.lang.String, android.os.Bundle)
    {
        com.android.server.location.MockProvider r0;
        java.lang.String r1;
        android.os.Bundle r2;

        r0 := @this: com.android.server.location.MockProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        return 0;
    }

    public static void <clinit>()
    {
        <com.android.server.location.MockProvider: java.lang.String TAG> = "MockProvider";

        return;
    }
}
