class com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin extends java.lang.Object
{
    private static final java.lang.String TAG_DISABLE_KEYGUARD_FEATURES;
    private static final java.lang.String TAG_DISABLE_CAMERA;
    private static final java.lang.String TAG_DISABLE_CALLER_ID;
    private static final java.lang.String TAG_DISABLE_SCREEN_CAPTURE;
    private static final java.lang.String TAG_DISABLE_ACCOUNT_MANAGEMENT;
    private static final java.lang.String TAG_REQUIRE_AUTO_TIME;
    private static final java.lang.String TAG_ACCOUNT_TYPE;
    private static final java.lang.String TAG_PERMITTED_ACCESSIBILITY_SERVICES;
    private static final java.lang.String TAG_ENCRYPTION_REQUESTED;
    private static final java.lang.String TAG_MANAGE_TRUST_AGENT_FEATURES;
    private static final java.lang.String TAG_TRUST_AGENT_FEATURE;
    private static final java.lang.String TAG_TRUST_AGENT_COMPONENT;
    private static final java.lang.String TAG_PASSWORD_EXPIRATION_DATE;
    private static final java.lang.String TAG_PASSWORD_EXPIRATION_TIMEOUT;
    private static final java.lang.String TAG_GLOBAL_PROXY_EXCLUSION_LIST;
    private static final java.lang.String TAG_GLOBAL_PROXY_SPEC;
    private static final java.lang.String TAG_SPECIFIES_GLOBAL_PROXY;
    private static final java.lang.String TAG_PERMITTED_IMES;
    private static final java.lang.String TAG_MAX_FAILED_PASSWORD_WIPE;
    private static final java.lang.String TAG_MAX_TIME_TO_UNLOCK;
    private static final java.lang.String TAG_MIN_PASSWORD_NONLETTER;
    private static final java.lang.String TAG_MIN_PASSWORD_SYMBOLS;
    private static final java.lang.String TAG_MIN_PASSWORD_NUMERIC;
    private static final java.lang.String TAG_MIN_PASSWORD_LETTERS;
    private static final java.lang.String TAG_MIN_PASSWORD_LOWERCASE;
    private static final java.lang.String TAG_MIN_PASSWORD_UPPERCASE;
    private static final java.lang.String TAG_PASSWORD_HISTORY_LENGTH;
    private static final java.lang.String TAG_MIN_PASSWORD_LENGTH;
    private static final java.lang.String ATTR_VALUE;
    private static final java.lang.String TAG_PASSWORD_QUALITY;
    private static final java.lang.String TAG_POLICIES;
    private static final java.lang.String TAG_CROSS_PROFILE_WIDGET_PROVIDERS;
    private static final java.lang.String TAG_PROVIDER;
    private static final java.lang.String TAG_PACKAGE_LIST_ITEM;
    final android.app.admin.DeviceAdminInfo info;
    int passwordQuality;
    static final int DEF_MINIMUM_PASSWORD_LENGTH;
    int minimumPasswordLength;
    static final int DEF_PASSWORD_HISTORY_LENGTH;
    int passwordHistoryLength;
    static final int DEF_MINIMUM_PASSWORD_UPPER_CASE;
    int minimumPasswordUpperCase;
    static final int DEF_MINIMUM_PASSWORD_LOWER_CASE;
    int minimumPasswordLowerCase;
    static final int DEF_MINIMUM_PASSWORD_LETTERS;
    int minimumPasswordLetters;
    static final int DEF_MINIMUM_PASSWORD_NUMERIC;
    int minimumPasswordNumeric;
    static final int DEF_MINIMUM_PASSWORD_SYMBOLS;
    int minimumPasswordSymbols;
    static final int DEF_MINIMUM_PASSWORD_NON_LETTER;
    int minimumPasswordNonLetter;
    static final long DEF_MAXIMUM_TIME_TO_UNLOCK;
    long maximumTimeToUnlock;
    static final int DEF_MAXIMUM_FAILED_PASSWORDS_FOR_WIPE;
    int maximumFailedPasswordsForWipe;
    static final long DEF_PASSWORD_EXPIRATION_TIMEOUT;
    long passwordExpirationTimeout;
    static final long DEF_PASSWORD_EXPIRATION_DATE;
    long passwordExpirationDate;
    static final int DEF_KEYGUARD_FEATURES_DISABLED;
    int disabledKeyguardFeatures;
    boolean encryptionRequested;
    boolean disableCamera;
    boolean disableCallerId;
    boolean disableScreenCapture;
    boolean requireAutoTime;
    java.util.Set accountTypesWithManagementDisabled;
    java.util.List permittedAccessiblityServices;
    java.util.List permittedInputMethods;
    boolean specifiesGlobalProxy;
    java.lang.String globalProxySpec;
    java.lang.String globalProxyExclusionList;
    java.util.HashMap trustAgentFeatures;
    java.util.List crossProfileWidgetProviders;

    void <init>(android.app.admin.DeviceAdminInfo)
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin r0;
        android.app.admin.DeviceAdminInfo r1;
        java.util.HashSet $r2;
        java.util.HashMap $r3;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin;

        r1 := @parameter0: android.app.admin.DeviceAdminInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int passwordQuality> = 0;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLength> = 0;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int passwordHistoryLength> = 0;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordUpperCase> = 0;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLowerCase> = 0;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLetters> = 1;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordNumeric> = 1;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordSymbols> = 1;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordNonLetter> = 0;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: long maximumTimeToUnlock> = 0L;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int maximumFailedPasswordsForWipe> = 0;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: long passwordExpirationTimeout> = 0L;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: long passwordExpirationDate> = 0L;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int disabledKeyguardFeatures> = 0;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean encryptionRequested> = 0;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean disableCamera> = 0;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean disableCallerId> = 0;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean disableScreenCapture> = 0;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean requireAutoTime> = 0;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.Set accountTypesWithManagementDisabled> = $r2;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean specifiesGlobalProxy> = 0;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String globalProxySpec> = null;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String globalProxyExclusionList> = null;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.HashMap trustAgentFeatures> = $r3;

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: android.app.admin.DeviceAdminInfo info> = r1;

        return;
    }

    int getUid()
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin r0;
        android.app.admin.DeviceAdminInfo $r1;
        android.content.pm.ActivityInfo $r2;
        android.content.pm.ApplicationInfo $r3;
        int $i0;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin;

        $r1 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: android.app.admin.DeviceAdminInfo info>;

        $r2 = virtualinvoke $r1.<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo getActivityInfo()>();

        $r3 = $r2.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        return $i0;
    }

    public android.os.UserHandle getUserHandle()
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin r0;
        android.os.UserHandle $r1;
        android.app.admin.DeviceAdminInfo $r2;
        android.content.pm.ActivityInfo $r3;
        android.content.pm.ApplicationInfo $r4;
        int $i0, $i1;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin;

        $r1 = new android.os.UserHandle;

        $r2 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: android.app.admin.DeviceAdminInfo info>;

        $r3 = virtualinvoke $r2.<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo getActivityInfo()>();

        $r4 = $r3.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r4.<android.content.pm.ApplicationInfo: int uid>;

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i0);

        specialinvoke $r1.<android.os.UserHandle: void <init>(int)>($i1);

        return $r1;
    }

    void writeToXml(org.xmlpull.v1.XmlSerializer) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.io.IOException
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin r0;
        org.xmlpull.v1.XmlSerializer r1;
        java.util.Iterator r2, r5, r137;
        java.lang.String r3, r6, $r30, $r44, $r49, $r55, $r62, $r65, $r70, $r71, $r75, $r76, $r79, $r81, $r88, $r92, $r94, $r98, $r103, $r104, $r111, $r114, $r120, $r121, $r126, $r127, $r133, r138;
        java.util.Map$Entry r4;
        android.app.admin.DeviceAdminInfo $r8;
        int $i0, $i3, $i8, $i9, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, i31, i32;
        long $l1, $l4, $l5, $l10, $l11, $l12;
        byte $b2, $b6, $b7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17;
        java.util.Set $r10, $r43, r136;
        java.util.HashMap $r11, $r22;
        java.util.List $r12, $r13, $r14, $r16, $r17, $r18, $r32;
        java.lang.Object $r19, $r27, $r31, $r33, $r36, $r39;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "policies");

        $r8 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: android.app.admin.DeviceAdminInfo info>;

        virtualinvoke $r8.<android.app.admin.DeviceAdminInfo: void writePoliciesToXml(org.xmlpull.v1.XmlSerializer)>(r1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "policies");

        $i0 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int passwordQuality>;

        if $i0 == 0 goto label08;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "password-quality");

        $i22 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int passwordQuality>;

        $r103 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i22);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r103);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "password-quality");

        $i17 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLength>;

        if $i17 == 0 goto label01;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "min-password-length");

        $i30 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLength>;

        $r133 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i30);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r133);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "min-password-length");

     label01:
        $i16 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int passwordHistoryLength>;

        if $i16 == 0 goto label02;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "password-history-length");

        $i28 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int passwordHistoryLength>;

        $r121 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i28);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r121);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "password-history-length");

     label02:
        $i15 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordUpperCase>;

        if $i15 == 0 goto label03;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "min-password-uppercase");

        $i29 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordUpperCase>;

        $r126 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i29);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r126);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "min-password-uppercase");

     label03:
        $i14 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLowerCase>;

        if $i14 == 0 goto label04;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "min-password-lowercase");

        $i26 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLowerCase>;

        $r127 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i26);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r127);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "min-password-lowercase");

     label04:
        $i21 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLetters>;

        if $i21 == 1 goto label05;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "min-password-letters");

        $i27 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLetters>;

        $r114 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i27);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r114);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "min-password-letters");

     label05:
        $i20 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordNumeric>;

        if $i20 == 1 goto label06;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "min-password-numeric");

        $i24 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordNumeric>;

        $r120 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i24);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r120);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "min-password-numeric");

     label06:
        $i19 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordSymbols>;

        if $i19 == 1 goto label07;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "min-password-symbols");

        $i23 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordSymbols>;

        $r104 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i23);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r104);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "min-password-symbols");

     label07:
        $i18 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordNonLetter>;

        if $i18 <= 0 goto label08;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "min-password-nonletter");

        $i25 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordNonLetter>;

        $r111 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i25);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r111);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "min-password-nonletter");

     label08:
        $l1 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: long maximumTimeToUnlock>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label09;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "max-time-to-unlock");

        $l12 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: long maximumTimeToUnlock>;

        $r92 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l12);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r92);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "max-time-to-unlock");

     label09:
        $i3 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int maximumFailedPasswordsForWipe>;

        if $i3 == 0 goto label10;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "max-failed-password-wipe");

        $i13 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int maximumFailedPasswordsForWipe>;

        $r98 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i13);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r98);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "max-failed-password-wipe");

     label10:
        $z0 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean specifiesGlobalProxy>;

        if $z0 == 0 goto label12;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "specifies-global-proxy");

        $z17 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean specifiesGlobalProxy>;

        $r88 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z17);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r88);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "specifies-global-proxy");

        $r76 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String globalProxySpec>;

        if $r76 == null goto label11;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "global-proxy-spec");

        $r94 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String globalProxySpec>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r94);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "global-proxy-spec");

     label11:
        $r79 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String globalProxyExclusionList>;

        if $r79 == null goto label12;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "global-proxy-exclusion-list");

        $r81 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String globalProxyExclusionList>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r81);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "global-proxy-exclusion-list");

     label12:
        $l4 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: long passwordExpirationTimeout>;

        $b6 = $l4 cmp 0L;

        if $b6 == 0 goto label13;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "password-expiration-timeout");

        $l11 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: long passwordExpirationTimeout>;

        $r71 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l11);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r71);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "password-expiration-timeout");

     label13:
        $l5 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: long passwordExpirationDate>;

        $b7 = $l5 cmp 0L;

        if $b7 == 0 goto label14;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "password-expiration-date");

        $l10 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: long passwordExpirationDate>;

        $r75 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l10);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r75);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "password-expiration-date");

     label14:
        $z1 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean encryptionRequested>;

        if $z1 == 0 goto label15;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "encryption-requested");

        $z16 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean encryptionRequested>;

        $r70 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z16);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r70);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "encryption-requested");

     label15:
        $z3 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean disableCamera>;

        if $z3 == 0 goto label16;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "disable-camera");

        $z14 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean disableCamera>;

        $r65 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z14);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r65);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "disable-camera");

     label16:
        $z2 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean disableCallerId>;

        if $z2 == 0 goto label17;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "disable-caller-id");

        $z15 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean disableCallerId>;

        $r62 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z15);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r62);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "disable-caller-id");

     label17:
        $z5 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean disableScreenCapture>;

        if $z5 == 0 goto label18;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "disable-screen-capture");

        $z13 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean disableScreenCapture>;

        $r55 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z13);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r55);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "disable-screen-capture");

     label18:
        $z4 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean requireAutoTime>;

        if $z4 == 0 goto label19;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "require_auto_time");

        $z12 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean requireAutoTime>;

        $r49 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z12);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r49);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "require_auto_time");

     label19:
        $i8 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int disabledKeyguardFeatures>;

        if $i8 == 0 goto label20;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "disable-keyguard-features");

        $i9 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int disabledKeyguardFeatures>;

        $r44 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i9);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r44);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "disable-keyguard-features");

     label20:
        $r10 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.Set accountTypesWithManagementDisabled>;

        $z6 = interfaceinvoke $r10.<java.util.Set: boolean isEmpty()>();

        if $z6 != 0 goto label23;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "disable-account-management");

        $r43 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.Set accountTypesWithManagementDisabled>;

        r2 = interfaceinvoke $r43.<java.util.Set: java.util.Iterator iterator()>();

     label21:
        $z11 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label22;

        $r39 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r39;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "account-type");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", r3);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "account-type");

        goto label21;

     label22:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "disable-account-management");

     label23:
        $r11 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.HashMap trustAgentFeatures>;

        $z7 = virtualinvoke $r11.<java.util.HashMap: boolean isEmpty()>();

        if $z7 != 0 goto label28;

        $r22 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.HashMap trustAgentFeatures>;

        r136 = virtualinvoke $r22.<java.util.HashMap: java.util.Set entrySet()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "manage-trust-agent-features");

        r137 = interfaceinvoke r136.<java.util.Set: java.util.Iterator iterator()>();

     label24:
        $z9 = interfaceinvoke r137.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label27;

        $r27 = interfaceinvoke r137.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r27;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "component");

        $r31 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r30 = (java.lang.String) $r31;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r30);

        $r33 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r32 = (java.util.List) $r33;

        r5 = interfaceinvoke $r32.<java.util.List: java.util.Iterator iterator()>();

     label25:
        $z10 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label26;

        $r36 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r36;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "feature");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", r6);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "feature");

        goto label25;

     label26:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "component");

        goto label24;

     label27:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "manage-trust-agent-features");

     label28:
        $r12 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.List crossProfileWidgetProviders>;

        if $r12 == null goto label31;

        $r17 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.List crossProfileWidgetProviders>;

        $z8 = interfaceinvoke $r17.<java.util.List: boolean isEmpty()>();

        if $z8 != 0 goto label31;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "cross-profile-widget-providers");

        $r16 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.List crossProfileWidgetProviders>;

        i31 = interfaceinvoke $r16.<java.util.List: int size()>();

        i32 = 0;

     label29:
        if i32 >= i31 goto label30;

        $r18 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.List crossProfileWidgetProviders>;

        $r19 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>(i32);

        r138 = (java.lang.String) $r19;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "provider");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", r138);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "provider");

        i32 = i32 + 1;

        goto label29;

     label30:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "cross-profile-widget-providers");

     label31:
        $r14 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.List permittedAccessiblityServices>;

        virtualinvoke r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: void writePackageListToXml(org.xmlpull.v1.XmlSerializer,java.lang.String,java.util.List)>(r1, "permitted-accessiblity-services", $r14);

        $r13 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.List permittedInputMethods>;

        virtualinvoke r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: void writePackageListToXml(org.xmlpull.v1.XmlSerializer,java.lang.String,java.util.List)>(r1, "permitted-imes", $r13);

        return;
    }

    void writePackageListToXml(org.xmlpull.v1.XmlSerializer, java.lang.String, java.util.List) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.io.IOException
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin r0;
        org.xmlpull.v1.XmlSerializer r1;
        java.lang.String r2, r5;
        java.util.List r3;
        java.util.Iterator r4;
        boolean $z0;
        java.lang.Object $r8;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

        if r3 != null goto label1;

        return;

     label1:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, r2);

        r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r8;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "item");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", r5);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "item");

        goto label2;

     label3:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, r2);

        return;
    }

    void readFromXml(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, i1, $i2, $i4, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        java.lang.String r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r37, $r38, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r61, $r62;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33;
        java.util.List $r32, $r33, $r39;
        java.lang.StringBuilder $r34, $r35, $r36;
        java.util.HashMap $r40;
        java.util.Set $r41;
        long $l5, $l6, $l9;
        android.app.admin.DeviceAdminInfo $r60;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label01:
        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i1 = $i2;

        if $i2 == 1 goto label33;

        if i1 != 3 goto label02;

        $i15 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i15 <= i0 goto label33;

     label02:
        if i1 == 3 goto label01;

        if i1 != 4 goto label03;

        goto label01;

     label03:
        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r3 = "policies";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label04;

        $r60 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: android.app.admin.DeviceAdminInfo info>;

        virtualinvoke $r60.<android.app.admin.DeviceAdminInfo: void readPoliciesFromXml(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label32;

     label04:
        $r4 = "password-quality";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label05;

        $r61 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i16 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r61);

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int passwordQuality> = $i16;

        goto label32;

     label05:
        $r5 = "min-password-length";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label06;

        $r62 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i17 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r62);

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLength> = $i17;

        goto label32;

     label06:
        $r6 = "password-history-length";

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label07;

        $r56 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i18 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r56);

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int passwordHistoryLength> = $i18;

        goto label32;

     label07:
        $r7 = "min-password-uppercase";

        $z4 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z4 == 0 goto label08;

        $r57 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r57);

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordUpperCase> = $i11;

        goto label32;

     label08:
        $r8 = "min-password-lowercase";

        $z5 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z5 == 0 goto label09;

        $r58 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i12 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r58);

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLowerCase> = $i12;

        goto label32;

     label09:
        $r9 = "min-password-letters";

        $z6 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z6 == 0 goto label10;

        $r59 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i13 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r59);

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLetters> = $i13;

        goto label32;

     label10:
        $r10 = "min-password-numeric";

        $z7 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z7 == 0 goto label11;

        $r52 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i14 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r52);

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordNumeric> = $i14;

        goto label32;

     label11:
        $r11 = "min-password-symbols";

        $z8 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z8 == 0 goto label12;

        $r53 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r53);

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordSymbols> = $i7;

        goto label32;

     label12:
        $r12 = "min-password-nonletter";

        $z9 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z9 == 0 goto label13;

        $r54 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r54);

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordNonLetter> = $i8;

        goto label32;

     label13:
        $r13 = "max-time-to-unlock";

        $z10 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z10 == 0 goto label14;

        $r55 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $l9 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r55);

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: long maximumTimeToUnlock> = $l9;

        goto label32;

     label14:
        $r14 = "max-failed-password-wipe";

        $z11 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z11 == 0 goto label15;

        $r49 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r49);

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int maximumFailedPasswordsForWipe> = $i10;

        goto label32;

     label15:
        $r16 = "specifies-global-proxy";

        $z13 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z13 == 0 goto label16;

        $r47 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $z33 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r47);

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean specifiesGlobalProxy> = $z33;

        goto label32;

     label16:
        $r15 = "global-proxy-spec";

        $z12 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z12 == 0 goto label17;

        $r48 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String globalProxySpec> = $r48;

        goto label32;

     label17:
        $r18 = "global-proxy-exclusion-list";

        $z15 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z15 == 0 goto label18;

        $r51 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String globalProxyExclusionList> = $r51;

        goto label32;

     label18:
        $r17 = "password-expiration-timeout";

        $z14 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z14 == 0 goto label19;

        $r50 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $l6 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r50);

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: long passwordExpirationTimeout> = $l6;

        goto label32;

     label19:
        $r20 = "password-expiration-date";

        $z17 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z17 == 0 goto label20;

        $r44 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $l5 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r44);

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: long passwordExpirationDate> = $l5;

        goto label32;

     label20:
        $r19 = "encryption-requested";

        $z16 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z16 == 0 goto label21;

        $r43 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $z30 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r43);

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean encryptionRequested> = $z30;

        goto label32;

     label21:
        $r22 = "disable-camera";

        $z19 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z19 == 0 goto label22;

        $r46 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $z29 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r46);

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean disableCamera> = $z29;

        goto label32;

     label22:
        $r21 = "disable-caller-id";

        $z18 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z18 == 0 goto label23;

        $r45 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $z32 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r45);

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean disableCallerId> = $z32;

        goto label32;

     label23:
        $r24 = "disable-screen-capture";

        $z21 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z21 == 0 goto label24;

        $r38 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $z31 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r38);

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean disableScreenCapture> = $z31;

        goto label32;

     label24:
        $r23 = "require_auto_time";

        $z20 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z20 == 0 goto label25;

        $r37 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $z28 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r37);

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean requireAutoTime> = $z28;

        goto label32;

     label25:
        $r26 = "disable-keyguard-features";

        $z23 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z23 == 0 goto label26;

        $r42 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r42);

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int disabledKeyguardFeatures> = $i4;

        goto label32;

     label26:
        $r25 = "disable-account-management";

        $z22 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z22 == 0 goto label27;

        $r41 = specialinvoke r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.Set readDisableAccountInfo(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, r2);

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.Set accountTypesWithManagementDisabled> = $r41;

        goto label32;

     label27:
        $r28 = "manage-trust-agent-features";

        $z25 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z25 == 0 goto label28;

        $r40 = specialinvoke r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.HashMap getAllTrustAgentFeatures(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, r2);

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.HashMap trustAgentFeatures> = $r40;

        goto label32;

     label28:
        $r27 = "cross-profile-widget-providers";

        $z24 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z24 == 0 goto label29;

        $r39 = specialinvoke r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.List getCrossProfileWidgetProviders(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, r2);

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.List crossProfileWidgetProviders> = $r39;

        goto label32;

     label29:
        $r30 = "permitted-accessiblity-services";

        $z27 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z27 == 0 goto label30;

        $r33 = specialinvoke r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.List readPackageList(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, r2);

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.List permittedAccessiblityServices> = $r33;

        goto label32;

     label30:
        $r29 = "permitted-imes";

        $z26 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z26 == 0 goto label31;

        $r32 = specialinvoke r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.List readPackageList(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, r2);

        r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.List permittedInputMethods> = $r32;

        goto label32;

     label31:
        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown admin tag: ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r31 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("DevicePolicyManagerService", $r31);

     label32:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label01;

     label33:
        return;
    }

    private java.util.List readPackageList(org.xmlpull.v1.XmlPullParser, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r4, r5, $r7, $r13, $r16;
        java.util.ArrayList r3, $r6;
        int i0, i1, $i2, $i5;
        boolean $z0;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r14, $r15, $r17;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r3 = $r6;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i1 = $i2;

        if $i2 == 1 goto label8;

        if i1 != 3 goto label2;

        $i5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i5 <= i0 goto label8;

     label2:
        if i1 == 3 goto label1;

        if i1 != 4 goto label3;

        goto label1;

     label3:
        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = "item";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label6;

        r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        if r5 == null goto label4;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r5);

        goto label5;

     label4:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package name missing under ");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("DevicePolicyManagerService", $r16);

     label5:
        goto label7;

     label6:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown tag under ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("DevicePolicyManagerService", $r13);

     label7:
        goto label1;

     label8:
        return r3;
    }

    private java.util.Set readDisableAccountInfo(org.xmlpull.v1.XmlPullParser, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r4, $r6, $r11, $r13;
        int i0, i1, $i2, $i4;
        java.util.HashSet r3, $r5;
        boolean $z0;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r12;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r3 = $r5;

     label1:
        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i1 = $i2;

        if $i2 == 1 goto label6;

        if i1 != 3 goto label2;

        $i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 <= i0 goto label6;

     label2:
        if i1 == 3 goto label1;

        if i1 != 4 goto label3;

        goto label1;

     label3:
        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r6 = "account-type";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label4;

        $r13 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r13);

        goto label5;

     label4:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown tag under ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("DevicePolicyManagerService", $r11);

     label5:
        goto label1;

     label6:
        return r3;
    }

    private java.util.HashMap getAllTrustAgentFeatures(org.xmlpull.v1.XmlPullParser, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r4, r5, $r7, $r13;
        int i0, i1, $i2, $i4;
        java.util.HashMap r3, $r6;
        boolean $z0;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12;
        java.util.List $r14;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r3 = $r6;

     label1:
        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i1 = $i2;

        if $i2 == 1 goto label6;

        if i1 != 3 goto label2;

        $i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 <= i0 goto label6;

     label2:
        if i1 == 3 goto label1;

        if i1 != 4 goto label3;

        goto label1;

     label3:
        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = "component";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label4;

        r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $r14 = specialinvoke r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.List getTrustAgentFeatures(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, r2);

        virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r14);

        goto label5;

     label4:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown tag under ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("DevicePolicyManagerService", $r13);

     label5:
        goto label1;

     label6:
        return r3;
    }

    private java.util.List getTrustAgentFeatures(org.xmlpull.v1.XmlPullParser, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r4, r5, $r7, $r13;
        int i0, i1, $i2, $i4;
        java.util.ArrayList r3, $r6;
        boolean $z0;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r3 = $r6;

     label1:
        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i1 = $i2;

        if $i2 == 1 goto label6;

        if i1 != 3 goto label2;

        $i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 <= i0 goto label6;

     label2:
        if i1 == 3 goto label1;

        if i1 != 4 goto label3;

        goto label1;

     label3:
        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = "feature";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label4;

        r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        goto label5;

     label4:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown tag under ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("DevicePolicyManagerService", $r13);

     label5:
        goto label1;

     label6:
        return r3;
    }

    private java.util.List getCrossProfileWidgetProviders(org.xmlpull.v1.XmlPullParser, java.lang.String) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r4, r5, $r6, $r11;
        int i0, i1, $i2, $i4;
        java.util.ArrayList r3, $r13;
        boolean $z0;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r12;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        r3 = null;

     label1:
        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i1 = $i2;

        if $i2 == 1 goto label7;

        if i1 != 3 goto label2;

        $i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 <= i0 goto label7;

     label2:
        if i1 == 3 goto label1;

        if i1 != 4 goto label3;

        goto label1;

     label3:
        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r6 = "provider";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label5;

        r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        if r3 != null goto label4;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r3 = $r13;

     label4:
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        goto label6;

     label5:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown tag under ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("DevicePolicyManagerService", $r11);

     label6:
        goto label1;

     label7:
        return r3;
    }

    void dump(java.lang.String, java.io.PrintWriter)
    {
        com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin r0;
        java.lang.String r1, $r5, $r6, $r7, $r10, $r13, $r14, $r16, $r18;
        java.io.PrintWriter r2;
        java.util.ArrayList r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i15, $i16;
        android.app.admin.DeviceAdminInfo $r4;
        long $l12, $l13, $l14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.List $r8, $r9, $r11, $r12, $r15;
        android.app.admin.DeviceAdminInfo$PolicyInfo $r17;
        java.lang.Object $r19;

        r0 := @this: com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.PrintWriter;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("uid=");

        $i1 = virtualinvoke r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int getUid()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("policies:");

        $r4 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: android.app.admin.DeviceAdminInfo info>;

        r3 = virtualinvoke $r4.<android.app.admin.DeviceAdminInfo: java.util.ArrayList getUsedPolicies()>();

        if r3 == null goto label2;

        i0 = 0;

     label1:
        $i16 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i0 >= $i16 goto label2;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        $r19 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r17 = (android.app.admin.DeviceAdminInfo$PolicyInfo) $r19;

        $r18 = $r17.<android.app.admin.DeviceAdminInfo$PolicyInfo: java.lang.String tag>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        i0 = i0 + 1;

        goto label1;

     label2:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("passwordQuality=0x");

        $i2 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int passwordQuality>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("minimumPasswordLength=");

        $i3 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLength>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i3);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("passwordHistoryLength=");

        $i4 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int passwordHistoryLength>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i4);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("minimumPasswordUpperCase=");

        $i5 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordUpperCase>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i5);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("minimumPasswordLowerCase=");

        $i6 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLowerCase>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i6);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("minimumPasswordLetters=");

        $i7 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLetters>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i7);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("minimumPasswordNumeric=");

        $i8 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordNumeric>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i8);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("minimumPasswordSymbols=");

        $i10 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordSymbols>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i10);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("minimumPasswordNonLetter=");

        $i9 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordNonLetter>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i9);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("maximumTimeToUnlock=");

        $l12 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: long maximumTimeToUnlock>;

        virtualinvoke r2.<java.io.PrintWriter: void println(long)>($l12);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("maximumFailedPasswordsForWipe=");

        $i11 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int maximumFailedPasswordsForWipe>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i11);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("specifiesGlobalProxy=");

        $z0 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean specifiesGlobalProxy>;

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z0);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("passwordExpirationTimeout=");

        $l13 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: long passwordExpirationTimeout>;

        virtualinvoke r2.<java.io.PrintWriter: void println(long)>($l13);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("passwordExpirationDate=");

        $l14 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: long passwordExpirationDate>;

        virtualinvoke r2.<java.io.PrintWriter: void println(long)>($l14);

        $r6 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String globalProxySpec>;

        if $r6 == null goto label3;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("globalProxySpec=");

        $r14 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String globalProxySpec>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r14);

     label3:
        $r7 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String globalProxyExclusionList>;

        if $r7 == null goto label4;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("globalProxyEclusionList=");

        $r13 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String globalProxyExclusionList>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r13);

     label4:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("encryptionRequested=");

        $z1 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean encryptionRequested>;

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("disableCamera=");

        $z3 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean disableCamera>;

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z3);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("disableCallerId=");

        $z2 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean disableCallerId>;

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("disableScreenCapture=");

        $z5 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean disableScreenCapture>;

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z5);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("requireAutoTime=");

        $z4 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: boolean requireAutoTime>;

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z4);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("disabledKeyguardFeatures=");

        $i15 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int disabledKeyguardFeatures>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i15);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("crossProfileWidgetProviders=");

        $r8 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.List crossProfileWidgetProviders>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r8);

        $r11 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.List permittedAccessiblityServices>;

        if $r11 == null goto label5;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("permittedAccessibilityServices=");

        $r15 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.List permittedAccessiblityServices>;

        $r16 = virtualinvoke $r15.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r16);

     label5:
        $r12 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.List permittedInputMethods>;

        if $r12 == null goto label6;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("permittedInputMethods=");

        $r9 = r0.<com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.util.List permittedInputMethods>;

        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r10);

     label6:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int DEF_KEYGUARD_FEATURES_DISABLED> = 0;

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: long DEF_PASSWORD_EXPIRATION_DATE> = 0L;

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: long DEF_PASSWORD_EXPIRATION_TIMEOUT> = 0L;

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int DEF_MAXIMUM_FAILED_PASSWORDS_FOR_WIPE> = 0;

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: long DEF_MAXIMUM_TIME_TO_UNLOCK> = 0L;

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int DEF_MINIMUM_PASSWORD_NON_LETTER> = 0;

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int DEF_MINIMUM_PASSWORD_SYMBOLS> = 1;

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int DEF_MINIMUM_PASSWORD_NUMERIC> = 1;

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int DEF_MINIMUM_PASSWORD_LETTERS> = 1;

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int DEF_MINIMUM_PASSWORD_LOWER_CASE> = 0;

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int DEF_MINIMUM_PASSWORD_UPPER_CASE> = 0;

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int DEF_PASSWORD_HISTORY_LENGTH> = 0;

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: int DEF_MINIMUM_PASSWORD_LENGTH> = 0;

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_PACKAGE_LIST_ITEM> = "item";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_PROVIDER> = "provider";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_CROSS_PROFILE_WIDGET_PROVIDERS> = "cross-profile-widget-providers";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_POLICIES> = "policies";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_PASSWORD_QUALITY> = "password-quality";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String ATTR_VALUE> = "value";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_MIN_PASSWORD_LENGTH> = "min-password-length";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_PASSWORD_HISTORY_LENGTH> = "password-history-length";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_MIN_PASSWORD_UPPERCASE> = "min-password-uppercase";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_MIN_PASSWORD_LOWERCASE> = "min-password-lowercase";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_MIN_PASSWORD_LETTERS> = "min-password-letters";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_MIN_PASSWORD_NUMERIC> = "min-password-numeric";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_MIN_PASSWORD_SYMBOLS> = "min-password-symbols";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_MIN_PASSWORD_NONLETTER> = "min-password-nonletter";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_MAX_TIME_TO_UNLOCK> = "max-time-to-unlock";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_MAX_FAILED_PASSWORD_WIPE> = "max-failed-password-wipe";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_PERMITTED_IMES> = "permitted-imes";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_SPECIFIES_GLOBAL_PROXY> = "specifies-global-proxy";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_GLOBAL_PROXY_SPEC> = "global-proxy-spec";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_GLOBAL_PROXY_EXCLUSION_LIST> = "global-proxy-exclusion-list";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_PASSWORD_EXPIRATION_TIMEOUT> = "password-expiration-timeout";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_PASSWORD_EXPIRATION_DATE> = "password-expiration-date";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_TRUST_AGENT_COMPONENT> = "component";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_TRUST_AGENT_FEATURE> = "feature";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_MANAGE_TRUST_AGENT_FEATURES> = "manage-trust-agent-features";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_ENCRYPTION_REQUESTED> = "encryption-requested";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_PERMITTED_ACCESSIBILITY_SERVICES> = "permitted-accessiblity-services";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_ACCOUNT_TYPE> = "account-type";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_REQUIRE_AUTO_TIME> = "require_auto_time";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_DISABLE_ACCOUNT_MANAGEMENT> = "disable-account-management";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_DISABLE_SCREEN_CAPTURE> = "disable-screen-capture";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_DISABLE_CALLER_ID> = "disable-caller-id";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_DISABLE_CAMERA> = "disable-camera";

        <com.android.server.devicepolicy.DevicePolicyManagerService$ActiveAdmin: java.lang.String TAG_DISABLE_KEYGUARD_FEATURES> = "disable-keyguard-features";

        return;
    }
}
