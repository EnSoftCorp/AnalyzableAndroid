final class com.android.server.hdmi.RoutingControlAction extends com.android.server.hdmi.HdmiCecFeatureAction
{
    private static final java.lang.String TAG;
    private static final int STATE_WAIT_FOR_ROUTING_INFORMATION;
    private static final int STATE_WAIT_FOR_REPORT_POWER_STATUS;
    private static final int TIMEOUT_ROUTING_INFORMATION_MS;
    private static final int TIMEOUT_REPORT_POWER_STATUS_MS;
    private final boolean mQueryDevicePowerStatus;
    private final boolean mNotifyInputChange;
    private final android.hardware.hdmi.IHdmiControlCallback mCallback;
    private int mCurrentRoutingPath;

    void <init>(com.android.server.hdmi.HdmiCecLocalDevice, int, boolean, android.hardware.hdmi.IHdmiControlCallback)
    {
        com.android.server.hdmi.RoutingControlAction r0;
        com.android.server.hdmi.HdmiCecLocalDevice r1;
        int i0;
        boolean z0, $z1;
        android.hardware.hdmi.IHdmiControlCallback r2;

        r0 := @this: com.android.server.hdmi.RoutingControlAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecLocalDevice;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 := @parameter3: android.hardware.hdmi.IHdmiControlCallback;

        specialinvoke r0.<com.android.server.hdmi.HdmiCecFeatureAction: void <init>(com.android.server.hdmi.HdmiCecLocalDevice)>(r1);

        r0.<com.android.server.hdmi.RoutingControlAction: android.hardware.hdmi.IHdmiControlCallback mCallback> = r2;

        r0.<com.android.server.hdmi.RoutingControlAction: int mCurrentRoutingPath> = i0;

        r0.<com.android.server.hdmi.RoutingControlAction: boolean mQueryDevicePowerStatus> = z0;

        if r2 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<com.android.server.hdmi.RoutingControlAction: boolean mNotifyInputChange> = $z1;

        return;
    }

    public boolean start()
    {
        com.android.server.hdmi.RoutingControlAction r0;
        int $i0;

        r0 := @this: com.android.server.hdmi.RoutingControlAction;

        r0.<com.android.server.hdmi.RoutingControlAction: int mState> = 1;

        $i0 = r0.<com.android.server.hdmi.RoutingControlAction: int mState>;

        virtualinvoke r0.<com.android.server.hdmi.RoutingControlAction: void addTimer(int,int)>($i0, 1000);

        return 1;
    }

    public boolean processCommand(com.android.server.hdmi.HdmiCecMessage)
    {
        com.android.server.hdmi.RoutingControlAction r0;
        com.android.server.hdmi.HdmiCecMessage r1;
        int i0, i1, $i2, $i3, $i5, $i6;
        byte[] r2, $r3;
        byte $b4;
        boolean $z0;

        r0 := @this: com.android.server.hdmi.RoutingControlAction;

        r1 := @parameter0: com.android.server.hdmi.HdmiCecMessage;

        i0 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: int getOpcode()>();

        r2 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: byte[] getParams()>();

        $i2 = r0.<com.android.server.hdmi.RoutingControlAction: int mState>;

        if $i2 != 1 goto label2;

        if i0 != 129 goto label2;

        i1 = staticinvoke <com.android.server.hdmi.HdmiUtils: int twoBytesToInt(byte[])>(r2);

        $i5 = r0.<com.android.server.hdmi.RoutingControlAction: int mCurrentRoutingPath>;

        $z0 = staticinvoke <com.android.server.hdmi.HdmiUtils: boolean isInActiveRoutingPath(int,int)>($i5, i1);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        r0.<com.android.server.hdmi.RoutingControlAction: int mCurrentRoutingPath> = i1;

        virtualinvoke r0.<com.android.server.hdmi.RoutingControlAction: void removeActionExcept(java.lang.Class,com.android.server.hdmi.HdmiCecFeatureAction)>(class "com/android/server/hdmi/RoutingControlAction", r0);

        $i6 = r0.<com.android.server.hdmi.RoutingControlAction: int mState>;

        virtualinvoke r0.<com.android.server.hdmi.RoutingControlAction: void addTimer(int,int)>($i6, 1000);

        return 1;

     label2:
        $i3 = r0.<com.android.server.hdmi.RoutingControlAction: int mState>;

        if $i3 != 2 goto label3;

        if i0 != 144 goto label3;

        $r3 = virtualinvoke r1.<com.android.server.hdmi.HdmiCecMessage: byte[] getParams()>();

        $b4 = $r3[0];

        specialinvoke r0.<com.android.server.hdmi.RoutingControlAction: void handleReportPowerStatus(int)>($b4);

        return 1;

     label3:
        return 0;
    }

    private void handleReportPowerStatus(int)
    {
        com.android.server.hdmi.RoutingControlAction r0;
        int i0, $i1, $i2;
        boolean $z0, $z1, $z2;
        com.android.server.hdmi.HdmiCecLocalDeviceTv $r1;

        r0 := @this: com.android.server.hdmi.RoutingControlAction;

        i0 := @parameter0: int;

        $i1 = specialinvoke r0.<com.android.server.hdmi.RoutingControlAction: int getTvPowerStatus()>();

        $z0 = staticinvoke <com.android.server.hdmi.RoutingControlAction: boolean isPowerOnOrTransient(int)>($i1);

        if $z0 == 0 goto label2;

        $z1 = staticinvoke <com.android.server.hdmi.RoutingControlAction: boolean isPowerOnOrTransient(int)>(i0);

        if $z1 == 0 goto label1;

        specialinvoke r0.<com.android.server.hdmi.RoutingControlAction: void sendSetStreamPath()>();

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<com.android.server.hdmi.RoutingControlAction: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        $i2 = r0.<com.android.server.hdmi.RoutingControlAction: int mCurrentRoutingPath>;

        $z2 = r0.<com.android.server.hdmi.RoutingControlAction: boolean mNotifyInputChange>;

        virtualinvoke $r1.<com.android.server.hdmi.HdmiCecLocalDeviceTv: void updateActiveInput(int,boolean)>($i2, $z2);

     label2:
        specialinvoke r0.<com.android.server.hdmi.RoutingControlAction: void finishWithCallback(int)>(0);

        return;
    }

    private int getTvPowerStatus()
    {
        com.android.server.hdmi.RoutingControlAction r0;
        com.android.server.hdmi.HdmiCecLocalDeviceTv $r1;
        int $i0;

        r0 := @this: com.android.server.hdmi.RoutingControlAction;

        $r1 = virtualinvoke r0.<com.android.server.hdmi.RoutingControlAction: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        $i0 = virtualinvoke $r1.<com.android.server.hdmi.HdmiCecLocalDeviceTv: int getPowerStatus()>();

        return $i0;
    }

    private static boolean isPowerOnOrTransient(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        if i0 != 2 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private void sendSetStreamPath()
    {
        com.android.server.hdmi.RoutingControlAction r0;
        int $i0, $i1;
        com.android.server.hdmi.HdmiCecMessage $r1;

        r0 := @this: com.android.server.hdmi.RoutingControlAction;

        $i0 = virtualinvoke r0.<com.android.server.hdmi.RoutingControlAction: int getSourceAddress()>();

        $i1 = r0.<com.android.server.hdmi.RoutingControlAction: int mCurrentRoutingPath>;

        $r1 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildSetStreamPath(int,int)>($i0, $i1);

        virtualinvoke r0.<com.android.server.hdmi.RoutingControlAction: void sendCommand(com.android.server.hdmi.HdmiCecMessage)>($r1);

        return;
    }

    private void finishWithCallback(int)
    {
        com.android.server.hdmi.RoutingControlAction r0;
        int i0;

        r0 := @this: com.android.server.hdmi.RoutingControlAction;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.hdmi.RoutingControlAction: void invokeCallback(int)>(i0);

        virtualinvoke r0.<com.android.server.hdmi.RoutingControlAction: void finish()>();

        return;
    }

    public void handleTimerEvent(int)
    {
        com.android.server.hdmi.RoutingControlAction r0;
        int i0, i1, $i2, $i4, $i5, $i6, $i7, $i8;
        android.hardware.hdmi.HdmiDeviceInfo r1;
        boolean $z0, $z1, $z2, $z3;
        com.android.server.hdmi.HdmiCecLocalDeviceTv $r2, $r3, $r4;
        com.android.server.hdmi.RoutingControlAction$1 $r5;

        r0 := @this: com.android.server.hdmi.RoutingControlAction;

        i0 := @parameter0: int;

        $i2 = r0.<com.android.server.hdmi.RoutingControlAction: int mState>;

        if $i2 != i0 goto label1;

        $i4 = r0.<com.android.server.hdmi.RoutingControlAction: int mState>;

        if $i4 != 0 goto label2;

     label1:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("CEC", "Timer in a wrong state. Ignored.");

        return;

     label2:
        lookupswitch(i0)
        {
            case 1: goto label3;
            case 2: goto label6;
            default: goto label8;
        };

     label3:
        $r3 = virtualinvoke r0.<com.android.server.hdmi.RoutingControlAction: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        $i7 = r0.<com.android.server.hdmi.RoutingControlAction: int mCurrentRoutingPath>;

        r1 = virtualinvoke $r3.<com.android.server.hdmi.HdmiCecLocalDeviceTv: android.hardware.hdmi.HdmiDeviceInfo getDeviceInfoByPath(int)>($i7);

        if r1 == null goto label4;

        $z3 = r0.<com.android.server.hdmi.RoutingControlAction: boolean mQueryDevicePowerStatus>;

        if $z3 == 0 goto label4;

        i1 = virtualinvoke r1.<android.hardware.hdmi.HdmiDeviceInfo: int getLogicalAddress()>();

        $r5 = new com.android.server.hdmi.RoutingControlAction$1;

        specialinvoke $r5.<com.android.server.hdmi.RoutingControlAction$1: void <init>(com.android.server.hdmi.RoutingControlAction)>(r0);

        specialinvoke r0.<com.android.server.hdmi.RoutingControlAction: void queryDevicePowerStatus(int,com.android.server.hdmi.HdmiControlService$SendMessageCallback)>(i1, $r5);

        goto label5;

     label4:
        $r4 = virtualinvoke r0.<com.android.server.hdmi.RoutingControlAction: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        $i8 = r0.<com.android.server.hdmi.RoutingControlAction: int mCurrentRoutingPath>;

        $z2 = r0.<com.android.server.hdmi.RoutingControlAction: boolean mNotifyInputChange>;

        virtualinvoke $r4.<com.android.server.hdmi.HdmiCecLocalDeviceTv: void updateActiveInput(int,boolean)>($i8, $z2);

        specialinvoke r0.<com.android.server.hdmi.RoutingControlAction: void finishWithCallback(int)>(0);

     label5:
        return;

     label6:
        $i5 = specialinvoke r0.<com.android.server.hdmi.RoutingControlAction: int getTvPowerStatus()>();

        $z0 = staticinvoke <com.android.server.hdmi.RoutingControlAction: boolean isPowerOnOrTransient(int)>($i5);

        if $z0 == 0 goto label7;

        $r2 = virtualinvoke r0.<com.android.server.hdmi.RoutingControlAction: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        $i6 = r0.<com.android.server.hdmi.RoutingControlAction: int mCurrentRoutingPath>;

        $z1 = r0.<com.android.server.hdmi.RoutingControlAction: boolean mNotifyInputChange>;

        virtualinvoke $r2.<com.android.server.hdmi.HdmiCecLocalDeviceTv: void updateActiveInput(int,boolean)>($i6, $z1);

        specialinvoke r0.<com.android.server.hdmi.RoutingControlAction: void sendSetStreamPath()>();

     label7:
        specialinvoke r0.<com.android.server.hdmi.RoutingControlAction: void finishWithCallback(int)>(0);

        return;

     label8:
        return;
    }

    private void queryDevicePowerStatus(int, com.android.server.hdmi.HdmiControlService$SendMessageCallback)
    {
        com.android.server.hdmi.RoutingControlAction r0;
        int i0, $i1;
        com.android.server.hdmi.HdmiControlService$SendMessageCallback r1;
        com.android.server.hdmi.HdmiCecMessage $r2;

        r0 := @this: com.android.server.hdmi.RoutingControlAction;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.hdmi.HdmiControlService$SendMessageCallback;

        $i1 = virtualinvoke r0.<com.android.server.hdmi.RoutingControlAction: int getSourceAddress()>();

        $r2 = staticinvoke <com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildGiveDevicePowerStatus(int,int)>($i1, i0);

        virtualinvoke r0.<com.android.server.hdmi.RoutingControlAction: void sendCommand(com.android.server.hdmi.HdmiCecMessage,com.android.server.hdmi.HdmiControlService$SendMessageCallback)>($r2, r1);

        return;
    }

    private void handlDevicePowerStatusAckResult(boolean)
    {
        com.android.server.hdmi.RoutingControlAction r0;
        boolean z0, $z1;
        com.android.server.hdmi.HdmiCecLocalDeviceTv $r1;
        int $i0, $i1;

        r0 := @this: com.android.server.hdmi.RoutingControlAction;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        r0.<com.android.server.hdmi.RoutingControlAction: int mState> = 2;

        $i1 = r0.<com.android.server.hdmi.RoutingControlAction: int mState>;

        virtualinvoke r0.<com.android.server.hdmi.RoutingControlAction: void addTimer(int,int)>($i1, 1000);

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<com.android.server.hdmi.RoutingControlAction: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>();

        $i0 = r0.<com.android.server.hdmi.RoutingControlAction: int mCurrentRoutingPath>;

        $z1 = r0.<com.android.server.hdmi.RoutingControlAction: boolean mNotifyInputChange>;

        virtualinvoke $r1.<com.android.server.hdmi.HdmiCecLocalDeviceTv: void updateActiveInput(int,boolean)>($i0, $z1);

        specialinvoke r0.<com.android.server.hdmi.RoutingControlAction: void sendSetStreamPath()>();

        specialinvoke r0.<com.android.server.hdmi.RoutingControlAction: void finishWithCallback(int)>(0);

     label2:
        return;
    }

    private void invokeCallback(int)
    {
        com.android.server.hdmi.RoutingControlAction r0;
        int i0;
        android.hardware.hdmi.IHdmiControlCallback $r2, $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.server.hdmi.RoutingControlAction;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.hdmi.RoutingControlAction: android.hardware.hdmi.IHdmiControlCallback mCallback>;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.hdmi.RoutingControlAction: android.hardware.hdmi.IHdmiControlCallback mCallback>;

        interfaceinvoke $r3.<android.hardware.hdmi.IHdmiControlCallback: void onComplete(int)>(i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static void access$000(com.android.server.hdmi.RoutingControlAction, boolean)
    {
        com.android.server.hdmi.RoutingControlAction r0;
        boolean z0;

        r0 := @parameter0: com.android.server.hdmi.RoutingControlAction;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.hdmi.RoutingControlAction: void handlDevicePowerStatusAckResult(boolean)>(z0);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.hdmi.RoutingControlAction: int TIMEOUT_REPORT_POWER_STATUS_MS> = 1000;

        <com.android.server.hdmi.RoutingControlAction: int TIMEOUT_ROUTING_INFORMATION_MS> = 1000;

        <com.android.server.hdmi.RoutingControlAction: int STATE_WAIT_FOR_REPORT_POWER_STATUS> = 2;

        <com.android.server.hdmi.RoutingControlAction: int STATE_WAIT_FOR_ROUTING_INFORMATION> = 1;

        <com.android.server.hdmi.RoutingControlAction: java.lang.String TAG> = "RoutingControlAction";

        return;
    }
}
