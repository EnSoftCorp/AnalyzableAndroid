final class com.android.server.dreams.DreamManagerService$BinderService extends android.service.dreams.IDreamManager$Stub
{
    final com.android.server.dreams.DreamManagerService this$0;

    private void <init>(com.android.server.dreams.DreamManagerService)
    {
        com.android.server.dreams.DreamManagerService$BinderService r0;
        com.android.server.dreams.DreamManagerService r1;

        r0 := @this: com.android.server.dreams.DreamManagerService$BinderService;

        r1 := @parameter0: com.android.server.dreams.DreamManagerService;

        r0.<com.android.server.dreams.DreamManagerService$BinderService: com.android.server.dreams.DreamManagerService this$0> = r1;

        specialinvoke r0.<android.service.dreams.IDreamManager$Stub: void <init>()>();

        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.dreams.DreamManagerService$BinderService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        long l0;
        java.lang.Throwable r4, $r14;
        com.android.server.dreams.DreamManagerService $r5, $r7;
        android.content.Context $r6;
        int $i1, $i2, $i3;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r13;
        java.lang.String $r12;

        r0 := @this: com.android.server.dreams.DreamManagerService$BinderService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r5 = r0.<com.android.server.dreams.DreamManagerService$BinderService: com.android.server.dreams.DreamManagerService this$0>;

        $r6 = staticinvoke <com.android.server.dreams.DreamManagerService: android.content.Context access$700(com.android.server.dreams.DreamManagerService)>($r5);

        $i1 = virtualinvoke $r6.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i1 == 0 goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump DreamManager from from pid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        return;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r7 = r0.<com.android.server.dreams.DreamManagerService$BinderService: com.android.server.dreams.DreamManagerService this$0>;

        staticinvoke <com.android.server.dreams.DreamManagerService: void access$800(com.android.server.dreams.DreamManagerService,java.io.PrintWriter)>($r7, r2);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label6;

     label4:
        $r14 := @caughtexception;

        r4 = $r14;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r4;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public android.content.ComponentName[] getDreamComponents()
    {
        com.android.server.dreams.DreamManagerService$BinderService r0;
        int i0;
        long l1;
        android.content.ComponentName[] r1;
        java.lang.Throwable r2, $r5;
        com.android.server.dreams.DreamManagerService $r3, $r4;

        r0 := @this: com.android.server.dreams.DreamManagerService$BinderService;

        $r3 = r0.<com.android.server.dreams.DreamManagerService$BinderService: com.android.server.dreams.DreamManagerService this$0>;

        staticinvoke <com.android.server.dreams.DreamManagerService: void access$900(com.android.server.dreams.DreamManagerService,java.lang.String)>($r3, "android.permission.READ_DREAM_STATE");

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.dreams.DreamManagerService$BinderService: com.android.server.dreams.DreamManagerService this$0>;

        r1 = staticinvoke <com.android.server.dreams.DreamManagerService: android.content.ComponentName[] access$1000(com.android.server.dreams.DreamManagerService,int)>($r4, i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r1;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setDreamComponents(android.content.ComponentName[])
    {
        com.android.server.dreams.DreamManagerService$BinderService r0;
        android.content.ComponentName[] r1;
        int i0;
        long l1;
        java.lang.Throwable r2, $r5;
        com.android.server.dreams.DreamManagerService $r3, $r4;

        r0 := @this: com.android.server.dreams.DreamManagerService$BinderService;

        r1 := @parameter0: android.content.ComponentName[];

        $r3 = r0.<com.android.server.dreams.DreamManagerService$BinderService: com.android.server.dreams.DreamManagerService this$0>;

        staticinvoke <com.android.server.dreams.DreamManagerService: void access$900(com.android.server.dreams.DreamManagerService,java.lang.String)>($r3, "android.permission.WRITE_DREAM_STATE");

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.dreams.DreamManagerService$BinderService: com.android.server.dreams.DreamManagerService this$0>;

        staticinvoke <com.android.server.dreams.DreamManagerService: void access$1100(com.android.server.dreams.DreamManagerService,int,android.content.ComponentName[])>($r4, i0, r1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.content.ComponentName getDefaultDreamComponent()
    {
        com.android.server.dreams.DreamManagerService$BinderService r0;
        int i0;
        long l1;
        android.content.ComponentName r1;
        java.lang.Throwable r2, $r5;
        com.android.server.dreams.DreamManagerService $r3, $r4;

        r0 := @this: com.android.server.dreams.DreamManagerService$BinderService;

        $r3 = r0.<com.android.server.dreams.DreamManagerService$BinderService: com.android.server.dreams.DreamManagerService this$0>;

        staticinvoke <com.android.server.dreams.DreamManagerService: void access$900(com.android.server.dreams.DreamManagerService,java.lang.String)>($r3, "android.permission.READ_DREAM_STATE");

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.dreams.DreamManagerService$BinderService: com.android.server.dreams.DreamManagerService this$0>;

        r1 = staticinvoke <com.android.server.dreams.DreamManagerService: android.content.ComponentName access$1200(com.android.server.dreams.DreamManagerService,int)>($r4, i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r1;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isDreaming()
    {
        com.android.server.dreams.DreamManagerService$BinderService r0;
        long l0;
        boolean z0;
        java.lang.Throwable r1, $r4;
        com.android.server.dreams.DreamManagerService $r2, $r3;

        r0 := @this: com.android.server.dreams.DreamManagerService$BinderService;

        $r2 = r0.<com.android.server.dreams.DreamManagerService$BinderService: com.android.server.dreams.DreamManagerService this$0>;

        staticinvoke <com.android.server.dreams.DreamManagerService: void access$900(com.android.server.dreams.DreamManagerService,java.lang.String)>($r2, "android.permission.READ_DREAM_STATE");

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.dreams.DreamManagerService$BinderService: com.android.server.dreams.DreamManagerService this$0>;

        z0 = staticinvoke <com.android.server.dreams.DreamManagerService: boolean access$1300(com.android.server.dreams.DreamManagerService)>($r3);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void dream()
    {
        com.android.server.dreams.DreamManagerService$BinderService r0;
        long l0;
        java.lang.Throwable r1, $r4;
        com.android.server.dreams.DreamManagerService $r2, $r3;

        r0 := @this: com.android.server.dreams.DreamManagerService$BinderService;

        $r2 = r0.<com.android.server.dreams.DreamManagerService$BinderService: com.android.server.dreams.DreamManagerService this$0>;

        staticinvoke <com.android.server.dreams.DreamManagerService: void access$900(com.android.server.dreams.DreamManagerService,java.lang.String)>($r2, "android.permission.WRITE_DREAM_STATE");

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.dreams.DreamManagerService$BinderService: com.android.server.dreams.DreamManagerService this$0>;

        staticinvoke <com.android.server.dreams.DreamManagerService: void access$1400(com.android.server.dreams.DreamManagerService)>($r3);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label5;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void testDream(android.content.ComponentName)
    {
        com.android.server.dreams.DreamManagerService$BinderService r0;
        android.content.ComponentName r1;
        int i0, i1;
        long l2;
        java.lang.Throwable r2, $r11;
        com.android.server.dreams.DreamManagerService $r3, $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r10;
        java.lang.IllegalArgumentException $r12;

        r0 := @this: com.android.server.dreams.DreamManagerService$BinderService;

        r1 := @parameter0: android.content.ComponentName;

        if r1 != null goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("dream must not be null");

        throw $r12;

     label1:
        $r3 = r0.<com.android.server.dreams.DreamManagerService$BinderService: com.android.server.dreams.DreamManagerService this$0>;

        staticinvoke <com.android.server.dreams.DreamManagerService: void access$900(com.android.server.dreams.DreamManagerService,java.lang.String)>($r3, "android.permission.WRITE_DREAM_STATE");

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        i1 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        if i0 == i1 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Aborted attempt to start a test dream while a different  user is active: callingUserId=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", currentUserId=");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("DreamManagerService", $r10);

        return;

     label2:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label3:
        $r4 = r0.<com.android.server.dreams.DreamManagerService$BinderService: com.android.server.dreams.DreamManagerService this$0>;

        staticinvoke <com.android.server.dreams.DreamManagerService: void access$1500(com.android.server.dreams.DreamManagerService,android.content.ComponentName,int)>($r4, r1, i0);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label7;

     label5:
        $r11 := @caughtexception;

        r2 = $r11;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r2;

     label7:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void awaken()
    {
        com.android.server.dreams.DreamManagerService$BinderService r0;
        long l0;
        java.lang.Throwable r1, $r4;
        com.android.server.dreams.DreamManagerService $r2, $r3;

        r0 := @this: com.android.server.dreams.DreamManagerService$BinderService;

        $r2 = r0.<com.android.server.dreams.DreamManagerService$BinderService: com.android.server.dreams.DreamManagerService this$0>;

        staticinvoke <com.android.server.dreams.DreamManagerService: void access$900(com.android.server.dreams.DreamManagerService,java.lang.String)>($r2, "android.permission.WRITE_DREAM_STATE");

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = r0.<com.android.server.dreams.DreamManagerService$BinderService: com.android.server.dreams.DreamManagerService this$0>;

        staticinvoke <com.android.server.dreams.DreamManagerService: void access$1600(com.android.server.dreams.DreamManagerService)>($r3);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label5;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void finishSelf(android.os.IBinder, boolean)
    {
        com.android.server.dreams.DreamManagerService$BinderService r0;
        android.os.IBinder r1;
        boolean z0;
        long l0;
        java.lang.Throwable r2, $r5;
        com.android.server.dreams.DreamManagerService $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: com.android.server.dreams.DreamManagerService$BinderService;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("token must not be null");

        throw $r4;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r3 = r0.<com.android.server.dreams.DreamManagerService$BinderService: com.android.server.dreams.DreamManagerService this$0>;

        staticinvoke <com.android.server.dreams.DreamManagerService: void access$1700(com.android.server.dreams.DreamManagerService,android.os.IBinder,boolean)>($r3, r1, z0);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label6;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void startDozing(android.os.IBinder, int, int)
    {
        com.android.server.dreams.DreamManagerService$BinderService r0;
        android.os.IBinder r1;
        int i0, i1;
        long l2;
        java.lang.Throwable r2, $r5;
        com.android.server.dreams.DreamManagerService $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: com.android.server.dreams.DreamManagerService$BinderService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("token must not be null");

        throw $r4;

     label1:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r3 = r0.<com.android.server.dreams.DreamManagerService$BinderService: com.android.server.dreams.DreamManagerService this$0>;

        staticinvoke <com.android.server.dreams.DreamManagerService: void access$1800(com.android.server.dreams.DreamManagerService,android.os.IBinder,int,int)>($r3, r1, i0, i1);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label6;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void stopDozing(android.os.IBinder)
    {
        com.android.server.dreams.DreamManagerService$BinderService r0;
        android.os.IBinder r1;
        long l0;
        java.lang.Throwable r2, $r5;
        com.android.server.dreams.DreamManagerService $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: com.android.server.dreams.DreamManagerService$BinderService;

        r1 := @parameter0: android.os.IBinder;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("token must not be null");

        throw $r4;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r3 = r0.<com.android.server.dreams.DreamManagerService$BinderService: com.android.server.dreams.DreamManagerService this$0>;

        staticinvoke <com.android.server.dreams.DreamManagerService: void access$1900(com.android.server.dreams.DreamManagerService,android.os.IBinder)>($r3, r1);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label6;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    void <init>(com.android.server.dreams.DreamManagerService, com.android.server.dreams.DreamManagerService$1)
    {
        com.android.server.dreams.DreamManagerService$BinderService r0;
        com.android.server.dreams.DreamManagerService r1;
        com.android.server.dreams.DreamManagerService$1 r2;

        r0 := @this: com.android.server.dreams.DreamManagerService$BinderService;

        r1 := @parameter0: com.android.server.dreams.DreamManagerService;

        r2 := @parameter1: com.android.server.dreams.DreamManagerService$1;

        specialinvoke r0.<com.android.server.dreams.DreamManagerService$BinderService: void <init>(com.android.server.dreams.DreamManagerService)>(r1);

        return;
    }
}
