class com.android.server.backup.BackupManagerService$ActiveRestoreSession extends android.app.backup.IRestoreSession$Stub
{
    private static final java.lang.String TAG;
    private java.lang.String mPackageName;
    private com.android.internal.backup.IBackupTransport mRestoreTransport;
    android.app.backup.RestoreSet[] mRestoreSets;
    boolean mEnded;
    boolean mTimedOut;
    final com.android.server.backup.BackupManagerService this$0;

    void <init>(com.android.server.backup.BackupManagerService, java.lang.String, java.lang.String)
    {
        com.android.server.backup.BackupManagerService$ActiveRestoreSession r0;
        com.android.server.backup.BackupManagerService r1;
        java.lang.String r2, r3;
        com.android.internal.backup.IBackupTransport $r4;

        r0 := @this: com.android.server.backup.BackupManagerService$ActiveRestoreSession;

        r1 := @parameter0: com.android.server.backup.BackupManagerService;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0> = r1;

        specialinvoke r0.<android.app.backup.IRestoreSession$Stub: void <init>()>();

        r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.internal.backup.IBackupTransport mRestoreTransport> = null;

        r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: android.app.backup.RestoreSet[] mRestoreSets> = null;

        r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: boolean mEnded> = 0;

        r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: boolean mTimedOut> = 0;

        r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: java.lang.String mPackageName> = r2;

        $r4 = staticinvoke <com.android.server.backup.BackupManagerService: com.android.internal.backup.IBackupTransport access$100(com.android.server.backup.BackupManagerService,java.lang.String)>(r1, r3);

        r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.internal.backup.IBackupTransport mRestoreTransport> = $r4;

        return;
    }

    public void markTimedOut()
    {
        com.android.server.backup.BackupManagerService$ActiveRestoreSession r0;

        r0 := @this: com.android.server.backup.BackupManagerService$ActiveRestoreSession;

        r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: boolean mTimedOut> = 1;

        return;
    }

    public synchronized int getAvailableRestoreSets(android.app.backup.IRestoreObserver)
    {
        com.android.server.backup.BackupManagerService$ActiveRestoreSession r0;
        android.app.backup.IRestoreObserver r1;
        long l0;
        byte b1, b2, b6;
        java.lang.Throwable r2, $r18;
        com.android.server.backup.BackupManagerService $r3, $r6, $r8, $r9, $r14, $r16;
        android.content.Context $r4;
        boolean $z0, $z1;
        com.android.internal.backup.IBackupTransport $r5, $r11;
        com.android.server.backup.BackupManagerService$BackupHandler $r7, $r13, $r15;
        android.os.PowerManager$WakeLock $r10;
        com.android.server.backup.BackupManagerService$RestoreGetSetsParams $r12;
        java.lang.IllegalStateException $r17;
        java.lang.IllegalArgumentException $r19;
        java.lang.Exception $r20, r22;
        android.os.Message r21;

        r0 := @this: com.android.server.backup.BackupManagerService$ActiveRestoreSession;

        r1 := @parameter0: android.app.backup.IRestoreObserver;

        $r3 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r4 = $r3.<com.android.server.backup.BackupManagerService: android.content.Context mContext>;

        virtualinvoke $r4.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BACKUP", "getAvailableRestoreSets");

        if r1 != null goto label01;

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Observer must not be null");

        throw $r19;

     label01:
        $z0 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: boolean mEnded>;

        if $z0 == 0 goto label02;

        $r17 = new java.lang.IllegalStateException;

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Restore session already ended");

        throw $r17;

     label02:
        $z1 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: boolean mTimedOut>;

        if $z1 == 0 goto label03;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("RestoreSession", "Session already timed out");

        return -1;

     label03:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        $r5 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.internal.backup.IBackupTransport mRestoreTransport>;

        if $r5 != null goto label06;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("RestoreSession", "Null transport getting restore sets");

        b1 = -1;

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return b1;

     label06:
        $r6 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r7 = $r6.<com.android.server.backup.BackupManagerService: com.android.server.backup.BackupManagerService$BackupHandler mBackupHandler>;

        virtualinvoke $r7.<com.android.server.backup.BackupManagerService$BackupHandler: void removeMessages(int)>(8);

        $r8 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r10 = $r8.<com.android.server.backup.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r10.<android.os.PowerManager$WakeLock: void acquire()>();

        $r9 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r13 = $r9.<com.android.server.backup.BackupManagerService: com.android.server.backup.BackupManagerService$BackupHandler mBackupHandler>;

        $r12 = new com.android.server.backup.BackupManagerService$RestoreGetSetsParams;

        $r14 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r11 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.internal.backup.IBackupTransport mRestoreTransport>;

        specialinvoke $r12.<com.android.server.backup.BackupManagerService$RestoreGetSetsParams: void <init>(com.android.server.backup.BackupManagerService,com.android.internal.backup.IBackupTransport,com.android.server.backup.BackupManagerService$ActiveRestoreSession,android.app.backup.IRestoreObserver)>($r14, $r11, r0, r1);

        r21 = virtualinvoke $r13.<com.android.server.backup.BackupManagerService$BackupHandler: android.os.Message obtainMessage(int,java.lang.Object)>(6, $r12);

        $r16 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r15 = $r16.<com.android.server.backup.BackupManagerService: com.android.server.backup.BackupManagerService$BackupHandler mBackupHandler>;

        virtualinvoke $r15.<com.android.server.backup.BackupManagerService$BackupHandler: boolean sendMessage(android.os.Message)>(r21);

        b2 = 0;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return b2;

     label08:
        $r20 := @caughtexception;

        r22 = $r20;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RestoreSession", "Error in getAvailableRestoreSets", r22);

        b6 = -1;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return b6;

     label10:
        $r18 := @caughtexception;

        r2 = $r18;

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r2;

        catch java.lang.Exception from label04 to label05 with label08;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public synchronized int restoreAll(long, android.app.backup.IRestoreObserver)
    {
        com.android.server.backup.BackupManagerService$ActiveRestoreSession r0;
        long l0, l2, $l8;
        android.app.backup.IRestoreObserver r1;
        java.lang.String r2, $r11, $r14, $r16, $r23, $r28;
        int i1, $i5;
        android.os.Message r4;
        java.lang.Throwable r5, $r43;
        com.android.server.backup.BackupManagerService $r6, $r20, $r29, $r32, $r36, $r38, $r39;
        android.content.Context $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r12, $r13, $r21, $r24, $r25, $r27;
        boolean $z0, $z1;
        com.android.internal.backup.IBackupTransport $r15, $r18, $r40;
        android.app.backup.RestoreSet[] $r17, $r22, $r26;
        java.lang.Object $r19, r44;
        byte $b7;
        android.app.backup.RestoreSet $r30;
        android.os.PowerManager$WakeLock $r31;
        com.android.server.backup.BackupManagerService$BackupHandler $r33, $r35, $r37;
        com.android.server.backup.BackupManagerService$RestoreParams $r34;
        java.lang.IllegalStateException $r41;
        android.os.RemoteException $r42;

        r0 := @this: com.android.server.backup.BackupManagerService$ActiveRestoreSession;

        l0 := @parameter0: long;

        r1 := @parameter1: android.app.backup.IRestoreObserver;

        $r6 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r7 = $r6.<com.android.server.backup.BackupManagerService: android.content.Context mContext>;

        virtualinvoke $r7.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BACKUP", "performRestore");

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreAll token=");

        $r11 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" observer=");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("RestoreSession", $r14);

        $z1 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: boolean mEnded>;

        if $z1 == 0 goto label01;

        $r41 = new java.lang.IllegalStateException;

        specialinvoke $r41.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Restore session already ended");

        throw $r41;

     label01:
        $z0 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: boolean mTimedOut>;

        if $z0 == 0 goto label02;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("RestoreSession", "Session already timed out");

        return -1;

     label02:
        $r15 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.internal.backup.IBackupTransport mRestoreTransport>;

        if $r15 == null goto label03;

        $r17 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: android.app.backup.RestoreSet[] mRestoreSets>;

        if $r17 != null goto label04;

     label03:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("RestoreSession", "Ignoring restoreAll() with no restore set");

        return -1;

     label04:
        $r16 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: java.lang.String mPackageName>;

        if $r16 == null goto label05;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("RestoreSession", "Ignoring restoreAll() on single-package session");

        return -1;

     label05:
        $r18 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.internal.backup.IBackupTransport mRestoreTransport>;

        r2 = interfaceinvoke $r18.<com.android.internal.backup.IBackupTransport: java.lang.String transportDirName()>();

     label06:
        goto label08;

     label07:
        $r42 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("RestoreSession", "Unable to contact transport for restore");

        return -1;

     label08:
        $r20 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r19 = $r20.<com.android.server.backup.BackupManagerService: java.lang.Object mQueueLock>;

        r44 = $r19;

        entermonitor $r19;

     label09:
        i1 = 0;

     label10:
        $r22 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: android.app.backup.RestoreSet[] mRestoreSets>;

        $i5 = lengthof $r22;

        if i1 >= $i5 goto label13;

        $r26 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: android.app.backup.RestoreSet[] mRestoreSets>;

        $r30 = $r26[i1];

        $l8 = $r30.<android.app.backup.RestoreSet: long token>;

        $b7 = l0 cmp $l8;

        if $b7 != 0 goto label12;

        $r29 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r33 = $r29.<com.android.server.backup.BackupManagerService: com.android.server.backup.BackupManagerService$BackupHandler mBackupHandler>;

        virtualinvoke $r33.<com.android.server.backup.BackupManagerService$BackupHandler: void removeMessages(int)>(8);

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r32 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r31 = $r32.<com.android.server.backup.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r31.<android.os.PowerManager$WakeLock: void acquire()>();

        $r36 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r35 = $r36.<com.android.server.backup.BackupManagerService: com.android.server.backup.BackupManagerService$BackupHandler mBackupHandler>;

        r4 = virtualinvoke $r35.<com.android.server.backup.BackupManagerService$BackupHandler: android.os.Message obtainMessage(int)>(3);

        $r34 = new com.android.server.backup.BackupManagerService$RestoreParams;

        $r39 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r40 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.internal.backup.IBackupTransport mRestoreTransport>;

        specialinvoke $r34.<com.android.server.backup.BackupManagerService$RestoreParams: void <init>(com.android.server.backup.BackupManagerService,com.android.internal.backup.IBackupTransport,java.lang.String,android.app.backup.IRestoreObserver,long)>($r39, $r40, r2, r1, l0);

        r4.<android.os.Message: java.lang.Object obj> = $r34;

        $r38 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r37 = $r38.<com.android.server.backup.BackupManagerService: com.android.server.backup.BackupManagerService$BackupHandler mBackupHandler>;

        virtualinvoke $r37.<com.android.server.backup.BackupManagerService$BackupHandler: boolean sendMessage(android.os.Message)>(r4);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        exitmonitor r44;

     label11:
        return 0;

     label12:
        i1 = i1 + 1;

        goto label10;

     label13:
        exitmonitor r44;

     label14:
        goto label17;

     label15:
        $r43 := @caughtexception;

        r5 = $r43;

        exitmonitor r44;

     label16:
        throw r5;

     label17:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restore token ");

        $r23 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l0);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("RestoreSession", $r28);

        return -1;

        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label09 to label11 with label15;
        catch java.lang.Throwable from label12 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public synchronized int restoreSome(long, android.app.backup.IRestoreObserver, java.lang.String[])
    {
        com.android.server.backup.BackupManagerService$ActiveRestoreSession r0;
        long l0, $l8, l14;
        android.app.backup.IRestoreObserver r1;
        java.lang.String[] r2, r4;
        java.lang.StringBuilder r3, $r9, $r27, $r29, $r31, $r32;
        boolean z0, $z1, $z2, $z3;
        int i1, i2, $i5, $i9, i13;
        java.lang.String r5, $r12, $r13, $r19, $r23, $r28, $r30, r52;
        java.lang.Throwable r6, $r51;
        com.android.server.backup.BackupManagerService $r7, $r22, $r35, $r37, $r39, $r41, $r45;
        android.content.Context $r8;
        com.android.internal.backup.IBackupTransport $r20, $r24, $r42;
        android.app.backup.RestoreSet[] $r21, $r26, $r34;
        java.lang.Object $r25, r54;
        byte $b7;
        android.app.backup.RestoreSet $r33;
        com.android.server.backup.BackupManagerService$BackupHandler $r36, $r38, $r46;
        android.os.PowerManager$WakeLock $r40;
        com.android.server.backup.BackupManagerService$RestoreParams $r43;
        java.lang.IllegalStateException $r44;
        android.os.RemoteException $r47;
        android.os.Message r55;

        r0 := @this: com.android.server.backup.BackupManagerService$ActiveRestoreSession;

        l0 := @parameter0: long;

        r1 := @parameter1: android.app.backup.IRestoreObserver;

        r2 := @parameter2: java.lang.String[];

        $r7 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r8 = $r7.<com.android.server.backup.BackupManagerService: android.content.Context mContext>;

        virtualinvoke $r8.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BACKUP", "performRestore");

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(int)>(128);

        r3 = $r9;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restoreSome token=");

        $r12 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l0);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" observer=");

        $r13 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" packages=");

        if r2 != null goto label01;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null");

        goto label06;

     label01:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        z0 = 1;

        r4 = r2;

        i1 = lengthof r4;

        i2 = 0;

     label02:
        if i2 >= i1 goto label05;

        r5 = r4[i2];

        if z0 != 0 goto label03;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        goto label04;

     label03:
        z0 = 0;

     label04:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        i2 = i2 + 1;

        goto label02;

     label05:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

     label06:
        $r19 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("RestoreSession", $r19);

        $z1 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: boolean mEnded>;

        if $z1 == 0 goto label07;

        $r44 = new java.lang.IllegalStateException;

        specialinvoke $r44.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Restore session already ended");

        throw $r44;

     label07:
        $z2 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: boolean mTimedOut>;

        if $z2 == 0 goto label08;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("RestoreSession", "Session already timed out");

        return -1;

     label08:
        $r20 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.internal.backup.IBackupTransport mRestoreTransport>;

        if $r20 == null goto label09;

        $r21 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: android.app.backup.RestoreSet[] mRestoreSets>;

        if $r21 != null goto label10;

     label09:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("RestoreSession", "Ignoring restoreAll() with no restore set");

        return -1;

     label10:
        $r23 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: java.lang.String mPackageName>;

        if $r23 == null goto label11;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("RestoreSession", "Ignoring restoreAll() on single-package session");

        return -1;

     label11:
        $r24 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.internal.backup.IBackupTransport mRestoreTransport>;

        r52 = interfaceinvoke $r24.<com.android.internal.backup.IBackupTransport: java.lang.String transportDirName()>();

     label12:
        goto label14;

     label13:
        $r47 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("RestoreSession", "Unable to contact transport for restore");

        return -1;

     label14:
        $r22 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r25 = $r22.<com.android.server.backup.BackupManagerService: java.lang.Object mQueueLock>;

        r54 = $r25;

        entermonitor $r25;

     label15:
        i13 = 0;

     label16:
        $r26 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: android.app.backup.RestoreSet[] mRestoreSets>;

        $i5 = lengthof $r26;

        if i13 >= $i5 goto label21;

        $r34 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: android.app.backup.RestoreSet[] mRestoreSets>;

        $r33 = $r34[i13];

        $l8 = $r33.<android.app.backup.RestoreSet: long token>;

        $b7 = l0 cmp $l8;

        if $b7 != 0 goto label20;

        $r37 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r36 = $r37.<com.android.server.backup.BackupManagerService: com.android.server.backup.BackupManagerService$BackupHandler mBackupHandler>;

        virtualinvoke $r36.<com.android.server.backup.BackupManagerService$BackupHandler: void removeMessages(int)>(8);

        l14 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r35 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r40 = $r35.<com.android.server.backup.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r40.<android.os.PowerManager$WakeLock: void acquire()>();

        $r39 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r38 = $r39.<com.android.server.backup.BackupManagerService: com.android.server.backup.BackupManagerService$BackupHandler mBackupHandler>;

        r55 = virtualinvoke $r38.<com.android.server.backup.BackupManagerService$BackupHandler: android.os.Message obtainMessage(int)>(3);

        $r43 = new com.android.server.backup.BackupManagerService$RestoreParams;

        $r41 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r42 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.internal.backup.IBackupTransport mRestoreTransport>;

        $i9 = lengthof r2;

        if $i9 <= 1 goto label17;

        $z3 = 1;

        goto label18;

     label17:
        $z3 = 0;

     label18:
        specialinvoke $r43.<com.android.server.backup.BackupManagerService$RestoreParams: void <init>(com.android.server.backup.BackupManagerService,com.android.internal.backup.IBackupTransport,java.lang.String,android.app.backup.IRestoreObserver,long,java.lang.String[],boolean)>($r41, $r42, r52, r1, l0, r2, $z3);

        r55.<android.os.Message: java.lang.Object obj> = $r43;

        $r45 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r46 = $r45.<com.android.server.backup.BackupManagerService: com.android.server.backup.BackupManagerService$BackupHandler mBackupHandler>;

        virtualinvoke $r46.<com.android.server.backup.BackupManagerService$BackupHandler: boolean sendMessage(android.os.Message)>(r55);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l14);

        exitmonitor r54;

     label19:
        return 0;

     label20:
        i13 = i13 + 1;

        goto label16;

     label21:
        exitmonitor r54;

     label22:
        goto label25;

     label23:
        $r51 := @caughtexception;

        r6 = $r51;

        exitmonitor r54;

     label24:
        throw r6;

     label25:
        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restore token ");

        $r28 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l0);

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("RestoreSession", $r30);

        return -1;

        catch android.os.RemoteException from label11 to label12 with label13;
        catch java.lang.Throwable from label15 to label19 with label23;
        catch java.lang.Throwable from label20 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
    }

    public synchronized int restorePackage(java.lang.String, android.app.backup.IRestoreObserver)
    {
        com.android.server.backup.BackupManagerService$ActiveRestoreSession r0;
        java.lang.String r1, r3, $r9, $r11, $r35, $r40, $r41, $r47, $r48;
        android.app.backup.IRestoreObserver r2;
        long l0, l8;
        android.os.Message r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r10, $r30, $r31, $r32, $r33, $r36, $r37, $r38, $r39, $r42, $r46, $r49, $r50, $r51;
        boolean $z0, $z1, $z2;
        android.content.pm.PackageManager $r12;
        com.android.server.backup.BackupManagerService $r13, $r14, $r16, $r18, $r19, $r23, $r24, $r25;
        android.content.Context $r15;
        int $i1, $i2, $i4, $i5, $i6, i7;
        com.android.internal.backup.IBackupTransport $r17, $r27;
        byte $b3;
        com.android.server.backup.BackupManagerService$BackupHandler $r20, $r21, $r29;
        android.os.PowerManager$WakeLock $r22;
        com.android.server.backup.BackupManagerService$RestoreParams $r26;
        android.content.pm.ApplicationInfo $r28;
        java.lang.SecurityException $r34;
        java.lang.IllegalStateException $r43;
        android.os.RemoteException $r44;
        android.content.pm.PackageManager$NameNotFoundException $r45;
        android.content.pm.PackageInfo r52;

        r0 := @this: com.android.server.backup.BackupManagerService$ActiveRestoreSession;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.app.backup.IRestoreObserver;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restorePackage pkg=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" obs=");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("RestoreSession", $r9);

        $z0 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: boolean mEnded>;

        if $z0 == 0 goto label01;

        $r43 = new java.lang.IllegalStateException;

        specialinvoke $r43.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Restore session already ended");

        throw $r43;

     label01:
        $z1 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: boolean mTimedOut>;

        if $z1 == 0 goto label02;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("RestoreSession", "Session already timed out");

        return -1;

     label02:
        $r11 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: java.lang.String mPackageName>;

        if $r11 == null goto label03;

        $r41 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: java.lang.String mPackageName>;

        $z2 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 != 0 goto label03;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring attempt to restore pkg=");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on session for package ");

        $r40 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: java.lang.String mPackageName>;

        $r46 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("RestoreSession", $r47);

        return -1;

     label03:
        $r13 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r12 = staticinvoke <com.android.server.backup.BackupManagerService: android.content.pm.PackageManager access$500(com.android.server.backup.BackupManagerService)>($r13);

        r52 = virtualinvoke $r12.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r1, 0);

     label04:
        goto label06;

     label05:
        $r45 := @caughtexception;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Asked to restore nonexistent pkg ");

        $r50 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r48 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("RestoreSession", $r48);

        return -1;

     label06:
        $r14 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r15 = $r14.<com.android.server.backup.BackupManagerService: android.content.Context mContext>;

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i7 = virtualinvoke $r15.<android.content.Context: int checkPermission(java.lang.String,int,int)>("android.permission.BACKUP", $i2, $i1);

        if i7 != -1 goto label07;

        $r28 = r52.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i5 = $r28.<android.content.pm.ApplicationInfo: int uid>;

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i5 == $i4 goto label07;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restorePackage: bad packageName=");

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or calling uid=");

        $i6 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("RestoreSession", $r35);

        $r34 = new java.lang.SecurityException;

        specialinvoke $r34.<java.lang.SecurityException: void <init>(java.lang.String)>("No permission to restore other packages");

        throw $r34;

     label07:
        $r16 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        l0 = virtualinvoke $r16.<com.android.server.backup.BackupManagerService: long getAvailableRestoreToken(java.lang.String)>(r1);

        $b3 = l0 cmp 0L;

        if $b3 != 0 goto label08;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("RestoreSession", "No data available for this package; not restoring");

        return -1;

     label08:
        $r17 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.internal.backup.IBackupTransport mRestoreTransport>;

        r3 = interfaceinvoke $r17.<com.android.internal.backup.IBackupTransport: java.lang.String transportDirName()>();

     label09:
        goto label11;

     label10:
        $r44 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("RestoreSession", "Unable to contact transport for restore");

        return -1;

     label11:
        $r19 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r20 = $r19.<com.android.server.backup.BackupManagerService: com.android.server.backup.BackupManagerService$BackupHandler mBackupHandler>;

        virtualinvoke $r20.<com.android.server.backup.BackupManagerService$BackupHandler: void removeMessages(int)>(8);

        l8 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r18 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r22 = $r18.<com.android.server.backup.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r22.<android.os.PowerManager$WakeLock: void acquire()>();

        $r23 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r21 = $r23.<com.android.server.backup.BackupManagerService: com.android.server.backup.BackupManagerService$BackupHandler mBackupHandler>;

        r4 = virtualinvoke $r21.<com.android.server.backup.BackupManagerService$BackupHandler: android.os.Message obtainMessage(int)>(3);

        $r26 = new com.android.server.backup.BackupManagerService$RestoreParams;

        $r24 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r27 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.internal.backup.IBackupTransport mRestoreTransport>;

        specialinvoke $r26.<com.android.server.backup.BackupManagerService$RestoreParams: void <init>(com.android.server.backup.BackupManagerService,com.android.internal.backup.IBackupTransport,java.lang.String,android.app.backup.IRestoreObserver,long,android.content.pm.PackageInfo,int)>($r24, $r27, r3, r2, l0, r52, 0);

        r4.<android.os.Message: java.lang.Object obj> = $r26;

        $r25 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r29 = $r25.<com.android.server.backup.BackupManagerService: com.android.server.backup.BackupManagerService$BackupHandler mBackupHandler>;

        virtualinvoke $r29.<com.android.server.backup.BackupManagerService$BackupHandler: boolean sendMessage(android.os.Message)>(r4);

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l8);

        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label05;
        catch android.os.RemoteException from label08 to label09 with label10;
    }

    public synchronized void endRestoreSession()
    {
        com.android.server.backup.BackupManagerService$ActiveRestoreSession r0;
        boolean $z0, $z1;
        com.android.server.backup.BackupManagerService $r1, $r3;
        com.android.server.backup.BackupManagerService$ActiveRestoreSession$EndRestoreRunnable $r2;
        com.android.server.backup.BackupManagerService$BackupHandler $r4;
        java.lang.IllegalStateException $r5;

        r0 := @this: com.android.server.backup.BackupManagerService$ActiveRestoreSession;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("RestoreSession", "endRestoreSession");

        $z0 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: boolean mTimedOut>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("RestoreSession", "Session already timed out");

        return;

     label1:
        $z1 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: boolean mEnded>;

        if $z1 == 0 goto label2;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Restore session already ended");

        throw $r5;

     label2:
        $r1 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        $r4 = $r1.<com.android.server.backup.BackupManagerService: com.android.server.backup.BackupManagerService$BackupHandler mBackupHandler>;

        $r2 = new com.android.server.backup.BackupManagerService$ActiveRestoreSession$EndRestoreRunnable;

        $r3 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.server.backup.BackupManagerService this$0>;

        specialinvoke $r2.<com.android.server.backup.BackupManagerService$ActiveRestoreSession$EndRestoreRunnable: void <init>(com.android.server.backup.BackupManagerService$ActiveRestoreSession,com.android.server.backup.BackupManagerService,com.android.server.backup.BackupManagerService$ActiveRestoreSession)>(r0, $r3, r0);

        virtualinvoke $r4.<com.android.server.backup.BackupManagerService$BackupHandler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    static com.android.internal.backup.IBackupTransport access$2300(com.android.server.backup.BackupManagerService$ActiveRestoreSession)
    {
        com.android.server.backup.BackupManagerService$ActiveRestoreSession r0;
        com.android.internal.backup.IBackupTransport $r1;

        r0 := @parameter0: com.android.server.backup.BackupManagerService$ActiveRestoreSession;

        $r1 = r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.internal.backup.IBackupTransport mRestoreTransport>;

        return $r1;
    }

    static com.android.internal.backup.IBackupTransport access$2302(com.android.server.backup.BackupManagerService$ActiveRestoreSession, com.android.internal.backup.IBackupTransport)
    {
        com.android.server.backup.BackupManagerService$ActiveRestoreSession r0;
        com.android.internal.backup.IBackupTransport r1;

        r0 := @parameter0: com.android.server.backup.BackupManagerService$ActiveRestoreSession;

        r1 := @parameter1: com.android.internal.backup.IBackupTransport;

        r0.<com.android.server.backup.BackupManagerService$ActiveRestoreSession: com.android.internal.backup.IBackupTransport mRestoreTransport> = r1;

        return r1;
    }

    public static void <clinit>()
    {
        <com.android.server.backup.BackupManagerService$ActiveRestoreSession: java.lang.String TAG> = "RestoreSession";

        return;
    }
}
