class com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer extends com.android.server.am.ActivityStackSupervisor$ActivityContainer
{
    android.view.Surface mSurface;
    boolean mDrawn;
    final com.android.server.am.ActivityStackSupervisor this$0;

    void <init>(com.android.server.am.ActivityStackSupervisor, com.android.server.am.ActivityRecord, android.app.IActivityContainerCallback)
    {
        com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer r0;
        com.android.server.am.ActivityStackSupervisor r1;
        com.android.server.am.ActivityRecord r2, $r8;
        android.app.IActivityContainerCallback r3;
        int $i0, $i1;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer;

        r1 := @parameter0: com.android.server.am.ActivityStackSupervisor;

        r2 := @parameter1: com.android.server.am.ActivityRecord;

        r3 := @parameter2: android.app.IActivityContainerCallback;

        r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: com.android.server.am.ActivityStackSupervisor this$0> = r1;

        $i0 = virtualinvoke r1.<com.android.server.am.ActivityStackSupervisor: int getNextStackId()>();

        specialinvoke r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void <init>(com.android.server.am.ActivityStackSupervisor,int)>(r1, $i0);

        r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: boolean mDrawn> = 0;

        r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: com.android.server.am.ActivityRecord mParentActivity> = r2;

        r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: android.app.IActivityContainerCallback mCallback> = r3;

        r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: int mContainerState> = 1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("VirtualActivityContainer{");

        $i1 = r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: int mStackId>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", parent=");

        $r8 = r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: com.android.server.am.ActivityRecord mParentActivity>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: java.lang.String mIdString> = $r11;

        return;
    }

    public void setSurface(android.view.Surface, int, int, int)
    {
        com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer r0;
        android.view.Surface r1;
        int i0, i1, i2;
        com.android.server.am.ActivityManagerService r2, $r6;
        long l3;
        java.lang.Throwable r3, r4, $r7, $r8;
        com.android.server.am.ActivityStackSupervisor $r5;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer;

        r1 := @parameter0: android.view.Surface;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: void setSurface(android.view.Surface,int,int,int)>(r1, i0, i1, i2);

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $r6 = $r5.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r2 = $r6;

        entermonitor $r6;

     label01:
        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        specialinvoke r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: void setSurfaceLocked(android.view.Surface,int,int,int)>(r1, i0, i1, i2);

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        goto label06;

     label04:
        $r8 := @caughtexception;

        r3 = $r8;

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw r3;

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r7 := @caughtexception;

        r4 = $r7;

        exitmonitor r2;

     label09:
        throw r4;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private void setSurfaceLocked(android.view.Surface, int, int, int)
    {
        com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer r0;
        android.view.Surface r1, $r4, $r13;
        int i0, i1, i2, $i3, $i4;
        com.android.server.am.ActivityStackSupervisor$VirtualActivityDisplay r2, $r6, $r15, r18;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r3, $r5;
        com.android.server.am.ActivityStack $r7, $r9, $r11, $r12;
        com.android.server.am.ActivityRecord $r8, $r10;
        com.android.server.am.ActivityStackSupervisor $r14, $r17;
        android.util.SparseArray $r16;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer;

        r1 := @parameter0: android.view.Surface;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $i3 = r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: int mContainerState>;

        if $i3 != 2 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: com.android.server.am.ActivityStackSupervisor$ActivityDisplay mActivityDisplay>;

        r2 = (com.android.server.am.ActivityStackSupervisor$VirtualActivityDisplay) $r3;

        if r2 != null goto label2;

        $r15 = new com.android.server.am.ActivityStackSupervisor$VirtualActivityDisplay;

        $r14 = r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        specialinvoke $r15.<com.android.server.am.ActivityStackSupervisor$VirtualActivityDisplay: void <init>(com.android.server.am.ActivityStackSupervisor,int,int,int)>($r14, i0, i1, i2);

        r18 = $r15;

        r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: com.android.server.am.ActivityStackSupervisor$ActivityDisplay mActivityDisplay> = r18;

        $r17 = r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $r16 = staticinvoke <com.android.server.am.ActivityStackSupervisor: android.util.SparseArray access$500(com.android.server.am.ActivityStackSupervisor)>($r17);

        $i4 = r18.<com.android.server.am.ActivityStackSupervisor$VirtualActivityDisplay: int mDisplayId>;

        virtualinvoke $r16.<android.util.SparseArray: void put(int,java.lang.Object)>($i4, r18);

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: void attachToDisplayLocked(com.android.server.am.ActivityStackSupervisor$ActivityDisplay)>(r18);

     label2:
        $r4 = r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: android.view.Surface mSurface>;

        if $r4 == null goto label3;

        $r13 = r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: android.view.Surface mSurface>;

        virtualinvoke $r13.<android.view.Surface: void release()>();

     label3:
        r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: android.view.Surface mSurface> = r1;

        if r1 == null goto label4;

        $r12 = r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: com.android.server.am.ActivityStack mStack>;

        virtualinvoke $r12.<com.android.server.am.ActivityStack: boolean resumeTopActivityLocked(com.android.server.am.ActivityRecord)>(null);

        goto label5;

     label4:
        r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: int mContainerState> = 1;

        $r5 = r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: com.android.server.am.ActivityStackSupervisor$ActivityDisplay mActivityDisplay>;

        $r6 = (com.android.server.am.ActivityStackSupervisor$VirtualActivityDisplay) $r5;

        virtualinvoke $r6.<com.android.server.am.ActivityStackSupervisor$VirtualActivityDisplay: void setSurface(android.view.Surface)>(null);

        $r7 = r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: com.android.server.am.ActivityStack mStack>;

        $r8 = $r7.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity>;

        if $r8 != null goto label5;

        $r9 = r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: com.android.server.am.ActivityStack mStack>;

        $r10 = $r9.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if $r10 == null goto label5;

        $r11 = r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: com.android.server.am.ActivityStack mStack>;

        virtualinvoke $r11.<com.android.server.am.ActivityStack: boolean startPausingLocked(boolean,boolean,boolean,boolean)>(0, 1, 0, 0);

     label5:
        specialinvoke r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: void setSurfaceIfReadyLocked()>();

        return;
    }

    boolean isAttachedLocked()
    {
        com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer r0;
        android.view.Surface $r1;
        boolean $z0, $z1;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: android.view.Surface mSurface>;

        if $r1 == null goto label1;

        $z0 = specialinvoke r0.<com.android.server.am.ActivityStackSupervisor$ActivityContainer: boolean isAttachedLocked()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    void setDrawn()
    {
        com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer r0;
        com.android.server.am.ActivityManagerService r1, $r4;
        java.lang.Throwable r2, $r5;
        com.android.server.am.ActivityStackSupervisor $r3;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $r4 = $r3.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityManagerService mService>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: boolean mDrawn> = 1;

        specialinvoke r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: void setSurfaceIfReadyLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    boolean isEligibleForNewTasks()
    {
        com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer r0;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer;

        return 0;
    }

    void onTaskListEmptyLocked()
    {
        com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer r0;
        com.android.server.am.ActivityStackSupervisor $r1, $r3, $r4;
        com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler $r2, $r5;
        android.os.Message $r6;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $r2 = $r1.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        virtualinvoke $r2.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: void removeMessages(int,java.lang.Object)>(112, r0);

        virtualinvoke r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: void detachLocked()>();

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        virtualinvoke $r3.<com.android.server.am.ActivityStackSupervisor: void deleteActivityContainer(android.app.IActivityContainer)>(r0);

        $r4 = r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: com.android.server.am.ActivityStackSupervisor this$0>;

        $r5 = $r4.<com.android.server.am.ActivityStackSupervisor: com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler mHandler>;

        $r6 = virtualinvoke $r5.<com.android.server.am.ActivityStackSupervisor$ActivityStackSupervisorHandler: android.os.Message obtainMessage(int,java.lang.Object)>(111, r0);

        virtualinvoke $r6.<android.os.Message: void sendToTarget()>();

        return;
    }

    private void setSurfaceIfReadyLocked()
    {
        com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer r0;
        boolean $z0;
        android.view.Surface $r1, $r3;
        int $i0;
        com.android.server.am.ActivityStackSupervisor$ActivityDisplay $r2;
        com.android.server.am.ActivityStackSupervisor$VirtualActivityDisplay $r4;

        r0 := @this: com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer;

        $z0 = r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: boolean mDrawn>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: android.view.Surface mSurface>;

        if $r1 == null goto label1;

        $i0 = r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: int mContainerState>;

        if $i0 != 1 goto label1;

        $r2 = r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: com.android.server.am.ActivityStackSupervisor$ActivityDisplay mActivityDisplay>;

        $r4 = (com.android.server.am.ActivityStackSupervisor$VirtualActivityDisplay) $r2;

        $r3 = r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: android.view.Surface mSurface>;

        virtualinvoke $r4.<com.android.server.am.ActivityStackSupervisor$VirtualActivityDisplay: void setSurface(android.view.Surface)>($r3);

        r0.<com.android.server.am.ActivityStackSupervisor$VirtualActivityContainer: int mContainerState> = 0;

     label1:
        return;
    }
}
