public class com.android.server.notification.DowntimeConditionProvider extends android.service.notification.ConditionProviderService
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    public static final android.content.ComponentName COMPONENT;
    private static final java.lang.String ENTER_ACTION;
    private static final int ENTER_CODE;
    private static final java.lang.String EXIT_ACTION;
    private static final int EXIT_CODE;
    private static final java.lang.String EXTRA_TIME;
    private final java.util.Calendar mCalendar;
    private final android.content.Context mContext;
    private final android.util.ArraySet mDays;
    private boolean mConnected;
    private boolean mInDowntime;
    private android.service.notification.ZenModeConfig mConfig;
    private com.android.server.notification.DowntimeConditionProvider$Callback mCallback;
    private android.content.BroadcastReceiver mReceiver;

    public void <init>()
    {
        com.android.server.notification.DowntimeConditionProvider r0;
        java.util.Calendar $r1;
        android.util.ArraySet $r2;
        com.android.server.notification.DowntimeConditionProvider$1 $r3;
        boolean $z0;

        r0 := @this: com.android.server.notification.DowntimeConditionProvider;

        specialinvoke r0.<android.service.notification.ConditionProviderService: void <init>()>();

        $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        r0.<com.android.server.notification.DowntimeConditionProvider: java.util.Calendar mCalendar> = $r1;

        r0.<com.android.server.notification.DowntimeConditionProvider: android.content.Context mContext> = r0;

        $r2 = new android.util.ArraySet;

        specialinvoke $r2.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.notification.DowntimeConditionProvider: android.util.ArraySet mDays> = $r2;

        $r3 = new com.android.server.notification.DowntimeConditionProvider$1;

        specialinvoke $r3.<com.android.server.notification.DowntimeConditionProvider$1: void <init>(com.android.server.notification.DowntimeConditionProvider)>(r0);

        r0.<com.android.server.notification.DowntimeConditionProvider: android.content.BroadcastReceiver mReceiver> = $r3;

        $z0 = <com.android.server.notification.DowntimeConditionProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DowntimeConditions", "new DowntimeConditionProvider()");

     label1:
        return;
    }

    public void dump(java.io.PrintWriter, com.android.server.notification.NotificationManagerService$DumpFilter)
    {
        com.android.server.notification.DowntimeConditionProvider r0;
        java.io.PrintWriter r1;
        com.android.server.notification.NotificationManagerService$DumpFilter r2;
        boolean $z0, $z1;

        r0 := @this: com.android.server.notification.DowntimeConditionProvider;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: com.android.server.notification.NotificationManagerService$DumpFilter;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    DowntimeConditionProvider:");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      mConnected=");

        $z0 = r0.<com.android.server.notification.DowntimeConditionProvider: boolean mConnected>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("      mInDowntime=");

        $z1 = r0.<com.android.server.notification.DowntimeConditionProvider: boolean mInDowntime>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z1);

        return;
    }

    public void attachBase(android.content.Context)
    {
        com.android.server.notification.DowntimeConditionProvider r0;
        android.content.Context r1;

        r0 := @this: com.android.server.notification.DowntimeConditionProvider;

        r1 := @parameter0: android.content.Context;

        virtualinvoke r0.<com.android.server.notification.DowntimeConditionProvider: void attachBaseContext(android.content.Context)>(r1);

        return;
    }

    public android.service.notification.IConditionProvider asInterface()
    {
        com.android.server.notification.DowntimeConditionProvider r0;
        android.os.IBinder $r1;
        android.service.notification.IConditionProvider $r2;

        r0 := @this: com.android.server.notification.DowntimeConditionProvider;

        $r1 = virtualinvoke r0.<com.android.server.notification.DowntimeConditionProvider: android.os.IBinder onBind(android.content.Intent)>(null);

        $r2 = (android.service.notification.IConditionProvider) $r1;

        return $r2;
    }

    public void setCallback(com.android.server.notification.DowntimeConditionProvider$Callback)
    {
        com.android.server.notification.DowntimeConditionProvider r0;
        com.android.server.notification.DowntimeConditionProvider$Callback r1;

        r0 := @this: com.android.server.notification.DowntimeConditionProvider;

        r1 := @parameter0: com.android.server.notification.DowntimeConditionProvider$Callback;

        r0.<com.android.server.notification.DowntimeConditionProvider: com.android.server.notification.DowntimeConditionProvider$Callback mCallback> = r1;

        return;
    }

    public void onConnected()
    {
        com.android.server.notification.DowntimeConditionProvider r0;
        android.content.IntentFilter r1, $r2;
        boolean $z0;
        android.content.BroadcastReceiver $r3;
        android.content.Context $r4;

        r0 := @this: com.android.server.notification.DowntimeConditionProvider;

        $z0 = <com.android.server.notification.DowntimeConditionProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DowntimeConditions", "onConnected");

     label1:
        r0.<com.android.server.notification.DowntimeConditionProvider: boolean mConnected> = 1;

        $r2 = new android.content.IntentFilter;

        specialinvoke $r2.<android.content.IntentFilter: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("DowntimeConditions.enter");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("DowntimeConditions.exit");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIME_SET");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIMEZONE_CHANGED");

        $r4 = r0.<com.android.server.notification.DowntimeConditionProvider: android.content.Context mContext>;

        $r3 = r0.<com.android.server.notification.DowntimeConditionProvider: android.content.BroadcastReceiver mReceiver>;

        virtualinvoke $r4.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r3, r1);

        specialinvoke r0.<com.android.server.notification.DowntimeConditionProvider: void init()>();

        return;
    }

    public void onDestroy()
    {
        com.android.server.notification.DowntimeConditionProvider r0;
        boolean $z0;

        r0 := @this: com.android.server.notification.DowntimeConditionProvider;

        $z0 = <com.android.server.notification.DowntimeConditionProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DowntimeConditions", "onDestroy");

     label1:
        r0.<com.android.server.notification.DowntimeConditionProvider: boolean mConnected> = 0;

        return;
    }

    public void onRequestConditions(int)
    {
        com.android.server.notification.DowntimeConditionProvider r0;
        int i0, $i1;
        boolean $z0, $z1;
        android.service.notification.ZenModeConfig $r1, $r2;
        android.service.notification.ZenModeConfig$DowntimeInfo $r3;
        android.service.notification.Condition $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: com.android.server.notification.DowntimeConditionProvider;

        i0 := @parameter0: int;

        $z0 = <com.android.server.notification.DowntimeConditionProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onRequestConditions relevance=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DowntimeConditions", $r8);

     label1:
        $i1 = i0 & 1;

        if $i1 == 0 goto label2;

        $z1 = r0.<com.android.server.notification.DowntimeConditionProvider: boolean mInDowntime>;

        if $z1 == 0 goto label2;

        $r1 = r0.<com.android.server.notification.DowntimeConditionProvider: android.service.notification.ZenModeConfig mConfig>;

        if $r1 == null goto label2;

        $r2 = r0.<com.android.server.notification.DowntimeConditionProvider: android.service.notification.ZenModeConfig mConfig>;

        $r3 = virtualinvoke $r2.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$DowntimeInfo toDowntimeInfo()>();

        $r4 = virtualinvoke r0.<com.android.server.notification.DowntimeConditionProvider: android.service.notification.Condition createCondition(android.service.notification.ZenModeConfig$DowntimeInfo,int)>($r3, 1);

        virtualinvoke r0.<com.android.server.notification.DowntimeConditionProvider: void notifyCondition(android.service.notification.Condition)>($r4);

     label2:
        return;
    }

    public void onSubscribe(android.net.Uri)
    {
        com.android.server.notification.DowntimeConditionProvider r0;
        android.net.Uri r1;
        android.service.notification.ZenModeConfig$DowntimeInfo r2, $r5;
        byte b0, $b2;
        boolean $z0, $z1, $z2, $z3;
        android.service.notification.ZenModeConfig $r3, $r4;
        android.service.notification.Condition $r6;
        java.lang.StringBuilder $r7, $r8, $r11, $r12, $r13, $r15;
        java.lang.String $r9, $r10, $r14;

        r0 := @this: com.android.server.notification.DowntimeConditionProvider;

        r1 := @parameter0: android.net.Uri;

        $z0 = <com.android.server.notification.DowntimeConditionProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onSubscribe conditionId=");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DowntimeConditions", $r14);

     label1:
        r2 = staticinvoke <android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$DowntimeInfo tryParseDowntimeConditionId(android.net.Uri)>(r1);

        if r2 == null goto label5;

        $r3 = r0.<com.android.server.notification.DowntimeConditionProvider: android.service.notification.ZenModeConfig mConfig>;

        if $r3 == null goto label5;

        $r4 = r0.<com.android.server.notification.DowntimeConditionProvider: android.service.notification.ZenModeConfig mConfig>;

        $r5 = virtualinvoke $r4.<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$DowntimeInfo toDowntimeInfo()>();

        $z1 = virtualinvoke $r5.<android.service.notification.ZenModeConfig$DowntimeInfo: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label2;

        $z3 = r0.<com.android.server.notification.DowntimeConditionProvider: boolean mInDowntime>;

        if $z3 == 0 goto label2;

        $b2 = 1;

        goto label3;

     label2:
        $b2 = 0;

     label3:
        b0 = $b2;

        $z2 = <com.android.server.notification.DowntimeConditionProvider: boolean DEBUG>;

        if $z2 == 0 goto label4;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notify condition state: ");

        $r9 = staticinvoke <android.service.notification.Condition: java.lang.String stateToString(int)>(b0);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DowntimeConditions", $r10);

     label4:
        $r6 = virtualinvoke r0.<com.android.server.notification.DowntimeConditionProvider: android.service.notification.Condition createCondition(android.service.notification.ZenModeConfig$DowntimeInfo,int)>(r2, b0);

        virtualinvoke r0.<com.android.server.notification.DowntimeConditionProvider: void notifyCondition(android.service.notification.Condition)>($r6);

     label5:
        return;
    }

    public void onUnsubscribe(android.net.Uri)
    {
        com.android.server.notification.DowntimeConditionProvider r0;
        android.net.Uri r1;
        boolean $z0;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: com.android.server.notification.DowntimeConditionProvider;

        r1 := @parameter0: android.net.Uri;

        $z0 = <com.android.server.notification.DowntimeConditionProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onUnsubscribe conditionId=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DowntimeConditions", $r5);

     label1:
        return;
    }

    public void setConfig(android.service.notification.ZenModeConfig)
    {
        com.android.server.notification.DowntimeConditionProvider r0;
        android.service.notification.ZenModeConfig r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.notification.DowntimeConditionProvider;

        r1 := @parameter0: android.service.notification.ZenModeConfig;

        $r2 = r0.<com.android.server.notification.DowntimeConditionProvider: android.service.notification.ZenModeConfig mConfig>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r2, r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = <com.android.server.notification.DowntimeConditionProvider: boolean DEBUG>;

        if $z1 == 0 goto label2;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DowntimeConditions", "setConfig");

     label2:
        r0.<com.android.server.notification.DowntimeConditionProvider: android.service.notification.ZenModeConfig mConfig> = r1;

        $z2 = r0.<com.android.server.notification.DowntimeConditionProvider: boolean mConnected>;

        if $z2 == 0 goto label3;

        specialinvoke r0.<com.android.server.notification.DowntimeConditionProvider: void init()>();

     label3:
        return;
    }

    public boolean isInDowntime()
    {
        com.android.server.notification.DowntimeConditionProvider r0;
        boolean $z0;

        r0 := @this: com.android.server.notification.DowntimeConditionProvider;

        $z0 = r0.<com.android.server.notification.DowntimeConditionProvider: boolean mInDowntime>;

        return $z0;
    }

    public android.service.notification.Condition createCondition(android.service.notification.ZenModeConfig$DowntimeInfo, int)
    {
        com.android.server.notification.DowntimeConditionProvider r0;
        android.service.notification.ZenModeConfig$DowntimeInfo r1;
        int i0, $i2, $i4;
        android.net.Uri r2;
        java.lang.String r3, r5, r6, r7, $r13;
        java.util.Locale r4;
        long l1, $l3;
        android.content.Context $r8, $r12;
        boolean $z0;
        java.util.Date $r9;
        java.text.SimpleDateFormat $r10;
        java.lang.Object[] $r11;
        android.service.notification.Condition $r14;

        r0 := @this: com.android.server.notification.DowntimeConditionProvider;

        r1 := @parameter0: android.service.notification.ZenModeConfig$DowntimeInfo;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return null;

     label1:
        r2 = staticinvoke <android.service.notification.ZenModeConfig: android.net.Uri toDowntimeConditionId(android.service.notification.ZenModeConfig$DowntimeInfo)>(r1);

        $r8 = r0.<com.android.server.notification.DowntimeConditionProvider: android.content.Context mContext>;

        $z0 = staticinvoke <android.text.format.DateFormat: boolean is24HourFormat(android.content.Context)>($r8);

        if $z0 == 0 goto label2;

        $r13 = "Hm";

        goto label3;

     label2:
        $r13 = "hma";

     label3:
        r3 = $r13;

        r4 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        r5 = staticinvoke <android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>(r4, r3);

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i4 = r1.<android.service.notification.ZenModeConfig$DowntimeInfo: int endHour>;

        $i2 = r1.<android.service.notification.ZenModeConfig$DowntimeInfo: int endMinute>;

        l1 = specialinvoke r0.<com.android.server.notification.DowntimeConditionProvider: long getTime(long,int,int)>($l3, $i4, $i2);

        $r10 = new java.text.SimpleDateFormat;

        specialinvoke $r10.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(r5, r4);

        $r9 = new java.util.Date;

        specialinvoke $r9.<java.util.Date: void <init>(long)>(l1);

        r6 = virtualinvoke $r10.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r9);

        $r12 = r0.<com.android.server.notification.DowntimeConditionProvider: android.content.Context mContext>;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r6;

        r7 = virtualinvoke $r12.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(17041024, $r11);

        $r14 = new android.service.notification.Condition;

        specialinvoke $r14.<android.service.notification.Condition: void <init>(android.net.Uri,java.lang.String,java.lang.String,java.lang.String,int,int,int)>(r2, r7, "", "", 0, i0, 1);

        return $r14;
    }

    public boolean isDowntimeCondition(android.service.notification.Condition)
    {
        com.android.server.notification.DowntimeConditionProvider r0;
        android.service.notification.Condition r1;
        android.net.Uri $r2;
        boolean $z0, $z1;

        r0 := @this: com.android.server.notification.DowntimeConditionProvider;

        r1 := @parameter0: android.service.notification.Condition;

        if r1 == null goto label1;

        $r2 = r1.<android.service.notification.Condition: android.net.Uri id>;

        $z0 = staticinvoke <android.service.notification.ZenModeConfig: boolean isValidDowntimeConditionId(android.net.Uri)>($r2);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private void init()
    {
        com.android.server.notification.DowntimeConditionProvider r0;

        r0 := @this: com.android.server.notification.DowntimeConditionProvider;

        specialinvoke r0.<com.android.server.notification.DowntimeConditionProvider: void updateDays()>();

        specialinvoke r0.<com.android.server.notification.DowntimeConditionProvider: void reevaluateDowntime()>();

        specialinvoke r0.<com.android.server.notification.DowntimeConditionProvider: void updateAlarms()>();

        return;
    }

    private void updateDays()
    {
        com.android.server.notification.DowntimeConditionProvider r0;
        int[] r1;
        int i0, $i1, $i2;
        android.util.ArraySet $r2, $r6;
        android.service.notification.ZenModeConfig $r3, $r4;
        java.lang.String $r5;
        java.lang.Integer $r7;

        r0 := @this: com.android.server.notification.DowntimeConditionProvider;

        $r2 = r0.<com.android.server.notification.DowntimeConditionProvider: android.util.ArraySet mDays>;

        virtualinvoke $r2.<android.util.ArraySet: void clear()>();

        $r3 = r0.<com.android.server.notification.DowntimeConditionProvider: android.service.notification.ZenModeConfig mConfig>;

        if $r3 == null goto label2;

        $r4 = r0.<com.android.server.notification.DowntimeConditionProvider: android.service.notification.ZenModeConfig mConfig>;

        $r5 = $r4.<android.service.notification.ZenModeConfig: java.lang.String sleepMode>;

        r1 = staticinvoke <android.service.notification.ZenModeConfig: int[] tryParseDays(java.lang.String)>($r5);

        i0 = 0;

     label1:
        if r1 == null goto label2;

        $i1 = lengthof r1;

        if i0 >= $i1 goto label2;

        $r6 = r0.<com.android.server.notification.DowntimeConditionProvider: android.util.ArraySet mDays>;

        $i2 = r1[i0];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r6.<android.util.ArraySet: boolean add(java.lang.Object)>($r7);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    private boolean isInDowntime(long)
    {
        com.android.server.notification.DowntimeConditionProvider r0;
        long l0, l1, l2;
        android.service.notification.ZenModeConfig $r1, $r3, $r4, $r5, $r6;
        android.util.ArraySet $r2;
        int $i3, $i4, $i5, $i6, $i7;
        byte $b8, $b9;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.notification.DowntimeConditionProvider;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.server.notification.DowntimeConditionProvider: android.service.notification.ZenModeConfig mConfig>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.notification.DowntimeConditionProvider: android.util.ArraySet mDays>;

        $i3 = virtualinvoke $r2.<android.util.ArraySet: int size()>();

        if $i3 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r3 = r0.<com.android.server.notification.DowntimeConditionProvider: android.service.notification.ZenModeConfig mConfig>;

        $i5 = $r3.<android.service.notification.ZenModeConfig: int sleepStartHour>;

        $r4 = r0.<com.android.server.notification.DowntimeConditionProvider: android.service.notification.ZenModeConfig mConfig>;

        $i4 = $r4.<android.service.notification.ZenModeConfig: int sleepStartMinute>;

        l1 = specialinvoke r0.<com.android.server.notification.DowntimeConditionProvider: long getTime(long,int,int)>(l0, $i5, $i4);

        $r5 = r0.<com.android.server.notification.DowntimeConditionProvider: android.service.notification.ZenModeConfig mConfig>;

        $i7 = $r5.<android.service.notification.ZenModeConfig: int sleepEndHour>;

        $r6 = r0.<com.android.server.notification.DowntimeConditionProvider: android.service.notification.ZenModeConfig mConfig>;

        $i6 = $r6.<android.service.notification.ZenModeConfig: int sleepEndMinute>;

        l2 = specialinvoke r0.<com.android.server.notification.DowntimeConditionProvider: long getTime(long,int,int)>(l0, $i7, $i6);

        $b9 = l1 cmp l2;

        if $b9 != 0 goto label3;

        return 0;

     label3:
        $b8 = l2 cmp l1;

        if $b8 >= 0 goto label4;

        l2 = specialinvoke r0.<com.android.server.notification.DowntimeConditionProvider: long addDays(long,int)>(l2, 1);

     label4:
        $z1 = specialinvoke r0.<com.android.server.notification.DowntimeConditionProvider: boolean isInDowntime(int,long,long,long)>(-1, l0, l1, l2);

        if $z1 != 0 goto label5;

        $z0 = specialinvoke r0.<com.android.server.notification.DowntimeConditionProvider: boolean isInDowntime(int,long,long,long)>(0, l0, l1, l2);

        if $z0 == 0 goto label6;

     label5:
        $z2 = 1;

        goto label7;

     label6:
        $z2 = 0;

     label7:
        return $z2;
    }

    private boolean isInDowntime(int, long, long, long)
    {
        com.android.server.notification.DowntimeConditionProvider r0;
        int i0, i5, $i6, $i7, $i8, $i9, $i10, $i11;
        long l1, l2, l3, l14, l15;
        java.lang.Integer $r1;
        android.util.ArraySet $r2;
        byte $b12, $b13;
        boolean $z0, $z1;

        r0 := @this: com.android.server.notification.DowntimeConditionProvider;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        $i6 = specialinvoke r0.<com.android.server.notification.DowntimeConditionProvider: int getDayOfWeek(long)>(l1);

        $i8 = $i6 - 1;

        $i7 = i0 % 7;

        $i9 = $i8 + $i7;

        $i10 = $i9 + 7;

        $i11 = $i10 % 7;

        i5 = $i11 + 1;

        l14 = specialinvoke r0.<com.android.server.notification.DowntimeConditionProvider: long addDays(long,int)>(l2, i0);

        l15 = specialinvoke r0.<com.android.server.notification.DowntimeConditionProvider: long addDays(long,int)>(l3, i0);

        $r2 = r0.<com.android.server.notification.DowntimeConditionProvider: android.util.ArraySet mDays>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        $z0 = virtualinvoke $r2.<android.util.ArraySet: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $b12 = l1 cmp l14;

        if $b12 < 0 goto label1;

        $b13 = l1 cmp l15;

        if $b13 >= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private void reevaluateDowntime()
    {
        com.android.server.notification.DowntimeConditionProvider r0;
        boolean z0, $z1, $z2, $z3;
        long $l0, $l2;
        java.lang.StringBuilder $r1, $r3, $r4, $r7, $r9, $r11;
        java.lang.String $r5, $r8, $r10;
        int $i3;
        android.util.ArraySet $r6;

        r0 := @this: com.android.server.notification.DowntimeConditionProvider;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        z0 = specialinvoke r0.<com.android.server.notification.DowntimeConditionProvider: boolean isInDowntime(long)>($l0);

        $z1 = <com.android.server.notification.DowntimeConditionProvider: boolean DEBUG>;

        if $z1 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("inDowntime=");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DowntimeConditions", $r10);

     label1:
        $z2 = r0.<com.android.server.notification.DowntimeConditionProvider: boolean mInDowntime>;

        if z0 != $z2 goto label2;

        return;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        if z0 == 0 goto label3;

        $r8 = "Entering";

        goto label4;

     label3:
        $r8 = "Exiting";

     label4:
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" downtime");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("DowntimeConditions", $r5);

        r0.<com.android.server.notification.DowntimeConditionProvider: boolean mInDowntime> = z0;

        $z3 = r0.<com.android.server.notification.DowntimeConditionProvider: boolean mInDowntime>;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i3 = specialinvoke r0.<com.android.server.notification.DowntimeConditionProvider: int getDayOfWeek(long)>($l2);

        $r6 = r0.<com.android.server.notification.DowntimeConditionProvider: android.util.ArraySet mDays>;

        staticinvoke <com.android.server.notification.ZenLog: void traceDowntime(boolean,int,android.util.ArraySet)>($z3, $i3, $r6);

        specialinvoke r0.<com.android.server.notification.DowntimeConditionProvider: void fireDowntimeChanged()>();

        return;
    }

    private void fireDowntimeChanged()
    {
        com.android.server.notification.DowntimeConditionProvider r0;
        com.android.server.notification.DowntimeConditionProvider$Callback $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.server.notification.DowntimeConditionProvider;

        $r1 = r0.<com.android.server.notification.DowntimeConditionProvider: com.android.server.notification.DowntimeConditionProvider$Callback mCallback>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.notification.DowntimeConditionProvider: com.android.server.notification.DowntimeConditionProvider$Callback mCallback>;

        $z0 = r0.<com.android.server.notification.DowntimeConditionProvider: boolean mInDowntime>;

        interfaceinvoke $r2.<com.android.server.notification.DowntimeConditionProvider$Callback: void onDowntimeChanged(boolean)>($z0);

     label1:
        return;
    }

    private void updateAlarms()
    {
        com.android.server.notification.DowntimeConditionProvider r0;
        android.service.notification.ZenModeConfig $r1, $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.notification.DowntimeConditionProvider;

        $r1 = r0.<com.android.server.notification.DowntimeConditionProvider: android.service.notification.ZenModeConfig mConfig>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.notification.DowntimeConditionProvider: android.service.notification.ZenModeConfig mConfig>;

        $i1 = $r2.<android.service.notification.ZenModeConfig: int sleepStartHour>;

        $r3 = r0.<com.android.server.notification.DowntimeConditionProvider: android.service.notification.ZenModeConfig mConfig>;

        $i0 = $r3.<android.service.notification.ZenModeConfig: int sleepStartMinute>;

        specialinvoke r0.<com.android.server.notification.DowntimeConditionProvider: void updateAlarm(java.lang.String,int,int,int)>("DowntimeConditions.enter", 100, $i1, $i0);

        $r4 = r0.<com.android.server.notification.DowntimeConditionProvider: android.service.notification.ZenModeConfig mConfig>;

        $i3 = $r4.<android.service.notification.ZenModeConfig: int sleepEndHour>;

        $r5 = r0.<com.android.server.notification.DowntimeConditionProvider: android.service.notification.ZenModeConfig mConfig>;

        $i2 = $r5.<android.service.notification.ZenModeConfig: int sleepEndMinute>;

        specialinvoke r0.<com.android.server.notification.DowntimeConditionProvider: void updateAlarm(java.lang.String,int,int,int)>("DowntimeConditions.exit", 101, $i3, $i2);

        return;
    }

    private int getDayOfWeek(long)
    {
        com.android.server.notification.DowntimeConditionProvider r0;
        long l0;
        java.util.Calendar $r1, $r2;
        int $i1;

        r0 := @this: com.android.server.notification.DowntimeConditionProvider;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.server.notification.DowntimeConditionProvider: java.util.Calendar mCalendar>;

        virtualinvoke $r1.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        $r2 = r0.<com.android.server.notification.DowntimeConditionProvider: java.util.Calendar mCalendar>;

        $i1 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(7);

        return $i1;
    }

    private long getTime(long, int, int)
    {
        com.android.server.notification.DowntimeConditionProvider r0;
        long l0, $l3;
        int i1, i2;
        java.util.Calendar $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: com.android.server.notification.DowntimeConditionProvider;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.server.notification.DowntimeConditionProvider: java.util.Calendar mCalendar>;

        virtualinvoke $r1.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        $r2 = r0.<com.android.server.notification.DowntimeConditionProvider: java.util.Calendar mCalendar>;

        virtualinvoke $r2.<java.util.Calendar: void set(int,int)>(11, i1);

        $r3 = r0.<com.android.server.notification.DowntimeConditionProvider: java.util.Calendar mCalendar>;

        virtualinvoke $r3.<java.util.Calendar: void set(int,int)>(12, i2);

        $r4 = r0.<com.android.server.notification.DowntimeConditionProvider: java.util.Calendar mCalendar>;

        virtualinvoke $r4.<java.util.Calendar: void set(int,int)>(13, 0);

        $r5 = r0.<com.android.server.notification.DowntimeConditionProvider: java.util.Calendar mCalendar>;

        virtualinvoke $r5.<java.util.Calendar: void set(int,int)>(14, 0);

        $r6 = r0.<com.android.server.notification.DowntimeConditionProvider: java.util.Calendar mCalendar>;

        $l3 = virtualinvoke $r6.<java.util.Calendar: long getTimeInMillis()>();

        return $l3;
    }

    private long addDays(long, int)
    {
        com.android.server.notification.DowntimeConditionProvider r0;
        long l0, $l2;
        int i1;
        java.util.Calendar $r1, $r2, $r3;

        r0 := @this: com.android.server.notification.DowntimeConditionProvider;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.notification.DowntimeConditionProvider: java.util.Calendar mCalendar>;

        virtualinvoke $r1.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        $r2 = r0.<com.android.server.notification.DowntimeConditionProvider: java.util.Calendar mCalendar>;

        virtualinvoke $r2.<java.util.Calendar: void add(int,int)>(5, i1);

        $r3 = r0.<com.android.server.notification.DowntimeConditionProvider: java.util.Calendar mCalendar>;

        $l2 = virtualinvoke $r3.<java.util.Calendar: long getTimeInMillis()>();

        return $l2;
    }

    private void updateAlarm(java.lang.String, int, int, int)
    {
        com.android.server.notification.DowntimeConditionProvider r0;
        java.lang.String r1, $r15, $r18, $r19, $r20;
        int i0, i1, i2;
        android.app.AlarmManager r2;
        long l3, l4, $l6;
        android.app.PendingIntent r3;
        android.content.Context $r4, $r12;
        java.lang.Object $r5;
        java.util.Calendar $r6, $r7, $r8, $r9, $r10, $r11;
        byte $b5;
        android.content.Intent $r13, $r14;
        android.service.notification.ZenModeConfig $r16;
        java.lang.Object[] $r17;
        boolean $z0;
        java.lang.Long $r21;

        r0 := @this: com.android.server.notification.DowntimeConditionProvider;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r4 = r0.<com.android.server.notification.DowntimeConditionProvider: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        r2 = (android.app.AlarmManager) $r5;

        l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r6 = r0.<com.android.server.notification.DowntimeConditionProvider: java.util.Calendar mCalendar>;

        virtualinvoke $r6.<java.util.Calendar: void setTimeInMillis(long)>(l3);

        $r7 = r0.<com.android.server.notification.DowntimeConditionProvider: java.util.Calendar mCalendar>;

        virtualinvoke $r7.<java.util.Calendar: void set(int,int)>(11, i1);

        $r9 = r0.<com.android.server.notification.DowntimeConditionProvider: java.util.Calendar mCalendar>;

        virtualinvoke $r9.<java.util.Calendar: void set(int,int)>(12, i2);

        $r8 = r0.<com.android.server.notification.DowntimeConditionProvider: java.util.Calendar mCalendar>;

        virtualinvoke $r8.<java.util.Calendar: void set(int,int)>(13, 0);

        $r11 = r0.<com.android.server.notification.DowntimeConditionProvider: java.util.Calendar mCalendar>;

        virtualinvoke $r11.<java.util.Calendar: void set(int,int)>(14, 0);

        $r10 = r0.<com.android.server.notification.DowntimeConditionProvider: java.util.Calendar mCalendar>;

        l4 = virtualinvoke $r10.<java.util.Calendar: long getTimeInMillis()>();

        $b5 = l4 cmp l3;

        if $b5 > 0 goto label1;

        l4 = specialinvoke r0.<com.android.server.notification.DowntimeConditionProvider: long addDays(long,int)>(l4, 1);

     label1:
        $r12 = r0.<com.android.server.notification.DowntimeConditionProvider: android.content.Context mContext>;

        $r13 = new android.content.Intent;

        specialinvoke $r13.<android.content.Intent: void <init>(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("time", l4);

        r3 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r12, i0, $r14, 134217728);

        virtualinvoke r2.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>(r3);

        $r16 = r0.<com.android.server.notification.DowntimeConditionProvider: android.service.notification.ZenModeConfig mConfig>;

        $r15 = $r16.<android.service.notification.ZenModeConfig: java.lang.String sleepMode>;

        if $r15 == null goto label3;

        $z0 = <com.android.server.notification.DowntimeConditionProvider: boolean DEBUG>;

        if $z0 == 0 goto label2;

        $r17 = newarray (java.lang.Object)[4];

        $r17[0] = r1;

        $r18 = staticinvoke <com.android.server.notification.DowntimeConditionProvider: java.lang.String ts(long)>(l4);

        $r17[1] = $r18;

        $l6 = l4 - l3;

        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        $r17[2] = $r21;

        $r19 = staticinvoke <com.android.server.notification.DowntimeConditionProvider: java.lang.String ts(long)>(l3);

        $r17[3] = $r19;

        $r20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Scheduling %s for %s, %s in the future, now=%s", $r17);

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DowntimeConditions", $r20);

     label2:
        virtualinvoke r2.<android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>(0, l4, r3);

     label3:
        return;
    }

    private static java.lang.String ts(long)
    {
        long l0;
        java.lang.StringBuilder $r0, $r2, $r3, $r4, $r5;
        java.util.Date $r1;
        java.lang.String $r6;

        l0 := @parameter0: long;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>(long)>(l0);

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    static boolean access$000()
    {
        boolean $z0;

        $z0 = <com.android.server.notification.DowntimeConditionProvider: boolean DEBUG>;

        return $z0;
    }

    static java.lang.String access$100(long)
    {
        long l0;
        java.lang.String $r0;

        l0 := @parameter0: long;

        $r0 = staticinvoke <com.android.server.notification.DowntimeConditionProvider: java.lang.String ts(long)>(l0);

        return $r0;
    }

    static java.util.Calendar access$200(com.android.server.notification.DowntimeConditionProvider)
    {
        com.android.server.notification.DowntimeConditionProvider r0;
        java.util.Calendar $r1;

        r0 := @parameter0: com.android.server.notification.DowntimeConditionProvider;

        $r1 = r0.<com.android.server.notification.DowntimeConditionProvider: java.util.Calendar mCalendar>;

        return $r1;
    }

    static void access$300(com.android.server.notification.DowntimeConditionProvider)
    {
        com.android.server.notification.DowntimeConditionProvider r0;

        r0 := @parameter0: com.android.server.notification.DowntimeConditionProvider;

        specialinvoke r0.<com.android.server.notification.DowntimeConditionProvider: void reevaluateDowntime()>();

        return;
    }

    static void access$400(com.android.server.notification.DowntimeConditionProvider)
    {
        com.android.server.notification.DowntimeConditionProvider r0;

        r0 := @parameter0: com.android.server.notification.DowntimeConditionProvider;

        specialinvoke r0.<com.android.server.notification.DowntimeConditionProvider: void updateAlarms()>();

        return;
    }

    static void <clinit>()
    {
        boolean $z0;
        android.content.ComponentName $r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        <com.android.server.notification.DowntimeConditionProvider: java.lang.String EXTRA_TIME> = "time";

        <com.android.server.notification.DowntimeConditionProvider: int EXIT_CODE> = 101;

        <com.android.server.notification.DowntimeConditionProvider: java.lang.String EXIT_ACTION> = "DowntimeConditions.exit";

        <com.android.server.notification.DowntimeConditionProvider: int ENTER_CODE> = 100;

        <com.android.server.notification.DowntimeConditionProvider: java.lang.String ENTER_ACTION> = "DowntimeConditions.enter";

        <com.android.server.notification.DowntimeConditionProvider: java.lang.String TAG> = "DowntimeConditions";

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("DowntimeConditions", 3);

        <com.android.server.notification.DowntimeConditionProvider: boolean DEBUG> = $z0;

        $r0 = new android.content.ComponentName;

        $r1 = class "com/android/server/notification/DowntimeConditionProvider";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r0.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("android", $r2);

        <com.android.server.notification.DowntimeConditionProvider: android.content.ComponentName COMPONENT> = $r0;

        return;
    }
}
