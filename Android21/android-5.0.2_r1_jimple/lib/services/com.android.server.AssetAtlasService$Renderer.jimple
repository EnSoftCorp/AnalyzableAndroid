class com.android.server.AssetAtlasService$Renderer extends java.lang.Object implements java.lang.Runnable
{
    private final java.util.ArrayList mBitmaps;
    private final int mPixelCount;
    private long mNativeBitmap;
    private android.graphics.Bitmap mAtlasBitmap;
    final com.android.server.AssetAtlasService this$0;

    void <init>(com.android.server.AssetAtlasService, java.util.ArrayList, int)
    {
        com.android.server.AssetAtlasService$Renderer r0;
        com.android.server.AssetAtlasService r1;
        java.util.ArrayList r2;
        int i0;

        r0 := @this: com.android.server.AssetAtlasService$Renderer;

        r1 := @parameter0: com.android.server.AssetAtlasService;

        r2 := @parameter1: java.util.ArrayList;

        i0 := @parameter2: int;

        r0.<com.android.server.AssetAtlasService$Renderer: com.android.server.AssetAtlasService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.AssetAtlasService$Renderer: java.util.ArrayList mBitmaps> = r2;

        r0.<com.android.server.AssetAtlasService$Renderer: int mPixelCount> = i0;

        return;
    }

    public void run()
    {
        com.android.server.AssetAtlasService$Renderer r0;
        com.android.server.AssetAtlasService$Configuration r1;
        android.graphics.Atlas r2, $r16;
        com.android.server.AssetAtlasService $r3, $r4, $r11, $r15, $r17, $r20;
        java.util.ArrayList $r5;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r6, $r10;
        java.lang.StringBuilder $r7, $r8, $r9;
        android.view.GraphicBuffer $r13, $r14, $r19;
        android.graphics.Atlas$Type $r18;
        boolean $z0;
        java.util.concurrent.atomic.AtomicBoolean $r21;

        r0 := @this: com.android.server.AssetAtlasService$Renderer;

        $r4 = r0.<com.android.server.AssetAtlasService$Renderer: com.android.server.AssetAtlasService this$0>;

        $r5 = r0.<com.android.server.AssetAtlasService$Renderer: java.util.ArrayList mBitmaps>;

        $i0 = r0.<com.android.server.AssetAtlasService$Renderer: int mPixelCount>;

        $r3 = r0.<com.android.server.AssetAtlasService$Renderer: com.android.server.AssetAtlasService this$0>;

        $r6 = staticinvoke <com.android.server.AssetAtlasService: java.lang.String access$000(com.android.server.AssetAtlasService)>($r3);

        r1 = staticinvoke <com.android.server.AssetAtlasService: com.android.server.AssetAtlasService$Configuration access$100(com.android.server.AssetAtlasService,java.util.ArrayList,int,java.lang.String)>($r4, $r5, $i0, $r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loaded configuration: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Atlas", $r10);

        if r1 == null goto label1;

        $r11 = r0.<com.android.server.AssetAtlasService$Renderer: com.android.server.AssetAtlasService this$0>;

        $i3 = r1.<com.android.server.AssetAtlasService$Configuration: int width>;

        $i2 = r1.<com.android.server.AssetAtlasService$Configuration: int height>;

        $r13 = staticinvoke <android.view.GraphicBuffer: android.view.GraphicBuffer create(int,int,int,int)>($i3, $i2, 1, 256);

        staticinvoke <com.android.server.AssetAtlasService: android.view.GraphicBuffer access$202(com.android.server.AssetAtlasService,android.view.GraphicBuffer)>($r11, $r13);

        $r15 = r0.<com.android.server.AssetAtlasService$Renderer: com.android.server.AssetAtlasService this$0>;

        $r14 = staticinvoke <com.android.server.AssetAtlasService: android.view.GraphicBuffer access$200(com.android.server.AssetAtlasService)>($r15);

        if $r14 == null goto label1;

        $r16 = new android.graphics.Atlas;

        $r18 = r1.<com.android.server.AssetAtlasService$Configuration: android.graphics.Atlas$Type type>;

        $i5 = r1.<com.android.server.AssetAtlasService$Configuration: int width>;

        $i6 = r1.<com.android.server.AssetAtlasService$Configuration: int height>;

        $i4 = r1.<com.android.server.AssetAtlasService$Configuration: int flags>;

        specialinvoke $r16.<android.graphics.Atlas: void <init>(android.graphics.Atlas$Type,int,int,int)>($r18, $i5, $i6, $i4);

        r2 = $r16;

        $r17 = r0.<com.android.server.AssetAtlasService$Renderer: com.android.server.AssetAtlasService this$0>;

        $r19 = staticinvoke <com.android.server.AssetAtlasService: android.view.GraphicBuffer access$200(com.android.server.AssetAtlasService)>($r17);

        $i7 = r1.<com.android.server.AssetAtlasService$Configuration: int count>;

        $z0 = specialinvoke r0.<com.android.server.AssetAtlasService$Renderer: boolean renderAtlas(android.view.GraphicBuffer,android.graphics.Atlas,int)>($r19, r2, $i7);

        if $z0 == 0 goto label1;

        $r20 = r0.<com.android.server.AssetAtlasService$Renderer: com.android.server.AssetAtlasService this$0>;

        $r21 = staticinvoke <com.android.server.AssetAtlasService: java.util.concurrent.atomic.AtomicBoolean access$300(com.android.server.AssetAtlasService)>($r20);

        virtualinvoke $r21.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

     label1:
        return;
    }

    private boolean renderAtlas(android.view.GraphicBuffer, android.graphics.Atlas, int)
    {
        com.android.server.AssetAtlasService$Renderer r0;
        android.view.GraphicBuffer r1;
        android.graphics.Atlas r2;
        int i0, i1, i3, i4, $i6, $i7, $i8, $i15, $i16, $i18, $i19, $i20, $i22, $i25, $i26, i29, i30, i31;
        android.graphics.Paint r3, $r10;
        android.graphics.Canvas r4;
        android.graphics.Atlas$Entry r5, $r13, $r26;
        long[] r6, $r14, $r28;
        boolean z0, $z1, $z2;
        long l2, l5, $l9, $l11, $l12, $l13, $l21, $l23, $l24, $l28, l32;
        android.graphics.Bitmap r7;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        java.lang.Throwable r8, $r29;
        android.graphics.PorterDuffXfermode $r9;
        android.graphics.PorterDuff$Mode $r12;
        com.android.server.AssetAtlasService $r16, $r18, $r27;
        java.util.ArrayList $r17, $r25;
        byte $b10;
        java.lang.Object[] $r19;
        java.lang.Float $r20, $r21, $r23;
        java.lang.String $r22;
        java.lang.Object $r24;

        r0 := @this: com.android.server.AssetAtlasService$Renderer;

        r1 := @parameter0: android.view.GraphicBuffer;

        r2 := @parameter1: android.graphics.Atlas;

        i0 := @parameter2: int;

        $r10 = new android.graphics.Paint;

        specialinvoke $r10.<android.graphics.Paint: void <init>()>();

        r3 = $r10;

        $r9 = new android.graphics.PorterDuffXfermode;

        $r12 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC>;

        specialinvoke $r9.<android.graphics.PorterDuffXfermode: void <init>(android.graphics.PorterDuff$Mode)>($r12);

        virtualinvoke r3.<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>($r9);

        $i7 = virtualinvoke r1.<android.view.GraphicBuffer: int getWidth()>();

        $i6 = virtualinvoke r1.<android.view.GraphicBuffer: int getHeight()>();

        r4 = specialinvoke r0.<com.android.server.AssetAtlasService$Renderer: android.graphics.Canvas acquireCanvas(int,int)>($i7, $i6);

        if r4 != null goto label01;

        return 0;

     label01:
        $r13 = new android.graphics.Atlas$Entry;

        specialinvoke $r13.<android.graphics.Atlas$Entry: void <init>()>();

        r5 = $r13;

        $r16 = r0.<com.android.server.AssetAtlasService$Renderer: com.android.server.AssetAtlasService this$0>;

        $i8 = i0 * 4;

        $r14 = newarray (long)[$i8];

        staticinvoke <com.android.server.AssetAtlasService: long[] access$402(com.android.server.AssetAtlasService,long[])>($r16, $r14);

        $r18 = r0.<com.android.server.AssetAtlasService$Renderer: com.android.server.AssetAtlasService this$0>;

        r6 = staticinvoke <com.android.server.AssetAtlasService: long[] access$400(com.android.server.AssetAtlasService)>($r18);

        i1 = 0;

        z0 = 0;

     label02:
        l2 = staticinvoke <java.lang.System: long nanoTime()>();

        $r17 = r0.<com.android.server.AssetAtlasService$Renderer: java.util.ArrayList mBitmaps>;

        i3 = virtualinvoke $r17.<java.util.ArrayList: int size()>();

        i4 = 0;

     label03:
        if i4 >= i3 goto label09;

        $r25 = r0.<com.android.server.AssetAtlasService$Renderer: java.util.ArrayList mBitmaps>;

        $r24 = virtualinvoke $r25.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r7 = (android.graphics.Bitmap) $r24;

        $i15 = virtualinvoke r7.<android.graphics.Bitmap: int getWidth()>();

        $i20 = virtualinvoke r7.<android.graphics.Bitmap: int getHeight()>();

        $r26 = virtualinvoke r2.<android.graphics.Atlas: android.graphics.Atlas$Entry pack(int,int,android.graphics.Atlas$Entry)>($i15, $i20, r5);

        if $r26 == null goto label08;

        $r27 = r0.<com.android.server.AssetAtlasService$Renderer: com.android.server.AssetAtlasService this$0>;

        $r28 = staticinvoke <com.android.server.AssetAtlasService: long[] access$400(com.android.server.AssetAtlasService)>($r27);

        $i16 = lengthof $r28;

        if i1 < $i16 goto label04;

        staticinvoke <com.android.server.AssetAtlasService: void access$500()>();

        goto label09;

     label04:
        virtualinvoke r4.<android.graphics.Canvas: int save()>();

        $i18 = r5.<android.graphics.Atlas$Entry: int x>;

        $f8 = (float) $i18;

        $i19 = r5.<android.graphics.Atlas$Entry: int y>;

        $f7 = (float) $i19;

        virtualinvoke r4.<android.graphics.Canvas: void translate(float,float)>($f8, $f7);

        $z1 = r5.<android.graphics.Atlas$Entry: boolean rotated>;

        if $z1 == 0 goto label05;

        $i25 = virtualinvoke r7.<android.graphics.Bitmap: int getHeight()>();

        $f9 = (float) $i25;

        virtualinvoke r4.<android.graphics.Canvas: void translate(float,float)>($f9, 0.0F);

        virtualinvoke r4.<android.graphics.Canvas: void rotate(float)>(90.0F);

     label05:
        virtualinvoke r4.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>(r7, 0.0F, 0.0F, null);

        virtualinvoke r4.<android.graphics.Canvas: void restore()>();

        i29 = i1 + 1;

        $l21 = r7.<android.graphics.Bitmap: long mNativeBitmap>;

        r6[i1] = $l21;

        i30 = i29 + 1;

        $i22 = r5.<android.graphics.Atlas$Entry: int x>;

        $l23 = (long) $i22;

        r6[i29] = $l23;

        i31 = i30 + 1;

        $i26 = r5.<android.graphics.Atlas$Entry: int y>;

        $l28 = (long) $i26;

        r6[i30] = $l28;

        i1 = i31 + 1;

        $z2 = r5.<android.graphics.Atlas$Entry: boolean rotated>;

        if $z2 == 0 goto label06;

        $l24 = 1L;

        goto label07;

     label06:
        $l24 = 0L;

     label07:
        r6[i31] = $l24;

     label08:
        i4 = i4 + 1;

        goto label03;

     label09:
        l32 = staticinvoke <java.lang.System: long nanoTime()>();

        $l9 = r0.<com.android.server.AssetAtlasService$Renderer: long mNativeBitmap>;

        $b10 = $l9 cmp 0L;

        if $b10 == 0 goto label10;

        $l13 = r0.<com.android.server.AssetAtlasService$Renderer: long mNativeBitmap>;

        z0 = staticinvoke <com.android.server.AssetAtlasService: boolean access$600(android.view.GraphicBuffer,long)>(r1, $l13);

     label10:
        l5 = staticinvoke <java.lang.System: long nanoTime()>();

        $l11 = l32 - l2;

        $f2 = (float) $l11;

        $f3 = $f2 / 1000.0F;

        f0 = $f3 / 1000.0F;

        $l12 = l5 - l32;

        $f5 = (float) $l12;

        $f4 = $f5 / 1000.0F;

        f1 = $f4 / 1000.0F;

        $r19 = newarray (java.lang.Object)[3];

        $f6 = f0 + f1;

        $r21 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f6);

        $r19[0] = $r21;

        $r20 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        $r19[1] = $r20;

        $r23 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f1);

        $r19[2] = $r23;

        $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Rendered atlas in %.2fms (%.2f+%.2fms)", $r19);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Atlas", $r22);

     label11:
        specialinvoke r0.<com.android.server.AssetAtlasService$Renderer: void releaseCanvas(android.graphics.Canvas)>(r4);

        goto label14;

     label12:
        $r29 := @caughtexception;

        r8 = $r29;

     label13:
        specialinvoke r0.<com.android.server.AssetAtlasService$Renderer: void releaseCanvas(android.graphics.Canvas)>(r4);

        throw r8;

     label14:
        return z0;

        catch java.lang.Throwable from label02 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private android.graphics.Canvas acquireCanvas(int, int)
    {
        com.android.server.AssetAtlasService$Renderer r0;
        int i0, i1;
        android.graphics.Canvas r1, $r2;
        long $l2;

        r0 := @this: com.android.server.AssetAtlasService$Renderer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = new android.graphics.Canvas;

        specialinvoke $r2.<android.graphics.Canvas: void <init>()>();

        r1 = $r2;

        $l2 = staticinvoke <com.android.server.AssetAtlasService: long access$700(android.graphics.Canvas,int,int)>(r1, i0, i1);

        r0.<com.android.server.AssetAtlasService$Renderer: long mNativeBitmap> = $l2;

        return r1;
    }

    private void releaseCanvas(android.graphics.Canvas)
    {
        com.android.server.AssetAtlasService$Renderer r0;
        android.graphics.Canvas r1;
        long $l0;

        r0 := @this: com.android.server.AssetAtlasService$Renderer;

        r1 := @parameter0: android.graphics.Canvas;

        $l0 = r0.<com.android.server.AssetAtlasService$Renderer: long mNativeBitmap>;

        staticinvoke <com.android.server.AssetAtlasService: void access$800(android.graphics.Canvas,long)>(r1, $l0);

        return;
    }
}
