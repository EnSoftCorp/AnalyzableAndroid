final class com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler extends java.lang.Object
{
    private static final int MESSAGE_ON_ACTION_TAP_AND_HOLD;
    private static final int MESSAGE_TRANSITION_TO_DELEGATING_STATE;
    private static final int ACTION_TAP_COUNT;
    private com.android.server.accessibility.ScreenMagnifier$MotionEventInfo mDelayedEventQueue;
    private android.view.MotionEvent mLastDownEvent;
    private android.view.MotionEvent mLastTapUpEvent;
    private int mTapCount;
    private final android.os.Handler mHandler;
    final com.android.server.accessibility.ScreenMagnifier this$0;

    private void <init>(com.android.server.accessibility.ScreenMagnifier)
    {
        com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler r0;
        com.android.server.accessibility.ScreenMagnifier r1;
        com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler$1 $r2;

        r0 := @this: com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler;

        r1 := @parameter0: com.android.server.accessibility.ScreenMagnifier;

        r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler$1;

        specialinvoke $r2.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler$1: void <init>(com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler)>(r0);

        r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: android.os.Handler mHandler> = $r2;

        return;
    }

    public void onMotionEvent(android.view.MotionEvent, android.view.MotionEvent, int)
    {
        com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler r0;
        android.view.MotionEvent r1, r2, $r8, $r12, $r13, $r19, $r21, $r26, $r27, $r29, $r31, $r33;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        android.os.Message r3, r35;
        android.os.Handler $r4, $r7, $r10, $r15, $r16, $r25;
        com.android.server.accessibility.ScreenMagnifier $r5, $r9, $r11, $r14, $r17, $r18, $r22, $r24, $r28, $r30, $r32, $r34;
        android.graphics.Region $r6, $r23;
        float $f0, $f1, $f2, $f3;
        boolean $z0, $z2, $z4, $z5, $z6, $z7;
        long $l7, $l11;
        com.android.server.accessibility.ScreenMagnifier$MagnificationController $r20;
        double $d0, $d1, d2;
        byte $b13;

        r0 := @this: com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void cacheDelayedMotionEvent(android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, i0);

        i1 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        tableswitch(i1)
        {
            case 0: goto label01;
            case 1: goto label09;
            case 2: goto label07;
            case 3: goto label15;
            case 4: goto label15;
            case 5: goto label05;
            case 6: goto label15;
            default: goto label15;
        };

     label01:
        $r4 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: void removeMessages(int)>(2);

        $r5 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier this$0>;

        $r6 = staticinvoke <com.android.server.accessibility.ScreenMagnifier: android.graphics.Region access$1500(com.android.server.accessibility.ScreenMagnifier)>($r5);

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $i2 = (int) $f0;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $i3 = (int) $f1;

        $z0 = virtualinvoke $r6.<android.graphics.Region: boolean contains(int,int)>($i2, $i3);

        if $z0 != 0 goto label02;

        specialinvoke r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void transitionToDelegatingStateAndClear()>();

        return;

     label02:
        $i5 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: int mTapCount>;

        if $i5 != 2 goto label03;

        $r12 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: android.view.MotionEvent mLastDownEvent>;

        if $r12 == null goto label03;

        $r13 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: android.view.MotionEvent mLastDownEvent>;

        $r11 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier this$0>;

        $i8 = staticinvoke <com.android.server.accessibility.ScreenMagnifier: int access$1900(com.android.server.accessibility.ScreenMagnifier)>($r11);

        $r14 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier this$0>;

        $i9 = staticinvoke <com.android.server.accessibility.ScreenMagnifier: int access$2000(com.android.server.accessibility.ScreenMagnifier)>($r14);

        $z2 = staticinvoke <com.android.server.accessibility.GestureUtils: boolean isMultiTap(android.view.MotionEvent,android.view.MotionEvent,int,int,int)>($r13, r1, $i8, $i9, 0);

        if $z2 == 0 goto label03;

        $r16 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: android.os.Handler mHandler>;

        r3 = virtualinvoke $r16.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(1, i0, 0, r1);

        $r15 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: android.os.Handler mHandler>;

        $i10 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        $l11 = (long) $i10;

        virtualinvoke $r15.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r3, $l11);

        goto label04;

     label03:
        $i4 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: int mTapCount>;

        if $i4 >= 3 goto label04;

        $r7 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: android.os.Handler mHandler>;

        r35 = virtualinvoke $r7.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        $r10 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: android.os.Handler mHandler>;

        $r9 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier this$0>;

        $i6 = staticinvoke <com.android.server.accessibility.ScreenMagnifier: int access$1900(com.android.server.accessibility.ScreenMagnifier)>($r9);

        $l7 = (long) $i6;

        virtualinvoke $r10.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r35, $l7);

     label04:
        specialinvoke r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void clearLastDownEvent()>();

        $r8 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r1);

        r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: android.view.MotionEvent mLastDownEvent> = $r8;

        goto label15;

     label05:
        $r17 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier this$0>;

        $r20 = staticinvoke <com.android.server.accessibility.ScreenMagnifier: com.android.server.accessibility.ScreenMagnifier$MagnificationController access$1000(com.android.server.accessibility.ScreenMagnifier)>($r17);

        $z4 = virtualinvoke $r20.<com.android.server.accessibility.ScreenMagnifier$MagnificationController: boolean isMagnifying()>();

        if $z4 == 0 goto label06;

        $r18 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier this$0>;

        staticinvoke <com.android.server.accessibility.ScreenMagnifier: void access$1400(com.android.server.accessibility.ScreenMagnifier,int)>($r18, 4);

        virtualinvoke r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void clear()>();

        goto label15;

     label06:
        specialinvoke r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void transitionToDelegatingStateAndClear()>();

        goto label15;

     label07:
        $r19 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: android.view.MotionEvent mLastDownEvent>;

        if $r19 == null goto label15;

        $i12 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: int mTapCount>;

        if $i12 >= 2 goto label15;

        $r21 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: android.view.MotionEvent mLastDownEvent>;

        d2 = staticinvoke <com.android.server.accessibility.GestureUtils: double computeDistance(android.view.MotionEvent,android.view.MotionEvent,int)>($r21, r1, 0);

        $d0 = staticinvoke <java.lang.Math: double abs(double)>(d2);

        $r22 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier this$0>;

        $i14 = staticinvoke <com.android.server.accessibility.ScreenMagnifier: int access$2100(com.android.server.accessibility.ScreenMagnifier)>($r22);

        $d1 = (double) $i14;

        $b13 = $d0 cmpl $d1;

        if $b13 <= 0 goto label08;

        specialinvoke r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void transitionToDelegatingStateAndClear()>();

     label08:
        goto label15;

     label09:
        $r26 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: android.view.MotionEvent mLastDownEvent>;

        if $r26 != null goto label10;

        return;

     label10:
        $r25 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: android.os.Handler mHandler>;

        virtualinvoke $r25.<android.os.Handler: void removeMessages(int)>(1);

        $r24 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier this$0>;

        $r23 = staticinvoke <com.android.server.accessibility.ScreenMagnifier: android.graphics.Region access$1500(com.android.server.accessibility.ScreenMagnifier)>($r24);

        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $i16 = (int) $f3;

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $i15 = (int) $f2;

        $z5 = virtualinvoke $r23.<android.graphics.Region: boolean contains(int,int)>($i16, $i15);

        if $z5 != 0 goto label11;

        specialinvoke r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void transitionToDelegatingStateAndClear()>();

        return;

     label11:
        $r27 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: android.view.MotionEvent mLastDownEvent>;

        $r28 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier this$0>;

        $i17 = staticinvoke <com.android.server.accessibility.ScreenMagnifier: int access$2200(com.android.server.accessibility.ScreenMagnifier)>($r28);

        $r30 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier this$0>;

        $i21 = staticinvoke <com.android.server.accessibility.ScreenMagnifier: int access$2100(com.android.server.accessibility.ScreenMagnifier)>($r30);

        $z6 = staticinvoke <com.android.server.accessibility.GestureUtils: boolean isTap(android.view.MotionEvent,android.view.MotionEvent,int,int,int)>($r27, r1, $i17, $i21, 0);

        if $z6 != 0 goto label12;

        specialinvoke r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void transitionToDelegatingStateAndClear()>();

        return;

     label12:
        $r31 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: android.view.MotionEvent mLastTapUpEvent>;

        if $r31 == null goto label13;

        $r33 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: android.view.MotionEvent mLastTapUpEvent>;

        $r32 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier this$0>;

        $i23 = staticinvoke <com.android.server.accessibility.ScreenMagnifier: int access$1900(com.android.server.accessibility.ScreenMagnifier)>($r32);

        $r34 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier this$0>;

        $i22 = staticinvoke <com.android.server.accessibility.ScreenMagnifier: int access$2000(com.android.server.accessibility.ScreenMagnifier)>($r34);

        $z7 = staticinvoke <com.android.server.accessibility.GestureUtils: boolean isMultiTap(android.view.MotionEvent,android.view.MotionEvent,int,int,int)>($r33, r1, $i23, $i22, 0);

        if $z7 != 0 goto label13;

        specialinvoke r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void transitionToDelegatingStateAndClear()>();

        return;

     label13:
        $i18 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: int mTapCount>;

        $i19 = $i18 + 1;

        r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: int mTapCount> = $i19;

        $i20 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: int mTapCount>;

        if $i20 != 3 goto label14;

        virtualinvoke r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void clear()>();

        specialinvoke r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void onActionTap(android.view.MotionEvent,int)>(r1, i0);

        return;

     label14:
        specialinvoke r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void clearLastTapUpEvent()>();

        $r29 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r1);

        r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: android.view.MotionEvent mLastTapUpEvent> = $r29;

        goto label15;

     label15:
        return;
    }

    public void clear()
    {
        com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler r0;
        android.os.Handler $r1, $r2;

        r0 := @this: com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler;

        $r1 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(1);

        $r2 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(2);

        specialinvoke r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void clearTapDetectionState()>();

        specialinvoke r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void clearDelayedMotionEvents()>();

        return;
    }

    private void clearTapDetectionState()
    {
        com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler r0;

        r0 := @this: com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler;

        r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: int mTapCount> = 0;

        specialinvoke r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void clearLastTapUpEvent()>();

        specialinvoke r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void clearLastDownEvent()>();

        return;
    }

    private void clearLastTapUpEvent()
    {
        com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler r0;
        android.view.MotionEvent $r1, $r2;

        r0 := @this: com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler;

        $r1 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: android.view.MotionEvent mLastTapUpEvent>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: android.view.MotionEvent mLastTapUpEvent>;

        virtualinvoke $r2.<android.view.MotionEvent: void recycle()>();

        r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: android.view.MotionEvent mLastTapUpEvent> = null;

     label1:
        return;
    }

    private void clearLastDownEvent()
    {
        com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler r0;
        android.view.MotionEvent $r1, $r2;

        r0 := @this: com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler;

        $r1 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: android.view.MotionEvent mLastDownEvent>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: android.view.MotionEvent mLastDownEvent>;

        virtualinvoke $r2.<android.view.MotionEvent: void recycle()>();

        r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: android.view.MotionEvent mLastDownEvent> = null;

     label1:
        return;
    }

    private void cacheDelayedMotionEvent(android.view.MotionEvent, android.view.MotionEvent, int)
    {
        com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler r0;
        android.view.MotionEvent r1, r2;
        int i0;
        com.android.server.accessibility.ScreenMagnifier$MotionEventInfo r3, r4, $r5, $r6;

        r0 := @this: com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        r3 = staticinvoke <com.android.server.accessibility.ScreenMagnifier$MotionEventInfo: com.android.server.accessibility.ScreenMagnifier$MotionEventInfo obtain(android.view.MotionEvent,android.view.MotionEvent,int)>(r1, r2, i0);

        $r5 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier$MotionEventInfo mDelayedEventQueue>;

        if $r5 != null goto label1;

        r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier$MotionEventInfo mDelayedEventQueue> = r3;

        goto label4;

     label1:
        r4 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier$MotionEventInfo mDelayedEventQueue>;

     label2:
        $r6 = staticinvoke <com.android.server.accessibility.ScreenMagnifier$MotionEventInfo: com.android.server.accessibility.ScreenMagnifier$MotionEventInfo access$2300(com.android.server.accessibility.ScreenMagnifier$MotionEventInfo)>(r4);

        if $r6 == null goto label3;

        r4 = staticinvoke <com.android.server.accessibility.ScreenMagnifier$MotionEventInfo: com.android.server.accessibility.ScreenMagnifier$MotionEventInfo access$2300(com.android.server.accessibility.ScreenMagnifier$MotionEventInfo)>(r4);

        goto label2;

     label3:
        staticinvoke <com.android.server.accessibility.ScreenMagnifier$MotionEventInfo: com.android.server.accessibility.ScreenMagnifier$MotionEventInfo access$2302(com.android.server.accessibility.ScreenMagnifier$MotionEventInfo,com.android.server.accessibility.ScreenMagnifier$MotionEventInfo)>(r4, r3);

     label4:
        return;
    }

    private void sendDelayedMotionEvents()
    {
        com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler r0;
        com.android.server.accessibility.ScreenMagnifier$MotionEventInfo r1, $r4, $r5;
        long l0, $l1, $l2;
        android.view.MotionEvent r2, r3, $r6, $r7;
        int $i3;
        com.android.server.accessibility.ScreenMagnifier $r8;

        r0 := @this: com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler;

     label1:
        $r4 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier$MotionEventInfo mDelayedEventQueue>;

        if $r4 == null goto label2;

        r1 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier$MotionEventInfo mDelayedEventQueue>;

        $r5 = staticinvoke <com.android.server.accessibility.ScreenMagnifier$MotionEventInfo: com.android.server.accessibility.ScreenMagnifier$MotionEventInfo access$2300(com.android.server.accessibility.ScreenMagnifier$MotionEventInfo)>(r1);

        r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier$MotionEventInfo mDelayedEventQueue> = $r5;

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = r1.<com.android.server.accessibility.ScreenMagnifier$MotionEventInfo: long mCachedTimeMillis>;

        l0 = $l1 - $l2;

        $r6 = r1.<com.android.server.accessibility.ScreenMagnifier$MotionEventInfo: android.view.MotionEvent mEvent>;

        r2 = specialinvoke r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: android.view.MotionEvent obtainEventWithOffsetTimeAndDownTime(android.view.MotionEvent,long)>($r6, l0);

        $r7 = r1.<com.android.server.accessibility.ScreenMagnifier$MotionEventInfo: android.view.MotionEvent mRawEvent>;

        r3 = specialinvoke r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: android.view.MotionEvent obtainEventWithOffsetTimeAndDownTime(android.view.MotionEvent,long)>($r7, l0);

        $r8 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier this$0>;

        $i3 = r1.<com.android.server.accessibility.ScreenMagnifier$MotionEventInfo: int mPolicyFlags>;

        virtualinvoke $r8.<com.android.server.accessibility.ScreenMagnifier: void onMotionEvent(android.view.MotionEvent,android.view.MotionEvent,int)>(r2, r3, $i3);

        virtualinvoke r2.<android.view.MotionEvent: void recycle()>();

        virtualinvoke r3.<android.view.MotionEvent: void recycle()>();

        virtualinvoke r1.<com.android.server.accessibility.ScreenMagnifier$MotionEventInfo: void recycle()>();

        goto label1;

     label2:
        return;
    }

    private android.view.MotionEvent obtainEventWithOffsetTimeAndDownTime(android.view.MotionEvent, long)
    {
        com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler r0;
        android.view.MotionEvent r1, $r6;
        long l0, l3, $l4, $l5, l13;
        int i1, i2, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.view.MotionEvent$PointerCoords[] r2;
        android.view.MotionEvent$PointerProperties[] r3;
        com.android.server.accessibility.ScreenMagnifier $r4, $r5;
        android.view.MotionEvent$PointerProperties $r7;
        android.view.MotionEvent$PointerCoords $r8;

        r0 := @this: com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler;

        r1 := @parameter0: android.view.MotionEvent;

        l0 := @parameter1: long;

        i1 = virtualinvoke r1.<android.view.MotionEvent: int getPointerCount()>();

        $r4 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier this$0>;

        r2 = staticinvoke <com.android.server.accessibility.ScreenMagnifier: android.view.MotionEvent$PointerCoords[] access$2400(com.android.server.accessibility.ScreenMagnifier,int)>($r4, i1);

        $r5 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier this$0>;

        r3 = staticinvoke <com.android.server.accessibility.ScreenMagnifier: android.view.MotionEvent$PointerProperties[] access$2500(com.android.server.accessibility.ScreenMagnifier,int)>($r5, i1);

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r8 = r2[i2];

        virtualinvoke r1.<android.view.MotionEvent: void getPointerCoords(int,android.view.MotionEvent$PointerCoords)>(i2, $r8);

        $r7 = r3[i2];

        virtualinvoke r1.<android.view.MotionEvent: void getPointerProperties(int,android.view.MotionEvent$PointerProperties)>(i2, $r7);

        i2 = i2 + 1;

        goto label1;

     label2:
        $l5 = virtualinvoke r1.<android.view.MotionEvent: long getDownTime()>();

        l13 = $l5 + l0;

        $l4 = virtualinvoke r1.<android.view.MotionEvent: long getEventTime()>();

        l3 = $l4 + l0;

        $i7 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        $i6 = virtualinvoke r1.<android.view.MotionEvent: int getMetaState()>();

        $i8 = virtualinvoke r1.<android.view.MotionEvent: int getButtonState()>();

        $i9 = virtualinvoke r1.<android.view.MotionEvent: int getDeviceId()>();

        $i11 = virtualinvoke r1.<android.view.MotionEvent: int getEdgeFlags()>();

        $i10 = virtualinvoke r1.<android.view.MotionEvent: int getSource()>();

        $i12 = virtualinvoke r1.<android.view.MotionEvent: int getFlags()>();

        $r6 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int)>(l13, l3, $i7, i1, r3, r2, $i6, $i8, 1.0F, 1.0F, $i9, $i11, $i10, $i12);

        return $r6;
    }

    private void clearDelayedMotionEvents()
    {
        com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler r0;
        com.android.server.accessibility.ScreenMagnifier$MotionEventInfo r1, $r2, $r3;

        r0 := @this: com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler;

     label1:
        $r2 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier$MotionEventInfo mDelayedEventQueue>;

        if $r2 == null goto label2;

        r1 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier$MotionEventInfo mDelayedEventQueue>;

        $r3 = staticinvoke <com.android.server.accessibility.ScreenMagnifier$MotionEventInfo: com.android.server.accessibility.ScreenMagnifier$MotionEventInfo access$2300(com.android.server.accessibility.ScreenMagnifier$MotionEventInfo)>(r1);

        r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier$MotionEventInfo mDelayedEventQueue> = $r3;

        virtualinvoke r1.<com.android.server.accessibility.ScreenMagnifier$MotionEventInfo: void recycle()>();

        goto label1;

     label2:
        return;
    }

    private void transitionToDelegatingStateAndClear()
    {
        com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler r0;
        com.android.server.accessibility.ScreenMagnifier $r1;

        r0 := @this: com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler;

        $r1 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier this$0>;

        staticinvoke <com.android.server.accessibility.ScreenMagnifier: void access$1400(com.android.server.accessibility.ScreenMagnifier,int)>($r1, 1);

        specialinvoke r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void sendDelayedMotionEvents()>();

        virtualinvoke r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void clear()>();

        return;
    }

    private void onActionTap(android.view.MotionEvent, int)
    {
        com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler r0;
        android.view.MotionEvent r1;
        int i0;
        com.android.server.accessibility.ScreenMagnifier $r2, $r4, $r6, $r8;
        com.android.server.accessibility.ScreenMagnifier$MagnificationController $r3, $r5, $r7;
        boolean $z0;
        float $f0, $f1, $f2;

        r0 := @this: com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler;

        r1 := @parameter0: android.view.MotionEvent;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier this$0>;

        $r3 = staticinvoke <com.android.server.accessibility.ScreenMagnifier: com.android.server.accessibility.ScreenMagnifier$MagnificationController access$1000(com.android.server.accessibility.ScreenMagnifier)>($r2);

        $z0 = virtualinvoke $r3.<com.android.server.accessibility.ScreenMagnifier$MagnificationController: boolean isMagnifying()>();

        if $z0 != 0 goto label1;

        $r6 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier this$0>;

        $r7 = staticinvoke <com.android.server.accessibility.ScreenMagnifier: com.android.server.accessibility.ScreenMagnifier$MagnificationController access$1000(com.android.server.accessibility.ScreenMagnifier)>($r6);

        $r8 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier this$0>;

        $f0 = staticinvoke <com.android.server.accessibility.ScreenMagnifier: float access$1100(com.android.server.accessibility.ScreenMagnifier)>($r8);

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        virtualinvoke $r7.<com.android.server.accessibility.ScreenMagnifier$MagnificationController: void setScaleAndMagnifiedRegionCenter(float,float,float,boolean)>($f0, $f1, $f2, 1);

        goto label2;

     label1:
        $r4 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier this$0>;

        $r5 = staticinvoke <com.android.server.accessibility.ScreenMagnifier: com.android.server.accessibility.ScreenMagnifier$MagnificationController access$1000(com.android.server.accessibility.ScreenMagnifier)>($r4);

        virtualinvoke $r5.<com.android.server.accessibility.ScreenMagnifier$MagnificationController: void reset(boolean)>(1);

     label2:
        return;
    }

    private void onActionTapAndHold(android.view.MotionEvent, int)
    {
        com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler r0;
        android.view.MotionEvent r1;
        int i0;
        com.android.server.accessibility.ScreenMagnifier $r2, $r3, $r5, $r7, $r8;
        com.android.server.accessibility.ScreenMagnifier$MagnificationController $r4, $r6;
        boolean $z0;
        float $f0, $f1, $f2;

        r0 := @this: com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler;

        r1 := @parameter0: android.view.MotionEvent;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void clear()>();

        $r3 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier this$0>;

        $r2 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier this$0>;

        $r4 = staticinvoke <com.android.server.accessibility.ScreenMagnifier: com.android.server.accessibility.ScreenMagnifier$MagnificationController access$1000(com.android.server.accessibility.ScreenMagnifier)>($r2);

        $z0 = virtualinvoke $r4.<com.android.server.accessibility.ScreenMagnifier$MagnificationController: boolean isMagnifying()>();

        staticinvoke <com.android.server.accessibility.ScreenMagnifier: boolean access$1602(com.android.server.accessibility.ScreenMagnifier,boolean)>($r3, $z0);

        $r5 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier this$0>;

        $r6 = staticinvoke <com.android.server.accessibility.ScreenMagnifier: com.android.server.accessibility.ScreenMagnifier$MagnificationController access$1000(com.android.server.accessibility.ScreenMagnifier)>($r5);

        $r7 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier this$0>;

        $f0 = staticinvoke <com.android.server.accessibility.ScreenMagnifier: float access$1100(com.android.server.accessibility.ScreenMagnifier)>($r7);

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        virtualinvoke $r6.<com.android.server.accessibility.ScreenMagnifier$MagnificationController: void setScaleAndMagnifiedRegionCenter(float,float,float,boolean)>($f0, $f1, $f2, 1);

        $r8 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier this$0>;

        staticinvoke <com.android.server.accessibility.ScreenMagnifier: void access$1400(com.android.server.accessibility.ScreenMagnifier,int)>($r8, 3);

        return;
    }

    void <init>(com.android.server.accessibility.ScreenMagnifier, com.android.server.accessibility.ScreenMagnifier$1)
    {
        com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler r0;
        com.android.server.accessibility.ScreenMagnifier r1;
        com.android.server.accessibility.ScreenMagnifier$1 r2;

        r0 := @this: com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler;

        r1 := @parameter0: com.android.server.accessibility.ScreenMagnifier;

        r2 := @parameter1: com.android.server.accessibility.ScreenMagnifier$1;

        specialinvoke r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void <init>(com.android.server.accessibility.ScreenMagnifier)>(r1);

        return;
    }

    static com.android.server.accessibility.ScreenMagnifier$MotionEventInfo access$800(com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler)
    {
        com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler r0;
        com.android.server.accessibility.ScreenMagnifier$MotionEventInfo $r1;

        r0 := @parameter0: com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler;

        $r1 = r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: com.android.server.accessibility.ScreenMagnifier$MotionEventInfo mDelayedEventQueue>;

        return $r1;
    }

    static void access$1700(com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler, android.view.MotionEvent, int)
    {
        com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler r0;
        android.view.MotionEvent r1;
        int i0;

        r0 := @parameter0: com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler;

        r1 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void onActionTapAndHold(android.view.MotionEvent,int)>(r1, i0);

        return;
    }

    static void access$1800(com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler)
    {
        com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler r0;

        r0 := @parameter0: com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler;

        specialinvoke r0.<com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: void sendDelayedMotionEvents()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: int ACTION_TAP_COUNT> = 3;

        <com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: int MESSAGE_TRANSITION_TO_DELEGATING_STATE> = 2;

        <com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler: int MESSAGE_ON_ACTION_TAP_AND_HOLD> = 1;

        return;
    }
}
