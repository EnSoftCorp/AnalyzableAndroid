class com.android.server.InputMethodManagerService$InputMethodFileManager extends java.lang.Object
{
    private static final java.lang.String SYSTEM_PATH;
    private static final java.lang.String INPUT_METHOD_PATH;
    private static final java.lang.String ADDITIONAL_SUBTYPES_FILE_NAME;
    private static final java.lang.String NODE_SUBTYPES;
    private static final java.lang.String NODE_SUBTYPE;
    private static final java.lang.String NODE_IMI;
    private static final java.lang.String ATTR_ID;
    private static final java.lang.String ATTR_LABEL;
    private static final java.lang.String ATTR_ICON;
    private static final java.lang.String ATTR_IME_SUBTYPE_LOCALE;
    private static final java.lang.String ATTR_IME_SUBTYPE_MODE;
    private static final java.lang.String ATTR_IME_SUBTYPE_EXTRA_VALUE;
    private static final java.lang.String ATTR_IS_AUXILIARY;
    private final android.util.AtomicFile mAdditionalInputMethodSubtypeFile;
    private final java.util.HashMap mMethodMap;
    private final java.util.HashMap mAdditionalSubtypesMap;

    public void <init>(java.util.HashMap, int)
    {
        com.android.server.InputMethodManagerService$InputMethodFileManager r0;
        java.util.HashMap r1, $r5, $r11, $r14;
        int i0;
        java.io.File r2, r3, r4, $r6, $r7, $r8, $r19;
        boolean $z0, $z1;
        android.util.AtomicFile $r9, $r10, $r12;
        java.lang.StringBuilder $r13, $r15, $r16;
        java.lang.String $r17, $r18;
        java.lang.NullPointerException $r20;

        r0 := @this: com.android.server.InputMethodManagerService$InputMethodFileManager;

        r1 := @parameter0: java.util.HashMap;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mAdditionalSubtypesMap> = $r5;

        if r1 != null goto label1;

        $r20 = new java.lang.NullPointerException;

        specialinvoke $r20.<java.lang.NullPointerException: void <init>(java.lang.String)>("methodMap is null");

        throw $r20;

     label1:
        r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mMethodMap> = r1;

        if i0 != 0 goto label2;

        $r6 = new java.io.File;

        $r19 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r19, "system");

        goto label3;

     label2:
        $r6 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(i0);

     label3:
        r2 = $r6;

        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, "inputmethod");

        r3 = $r7;

        $z0 = virtualinvoke r3.<java.io.File: boolean mkdirs()>();

        if $z0 != 0 goto label4;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t create dir.: ");

        $r17 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r18);

     label4:
        $r8 = new java.io.File;

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, "subtypes.xml");

        r4 = $r8;

        $r9 = new android.util.AtomicFile;

        specialinvoke $r9.<android.util.AtomicFile: void <init>(java.io.File)>(r4);

        r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: android.util.AtomicFile mAdditionalInputMethodSubtypeFile> = $r9;

        $z1 = virtualinvoke r4.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label5;

        $r14 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mAdditionalSubtypesMap>;

        $r12 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: android.util.AtomicFile mAdditionalInputMethodSubtypeFile>;

        staticinvoke <com.android.server.InputMethodManagerService$InputMethodFileManager: void writeAdditionalInputMethodSubtypes(java.util.HashMap,android.util.AtomicFile,java.util.HashMap)>($r14, $r12, r1);

        goto label6;

     label5:
        $r11 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mAdditionalSubtypesMap>;

        $r10 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: android.util.AtomicFile mAdditionalInputMethodSubtypeFile>;

        staticinvoke <com.android.server.InputMethodManagerService$InputMethodFileManager: void readAdditionalInputMethodSubtypes(java.util.HashMap,android.util.AtomicFile)>($r11, $r10);

     label6:
        return;
    }

    private void deleteAllInputMethodSubtypes(java.lang.String)
    {
        com.android.server.InputMethodManagerService$InputMethodFileManager r0;
        java.lang.String r1;
        java.util.HashMap r2, $r4, $r5, $r7, $r9;
        java.lang.Throwable r3, $r10;
        android.util.AtomicFile $r8;

        r0 := @this: com.android.server.InputMethodManagerService$InputMethodFileManager;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mMethodMap>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mAdditionalSubtypesMap>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r9 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mAdditionalSubtypesMap>;

        $r8 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: android.util.AtomicFile mAdditionalInputMethodSubtypeFile>;

        $r7 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mMethodMap>;

        staticinvoke <com.android.server.InputMethodManagerService$InputMethodFileManager: void writeAdditionalInputMethodSubtypes(java.util.HashMap,android.util.AtomicFile,java.util.HashMap)>($r9, $r8, $r7);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void addInputMethodSubtypes(android.view.inputmethod.InputMethodInfo, android.view.inputmethod.InputMethodSubtype[])
    {
        com.android.server.InputMethodManagerService$InputMethodFileManager r0;
        android.view.inputmethod.InputMethodInfo r1;
        android.view.inputmethod.InputMethodSubtype[] r2;
        java.util.HashMap r3, $r7, $r9, $r12, $r14;
        java.util.ArrayList r4, $r8;
        int i0, i1;
        android.view.inputmethod.InputMethodSubtype r5;
        java.lang.Throwable r6, $r23;
        java.lang.String $r10, $r18, $r19, $r21;
        android.util.AtomicFile $r13;
        java.lang.StringBuilder $r15, $r16, $r17, $r20, $r22;
        boolean $z0;

        r0 := @this: com.android.server.InputMethodManagerService$InputMethodFileManager;

        r1 := @parameter0: android.view.inputmethod.InputMethodInfo;

        r2 := @parameter1: android.view.inputmethod.InputMethodSubtype[];

        $r7 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mMethodMap>;

        r3 = $r7;

        entermonitor $r7;

     label1:
        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r4 = $r8;

        i0 = lengthof r2;

        i1 = 0;

     label2:
        if i1 >= i0 goto label5;

        r5 = r2[i1];

        $z0 = virtualinvoke r4.<java.util.ArrayList: boolean contains(java.lang.Object)>(r5);

        if $z0 != 0 goto label3;

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        goto label4;

     label3:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicated subtype definition found: ");

        $r18 = virtualinvoke r5.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r19 = virtualinvoke r5.<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r21);

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        $r9 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mAdditionalSubtypesMap>;

        $r10 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r4);

        $r14 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mAdditionalSubtypesMap>;

        $r13 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: android.util.AtomicFile mAdditionalInputMethodSubtypeFile>;

        $r12 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mMethodMap>;

        staticinvoke <com.android.server.InputMethodManagerService$InputMethodFileManager: void writeAdditionalInputMethodSubtypes(java.util.HashMap,android.util.AtomicFile,java.util.HashMap)>($r14, $r13, $r12);

        exitmonitor r3;

     label6:
        goto label9;

     label7:
        $r23 := @caughtexception;

        r6 = $r23;

        exitmonitor r3;

     label8:
        throw r6;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public java.util.HashMap getAllAdditionalInputMethodSubtypes()
    {
        com.android.server.InputMethodManagerService$InputMethodFileManager r0;
        java.util.HashMap r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.InputMethodManagerService$InputMethodFileManager;

        $r3 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mMethodMap>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: java.util.HashMap mAdditionalSubtypesMap>;

        exitmonitor r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static void writeAdditionalInputMethodSubtypes(java.util.HashMap, android.util.AtomicFile, java.util.HashMap)
    {
        java.util.HashMap r0, r2;
        android.util.AtomicFile r1;
        boolean z0, $z1, $z2, $z3, $z4;
        java.io.FileOutputStream r3;
        com.android.internal.util.FastXmlSerializer r4, $r9;
        java.util.Iterator r5;
        java.lang.String r6, $r15, $r16, $r17, $r18, $r19, $r20, $r22;
        java.util.List r7;
        int i0, i1, $i2, $i3, $i5;
        android.view.inputmethod.InputMethodSubtype r8;
        java.lang.Boolean $r10;
        java.util.Set $r11;
        java.lang.Object $r12, $r13, $r14;
        java.lang.StringBuilder $r21, $r23, $r24;
        byte $b4;
        java.io.IOException $r25, r26;

        r0 := @parameter0: java.util.HashMap;

        r1 := @parameter1: android.util.AtomicFile;

        r2 := @parameter2: java.util.HashMap;

        if r2 == null goto label01;

        $i5 = virtualinvoke r2.<java.util.HashMap: int size()>();

        if $i5 <= 0 goto label01;

        $z4 = 1;

        goto label02;

     label01:
        $z4 = 0;

     label02:
        z0 = $z4;

        r3 = null;

     label03:
        r3 = virtualinvoke r1.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

        $r9 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r9.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r4 = $r9;

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r3, "utf-8");

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r10);

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "subtypes");

        $r11 = virtualinvoke r0.<java.util.HashMap: java.util.Set keySet()>();

        r5 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r12;

        if z0 == 0 goto label05;

        $z3 = virtualinvoke r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r6);

        if $z3 != 0 goto label05;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME uninstalled or not valid.: ");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r22);

        goto label04;

     label05:
        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "imi");

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "id", r6);

        $r13 = virtualinvoke r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r6);

        r7 = (java.util.List) $r13;

        i0 = interfaceinvoke r7.<java.util.List: int size()>();

        i1 = 0;

     label06:
        if i1 >= i0 goto label09;

        $r14 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i1);

        r8 = (android.view.inputmethod.InputMethodSubtype) $r14;

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "subtype");

        $i2 = virtualinvoke r8.<android.view.inputmethod.InputMethodSubtype: int getIconResId()>();

        $r15 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i2);

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "icon", $r15);

        $i3 = virtualinvoke r8.<android.view.inputmethod.InputMethodSubtype: int getNameResId()>();

        $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i3);

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "label", $r16);

        $r17 = virtualinvoke r8.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "imeSubtypeLocale", $r17);

        $r18 = virtualinvoke r8.<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>();

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "imeSubtypeMode", $r18);

        $r19 = virtualinvoke r8.<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValue()>();

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "imeSubtypeExtraValue", $r19);

        $z2 = virtualinvoke r8.<android.view.inputmethod.InputMethodSubtype: boolean isAuxiliary()>();

        if $z2 == 0 goto label07;

        $b4 = 1;

        goto label08;

     label07:
        $b4 = 0;

     label08:
        $r20 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($b4);

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "isAuxiliary", $r20);

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "subtype");

        i1 = i1 + 1;

        goto label06;

     label09:
        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "imi");

        goto label04;

     label10:
        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "subtypes");

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        virtualinvoke r1.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r3);

     label11:
        goto label13;

     label12:
        $r25 := @caughtexception;

        r26 = $r25;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManagerService", "Error writing subtypes", r26);

        if r3 == null goto label13;

        virtualinvoke r1.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r3);

     label13:
        return;

        catch java.io.IOException from label03 to label11 with label12;
    }

    private static void readAdditionalInputMethodSubtypes(java.util.HashMap, android.util.AtomicFile)
    {
        java.util.HashMap r0;
        android.util.AtomicFile r1;
        java.io.FileInputStream r2;
        org.xmlpull.v1.XmlPullParser r3;
        java.lang.String r4, r5, r7, r8, r9, r10, $r14, $r15, $r16, $r18, $r21, $r22, $r25, $r26, $r27, $r44, $r46, $r53;
        int i1, i2, i3, $i4, $i5, $i8, i17, i18;
        java.util.ArrayList r6, $r38;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Throwable r11, $r56;
        android.view.inputmethod.InputMethodSubtype r12;
        java.lang.StringBuilder $r17, $r19, $r20, $r37, $r42, $r43, $r45, $r47, $r49, $r51, $r52, $r55;
        java.lang.Integer $r23, $r24;
        android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder $r28, $r29, $r30, $r31, $r32, $r33, $r34;
        org.xmlpull.v1.XmlPullParserException $r35, $r50, r60;
        java.lang.NumberFormatException $r36, r64;
        java.io.IOException $r40, $r41, $r48, $r54, $r57, $r58, r62;

        r0 := @parameter0: java.util.HashMap;

        r1 := @parameter1: android.util.AtomicFile;

        if r0 == null goto label01;

        if r1 != null goto label02;

     label01:
        return;

     label02:
        virtualinvoke r0.<java.util.HashMap: void clear()>();

        r2 = null;

     label03:
        r2 = virtualinvoke r1.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

        r3 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r2, null);

        interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label04:
        $i4 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: int next()>();

        i17 = $i4;

        if $i4 == 2 goto label05;

        if i17 == 1 goto label05;

        goto label04;

     label05:
        r4 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r14 = "subtypes";

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 != 0 goto label06;

        $r35 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r35.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>("Xml doesn\'t start with subtypes");

        throw $r35;

     label06:
        i1 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        r5 = null;

        r6 = null;

     label07:
        $i5 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: int next()>();

        i18 = $i5;

        if $i5 != 3 goto label08;

        $i8 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i8 <= i1 goto label15;

     label08:
        if i18 == 1 goto label15;

        if i18 == 2 goto label09;

        goto label07;

     label09:
        r7 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r15 = "imi";

        $z2 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z2 == 0 goto label11;

        r5 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "id");

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z5 == 0 goto label10;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", "Invalid imi id found in subtypes.xml");

        goto label07;

     label10:
        $r38 = new java.util.ArrayList;

        specialinvoke $r38.<java.util.ArrayList: void <init>()>();

        r6 = $r38;

        virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r6);

        goto label14;

     label11:
        $r16 = "subtype";

        $z3 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z3 == 0 goto label14;

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z4 != 0 goto label12;

        if r6 != null goto label13;

     label12:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME uninstalled or not valid.: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r18 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r18);

        goto label07;

     label13:
        $r22 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "icon");

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r22);

        i2 = virtualinvoke $r23.<java.lang.Integer: int intValue()>();

        $r21 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "label");

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r21);

        i3 = virtualinvoke $r24.<java.lang.Integer: int intValue()>();

        r8 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "imeSubtypeLocale");

        r9 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "imeSubtypeMode");

        r10 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "imeSubtypeExtraValue");

        $r27 = "1";

        $r26 = interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "isAuxiliary");

        $r25 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r26);

        z0 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>($r25);

        $r30 = new android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder;

        specialinvoke $r30.<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: void <init>()>();

        $r29 = virtualinvoke $r30.<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder setSubtypeNameResId(int)>(i3);

        $r28 = virtualinvoke $r29.<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder setSubtypeIconResId(int)>(i2);

        $r34 = virtualinvoke $r28.<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder setSubtypeLocale(java.lang.String)>(r8);

        $r33 = virtualinvoke $r34.<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder setSubtypeMode(java.lang.String)>(r9);

        $r32 = virtualinvoke $r33.<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder setSubtypeExtraValue(java.lang.String)>(r10);

        $r31 = virtualinvoke $r32.<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder setIsAuxiliary(boolean)>(z0);

        r12 = virtualinvoke $r31.<android.view.inputmethod.InputMethodSubtype$InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype build()>();

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);

     label14:
        goto label07;

     label15:
        if r2 == null goto label43;

     label16:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label17:
        goto label43;

     label18:
        $r48 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", "Failed to close.");

        goto label43;

     label19:
        $r50 := @caughtexception;

        r60 = $r50;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading subtypes: ");

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r60);

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r46);

     label20:
        if r2 == null goto label24;

     label21:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label22:
        goto label24;

     label23:
        $r58 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", "Failed to close.");

     label24:
        return;

     label25:
        $r54 := @caughtexception;

        r62 = $r54;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading subtypes: ");

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r62);

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r53);

     label26:
        if r2 == null goto label30;

     label27:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label28:
        goto label30;

     label29:
        $r57 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", "Failed to close.");

     label30:
        return;

     label31:
        $r36 := @caughtexception;

        r64 = $r36;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading subtypes: ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r64);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", $r44);

     label32:
        if r2 == null goto label36;

     label33:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label34:
        goto label36;

     label35:
        $r41 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", "Failed to close.");

     label36:
        return;

     label37:
        $r56 := @caughtexception;

        r11 = $r56;

     label38:
        if r2 == null goto label42;

     label39:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label40:
        goto label42;

     label41:
        $r40 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("InputMethodManagerService", "Failed to close.");

     label42:
        throw r11;

     label43:
        return;

        catch java.io.IOException from label16 to label17 with label18;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label15 with label19;
        catch java.io.IOException from label21 to label22 with label23;
        catch java.io.IOException from label03 to label15 with label25;
        catch java.io.IOException from label27 to label28 with label29;
        catch java.lang.NumberFormatException from label03 to label15 with label31;
        catch java.io.IOException from label33 to label34 with label35;
        catch java.lang.Throwable from label03 to label15 with label37;
        catch java.lang.Throwable from label19 to label20 with label37;
        catch java.lang.Throwable from label25 to label26 with label37;
        catch java.lang.Throwable from label31 to label32 with label37;
        catch java.io.IOException from label39 to label40 with label41;
        catch java.lang.Throwable from label37 to label38 with label37;
    }

    static void access$500(com.android.server.InputMethodManagerService$InputMethodFileManager, java.lang.String)
    {
        com.android.server.InputMethodManagerService$InputMethodFileManager r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.InputMethodManagerService$InputMethodFileManager;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.InputMethodManagerService$InputMethodFileManager: void deleteAllInputMethodSubtypes(java.lang.String)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.InputMethodManagerService$InputMethodFileManager: java.lang.String ATTR_IS_AUXILIARY> = "isAuxiliary";

        <com.android.server.InputMethodManagerService$InputMethodFileManager: java.lang.String ATTR_IME_SUBTYPE_EXTRA_VALUE> = "imeSubtypeExtraValue";

        <com.android.server.InputMethodManagerService$InputMethodFileManager: java.lang.String ATTR_IME_SUBTYPE_MODE> = "imeSubtypeMode";

        <com.android.server.InputMethodManagerService$InputMethodFileManager: java.lang.String ATTR_IME_SUBTYPE_LOCALE> = "imeSubtypeLocale";

        <com.android.server.InputMethodManagerService$InputMethodFileManager: java.lang.String ATTR_ICON> = "icon";

        <com.android.server.InputMethodManagerService$InputMethodFileManager: java.lang.String ATTR_LABEL> = "label";

        <com.android.server.InputMethodManagerService$InputMethodFileManager: java.lang.String ATTR_ID> = "id";

        <com.android.server.InputMethodManagerService$InputMethodFileManager: java.lang.String NODE_IMI> = "imi";

        <com.android.server.InputMethodManagerService$InputMethodFileManager: java.lang.String NODE_SUBTYPE> = "subtype";

        <com.android.server.InputMethodManagerService$InputMethodFileManager: java.lang.String NODE_SUBTYPES> = "subtypes";

        <com.android.server.InputMethodManagerService$InputMethodFileManager: java.lang.String ADDITIONAL_SUBTYPES_FILE_NAME> = "subtypes.xml";

        <com.android.server.InputMethodManagerService$InputMethodFileManager: java.lang.String INPUT_METHOD_PATH> = "inputmethod";

        <com.android.server.InputMethodManagerService$InputMethodFileManager: java.lang.String SYSTEM_PATH> = "system";

        return;
    }
}
