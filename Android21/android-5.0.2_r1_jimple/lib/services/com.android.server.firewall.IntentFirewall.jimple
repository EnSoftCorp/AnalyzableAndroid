public class com.android.server.firewall.IntentFirewall extends java.lang.Object
{
    static final java.lang.String TAG;
    private static final java.io.File RULES_DIR;
    private static final int LOG_PACKAGES_MAX_LENGTH;
    private static final int LOG_PACKAGES_SUFFICIENT_LENGTH;
    private static final java.lang.String TAG_RULES;
    private static final java.lang.String TAG_ACTIVITY;
    private static final java.lang.String TAG_SERVICE;
    private static final java.lang.String TAG_BROADCAST;
    private static final int TYPE_ACTIVITY;
    private static final int TYPE_BROADCAST;
    private static final int TYPE_SERVICE;
    private static final java.util.HashMap factoryMap;
    private final com.android.server.firewall.IntentFirewall$AMSInterface mAms;
    private final com.android.server.firewall.IntentFirewall$RuleObserver mObserver;
    private com.android.server.firewall.IntentFirewall$FirewallIntentResolver mActivityResolver;
    private com.android.server.firewall.IntentFirewall$FirewallIntentResolver mBroadcastResolver;
    private com.android.server.firewall.IntentFirewall$FirewallIntentResolver mServiceResolver;
    final com.android.server.firewall.IntentFirewall$FirewallHandler mHandler;

    public void <init>(com.android.server.firewall.IntentFirewall$AMSInterface, android.os.Handler)
    {
        com.android.server.firewall.IntentFirewall r0;
        com.android.server.firewall.IntentFirewall$AMSInterface r1;
        android.os.Handler r2;
        java.io.File r3;
        com.android.server.firewall.IntentFirewall$FirewallIntentResolver $r4, $r5, $r6;
        com.android.server.firewall.IntentFirewall$FirewallHandler $r7;
        android.os.Looper $r8;
        com.android.server.firewall.IntentFirewall$RuleObserver $r9, $r10;

        r0 := @this: com.android.server.firewall.IntentFirewall;

        r1 := @parameter0: com.android.server.firewall.IntentFirewall$AMSInterface;

        r2 := @parameter1: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new com.android.server.firewall.IntentFirewall$FirewallIntentResolver;

        specialinvoke $r4.<com.android.server.firewall.IntentFirewall$FirewallIntentResolver: void <init>(com.android.server.firewall.IntentFirewall$1)>(null);

        r0.<com.android.server.firewall.IntentFirewall: com.android.server.firewall.IntentFirewall$FirewallIntentResolver mActivityResolver> = $r4;

        $r5 = new com.android.server.firewall.IntentFirewall$FirewallIntentResolver;

        specialinvoke $r5.<com.android.server.firewall.IntentFirewall$FirewallIntentResolver: void <init>(com.android.server.firewall.IntentFirewall$1)>(null);

        r0.<com.android.server.firewall.IntentFirewall: com.android.server.firewall.IntentFirewall$FirewallIntentResolver mBroadcastResolver> = $r5;

        $r6 = new com.android.server.firewall.IntentFirewall$FirewallIntentResolver;

        specialinvoke $r6.<com.android.server.firewall.IntentFirewall$FirewallIntentResolver: void <init>(com.android.server.firewall.IntentFirewall$1)>(null);

        r0.<com.android.server.firewall.IntentFirewall: com.android.server.firewall.IntentFirewall$FirewallIntentResolver mServiceResolver> = $r6;

        r0.<com.android.server.firewall.IntentFirewall: com.android.server.firewall.IntentFirewall$AMSInterface mAms> = r1;

        $r7 = new com.android.server.firewall.IntentFirewall$FirewallHandler;

        $r8 = virtualinvoke r2.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r7.<com.android.server.firewall.IntentFirewall$FirewallHandler: void <init>(com.android.server.firewall.IntentFirewall,android.os.Looper)>(r0, $r8);

        r0.<com.android.server.firewall.IntentFirewall: com.android.server.firewall.IntentFirewall$FirewallHandler mHandler> = $r7;

        r3 = staticinvoke <com.android.server.firewall.IntentFirewall: java.io.File getRulesDir()>();

        virtualinvoke r3.<java.io.File: boolean mkdirs()>();

        specialinvoke r0.<com.android.server.firewall.IntentFirewall: void readRulesDir(java.io.File)>(r3);

        $r9 = new com.android.server.firewall.IntentFirewall$RuleObserver;

        specialinvoke $r9.<com.android.server.firewall.IntentFirewall$RuleObserver: void <init>(com.android.server.firewall.IntentFirewall,java.io.File)>(r0, r3);

        r0.<com.android.server.firewall.IntentFirewall: com.android.server.firewall.IntentFirewall$RuleObserver mObserver> = $r9;

        $r10 = r0.<com.android.server.firewall.IntentFirewall: com.android.server.firewall.IntentFirewall$RuleObserver mObserver>;

        virtualinvoke $r10.<com.android.server.firewall.IntentFirewall$RuleObserver: void startWatching()>();

        return;
    }

    public boolean checkStartActivity(android.content.Intent, int, int, java.lang.String, android.content.pm.ApplicationInfo)
    {
        com.android.server.firewall.IntentFirewall r0;
        android.content.Intent r1;
        int i0, i1, $i2;
        java.lang.String r2;
        android.content.pm.ApplicationInfo r3;
        com.android.server.firewall.IntentFirewall$FirewallIntentResolver $r4;
        android.content.ComponentName $r5;
        boolean $z0;

        r0 := @this: com.android.server.firewall.IntentFirewall;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: android.content.pm.ApplicationInfo;

        $r4 = r0.<com.android.server.firewall.IntentFirewall: com.android.server.firewall.IntentFirewall$FirewallIntentResolver mActivityResolver>;

        $r5 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        $i2 = r3.<android.content.pm.ApplicationInfo: int uid>;

        $z0 = virtualinvoke r0.<com.android.server.firewall.IntentFirewall: boolean checkIntent(com.android.server.firewall.IntentFirewall$FirewallIntentResolver,android.content.ComponentName,int,android.content.Intent,int,int,java.lang.String,int)>($r4, $r5, 0, r1, i0, i1, r2, $i2);

        return $z0;
    }

    public boolean checkService(android.content.ComponentName, android.content.Intent, int, int, java.lang.String, android.content.pm.ApplicationInfo)
    {
        com.android.server.firewall.IntentFirewall r0;
        android.content.ComponentName r1;
        android.content.Intent r2;
        int i0, i1, $i2;
        java.lang.String r3;
        android.content.pm.ApplicationInfo r4;
        com.android.server.firewall.IntentFirewall$FirewallIntentResolver $r5;
        boolean $z0;

        r0 := @this: com.android.server.firewall.IntentFirewall;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.content.Intent;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: android.content.pm.ApplicationInfo;

        $r5 = r0.<com.android.server.firewall.IntentFirewall: com.android.server.firewall.IntentFirewall$FirewallIntentResolver mServiceResolver>;

        $i2 = r4.<android.content.pm.ApplicationInfo: int uid>;

        $z0 = virtualinvoke r0.<com.android.server.firewall.IntentFirewall: boolean checkIntent(com.android.server.firewall.IntentFirewall$FirewallIntentResolver,android.content.ComponentName,int,android.content.Intent,int,int,java.lang.String,int)>($r5, r1, 2, r2, i0, i1, r3, $i2);

        return $z0;
    }

    public boolean checkBroadcast(android.content.Intent, int, int, java.lang.String, int)
    {
        com.android.server.firewall.IntentFirewall r0;
        android.content.Intent r1;
        int i0, i1, i2;
        java.lang.String r2;
        com.android.server.firewall.IntentFirewall$FirewallIntentResolver $r3;
        android.content.ComponentName $r4;
        boolean $z0;

        r0 := @this: com.android.server.firewall.IntentFirewall;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        i2 := @parameter4: int;

        $r3 = r0.<com.android.server.firewall.IntentFirewall: com.android.server.firewall.IntentFirewall$FirewallIntentResolver mBroadcastResolver>;

        $r4 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        $z0 = virtualinvoke r0.<com.android.server.firewall.IntentFirewall: boolean checkIntent(com.android.server.firewall.IntentFirewall$FirewallIntentResolver,android.content.ComponentName,int,android.content.Intent,int,int,java.lang.String,int)>($r3, $r4, 1, r1, i0, i1, r2, i2);

        return $z0;
    }

    public boolean checkIntent(com.android.server.firewall.IntentFirewall$FirewallIntentResolver, android.content.ComponentName, int, android.content.Intent, int, int, java.lang.String, int)
    {
        com.android.server.firewall.IntentFirewall r0;
        com.android.server.firewall.IntentFirewall$FirewallIntentResolver r1;
        android.content.ComponentName r2;
        int i0, i1, i2, i3, i4, $i5;
        android.content.Intent r3;
        java.lang.String r4;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        java.util.List r5;
        com.android.server.firewall.IntentFirewall$Rule r6;
        java.lang.Object $r7;
        java.util.ArrayList $r8;

        r0 := @this: com.android.server.firewall.IntentFirewall;

        r1 := @parameter0: com.android.server.firewall.IntentFirewall$FirewallIntentResolver;

        r2 := @parameter1: android.content.ComponentName;

        i0 := @parameter2: int;

        r3 := @parameter3: android.content.Intent;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        r4 := @parameter6: java.lang.String;

        i3 := @parameter7: int;

        z0 = 0;

        z1 = 0;

        r5 = virtualinvoke r1.<com.android.server.firewall.IntentFirewall$FirewallIntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,boolean,int)>(r3, r4, 0, 0);

        if r5 != null goto label1;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r5 = $r8;

     label1:
        virtualinvoke r1.<com.android.server.firewall.IntentFirewall$FirewallIntentResolver: void queryByComponent(android.content.ComponentName,java.util.List)>(r2, r5);

        i4 = 0;

     label2:
        $i5 = interfaceinvoke r5.<java.util.List: int size()>();

        if i4 >= $i5 goto label4;

        $r7 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i4);

        r6 = (com.android.server.firewall.IntentFirewall$Rule) $r7;

        $z4 = virtualinvoke r6.<com.android.server.firewall.IntentFirewall$Rule: boolean matches(com.android.server.firewall.IntentFirewall,android.content.ComponentName,android.content.Intent,int,int,java.lang.String,int)>(r0, r2, r3, i1, i2, r4, i3);

        if $z4 == 0 goto label3;

        $z3 = virtualinvoke r6.<com.android.server.firewall.IntentFirewall$Rule: boolean getBlock()>();

        z1 = z1 | $z3;

        $z5 = virtualinvoke r6.<com.android.server.firewall.IntentFirewall$Rule: boolean getLog()>();

        z0 = z0 | $z5;

        if z1 == 0 goto label3;

        if z0 == 0 goto label3;

        goto label4;

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        if z0 == 0 goto label5;

        staticinvoke <com.android.server.firewall.IntentFirewall: void logIntent(int,android.content.Intent,int,java.lang.String)>(i0, r3, i1, r4);

     label5:
        if z1 != 0 goto label6;

        $z2 = 1;

        goto label7;

     label6:
        $z2 = 0;

     label7:
        return $z2;
    }

    private static void logIntent(int, android.content.Intent, int, java.lang.String)
    {
        int i0, i1, i2, $i3;
        android.content.Intent r0;
        java.lang.String r1, r3, r4, $r7, $r8;
        android.content.ComponentName r2;
        android.content.pm.IPackageManager r5;
        java.lang.String[] r6;
        android.os.RemoteException $r9, r10;

        i0 := @parameter0: int;

        r0 := @parameter1: android.content.Intent;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 = virtualinvoke r0.<android.content.Intent: android.content.ComponentName getComponent()>();

        r3 = null;

        if r2 == null goto label1;

        r3 = virtualinvoke r2.<android.content.ComponentName: java.lang.String flattenToShortString()>();

     label1:
        r4 = null;

        i2 = 0;

        r5 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        if r5 == null goto label5;

     label2:
        r6 = interfaceinvoke r5.<android.content.pm.IPackageManager: java.lang.String[] getPackagesForUid(int)>(i1);

        if r6 == null goto label3;

        i2 = lengthof r6;

        r4 = staticinvoke <com.android.server.firewall.IntentFirewall: java.lang.String joinPackages(java.lang.String[])>(r6);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        r10 = $r9;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IntentFirewall", "Remote exception while retrieving packages", r10);

     label5:
        $r7 = virtualinvoke r0.<android.content.Intent: java.lang.String getAction()>();

        $r8 = virtualinvoke r0.<android.content.Intent: java.lang.String getDataString()>();

        $i3 = virtualinvoke r0.<android.content.Intent: int getFlags()>();

        staticinvoke <com.android.server.EventLogTags: void writeIfwIntentMatched(int,java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>(i0, r3, i1, i2, r4, $r7, r1, $r8, $i3);

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private static java.lang.String joinPackages(java.lang.String[])
    {
        java.lang.String[] r0;
        boolean z0;
        java.lang.StringBuilder r1, $r3, $r4, $r6, $r7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.String r2, $r5, $r8, $r10, r12;

        r0 := @parameter0: java.lang.String[];

        z0 = 1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r1 = $r3;

        i0 = 0;

     label1:
        $i1 = lengthof r0;

        if i0 >= $i1 goto label6;

        r2 = r0[i0];

        $i7 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        $i9 = virtualinvoke r2.<java.lang.String: int length()>();

        $i8 = $i7 + $i9;

        $i11 = $i8 + 1;

        if $i11 >= 150 goto label4;

        if z0 != 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        goto label3;

     label2:
        z0 = 0;

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        goto label5;

     label4:
        $i10 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        if $i10 < 125 goto label5;

        $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;

     label5:
        i0 = i0 + 1;

        goto label1;

     label6:
        $i2 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        if $i2 != 0 goto label7;

        $i3 = lengthof r0;

        if $i3 <= 0 goto label7;

        r12 = r0[0];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $i4 = virtualinvoke r12.<java.lang.String: int length()>();

        $i5 = $i4 - 150;

        $i6 = $i5 + 1;

        $r5 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int)>($i6);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;

     label7:
        return null;
    }

    public static java.io.File getRulesDir()
    {
        java.io.File $r0;

        $r0 = <com.android.server.firewall.IntentFirewall: java.io.File RULES_DIR>;

        return $r0;
    }

    private void readRulesDir(java.io.File)
    {
        com.android.server.firewall.IntentFirewall r0;
        java.io.File r1, r3;
        com.android.server.firewall.IntentFirewall$FirewallIntentResolver[] r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i7;
        java.lang.Throwable r4, $r26;
        java.lang.StringBuilder $r5, $r6, $r9, $r11, $r13, $r14, $r17, $r19;
        com.android.server.firewall.IntentFirewall$FirewallIntentResolver $r7, $r10, $r16, $r21, $r23, $r24, $r25;
        java.util.Set $r8, $r12, $r15;
        java.lang.String $r18, $r27;
        com.android.server.firewall.IntentFirewall$AMSInterface $r20;
        java.lang.Object $r22, r29;
        boolean $z0;
        java.io.File[] r28;

        r0 := @this: com.android.server.firewall.IntentFirewall;

        r1 := @parameter0: java.io.File;

        r2 = newarray (com.android.server.firewall.IntentFirewall$FirewallIntentResolver)[3];

        i0 = 0;

     label01:
        $i2 = lengthof r2;

        if i0 >= $i2 goto label02;

        $r25 = new com.android.server.firewall.IntentFirewall$FirewallIntentResolver;

        specialinvoke $r25.<com.android.server.firewall.IntentFirewall$FirewallIntentResolver: void <init>(com.android.server.firewall.IntentFirewall$1)>(null);

        r2[i0] = $r25;

        i0 = i0 + 1;

        goto label01;

     label02:
        r28 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>();

        if r28 == null goto label05;

        i1 = 0;

     label03:
        $i7 = lengthof r28;

        if i1 >= $i7 goto label05;

        r3 = r28[i1];

        $r27 = virtualinvoke r3.<java.io.File: java.lang.String getName()>();

        $z0 = virtualinvoke $r27.<java.lang.String: boolean endsWith(java.lang.String)>(".xml");

        if $z0 == 0 goto label04;

        specialinvoke r0.<com.android.server.firewall.IntentFirewall: void readRules(java.io.File,com.android.server.firewall.IntentFirewall$FirewallIntentResolver[])>(r3, r2);

     label04:
        i1 = i1 + 1;

        goto label03;

     label05:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Read new rules (A:");

        $r7 = r2[0];

        $r8 = virtualinvoke $r7.<com.android.server.firewall.IntentFirewall$FirewallIntentResolver: java.util.Set filterSet()>();

        $i3 = interfaceinvoke $r8.<java.util.Set: int size()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" B:");

        $r10 = r2[1];

        $r12 = virtualinvoke $r10.<com.android.server.firewall.IntentFirewall$FirewallIntentResolver: java.util.Set filterSet()>();

        $i4 = interfaceinvoke $r12.<java.util.Set: int size()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" S:");

        $r16 = r2[2];

        $r15 = virtualinvoke $r16.<com.android.server.firewall.IntentFirewall$FirewallIntentResolver: java.util.Set filterSet()>();

        $i5 = interfaceinvoke $r15.<java.util.Set: int size()>();

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("IntentFirewall", $r18);

        $r20 = r0.<com.android.server.firewall.IntentFirewall: com.android.server.firewall.IntentFirewall$AMSInterface mAms>;

        $r22 = interfaceinvoke $r20.<com.android.server.firewall.IntentFirewall$AMSInterface: java.lang.Object getAMSLock()>();

        r29 = $r22;

        entermonitor $r22;

     label06:
        $r21 = r2[0];

        r0.<com.android.server.firewall.IntentFirewall: com.android.server.firewall.IntentFirewall$FirewallIntentResolver mActivityResolver> = $r21;

        $r23 = r2[1];

        r0.<com.android.server.firewall.IntentFirewall: com.android.server.firewall.IntentFirewall$FirewallIntentResolver mBroadcastResolver> = $r23;

        $r24 = r2[2];

        r0.<com.android.server.firewall.IntentFirewall: com.android.server.firewall.IntentFirewall$FirewallIntentResolver mServiceResolver> = $r24;

        exitmonitor r29;

     label07:
        goto label10;

     label08:
        $r26 := @caughtexception;

        r4 = $r26;

        exitmonitor r29;

     label09:
        throw r4;

     label10:
        return;

        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private void readRules(java.io.File, com.android.server.firewall.IntentFirewall$FirewallIntentResolver[])
    {
        com.android.server.firewall.IntentFirewall r0;
        java.io.File r1;
        com.android.server.firewall.IntentFirewall$FirewallIntentResolver[] r2;
        java.util.ArrayList r3, $r11, $r18;
        int i0, i1, $i3, $i4, $i5, $i6, i14, i15, i16, i17;
        byte b2;
        java.lang.String r5, $r23, $r30, $r37, $r38, $r43, $r49, $r52;
        com.android.server.firewall.IntentFirewall$Rule r6, $r17, r67;
        java.util.List r7, r65;
        org.xmlpull.v1.XmlPullParserException r8, $r27, $r45, r61;
        java.lang.Throwable r9, $r54;
        java.io.IOException r10, $r22, $r29, $r36, $r50, $r56, r60, r62, r63, r64;
        java.io.FileInputStream $r12, r58;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r13, $r14, $r19;
        android.content.ComponentName $r15;
        com.android.server.firewall.IntentFirewall$FirewallIntentFilter $r16;
        java.lang.StringBuilder $r21, $r24, $r25, $r26, $r28, $r31, $r32, $r33, $r34, $r35, $r39, $r40, $r41, $r42, $r46, $r47, $r48, $r51, $r53, $r55, $r57;
        java.io.FileNotFoundException $r44;
        org.xmlpull.v1.XmlPullParser r59;
        com.android.server.firewall.IntentFirewall$FirewallIntentResolver r66;

        r0 := @this: com.android.server.firewall.IntentFirewall;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: com.android.server.firewall.IntentFirewall$FirewallIntentResolver[];

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>(int)>(3);

        r3 = $r11;

        i0 = 0;

     label01:
        if i0 >= 3 goto label02;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r18);

        i0 = i0 + 1;

        goto label01;

     label02:
        $r12 = new java.io.FileInputStream;

        specialinvoke $r12.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        r58 = $r12;

     label03:
        goto label05;

     label04:
        $r44 := @caughtexception;

        return;

     label05:
        r59 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r59.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r58, null);

        staticinvoke <com.android.internal.util.XmlUtils: void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r59, "rules");

        i1 = interfaceinvoke r59.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label06:
        $z0 = staticinvoke <com.android.internal.util.XmlUtils: boolean nextElementWithin(org.xmlpull.v1.XmlPullParser,int)>(r59, i1);

        if $z0 == 0 goto label15;

        b2 = -1;

        r5 = interfaceinvoke r59.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("activity");

        if $z2 == 0 goto label07;

        b2 = 0;

        goto label09;

     label07:
        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("broadcast");

        if $z1 == 0 goto label08;

        b2 = 1;

        goto label09;

     label08:
        $z3 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("service");

        if $z3 == 0 goto label09;

        b2 = 2;

     label09:
        if b2 == -1 goto label14;

        $r17 = new com.android.server.firewall.IntentFirewall$Rule;

        specialinvoke $r17.<com.android.server.firewall.IntentFirewall$Rule: void <init>(com.android.server.firewall.IntentFirewall$1)>(null);

        r6 = $r17;

        $r19 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(b2);

        r7 = (java.util.List) $r19;

     label10:
        virtualinvoke r6.<com.android.server.firewall.IntentFirewall$Rule: com.android.server.firewall.IntentFirewall$Rule readFromXml(org.xmlpull.v1.XmlPullParser)>(r59);

     label11:
        goto label13;

     label12:
        $r27 := @caughtexception;

        r8 = $r27;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading an intent firewall rule from ");

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IntentFirewall", $r30, r8);

        goto label06;

     label13:
        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r6);

     label14:
        goto label06;

     label15:
        virtualinvoke r58.<java.io.FileInputStream: void close()>();

     label16:
        goto label33;

     label17:
        $r22 := @caughtexception;

        r60 = $r22;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error while closing ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IntentFirewall", $r23, r60);

        goto label33;

     label18:
        $r45 := @caughtexception;

        r61 = $r45;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading intent firewall rules from ");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IntentFirewall", $r43, r61);

     label19:
        virtualinvoke r58.<java.io.FileInputStream: void close()>();

     label20:
        goto label22;

     label21:
        $r36 := @caughtexception;

        r62 = $r36;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error while closing ");

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IntentFirewall", $r38, r62);

     label22:
        return;

     label23:
        $r50 := @caughtexception;

        r63 = $r50;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading intent firewall rules from ");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IntentFirewall", $r49, r63);

     label24:
        virtualinvoke r58.<java.io.FileInputStream: void close()>();

     label25:
        goto label27;

     label26:
        $r56 := @caughtexception;

        r64 = $r56;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error while closing ");

        $r53 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r52 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IntentFirewall", $r52, r64);

     label27:
        return;

     label28:
        $r54 := @caughtexception;

        r9 = $r54;

     label29:
        virtualinvoke r58.<java.io.FileInputStream: void close()>();

     label30:
        goto label32;

     label31:
        $r29 := @caughtexception;

        r10 = $r29;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error while closing ");

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IntentFirewall", $r37, r10);

     label32:
        throw r9;

     label33:
        i14 = 0;

     label34:
        $i3 = interfaceinvoke r3.<java.util.List: int size()>();

        if i14 >= $i3 goto label41;

        $r13 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i14);

        r65 = (java.util.List) $r13;

        r66 = r2[i14];

        i15 = 0;

     label35:
        $i4 = interfaceinvoke r65.<java.util.List: int size()>();

        if i15 >= $i4 goto label40;

        $r14 = interfaceinvoke r65.<java.util.List: java.lang.Object get(int)>(i15);

        r67 = (com.android.server.firewall.IntentFirewall$Rule) $r14;

        i16 = 0;

     label36:
        $i5 = virtualinvoke r67.<com.android.server.firewall.IntentFirewall$Rule: int getIntentFilterCount()>();

        if i16 >= $i5 goto label37;

        $r16 = virtualinvoke r67.<com.android.server.firewall.IntentFirewall$Rule: com.android.server.firewall.IntentFirewall$FirewallIntentFilter getIntentFilter(int)>(i16);

        virtualinvoke r66.<com.android.server.firewall.IntentFirewall$FirewallIntentResolver: void addFilter(android.content.IntentFilter)>($r16);

        i16 = i16 + 1;

        goto label36;

     label37:
        i17 = 0;

     label38:
        $i6 = virtualinvoke r67.<com.android.server.firewall.IntentFirewall$Rule: int getComponentFilterCount()>();

        if i17 >= $i6 goto label39;

        $r15 = virtualinvoke r67.<com.android.server.firewall.IntentFirewall$Rule: android.content.ComponentName getComponentFilter(int)>(i17);

        virtualinvoke r66.<com.android.server.firewall.IntentFirewall$FirewallIntentResolver: void addComponentFilter(android.content.ComponentName,com.android.server.firewall.IntentFirewall$Rule)>($r15, r67);

        i17 = i17 + 1;

        goto label38;

     label39:
        i15 = i15 + 1;

        goto label35;

     label40:
        i14 = i14 + 1;

        goto label34;

     label41:
        return;

        catch java.io.FileNotFoundException from label02 to label03 with label04;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label11 with label12;
        catch java.io.IOException from label15 to label16 with label17;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label15 with label18;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.io.IOException from label05 to label15 with label23;
        catch java.io.IOException from label24 to label25 with label26;
        catch java.lang.Throwable from label05 to label15 with label28;
        catch java.lang.Throwable from label18 to label19 with label28;
        catch java.lang.Throwable from label23 to label24 with label28;
        catch java.io.IOException from label29 to label30 with label31;
        catch java.lang.Throwable from label28 to label29 with label28;
    }

    static com.android.server.firewall.Filter parseFilter(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, $r10;
        com.android.server.firewall.FilterFactory r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        com.android.server.firewall.Filter $r5;
        org.xmlpull.v1.XmlPullParserException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r3 = <com.android.server.firewall.IntentFirewall: java.util.HashMap factoryMap>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.firewall.FilterFactory) $r4;

        if r2 != null goto label1;

        $r6 = new org.xmlpull.v1.XmlPullParserException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element in filter list: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label1:
        $r5 = virtualinvoke r2.<com.android.server.firewall.FilterFactory: com.android.server.firewall.Filter newFilter(org.xmlpull.v1.XmlPullParser)>(r0);

        return $r5;
    }

    boolean checkComponentPermission(java.lang.String, int, int, int, boolean)
    {
        com.android.server.firewall.IntentFirewall r0;
        java.lang.String r1;
        int i0, i1, i2, $i3;
        boolean z0, $z1;
        com.android.server.firewall.IntentFirewall$AMSInterface $r2;

        r0 := @this: com.android.server.firewall.IntentFirewall;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 := @parameter4: boolean;

        $r2 = r0.<com.android.server.firewall.IntentFirewall: com.android.server.firewall.IntentFirewall$AMSInterface mAms>;

        $i3 = interfaceinvoke $r2.<com.android.server.firewall.IntentFirewall$AMSInterface: int checkComponentPermission(java.lang.String,int,int,int,boolean)>(r1, i0, i1, i2, z0);

        if $i3 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    boolean signaturesMatch(int, int)
    {
        com.android.server.firewall.IntentFirewall r0;
        int i0, i1, $i2;
        android.content.pm.IPackageManager r1;
        boolean $z0;
        android.os.RemoteException $r2, r3;

        r0 := @this: com.android.server.firewall.IntentFirewall;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label1:
        r1 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $i2 = interfaceinvoke r1.<android.content.pm.IPackageManager: int checkUidSignatures(int,int)>(i0, i1);

        if $i2 != 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        $r2 := @caughtexception;

        r3 = $r2;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IntentFirewall", "Remote exception while checking signatures", r3);

        return 0;

        catch android.os.RemoteException from label1 to label3 with label4;
    }

    static void access$300(com.android.server.firewall.IntentFirewall, java.io.File)
    {
        com.android.server.firewall.IntentFirewall r0;
        java.io.File r1;

        r0 := @parameter0: com.android.server.firewall.IntentFirewall;

        r1 := @parameter1: java.io.File;

        specialinvoke r0.<com.android.server.firewall.IntentFirewall: void readRulesDir(java.io.File)>(r1);

        return;
    }

    static void <clinit>()
    {
        com.android.server.firewall.FilterFactory[] r0, $r4;
        int i0, $i1, $i2, $i3, $i4;
        com.android.server.firewall.FilterFactory r1, $r5, $r6, $r7, $r8, $r17, $r19, $r20, $r21, $r22;
        java.io.File $r2, $r3;
        com.android.server.firewall.StringFilter$ValueProvider $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18;
        java.util.HashMap $r23, $r24;
        java.lang.String $r26;

        <com.android.server.firewall.IntentFirewall: int TYPE_SERVICE> = 2;

        <com.android.server.firewall.IntentFirewall: int TYPE_BROADCAST> = 1;

        <com.android.server.firewall.IntentFirewall: int TYPE_ACTIVITY> = 0;

        <com.android.server.firewall.IntentFirewall: java.lang.String TAG_BROADCAST> = "broadcast";

        <com.android.server.firewall.IntentFirewall: java.lang.String TAG_SERVICE> = "service";

        <com.android.server.firewall.IntentFirewall: java.lang.String TAG_ACTIVITY> = "activity";

        <com.android.server.firewall.IntentFirewall: java.lang.String TAG_RULES> = "rules";

        <com.android.server.firewall.IntentFirewall: int LOG_PACKAGES_SUFFICIENT_LENGTH> = 125;

        <com.android.server.firewall.IntentFirewall: int LOG_PACKAGES_MAX_LENGTH> = 150;

        <com.android.server.firewall.IntentFirewall: java.lang.String TAG> = "IntentFirewall";

        $r2 = new java.io.File;

        $r3 = staticinvoke <android.os.Environment: java.io.File getSystemSecureDirectory()>();

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "ifw");

        <com.android.server.firewall.IntentFirewall: java.io.File RULES_DIR> = $r2;

        $r4 = newarray (com.android.server.firewall.FilterFactory)[18];

        $r5 = <com.android.server.firewall.AndFilter: com.android.server.firewall.FilterFactory FACTORY>;

        $r4[0] = $r5;

        $r6 = <com.android.server.firewall.OrFilter: com.android.server.firewall.FilterFactory FACTORY>;

        $r4[1] = $r6;

        $r7 = <com.android.server.firewall.NotFilter: com.android.server.firewall.FilterFactory FACTORY>;

        $r4[2] = $r7;

        $r8 = <com.android.server.firewall.StringFilter: com.android.server.firewall.FilterFactory ACTION>;

        $r4[3] = $r8;

        $r9 = <com.android.server.firewall.StringFilter: com.android.server.firewall.StringFilter$ValueProvider COMPONENT>;

        $r4[4] = $r9;

        $r10 = <com.android.server.firewall.StringFilter: com.android.server.firewall.StringFilter$ValueProvider COMPONENT_NAME>;

        $r4[5] = $r10;

        $r11 = <com.android.server.firewall.StringFilter: com.android.server.firewall.StringFilter$ValueProvider COMPONENT_PACKAGE>;

        $r4[6] = $r11;

        $r12 = <com.android.server.firewall.StringFilter: com.android.server.firewall.StringFilter$ValueProvider DATA>;

        $r4[7] = $r12;

        $r13 = <com.android.server.firewall.StringFilter: com.android.server.firewall.StringFilter$ValueProvider HOST>;

        $r4[8] = $r13;

        $r14 = <com.android.server.firewall.StringFilter: com.android.server.firewall.StringFilter$ValueProvider MIME_TYPE>;

        $r4[9] = $r14;

        $r16 = <com.android.server.firewall.StringFilter: com.android.server.firewall.StringFilter$ValueProvider SCHEME>;

        $r4[10] = $r16;

        $r15 = <com.android.server.firewall.StringFilter: com.android.server.firewall.StringFilter$ValueProvider PATH>;

        $r4[11] = $r15;

        $r18 = <com.android.server.firewall.StringFilter: com.android.server.firewall.StringFilter$ValueProvider SSP>;

        $r4[12] = $r18;

        $r17 = <com.android.server.firewall.CategoryFilter: com.android.server.firewall.FilterFactory FACTORY>;

        $r4[13] = $r17;

        $r20 = <com.android.server.firewall.SenderFilter: com.android.server.firewall.FilterFactory FACTORY>;

        $r4[14] = $r20;

        $r19 = <com.android.server.firewall.SenderPackageFilter: com.android.server.firewall.FilterFactory FACTORY>;

        $r4[15] = $r19;

        $r22 = <com.android.server.firewall.SenderPermissionFilter: com.android.server.firewall.FilterFactory FACTORY>;

        $r4[16] = $r22;

        $r21 = <com.android.server.firewall.PortFilter: com.android.server.firewall.FilterFactory FACTORY>;

        $r4[17] = $r21;

        r0 = $r4;

        $r23 = new java.util.HashMap;

        $i1 = lengthof r0;

        $i3 = $i1 * 4;

        $i2 = $i3 / 3;

        specialinvoke $r23.<java.util.HashMap: void <init>(int)>($i2);

        <com.android.server.firewall.IntentFirewall: java.util.HashMap factoryMap> = $r23;

        i0 = 0;

     label1:
        $i4 = lengthof r0;

        if i0 >= $i4 goto label2;

        r1 = r0[i0];

        $r24 = <com.android.server.firewall.IntentFirewall: java.util.HashMap factoryMap>;

        $r26 = virtualinvoke r1.<com.android.server.firewall.FilterFactory: java.lang.String getTagName()>();

        virtualinvoke $r24.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, r1);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
}
