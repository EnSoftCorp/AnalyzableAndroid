final class com.android.server.accessibility.GestureUtils extends java.lang.Object
{

    private void <init>()
    {
        com.android.server.accessibility.GestureUtils r0;

        r0 := @this: com.android.server.accessibility.GestureUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isTap(android.view.MotionEvent, android.view.MotionEvent, int, int, int)
    {
        android.view.MotionEvent r0, r1;
        int i0, i1, i2;
        boolean $z0;

        r0 := @parameter0: android.view.MotionEvent;

        r1 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $z0 = staticinvoke <com.android.server.accessibility.GestureUtils: boolean eventsWithinTimeAndDistanceSlop(android.view.MotionEvent,android.view.MotionEvent,int,int,int)>(r0, r1, i0, i1, i2);

        return $z0;
    }

    public static boolean isMultiTap(android.view.MotionEvent, android.view.MotionEvent, int, int, int)
    {
        android.view.MotionEvent r0, r1;
        int i0, i1, i2;
        boolean $z0;

        r0 := @parameter0: android.view.MotionEvent;

        r1 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $z0 = staticinvoke <com.android.server.accessibility.GestureUtils: boolean eventsWithinTimeAndDistanceSlop(android.view.MotionEvent,android.view.MotionEvent,int,int,int)>(r0, r1, i0, i1, i2);

        return $z0;
    }

    private static boolean eventsWithinTimeAndDistanceSlop(android.view.MotionEvent, android.view.MotionEvent, int, int, int)
    {
        android.view.MotionEvent r0, r1;
        int i0, i1, i2;
        double d0, $d1;
        boolean $z0;
        byte $b3;

        r0 := @parameter0: android.view.MotionEvent;

        r1 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $z0 = staticinvoke <com.android.server.accessibility.GestureUtils: boolean isTimedOut(android.view.MotionEvent,android.view.MotionEvent,int)>(r0, r1, i0);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        d0 = staticinvoke <com.android.server.accessibility.GestureUtils: double computeDistance(android.view.MotionEvent,android.view.MotionEvent,int)>(r0, r1, i2);

        $d1 = (double) i1;

        $b3 = d0 cmpl $d1;

        if $b3 < 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    public static double computeDistance(android.view.MotionEvent, android.view.MotionEvent, int)
    {
        android.view.MotionEvent r0, r1;
        int i0;
        float $f0, $f1, $f2, $f3, $f4;
        double $d0;

        r0 := @parameter0: android.view.MotionEvent;

        r1 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        $f0 = virtualinvoke r0.<android.view.MotionEvent: float getX(int)>(i0);

        $f1 = virtualinvoke r0.<android.view.MotionEvent: float getY(int)>(i0);

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i0);

        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i0);

        $f4 = staticinvoke <android.util.MathUtils: float dist(float,float,float,float)>($f0, $f1, $f2, $f3);

        $d0 = (double) $f4;

        return $d0;
    }

    public static boolean isTimedOut(android.view.MotionEvent, android.view.MotionEvent, int)
    {
        android.view.MotionEvent r0, r1;
        int i0;
        long l1, $l2, $l3, $l4;
        byte $b5;
        boolean $z0;

        r0 := @parameter0: android.view.MotionEvent;

        r1 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        $l2 = virtualinvoke r1.<android.view.MotionEvent: long getEventTime()>();

        $l3 = virtualinvoke r0.<android.view.MotionEvent: long getEventTime()>();

        l1 = $l2 - $l3;

        $l4 = (long) i0;

        $b5 = l1 cmp $l4;

        if $b5 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isSamePointerContext(android.view.MotionEvent, android.view.MotionEvent)
    {
        android.view.MotionEvent r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @parameter0: android.view.MotionEvent;

        r1 := @parameter1: android.view.MotionEvent;

        $i0 = virtualinvoke r0.<android.view.MotionEvent: int getPointerIdBits()>();

        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getPointerIdBits()>();

        if $i0 != $i1 goto label1;

        $i2 = virtualinvoke r0.<android.view.MotionEvent: int getActionIndex()>();

        $i3 = virtualinvoke r0.<android.view.MotionEvent: int getPointerId(int)>($i2);

        $i4 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        $i5 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>($i4);

        if $i3 != $i5 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isDraggingGesture(float, float, float, float, float, float, float, float, float)
    {
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8;
        double $d0, $d1, $d2, $d3;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        f5 := @parameter5: float;

        f6 := @parameter6: float;

        f7 := @parameter7: float;

        f8 := @parameter8: float;

        f9 = f4 - f0;

        f10 = f5 - f1;

        $b0 = f9 cmpl 0.0F;

        if $b0 != 0 goto label01;

        $b8 = f10 cmpl 0.0F;

        if $b8 != 0 goto label01;

        return 1;

     label01:
        $f22 = f9 * f9;

        $f20 = f10 * f10;

        $f21 = $f22 + $f20;

        $d1 = (double) $f21;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d1);

        f11 = (float) $d0;

        $b2 = f11 cmpl 0.0F;

        if $b2 <= 0 goto label02;

        $f30 = f9 / f11;

        goto label03;

     label02:
        $f30 = f9;

     label03:
        f12 = $f30;

        $b1 = f11 cmpl 0.0F;

        if $b1 <= 0 goto label04;

        $f29 = f10 / f11;

        goto label05;

     label04:
        $f29 = f10;

     label05:
        f13 = $f29;

        f14 = f6 - f2;

        f15 = f7 - f3;

        $b3 = f14 cmpl 0.0F;

        if $b3 != 0 goto label06;

        $b7 = f15 cmpl 0.0F;

        if $b7 != 0 goto label06;

        return 1;

     label06:
        $f25 = f14 * f14;

        $f23 = f15 * f15;

        $f24 = $f25 + $f23;

        $d2 = (double) $f24;

        $d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d2);

        f17 = (float) $d3;

        $b4 = f17 cmpl 0.0F;

        if $b4 <= 0 goto label07;

        $f31 = f14 / f17;

        goto label08;

     label07:
        $f31 = f14;

     label08:
        f16 = $f31;

        $b5 = f17 cmpl 0.0F;

        if $b5 <= 0 goto label09;

        $f26 = f15 / f17;

        goto label10;

     label09:
        $f26 = f15;

     label10:
        f19 = $f26;

        $f28 = f12 * f16;

        $f27 = f13 * f19;

        f18 = $f28 + $f27;

        $b6 = f18 cmpg f8;

        if $b6 >= 0 goto label11;

        return 0;

     label11:
        return 1;
    }
}
