public class com.android.server.location.GpsLocationProvider extends java.lang.Object implements com.android.server.location.LocationProviderInterface
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private static final boolean VERBOSE;
    private static final com.android.internal.location.ProviderProperties PROPERTIES;
    private static final int GPS_POSITION_MODE_STANDALONE;
    private static final int GPS_POSITION_MODE_MS_BASED;
    private static final int GPS_POSITION_MODE_MS_ASSISTED;
    private static final int GPS_POSITION_RECURRENCE_PERIODIC;
    private static final int GPS_POSITION_RECURRENCE_SINGLE;
    private static final int GPS_STATUS_NONE;
    private static final int GPS_STATUS_SESSION_BEGIN;
    private static final int GPS_STATUS_SESSION_END;
    private static final int GPS_STATUS_ENGINE_ON;
    private static final int GPS_STATUS_ENGINE_OFF;
    private static final int GPS_REQUEST_AGPS_DATA_CONN;
    private static final int GPS_RELEASE_AGPS_DATA_CONN;
    private static final int GPS_AGPS_DATA_CONNECTED;
    private static final int GPS_AGPS_DATA_CONN_DONE;
    private static final int GPS_AGPS_DATA_CONN_FAILED;
    private static final int LOCATION_INVALID;
    private static final int LOCATION_HAS_LAT_LONG;
    private static final int LOCATION_HAS_ALTITUDE;
    private static final int LOCATION_HAS_SPEED;
    private static final int LOCATION_HAS_BEARING;
    private static final int LOCATION_HAS_ACCURACY;
    private static final int GPS_DELETE_EPHEMERIS;
    private static final int GPS_DELETE_ALMANAC;
    private static final int GPS_DELETE_POSITION;
    private static final int GPS_DELETE_TIME;
    private static final int GPS_DELETE_IONO;
    private static final int GPS_DELETE_UTC;
    private static final int GPS_DELETE_HEALTH;
    private static final int GPS_DELETE_SVDIR;
    private static final int GPS_DELETE_SVSTEER;
    private static final int GPS_DELETE_SADATA;
    private static final int GPS_DELETE_RTI;
    private static final int GPS_DELETE_CELLDB_INFO;
    private static final int GPS_DELETE_ALL;
    private static final int GPS_CAPABILITY_SCHEDULING;
    private static final int GPS_CAPABILITY_MSB;
    private static final int GPS_CAPABILITY_MSA;
    private static final int GPS_CAPABILITY_SINGLE_SHOT;
    private static final int GPS_CAPABILITY_ON_DEMAND_TIME;
    private static final int AGPS_SUPL_MODE_MSA;
    private static final int AGPS_SUPL_MODE_MSB;
    private static final int AGPS_TYPE_SUPL;
    private static final int AGPS_TYPE_C2K;
    private static final int APN_INVALID;
    private static final int APN_IPV4;
    private static final int APN_IPV6;
    private static final int APN_IPV4V6;
    private static final int AGPS_DATA_CONNECTION_CLOSED;
    private static final int AGPS_DATA_CONNECTION_OPENING;
    private static final int AGPS_DATA_CONNECTION_OPEN;
    private static final int CHECK_LOCATION;
    private static final int ENABLE;
    private static final int SET_REQUEST;
    private static final int UPDATE_NETWORK_STATE;
    private static final int INJECT_NTP_TIME;
    private static final int DOWNLOAD_XTRA_DATA;
    private static final int UPDATE_LOCATION;
    private static final int ADD_LISTENER;
    private static final int REMOVE_LISTENER;
    private static final int INJECT_NTP_TIME_FINISHED;
    private static final int DOWNLOAD_XTRA_DATA_FINISHED;
    private static final int AGPS_RIL_REQUEST_SETID_IMSI;
    private static final int AGPS_RIL_REQUEST_SETID_MSISDN;
    private static final int AGPS_RIL_REQUEST_REFLOC_CELLID;
    private static final int AGPS_RIL_REQUEST_REFLOC_MAC;
    private static final int AGPS_REF_LOCATION_TYPE_GSM_CELLID;
    private static final int AGPS_REF_LOCATION_TYPE_UMTS_CELLID;
    private static final int AGPS_REG_LOCATION_TYPE_MAC;
    private static final int AGPS_SETID_TYPE_NONE;
    private static final int AGPS_SETID_TYPE_IMSI;
    private static final int AGPS_SETID_TYPE_MSISDN;
    private static final java.lang.String PROPERTIES_FILE_PREFIX;
    private static final java.lang.String PROPERTIES_FILE_SUFFIX;
    private static final java.lang.String DEFAULT_PROPERTIES_FILE;
    private static final int GPS_GEOFENCE_UNAVAILABLE;
    private static final int GPS_GEOFENCE_AVAILABLE;
    private static final int GPS_GEOFENCE_OPERATION_SUCCESS;
    private static final int GPS_GEOFENCE_ERROR_TOO_MANY_GEOFENCES;
    private static final int GPS_GEOFENCE_ERROR_ID_EXISTS;
    private static final int GPS_GEOFENCE_ERROR_ID_UNKNOWN;
    private static final int GPS_GEOFENCE_ERROR_INVALID_TRANSITION;
    private static final int GPS_GEOFENCE_ERROR_GENERIC;
    private static final int TCP_MIN_PORT;
    private static final int TCP_MAX_PORT;
    private static final int BATTERY_SAVER_MODE_NO_CHANGE;
    private static final int BATTERY_SAVER_MODE_DISABLED_WHEN_SCREEN_OFF;
    private static final java.lang.String BATTERY_SAVER_GPS_MODE;
    private java.lang.Object mLock;
    private int mLocationFlags;
    private int mStatus;
    private long mStatusUpdateTime;
    private static final long RECENT_FIX_TIMEOUT;
    private static final int NO_FIX_TIMEOUT;
    private static final int GPS_POLLING_THRESHOLD_INTERVAL;
    private static final long NTP_INTERVAL;
    private static final long RETRY_INTERVAL;
    private boolean mEnabled;
    private boolean mNetworkAvailable;
    private static final int STATE_PENDING_NETWORK;
    private static final int STATE_DOWNLOADING;
    private static final int STATE_IDLE;
    private int mInjectNtpTimePending;
    private int mDownloadXtraDataPending;
    private boolean mPeriodicTimeInjection;
    private boolean mNavigating;
    private boolean mEngineOn;
    private int mFixInterval;
    private boolean mStarted;
    private boolean mSingleShot;
    private int mEngineCapabilities;
    private boolean mSupportsXtra;
    private long mFixRequestTime;
    private int mTimeToFirstFix;
    private long mLastFixTime;
    private int mPositionMode;
    private com.android.internal.location.ProviderRequest mProviderRequest;
    private android.os.WorkSource mWorkSource;
    private boolean mDisableGps;
    private java.util.Properties mProperties;
    private java.lang.String mSuplServerHost;
    private int mSuplServerPort;
    private java.lang.String mC2KServerHost;
    private int mC2KServerPort;
    private boolean mSuplEsEnabled;
    private final android.content.Context mContext;
    private final android.util.NtpTrustedTime mNtpTime;
    private final android.location.ILocationManager mILocationManager;
    private android.location.Location mLocation;
    private android.os.Bundle mLocationExtras;
    private com.android.server.location.GpsStatusListenerHelper mListenerHelper;
    private android.os.Handler mHandler;
    private java.lang.String mAGpsApn;
    private int mApnIpType;
    private int mAGpsDataConnectionState;
    private java.net.InetAddress mAGpsDataConnectionIpAddr;
    private final android.net.ConnectivityManager mConnMgr;
    private final com.android.internal.location.GpsNetInitiatedHandler mNIHandler;
    private static final java.lang.String WAKELOCK_KEY;
    private final android.os.PowerManager$WakeLock mWakeLock;
    private static final java.lang.String ALARM_WAKEUP;
    private static final java.lang.String ALARM_TIMEOUT;
    private static final java.lang.String SIM_STATE_CHANGED;
    private final android.os.PowerManager mPowerManager;
    private final android.app.AlarmManager mAlarmManager;
    private final android.app.PendingIntent mWakeupIntent;
    private final android.app.PendingIntent mTimeoutIntent;
    private final com.android.internal.app.IAppOpsService mAppOpsService;
    private final com.android.internal.app.IBatteryStats mBatteryStats;
    private android.os.WorkSource mClientSource;
    private android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl;
    private final android.location.IGpsStatusProvider mGpsStatusProvider;
    private final com.android.server.location.GpsMeasurementsProvider mGpsMeasurementsProvider;
    private final com.android.server.location.GpsNavigationMessageProvider mGpsNavigationMessageProvider;
    private final android.content.BroadcastReceiver mBroadcastReceiver;
    private android.location.IGpsGeofenceHardware mGpsGeofenceBinder;
    private final android.location.INetInitiatedListener mNetInitiatedListener;
    private static final int MAX_SVS;
    private static final int EPHEMERIS_MASK;
    private static final int ALMANAC_MASK;
    private static final int USED_FOR_FIX_MASK;
    private int[] mSvs;
    private float[] mSnrs;
    private float[] mSvElevations;
    private float[] mSvAzimuths;
    private int[] mSvMasks;
    private int mSvCount;
    private byte[] mNmeaBuffer;

    public android.location.IGpsStatusProvider getGpsStatusProvider()
    {
        com.android.server.location.GpsLocationProvider r0;
        android.location.IGpsStatusProvider $r1;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        $r1 = r0.<com.android.server.location.GpsLocationProvider: android.location.IGpsStatusProvider mGpsStatusProvider>;

        return $r1;
    }

    public android.location.IGpsGeofenceHardware getGpsGeofenceProxy()
    {
        com.android.server.location.GpsLocationProvider r0;
        android.location.IGpsGeofenceHardware $r1;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        $r1 = r0.<com.android.server.location.GpsLocationProvider: android.location.IGpsGeofenceHardware mGpsGeofenceBinder>;

        return $r1;
    }

    public com.android.server.location.GpsMeasurementsProvider getGpsMeasurementsProvider()
    {
        com.android.server.location.GpsLocationProvider r0;
        com.android.server.location.GpsMeasurementsProvider $r1;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        $r1 = r0.<com.android.server.location.GpsLocationProvider: com.android.server.location.GpsMeasurementsProvider mGpsMeasurementsProvider>;

        return $r1;
    }

    public com.android.server.location.GpsNavigationMessageProvider getGpsNavigationMessageProvider()
    {
        com.android.server.location.GpsLocationProvider r0;
        com.android.server.location.GpsNavigationMessageProvider $r1;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        $r1 = r0.<com.android.server.location.GpsLocationProvider: com.android.server.location.GpsNavigationMessageProvider mGpsNavigationMessageProvider>;

        return $r1;
    }

    private void checkSmsSuplInit(android.content.Intent)
    {
        com.android.server.location.GpsLocationProvider r0;
        android.content.Intent r1;
        android.telephony.SmsMessage[] r2;
        int i0, $i1, $i2;
        byte[] r3;
        android.telephony.SmsMessage $r4;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        r1 := @parameter0: android.content.Intent;

        r2 = staticinvoke <android.provider.Telephony$Sms$Intents: android.telephony.SmsMessage[] getMessagesFromIntent(android.content.Intent)>(r1);

        i0 = 0;

     label1:
        $i1 = lengthof r2;

        if i0 >= $i1 goto label2;

        $r4 = r2[i0];

        r3 = virtualinvoke $r4.<android.telephony.SmsMessage: byte[] getUserData()>();

        $i2 = lengthof r3;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void native_agps_ni_message(byte[],int)>(r3, $i2);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    private void checkWapSuplInit(android.content.Intent)
    {
        com.android.server.location.GpsLocationProvider r0;
        android.content.Intent r1;
        byte[] r2, $r4;
        java.lang.Object $r3;
        int $i0;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        r1 := @parameter0: android.content.Intent;

        $r3 = virtualinvoke r1.<android.content.Intent: java.lang.Object getExtra(java.lang.String)>("data");

        $r4 = (byte[]) $r3;

        r2 = (byte[]) $r4;

        $i0 = lengthof r2;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void native_agps_ni_message(byte[],int)>(r2, $i0);

        return;
    }

    private void updateLowPowerMode()
    {
        com.android.server.location.GpsLocationProvider r0;
        boolean z0, $z1, $z2, $z3, $z4;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        int $i0;
        android.os.PowerManager $r3, $r4;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        $r1 = r0.<com.android.server.location.GpsLocationProvider: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r2, "batterySaverGpsMode", 1);

        lookupswitch($i0)
        {
            case 1: goto label1;
            default: goto label4;
        };

     label1:
        $r3 = r0.<com.android.server.location.GpsLocationProvider: android.os.PowerManager mPowerManager>;

        $z1 = virtualinvoke $r3.<android.os.PowerManager: boolean isPowerSaveMode()>();

        if $z1 == 0 goto label2;

        $r4 = r0.<com.android.server.location.GpsLocationProvider: android.os.PowerManager mPowerManager>;

        $z3 = virtualinvoke $r4.<android.os.PowerManager: boolean isInteractive()>();

        if $z3 != 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        z0 = $z4;

        goto label5;

     label4:
        z0 = 0;

     label5:
        $z2 = r0.<com.android.server.location.GpsLocationProvider: boolean mDisableGps>;

        if z0 == $z2 goto label6;

        r0.<com.android.server.location.GpsLocationProvider: boolean mDisableGps> = z0;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void updateRequirements()>();

     label6:
        return;
    }

    public static boolean isSupported()
    {
        boolean $z0;

        $z0 = staticinvoke <com.android.server.location.GpsLocationProvider: boolean native_is_supported()>();

        return $z0;
    }

    private void reloadGpsProperties(android.content.Context, java.util.Properties)
    {
        com.android.server.location.GpsLocationProvider r0;
        android.content.Context r1;
        java.util.Properties r2, $r25;
        boolean z0, $z1, $z3;
        java.lang.String r3, r4, $r10, $r14, $r15, $r16, $r17, $r19, $r21, $r22, $r26, $r33, $r38, r42, r45;
        java.lang.StringBuilder $r7, $r8, $r9, $r11, $r12, $r13, $r20, $r23, $r24, $r27, $r28, $r29, $r30, $r31, $r34, $r35, $r36, $r39, $r40;
        int $i0, $i2, $i5, $i6;
        java.io.ByteArrayOutputStream $r18, r43;
        java.lang.NumberFormatException $r32, $r37;
        java.io.IOException $r41;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.util.Properties;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reset GPS properties, previous size = ");

        $i0 = virtualinvoke r2.<java.util.Properties: int size()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GpsLocationProvider", $r10);

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void loadPropertiesFromResource(android.content.Context,java.util.Properties)>(r1, r2);

        z0 = 0;

        r3 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.hardware.gps");

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z1 != 0 goto label01;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/etc/gps.");

        $r27 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".conf");

        r4 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        z0 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: boolean loadPropertiesFromFile(java.lang.String,java.util.Properties)>(r4, r2);

     label01:
        if z0 != 0 goto label02;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: boolean loadPropertiesFromFile(java.lang.String,java.util.Properties)>("/etc/gps.conf", r2);

     label02:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GPS properties reloaded, size = ");

        $i2 = virtualinvoke r2.<java.util.Properties: int size()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GpsLocationProvider", $r14);

        $r16 = virtualinvoke r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("SUPL_HOST");

        $r15 = virtualinvoke r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("SUPL_PORT");

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void setSuplHostPort(java.lang.String,java.lang.String)>($r16, $r15);

        $r17 = virtualinvoke r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("C2K_HOST");

        r0.<com.android.server.location.GpsLocationProvider: java.lang.String mC2KServerHost> = $r17;

        r42 = virtualinvoke r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("C2K_PORT");

        $r19 = r0.<com.android.server.location.GpsLocationProvider: java.lang.String mC2KServerHost>;

        if $r19 == null goto label06;

        if r42 == null goto label06;

     label03:
        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r42);

        r0.<com.android.server.location.GpsLocationProvider: int mC2KServerPort> = $i5;

     label04:
        goto label06;

     label05:
        $r37 := @caughtexception;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to parse C2K_PORT: ");

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GpsLocationProvider", $r38);

     label06:
        $r18 = new java.io.ByteArrayOutputStream;

        specialinvoke $r18.<java.io.ByteArrayOutputStream: void <init>(int)>(4096);

        r43 = $r18;

        virtualinvoke r2.<java.util.Properties: void store(java.io.OutputStream,java.lang.String)>(r43, null);

        $r21 = virtualinvoke r43.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        staticinvoke <com.android.server.location.GpsLocationProvider: void native_configuration_update(java.lang.String)>($r21);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("final config = ");

        $r22 = virtualinvoke r43.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GpsLocationProvider", $r26);

     label07:
        goto label09;

     label08:
        $r41 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GpsLocationProvider", "failed to dump properties contents");

     label09:
        $r25 = r0.<com.android.server.location.GpsLocationProvider: java.util.Properties mProperties>;

        r45 = virtualinvoke $r25.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("SUPL_ES");

        if r45 == null goto label15;

     label10:
        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r45);

        if $i6 != 1 goto label11;

        $z3 = 1;

        goto label12;

     label11:
        $z3 = 0;

     label12:
        r0.<com.android.server.location.GpsLocationProvider: boolean mSuplEsEnabled> = $z3;

     label13:
        goto label15;

     label14:
        $r32 := @caughtexception;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to parse SUPL_ES: ");

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r45);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GpsLocationProvider", $r33);

     label15:
        return;

        catch java.lang.NumberFormatException from label03 to label04 with label05;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.lang.NumberFormatException from label10 to label13 with label14;
    }

    private void loadPropertiesFromResource(android.content.Context, java.util.Properties)
    {
        com.android.server.location.GpsLocationProvider r0;
        android.content.Context r1;
        java.util.Properties r2;
        java.lang.String[] r3, r4, r6;
        int i0, i1, $i3;
        java.lang.String r5, $r11, $r14, $r16, $r17, $r18, $r20;
        android.content.res.Resources $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r12, $r13, $r15;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.util.Properties;

        $r7 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        r3 = virtualinvoke $r7.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236025);

        r4 = r3;

        i0 = lengthof r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r5 = r4[i1];

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GpsParamsResource: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GpsLocationProvider", $r11);

        r6 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>("=");

        $i3 = lengthof r6;

        if $i3 != 2 goto label2;

        $r16 = r6[0];

        $r18 = virtualinvoke $r16.<java.lang.String: java.lang.String trim()>();

        $r17 = virtualinvoke $r18.<java.lang.String: java.lang.String toUpperCase()>();

        $r20 = r6[1];

        virtualinvoke r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r17, $r20);

        goto label3;

     label2:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("malformed contents: ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GpsLocationProvider", $r14);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    private boolean loadPropertiesFromFile(java.lang.String, java.util.Properties)
    {
        com.android.server.location.GpsLocationProvider r0;
        java.lang.String r1, $r12;
        java.util.Properties r2;
        java.io.File r3, $r6;
        java.io.FileInputStream r4, $r7;
        java.lang.Throwable r5, $r13;
        java.io.IOException $r8;
        java.lang.StringBuilder $r9, $r10, $r11;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Properties;

     label1:
        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>(r1);

        r3 = $r6;

        r4 = null;

     label2:
        $r7 = new java.io.FileInputStream;

        specialinvoke $r7.<java.io.FileInputStream: void <init>(java.io.File)>(r3);

        r4 = $r7;

        virtualinvoke r2.<java.util.Properties: void load(java.io.InputStream)>(r4);

     label3:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        goto label6;

     label4:
        $r13 := @caughtexception;

        r5 = $r13;

     label5:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        throw r5;

     label6:
        goto label8;

     label7:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not open GPS configuration file ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GpsLocationProvider", $r12);

        return 0;

     label8:
        return 1;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
        catch java.io.IOException from label1 to label6 with label7;
    }

    public void <init>(android.content.Context, android.location.ILocationManager, android.os.Looper)
    {
        com.android.server.location.GpsLocationProvider r0;
        android.content.Context r1, $r23, $r29, $r32, $r36, $r46;
        android.location.ILocationManager r2;
        android.os.Looper r3;
        java.lang.Object $r4, $r26, $r33, $r38;
        long $l0;
        android.location.Location $r5, $r24;
        android.os.Bundle $r6, $r21;
        com.android.server.location.GpsLocationProvider$1 $r7;
        android.os.WorkSource $r8;
        com.android.server.location.GpsLocationProvider$2 $r9;
        com.android.server.location.GpsLocationProvider$3 $r10;
        com.android.server.location.GpsLocationProvider$4 $r11;
        com.android.server.location.GpsLocationProvider$5 $r12;
        com.android.server.location.GpsLocationProvider$9 $r13;
        com.android.server.location.GpsLocationProvider$10 $r14;
        float[] $r15, $r17, $r18;
        int[] $r16, $r20;
        byte[] $r19;
        android.util.NtpTrustedTime $r22;
        android.os.PowerManager $r25, $r28;
        android.os.PowerManager$WakeLock $r27, $r30;
        android.content.Intent $r31, $r35;
        android.app.AlarmManager $r34;
        android.app.PendingIntent $r37, $r40;
        android.net.ConnectivityManager $r39;
        android.os.IBinder $r41, $r43;
        com.android.internal.app.IBatteryStats $r42;
        com.android.internal.app.IAppOpsService $r44;
        com.android.internal.location.GpsNetInitiatedHandler $r45;
        java.util.Properties $r47, $r48;
        com.android.server.location.GpsLocationProvider$6 $r49;
        com.android.server.location.GpsLocationProvider$ProviderHandler $r50;
        android.location.INetInitiatedListener $r51;
        boolean $z0;
        android.os.Handler $r52;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.location.ILocationManager;

        r3 := @parameter2: android.os.Looper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<com.android.server.location.GpsLocationProvider: java.lang.Object mLock> = $r4;

        r0.<com.android.server.location.GpsLocationProvider: int mLocationFlags> = 0;

        r0.<com.android.server.location.GpsLocationProvider: int mStatus> = 1;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.server.location.GpsLocationProvider: long mStatusUpdateTime> = $l0;

        r0.<com.android.server.location.GpsLocationProvider: int mInjectNtpTimePending> = 0;

        r0.<com.android.server.location.GpsLocationProvider: int mDownloadXtraDataPending> = 0;

        r0.<com.android.server.location.GpsLocationProvider: int mFixInterval> = 1000;

        r0.<com.android.server.location.GpsLocationProvider: long mFixRequestTime> = 0L;

        r0.<com.android.server.location.GpsLocationProvider: int mTimeToFirstFix> = 0;

        r0.<com.android.server.location.GpsLocationProvider: com.android.internal.location.ProviderRequest mProviderRequest> = null;

        r0.<com.android.server.location.GpsLocationProvider: android.os.WorkSource mWorkSource> = null;

        r0.<com.android.server.location.GpsLocationProvider: boolean mDisableGps> = 0;

        r0.<com.android.server.location.GpsLocationProvider: int mSuplServerPort> = 0;

        r0.<com.android.server.location.GpsLocationProvider: boolean mSuplEsEnabled> = 0;

        $r5 = new android.location.Location;

        specialinvoke $r5.<android.location.Location: void <init>(java.lang.String)>("gps");

        r0.<com.android.server.location.GpsLocationProvider: android.location.Location mLocation> = $r5;

        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>()>();

        r0.<com.android.server.location.GpsLocationProvider: android.os.Bundle mLocationExtras> = $r6;

        $r7 = new com.android.server.location.GpsLocationProvider$1;

        specialinvoke $r7.<com.android.server.location.GpsLocationProvider$1: void <init>(com.android.server.location.GpsLocationProvider)>(r0);

        r0.<com.android.server.location.GpsLocationProvider: com.android.server.location.GpsStatusListenerHelper mListenerHelper> = $r7;

        $r8 = new android.os.WorkSource;

        specialinvoke $r8.<android.os.WorkSource: void <init>()>();

        r0.<com.android.server.location.GpsLocationProvider: android.os.WorkSource mClientSource> = $r8;

        $r9 = new com.android.server.location.GpsLocationProvider$2;

        specialinvoke $r9.<com.android.server.location.GpsLocationProvider$2: void <init>(com.android.server.location.GpsLocationProvider)>(r0);

        r0.<com.android.server.location.GpsLocationProvider: android.location.IGpsStatusProvider mGpsStatusProvider> = $r9;

        $r10 = new com.android.server.location.GpsLocationProvider$3;

        specialinvoke $r10.<com.android.server.location.GpsLocationProvider$3: void <init>(com.android.server.location.GpsLocationProvider)>(r0);

        r0.<com.android.server.location.GpsLocationProvider: com.android.server.location.GpsMeasurementsProvider mGpsMeasurementsProvider> = $r10;

        $r11 = new com.android.server.location.GpsLocationProvider$4;

        specialinvoke $r11.<com.android.server.location.GpsLocationProvider$4: void <init>(com.android.server.location.GpsLocationProvider)>(r0);

        r0.<com.android.server.location.GpsLocationProvider: com.android.server.location.GpsNavigationMessageProvider mGpsNavigationMessageProvider> = $r11;

        $r12 = new com.android.server.location.GpsLocationProvider$5;

        specialinvoke $r12.<com.android.server.location.GpsLocationProvider$5: void <init>(com.android.server.location.GpsLocationProvider)>(r0);

        r0.<com.android.server.location.GpsLocationProvider: android.content.BroadcastReceiver mBroadcastReceiver> = $r12;

        $r13 = new com.android.server.location.GpsLocationProvider$9;

        specialinvoke $r13.<com.android.server.location.GpsLocationProvider$9: void <init>(com.android.server.location.GpsLocationProvider)>(r0);

        r0.<com.android.server.location.GpsLocationProvider: android.location.IGpsGeofenceHardware mGpsGeofenceBinder> = $r13;

        $r14 = new com.android.server.location.GpsLocationProvider$10;

        specialinvoke $r14.<com.android.server.location.GpsLocationProvider$10: void <init>(com.android.server.location.GpsLocationProvider)>(r0);

        r0.<com.android.server.location.GpsLocationProvider: android.location.INetInitiatedListener mNetInitiatedListener> = $r14;

        $r16 = newarray (int)[32];

        r0.<com.android.server.location.GpsLocationProvider: int[] mSvs> = $r16;

        $r15 = newarray (float)[32];

        r0.<com.android.server.location.GpsLocationProvider: float[] mSnrs> = $r15;

        $r18 = newarray (float)[32];

        r0.<com.android.server.location.GpsLocationProvider: float[] mSvElevations> = $r18;

        $r17 = newarray (float)[32];

        r0.<com.android.server.location.GpsLocationProvider: float[] mSvAzimuths> = $r17;

        $r20 = newarray (int)[3];

        r0.<com.android.server.location.GpsLocationProvider: int[] mSvMasks> = $r20;

        $r19 = newarray (byte)[120];

        r0.<com.android.server.location.GpsLocationProvider: byte[] mNmeaBuffer> = $r19;

        r0.<com.android.server.location.GpsLocationProvider: android.content.Context mContext> = r1;

        $r22 = staticinvoke <android.util.NtpTrustedTime: android.util.NtpTrustedTime getInstance(android.content.Context)>(r1);

        r0.<com.android.server.location.GpsLocationProvider: android.util.NtpTrustedTime mNtpTime> = $r22;

        r0.<com.android.server.location.GpsLocationProvider: android.location.ILocationManager mILocationManager> = r2;

        $r24 = r0.<com.android.server.location.GpsLocationProvider: android.location.Location mLocation>;

        $r21 = r0.<com.android.server.location.GpsLocationProvider: android.os.Bundle mLocationExtras>;

        virtualinvoke $r24.<android.location.Location: void setExtras(android.os.Bundle)>($r21);

        $r23 = r0.<com.android.server.location.GpsLocationProvider: android.content.Context mContext>;

        $r26 = virtualinvoke $r23.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r25 = (android.os.PowerManager) $r26;

        r0.<com.android.server.location.GpsLocationProvider: android.os.PowerManager mPowerManager> = $r25;

        $r28 = r0.<com.android.server.location.GpsLocationProvider: android.os.PowerManager mPowerManager>;

        $r27 = virtualinvoke $r28.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "GpsLocationProvider");

        r0.<com.android.server.location.GpsLocationProvider: android.os.PowerManager$WakeLock mWakeLock> = $r27;

        $r30 = r0.<com.android.server.location.GpsLocationProvider: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r30.<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>(1);

        $r29 = r0.<com.android.server.location.GpsLocationProvider: android.content.Context mContext>;

        $r33 = virtualinvoke $r29.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r34 = (android.app.AlarmManager) $r33;

        r0.<com.android.server.location.GpsLocationProvider: android.app.AlarmManager mAlarmManager> = $r34;

        $r32 = r0.<com.android.server.location.GpsLocationProvider: android.content.Context mContext>;

        $r31 = new android.content.Intent;

        specialinvoke $r31.<android.content.Intent: void <init>(java.lang.String)>("com.android.internal.location.ALARM_WAKEUP");

        $r37 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r32, 0, $r31, 0);

        r0.<com.android.server.location.GpsLocationProvider: android.app.PendingIntent mWakeupIntent> = $r37;

        $r36 = r0.<com.android.server.location.GpsLocationProvider: android.content.Context mContext>;

        $r35 = new android.content.Intent;

        specialinvoke $r35.<android.content.Intent: void <init>(java.lang.String)>("com.android.internal.location.ALARM_TIMEOUT");

        $r40 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r36, 0, $r35, 0);

        r0.<com.android.server.location.GpsLocationProvider: android.app.PendingIntent mTimeoutIntent> = $r40;

        $r38 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r39 = (android.net.ConnectivityManager) $r38;

        r0.<com.android.server.location.GpsLocationProvider: android.net.ConnectivityManager mConnMgr> = $r39;

        $r43 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("appops");

        $r44 = staticinvoke <com.android.internal.app.IAppOpsService$Stub: com.android.internal.app.IAppOpsService asInterface(android.os.IBinder)>($r43);

        r0.<com.android.server.location.GpsLocationProvider: com.android.internal.app.IAppOpsService mAppOpsService> = $r44;

        $r41 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("batterystats");

        $r42 = staticinvoke <com.android.internal.app.IBatteryStats$Stub: com.android.internal.app.IBatteryStats asInterface(android.os.IBinder)>($r41);

        r0.<com.android.server.location.GpsLocationProvider: com.android.internal.app.IBatteryStats mBatteryStats> = $r42;

        $r48 = new java.util.Properties;

        specialinvoke $r48.<java.util.Properties: void <init>()>();

        r0.<com.android.server.location.GpsLocationProvider: java.util.Properties mProperties> = $r48;

        $r46 = r0.<com.android.server.location.GpsLocationProvider: android.content.Context mContext>;

        $r47 = r0.<com.android.server.location.GpsLocationProvider: java.util.Properties mProperties>;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void reloadGpsProperties(android.content.Context,java.util.Properties)>($r46, $r47);

        $r45 = new com.android.internal.location.GpsNetInitiatedHandler;

        $r51 = r0.<com.android.server.location.GpsLocationProvider: android.location.INetInitiatedListener mNetInitiatedListener>;

        $z0 = r0.<com.android.server.location.GpsLocationProvider: boolean mSuplEsEnabled>;

        specialinvoke $r45.<com.android.internal.location.GpsNetInitiatedHandler: void <init>(android.content.Context,android.location.INetInitiatedListener,boolean)>(r1, $r51, $z0);

        r0.<com.android.server.location.GpsLocationProvider: com.android.internal.location.GpsNetInitiatedHandler mNIHandler> = $r45;

        $r50 = new com.android.server.location.GpsLocationProvider$ProviderHandler;

        specialinvoke $r50.<com.android.server.location.GpsLocationProvider$ProviderHandler: void <init>(com.android.server.location.GpsLocationProvider,android.os.Looper)>(r0, r3);

        r0.<com.android.server.location.GpsLocationProvider: android.os.Handler mHandler> = $r50;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void listenForBroadcasts()>();

        $r52 = r0.<com.android.server.location.GpsLocationProvider: android.os.Handler mHandler>;

        $r49 = new com.android.server.location.GpsLocationProvider$6;

        specialinvoke $r49.<com.android.server.location.GpsLocationProvider$6: void <init>(com.android.server.location.GpsLocationProvider)>(r0);

        virtualinvoke $r52.<android.os.Handler: boolean post(java.lang.Runnable)>($r49);

        return;
    }

    private void listenForBroadcasts()
    {
        com.android.server.location.GpsLocationProvider r0;
        android.content.IntentFilter r1, $r3, $r8, $r13, r19, r20;
        android.os.Handler $r4, $r9, $r14;
        android.content.BroadcastReceiver $r5, $r10, $r15;
        android.content.Context $r6, $r11, $r17;
        android.content.IntentFilter$MalformedMimeTypeException $r18;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        $r3 = new android.content.IntentFilter;

        specialinvoke $r3.<android.content.IntentFilter: void <init>()>();

        r1 = $r3;

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.DATA_SMS_RECEIVED");

        virtualinvoke r1.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("sms");

        virtualinvoke r1.<android.content.IntentFilter: void addDataAuthority(java.lang.String,java.lang.String)>("localhost", "7275");

        $r6 = r0.<com.android.server.location.GpsLocationProvider: android.content.Context mContext>;

        $r5 = r0.<com.android.server.location.GpsLocationProvider: android.content.BroadcastReceiver mBroadcastReceiver>;

        $r4 = r0.<com.android.server.location.GpsLocationProvider: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r5, r1, null, $r4);

        $r8 = new android.content.IntentFilter;

        specialinvoke $r8.<android.content.IntentFilter: void <init>()>();

        r19 = $r8;

        virtualinvoke r19.<android.content.IntentFilter: void addAction(java.lang.String)>("android.provider.Telephony.WAP_PUSH_RECEIVED");

     label1:
        virtualinvoke r19.<android.content.IntentFilter: void addDataType(java.lang.String)>("application/vnd.omaloc-supl-init");

     label2:
        goto label4;

     label3:
        $r18 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GpsLocationProvider", "Malformed SUPL init mime type");

     label4:
        $r11 = r0.<com.android.server.location.GpsLocationProvider: android.content.Context mContext>;

        $r10 = r0.<com.android.server.location.GpsLocationProvider: android.content.BroadcastReceiver mBroadcastReceiver>;

        $r9 = r0.<com.android.server.location.GpsLocationProvider: android.os.Handler mHandler>;

        virtualinvoke $r11.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r10, r19, null, $r9);

        $r13 = new android.content.IntentFilter;

        specialinvoke $r13.<android.content.IntentFilter: void <init>()>();

        r20 = $r13;

        virtualinvoke r20.<android.content.IntentFilter: void addAction(java.lang.String)>("com.android.internal.location.ALARM_WAKEUP");

        virtualinvoke r20.<android.content.IntentFilter: void addAction(java.lang.String)>("com.android.internal.location.ALARM_TIMEOUT");

        virtualinvoke r20.<android.content.IntentFilter: void addAction(java.lang.String)>("android.net.conn.CONNECTIVITY_CHANGE");

        virtualinvoke r20.<android.content.IntentFilter: void addAction(java.lang.String)>("android.os.action.POWER_SAVE_MODE_CHANGED");

        virtualinvoke r20.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_OFF");

        virtualinvoke r20.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_ON");

        virtualinvoke r20.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SIM_STATE_CHANGED");

        virtualinvoke r20.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.ACTION_SUBINFO_CONTENT_CHANGE");

        virtualinvoke r20.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.ACTION_SUBINFO_RECORD_UPDATED");

        $r17 = r0.<com.android.server.location.GpsLocationProvider: android.content.Context mContext>;

        $r15 = r0.<com.android.server.location.GpsLocationProvider: android.content.BroadcastReceiver mBroadcastReceiver>;

        $r14 = r0.<com.android.server.location.GpsLocationProvider: android.os.Handler mHandler>;

        virtualinvoke $r17.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r15, r20, null, $r14);

        return;

        catch android.content.IntentFilter$MalformedMimeTypeException from label1 to label2 with label3;
    }

    public java.lang.String getName()
    {
        com.android.server.location.GpsLocationProvider r0;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        return "gps";
    }

    public com.android.internal.location.ProviderProperties getProperties()
    {
        com.android.server.location.GpsLocationProvider r0;
        com.android.internal.location.ProviderProperties $r1;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        $r1 = <com.android.server.location.GpsLocationProvider: com.android.internal.location.ProviderProperties PROPERTIES>;

        return $r1;
    }

    public void updateNetworkState(int, android.net.NetworkInfo)
    {
        com.android.server.location.GpsLocationProvider r0;
        int i0;
        android.net.NetworkInfo r1;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.NetworkInfo;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void sendMessage(int,int,java.lang.Object)>(4, i0, r1);

        return;
    }

    private void handleUpdateNetworkState(int, android.net.NetworkInfo)
    {
        com.android.server.location.GpsLocationProvider r0;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i10, $i11;
        android.net.NetworkInfo r1;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.lang.String r2, $r5, $r7, $r8, $r14, $r18, $r21, r22, r23;
        java.lang.StringBuilder $r3, $r4, $r6, $r13, $r15, $r17, $r19, $r20;
        java.lang.Object[] $r9;
        java.lang.Integer $r10;
        android.content.Context $r11;
        android.content.ContentResolver $r12;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.NetworkInfo;

        if i0 != 2 goto label01;

        $z12 = 1;

        goto label02;

     label01:
        $z12 = 0;

     label02:
        r0.<com.android.server.location.GpsLocationProvider: boolean mNetworkAvailable> = $z12;

        $z2 = <com.android.server.location.GpsLocationProvider: boolean DEBUG>;

        if $z2 == 0 goto label05;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateNetworkState ");

        $z11 = r0.<com.android.server.location.GpsLocationProvider: boolean mNetworkAvailable>;

        if $z11 == 0 goto label03;

        $r21 = "available";

        goto label04;

     label03:
        $r21 = "unavailable";

     label04:
        $r15 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" info: ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GpsLocationProvider", $r18);

     label05:
        if r1 == null goto label11;

        $r11 = r0.<com.android.server.location.GpsLocationProvider: android.content.Context mContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i10 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r12, "mobile_data", 1);

        if $i10 != 1 goto label06;

        $z9 = 1;

        goto label07;

     label06:
        $z9 = 0;

     label07:
        z0 = $z9;

        $z6 = virtualinvoke r1.<android.net.NetworkInfo: boolean isAvailable()>();

        if $z6 == 0 goto label08;

        if z0 == 0 goto label08;

        $z10 = 1;

        goto label09;

     label08:
        $z10 = 0;

     label09:
        z1 = $z10;

        r2 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: java.lang.String getSelectedApn()>();

        if r2 != null goto label10;

        r2 = "dummy-apn";

     label10:
        $z8 = virtualinvoke r1.<android.net.NetworkInfo: boolean isConnected()>();

        $i11 = virtualinvoke r1.<android.net.NetworkInfo: int getType()>();

        $z7 = virtualinvoke r1.<android.net.NetworkInfo: boolean isRoaming()>();

        $r14 = virtualinvoke r1.<android.net.NetworkInfo: java.lang.String getExtraInfo()>();

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void native_update_network_state(boolean,int,boolean,boolean,java.lang.String,java.lang.String)>($z8, $i11, $z7, z1, $r14, r2);

     label11:
        if r1 == null goto label15;

        $i3 = virtualinvoke r1.<android.net.NetworkInfo: int getType()>();

        if $i3 != 3 goto label15;

        $i4 = r0.<com.android.server.location.GpsLocationProvider: int mAGpsDataConnectionState>;

        if $i4 != 1 goto label15;

        $z4 = r0.<com.android.server.location.GpsLocationProvider: boolean mNetworkAvailable>;

        if $z4 == 0 goto label14;

        r22 = virtualinvoke r1.<android.net.NetworkInfo: java.lang.String getExtraInfo()>();

        if r22 != null goto label12;

        r22 = "dummy-apn";

     label12:
        r0.<com.android.server.location.GpsLocationProvider: java.lang.String mAGpsApn> = r22;

        $i6 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: int getApnIpType(java.lang.String)>(r22);

        r0.<com.android.server.location.GpsLocationProvider: int mApnIpType> = $i6;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void setRouting()>();

        $z5 = <com.android.server.location.GpsLocationProvider: boolean DEBUG>;

        if $z5 == 0 goto label13;

        $r9 = newarray (java.lang.Object)[2];

        $r8 = r0.<com.android.server.location.GpsLocationProvider: java.lang.String mAGpsApn>;

        $r9[0] = $r8;

        $i8 = r0.<com.android.server.location.GpsLocationProvider: int mApnIpType>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r9[1] = $r10;

        r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("native_agps_data_conn_open: mAgpsApn=%s, mApnIpType=%s", $r9);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GpsLocationProvider", r23);

     label13:
        $r7 = r0.<com.android.server.location.GpsLocationProvider: java.lang.String mAGpsApn>;

        $i7 = r0.<com.android.server.location.GpsLocationProvider: int mApnIpType>;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void native_agps_data_conn_open(java.lang.String,int)>($r7, $i7);

        r0.<com.android.server.location.GpsLocationProvider: int mAGpsDataConnectionState> = 2;

        goto label15;

     label14:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("call native_agps_data_conn_failed, info: ");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GpsLocationProvider", $r5);

        r0.<com.android.server.location.GpsLocationProvider: java.lang.String mAGpsApn> = null;

        r0.<com.android.server.location.GpsLocationProvider: int mApnIpType> = 0;

        r0.<com.android.server.location.GpsLocationProvider: int mAGpsDataConnectionState> = 0;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void native_agps_data_conn_failed()>();

     label15:
        $z3 = r0.<com.android.server.location.GpsLocationProvider: boolean mNetworkAvailable>;

        if $z3 == 0 goto label17;

        $i1 = r0.<com.android.server.location.GpsLocationProvider: int mInjectNtpTimePending>;

        if $i1 != 0 goto label16;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void sendMessage(int,int,java.lang.Object)>(5, 0, null);

     label16:
        $i2 = r0.<com.android.server.location.GpsLocationProvider: int mDownloadXtraDataPending>;

        if $i2 != 0 goto label17;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void sendMessage(int,int,java.lang.Object)>(6, 0, null);

     label17:
        return;
    }

    private void handleInjectNtpTime()
    {
        com.android.server.location.GpsLocationProvider r0;
        int $i0;
        boolean $z0;
        android.os.PowerManager$WakeLock $r1;
        com.android.server.location.GpsLocationProvider$7 $r2;
        java.util.concurrent.Executor $r3;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        $i0 = r0.<com.android.server.location.GpsLocationProvider: int mInjectNtpTimePending>;

        if $i0 != 1 goto label1;

        return;

     label1:
        $z0 = r0.<com.android.server.location.GpsLocationProvider: boolean mNetworkAvailable>;

        if $z0 != 0 goto label2;

        r0.<com.android.server.location.GpsLocationProvider: int mInjectNtpTimePending> = 0;

        return;

     label2:
        r0.<com.android.server.location.GpsLocationProvider: int mInjectNtpTimePending> = 1;

        $r1 = r0.<com.android.server.location.GpsLocationProvider: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r1.<android.os.PowerManager$WakeLock: void acquire()>();

        $r3 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r2 = new com.android.server.location.GpsLocationProvider$7;

        specialinvoke $r2.<com.android.server.location.GpsLocationProvider$7: void <init>(com.android.server.location.GpsLocationProvider)>(r0);

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r2);

        return;
    }

    private void handleDownloadXtraData()
    {
        com.android.server.location.GpsLocationProvider r0;
        int $i0;
        boolean $z0;
        android.os.PowerManager$WakeLock $r1;
        com.android.server.location.GpsLocationProvider$8 $r2;
        java.util.concurrent.Executor $r3;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        $i0 = r0.<com.android.server.location.GpsLocationProvider: int mDownloadXtraDataPending>;

        if $i0 != 1 goto label1;

        return;

     label1:
        $z0 = r0.<com.android.server.location.GpsLocationProvider: boolean mNetworkAvailable>;

        if $z0 != 0 goto label2;

        r0.<com.android.server.location.GpsLocationProvider: int mDownloadXtraDataPending> = 0;

        return;

     label2:
        r0.<com.android.server.location.GpsLocationProvider: int mDownloadXtraDataPending> = 1;

        $r1 = r0.<com.android.server.location.GpsLocationProvider: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r1.<android.os.PowerManager$WakeLock: void acquire()>();

        $r3 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r2 = new com.android.server.location.GpsLocationProvider$8;

        specialinvoke $r2.<com.android.server.location.GpsLocationProvider$8: void <init>(com.android.server.location.GpsLocationProvider)>(r0);

        interfaceinvoke $r3.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r2);

        return;
    }

    private void handleUpdateLocation(android.location.Location)
    {
        com.android.server.location.GpsLocationProvider r0;
        android.location.Location r1;
        boolean $z0;
        double $d0, $d1;
        float $f0;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        r1 := @parameter0: android.location.Location;

        $z0 = virtualinvoke r1.<android.location.Location: boolean hasAccuracy()>();

        if $z0 == 0 goto label1;

        $d0 = virtualinvoke r1.<android.location.Location: double getLatitude()>();

        $d1 = virtualinvoke r1.<android.location.Location: double getLongitude()>();

        $f0 = virtualinvoke r1.<android.location.Location: float getAccuracy()>();

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void native_inject_location(double,double,float)>($d0, $d1, $f0);

     label1:
        return;
    }

    public void enable()
    {
        com.android.server.location.GpsLocationProvider r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;
        boolean $z0;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        $r3 = r0.<com.android.server.location.GpsLocationProvider: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $z0 = r0.<com.android.server.location.GpsLocationProvider: boolean mEnabled>;

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        r0.<com.android.server.location.GpsLocationProvider: boolean mEnabled> = 1;

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void sendMessage(int,int,java.lang.Object)>(2, 1, null);

        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void setSuplHostPort(java.lang.String, java.lang.String)
    {
        com.android.server.location.GpsLocationProvider r0;
        java.lang.String r1, r2, $r4, $r5, $r10;
        int $i0, $i1, $i2, $i3;
        java.lang.NumberFormatException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r1 == null goto label1;

        r0.<com.android.server.location.GpsLocationProvider: java.lang.String mSuplServerHost> = r1;

     label1:
        if r2 == null goto label5;

     label2:
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

        r0.<com.android.server.location.GpsLocationProvider: int mSuplServerPort> = $i3;

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to parse SUPL_PORT: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GpsLocationProvider", $r10);

     label5:
        $r4 = r0.<com.android.server.location.GpsLocationProvider: java.lang.String mSuplServerHost>;

        if $r4 == null goto label6;

        $i0 = r0.<com.android.server.location.GpsLocationProvider: int mSuplServerPort>;

        if $i0 <= 0 goto label6;

        $i1 = r0.<com.android.server.location.GpsLocationProvider: int mSuplServerPort>;

        if $i1 > 65535 goto label6;

        $r5 = r0.<com.android.server.location.GpsLocationProvider: java.lang.String mSuplServerHost>;

        $i2 = r0.<com.android.server.location.GpsLocationProvider: int mSuplServerPort>;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void native_set_agps_server(int,java.lang.String,int)>(1, $r5, $i2);

     label6:
        return;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    private int getSuplMode(java.util.Properties, boolean, boolean)
    {
        com.android.server.location.GpsLocationProvider r0;
        java.util.Properties r1;
        boolean z0, z1, $z2, $z3, $z4;
        java.lang.String r2, $r7;
        int i0, $i1, $i2;
        java.lang.NumberFormatException $r4;
        java.lang.StringBuilder $r5, $r6, $r8;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        r1 := @parameter0: java.util.Properties;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        if z0 == 0 goto label6;

        r2 = virtualinvoke r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("SUPL_MODE");

        i0 = 0;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z2 != 0 goto label4;

     label1:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to parse SUPL_MODE: ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GpsLocationProvider", $r7);

        return 0;

     label4:
        if z1 == 0 goto label5;

        $z4 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: boolean hasCapability(int)>(4);

        if $z4 == 0 goto label5;

        $i2 = i0 & 2;

        if $i2 == 0 goto label5;

        return 2;

     label5:
        $z3 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: boolean hasCapability(int)>(2);

        if $z3 == 0 goto label6;

        $i1 = i0 & 1;

        if $i1 == 0 goto label6;

        return 1;

     label6:
        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private void handleEnable()
    {
        com.android.server.location.GpsLocationProvider r0;
        boolean z0, $z1, $z2;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r8;
        java.lang.String $r4, $r5, $r6, $r7;
        int $i1, $i2;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        $z1 = <com.android.server.location.GpsLocationProvider: boolean DEBUG>;

        if $z1 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GpsLocationProvider", "handleEnable");

     label1:
        z0 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: boolean native_init()>();

        if z0 == 0 goto label3;

        $z2 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: boolean native_supports_xtra()>();

        r0.<com.android.server.location.GpsLocationProvider: boolean mSupportsXtra> = $z2;

        $r4 = r0.<com.android.server.location.GpsLocationProvider: java.lang.String mSuplServerHost>;

        if $r4 == null goto label2;

        $r7 = r0.<com.android.server.location.GpsLocationProvider: java.lang.String mSuplServerHost>;

        $i2 = r0.<com.android.server.location.GpsLocationProvider: int mSuplServerPort>;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void native_set_agps_server(int,java.lang.String,int)>(1, $r7, $i2);

     label2:
        $r5 = r0.<com.android.server.location.GpsLocationProvider: java.lang.String mC2KServerHost>;

        if $r5 == null goto label9;

        $r6 = r0.<com.android.server.location.GpsLocationProvider: java.lang.String mC2KServerHost>;

        $i1 = r0.<com.android.server.location.GpsLocationProvider: int mC2KServerPort>;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void native_set_agps_server(int,java.lang.String,int)>(2, $r6, $i1);

        goto label9;

     label3:
        $r3 = r0.<com.android.server.location.GpsLocationProvider: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label4:
        r0.<com.android.server.location.GpsLocationProvider: boolean mEnabled> = 0;

        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label7:
        throw r2;

     label8:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GpsLocationProvider", "Failed to enable location provider");

     label9:
        return;

        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void disable()
    {
        com.android.server.location.GpsLocationProvider r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;
        boolean $z0;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        $r3 = r0.<com.android.server.location.GpsLocationProvider: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $z0 = r0.<com.android.server.location.GpsLocationProvider: boolean mEnabled>;

        if $z0 != 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        r0.<com.android.server.location.GpsLocationProvider: boolean mEnabled> = 0;

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void sendMessage(int,int,java.lang.Object)>(2, 0, null);

        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void handleDisable()
    {
        com.android.server.location.GpsLocationProvider r0;
        boolean $z0;
        android.os.WorkSource $r1;
        android.app.PendingIntent $r2, $r4;
        android.app.AlarmManager $r3, $r5;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        $z0 = <com.android.server.location.GpsLocationProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GpsLocationProvider", "handleDisable");

     label1:
        $r1 = new android.os.WorkSource;

        specialinvoke $r1.<android.os.WorkSource: void <init>()>();

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void updateClientUids(android.os.WorkSource)>($r1);

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void stopNavigating()>();

        $r3 = r0.<com.android.server.location.GpsLocationProvider: android.app.AlarmManager mAlarmManager>;

        $r2 = r0.<com.android.server.location.GpsLocationProvider: android.app.PendingIntent mWakeupIntent>;

        virtualinvoke $r3.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r2);

        $r5 = r0.<com.android.server.location.GpsLocationProvider: android.app.AlarmManager mAlarmManager>;

        $r4 = r0.<com.android.server.location.GpsLocationProvider: android.app.PendingIntent mTimeoutIntent>;

        virtualinvoke $r5.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r4);

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void native_cleanup()>();

        return;
    }

    public boolean isEnabled()
    {
        com.android.server.location.GpsLocationProvider r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;
        boolean $z0;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        $r3 = r0.<com.android.server.location.GpsLocationProvider: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $z0 = r0.<com.android.server.location.GpsLocationProvider: boolean mEnabled>;

        exitmonitor r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getStatus(android.os.Bundle)
    {
        com.android.server.location.GpsLocationProvider r0;
        android.os.Bundle r1;
        int $i0, $i1;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        r1 := @parameter0: android.os.Bundle;

        if r1 == null goto label1;

        $i1 = r0.<com.android.server.location.GpsLocationProvider: int mSvCount>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("satellites", $i1);

     label1:
        $i0 = r0.<com.android.server.location.GpsLocationProvider: int mStatus>;

        return $i0;
    }

    private void updateStatus(int, int)
    {
        com.android.server.location.GpsLocationProvider r0;
        int i0, i1, $i2, $i4;
        android.os.Bundle $r1;
        long $l3;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<com.android.server.location.GpsLocationProvider: int mStatus>;

        if i0 != $i2 goto label1;

        $i4 = r0.<com.android.server.location.GpsLocationProvider: int mSvCount>;

        if i1 == $i4 goto label2;

     label1:
        r0.<com.android.server.location.GpsLocationProvider: int mStatus> = i0;

        r0.<com.android.server.location.GpsLocationProvider: int mSvCount> = i1;

        $r1 = r0.<com.android.server.location.GpsLocationProvider: android.os.Bundle mLocationExtras>;

        virtualinvoke $r1.<android.os.Bundle: void putInt(java.lang.String,int)>("satellites", i1);

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.server.location.GpsLocationProvider: long mStatusUpdateTime> = $l3;

     label2:
        return;
    }

    public long getStatusUpdateTime()
    {
        com.android.server.location.GpsLocationProvider r0;
        long $l0;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        $l0 = r0.<com.android.server.location.GpsLocationProvider: long mStatusUpdateTime>;

        return $l0;
    }

    public void setRequest(com.android.internal.location.ProviderRequest, android.os.WorkSource)
    {
        com.android.server.location.GpsLocationProvider r0;
        com.android.internal.location.ProviderRequest r1;
        android.os.WorkSource r2;
        com.android.server.location.GpsLocationProvider$GpsRequest $r3;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        r1 := @parameter0: com.android.internal.location.ProviderRequest;

        r2 := @parameter1: android.os.WorkSource;

        $r3 = new com.android.server.location.GpsLocationProvider$GpsRequest;

        specialinvoke $r3.<com.android.server.location.GpsLocationProvider$GpsRequest: void <init>(com.android.internal.location.ProviderRequest,android.os.WorkSource)>(r1, r2);

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void sendMessage(int,int,java.lang.Object)>(3, 0, $r3);

        return;
    }

    private void handleSetRequest(com.android.internal.location.ProviderRequest, android.os.WorkSource)
    {
        com.android.server.location.GpsLocationProvider r0;
        com.android.internal.location.ProviderRequest r1;
        android.os.WorkSource r2;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        r1 := @parameter0: com.android.internal.location.ProviderRequest;

        r2 := @parameter1: android.os.WorkSource;

        r0.<com.android.server.location.GpsLocationProvider: com.android.internal.location.ProviderRequest mProviderRequest> = r1;

        r0.<com.android.server.location.GpsLocationProvider: android.os.WorkSource mWorkSource> = r2;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void updateRequirements()>();

        return;
    }

    private void updateRequirements()
    {
        com.android.server.location.GpsLocationProvider r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.util.Iterator r1;
        android.location.LocationRequest r2;
        com.android.internal.location.ProviderRequest $r3, $r5, $r7, $r14, $r15, $r20, $r24, $r26, $r28;
        android.os.WorkSource $r4, $r8, $r13;
        java.util.List $r6, $r27, $r30;
        android.app.PendingIntent $r9, $r11;
        android.app.AlarmManager $r10, $r12;
        long $l0, $l3, $l5, $l9;
        int $i1, $i2, $i6, $i7, $i12, $i13;
        byte $b4;
        java.lang.StringBuilder $r16, $r17, $r18, $r21, $r22, $r25;
        java.lang.String $r19, $r23;
        java.lang.Object $r29;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        $r3 = r0.<com.android.server.location.GpsLocationProvider: com.android.internal.location.ProviderRequest mProviderRequest>;

        if $r3 == null goto label01;

        $r4 = r0.<com.android.server.location.GpsLocationProvider: android.os.WorkSource mWorkSource>;

        if $r4 != null goto label02;

     label01:
        return;

     label02:
        z0 = 0;

        $r5 = r0.<com.android.server.location.GpsLocationProvider: com.android.internal.location.ProviderRequest mProviderRequest>;

        $r6 = $r5.<com.android.internal.location.ProviderRequest: java.util.List locationRequests>;

        if $r6 == null goto label05;

        $r28 = r0.<com.android.server.location.GpsLocationProvider: com.android.internal.location.ProviderRequest mProviderRequest>;

        $r27 = $r28.<com.android.internal.location.ProviderRequest: java.util.List locationRequests>;

        $i12 = interfaceinvoke $r27.<java.util.List: int size()>();

        if $i12 <= 0 goto label05;

        z0 = 1;

        $r26 = r0.<com.android.server.location.GpsLocationProvider: com.android.internal.location.ProviderRequest mProviderRequest>;

        $r30 = $r26.<com.android.internal.location.ProviderRequest: java.util.List locationRequests>;

        r1 = interfaceinvoke $r30.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z8 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label05;

        $r29 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.location.LocationRequest) $r29;

        $i13 = virtualinvoke r2.<android.location.LocationRequest: int getNumUpdates()>();

        if $i13 == 1 goto label04;

        z0 = 0;

     label04:
        goto label03;

     label05:
        $z1 = <com.android.server.location.GpsLocationProvider: boolean DEBUG>;

        if $z1 == 0 goto label06;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setRequest ");

        $r24 = r0.<com.android.server.location.GpsLocationProvider: com.android.internal.location.ProviderRequest mProviderRequest>;

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GpsLocationProvider", $r23);

     label06:
        $r7 = r0.<com.android.server.location.GpsLocationProvider: com.android.internal.location.ProviderRequest mProviderRequest>;

        $z2 = $r7.<com.android.internal.location.ProviderRequest: boolean reportLocation>;

        if $z2 == 0 goto label09;

        $z3 = r0.<com.android.server.location.GpsLocationProvider: boolean mDisableGps>;

        if $z3 != 0 goto label09;

        $r13 = r0.<com.android.server.location.GpsLocationProvider: android.os.WorkSource mWorkSource>;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void updateClientUids(android.os.WorkSource)>($r13);

        $r14 = r0.<com.android.server.location.GpsLocationProvider: com.android.internal.location.ProviderRequest mProviderRequest>;

        $l0 = $r14.<com.android.internal.location.ProviderRequest: long interval>;

        $i2 = (int) $l0;

        r0.<com.android.server.location.GpsLocationProvider: int mFixInterval> = $i2;

        $i1 = r0.<com.android.server.location.GpsLocationProvider: int mFixInterval>;

        $l5 = (long) $i1;

        $r15 = r0.<com.android.server.location.GpsLocationProvider: com.android.internal.location.ProviderRequest mProviderRequest>;

        $l3 = $r15.<com.android.internal.location.ProviderRequest: long interval>;

        $b4 = $l5 cmp $l3;

        if $b4 == 0 goto label07;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("interval overflow: ");

        $r20 = r0.<com.android.server.location.GpsLocationProvider: com.android.internal.location.ProviderRequest mProviderRequest>;

        $l9 = $r20.<com.android.internal.location.ProviderRequest: long interval>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GpsLocationProvider", $r19);

        r0.<com.android.server.location.GpsLocationProvider: int mFixInterval> = 2147483647;

     label07:
        $z5 = r0.<com.android.server.location.GpsLocationProvider: boolean mStarted>;

        if $z5 == 0 goto label08;

        $z6 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: boolean hasCapability(int)>(1);

        if $z6 == 0 goto label08;

        $i7 = r0.<com.android.server.location.GpsLocationProvider: int mPositionMode>;

        $i6 = r0.<com.android.server.location.GpsLocationProvider: int mFixInterval>;

        $z7 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: boolean native_set_position_mode(int,int,int,int,int)>($i7, 0, $i6, 0, 0);

        if $z7 != 0 goto label10;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GpsLocationProvider", "set_position_mode failed in setMinTime()");

        goto label10;

     label08:
        $z4 = r0.<com.android.server.location.GpsLocationProvider: boolean mStarted>;

        if $z4 != 0 goto label10;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void startNavigating(boolean)>(z0);

        goto label10;

     label09:
        $r8 = new android.os.WorkSource;

        specialinvoke $r8.<android.os.WorkSource: void <init>()>();

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void updateClientUids(android.os.WorkSource)>($r8);

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void stopNavigating()>();

        $r10 = r0.<com.android.server.location.GpsLocationProvider: android.app.AlarmManager mAlarmManager>;

        $r9 = r0.<com.android.server.location.GpsLocationProvider: android.app.PendingIntent mWakeupIntent>;

        virtualinvoke $r10.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r9);

        $r12 = r0.<com.android.server.location.GpsLocationProvider: android.app.AlarmManager mAlarmManager>;

        $r11 = r0.<com.android.server.location.GpsLocationProvider: android.app.PendingIntent mTimeoutIntent>;

        virtualinvoke $r12.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r11);

     label10:
        return;
    }

    private void updateClientUids(android.os.WorkSource)
    {
        com.android.server.location.GpsLocationProvider r0;
        android.os.WorkSource r1, r3, r4, $r5;
        android.os.WorkSource[] r2;
        int i0, i1, i2, $i3, $i4, i8, i9, i10;
        com.android.internal.app.IAppOpsService $r6, $r7, $r11, $r12;
        android.os.IBinder $r8, $r13;
        com.android.internal.app.IBatteryStats $r9, $r16;
        java.lang.String $r10, $r14;
        android.os.RemoteException $r15, $r17, r18, r19;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        r1 := @parameter0: android.os.WorkSource;

        $r5 = r0.<com.android.server.location.GpsLocationProvider: android.os.WorkSource mClientSource>;

        r2 = virtualinvoke $r5.<android.os.WorkSource: android.os.WorkSource[] setReturningDiffs(android.os.WorkSource)>(r1);

        if r2 != null goto label01;

        return;

     label01:
        r3 = r2[0];

        r4 = r2[1];

        if r3 == null goto label07;

        i0 = -1;

        i1 = 0;

     label02:
        $i4 = virtualinvoke r3.<android.os.WorkSource: int size()>();

        if i1 >= $i4 goto label07;

     label03:
        i2 = virtualinvoke r3.<android.os.WorkSource: int get(int)>(i1);

        $r11 = r0.<com.android.server.location.GpsLocationProvider: com.android.internal.app.IAppOpsService mAppOpsService>;

        $r12 = r0.<com.android.server.location.GpsLocationProvider: com.android.internal.app.IAppOpsService mAppOpsService>;

        $r13 = staticinvoke <android.app.AppOpsManager: android.os.IBinder getToken(com.android.internal.app.IAppOpsService)>($r12);

        $r14 = virtualinvoke r3.<android.os.WorkSource: java.lang.String getName(int)>(i1);

        interfaceinvoke $r11.<com.android.internal.app.IAppOpsService: int startOperation(android.os.IBinder,int,int,java.lang.String)>($r13, 2, i2, $r14);

        if i2 == i0 goto label04;

        i0 = i2;

        $r16 = r0.<com.android.server.location.GpsLocationProvider: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r16.<com.android.internal.app.IBatteryStats: void noteStartGps(int)>(i2);

     label04:
        goto label06;

     label05:
        $r15 := @caughtexception;

        r18 = $r15;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("GpsLocationProvider", "RemoteException", r18);

     label06:
        i1 = i1 + 1;

        goto label02;

     label07:
        if r4 == null goto label13;

        i8 = -1;

        i9 = 0;

     label08:
        $i3 = virtualinvoke r4.<android.os.WorkSource: int size()>();

        if i9 >= $i3 goto label13;

     label09:
        i10 = virtualinvoke r4.<android.os.WorkSource: int get(int)>(i9);

        $r7 = r0.<com.android.server.location.GpsLocationProvider: com.android.internal.app.IAppOpsService mAppOpsService>;

        $r6 = r0.<com.android.server.location.GpsLocationProvider: com.android.internal.app.IAppOpsService mAppOpsService>;

        $r8 = staticinvoke <android.app.AppOpsManager: android.os.IBinder getToken(com.android.internal.app.IAppOpsService)>($r6);

        $r10 = virtualinvoke r4.<android.os.WorkSource: java.lang.String getName(int)>(i9);

        interfaceinvoke $r7.<com.android.internal.app.IAppOpsService: void finishOperation(android.os.IBinder,int,int,java.lang.String)>($r8, 2, i10, $r10);

        if i10 == i8 goto label10;

        i8 = i10;

        $r9 = r0.<com.android.server.location.GpsLocationProvider: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r9.<com.android.internal.app.IBatteryStats: void noteStopGps(int)>(i10);

     label10:
        goto label12;

     label11:
        $r17 := @caughtexception;

        r19 = $r17;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("GpsLocationProvider", "RemoteException", r19);

     label12:
        i9 = i9 + 1;

        goto label08;

     label13:
        return;

        catch android.os.RemoteException from label03 to label04 with label05;
        catch android.os.RemoteException from label09 to label10 with label11;
    }

    public boolean sendExtraCommand(java.lang.String, android.os.Bundle)
    {
        com.android.server.location.GpsLocationProvider r0;
        java.lang.String r1, $r3, $r4, $r5, $r8;
        android.os.Bundle r2;
        long l0;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r6, $r7, $r9;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        z0 = 0;

        $r3 = "delete_aiding_data";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        z0 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: boolean deleteAidingData(android.os.Bundle)>(r2);

        goto label4;

     label1:
        $r4 = "force_time_injection";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label2;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void sendMessage(int,int,java.lang.Object)>(5, 0, null);

        z0 = 1;

        goto label4;

     label2:
        $r5 = "force_xtra_injection";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label3;

        $z4 = r0.<com.android.server.location.GpsLocationProvider: boolean mSupportsXtra>;

        if $z4 == 0 goto label4;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void xtraDownloadRequest()>();

        z0 = 1;

        goto label4;

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendExtraCommand: unknown command ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GpsLocationProvider", $r8);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;
    }

    private boolean deleteAidingData(android.os.Bundle)
    {
        com.android.server.location.GpsLocationProvider r0;
        android.os.Bundle r1;
        char c0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        r1 := @parameter0: android.os.Bundle;

        if r1 != null goto label01;

        c0 = 65535;

        goto label14;

     label01:
        c0 = 0;

        $z0 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("ephemeris");

        if $z0 == 0 goto label02;

        c0 = c0 | 1;

     label02:
        $z1 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("almanac");

        if $z1 == 0 goto label03;

        c0 = c0 | 2;

     label03:
        $z2 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("position");

        if $z2 == 0 goto label04;

        c0 = c0 | 4;

     label04:
        $z3 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("time");

        if $z3 == 0 goto label05;

        c0 = c0 | 8;

     label05:
        $z4 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("iono");

        if $z4 == 0 goto label06;

        c0 = c0 | 16;

     label06:
        $z5 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("utc");

        if $z5 == 0 goto label07;

        c0 = c0 | 32;

     label07:
        $z6 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("health");

        if $z6 == 0 goto label08;

        c0 = c0 | 64;

     label08:
        $z7 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("svdir");

        if $z7 == 0 goto label09;

        c0 = c0 | 128;

     label09:
        $z8 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("svsteer");

        if $z8 == 0 goto label10;

        c0 = c0 | 256;

     label10:
        $z9 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("sadata");

        if $z9 == 0 goto label11;

        c0 = c0 | 512;

     label11:
        $z10 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("rti");

        if $z10 == 0 goto label12;

        c0 = c0 | 1024;

     label12:
        $z11 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("celldb-info");

        if $z11 == 0 goto label13;

        c0 = c0 | 32768;

     label13:
        $z12 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("all");

        if $z12 == 0 goto label14;

        c0 = c0 | 65535;

     label14:
        if c0 == 0 goto label15;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void native_delete_aiding_data(int)>(c0);

        return 1;

     label15:
        return 0;
    }

    private void startNavigating(boolean)
    {
        com.android.server.location.GpsLocationProvider r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.String r1, $r11, $r13;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        int $i0, $i1, $i2, $i4, $i9, $i10, i13;
        java.util.Properties $r4;
        long $l3, $l5, $l6;
        android.app.AlarmManager $r5;
        android.app.PendingIntent $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r12, $r14;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        z0 := @parameter0: boolean;

        $z2 = r0.<com.android.server.location.GpsLocationProvider: boolean mStarted>;

        if $z2 != 0 goto label14;

        $z3 = <com.android.server.location.GpsLocationProvider: boolean DEBUG>;

        if $z3 == 0 goto label01;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startNavigating, singleShot is ");

        $r12 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GpsLocationProvider", $r13);

     label01:
        r0.<com.android.server.location.GpsLocationProvider: int mTimeToFirstFix> = 0;

        r0.<com.android.server.location.GpsLocationProvider: long mLastFixTime> = 0L;

        r0.<com.android.server.location.GpsLocationProvider: boolean mStarted> = 1;

        r0.<com.android.server.location.GpsLocationProvider: boolean mSingleShot> = z0;

        r0.<com.android.server.location.GpsLocationProvider: int mPositionMode> = 0;

        $r2 = r0.<com.android.server.location.GpsLocationProvider: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r3, "assisted_gps_enabled", 1);

        if $i0 == 0 goto label02;

        $z9 = 1;

        goto label03;

     label02:
        $z9 = 0;

     label03:
        z1 = $z9;

        $r4 = r0.<com.android.server.location.GpsLocationProvider: java.util.Properties mProperties>;

        $i1 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: int getSuplMode(java.util.Properties,boolean,boolean)>($r4, z1, z0);

        r0.<com.android.server.location.GpsLocationProvider: int mPositionMode> = $i1;

        $z4 = <com.android.server.location.GpsLocationProvider: boolean DEBUG>;

        if $z4 == 0 goto label09;

        $i9 = r0.<com.android.server.location.GpsLocationProvider: int mPositionMode>;

        tableswitch($i9)
        {
            case 0: goto label04;
            case 1: goto label06;
            case 2: goto label05;
            default: goto label07;
        };

     label04:
        r1 = "standalone";

        goto label08;

     label05:
        r1 = "MS_ASSISTED";

        goto label08;

     label06:
        r1 = "MS_BASED";

        goto label08;

     label07:
        r1 = "unknown";

     label08:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setting position_mode to ");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GpsLocationProvider", $r11);

     label09:
        $z5 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: boolean hasCapability(int)>(1);

        if $z5 == 0 goto label10;

        $i10 = r0.<com.android.server.location.GpsLocationProvider: int mFixInterval>;

        goto label11;

     label10:
        $i10 = 1000;

     label11:
        i13 = $i10;

        $i2 = r0.<com.android.server.location.GpsLocationProvider: int mPositionMode>;

        $z6 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: boolean native_set_position_mode(int,int,int,int,int)>($i2, 0, i13, 0, 0);

        if $z6 != 0 goto label12;

        r0.<com.android.server.location.GpsLocationProvider: boolean mStarted> = 0;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GpsLocationProvider", "set_position_mode failed in startNavigating()");

        return;

     label12:
        $z7 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: boolean native_start()>();

        if $z7 != 0 goto label13;

        r0.<com.android.server.location.GpsLocationProvider: boolean mStarted> = 0;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GpsLocationProvider", "native_start failed in startNavigating()");

        return;

     label13:
        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void updateStatus(int,int)>(1, 0);

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.server.location.GpsLocationProvider: long mFixRequestTime> = $l3;

        $z8 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: boolean hasCapability(int)>(1);

        if $z8 != 0 goto label14;

        $i4 = r0.<com.android.server.location.GpsLocationProvider: int mFixInterval>;

        if $i4 < 60000 goto label14;

        $r5 = r0.<com.android.server.location.GpsLocationProvider: android.app.AlarmManager mAlarmManager>;

        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l6 = $l5 + 60000L;

        $r6 = r0.<com.android.server.location.GpsLocationProvider: android.app.PendingIntent mTimeoutIntent>;

        virtualinvoke $r5.<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>(2, $l6, $r6);

     label14:
        return;
    }

    private void stopNavigating()
    {
        com.android.server.location.GpsLocationProvider r0;
        boolean $z0, $z1;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        $z0 = <com.android.server.location.GpsLocationProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GpsLocationProvider", "stopNavigating");

     label1:
        $z1 = r0.<com.android.server.location.GpsLocationProvider: boolean mStarted>;

        if $z1 == 0 goto label2;

        r0.<com.android.server.location.GpsLocationProvider: boolean mStarted> = 0;

        r0.<com.android.server.location.GpsLocationProvider: boolean mSingleShot> = 0;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: boolean native_stop()>();

        r0.<com.android.server.location.GpsLocationProvider: int mTimeToFirstFix> = 0;

        r0.<com.android.server.location.GpsLocationProvider: long mLastFixTime> = 0L;

        r0.<com.android.server.location.GpsLocationProvider: int mLocationFlags> = 0;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void updateStatus(int,int)>(1, 0);

     label2:
        return;
    }

    private void hibernate()
    {
        com.android.server.location.GpsLocationProvider r0;
        long l0, $l2, $l3;
        android.app.PendingIntent $r1, $r3, $r5;
        android.app.AlarmManager $r2, $r4, $r6;
        int $i1;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void stopNavigating()>();

        $r2 = r0.<com.android.server.location.GpsLocationProvider: android.app.AlarmManager mAlarmManager>;

        $r1 = r0.<com.android.server.location.GpsLocationProvider: android.app.PendingIntent mTimeoutIntent>;

        virtualinvoke $r2.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r1);

        $r4 = r0.<com.android.server.location.GpsLocationProvider: android.app.AlarmManager mAlarmManager>;

        $r3 = r0.<com.android.server.location.GpsLocationProvider: android.app.PendingIntent mWakeupIntent>;

        virtualinvoke $r4.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r3);

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r6 = r0.<com.android.server.location.GpsLocationProvider: android.app.AlarmManager mAlarmManager>;

        $i1 = r0.<com.android.server.location.GpsLocationProvider: int mFixInterval>;

        $l2 = (long) $i1;

        $l3 = l0 + $l2;

        $r5 = r0.<com.android.server.location.GpsLocationProvider: android.app.PendingIntent mWakeupIntent>;

        virtualinvoke $r6.<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>(2, $l3, $r5);

        return;
    }

    private boolean hasCapability(int)
    {
        com.android.server.location.GpsLocationProvider r0;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.location.GpsLocationProvider: int mEngineCapabilities>;

        $i2 = $i1 & i0;

        if $i2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void reportLocation(int, double, double, double, float, float, float, long)
    {
        com.android.server.location.GpsLocationProvider r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i19, $i20;
        double d0, d1, d2;
        float f0, f1, f2;
        long l1, $l7, $l16, $l17, $l18, $l22;
        android.location.Location r1, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r23, $r24, $r25, $r26, $r28, $r29, $r33, $r34;
        java.lang.Throwable r3, $r37;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.os.Bundle $r8;
        android.location.ILocationManager $r12;
        android.content.Intent $r13, r42;
        android.content.Context $r14;
        android.os.UserHandle $r16;
        android.app.AlarmManager $r17;
        android.app.PendingIntent $r18;
        java.lang.StringBuilder $r19, $r21, $r22, $r30, $r31, $r32, $r35, $r38, $r39, $r41;
        com.android.server.location.GpsStatusListenerHelper $r20;
        java.lang.String $r27, $r40;
        android.os.RemoteException $r36;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        f0 := @parameter4: float;

        f1 := @parameter5: float;

        f2 := @parameter6: float;

        l1 := @parameter7: long;

        $z0 = <com.android.server.location.GpsLocationProvider: boolean VERBOSE>;

        if $z0 == 0 goto label01;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reportLocation lat: ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" long: ");

        $r39 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d1);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" timestamp: ");

        $r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("GpsLocationProvider", $r40);

     label01:
        $r4 = r0.<com.android.server.location.GpsLocationProvider: android.location.Location mLocation>;

        r1 = $r4;

        entermonitor $r4;

     label02:
        r0.<com.android.server.location.GpsLocationProvider: int mLocationFlags> = i0;

        $i3 = i0 & 1;

        if $i3 != 1 goto label03;

        $r25 = r0.<com.android.server.location.GpsLocationProvider: android.location.Location mLocation>;

        virtualinvoke $r25.<android.location.Location: void setLatitude(double)>(d0);

        $r26 = r0.<com.android.server.location.GpsLocationProvider: android.location.Location mLocation>;

        virtualinvoke $r26.<android.location.Location: void setLongitude(double)>(d1);

        $r33 = r0.<com.android.server.location.GpsLocationProvider: android.location.Location mLocation>;

        virtualinvoke $r33.<android.location.Location: void setTime(long)>(l1);

        $r34 = r0.<com.android.server.location.GpsLocationProvider: android.location.Location mLocation>;

        $l22 = staticinvoke <android.os.SystemClock: long elapsedRealtimeNanos()>();

        virtualinvoke $r34.<android.location.Location: void setElapsedRealtimeNanos(long)>($l22);

     label03:
        $i2 = i0 & 2;

        if $i2 != 2 goto label04;

        $r24 = r0.<com.android.server.location.GpsLocationProvider: android.location.Location mLocation>;

        virtualinvoke $r24.<android.location.Location: void setAltitude(double)>(d2);

        goto label05;

     label04:
        $r5 = r0.<com.android.server.location.GpsLocationProvider: android.location.Location mLocation>;

        virtualinvoke $r5.<android.location.Location: void removeAltitude()>();

     label05:
        $i4 = i0 & 4;

        if $i4 != 4 goto label06;

        $r23 = r0.<com.android.server.location.GpsLocationProvider: android.location.Location mLocation>;

        virtualinvoke $r23.<android.location.Location: void setSpeed(float)>(f0);

        goto label07;

     label06:
        $r6 = r0.<com.android.server.location.GpsLocationProvider: android.location.Location mLocation>;

        virtualinvoke $r6.<android.location.Location: void removeSpeed()>();

     label07:
        $i5 = i0 & 8;

        if $i5 != 8 goto label08;

        $r29 = r0.<com.android.server.location.GpsLocationProvider: android.location.Location mLocation>;

        virtualinvoke $r29.<android.location.Location: void setBearing(float)>(f1);

        goto label09;

     label08:
        $r7 = r0.<com.android.server.location.GpsLocationProvider: android.location.Location mLocation>;

        virtualinvoke $r7.<android.location.Location: void removeBearing()>();

     label09:
        $i6 = i0 & 16;

        if $i6 != 16 goto label10;

        $r28 = r0.<com.android.server.location.GpsLocationProvider: android.location.Location mLocation>;

        virtualinvoke $r28.<android.location.Location: void setAccuracy(float)>(f2);

        goto label11;

     label10:
        $r9 = r0.<com.android.server.location.GpsLocationProvider: android.location.Location mLocation>;

        virtualinvoke $r9.<android.location.Location: void removeAccuracy()>();

     label11:
        $r11 = r0.<com.android.server.location.GpsLocationProvider: android.location.Location mLocation>;

        $r8 = r0.<com.android.server.location.GpsLocationProvider: android.os.Bundle mLocationExtras>;

        virtualinvoke $r11.<android.location.Location: void setExtras(android.os.Bundle)>($r8);

     label12:
        $r12 = r0.<com.android.server.location.GpsLocationProvider: android.location.ILocationManager mILocationManager>;

        $r10 = r0.<com.android.server.location.GpsLocationProvider: android.location.Location mLocation>;

        interfaceinvoke $r12.<android.location.ILocationManager: void reportLocation(android.location.Location,boolean)>($r10, 0);

     label13:
        goto label15;

     label14:
        $r36 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GpsLocationProvider", "RemoteException calling reportLocation");

     label15:
        exitmonitor r1;

     label16:
        goto label19;

     label17:
        $r37 := @caughtexception;

        r3 = $r37;

        exitmonitor r1;

     label18:
        throw r3;

     label19:
        $l7 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.server.location.GpsLocationProvider: long mLastFixTime> = $l7;

        $i8 = r0.<com.android.server.location.GpsLocationProvider: int mTimeToFirstFix>;

        if $i8 != 0 goto label21;

        $i13 = i0 & 1;

        if $i13 != 1 goto label21;

        $l17 = r0.<com.android.server.location.GpsLocationProvider: long mLastFixTime>;

        $l18 = r0.<com.android.server.location.GpsLocationProvider: long mFixRequestTime>;

        $l16 = $l17 - $l18;

        $i15 = (int) $l16;

        r0.<com.android.server.location.GpsLocationProvider: int mTimeToFirstFix> = $i15;

        $z7 = <com.android.server.location.GpsLocationProvider: boolean DEBUG>;

        if $z7 == 0 goto label20;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TTFF: ");

        $i20 = r0.<com.android.server.location.GpsLocationProvider: int mTimeToFirstFix>;

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);

        $r27 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GpsLocationProvider", $r27);

     label20:
        $r20 = r0.<com.android.server.location.GpsLocationProvider: com.android.server.location.GpsStatusListenerHelper mListenerHelper>;

        $i19 = r0.<com.android.server.location.GpsLocationProvider: int mTimeToFirstFix>;

        virtualinvoke $r20.<com.android.server.location.GpsStatusListenerHelper: void onFirstFix(int)>($i19);

     label21:
        $z1 = r0.<com.android.server.location.GpsLocationProvider: boolean mSingleShot>;

        if $z1 == 0 goto label22;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void stopNavigating()>();

     label22:
        $z2 = r0.<com.android.server.location.GpsLocationProvider: boolean mStarted>;

        if $z2 == 0 goto label24;

        $i11 = r0.<com.android.server.location.GpsLocationProvider: int mStatus>;

        if $i11 == 2 goto label24;

        $z6 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: boolean hasCapability(int)>(1);

        if $z6 != 0 goto label23;

        $i14 = r0.<com.android.server.location.GpsLocationProvider: int mFixInterval>;

        if $i14 >= 60000 goto label23;

        $r17 = r0.<com.android.server.location.GpsLocationProvider: android.app.AlarmManager mAlarmManager>;

        $r18 = r0.<com.android.server.location.GpsLocationProvider: android.app.PendingIntent mTimeoutIntent>;

        virtualinvoke $r17.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r18);

     label23:
        $r13 = new android.content.Intent;

        specialinvoke $r13.<android.content.Intent: void <init>(java.lang.String)>("android.location.GPS_FIX_CHANGE");

        r42 = $r13;

        virtualinvoke r42.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("enabled", 1);

        $r14 = r0.<com.android.server.location.GpsLocationProvider: android.content.Context mContext>;

        $r16 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r14.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r42, $r16);

        $i12 = r0.<com.android.server.location.GpsLocationProvider: int mSvCount>;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void updateStatus(int,int)>(2, $i12);

     label24:
        $z4 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: boolean hasCapability(int)>(1);

        if $z4 != 0 goto label26;

        $z5 = r0.<com.android.server.location.GpsLocationProvider: boolean mStarted>;

        if $z5 == 0 goto label26;

        $i9 = r0.<com.android.server.location.GpsLocationProvider: int mFixInterval>;

        if $i9 <= 10000 goto label26;

        $z3 = <com.android.server.location.GpsLocationProvider: boolean DEBUG>;

        if $z3 == 0 goto label25;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GpsLocationProvider", "got fix, hibernating");

     label25:
        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void hibernate()>();

     label26:
        return;

        catch android.os.RemoteException from label12 to label13 with label14;
        catch java.lang.Throwable from label02 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    private void reportStatus(int)
    {
        com.android.server.location.GpsLocationProvider r0;
        int i0;
        boolean z0, $z1, $z2, $z3, $z4;
        android.content.Intent r1, $r3;
        com.android.server.location.GpsStatusListenerHelper $r2;
        android.os.UserHandle $r5;
        android.content.Context $r6;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r9;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        i0 := @parameter0: int;

        $z1 = <com.android.server.location.GpsLocationProvider: boolean DEBUG>;

        if $z1 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reportStatus status: ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("GpsLocationProvider", $r9);

     label1:
        z0 = r0.<com.android.server.location.GpsLocationProvider: boolean mNavigating>;

        tableswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            default: goto label6;
        };

     label2:
        r0.<com.android.server.location.GpsLocationProvider: boolean mNavigating> = 1;

        r0.<com.android.server.location.GpsLocationProvider: boolean mEngineOn> = 1;

        goto label6;

     label3:
        r0.<com.android.server.location.GpsLocationProvider: boolean mNavigating> = 0;

        goto label6;

     label4:
        r0.<com.android.server.location.GpsLocationProvider: boolean mEngineOn> = 1;

        goto label6;

     label5:
        r0.<com.android.server.location.GpsLocationProvider: boolean mEngineOn> = 0;

        r0.<com.android.server.location.GpsLocationProvider: boolean mNavigating> = 0;

     label6:
        $z2 = r0.<com.android.server.location.GpsLocationProvider: boolean mNavigating>;

        if z0 == $z2 goto label7;

        $r2 = r0.<com.android.server.location.GpsLocationProvider: com.android.server.location.GpsStatusListenerHelper mListenerHelper>;

        $z3 = r0.<com.android.server.location.GpsLocationProvider: boolean mNavigating>;

        virtualinvoke $r2.<com.android.server.location.GpsStatusListenerHelper: void onStatusChanged(boolean)>($z3);

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.location.GPS_ENABLED_CHANGE");

        r1 = $r3;

        $z4 = r0.<com.android.server.location.GpsLocationProvider: boolean mNavigating>;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("enabled", $z4);

        $r6 = r0.<com.android.server.location.GpsLocationProvider: android.content.Context mContext>;

        $r5 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r6.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r1, $r5);

     label7:
        return;
    }

    private void reportSvStatus()
    {
        com.android.server.location.GpsLocationProvider r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34;
        int[] $r1, $r5, $r6, $r7, $r8, $r13, $r14, $r21, $r29, $r34, $r45, $r46, $r47, $r49, $r50, $r52;
        float[] $r2, $r3, $r4, $r9, $r10, $r11, $r36, $r40, $r43;
        com.android.server.location.GpsStatusListenerHelper $r12;
        boolean $z0, $z1;
        long $l8, $l10, $l12, $l13;
        byte $b11, $b14;
        android.os.UserHandle $r16;
        android.content.Intent $r17, r58;
        java.lang.StringBuilder $r18, $r20, $r22, $r23, $r24, $r25, $r27, $r31, $r33, $r35, $r37, $r38, $r39, $r41, $r42, $r44, $r48, $r51, $r56;
        android.content.Context $r19;
        java.lang.String $r26, $r28, $r32, $r53, $r54, $r55, $r57;
        float $f0, $f1, $f2, $f3;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        $r5 = r0.<com.android.server.location.GpsLocationProvider: int[] mSvs>;

        $r4 = r0.<com.android.server.location.GpsLocationProvider: float[] mSnrs>;

        $r3 = r0.<com.android.server.location.GpsLocationProvider: float[] mSvElevations>;

        $r2 = r0.<com.android.server.location.GpsLocationProvider: float[] mSvAzimuths>;

        $r1 = r0.<com.android.server.location.GpsLocationProvider: int[] mSvMasks>;

        i0 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: int native_read_sv_status(int[],float[],float[],float[],int[])>($r5, $r4, $r3, $r2, $r1);

        $r12 = r0.<com.android.server.location.GpsLocationProvider: com.android.server.location.GpsStatusListenerHelper mListenerHelper>;

        $r13 = r0.<com.android.server.location.GpsLocationProvider: int[] mSvs>;

        $r10 = r0.<com.android.server.location.GpsLocationProvider: float[] mSnrs>;

        $r11 = r0.<com.android.server.location.GpsLocationProvider: float[] mSvElevations>;

        $r9 = r0.<com.android.server.location.GpsLocationProvider: float[] mSvAzimuths>;

        $r6 = r0.<com.android.server.location.GpsLocationProvider: int[] mSvMasks>;

        $i4 = $r6[0];

        $r7 = r0.<com.android.server.location.GpsLocationProvider: int[] mSvMasks>;

        $i3 = $r7[1];

        $r8 = r0.<com.android.server.location.GpsLocationProvider: int[] mSvMasks>;

        $i2 = $r8[2];

        virtualinvoke $r12.<com.android.server.location.GpsStatusListenerHelper: void onSvStatusChanged(int,int[],float[],float[],float[],int,int,int)>(i0, $r13, $r10, $r11, $r9, $i4, $i3, $i2);

        $z0 = <com.android.server.location.GpsLocationProvider: boolean VERBOSE>;

        if $z0 == 0 goto label8;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SV count: ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r20 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ephemerisMask: ");

        $r21 = r0.<com.android.server.location.GpsLocationProvider: int[] mSvMasks>;

        $i16 = $r21[0];

        $r26 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i16);

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" almanacMask: ");

        $r29 = r0.<com.android.server.location.GpsLocationProvider: int[] mSvMasks>;

        $i17 = $r29[1];

        $r28 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i17);

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("GpsLocationProvider", $r32);

        i1 = 0;

     label1:
        if i1 >= i0 goto label8;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sv: ");

        $r34 = r0.<com.android.server.location.GpsLocationProvider: int[] mSvs>;

        $i19 = $r34[i1];

        $r33 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r37 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" snr: ");

        $r36 = r0.<com.android.server.location.GpsLocationProvider: float[] mSnrs>;

        $f1 = $r36[i1];

        $f0 = $f1 / 10.0F;

        $r41 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" elev: ");

        $r43 = r0.<com.android.server.location.GpsLocationProvider: float[] mSvElevations>;

        $f3 = $r43[i1];

        $r38 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" azimuth: ");

        $r40 = r0.<com.android.server.location.GpsLocationProvider: float[] mSvAzimuths>;

        $f2 = $r40[i1];

        $r44 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r45 = r0.<com.android.server.location.GpsLocationProvider: int[] mSvMasks>;

        $i22 = $r45[0];

        $r46 = r0.<com.android.server.location.GpsLocationProvider: int[] mSvs>;

        $i24 = $r46[i1];

        $i20 = $i24 - 1;

        $i21 = 1 << $i20;

        $i23 = $i22 & $i21;

        if $i23 != 0 goto label2;

        $r54 = "  ";

        goto label3;

     label2:
        $r54 = " E";

     label3:
        $r48 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r47 = r0.<com.android.server.location.GpsLocationProvider: int[] mSvMasks>;

        $i28 = $r47[1];

        $r49 = r0.<com.android.server.location.GpsLocationProvider: int[] mSvs>;

        $i29 = $r49[i1];

        $i26 = $i29 - 1;

        $i25 = 1 << $i26;

        $i27 = $i28 & $i25;

        if $i27 != 0 goto label4;

        $r53 = "  ";

        goto label5;

     label4:
        $r53 = " A";

     label5:
        $r51 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        $r50 = r0.<com.android.server.location.GpsLocationProvider: int[] mSvMasks>;

        $i33 = $r50[2];

        $r52 = r0.<com.android.server.location.GpsLocationProvider: int[] mSvs>;

        $i34 = $r52[i1];

        $i31 = $i34 - 1;

        $i30 = 1 << $i31;

        $i32 = $i33 & $i30;

        if $i32 != 0 goto label6;

        $r55 = "";

        goto label7;

     label6:
        $r55 = "U";

     label7:
        $r56 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("GpsLocationProvider", $r57);

        i1 = i1 + 1;

        goto label1;

     label8:
        $i5 = r0.<com.android.server.location.GpsLocationProvider: int mStatus>;

        $r14 = r0.<com.android.server.location.GpsLocationProvider: int[] mSvMasks>;

        $i6 = $r14[2];

        $i7 = staticinvoke <java.lang.Integer: int bitCount(int)>($i6);

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void updateStatus(int,int)>($i5, $i7);

        $z1 = r0.<com.android.server.location.GpsLocationProvider: boolean mNavigating>;

        if $z1 == 0 goto label9;

        $i9 = r0.<com.android.server.location.GpsLocationProvider: int mStatus>;

        if $i9 != 2 goto label9;

        $l8 = r0.<com.android.server.location.GpsLocationProvider: long mLastFixTime>;

        $b11 = $l8 cmp 0L;

        if $b11 <= 0 goto label9;

        $l10 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l13 = r0.<com.android.server.location.GpsLocationProvider: long mLastFixTime>;

        $l12 = $l10 - $l13;

        $b14 = $l12 cmp 10000L;

        if $b14 <= 0 goto label9;

        $r17 = new android.content.Intent;

        specialinvoke $r17.<android.content.Intent: void <init>(java.lang.String)>("android.location.GPS_FIX_CHANGE");

        r58 = $r17;

        virtualinvoke r58.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("enabled", 0);

        $r19 = r0.<com.android.server.location.GpsLocationProvider: android.content.Context mContext>;

        $r16 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r19.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r58, $r16);

        $i15 = r0.<com.android.server.location.GpsLocationProvider: int mSvCount>;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void updateStatus(int,int)>(1, $i15);

     label9:
        return;
    }

    private void reportAGpsStatus(int, int, byte[])
    {
        com.android.server.location.GpsLocationProvider r0;
        int i0, i1, i2, $i6, $i13;
        byte[] r1;
        java.net.UnknownHostException r2, $r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.StringBuilder $r3, $r4, $r5, $r8, $r9, $r10, $r14, $r17, $r18, $r21, $r23, $r24, $r25, $r26, $r29;
        java.lang.String $r6, $r11, $r12, $r13, $r19, $r22, $r28;
        android.net.ConnectivityManager $r7, $r20;
        java.net.InetAddress $r15, $r16;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        tableswitch(i1)
        {
            case 1: goto label01;
            case 2: goto label12;
            case 3: goto label14;
            case 4: goto label15;
            case 5: goto label16;
            default: goto label17;
        };

     label01:
        $z0 = <com.android.server.location.GpsLocationProvider: boolean DEBUG>;

        if $z0 == 0 goto label02;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GpsLocationProvider", "GPS_REQUEST_AGPS_DATA_CONN");

     label02:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received SUPL IP addr[]: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("GpsLocationProvider", $r6);

        r0.<com.android.server.location.GpsLocationProvider: int mAGpsDataConnectionState> = 1;

        $r7 = r0.<com.android.server.location.GpsLocationProvider: android.net.ConnectivityManager mConnMgr>;

        i2 = virtualinvoke $r7.<android.net.ConnectivityManager: int startUsingNetworkFeature(int,java.lang.String)>(0, "enableSUPL");

        if r1 == null goto label06;

     label03:
        $r15 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>(r1);

        r0.<com.android.server.location.GpsLocationProvider: java.net.InetAddress mAGpsDataConnectionIpAddr> = $r15;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IP address converted to: ");

        $r16 = r0.<com.android.server.location.GpsLocationProvider: java.net.InetAddress mAGpsDataConnectionIpAddr>;

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("GpsLocationProvider", $r19);

     label04:
        goto label06;

     label05:
        $r27 := @caughtexception;

        r2 = $r27;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad IP Address: ");

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("GpsLocationProvider", $r28, r2);

        r0.<com.android.server.location.GpsLocationProvider: java.net.InetAddress mAGpsDataConnectionIpAddr> = null;

     label06:
        if i2 != 0 goto label09;

        $z3 = <com.android.server.location.GpsLocationProvider: boolean DEBUG>;

        if $z3 == 0 goto label07;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GpsLocationProvider", "PhoneConstants.APN_ALREADY_ACTIVE");

     label07:
        $r12 = r0.<com.android.server.location.GpsLocationProvider: java.lang.String mAGpsApn>;

        if $r12 == null goto label08;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void setRouting()>();

        $r13 = r0.<com.android.server.location.GpsLocationProvider: java.lang.String mAGpsApn>;

        $i6 = r0.<com.android.server.location.GpsLocationProvider: int mApnIpType>;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void native_agps_data_conn_open(java.lang.String,int)>($r13, $i6);

        r0.<com.android.server.location.GpsLocationProvider: int mAGpsDataConnectionState> = 2;

        goto label18;

     label08:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GpsLocationProvider", "mAGpsApn not set when receiving PhoneConstants.APN_ALREADY_ACTIVE");

        r0.<com.android.server.location.GpsLocationProvider: int mAGpsDataConnectionState> = 0;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void native_agps_data_conn_failed()>();

        goto label18;

     label09:
        if i2 != 1 goto label10;

        $z2 = <com.android.server.location.GpsLocationProvider: boolean DEBUG>;

        if $z2 == 0 goto label18;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GpsLocationProvider", "PhoneConstants.APN_REQUEST_STARTED");

        goto label18;

     label10:
        $z1 = <com.android.server.location.GpsLocationProvider: boolean DEBUG>;

        if $z1 == 0 goto label11;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startUsingNetworkFeature failed, value is ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GpsLocationProvider", $r11);

     label11:
        r0.<com.android.server.location.GpsLocationProvider: int mAGpsDataConnectionState> = 0;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void native_agps_data_conn_failed()>();

        goto label18;

     label12:
        $z7 = <com.android.server.location.GpsLocationProvider: boolean DEBUG>;

        if $z7 == 0 goto label13;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GpsLocationProvider", "GPS_RELEASE_AGPS_DATA_CONN");

     label13:
        $i13 = r0.<com.android.server.location.GpsLocationProvider: int mAGpsDataConnectionState>;

        if $i13 == 0 goto label18;

        $r20 = r0.<com.android.server.location.GpsLocationProvider: android.net.ConnectivityManager mConnMgr>;

        virtualinvoke $r20.<android.net.ConnectivityManager: int stopUsingNetworkFeature(int,java.lang.String)>(0, "enableSUPL");

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void native_agps_data_conn_closed()>();

        r0.<com.android.server.location.GpsLocationProvider: int mAGpsDataConnectionState> = 0;

        r0.<com.android.server.location.GpsLocationProvider: java.net.InetAddress mAGpsDataConnectionIpAddr> = null;

        goto label18;

     label14:
        $z5 = <com.android.server.location.GpsLocationProvider: boolean DEBUG>;

        if $z5 == 0 goto label18;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GpsLocationProvider", "GPS_AGPS_DATA_CONNECTED");

        goto label18;

     label15:
        $z6 = <com.android.server.location.GpsLocationProvider: boolean DEBUG>;

        if $z6 == 0 goto label18;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GpsLocationProvider", "GPS_AGPS_DATA_CONN_DONE");

        goto label18;

     label16:
        $z4 = <com.android.server.location.GpsLocationProvider: boolean DEBUG>;

        if $z4 == 0 goto label18;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GpsLocationProvider", "GPS_AGPS_DATA_CONN_FAILED");

        goto label18;

     label17:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received Unknown AGPS status: ");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GpsLocationProvider", $r22);

     label18:
        return;

        catch java.net.UnknownHostException from label03 to label04 with label05;
    }

    private void reportNmea(long)
    {
        com.android.server.location.GpsLocationProvider r0;
        long l0;
        int i1, $i2;
        java.lang.String r1, $r4;
        byte[] $r2, $r3, $r5;
        com.android.server.location.GpsStatusListenerHelper $r6;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        l0 := @parameter0: long;

        $r3 = r0.<com.android.server.location.GpsLocationProvider: byte[] mNmeaBuffer>;

        $r2 = r0.<com.android.server.location.GpsLocationProvider: byte[] mNmeaBuffer>;

        $i2 = lengthof $r2;

        i1 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: int native_read_nmea(byte[],int)>($r3, $i2);

        $r4 = new java.lang.String;

        $r5 = r0.<com.android.server.location.GpsLocationProvider: byte[] mNmeaBuffer>;

        specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>($r5, 0, i1);

        r1 = $r4;

        $r6 = r0.<com.android.server.location.GpsLocationProvider: com.android.server.location.GpsStatusListenerHelper mListenerHelper>;

        virtualinvoke $r6.<com.android.server.location.GpsStatusListenerHelper: void onNmeaReceived(long,java.lang.String)>(l0, r1);

        return;
    }

    private void reportMeasurementData(android.location.GpsMeasurementsEvent)
    {
        com.android.server.location.GpsLocationProvider r0;
        android.location.GpsMeasurementsEvent r1;
        com.android.server.location.GpsMeasurementsProvider $r2;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        r1 := @parameter0: android.location.GpsMeasurementsEvent;

        $r2 = r0.<com.android.server.location.GpsLocationProvider: com.android.server.location.GpsMeasurementsProvider mGpsMeasurementsProvider>;

        virtualinvoke $r2.<com.android.server.location.GpsMeasurementsProvider: void onMeasurementsAvailable(android.location.GpsMeasurementsEvent)>(r1);

        return;
    }

    private void reportNavigationMessage(android.location.GpsNavigationMessageEvent)
    {
        com.android.server.location.GpsLocationProvider r0;
        android.location.GpsNavigationMessageEvent r1;
        com.android.server.location.GpsNavigationMessageProvider $r2;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        r1 := @parameter0: android.location.GpsNavigationMessageEvent;

        $r2 = r0.<com.android.server.location.GpsLocationProvider: com.android.server.location.GpsNavigationMessageProvider mGpsNavigationMessageProvider>;

        virtualinvoke $r2.<com.android.server.location.GpsNavigationMessageProvider: void onNavigationMessageAvailable(android.location.GpsNavigationMessageEvent)>(r1);

        return;
    }

    private void setEngineCapabilities(int)
    {
        com.android.server.location.GpsLocationProvider r0;
        int i0;
        boolean $z0, $z1;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        i0 := @parameter0: int;

        r0.<com.android.server.location.GpsLocationProvider: int mEngineCapabilities> = i0;

        $z0 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: boolean hasCapability(int)>(16);

        if $z0 != 0 goto label1;

        $z1 = r0.<com.android.server.location.GpsLocationProvider: boolean mPeriodicTimeInjection>;

        if $z1 != 0 goto label1;

        r0.<com.android.server.location.GpsLocationProvider: boolean mPeriodicTimeInjection> = 1;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void requestUtcTime()>();

     label1:
        return;
    }

    private void xtraDownloadRequest()
    {
        com.android.server.location.GpsLocationProvider r0;
        boolean $z0;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        $z0 = <com.android.server.location.GpsLocationProvider: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GpsLocationProvider", "xtraDownloadRequest");

     label1:
        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void sendMessage(int,int,java.lang.Object)>(6, 0, null);

        return;
    }

    private android.location.Location buildLocation(int, double, double, double, float, float, float, long)
    {
        com.android.server.location.GpsLocationProvider r0;
        int i0, $i2, $i3, $i4, $i5, $i6;
        double d0, d1, d2;
        float f0, f1, f2;
        long l1, $l7;
        android.location.Location r1, $r2;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        f0 := @parameter4: float;

        f1 := @parameter5: float;

        f2 := @parameter6: float;

        l1 := @parameter7: long;

        $r2 = new android.location.Location;

        specialinvoke $r2.<android.location.Location: void <init>(java.lang.String)>("gps");

        r1 = $r2;

        $i2 = i0 & 1;

        if $i2 != 1 goto label1;

        virtualinvoke r1.<android.location.Location: void setLatitude(double)>(d0);

        virtualinvoke r1.<android.location.Location: void setLongitude(double)>(d1);

        virtualinvoke r1.<android.location.Location: void setTime(long)>(l1);

        $l7 = staticinvoke <android.os.SystemClock: long elapsedRealtimeNanos()>();

        virtualinvoke r1.<android.location.Location: void setElapsedRealtimeNanos(long)>($l7);

     label1:
        $i4 = i0 & 2;

        if $i4 != 2 goto label2;

        virtualinvoke r1.<android.location.Location: void setAltitude(double)>(d2);

     label2:
        $i3 = i0 & 4;

        if $i3 != 4 goto label3;

        virtualinvoke r1.<android.location.Location: void setSpeed(float)>(f0);

     label3:
        $i6 = i0 & 8;

        if $i6 != 8 goto label4;

        virtualinvoke r1.<android.location.Location: void setBearing(float)>(f1);

     label4:
        $i5 = i0 & 16;

        if $i5 != 16 goto label5;

        virtualinvoke r1.<android.location.Location: void setAccuracy(float)>(f2);

     label5:
        return r1;
    }

    private int getGeofenceStatus(int)
    {
        com.android.server.location.GpsLocationProvider r0;
        int i0;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case -149: goto label2;
            case -103: goto label4;
            case -102: goto label6;
            case -101: goto label3;
            case 0: goto label1;
            case 100: goto label5;
            default: goto label7;
        };

     label1:
        return 0;

     label2:
        return 5;

     label3:
        return 2;

     label4:
        return 4;

     label5:
        return 1;

     label6:
        return 3;

     label7:
        return -1;
    }

    private void reportGeofenceTransition(int, int, double, double, double, float, float, float, long, int, long)
    {
        com.android.server.location.GpsLocationProvider r0;
        int i0, i1, i3, $i5;
        double d0, d1, d2;
        float f0, f1, f2;
        long l2, l4;
        android.location.Location r1;
        android.hardware.location.GeofenceHardwareImpl $r2, $r3, $r4;
        android.content.Context $r5;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        f0 := @parameter5: float;

        f1 := @parameter6: float;

        f2 := @parameter7: float;

        l2 := @parameter8: long;

        i3 := @parameter9: int;

        l4 := @parameter10: long;

        $r2 = r0.<com.android.server.location.GpsLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl>;

        if $r2 != null goto label1;

        $r5 = r0.<com.android.server.location.GpsLocationProvider: android.content.Context mContext>;

        $r4 = staticinvoke <android.hardware.location.GeofenceHardwareImpl: android.hardware.location.GeofenceHardwareImpl getInstance(android.content.Context)>($r5);

        r0.<com.android.server.location.GpsLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl> = $r4;

     label1:
        r1 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: android.location.Location buildLocation(int,double,double,double,float,float,float,long)>(i1, d0, d1, d2, f0, f1, f2, l2);

        $r3 = r0.<com.android.server.location.GpsLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl>;

        $i5 = <android.location.FusedBatchOptions$SourceTechnologies: int GNSS>;

        virtualinvoke $r3.<android.hardware.location.GeofenceHardwareImpl: void reportGeofenceTransition(int,android.location.Location,int,long,int,int)>(i0, r1, i3, l4, 0, $i5);

        return;
    }

    private void reportGeofenceStatus(int, int, double, double, double, float, float, float, long)
    {
        com.android.server.location.GpsLocationProvider r0;
        int i0, i1, $i4;
        double d0, d1, d2;
        float f0, f1, f2;
        long l2;
        android.location.Location r1;
        byte b3;
        android.hardware.location.GeofenceHardwareImpl $r2, $r3, $r4;
        android.content.Context $r5;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        f0 := @parameter5: float;

        f1 := @parameter6: float;

        f2 := @parameter7: float;

        l2 := @parameter8: long;

        $r2 = r0.<com.android.server.location.GpsLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl>;

        if $r2 != null goto label1;

        $r5 = r0.<com.android.server.location.GpsLocationProvider: android.content.Context mContext>;

        $r4 = staticinvoke <android.hardware.location.GeofenceHardwareImpl: android.hardware.location.GeofenceHardwareImpl getInstance(android.content.Context)>($r5);

        r0.<com.android.server.location.GpsLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl> = $r4;

     label1:
        r1 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: android.location.Location buildLocation(int,double,double,double,float,float,float,long)>(i1, d0, d1, d2, f0, f1, f2, l2);

        b3 = 1;

        if i0 != 2 goto label2;

        b3 = 0;

     label2:
        $r3 = r0.<com.android.server.location.GpsLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl>;

        $i4 = <android.location.FusedBatchOptions$SourceTechnologies: int GNSS>;

        virtualinvoke $r3.<android.hardware.location.GeofenceHardwareImpl: void reportGeofenceMonitorStatus(int,int,android.location.Location,int)>(0, b3, r1, $i4);

        return;
    }

    private void reportGeofenceAddStatus(int, int)
    {
        com.android.server.location.GpsLocationProvider r0;
        int i0, i1, $i2;
        android.hardware.location.GeofenceHardwareImpl $r1, $r2, $r4;
        android.content.Context $r3;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.location.GpsLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl>;

        if $r1 != null goto label1;

        $r3 = r0.<com.android.server.location.GpsLocationProvider: android.content.Context mContext>;

        $r4 = staticinvoke <android.hardware.location.GeofenceHardwareImpl: android.hardware.location.GeofenceHardwareImpl getInstance(android.content.Context)>($r3);

        r0.<com.android.server.location.GpsLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl> = $r4;

     label1:
        $r2 = r0.<com.android.server.location.GpsLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl>;

        $i2 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: int getGeofenceStatus(int)>(i1);

        virtualinvoke $r2.<android.hardware.location.GeofenceHardwareImpl: void reportGeofenceAddStatus(int,int)>(i0, $i2);

        return;
    }

    private void reportGeofenceRemoveStatus(int, int)
    {
        com.android.server.location.GpsLocationProvider r0;
        int i0, i1, $i2;
        android.hardware.location.GeofenceHardwareImpl $r1, $r2, $r4;
        android.content.Context $r3;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.location.GpsLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl>;

        if $r1 != null goto label1;

        $r3 = r0.<com.android.server.location.GpsLocationProvider: android.content.Context mContext>;

        $r4 = staticinvoke <android.hardware.location.GeofenceHardwareImpl: android.hardware.location.GeofenceHardwareImpl getInstance(android.content.Context)>($r3);

        r0.<com.android.server.location.GpsLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl> = $r4;

     label1:
        $r2 = r0.<com.android.server.location.GpsLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl>;

        $i2 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: int getGeofenceStatus(int)>(i1);

        virtualinvoke $r2.<android.hardware.location.GeofenceHardwareImpl: void reportGeofenceRemoveStatus(int,int)>(i0, $i2);

        return;
    }

    private void reportGeofencePauseStatus(int, int)
    {
        com.android.server.location.GpsLocationProvider r0;
        int i0, i1, $i2;
        android.hardware.location.GeofenceHardwareImpl $r1, $r2, $r4;
        android.content.Context $r3;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.location.GpsLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl>;

        if $r1 != null goto label1;

        $r3 = r0.<com.android.server.location.GpsLocationProvider: android.content.Context mContext>;

        $r4 = staticinvoke <android.hardware.location.GeofenceHardwareImpl: android.hardware.location.GeofenceHardwareImpl getInstance(android.content.Context)>($r3);

        r0.<com.android.server.location.GpsLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl> = $r4;

     label1:
        $r2 = r0.<com.android.server.location.GpsLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl>;

        $i2 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: int getGeofenceStatus(int)>(i1);

        virtualinvoke $r2.<android.hardware.location.GeofenceHardwareImpl: void reportGeofencePauseStatus(int,int)>(i0, $i2);

        return;
    }

    private void reportGeofenceResumeStatus(int, int)
    {
        com.android.server.location.GpsLocationProvider r0;
        int i0, i1, $i2;
        android.hardware.location.GeofenceHardwareImpl $r1, $r2, $r4;
        android.content.Context $r3;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.location.GpsLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl>;

        if $r1 != null goto label1;

        $r3 = r0.<com.android.server.location.GpsLocationProvider: android.content.Context mContext>;

        $r4 = staticinvoke <android.hardware.location.GeofenceHardwareImpl: android.hardware.location.GeofenceHardwareImpl getInstance(android.content.Context)>($r3);

        r0.<com.android.server.location.GpsLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl> = $r4;

     label1:
        $r2 = r0.<com.android.server.location.GpsLocationProvider: android.hardware.location.GeofenceHardwareImpl mGeofenceHardwareImpl>;

        $i2 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: int getGeofenceStatus(int)>(i1);

        virtualinvoke $r2.<android.hardware.location.GeofenceHardwareImpl: void reportGeofenceResumeStatus(int,int)>(i0, $i2);

        return;
    }

    public android.location.INetInitiatedListener getNetInitiatedListener()
    {
        com.android.server.location.GpsLocationProvider r0;
        android.location.INetInitiatedListener $r1;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        $r1 = r0.<com.android.server.location.GpsLocationProvider: android.location.INetInitiatedListener mNetInitiatedListener>;

        return $r1;
    }

    public void reportNiNotification(int, int, int, int, int, java.lang.String, java.lang.String, int, int, java.lang.String)
    {
        com.android.server.location.GpsLocationProvider r0;
        int i0, i1, i2, i3, i4, i5, i6, $i10, $i11, $i12;
        java.lang.String r1, r2, r3, $r19, $r31, $r39, $r41, $r46;
        com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification r4, $r29;
        android.os.Bundle r5, $r32;
        java.util.Properties r6, $r35;
        java.util.Map$Entry r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r30, $r42, $r44, $r45;
        java.util.Set $r33;
        java.io.StringReader $r34;
        java.lang.Object $r36, $r37, $r40;
        com.android.internal.location.GpsNetInitiatedHandler $r38;
        boolean $z0, $z1, $z2, $z3;
        java.io.IOException $r43;
        java.util.Iterator r47;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        r1 := @parameter5: java.lang.String;

        r2 := @parameter6: java.lang.String;

        i5 := @parameter7: int;

        i6 := @parameter8: int;

        r3 := @parameter9: java.lang.String;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("GpsLocationProvider", "reportNiNotification: entered");

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notificationId: ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", niType: ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", notifyFlags: ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", timeout: ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", defaultResponse: ");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("GpsLocationProvider", $r19);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requestorId: ");

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", text: ");

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", requestorIdEncoding: ");

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", textEncoding: ");

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("GpsLocationProvider", $r31);

        $r29 = new com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification;

        specialinvoke $r29.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: void <init>()>();

        r4 = $r29;

        r4.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: int notificationId> = i0;

        r4.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: int niType> = i1;

        $i11 = i2 & 1;

        if $i11 == 0 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        r4.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: boolean needNotify> = $z2;

        $i12 = i2 & 2;

        if $i12 == 0 goto label03;

        $z3 = 1;

        goto label04;

     label03:
        $z3 = 0;

     label04:
        r4.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: boolean needVerify> = $z3;

        $i10 = i2 & 4;

        if $i10 == 0 goto label05;

        $z1 = 1;

        goto label06;

     label05:
        $z1 = 0;

     label06:
        r4.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: boolean privacyOverride> = $z1;

        r4.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: int timeout> = i3;

        r4.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: int defaultResponse> = i4;

        r4.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: java.lang.String requestorId> = r1;

        r4.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: java.lang.String text> = r2;

        r4.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: int requestorIdEncoding> = i5;

        r4.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: int textEncoding> = i6;

        $r32 = new android.os.Bundle;

        specialinvoke $r32.<android.os.Bundle: void <init>()>();

        r5 = $r32;

        if r3 != null goto label07;

        r3 = "";

     label07:
        $r35 = new java.util.Properties;

        specialinvoke $r35.<java.util.Properties: void <init>()>();

        r6 = $r35;

     label08:
        $r34 = new java.io.StringReader;

        specialinvoke $r34.<java.io.StringReader: void <init>(java.lang.String)>(r3);

        virtualinvoke r6.<java.util.Properties: void load(java.io.Reader)>($r34);

     label09:
        goto label11;

     label10:
        $r43 := @caughtexception;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reportNiNotification cannot parse extras data: ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GpsLocationProvider", $r46);

     label11:
        $r33 = virtualinvoke r6.<java.util.Properties: java.util.Set entrySet()>();

        r47 = interfaceinvoke $r33.<java.util.Set: java.util.Iterator iterator()>();

     label12:
        $z0 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r37 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r37;

        $r36 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r41 = (java.lang.String) $r36;

        $r40 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r39 = (java.lang.String) $r40;

        virtualinvoke r5.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>($r41, $r39);

        goto label12;

     label13:
        r4.<com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification: android.os.Bundle extras> = r5;

        $r38 = r0.<com.android.server.location.GpsLocationProvider: com.android.internal.location.GpsNetInitiatedHandler mNIHandler>;

        virtualinvoke $r38.<com.android.internal.location.GpsNetInitiatedHandler: void handleNiNotification(com.android.internal.location.GpsNetInitiatedHandler$GpsNiNotification)>(r4);

        return;

        catch java.io.IOException from label08 to label09 with label10;
    }

    private void requestSetID(int)
    {
        com.android.server.location.GpsLocationProvider r0;
        int i0, $i2, $i3;
        android.telephony.TelephonyManager r1;
        byte b1;
        java.lang.String r2, r3, r6;
        android.content.Context $r4;
        java.lang.Object $r5;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.server.location.GpsLocationProvider: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r1 = (android.telephony.TelephonyManager) $r5;

        b1 = 0;

        r2 = "";

        $i2 = i0 & 1;

        if $i2 != 1 goto label3;

        r3 = virtualinvoke r1.<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>();

        if r3 != null goto label1;

        goto label2;

     label1:
        r2 = r3;

        b1 = 1;

     label2:
        goto label5;

     label3:
        $i3 = i0 & 2;

        if $i3 != 2 goto label5;

        r6 = virtualinvoke r1.<android.telephony.TelephonyManager: java.lang.String getLine1Number()>();

        if r6 != null goto label4;

        goto label5;

     label4:
        r2 = r6;

        b1 = 2;

     label5:
        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void native_agps_set_id(int,java.lang.String)>(b1, r2);

        return;
    }

    private void requestUtcTime()
    {
        com.android.server.location.GpsLocationProvider r0;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void sendMessage(int,int,java.lang.Object)>(5, 0, null);

        return;
    }

    private void requestRefLocation(int)
    {
        com.android.server.location.GpsLocationProvider r0;
        int i0, i1, i3, i4, i5, $i8, $i9, $i10;
        android.telephony.TelephonyManager r1;
        android.telephony.gsm.GsmCellLocation r2;
        byte b2;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.telephony.CellLocation $r5;
        java.lang.String $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.location.GpsLocationProvider: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r1 = (android.telephony.TelephonyManager) $r4;

        i1 = virtualinvoke r1.<android.telephony.TelephonyManager: int getPhoneType()>();

        if i1 != 1 goto label6;

        $r5 = virtualinvoke r1.<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>();

        r2 = (android.telephony.gsm.GsmCellLocation) $r5;

        if r2 == null goto label4;

        $r6 = virtualinvoke r1.<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>();

        if $r6 == null goto label4;

        $r7 = virtualinvoke r1.<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>();

        $i8 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i8 <= 3 goto label4;

        $r9 = virtualinvoke r1.<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>();

        $r8 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        $r10 = virtualinvoke r1.<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>();

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int)>(3);

        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        i5 = virtualinvoke r1.<android.telephony.TelephonyManager: int getNetworkType()>();

        if i5 == 3 goto label1;

        if i5 == 8 goto label1;

        if i5 == 9 goto label1;

        if i5 == 10 goto label1;

        if i5 != 15 goto label2;

     label1:
        b2 = 2;

        goto label3;

     label2:
        b2 = 1;

     label3:
        $i9 = virtualinvoke r2.<android.telephony.gsm.GsmCellLocation: int getLac()>();

        $i10 = virtualinvoke r2.<android.telephony.gsm.GsmCellLocation: int getCid()>();

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void native_agps_set_ref_location_cellid(int,int,int,int,int)>(b2, i3, i4, $i9, $i10);

        goto label5;

     label4:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GpsLocationProvider", "Error getting cell location info.");

     label5:
        goto label7;

     label6:
        if i1 != 2 goto label7;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GpsLocationProvider", "CDMA not supported.");

     label7:
        return;
    }

    private void sendMessage(int, int, java.lang.Object)
    {
        com.android.server.location.GpsLocationProvider r0;
        int i0, i1;
        java.lang.Object r1;
        android.os.PowerManager$WakeLock $r2;
        android.os.Handler $r3;
        android.os.Message $r4;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = r0.<com.android.server.location.GpsLocationProvider: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r2.<android.os.PowerManager$WakeLock: void acquire()>();

        $r3 = r0.<com.android.server.location.GpsLocationProvider: android.os.Handler mHandler>;

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, i1, 1, r1);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

        return;
    }

    private java.lang.String getSelectedApn()
    {
        com.android.server.location.GpsLocationProvider r0;
        android.net.Uri r1;
        android.database.Cursor r2;
        java.lang.String r3;
        java.lang.Throwable r4, $r9;
        android.content.Context $r5;
        android.content.ContentResolver $r6;
        java.lang.String[] $r7;
        boolean $z0;
        java.lang.Exception $r8, r10;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://telephony/carriers/preferapn");

        r2 = null;

     label01:
        $r5 = r0.<com.android.server.location.GpsLocationProvider: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = "apn";

        r2 = virtualinvoke $r6.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, $r7, null, null, "name ASC");

        if r2 == null goto label04;

        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label04;

        r3 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(0);

     label02:
        if r2 == null goto label03;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label03:
        return r3;

     label04:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GpsLocationProvider", "No APN found to select.");

     label05:
        if r2 == null goto label11;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

        goto label11;

     label06:
        $r8 := @caughtexception;

        r10 = $r8;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("GpsLocationProvider", "Error encountered on selecting the APN.", r10);

     label07:
        if r2 == null goto label11;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

        goto label11;

     label08:
        $r9 := @caughtexception;

        r4 = $r9;

     label09:
        if r2 == null goto label10;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label10:
        throw r4;

     label11:
        return null;

        catch java.lang.Exception from label01 to label02 with label06;
        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private int getApnIpType(java.lang.String)
    {
        com.android.server.location.GpsLocationProvider r0;
        java.lang.String r1, r2, $r5, $r13, $r15, $r19;
        android.database.Cursor r3;
        int i0, $i2, $i3;
        java.lang.Throwable r4, $r21;
        boolean $z0, $z1;
        java.lang.Object[] $r6;
        android.content.Context $r7;
        android.content.ContentResolver $r8;
        java.lang.String[] $r9;
        android.net.Uri $r10;
        java.lang.StringBuilder $r11, $r12, $r14, $r16, $r18, $r20;
        java.lang.Exception $r17, r22;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label01;

        return 0;

     label01:
        $r5 = r0.<com.android.server.location.GpsLocationProvider: java.lang.String mAGpsApn>;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label02;

        $i3 = r0.<com.android.server.location.GpsLocationProvider: int mApnIpType>;

        if $i3 == 0 goto label02;

        $i2 = r0.<com.android.server.location.GpsLocationProvider: int mApnIpType>;

        return $i2;

     label02:
        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r1;

        r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("current = 1 and apn = \'%s\' and carrier_enabled = 1", $r6);

        r3 = null;

     label03:
        $r7 = r0.<com.android.server.location.GpsLocationProvider: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r10 = <android.provider.Telephony$Carriers: android.net.Uri CONTENT_URI>;

        $r9 = newarray (java.lang.String)[1];

        $r9[0] = "protocol";

        r3 = virtualinvoke $r8.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r10, $r9, r2, null, "name ASC");

        if null == r3 goto label06;

        $z1 = interfaceinvoke r3.<android.database.Cursor: boolean moveToFirst()>();

        if $z1 == 0 goto label06;

        $r15 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(0);

        i0 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: int translateToApnIpType(java.lang.String,java.lang.String)>($r15, r1);

     label04:
        if r3 == null goto label05;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label05:
        return i0;

     label06:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No entry found in query for APN: ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GpsLocationProvider", $r13);

     label07:
        if r3 == null goto label13;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

        goto label13;

     label08:
        $r17 := @caughtexception;

        r22 = $r17;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error encountered on APN query for: ");

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("GpsLocationProvider", $r19, r22);

     label09:
        if r3 == null goto label13;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

        goto label13;

     label10:
        $r21 := @caughtexception;

        r4 = $r21;

     label11:
        if r3 == null goto label12;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label12:
        throw r4;

     label13:
        return 0;

        catch java.lang.Exception from label03 to label04 with label08;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private int translateToApnIpType(java.lang.String, java.lang.String)
    {
        com.android.server.location.GpsLocationProvider r0;
        java.lang.String r1, r2, r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r7;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = "IP";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r5 = "IPV6";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        return 2;

     label2:
        $r6 = "IPV4V6";

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label3;

        return 3;

     label3:
        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = r1;

        $r7[1] = r2;

        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unknown IP Protocol: %s, for APN: %s", $r7);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GpsLocationProvider", r3);

        return 0;
    }

    private void setRouting()
    {
        com.android.server.location.GpsLocationProvider r0;
        boolean z0, $z1;
        java.net.InetAddress $r1, $r2, $r6, $r10;
        android.net.ConnectivityManager $r3;
        java.lang.StringBuilder $r4, $r5, $r7, $r9, $r11, $r13;
        java.lang.String $r8, $r12;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        $r1 = r0.<com.android.server.location.GpsLocationProvider: java.net.InetAddress mAGpsDataConnectionIpAddr>;

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.location.GpsLocationProvider: android.net.ConnectivityManager mConnMgr>;

        $r2 = r0.<com.android.server.location.GpsLocationProvider: java.net.InetAddress mAGpsDataConnectionIpAddr>;

        z0 = virtualinvoke $r3.<android.net.ConnectivityManager: boolean requestRouteToHostAddress(int,java.net.InetAddress)>(3, $r2);

        if z0 != 0 goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error requesting route to host: ");

        $r10 = r0.<com.android.server.location.GpsLocationProvider: java.net.InetAddress mAGpsDataConnectionIpAddr>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("GpsLocationProvider", $r12);

        goto label3;

     label2:
        $z1 = <com.android.server.location.GpsLocationProvider: boolean DEBUG>;

        if $z1 == 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Successfully requested route to host: ");

        $r6 = r0.<com.android.server.location.GpsLocationProvider: java.net.InetAddress mAGpsDataConnectionIpAddr>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("GpsLocationProvider", $r8);

     label3:
        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.location.GpsLocationProvider r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.lang.StringBuilder r4, $r5, $r6, $r7, $r9, $r10, $r12, $r13;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String $r14, $r16;

        r0 := @this: com.android.server.location.GpsLocationProvider;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        r4 = $r5;

        $r6 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mFixInterval=");

        $i0 = r0.<com.android.server.location.GpsLocationProvider: int mFixInterval>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r9 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDisableGps (battery saver mode)=");

        $z0 = r0.<com.android.server.location.GpsLocationProvider: boolean mDisableGps>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r12 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mEngineCapabilities=0x");

        $i1 = r0.<com.android.server.location.GpsLocationProvider: int mEngineCapabilities>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $z1 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: boolean hasCapability(int)>(1);

        if $z1 == 0 goto label1;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SCHED ");

     label1:
        $z3 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: boolean hasCapability(int)>(2);

        if $z3 == 0 goto label2;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MSB ");

     label2:
        $z2 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: boolean hasCapability(int)>(4);

        if $z2 == 0 goto label3;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MSA ");

     label3:
        $z5 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: boolean hasCapability(int)>(8);

        if $z5 == 0 goto label4;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SINGLE_SHOT ");

     label4:
        $z4 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: boolean hasCapability(int)>(16);

        if $z4 == 0 goto label5;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ON_DEMAND_TIME ");

     label5:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\n");

        $r16 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: java.lang.String native_get_internal_state()>();

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r4);

        return;
    }

    private static native void class_init_native();

    private static native boolean native_is_supported();

    private native boolean native_init();

    private native void native_cleanup();

    private native boolean native_set_position_mode(int, int, int, int, int);

    private native boolean native_start();

    private native boolean native_stop();

    private native void native_delete_aiding_data(int);

    private native int native_read_sv_status(int[], float[], float[], float[], int[]);

    private native int native_read_nmea(byte[], int);

    private native void native_inject_location(double, double, float);

    private native void native_inject_time(long, long, int);

    private native boolean native_supports_xtra();

    private native void native_inject_xtra_data(byte[], int);

    private native java.lang.String native_get_internal_state();

    private native void native_agps_data_conn_open(java.lang.String, int);

    private native void native_agps_data_conn_closed();

    private native void native_agps_data_conn_failed();

    private native void native_agps_ni_message(byte[], int);

    private native void native_set_agps_server(int, java.lang.String, int);

    private native void native_send_ni_response(int, int);

    private native void native_agps_set_ref_location_cellid(int, int, int, int, int);

    private native void native_agps_set_id(int, java.lang.String);

    private native void native_update_network_state(boolean, int, boolean, boolean, java.lang.String, java.lang.String);

    private static native boolean native_is_geofence_supported();

    private static native boolean native_add_geofence(int, double, double, double, int, int, int, int);

    private static native boolean native_remove_geofence(int);

    private static native boolean native_resume_geofence(int, int);

    private static native boolean native_pause_geofence(int);

    private static native boolean native_is_measurement_supported();

    private native boolean native_start_measurement_collection();

    private native boolean native_stop_measurement_collection();

    private static native boolean native_is_navigation_message_supported();

    private native boolean native_start_navigation_message_collection();

    private native boolean native_stop_navigation_message_collection();

    private static native void native_configuration_update(java.lang.String);

    static com.android.server.location.GpsStatusListenerHelper access$000(com.android.server.location.GpsLocationProvider)
    {
        com.android.server.location.GpsLocationProvider r0;
        com.android.server.location.GpsStatusListenerHelper $r1;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        $r1 = r0.<com.android.server.location.GpsLocationProvider: com.android.server.location.GpsStatusListenerHelper mListenerHelper>;

        return $r1;
    }

    static boolean access$100()
    {
        boolean $z0;

        $z0 = staticinvoke <com.android.server.location.GpsLocationProvider: boolean native_is_measurement_supported()>();

        return $z0;
    }

    static boolean access$200(com.android.server.location.GpsLocationProvider)
    {
        com.android.server.location.GpsLocationProvider r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        $z0 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: boolean native_start_measurement_collection()>();

        return $z0;
    }

    static boolean access$300(com.android.server.location.GpsLocationProvider)
    {
        com.android.server.location.GpsLocationProvider r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        $z0 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: boolean native_stop_measurement_collection()>();

        return $z0;
    }

    static boolean access$400()
    {
        boolean $z0;

        $z0 = staticinvoke <com.android.server.location.GpsLocationProvider: boolean native_is_navigation_message_supported()>();

        return $z0;
    }

    static boolean access$500(com.android.server.location.GpsLocationProvider)
    {
        com.android.server.location.GpsLocationProvider r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        $z0 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: boolean native_start_navigation_message_collection()>();

        return $z0;
    }

    static boolean access$600(com.android.server.location.GpsLocationProvider)
    {
        com.android.server.location.GpsLocationProvider r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        $z0 = specialinvoke r0.<com.android.server.location.GpsLocationProvider: boolean native_stop_navigation_message_collection()>();

        return $z0;
    }

    static boolean access$700()
    {
        boolean $z0;

        $z0 = <com.android.server.location.GpsLocationProvider: boolean DEBUG>;

        return $z0;
    }

    static void access$800(com.android.server.location.GpsLocationProvider, boolean)
    {
        com.android.server.location.GpsLocationProvider r0;
        boolean z0;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void startNavigating(boolean)>(z0);

        return;
    }

    static void access$900(com.android.server.location.GpsLocationProvider)
    {
        com.android.server.location.GpsLocationProvider r0;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void hibernate()>();

        return;
    }

    static void access$1000(com.android.server.location.GpsLocationProvider, android.content.Intent)
    {
        com.android.server.location.GpsLocationProvider r0;
        android.content.Intent r1;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        r1 := @parameter1: android.content.Intent;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void checkSmsSuplInit(android.content.Intent)>(r1);

        return;
    }

    static void access$1100(com.android.server.location.GpsLocationProvider, android.content.Intent)
    {
        com.android.server.location.GpsLocationProvider r0;
        android.content.Intent r1;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        r1 := @parameter1: android.content.Intent;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void checkWapSuplInit(android.content.Intent)>(r1);

        return;
    }

    static android.content.Context access$1200(com.android.server.location.GpsLocationProvider)
    {
        com.android.server.location.GpsLocationProvider r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        $r1 = r0.<com.android.server.location.GpsLocationProvider: android.content.Context mContext>;

        return $r1;
    }

    static void access$1300(com.android.server.location.GpsLocationProvider)
    {
        com.android.server.location.GpsLocationProvider r0;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void updateLowPowerMode()>();

        return;
    }

    static java.lang.Object access$1400(com.android.server.location.GpsLocationProvider)
    {
        com.android.server.location.GpsLocationProvider r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        $r1 = r0.<com.android.server.location.GpsLocationProvider: java.lang.Object mLock>;

        return $r1;
    }

    static java.util.Properties access$1500(com.android.server.location.GpsLocationProvider)
    {
        com.android.server.location.GpsLocationProvider r0;
        java.util.Properties $r1;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        $r1 = r0.<com.android.server.location.GpsLocationProvider: java.util.Properties mProperties>;

        return $r1;
    }

    static void access$1600(com.android.server.location.GpsLocationProvider, android.content.Context, java.util.Properties)
    {
        com.android.server.location.GpsLocationProvider r0;
        android.content.Context r1;
        java.util.Properties r2;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        r1 := @parameter1: android.content.Context;

        r2 := @parameter2: java.util.Properties;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void reloadGpsProperties(android.content.Context,java.util.Properties)>(r1, r2);

        return;
    }

    static boolean access$1700(com.android.server.location.GpsLocationProvider)
    {
        com.android.server.location.GpsLocationProvider r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        $z0 = r0.<com.android.server.location.GpsLocationProvider: boolean mSuplEsEnabled>;

        return $z0;
    }

    static com.android.internal.location.GpsNetInitiatedHandler access$1800(com.android.server.location.GpsLocationProvider)
    {
        com.android.server.location.GpsLocationProvider r0;
        com.android.internal.location.GpsNetInitiatedHandler $r1;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        $r1 = r0.<com.android.server.location.GpsLocationProvider: com.android.internal.location.GpsNetInitiatedHandler mNIHandler>;

        return $r1;
    }

    static android.os.Handler access$2000(com.android.server.location.GpsLocationProvider)
    {
        com.android.server.location.GpsLocationProvider r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        $r1 = r0.<com.android.server.location.GpsLocationProvider: android.os.Handler mHandler>;

        return $r1;
    }

    static android.util.NtpTrustedTime access$2100(com.android.server.location.GpsLocationProvider)
    {
        com.android.server.location.GpsLocationProvider r0;
        android.util.NtpTrustedTime $r1;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        $r1 = r0.<com.android.server.location.GpsLocationProvider: android.util.NtpTrustedTime mNtpTime>;

        return $r1;
    }

    static void access$2200(com.android.server.location.GpsLocationProvider, long, long, int)
    {
        com.android.server.location.GpsLocationProvider r0;
        long l0, l1;
        int i2;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        i2 := @parameter3: int;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void native_inject_time(long,long,int)>(l0, l1, i2);

        return;
    }

    static void access$2300(com.android.server.location.GpsLocationProvider, int, int, java.lang.Object)
    {
        com.android.server.location.GpsLocationProvider r0;
        int i0, i1;
        java.lang.Object r1;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.Object;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void sendMessage(int,int,java.lang.Object)>(i0, i1, r1);

        return;
    }

    static boolean access$2400(com.android.server.location.GpsLocationProvider)
    {
        com.android.server.location.GpsLocationProvider r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        $z0 = r0.<com.android.server.location.GpsLocationProvider: boolean mPeriodicTimeInjection>;

        return $z0;
    }

    static android.os.PowerManager$WakeLock access$2500(com.android.server.location.GpsLocationProvider)
    {
        com.android.server.location.GpsLocationProvider r0;
        android.os.PowerManager$WakeLock $r1;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        $r1 = r0.<com.android.server.location.GpsLocationProvider: android.os.PowerManager$WakeLock mWakeLock>;

        return $r1;
    }

    static void access$2600(com.android.server.location.GpsLocationProvider, byte[], int)
    {
        com.android.server.location.GpsLocationProvider r0;
        byte[] r1;
        int i0;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void native_inject_xtra_data(byte[],int)>(r1, i0);

        return;
    }

    static boolean access$2700()
    {
        boolean $z0;

        $z0 = staticinvoke <com.android.server.location.GpsLocationProvider: boolean native_is_geofence_supported()>();

        return $z0;
    }

    static boolean access$2800(int, double, double, double, int, int, int, int)
    {
        int i0, i1, i2, i3, i4;
        double d0, d1, d2;
        boolean $z0;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        $z0 = staticinvoke <com.android.server.location.GpsLocationProvider: boolean native_add_geofence(int,double,double,double,int,int,int,int)>(i0, d0, d1, d2, i1, i2, i3, i4);

        return $z0;
    }

    static boolean access$2900(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        $z0 = staticinvoke <com.android.server.location.GpsLocationProvider: boolean native_remove_geofence(int)>(i0);

        return $z0;
    }

    static boolean access$3000(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        $z0 = staticinvoke <com.android.server.location.GpsLocationProvider: boolean native_pause_geofence(int)>(i0);

        return $z0;
    }

    static boolean access$3100(int, int)
    {
        int i0, i1;
        boolean $z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = staticinvoke <com.android.server.location.GpsLocationProvider: boolean native_resume_geofence(int,int)>(i0, i1);

        return $z0;
    }

    static void access$3200(com.android.server.location.GpsLocationProvider, int, int)
    {
        com.android.server.location.GpsLocationProvider r0;
        int i0, i1;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void native_send_ni_response(int,int)>(i0, i1);

        return;
    }

    static void access$3300(com.android.server.location.GpsLocationProvider)
    {
        com.android.server.location.GpsLocationProvider r0;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void handleEnable()>();

        return;
    }

    static void access$3400(com.android.server.location.GpsLocationProvider)
    {
        com.android.server.location.GpsLocationProvider r0;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void handleDisable()>();

        return;
    }

    static void access$3500(com.android.server.location.GpsLocationProvider, com.android.internal.location.ProviderRequest, android.os.WorkSource)
    {
        com.android.server.location.GpsLocationProvider r0;
        com.android.internal.location.ProviderRequest r1;
        android.os.WorkSource r2;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        r1 := @parameter1: com.android.internal.location.ProviderRequest;

        r2 := @parameter2: android.os.WorkSource;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void handleSetRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)>(r1, r2);

        return;
    }

    static void access$3600(com.android.server.location.GpsLocationProvider, int, android.net.NetworkInfo)
    {
        com.android.server.location.GpsLocationProvider r0;
        int i0;
        android.net.NetworkInfo r1;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        i0 := @parameter1: int;

        r1 := @parameter2: android.net.NetworkInfo;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void handleUpdateNetworkState(int,android.net.NetworkInfo)>(i0, r1);

        return;
    }

    static void access$3700(com.android.server.location.GpsLocationProvider)
    {
        com.android.server.location.GpsLocationProvider r0;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void handleInjectNtpTime()>();

        return;
    }

    static boolean access$3800(com.android.server.location.GpsLocationProvider)
    {
        com.android.server.location.GpsLocationProvider r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        $z0 = r0.<com.android.server.location.GpsLocationProvider: boolean mSupportsXtra>;

        return $z0;
    }

    static void access$3900(com.android.server.location.GpsLocationProvider)
    {
        com.android.server.location.GpsLocationProvider r0;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void handleDownloadXtraData()>();

        return;
    }

    static int access$4002(com.android.server.location.GpsLocationProvider, int)
    {
        com.android.server.location.GpsLocationProvider r0;
        int i0;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        i0 := @parameter1: int;

        r0.<com.android.server.location.GpsLocationProvider: int mInjectNtpTimePending> = i0;

        return i0;
    }

    static int access$4102(com.android.server.location.GpsLocationProvider, int)
    {
        com.android.server.location.GpsLocationProvider r0;
        int i0;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        i0 := @parameter1: int;

        r0.<com.android.server.location.GpsLocationProvider: int mDownloadXtraDataPending> = i0;

        return i0;
    }

    static void access$4200(com.android.server.location.GpsLocationProvider, android.location.Location)
    {
        com.android.server.location.GpsLocationProvider r0;
        android.location.Location r1;

        r0 := @parameter0: com.android.server.location.GpsLocationProvider;

        r1 := @parameter1: android.location.Location;

        specialinvoke r0.<com.android.server.location.GpsLocationProvider: void handleUpdateLocation(android.location.Location)>(r1);

        return;
    }

    static void <clinit>()
    {
        boolean $z0, $z1;
        com.android.internal.location.ProviderProperties $r0;

        <com.android.server.location.GpsLocationProvider: int USED_FOR_FIX_MASK> = 2;

        <com.android.server.location.GpsLocationProvider: int ALMANAC_MASK> = 1;

        <com.android.server.location.GpsLocationProvider: int EPHEMERIS_MASK> = 0;

        <com.android.server.location.GpsLocationProvider: int MAX_SVS> = 32;

        <com.android.server.location.GpsLocationProvider: java.lang.String SIM_STATE_CHANGED> = "android.intent.action.SIM_STATE_CHANGED";

        <com.android.server.location.GpsLocationProvider: java.lang.String ALARM_TIMEOUT> = "com.android.internal.location.ALARM_TIMEOUT";

        <com.android.server.location.GpsLocationProvider: java.lang.String ALARM_WAKEUP> = "com.android.internal.location.ALARM_WAKEUP";

        <com.android.server.location.GpsLocationProvider: java.lang.String WAKELOCK_KEY> = "GpsLocationProvider";

        <com.android.server.location.GpsLocationProvider: int STATE_IDLE> = 2;

        <com.android.server.location.GpsLocationProvider: int STATE_DOWNLOADING> = 1;

        <com.android.server.location.GpsLocationProvider: int STATE_PENDING_NETWORK> = 0;

        <com.android.server.location.GpsLocationProvider: long RETRY_INTERVAL> = 300000L;

        <com.android.server.location.GpsLocationProvider: long NTP_INTERVAL> = 86400000L;

        <com.android.server.location.GpsLocationProvider: int GPS_POLLING_THRESHOLD_INTERVAL> = 10000;

        <com.android.server.location.GpsLocationProvider: int NO_FIX_TIMEOUT> = 60000;

        <com.android.server.location.GpsLocationProvider: long RECENT_FIX_TIMEOUT> = 10000L;

        <com.android.server.location.GpsLocationProvider: java.lang.String BATTERY_SAVER_GPS_MODE> = "batterySaverGpsMode";

        <com.android.server.location.GpsLocationProvider: int BATTERY_SAVER_MODE_DISABLED_WHEN_SCREEN_OFF> = 1;

        <com.android.server.location.GpsLocationProvider: int BATTERY_SAVER_MODE_NO_CHANGE> = 0;

        <com.android.server.location.GpsLocationProvider: int TCP_MAX_PORT> = 65535;

        <com.android.server.location.GpsLocationProvider: int TCP_MIN_PORT> = 0;

        <com.android.server.location.GpsLocationProvider: int GPS_GEOFENCE_ERROR_GENERIC> = -149;

        <com.android.server.location.GpsLocationProvider: int GPS_GEOFENCE_ERROR_INVALID_TRANSITION> = -103;

        <com.android.server.location.GpsLocationProvider: int GPS_GEOFENCE_ERROR_ID_UNKNOWN> = -102;

        <com.android.server.location.GpsLocationProvider: int GPS_GEOFENCE_ERROR_ID_EXISTS> = -101;

        <com.android.server.location.GpsLocationProvider: int GPS_GEOFENCE_ERROR_TOO_MANY_GEOFENCES> = 100;

        <com.android.server.location.GpsLocationProvider: int GPS_GEOFENCE_OPERATION_SUCCESS> = 0;

        <com.android.server.location.GpsLocationProvider: int GPS_GEOFENCE_AVAILABLE> = 2;

        <com.android.server.location.GpsLocationProvider: int GPS_GEOFENCE_UNAVAILABLE> = 1;

        <com.android.server.location.GpsLocationProvider: java.lang.String DEFAULT_PROPERTIES_FILE> = "/etc/gps.conf";

        <com.android.server.location.GpsLocationProvider: java.lang.String PROPERTIES_FILE_SUFFIX> = ".conf";

        <com.android.server.location.GpsLocationProvider: java.lang.String PROPERTIES_FILE_PREFIX> = "/etc/gps";

        <com.android.server.location.GpsLocationProvider: int AGPS_SETID_TYPE_MSISDN> = 2;

        <com.android.server.location.GpsLocationProvider: int AGPS_SETID_TYPE_IMSI> = 1;

        <com.android.server.location.GpsLocationProvider: int AGPS_SETID_TYPE_NONE> = 0;

        <com.android.server.location.GpsLocationProvider: int AGPS_REG_LOCATION_TYPE_MAC> = 3;

        <com.android.server.location.GpsLocationProvider: int AGPS_REF_LOCATION_TYPE_UMTS_CELLID> = 2;

        <com.android.server.location.GpsLocationProvider: int AGPS_REF_LOCATION_TYPE_GSM_CELLID> = 1;

        <com.android.server.location.GpsLocationProvider: int AGPS_RIL_REQUEST_REFLOC_MAC> = 2;

        <com.android.server.location.GpsLocationProvider: int AGPS_RIL_REQUEST_REFLOC_CELLID> = 1;

        <com.android.server.location.GpsLocationProvider: int AGPS_RIL_REQUEST_SETID_MSISDN> = 2;

        <com.android.server.location.GpsLocationProvider: int AGPS_RIL_REQUEST_SETID_IMSI> = 1;

        <com.android.server.location.GpsLocationProvider: int DOWNLOAD_XTRA_DATA_FINISHED> = 11;

        <com.android.server.location.GpsLocationProvider: int INJECT_NTP_TIME_FINISHED> = 10;

        <com.android.server.location.GpsLocationProvider: int REMOVE_LISTENER> = 9;

        <com.android.server.location.GpsLocationProvider: int ADD_LISTENER> = 8;

        <com.android.server.location.GpsLocationProvider: int UPDATE_LOCATION> = 7;

        <com.android.server.location.GpsLocationProvider: int DOWNLOAD_XTRA_DATA> = 6;

        <com.android.server.location.GpsLocationProvider: int INJECT_NTP_TIME> = 5;

        <com.android.server.location.GpsLocationProvider: int UPDATE_NETWORK_STATE> = 4;

        <com.android.server.location.GpsLocationProvider: int SET_REQUEST> = 3;

        <com.android.server.location.GpsLocationProvider: int ENABLE> = 2;

        <com.android.server.location.GpsLocationProvider: int CHECK_LOCATION> = 1;

        <com.android.server.location.GpsLocationProvider: int AGPS_DATA_CONNECTION_OPEN> = 2;

        <com.android.server.location.GpsLocationProvider: int AGPS_DATA_CONNECTION_OPENING> = 1;

        <com.android.server.location.GpsLocationProvider: int AGPS_DATA_CONNECTION_CLOSED> = 0;

        <com.android.server.location.GpsLocationProvider: int APN_IPV4V6> = 3;

        <com.android.server.location.GpsLocationProvider: int APN_IPV6> = 2;

        <com.android.server.location.GpsLocationProvider: int APN_IPV4> = 1;

        <com.android.server.location.GpsLocationProvider: int APN_INVALID> = 0;

        <com.android.server.location.GpsLocationProvider: int AGPS_TYPE_C2K> = 2;

        <com.android.server.location.GpsLocationProvider: int AGPS_TYPE_SUPL> = 1;

        <com.android.server.location.GpsLocationProvider: int AGPS_SUPL_MODE_MSB> = 1;

        <com.android.server.location.GpsLocationProvider: int AGPS_SUPL_MODE_MSA> = 2;

        <com.android.server.location.GpsLocationProvider: int GPS_CAPABILITY_ON_DEMAND_TIME> = 16;

        <com.android.server.location.GpsLocationProvider: int GPS_CAPABILITY_SINGLE_SHOT> = 8;

        <com.android.server.location.GpsLocationProvider: int GPS_CAPABILITY_MSA> = 4;

        <com.android.server.location.GpsLocationProvider: int GPS_CAPABILITY_MSB> = 2;

        <com.android.server.location.GpsLocationProvider: int GPS_CAPABILITY_SCHEDULING> = 1;

        <com.android.server.location.GpsLocationProvider: int GPS_DELETE_ALL> = 65535;

        <com.android.server.location.GpsLocationProvider: int GPS_DELETE_CELLDB_INFO> = 32768;

        <com.android.server.location.GpsLocationProvider: int GPS_DELETE_RTI> = 1024;

        <com.android.server.location.GpsLocationProvider: int GPS_DELETE_SADATA> = 512;

        <com.android.server.location.GpsLocationProvider: int GPS_DELETE_SVSTEER> = 256;

        <com.android.server.location.GpsLocationProvider: int GPS_DELETE_SVDIR> = 128;

        <com.android.server.location.GpsLocationProvider: int GPS_DELETE_HEALTH> = 64;

        <com.android.server.location.GpsLocationProvider: int GPS_DELETE_UTC> = 32;

        <com.android.server.location.GpsLocationProvider: int GPS_DELETE_IONO> = 16;

        <com.android.server.location.GpsLocationProvider: int GPS_DELETE_TIME> = 8;

        <com.android.server.location.GpsLocationProvider: int GPS_DELETE_POSITION> = 4;

        <com.android.server.location.GpsLocationProvider: int GPS_DELETE_ALMANAC> = 2;

        <com.android.server.location.GpsLocationProvider: int GPS_DELETE_EPHEMERIS> = 1;

        <com.android.server.location.GpsLocationProvider: int LOCATION_HAS_ACCURACY> = 16;

        <com.android.server.location.GpsLocationProvider: int LOCATION_HAS_BEARING> = 8;

        <com.android.server.location.GpsLocationProvider: int LOCATION_HAS_SPEED> = 4;

        <com.android.server.location.GpsLocationProvider: int LOCATION_HAS_ALTITUDE> = 2;

        <com.android.server.location.GpsLocationProvider: int LOCATION_HAS_LAT_LONG> = 1;

        <com.android.server.location.GpsLocationProvider: int LOCATION_INVALID> = 0;

        <com.android.server.location.GpsLocationProvider: int GPS_AGPS_DATA_CONN_FAILED> = 5;

        <com.android.server.location.GpsLocationProvider: int GPS_AGPS_DATA_CONN_DONE> = 4;

        <com.android.server.location.GpsLocationProvider: int GPS_AGPS_DATA_CONNECTED> = 3;

        <com.android.server.location.GpsLocationProvider: int GPS_RELEASE_AGPS_DATA_CONN> = 2;

        <com.android.server.location.GpsLocationProvider: int GPS_REQUEST_AGPS_DATA_CONN> = 1;

        <com.android.server.location.GpsLocationProvider: int GPS_STATUS_ENGINE_OFF> = 4;

        <com.android.server.location.GpsLocationProvider: int GPS_STATUS_ENGINE_ON> = 3;

        <com.android.server.location.GpsLocationProvider: int GPS_STATUS_SESSION_END> = 2;

        <com.android.server.location.GpsLocationProvider: int GPS_STATUS_SESSION_BEGIN> = 1;

        <com.android.server.location.GpsLocationProvider: int GPS_STATUS_NONE> = 0;

        <com.android.server.location.GpsLocationProvider: int GPS_POSITION_RECURRENCE_SINGLE> = 1;

        <com.android.server.location.GpsLocationProvider: int GPS_POSITION_RECURRENCE_PERIODIC> = 0;

        <com.android.server.location.GpsLocationProvider: int GPS_POSITION_MODE_MS_ASSISTED> = 2;

        <com.android.server.location.GpsLocationProvider: int GPS_POSITION_MODE_MS_BASED> = 1;

        <com.android.server.location.GpsLocationProvider: int GPS_POSITION_MODE_STANDALONE> = 0;

        <com.android.server.location.GpsLocationProvider: java.lang.String TAG> = "GpsLocationProvider";

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("GpsLocationProvider", 3);

        <com.android.server.location.GpsLocationProvider: boolean DEBUG> = $z0;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("GpsLocationProvider", 2);

        <com.android.server.location.GpsLocationProvider: boolean VERBOSE> = $z1;

        $r0 = new com.android.internal.location.ProviderProperties;

        specialinvoke $r0.<com.android.internal.location.ProviderProperties: void <init>(boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>(1, 1, 0, 0, 1, 1, 1, 3, 1);

        <com.android.server.location.GpsLocationProvider: com.android.internal.location.ProviderProperties PROPERTIES> = $r0;

        staticinvoke <com.android.server.location.GpsLocationProvider: void class_init_native()>();

        return;
    }
}
