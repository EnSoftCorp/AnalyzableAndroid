final class com.android.server.am.NativeCrashListener extends java.lang.Thread
{
    static final java.lang.String TAG;
    static final boolean DEBUG;
    static final boolean MORE_DEBUG;
    static final java.lang.String DEBUGGERD_SOCKET_PATH;
    static final long SOCKET_TIMEOUT_MILLIS;
    final com.android.server.am.ActivityManagerService mAm;

    void <init>(com.android.server.am.ActivityManagerService)
    {
        com.android.server.am.NativeCrashListener r0;
        com.android.server.am.ActivityManagerService r1;

        r0 := @this: com.android.server.am.NativeCrashListener;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        r0.<com.android.server.am.NativeCrashListener: com.android.server.am.ActivityManagerService mAm> = r1;

        return;
    }

    public void run()
    {
        com.android.server.am.NativeCrashListener r0;
        byte[] r1;
        java.io.File r2, $r9;
        java.net.InetUnixAddress r3, $r10;
        java.net.InetSocketAddress r4, $r11;
        java.io.FileDescriptor r5, r21;
        android.system.StructUcred r6;
        java.lang.Throwable r7, $r19;
        boolean $z0;
        int $i0, $i1, $i3, $i4, $i5;
        java.lang.Exception $r12, $r13, $r15, $r17, $r20, r24, r28;
        android.system.ErrnoException $r14, $r16, $r18;

        r0 := @this: com.android.server.am.NativeCrashListener;

        r1 = newarray (byte)[1];

        $r9 = new java.io.File;

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>("/data/system/ndebugsocket");

        r2 = $r9;

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label01;

        virtualinvoke r2.<java.io.File: boolean delete()>();

     label01:
        $i1 = <android.system.OsConstants: int AF_UNIX>;

        $i0 = <android.system.OsConstants: int SOCK_STREAM>;

        r21 = staticinvoke <android.system.Os: java.io.FileDescriptor socket(int,int,int)>($i1, $i0, 0);

        $r10 = new java.net.InetUnixAddress;

        specialinvoke $r10.<java.net.InetUnixAddress: void <init>(java.lang.String)>("/data/system/ndebugsocket");

        r3 = $r10;

        staticinvoke <android.system.Os: void bind(java.io.FileDescriptor,java.net.InetAddress,int)>(r21, r3, 0);

        staticinvoke <android.system.Os: void listen(java.io.FileDescriptor,int)>(r21, 1);

     label02:
        $r11 = new java.net.InetSocketAddress;

        specialinvoke $r11.<java.net.InetSocketAddress: void <init>()>();

        r4 = $r11;

        r5 = null;

     label03:
        r5 = staticinvoke <android.system.Os: java.io.FileDescriptor accept(java.io.FileDescriptor,java.net.InetSocketAddress)>(r21, r4);

        if r5 == null goto label04;

        $i3 = <android.system.OsConstants: int SOL_SOCKET>;

        $i4 = <android.system.OsConstants: int SO_PEERCRED>;

        r6 = staticinvoke <android.system.Os: android.system.StructUcred getsockoptUcred(java.io.FileDescriptor,int,int)>(r5, $i3, $i4);

        $i5 = r6.<android.system.StructUcred: int uid>;

        if $i5 != 0 goto label04;

        virtualinvoke r0.<com.android.server.am.NativeCrashListener: void consumeNativeCrashData(java.io.FileDescriptor)>(r5);

     label04:
        if r5 == null goto label28;

     label05:
        staticinvoke <android.system.Os: int write(java.io.FileDescriptor,byte[],int,int)>(r5, r1, 0, 1);

     label06:
        goto label08;

     label07:
        $r17 := @caughtexception;

     label08:
        staticinvoke <android.system.Os: void close(java.io.FileDescriptor)>(r5);

     label09:
        goto label28;

     label10:
        $r14 := @caughtexception;

        goto label28;

     label11:
        $r13 := @caughtexception;

        r24 = $r13;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("NativeCrashListener", "Error handling connection", r24);

     label12:
        if r5 == null goto label28;

     label13:
        staticinvoke <android.system.Os: int write(java.io.FileDescriptor,byte[],int,int)>(r5, r1, 0, 1);

     label14:
        goto label16;

     label15:
        $r12 := @caughtexception;

     label16:
        staticinvoke <android.system.Os: void close(java.io.FileDescriptor)>(r5);

     label17:
        goto label28;

     label18:
        $r16 := @caughtexception;

        goto label28;

     label19:
        $r19 := @caughtexception;

        r7 = $r19;

     label20:
        if r5 == null goto label27;

     label21:
        staticinvoke <android.system.Os: int write(java.io.FileDescriptor,byte[],int,int)>(r5, r1, 0, 1);

     label22:
        goto label24;

     label23:
        $r15 := @caughtexception;

     label24:
        staticinvoke <android.system.Os: void close(java.io.FileDescriptor)>(r5);

     label25:
        goto label27;

     label26:
        $r18 := @caughtexception;

     label27:
        throw r7;

     label28:
        goto label02;

     label29:
        $r20 := @caughtexception;

        r28 = $r20;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NativeCrashListener", "Unable to init native debug socket!", r28);

        return;

        catch java.lang.Exception from label05 to label06 with label07;
        catch android.system.ErrnoException from label08 to label09 with label10;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label13 to label14 with label15;
        catch android.system.ErrnoException from label16 to label17 with label18;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Exception from label21 to label22 with label23;
        catch android.system.ErrnoException from label24 to label25 with label26;
        catch java.lang.Throwable from label19 to label20 with label19;
        catch java.lang.Exception from label01 to label29 with label29;
    }

    static int unpackInt(byte[], int)
    {
        byte[] r0;
        int i0, $i6, $i8, $i10, $i12, $i13, $i14, $i15, $i16, $i17;
        short s1, s2, s3, s4;
        byte $b5, $b7, $b9, $b11;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $b5 = r0[i0];

        s1 = $b5 & 255;

        $i6 = i0 + 1;

        $b7 = r0[$i6];

        s2 = $b7 & 255;

        $i8 = i0 + 2;

        $b9 = r0[$i8];

        s3 = $b9 & 255;

        $i10 = i0 + 3;

        $b11 = r0[$i10];

        s4 = $b11 & 255;

        $i13 = s1 << 24;

        $i12 = s2 << 16;

        $i16 = $i13 | $i12;

        $i14 = s3 << 8;

        $i15 = $i16 | $i14;

        $i17 = $i15 | s4;

        return $i17;
    }

    static int readExactly(java.io.FileDescriptor, byte[], int, int) throws android.system.ErrnoException, java.io.InterruptedIOException
    {
        java.io.FileDescriptor r0;
        byte[] r1;
        int i0, i1, i2, i3, $i4;

        r0 := @parameter0: java.io.FileDescriptor;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 = 0;

     label1:
        if i1 <= 0 goto label3;

        $i4 = i0 + i2;

        i3 = staticinvoke <android.system.Os: int read(java.io.FileDescriptor,byte[],int,int)>(r0, r1, $i4, i1);

        if i3 > 0 goto label2;

        return -1;

     label2:
        i1 = i1 - i3;

        i2 = i2 + i3;

        goto label1;

     label3:
        return i2;
    }

    void consumeNativeCrashData(java.io.FileDescriptor)
    {
        com.android.server.am.NativeCrashListener r0;
        java.io.FileDescriptor r1;
        byte[] r2, $r21;
        java.io.ByteArrayOutputStream r3, $r9;
        android.system.StructTimeval r4;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i8, $i10, $i12, i15;
        com.android.server.am.ProcessRecord r5;
        android.util.SparseArray r6, $r10, $r12;
        java.lang.Throwable r7, r8, $r23, $r24;
        com.android.server.am.ActivityManagerService $r11, $r13, $r20, r26;
        java.lang.Object $r14;
        java.lang.StringBuilder $r15, $r16, $r17;
        boolean $z0;
        java.lang.String $r18, $r19, r27;
        byte $b11;
        com.android.server.am.NativeCrashListener$NativeCrashReporter $r22;
        java.lang.Exception $r25, r28;

        r0 := @this: com.android.server.am.NativeCrashListener;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 = newarray (byte)[4096];

        $r9 = new java.io.ByteArrayOutputStream;

        specialinvoke $r9.<java.io.ByteArrayOutputStream: void <init>(int)>(4096);

        r3 = $r9;

     label01:
        r4 = staticinvoke <android.system.StructTimeval: android.system.StructTimeval fromMillis(long)>(2000L);

        $i4 = <android.system.OsConstants: int SOL_SOCKET>;

        $i3 = <android.system.OsConstants: int SO_RCVTIMEO>;

        staticinvoke <android.system.Os: void setsockoptTimeval(java.io.FileDescriptor,int,int,android.system.StructTimeval)>(r1, $i4, $i3, r4);

        $i5 = <android.system.OsConstants: int SOL_SOCKET>;

        $i6 = <android.system.OsConstants: int SO_SNDTIMEO>;

        staticinvoke <android.system.Os: void setsockoptTimeval(java.io.FileDescriptor,int,int,android.system.StructTimeval)>(r1, $i5, $i6, r4);

        i0 = staticinvoke <com.android.server.am.NativeCrashListener: int readExactly(java.io.FileDescriptor,byte[],int,int)>(r1, r2, 0, 8);

        if i0 == 8 goto label03;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NativeCrashListener", "Unable to read from debuggerd");

     label02:
        return;

     label03:
        i1 = staticinvoke <com.android.server.am.NativeCrashListener: int unpackInt(byte[],int)>(r2, 0);

        i2 = staticinvoke <com.android.server.am.NativeCrashListener: int unpackInt(byte[],int)>(r2, 4);

        if i1 <= 0 goto label21;

        $r11 = r0.<com.android.server.am.NativeCrashListener: com.android.server.am.ActivityManagerService mAm>;

        $r10 = $r11.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        r6 = $r10;

        entermonitor $r10;

     label04:
        $r13 = r0.<com.android.server.am.NativeCrashListener: com.android.server.am.ActivityManagerService mAm>;

        $r12 = $r13.<com.android.server.am.ActivityManagerService: android.util.SparseArray mPidsSelfLocked>;

        $r14 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r5 = (com.android.server.am.ProcessRecord) $r14;

        exitmonitor r6;

     label05:
        goto label08;

     label06:
        $r24 := @caughtexception;

        r7 = $r24;

        exitmonitor r6;

     label07:
        throw r7;

     label08:
        if r5 == null goto label19;

        $z0 = r5.<com.android.server.am.ProcessRecord: boolean persistent>;

        if $z0 == 0 goto label10;

     label09:
        return;

     label10:
        $i8 = lengthof r2;

        i15 = staticinvoke <android.system.Os: int read(java.io.FileDescriptor,byte[],int,int)>(r1, r2, 0, $i8);

        if i15 <= 0 goto label12;

        $i10 = i15 - 1;

        $b11 = r2[$i10];

        if $b11 != 0 goto label11;

        $i12 = i15 - 1;

        virtualinvoke r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r2, 0, $i12);

        goto label13;

     label11:
        virtualinvoke r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r2, 0, i15);

     label12:
        if i15 > 0 goto label10;

     label13:
        $r20 = r0.<com.android.server.am.NativeCrashListener: com.android.server.am.ActivityManagerService mAm>;

        r26 = $r20;

        entermonitor $r20;

     label14:
        r5.<com.android.server.am.ProcessRecord: boolean crashing> = 1;

        r5.<com.android.server.am.ProcessRecord: boolean forceCrashReport> = 1;

        exitmonitor r26;

     label15:
        goto label18;

     label16:
        $r23 := @caughtexception;

        r8 = $r23;

        exitmonitor r26;

     label17:
        throw r8;

     label18:
        $r19 = new java.lang.String;

        $r21 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r19.<java.lang.String: void <init>(byte[],java.lang.String)>($r21, "UTF-8");

        r27 = $r19;

        $r22 = new com.android.server.am.NativeCrashListener$NativeCrashReporter;

        specialinvoke $r22.<com.android.server.am.NativeCrashListener$NativeCrashReporter: void <init>(com.android.server.am.NativeCrashListener,com.android.server.am.ProcessRecord,int,java.lang.String)>(r0, r5, i2, r27);

        virtualinvoke $r22.<com.android.server.am.NativeCrashListener$NativeCrashReporter: void start()>();

        goto label20;

     label19:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find ProcessRecord for pid ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NativeCrashListener", $r18);

     label20:
        goto label22;

     label21:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NativeCrashListener", "Bogus pid!");

     label22:
        goto label24;

     label23:
        $r25 := @caughtexception;

        r28 = $r25;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NativeCrashListener", "Exception dealing with report", r28);

     label24:
        return;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
        catch java.lang.Exception from label01 to label02 with label23;
        catch java.lang.Exception from label03 to label09 with label23;
        catch java.lang.Exception from label10 to label22 with label23;
    }

    public static void <clinit>()
    {
        <com.android.server.am.NativeCrashListener: long SOCKET_TIMEOUT_MILLIS> = 2000L;

        <com.android.server.am.NativeCrashListener: java.lang.String DEBUGGERD_SOCKET_PATH> = "/data/system/ndebugsocket";

        <com.android.server.am.NativeCrashListener: boolean MORE_DEBUG> = 0;

        <com.android.server.am.NativeCrashListener: boolean DEBUG> = 0;

        <com.android.server.am.NativeCrashListener: java.lang.String TAG> = "NativeCrashListener";

        return;
    }
}
