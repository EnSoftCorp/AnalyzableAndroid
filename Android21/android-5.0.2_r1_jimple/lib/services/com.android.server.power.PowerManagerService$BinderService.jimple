final class com.android.server.power.PowerManagerService$BinderService extends android.os.IPowerManager$Stub
{
    final com.android.server.power.PowerManagerService this$0;

    private void <init>(com.android.server.power.PowerManagerService)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        com.android.server.power.PowerManagerService r1;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        r1 := @parameter0: com.android.server.power.PowerManagerService;

        r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0> = r1;

        specialinvoke r0.<android.os.IPowerManager$Stub: void <init>()>();

        return;
    }

    public void acquireWakeLockWithUid(android.os.IBinder, int, java.lang.String, java.lang.String, int)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        android.os.IBinder r1;
        int i0, i1;
        java.lang.String r2, r3;
        android.os.WorkSource $r4;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        if i1 >= 0 goto label1;

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

     label1:
        $r4 = new android.os.WorkSource;

        specialinvoke $r4.<android.os.WorkSource: void <init>(int)>(i1);

        virtualinvoke r0.<com.android.server.power.PowerManagerService$BinderService: void acquireWakeLock(android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String)>(r1, i0, r2, r3, $r4, null);

        return;
    }

    public void powerHint(int, int)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        int i0, i1;
        com.android.server.power.PowerManagerService $r1, $r2, $r4;
        boolean $z0;
        android.content.Context $r3;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $z0 = staticinvoke <com.android.server.power.PowerManagerService: boolean access$2900(com.android.server.power.PowerManagerService)>($r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$700(com.android.server.power.PowerManagerService)>($r2);

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$3000(com.android.server.power.PowerManagerService,int,int)>($r4, i0, i1);

        return;
    }

    public void acquireWakeLock(android.os.IBinder, int, java.lang.String, java.lang.String, android.os.WorkSource, java.lang.String)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        android.os.IBinder r1;
        int i0, i1, i2, $i4, $i5;
        java.lang.String r2, r3, r5;
        android.os.WorkSource r4;
        long l3;
        java.lang.Throwable r6, $r16;
        com.android.server.power.PowerManagerService $r7, $r9, $r11, $r13;
        android.content.Context $r8, $r10, $r12;
        java.lang.IllegalArgumentException $r14, $r15;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.os.WorkSource;

        r5 := @parameter5: java.lang.String;

        if r1 != null goto label01;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("lock must not be null");

        throw $r14;

     label01:
        if r3 != null goto label02;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("packageName must not be null");

        throw $r15;

     label02:
        staticinvoke <android.os.PowerManager: void validateWakeLockParameters(int,java.lang.String)>(i0, r2);

        $r7 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r8 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$700(com.android.server.power.PowerManagerService)>($r7);

        virtualinvoke $r8.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.WAKE_LOCK", null);

        $i4 = i0 & 64;

        if $i4 == 0 goto label03;

        $r13 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r12 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$700(com.android.server.power.PowerManagerService)>($r13);

        virtualinvoke $r12.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

     label03:
        if r4 == null goto label04;

        $i5 = virtualinvoke r4.<android.os.WorkSource: int size()>();

        if $i5 == 0 goto label04;

        $r11 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r10 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$700(com.android.server.power.PowerManagerService)>($r11);

        virtualinvoke $r10.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.UPDATE_DEVICE_STATS", null);

        goto label05;

     label04:
        r4 = null;

     label05:
        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label06:
        $r9 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$3100(com.android.server.power.PowerManagerService,android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String,int,int)>($r9, r1, i0, r2, r3, r4, r5, i1, i2);

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        goto label10;

     label08:
        $r16 := @caughtexception;

        r6 = $r16;

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw r6;

     label10:
        return;

        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void releaseWakeLock(android.os.IBinder, int)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        android.os.IBinder r1;
        int i0;
        long l1;
        java.lang.Throwable r2, $r7;
        com.android.server.power.PowerManagerService $r3, $r5;
        android.content.Context $r4;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("lock must not be null");

        throw $r6;

     label1:
        $r3 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r4 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$700(com.android.server.power.PowerManagerService)>($r3);

        virtualinvoke $r4.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.WAKE_LOCK", null);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r5 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$3200(com.android.server.power.PowerManagerService,android.os.IBinder,int)>($r5, r1, i0);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label6;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void updateWakeLockUids(android.os.IBinder, int[])
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        android.os.IBinder r1;
        int[] r2;
        android.os.WorkSource r3, $r4;
        int i0, $i1, $i2;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: int[];

        r3 = null;

        if r2 == null goto label2;

        $r4 = new android.os.WorkSource;

        specialinvoke $r4.<android.os.WorkSource: void <init>()>();

        r3 = $r4;

        i0 = 0;

     label1:
        $i1 = lengthof r2;

        if i0 >= $i1 goto label2;

        $i2 = r2[i0];

        virtualinvoke r3.<android.os.WorkSource: boolean add(int)>($i2);

        i0 = i0 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<com.android.server.power.PowerManagerService$BinderService: void updateWakeLockWorkSource(android.os.IBinder,android.os.WorkSource,java.lang.String)>(r1, r3, null);

        return;
    }

    public void updateWakeLockWorkSource(android.os.IBinder, android.os.WorkSource, java.lang.String)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        android.os.IBinder r1;
        android.os.WorkSource r2;
        java.lang.String r3;
        int i0, $i2;
        long l1;
        java.lang.Throwable r4, $r10;
        com.android.server.power.PowerManagerService $r5, $r7, $r8;
        android.content.Context $r6, $r9;
        java.lang.IllegalArgumentException $r11;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: android.os.WorkSource;

        r3 := @parameter2: java.lang.String;

        if r1 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("lock must not be null");

        throw $r11;

     label1:
        $r5 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r6 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$700(com.android.server.power.PowerManagerService)>($r5);

        virtualinvoke $r6.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.WAKE_LOCK", null);

        if r2 == null goto label2;

        $i2 = virtualinvoke r2.<android.os.WorkSource: int size()>();

        if $i2 == 0 goto label2;

        $r8 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r9 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$700(com.android.server.power.PowerManagerService)>($r8);

        virtualinvoke $r9.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.UPDATE_DEVICE_STATS", null);

        goto label3;

     label2:
        r2 = null;

     label3:
        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label4:
        $r7 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$3300(com.android.server.power.PowerManagerService,android.os.IBinder,android.os.WorkSource,java.lang.String,int)>($r7, r1, r2, r3, i0);

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label8;

     label6:
        $r10 := @caughtexception;

        r4 = $r10;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r4;

     label8:
        return;

        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public boolean isWakeLockLevelSupported(int)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        int i0;
        long l1;
        boolean z0;
        java.lang.Throwable r1, $r3;
        com.android.server.power.PowerManagerService $r2;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        z0 = staticinvoke <com.android.server.power.PowerManagerService: boolean access$3400(com.android.server.power.PowerManagerService,int)>($r2, i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void userActivity(long, int, int)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        long l0, l3, $l5, $l8, $l10, l16;
        int i1, i2, $i4, $i7, $i12, $i13, i15;
        java.lang.Object r1, $r10;
        java.lang.Throwable r2, r3, $r18, $r21;
        com.android.server.power.PowerManagerService $r4, $r6, $r7, $r11, $r12, $r13;
        android.content.Context $r5, $r9;
        byte $b6, $b9;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r19;
        java.lang.String $r20;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r5 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$700(com.android.server.power.PowerManagerService)>($r4);

        $i4 = virtualinvoke $r5.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DEVICE_POWER");

        if $i4 == 0 goto label07;

        $r7 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r9 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$700(com.android.server.power.PowerManagerService)>($r7);

        $i7 = virtualinvoke $r9.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.USER_ACTIVITY");

        if $i7 == 0 goto label07;

        $r11 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r10 = staticinvoke <com.android.server.power.PowerManagerService: java.lang.Object access$800(com.android.server.power.PowerManagerService)>($r11);

        r1 = $r10;

        entermonitor $r10;

     label01:
        $r12 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $l8 = staticinvoke <com.android.server.power.PowerManagerService: long access$3500(com.android.server.power.PowerManagerService)>($r12);

        $l10 = $l8 + 300000L;

        $b9 = l3 cmp $l10;

        if $b9 < 0 goto label02;

        $r13 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: long access$3502(com.android.server.power.PowerManagerService,long)>($r13, l3);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring call to PowerManager.userActivity() because the caller does not have DEVICE_POWER or USER_ACTIVITY permission.  Please fix your app!   pid=");

        $i13 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        $i12 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PowerManagerService", $r20);

     label02:
        exitmonitor r1;

     label03:
        goto label06;

     label04:
        $r18 := @caughtexception;

        r2 = $r18;

        exitmonitor r1;

     label05:
        throw r2;

     label06:
        return;

     label07:
        $l5 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $b6 = l0 cmp $l5;

        if $b6 <= 0 goto label08;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("event time must not be in the future");

        throw $r8;

     label08:
        i15 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l16 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label09:
        $r6 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$3600(com.android.server.power.PowerManagerService,long,int,int,int)>($r6, l0, i1, i2, i15);

     label10:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l16);

        goto label13;

     label11:
        $r21 := @caughtexception;

        r3 = $r21;

     label12:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l16);

        throw r3;

     label13:
        return;

        catch java.lang.Throwable from label01 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public void wakeUp(long)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        long l0, l2, $l3;
        int i1;
        java.lang.Throwable r1, $r6;
        byte $b4;
        com.android.server.power.PowerManagerService $r2, $r4;
        android.content.Context $r3;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        l0 := @parameter0: long;

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $b4 = l0 cmp $l3;

        if $b4 <= 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("event time must not be in the future");

        throw $r5;

     label1:
        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$700(com.android.server.power.PowerManagerService)>($r2);

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$3700(com.android.server.power.PowerManagerService,long,int)>($r4, l0, i1);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label6;

     label4:
        $r6 := @caughtexception;

        r1 = $r6;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r1;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void goToSleep(long, int, int)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        long l0, l4, $l5;
        int i1, i2, i3;
        java.lang.Throwable r1, $r5;
        byte $b6;
        com.android.server.power.PowerManagerService $r2, $r4;
        android.content.Context $r3;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $l5 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $b6 = l0 cmp $l5;

        if $b6 <= 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("event time must not be in the future");

        throw $r6;

     label1:
        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$700(com.android.server.power.PowerManagerService)>($r2);

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l4 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$3800(com.android.server.power.PowerManagerService,long,int,int,int)>($r4, l0, i1, i2, i3);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        goto label6;

     label4:
        $r5 := @caughtexception;

        r1 = $r5;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l4);

        throw r1;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void nap(long)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        long l0, l2, $l3;
        int i1;
        java.lang.Throwable r1, $r6;
        byte $b4;
        com.android.server.power.PowerManagerService $r2, $r4;
        android.content.Context $r3;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        l0 := @parameter0: long;

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $b4 = l0 cmp $l3;

        if $b4 <= 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("event time must not be in the future");

        throw $r5;

     label1:
        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$700(com.android.server.power.PowerManagerService)>($r2);

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$3900(com.android.server.power.PowerManagerService,long,int)>($r4, l0, i1);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label6;

     label4:
        $r6 := @caughtexception;

        r1 = $r6;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r1;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean isInteractive()
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        long l0;
        boolean z0;
        java.lang.Throwable r1, $r3;
        com.android.server.power.PowerManagerService $r2;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        z0 = staticinvoke <com.android.server.power.PowerManagerService: boolean access$4000(com.android.server.power.PowerManagerService)>($r2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isPowerSaveMode()
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        long l0;
        boolean z0;
        java.lang.Throwable r1, $r3;
        com.android.server.power.PowerManagerService $r2;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        z0 = staticinvoke <com.android.server.power.PowerManagerService: boolean access$4100(com.android.server.power.PowerManagerService)>($r2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean setPowerSaveMode(boolean)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        boolean z0, z1;
        long l0;
        java.lang.Throwable r1, $r5;
        com.android.server.power.PowerManagerService $r2, $r4;
        android.content.Context $r3;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        z0 := @parameter0: boolean;

        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$700(com.android.server.power.PowerManagerService)>($r2);

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        z1 = staticinvoke <com.android.server.power.PowerManagerService: boolean access$4200(com.android.server.power.PowerManagerService,boolean)>($r4, z0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z1;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void reboot(boolean, java.lang.String, boolean)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        boolean z0, z1, $z2;
        java.lang.String r1, $r5;
        long l0;
        java.lang.Throwable r2, $r9;
        com.android.server.power.PowerManagerService $r3, $r6, $r7;
        android.content.Context $r4, $r8;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        $r3 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r4 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$700(com.android.server.power.PowerManagerService)>($r3);

        virtualinvoke $r4.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.REBOOT", null);

        $r5 = "recovery";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label1;

        $r7 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r8 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$700(com.android.server.power.PowerManagerService)>($r7);

        virtualinvoke $r8.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.RECOVERY", null);

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r6 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$4300(com.android.server.power.PowerManagerService,boolean,boolean,java.lang.String,boolean)>($r6, 0, z0, r1, z1);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label6;

     label4:
        $r9 := @caughtexception;

        r2 = $r9;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void shutdown(boolean, boolean)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        boolean z0, z1;
        long l0;
        java.lang.Throwable r1, $r5;
        com.android.server.power.PowerManagerService $r2, $r4;
        android.content.Context $r3;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$700(com.android.server.power.PowerManagerService)>($r2);

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.REBOOT", null);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$4300(com.android.server.power.PowerManagerService,boolean,boolean,java.lang.String,boolean)>($r4, 1, z0, null, z1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label5;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void crash(java.lang.String)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        java.lang.String r1;
        long l0;
        java.lang.Throwable r2, $r6;
        com.android.server.power.PowerManagerService $r3, $r5;
        android.content.Context $r4;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r4 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$700(com.android.server.power.PowerManagerService)>($r3);

        virtualinvoke $r4.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.REBOOT", null);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r5 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$4400(com.android.server.power.PowerManagerService,java.lang.String)>($r5, r1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setStayOnSetting(int)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        int i0;
        long l1;
        java.lang.Throwable r1, $r5;
        com.android.server.power.PowerManagerService $r2, $r4;
        android.content.Context $r3;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$700(com.android.server.power.PowerManagerService)>($r2);

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.WRITE_SETTINGS", null);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$4500(com.android.server.power.PowerManagerService,int)>($r4, i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label5;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setMaximumScreenOffTimeoutFromDeviceAdmin(int)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        int i0;
        long l1;
        java.lang.Throwable r1, $r3;
        com.android.server.power.PowerManagerService $r2;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$4600(com.android.server.power.PowerManagerService,int)>($r2, i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label5;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setTemporaryScreenBrightnessSettingOverride(int)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        int i0;
        long l1;
        java.lang.Throwable r1, $r5;
        com.android.server.power.PowerManagerService $r2, $r4;
        android.content.Context $r3;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$700(com.android.server.power.PowerManagerService)>($r2);

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$4700(com.android.server.power.PowerManagerService,int)>($r4, i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label5;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setTemporaryScreenAutoBrightnessAdjustmentSettingOverride(float)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        float f0;
        long l0;
        java.lang.Throwable r1, $r5;
        com.android.server.power.PowerManagerService $r2, $r4;
        android.content.Context $r3;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        f0 := @parameter0: float;

        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$700(com.android.server.power.PowerManagerService)>($r2);

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$4800(com.android.server.power.PowerManagerService,float)>($r4, f0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label5;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setAttentionLight(boolean, int)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        boolean z0;
        int i0;
        long l1;
        java.lang.Throwable r1, $r5;
        com.android.server.power.PowerManagerService $r2, $r4;
        android.content.Context $r3;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$700(com.android.server.power.PowerManagerService)>($r2);

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DEVICE_POWER", null);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$4900(com.android.server.power.PowerManagerService,boolean,int)>($r4, z0, i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label5;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        long l0;
        java.lang.Throwable r4, $r14;
        com.android.server.power.PowerManagerService $r5, $r7;
        android.content.Context $r6;
        int $i1, $i2, $i3;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r13;
        java.lang.String $r12;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r5 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        $r6 = staticinvoke <com.android.server.power.PowerManagerService: android.content.Context access$700(com.android.server.power.PowerManagerService)>($r5);

        $i1 = virtualinvoke $r6.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i1 == 0 goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump PowerManager from from pid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        return;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r7 = r0.<com.android.server.power.PowerManagerService$BinderService: com.android.server.power.PowerManagerService this$0>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$5000(com.android.server.power.PowerManagerService,java.io.PrintWriter)>($r7, r2);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label6;

     label4:
        $r14 := @caughtexception;

        r4 = $r14;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r4;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    void <init>(com.android.server.power.PowerManagerService, com.android.server.power.PowerManagerService$1)
    {
        com.android.server.power.PowerManagerService$BinderService r0;
        com.android.server.power.PowerManagerService r1;
        com.android.server.power.PowerManagerService$1 r2;

        r0 := @this: com.android.server.power.PowerManagerService$BinderService;

        r1 := @parameter0: com.android.server.power.PowerManagerService;

        r2 := @parameter1: com.android.server.power.PowerManagerService$1;

        specialinvoke r0.<com.android.server.power.PowerManagerService$BinderService: void <init>(com.android.server.power.PowerManagerService)>(r1);

        return;
    }
}
