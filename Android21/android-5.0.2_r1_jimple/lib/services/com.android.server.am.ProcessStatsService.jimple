public final class com.android.server.am.ProcessStatsService extends com.android.internal.app.IProcessStats$Stub
{
    static final java.lang.String TAG;
    static final boolean DEBUG;
    static final int MAX_HISTORIC_STATES;
    static final java.lang.String STATE_FILE_PREFIX;
    static final java.lang.String STATE_FILE_SUFFIX;
    static final java.lang.String STATE_FILE_CHECKIN_SUFFIX;
    static long WRITE_PERIOD;
    final com.android.server.am.ActivityManagerService mAm;
    final java.io.File mBaseDir;
    com.android.internal.app.ProcessStats mProcessStats;
    android.util.AtomicFile mFile;
    boolean mCommitPending;
    boolean mShuttingDown;
    int mLastMemOnlyState;
    boolean mMemFactorLowered;
    final java.util.concurrent.locks.ReentrantLock mWriteLock;
    final java.lang.Object mPendingWriteLock;
    android.util.AtomicFile mPendingWriteFile;
    android.os.Parcel mPendingWrite;
    boolean mPendingWriteCommitted;
    long mLastWriteTime;

    public void <init>(com.android.server.am.ActivityManagerService, java.io.File)
    {
        com.android.server.am.ProcessStatsService r0;
        com.android.server.am.ActivityManagerService r1;
        java.io.File r2, $r5;
        java.util.concurrent.locks.ReentrantLock $r3;
        java.lang.Object $r4;
        com.android.internal.app.ProcessStats $r6;
        com.android.server.am.ProcessStatsService$1 $r7;

        r0 := @this: com.android.server.am.ProcessStatsService;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        r2 := @parameter1: java.io.File;

        specialinvoke r0.<com.android.internal.app.IProcessStats$Stub: void <init>()>();

        r0.<com.android.server.am.ProcessStatsService: int mLastMemOnlyState> = -1;

        $r3 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock> = $r3;

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<com.android.server.am.ProcessStatsService: java.lang.Object mPendingWriteLock> = $r4;

        r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm> = r1;

        r0.<com.android.server.am.ProcessStatsService: java.io.File mBaseDir> = r2;

        $r5 = r0.<com.android.server.am.ProcessStatsService: java.io.File mBaseDir>;

        virtualinvoke $r5.<java.io.File: boolean mkdirs()>();

        $r6 = new com.android.internal.app.ProcessStats;

        specialinvoke $r6.<com.android.internal.app.ProcessStats: void <init>(boolean)>(1);

        r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats> = $r6;

        specialinvoke r0.<com.android.server.am.ProcessStatsService: void updateFile()>();

        $r7 = new com.android.server.am.ProcessStatsService$1;

        specialinvoke $r7.<com.android.server.am.ProcessStatsService$1: void <init>(com.android.server.am.ProcessStatsService)>(r0);

        staticinvoke <android.os.SystemProperties: void addChangeCallback(java.lang.Runnable)>($r7);

        return;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        com.android.server.am.ProcessStatsService r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        java.lang.RuntimeException r3, $r4;
        boolean $z0, $z1;

        r0 := @this: com.android.server.am.ProcessStatsService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

     label1:
        $z0 = specialinvoke r0.<com.android.internal.app.IProcessStats$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

        $z1 = r3 instanceof java.lang.SecurityException;

        if $z1 != 0 goto label4;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("ProcessStatsService", "Process Stats Crash", r3);

     label4:
        throw r3;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public com.android.internal.app.ProcessStats$ProcessState getProcessStateLocked(java.lang.String, int, int, java.lang.String)
    {
        com.android.server.am.ProcessStatsService r0;
        java.lang.String r1, r2;
        int i0, i1;
        com.android.internal.app.ProcessStats $r3;
        com.android.internal.app.ProcessStats$ProcessState $r4;

        r0 := @this: com.android.server.am.ProcessStatsService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        $r3 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $r4 = virtualinvoke $r3.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessStats$ProcessState getProcessStateLocked(java.lang.String,int,int,java.lang.String)>(r1, i0, i1, r2);

        return $r4;
    }

    public com.android.internal.app.ProcessStats$ServiceState getServiceStateLocked(java.lang.String, int, int, java.lang.String, java.lang.String)
    {
        com.android.server.am.ProcessStatsService r0;
        java.lang.String r1, r2, r3;
        int i0, i1;
        com.android.internal.app.ProcessStats $r4;
        com.android.internal.app.ProcessStats$ServiceState $r5;

        r0 := @this: com.android.server.am.ProcessStatsService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        $r4 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $r5 = virtualinvoke $r4.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessStats$ServiceState getServiceStateLocked(java.lang.String,int,int,java.lang.String,java.lang.String)>(r1, i0, i1, r2, r3);

        return $r5;
    }

    public boolean isMemFactorLowered()
    {
        com.android.server.am.ProcessStatsService r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ProcessStatsService;

        $z0 = r0.<com.android.server.am.ProcessStatsService: boolean mMemFactorLowered>;

        return $z0;
    }

    public boolean setMemFactorLocked(int, boolean, long)
    {
        com.android.server.am.ProcessStatsService r0;
        int i0, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17;
        boolean z0, $z1, $z2, $z3;
        long l1, $l16, $l18, $l19, $l20;
        android.util.ArrayMap r1, r5;
        android.util.SparseArray r2, r3;
        com.android.internal.app.ProcessStats$PackageState r4;
        com.android.internal.app.ProcessStats$ServiceState r6;
        com.android.internal.app.ProcessStats $r7, $r8, $r9, $r10, $r12, $r17, $r18, $r19;
        com.android.internal.app.ProcessMap $r11;
        java.lang.Object $r13, $r14, $r15, $r16;
        long[] $r20;

        r0 := @this: com.android.server.am.ProcessStatsService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        l1 := @parameter2: long;

        $i6 = r0.<com.android.server.am.ProcessStatsService: int mLastMemOnlyState>;

        if i0 >= $i6 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        r0.<com.android.server.am.ProcessStatsService: boolean mMemFactorLowered> = $z3;

        r0.<com.android.server.am.ProcessStatsService: int mLastMemOnlyState> = i0;

        if z0 == 0 goto label03;

        i0 = i0 + 4;

     label03:
        $r7 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $i7 = $r7.<com.android.internal.app.ProcessStats: int mMemFactor>;

        if i0 == $i7 goto label17;

        $r8 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $i8 = $r8.<com.android.internal.app.ProcessStats: int mMemFactor>;

        if $i8 == -1 goto label04;

        $r17 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $r20 = $r17.<com.android.internal.app.ProcessStats: long[] mMemFactorDurations>;

        $r18 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $i17 = $r18.<com.android.internal.app.ProcessStats: int mMemFactor>;

        $l20 = $r20[$i17];

        $r19 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $l16 = $r19.<com.android.internal.app.ProcessStats: long mStartTime>;

        $l19 = l1 - $l16;

        $l18 = $l20 + $l19;

        $r20[$i17] = $l18;

     label04:
        $r10 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $r10.<com.android.internal.app.ProcessStats: int mMemFactor> = i0;

        $r9 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $r9.<com.android.internal.app.ProcessStats: long mStartTime> = l1;

        $r12 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $r11 = $r12.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages>;

        r1 = virtualinvoke $r11.<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>();

        $i9 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

        i2 = $i9 - 1;

     label05:
        if i2 < 0 goto label16;

        $r13 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        r2 = (android.util.SparseArray) $r13;

        $i10 = virtualinvoke r2.<android.util.SparseArray: int size()>();

        i3 = $i10 - 1;

     label06:
        if i3 < 0 goto label15;

        $r14 = virtualinvoke r2.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        r3 = (android.util.SparseArray) $r14;

        $i11 = virtualinvoke r3.<android.util.SparseArray: int size()>();

        i4 = $i11 - 1;

     label07:
        if i4 < 0 goto label14;

        $r15 = virtualinvoke r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i4);

        r4 = (com.android.internal.app.ProcessStats$PackageState) $r15;

        r5 = r4.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mServices>;

        $i12 = virtualinvoke r5.<android.util.ArrayMap: int size()>();

        i5 = $i12 - 1;

     label08:
        if i5 < 0 goto label13;

        $r16 = virtualinvoke r5.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i5);

        r6 = (com.android.internal.app.ProcessStats$ServiceState) $r16;

        $z2 = virtualinvoke r6.<com.android.internal.app.ProcessStats$ServiceState: boolean isRestarting()>();

        if $z2 == 0 goto label09;

        virtualinvoke r6.<com.android.internal.app.ProcessStats$ServiceState: void setRestarting(boolean,int,long)>(1, i0, l1);

        goto label12;

     label09:
        $z1 = virtualinvoke r6.<com.android.internal.app.ProcessStats$ServiceState: boolean isInUse()>();

        if $z1 == 0 goto label12;

        $i13 = r6.<com.android.internal.app.ProcessStats$ServiceState: int mStartedState>;

        if $i13 == -1 goto label10;

        virtualinvoke r6.<com.android.internal.app.ProcessStats$ServiceState: void setStarted(boolean,int,long)>(1, i0, l1);

     label10:
        $i14 = r6.<com.android.internal.app.ProcessStats$ServiceState: int mBoundState>;

        if $i14 == -1 goto label11;

        virtualinvoke r6.<com.android.internal.app.ProcessStats$ServiceState: void setBound(boolean,int,long)>(1, i0, l1);

     label11:
        $i15 = r6.<com.android.internal.app.ProcessStats$ServiceState: int mExecState>;

        if $i15 == -1 goto label12;

        virtualinvoke r6.<com.android.internal.app.ProcessStats$ServiceState: void setExecuting(boolean,int,long)>(1, i0, l1);

     label12:
        i5 = i5 + -1;

        goto label08;

     label13:
        i4 = i4 + -1;

        goto label07;

     label14:
        i3 = i3 + -1;

        goto label06;

     label15:
        i2 = i2 + -1;

        goto label05;

     label16:
        return 1;

     label17:
        return 0;
    }

    public int getMemFactorLocked()
    {
        com.android.server.am.ProcessStatsService r0;
        com.android.internal.app.ProcessStats $r1, $r2;
        int $i0, $i1;

        r0 := @this: com.android.server.am.ProcessStatsService;

        $r1 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $i0 = $r1.<com.android.internal.app.ProcessStats: int mMemFactor>;

        if $i0 == -1 goto label1;

        $r2 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $i1 = $r2.<com.android.internal.app.ProcessStats: int mMemFactor>;

        goto label2;

     label1:
        $i1 = 0;

     label2:
        return $i1;
    }

    public void addSysMemUsageLocked(long, long, long, long, long)
    {
        com.android.server.am.ProcessStatsService r0;
        long l0, l1, l2, l3, l4;
        com.android.internal.app.ProcessStats $r1;

        r0 := @this: com.android.server.am.ProcessStatsService;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        l4 := @parameter4: long;

        $r1 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        virtualinvoke $r1.<com.android.internal.app.ProcessStats: void addSysMemUsage(long,long,long,long,long)>(l0, l1, l2, l3, l4);

        return;
    }

    public boolean shouldWriteNowLocked(long)
    {
        com.android.server.am.ProcessStatsService r0;
        long l0, $l1, $l2, $l3, $l5, $l6, $l7, $l8, $l10, $l11, $l12, $l13;
        byte $b4, $b9, $b14;
        com.android.internal.app.ProcessStats $r1, $r2;

        r0 := @this: com.android.server.am.ProcessStatsService;

        l0 := @parameter0: long;

        $l2 = r0.<com.android.server.am.ProcessStatsService: long mLastWriteTime>;

        $l1 = <com.android.server.am.ProcessStatsService: long WRITE_PERIOD>;

        $l3 = $l2 + $l1;

        $b4 = l0 cmp $l3;

        if $b4 <= 0 goto label2;

        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r1 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $l7 = $r1.<com.android.internal.app.ProcessStats: long mTimePeriodStartRealtime>;

        $l6 = <com.android.internal.app.ProcessStats: long COMMIT_PERIOD>;

        $l8 = $l7 + $l6;

        $b9 = $l5 cmp $l8;

        if $b9 <= 0 goto label1;

        $l10 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r2 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $l13 = $r2.<com.android.internal.app.ProcessStats: long mTimePeriodStartUptime>;

        $l11 = <com.android.internal.app.ProcessStats: long COMMIT_UPTIME_PERIOD>;

        $l12 = $l13 + $l11;

        $b14 = $l10 cmp $l12;

        if $b14 <= 0 goto label1;

        r0.<com.android.server.am.ProcessStatsService: boolean mCommitPending> = 1;

     label1:
        return 1;

     label2:
        return 0;
    }

    public void shutdownLocked()
    {
        com.android.server.am.ProcessStatsService r0;
        com.android.internal.app.ProcessStats $r1;
        int $i1, $i2;

        r0 := @this: com.android.server.am.ProcessStatsService;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ProcessStatsService", "Writing process stats before shutdown...");

        $r1 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $i1 = $r1.<com.android.internal.app.ProcessStats: int mFlags>;

        $i2 = $i1 | 2;

        $r1.<com.android.internal.app.ProcessStats: int mFlags> = $i2;

        virtualinvoke r0.<com.android.server.am.ProcessStatsService: void writeStateSyncLocked()>();

        r0.<com.android.server.am.ProcessStatsService: boolean mShuttingDown> = 1;

        return;
    }

    public void writeStateAsyncLocked()
    {
        com.android.server.am.ProcessStatsService r0;

        r0 := @this: com.android.server.am.ProcessStatsService;

        specialinvoke r0.<com.android.server.am.ProcessStatsService: void writeStateLocked(boolean)>(0);

        return;
    }

    public void writeStateSyncLocked()
    {
        com.android.server.am.ProcessStatsService r0;

        r0 := @this: com.android.server.am.ProcessStatsService;

        specialinvoke r0.<com.android.server.am.ProcessStatsService: void writeStateLocked(boolean)>(1);

        return;
    }

    private void writeStateLocked(boolean)
    {
        com.android.server.am.ProcessStatsService r0;
        boolean z0, z1, $z2;

        r0 := @this: com.android.server.am.ProcessStatsService;

        z0 := @parameter0: boolean;

        $z2 = r0.<com.android.server.am.ProcessStatsService: boolean mShuttingDown>;

        if $z2 == 0 goto label1;

        return;

     label1:
        z1 = r0.<com.android.server.am.ProcessStatsService: boolean mCommitPending>;

        r0.<com.android.server.am.ProcessStatsService: boolean mCommitPending> = 0;

        virtualinvoke r0.<com.android.server.am.ProcessStatsService: void writeStateLocked(boolean,boolean)>(z0, z1);

        return;
    }

    public void writeStateLocked(boolean, boolean)
    {
        com.android.server.am.ProcessStatsService r0;
        boolean z0, z1, $z3;
        java.lang.Object r1, $r3;
        long l0, $l1, $l2, $l3, $l4;
        java.lang.Throwable r2, $r22;
        android.os.Parcel $r4, $r5, $r8;
        com.android.internal.app.ProcessStats $r6, $r7, $r9, $r20, $r21;
        android.util.AtomicFile $r10, $r11;
        java.io.File $r12;
        java.lang.StringBuilder $r13, $r14, $r15, $r17;
        java.lang.String $r16;
        com.android.server.am.ProcessStatsService$2 $r18;
        android.os.Handler $r19;
        int $i6, $i7;

        r0 := @this: com.android.server.am.ProcessStatsService;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r3 = r0.<com.android.server.am.ProcessStatsService: java.lang.Object mPendingWriteLock>;

        r1 = $r3;

        entermonitor $r3;

     label01:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r4 = r0.<com.android.server.am.ProcessStatsService: android.os.Parcel mPendingWrite>;

        if $r4 == null goto label02;

        $z3 = r0.<com.android.server.am.ProcessStatsService: boolean mPendingWriteCommitted>;

        if $z3 != 0 goto label04;

     label02:
        $r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r0.<com.android.server.am.ProcessStatsService: android.os.Parcel mPendingWrite> = $r5;

        $r6 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r6.<com.android.internal.app.ProcessStats: long mTimePeriodEndRealtime> = $l1;

        $r7 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $r7.<com.android.internal.app.ProcessStats: long mTimePeriodEndUptime> = l0;

        if z1 == 0 goto label03;

        $r21 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $i6 = $r21.<com.android.internal.app.ProcessStats: int mFlags>;

        $i7 = $i6 | 1;

        $r21.<com.android.internal.app.ProcessStats: int mFlags> = $i7;

     label03:
        $r9 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $r8 = r0.<com.android.server.am.ProcessStatsService: android.os.Parcel mPendingWrite>;

        virtualinvoke $r9.<com.android.internal.app.ProcessStats: void writeToParcel(android.os.Parcel,int)>($r8, 0);

        $r11 = new android.util.AtomicFile;

        $r10 = r0.<com.android.server.am.ProcessStatsService: android.util.AtomicFile mFile>;

        $r12 = virtualinvoke $r10.<android.util.AtomicFile: java.io.File getBaseFile()>();

        specialinvoke $r11.<android.util.AtomicFile: void <init>(java.io.File)>($r12);

        r0.<com.android.server.am.ProcessStatsService: android.util.AtomicFile mPendingWriteFile> = $r11;

        r0.<com.android.server.am.ProcessStatsService: boolean mPendingWriteCommitted> = z1;

     label04:
        if z1 == 0 goto label05;

        $r20 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        virtualinvoke $r20.<com.android.internal.app.ProcessStats: void resetSafely()>();

        specialinvoke r0.<com.android.server.am.ProcessStatsService: void updateFile()>();

     label05:
        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.am.ProcessStatsService: long mLastWriteTime> = $l2;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Prepared write state in ");

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l4 = $l3 - l0;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ProcessStatsService", $r16);

        if z0 != 0 goto label07;

        $r19 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        $r18 = new com.android.server.am.ProcessStatsService$2;

        specialinvoke $r18.<com.android.server.am.ProcessStatsService$2: void <init>(com.android.server.am.ProcessStatsService)>(r0);

        virtualinvoke $r19.<android.os.Handler: boolean post(java.lang.Runnable)>($r18);

        exitmonitor r1;

     label06:
        return;

     label07:
        exitmonitor r1;

     label08:
        goto label11;

     label09:
        $r22 := @caughtexception;

        r2 = $r22;

        exitmonitor r1;

     label10:
        throw r2;

     label11:
        virtualinvoke r0.<com.android.server.am.ProcessStatsService: void performWriteState()>();

        return;

        catch java.lang.Throwable from label01 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private void updateFile()
    {
        com.android.server.am.ProcessStatsService r0;
        android.util.AtomicFile $r1;
        java.io.File $r2, $r4;
        java.lang.StringBuilder $r3, $r5, $r8, $r9;
        com.android.internal.app.ProcessStats $r6;
        java.lang.String $r7, $r10;
        long $l0;

        r0 := @this: com.android.server.am.ProcessStatsService;

        $r1 = new android.util.AtomicFile;

        $r2 = new java.io.File;

        $r4 = r0.<com.android.server.am.ProcessStatsService: java.io.File mBaseDir>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state-");

        $r6 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $r7 = $r6.<com.android.internal.app.ProcessStats: java.lang.String mTimePeriodStartClockStr>;

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".bin");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, $r10);

        specialinvoke $r1.<android.util.AtomicFile: void <init>(java.io.File)>($r2);

        r0.<com.android.server.am.ProcessStatsService: android.util.AtomicFile mFile> = $r1;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.am.ProcessStatsService: long mLastWriteTime> = $l0;

        return;
    }

    void performWriteState()
    {
        com.android.server.am.ProcessStatsService r0;
        android.os.Parcel r1;
        android.util.AtomicFile r2;
        java.lang.Object r3, $r6;
        java.lang.Throwable r4, r5, $r10, $r14;
        java.util.concurrent.locks.ReentrantLock $r7, $r9, $r12, $r13;
        byte[] $r8;
        java.io.IOException $r11, r16;
        java.io.FileOutputStream r15;

        r0 := @this: com.android.server.am.ProcessStatsService;

        $r6 = r0.<com.android.server.am.ProcessStatsService: java.lang.Object mPendingWriteLock>;

        r3 = $r6;

        entermonitor $r6;

     label01:
        r1 = r0.<com.android.server.am.ProcessStatsService: android.os.Parcel mPendingWrite>;

        r2 = r0.<com.android.server.am.ProcessStatsService: android.util.AtomicFile mPendingWriteFile>;

        r0.<com.android.server.am.ProcessStatsService: boolean mPendingWriteCommitted> = 0;

        if r1 != null goto label03;

        exitmonitor r3;

     label02:
        return;

     label03:
        r0.<com.android.server.am.ProcessStatsService: android.os.Parcel mPendingWrite> = null;

        r0.<com.android.server.am.ProcessStatsService: android.util.AtomicFile mPendingWriteFile> = null;

        $r7 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r7.<java.util.concurrent.locks.ReentrantLock: void lock()>();

        exitmonitor r3;

     label04:
        goto label07;

     label05:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r3;

     label06:
        throw r4;

     label07:
        r15 = null;

     label08:
        r15 = virtualinvoke r2.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

        $r8 = virtualinvoke r1.<android.os.Parcel: byte[] marshall()>();

        virtualinvoke r15.<java.io.FileOutputStream: void write(byte[])>($r8);

        virtualinvoke r15.<java.io.FileOutputStream: void flush()>();

        virtualinvoke r2.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r15);

     label09:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        virtualinvoke r0.<com.android.server.am.ProcessStatsService: void trimHistoricStatesWriteLocked()>();

        $r9 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r9.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label14;

     label10:
        $r11 := @caughtexception;

        r16 = $r11;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ProcessStatsService", "Error writing process statistics", r16);

        virtualinvoke r2.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r15);

     label11:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        virtualinvoke r0.<com.android.server.am.ProcessStatsService: void trimHistoricStatesWriteLocked()>();

        $r12 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r12.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label14;

     label12:
        $r14 := @caughtexception;

        r5 = $r14;

     label13:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        virtualinvoke r0.<com.android.server.am.ProcessStatsService: void trimHistoricStatesWriteLocked()>();

        $r13 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r13.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw r5;

     label14:
        return;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    boolean readLocked(com.android.internal.app.ProcessStats, android.util.AtomicFile)
    {
        com.android.server.am.ProcessStatsService r0;
        com.android.internal.app.ProcessStats r1;
        android.util.AtomicFile r2;
        java.io.FileInputStream r3;
        java.lang.String $r4, $r7, $r9, $r13;
        java.lang.StringBuilder $r5, $r6, $r8, $r11, $r12, $r14;
        java.lang.Throwable $r10, r15;

        r0 := @this: com.android.server.am.ProcessStatsService;

        r1 := @parameter0: com.android.internal.app.ProcessStats;

        r2 := @parameter1: android.util.AtomicFile;

     label1:
        r3 = virtualinvoke r2.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

        virtualinvoke r1.<com.android.internal.app.ProcessStats: void read(java.io.InputStream)>(r3);

        virtualinvoke r3.<java.io.FileInputStream: void close()>();

        $r4 = r1.<com.android.internal.app.ProcessStats: java.lang.String mReadError>;

        if $r4 == null goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring existing stats; ");

        $r7 = r1.<com.android.internal.app.ProcessStats: java.lang.String mReadError>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ProcessStatsService", $r9);

     label2:
        return 0;

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        r15 = $r10;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("caught exception: ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        r1.<com.android.internal.app.ProcessStats: java.lang.String mReadError> = $r13;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ProcessStatsService", "Error reading process statistics", r15);

        return 0;

     label5:
        return 1;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    private java.util.ArrayList getCommittedFiles(int, boolean, boolean)
    {
        com.android.server.am.ProcessStatsService r0;
        int i0, i1, $i2, $i3, $i4;
        boolean z0, z1, $z2, $z4;
        java.io.File[] r1;
        java.util.ArrayList r2, $r7;
        java.lang.String r3, r5;
        java.io.File r4, $r6, $r9;
        android.util.AtomicFile $r8;

        r0 := @this: com.android.server.am.ProcessStatsService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r6 = r0.<com.android.server.am.ProcessStatsService: java.io.File mBaseDir>;

        r1 = virtualinvoke $r6.<java.io.File: java.io.File[] listFiles()>();

        if r1 == null goto label1;

        $i2 = lengthof r1;

        if $i2 > i0 goto label2;

     label1:
        return null;

     label2:
        $r7 = new java.util.ArrayList;

        $i3 = lengthof r1;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i3);

        r2 = $r7;

        $r8 = r0.<com.android.server.am.ProcessStatsService: android.util.AtomicFile mFile>;

        $r9 = virtualinvoke $r8.<android.util.AtomicFile: java.io.File getBaseFile()>();

        r3 = virtualinvoke $r9.<java.io.File: java.lang.String getPath()>();

        i1 = 0;

     label3:
        $i4 = lengthof r1;

        if i1 >= $i4 goto label7;

        r4 = r1[i1];

        r5 = virtualinvoke r4.<java.io.File: java.lang.String getPath()>();

        if z1 != 0 goto label4;

        $z4 = virtualinvoke r5.<java.lang.String: boolean endsWith(java.lang.String)>(".ci");

        if $z4 == 0 goto label4;

        goto label6;

     label4:
        if z0 != 0 goto label5;

        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z2 == 0 goto label5;

        goto label6;

     label5:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label6:
        i1 = i1 + 1;

        goto label3;

     label7:
        staticinvoke <java.util.Collections: void sort(java.util.List)>(r2);

        return r2;
    }

    public void trimHistoricStatesWriteLocked()
    {
        com.android.server.am.ProcessStatsService r0;
        java.util.ArrayList r1;
        java.lang.String r2, $r7;
        int $i0;
        java.lang.Object $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.io.File $r8;

        r0 := @this: com.android.server.am.ProcessStatsService;

        r1 = specialinvoke r0.<com.android.server.am.ProcessStatsService: java.util.ArrayList getCommittedFiles(int,boolean,boolean)>(8, 0, 1);

        if r1 != null goto label1;

        return;

     label1:
        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i0 <= 8 goto label2;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        r2 = (java.lang.String) $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pruning old procstats: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ProcessStatsService", $r7);

        $r8 = new java.io.File;

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>(r2);

        virtualinvoke $r8.<java.io.File: boolean delete()>();

        goto label1;

     label2:
        return;
    }

    boolean dumpFilteredProcessesCsvLocked(java.io.PrintWriter, java.lang.String, boolean, int[], boolean, int[], boolean, int[], long, java.lang.String)
    {
        com.android.server.am.ProcessStatsService r0;
        java.io.PrintWriter r1;
        java.lang.String r2, r6;
        boolean z0, z1, z2;
        int[] r3, r4, r5;
        long l0;
        java.util.ArrayList r7;
        com.android.internal.app.ProcessStats $r8;
        int $i1;

        r0 := @this: com.android.server.am.ProcessStatsService;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r3 := @parameter3: int[];

        z1 := @parameter4: boolean;

        r4 := @parameter5: int[];

        z2 := @parameter6: boolean;

        r5 := @parameter7: int[];

        l0 := @parameter8: long;

        r6 := @parameter9: java.lang.String;

        $r8 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        r7 = virtualinvoke $r8.<com.android.internal.app.ProcessStats: java.util.ArrayList collectProcessesLocked(int[],int[],int[],int[],long,java.lang.String,boolean)>(r3, r4, r5, r5, l0, r6, 0);

        $i1 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label2;

        if r2 == null goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r2);

     label1:
        staticinvoke <com.android.internal.app.ProcessStats: void dumpProcessListCsv(java.io.PrintWriter,java.util.ArrayList,boolean,int[],boolean,int[],boolean,int[],long)>(r1, r7, z0, r3, z1, r4, z2, r5, l0);

        return 1;

     label2:
        return 0;
    }

    static int[] parseStateList(java.lang.String[], int, java.lang.String, boolean[], java.lang.String[])
    {
        java.lang.String[] r0, r3;
        int i0, i1, i2, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i14;
        java.lang.String r1, r5, $r12, $r14;
        boolean[] r2;
        java.util.ArrayList r4, $r6;
        char c3, $c13;
        boolean z0, $z1, $z2, $z3;
        java.lang.Integer $r7, $r15;
        java.lang.Object $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r13;
        int[] r16;

        r0 := @parameter0: java.lang.String[];

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: boolean[];

        r3 := @parameter4: java.lang.String[];

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r4 = $r6;

        i1 = 0;

        i2 = 0;

     label01:
        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        if i2 > $i5 goto label14;

        $i11 = virtualinvoke r1.<java.lang.String: int length()>();

        if i2 >= $i11 goto label02;

        $c13 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        goto label03;

     label02:
        $c13 = 0;

     label03:
        c3 = $c13;

        if c3 == 44 goto label04;

        if c3 == 43 goto label04;

        if c3 == 32 goto label04;

        if c3 == 0 goto label04;

        goto label13;

     label04:
        if c3 != 44 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        z0 = $z3;

        if i1 != 0 goto label07;

        r2[0] = z0;

        goto label08;

     label07:
        if c3 == 0 goto label08;

        $z2 = r2[0];

        if $z2 == z0 goto label08;

        r3[0] = "inconsistent separators (can\'t mix \',\' with \'+\')";

        return null;

     label08:
        $i10 = i2 - 1;

        if i1 >= $i10 goto label12;

        r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i1, i2);

        i4 = 0;

     label09:
        $i12 = lengthof r0;

        if i4 >= $i12 goto label11;

        $r14 = r0[i4];

        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z1 == 0 goto label10;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

        r5 = null;

        goto label11;

     label10:
        i4 = i4 + 1;

        goto label09;

     label11:
        if r5 == null goto label12;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid word \"");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        r3[0] = $r12;

        return null;

     label12:
        i1 = i2 + 1;

     label13:
        i2 = i2 + 1;

        goto label01;

     label14:
        $i6 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        r16 = newarray (int)[$i6];

        i14 = 0;

     label15:
        $i7 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        if i14 >= $i7 goto label16;

        $r8 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i14);

        $r7 = (java.lang.Integer) $r8;

        $i9 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $i8 = $i9 * i0;

        r16[i14] = $i8;

        i14 = i14 + 1;

        goto label15;

     label16:
        return r16;
    }

    public byte[] getCurrentStats(java.util.List)
    {
        com.android.server.am.ProcessStatsService r0;
        java.util.List r1;
        android.os.Parcel r2;
        com.android.server.am.ActivityManagerService r3, $r7, $r10;
        long l0, $l1;
        android.os.ParcelFileDescriptor r4;
        java.lang.Throwable r5, r6, $r26, $r27;
        android.content.Context $r8;
        java.util.concurrent.locks.ReentrantLock $r9, $r14, $r28;
        com.android.internal.app.ProcessStats $r11, $r12, $r13;
        byte[] $r15;
        java.io.File $r16;
        int $i2, i4;
        java.lang.String $r17, $r23, $r25;
        java.lang.Object $r18, $r24;
        java.lang.StringBuilder $r19, $r21, $r22;
        java.io.IOException $r20, r30;
        java.util.ArrayList r29;

        r0 := @this: com.android.server.am.ProcessStatsService;

        r1 := @parameter0: java.util.List;

        $r7 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        $r8 = $r7.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        virtualinvoke $r8.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.PACKAGE_USAGE_STATS", null);

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r9 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r9.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label01:
        $r10 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        r3 = $r10;

        entermonitor $r10;

     label02:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r11 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r11.<com.android.internal.app.ProcessStats: long mTimePeriodEndRealtime> = $l1;

        $r13 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $r13.<com.android.internal.app.ProcessStats: long mTimePeriodEndUptime> = l0;

        $r12 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        virtualinvoke $r12.<com.android.internal.app.ProcessStats: void writeToParcel(android.os.Parcel,long,int)>(r2, l0, 0);

        exitmonitor r3;

     label03:
        goto label06;

     label04:
        $r27 := @caughtexception;

        r5 = $r27;

        exitmonitor r3;

     label05:
        throw r5;

     label06:
        if r1 == null goto label12;

        r29 = specialinvoke r0.<com.android.server.am.ProcessStatsService: java.util.ArrayList getCommittedFiles(int,boolean,boolean)>(0, 0, 1);

        if r29 == null goto label12;

        $i2 = virtualinvoke r29.<java.util.ArrayList: int size()>();

        i4 = $i2 - 1;

     label07:
        if i4 < 0 goto label12;

     label08:
        $r16 = new java.io.File;

        $r18 = virtualinvoke r29.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r17 = (java.lang.String) $r18;

        specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>($r17);

        r4 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r16, 268435456);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r4);

     label09:
        goto label11;

     label10:
        $r20 := @caughtexception;

        r30 = $r20;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure opening procstat file ");

        $r24 = virtualinvoke r29.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r25 = (java.lang.String) $r24;

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ProcessStatsService", $r23, r30);

     label11:
        i4 = i4 + -1;

        goto label07;

     label12:
        $r14 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r14.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label15;

     label13:
        $r26 := @caughtexception;

        r6 = $r26;

     label14:
        $r28 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r28.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw r6;

     label15:
        $r15 = virtualinvoke r2.<android.os.Parcel: byte[] marshall()>();

        return $r15;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.lang.Throwable from label01 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public android.os.ParcelFileDescriptor getStatsOverTime(long)
    {
        com.android.server.am.ProcessStatsService r0;
        long l0, l1, l2, $l4, $l5, $l6, $l9, $l12, $l13, $l16, $l17, $l18;
        android.os.Parcel r1;
        com.android.server.am.ActivityManagerService r2, $r7, $r10;
        int i3, $i8, $i10, $i14;
        java.lang.Throwable r3, r6, $r44, $r45;
        com.android.internal.app.ProcessStats r4, $r11, $r12, $r13, $r14, $r15, $r22, r47;
        java.lang.StringBuilder r5, $r25, $r29, $r30, $r32, $r33, $r35;
        android.content.Context $r8;
        java.util.concurrent.locks.ReentrantLock $r9, $r18, $r41, $r43;
        byte $b7, $b11;
        com.android.server.am.ProcessStatsService$3 $r16, r51;
        android.os.Parcelable$Creator $r17;
        java.lang.Object $r19, $r24, $r28;
        android.util.AtomicFile $r20, r48;
        java.lang.String $r21, $r26, $r27, $r31, $r36, $r37, $r38;
        java.io.File $r23;
        java.io.IOException $r42, r53;
        java.util.ArrayList r46;
        byte[] r49;
        android.os.ParcelFileDescriptor[] r50;
        android.os.ParcelFileDescriptor r52;

        r0 := @this: com.android.server.am.ProcessStatsService;

        l0 := @parameter0: long;

        $r7 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        $r8 = $r7.<com.android.server.am.ActivityManagerService: android.content.Context mContext>;

        virtualinvoke $r8.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.PACKAGE_USAGE_STATS", null);

        $r9 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r9.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label01:
        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $r10 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        r2 = $r10;

        entermonitor $r10;

     label02:
        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r11 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $l4 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r11.<com.android.internal.app.ProcessStats: long mTimePeriodEndRealtime> = $l4;

        $r12 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $r12.<com.android.internal.app.ProcessStats: long mTimePeriodEndUptime> = l2;

        $r14 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        virtualinvoke $r14.<com.android.internal.app.ProcessStats: void writeToParcel(android.os.Parcel,long,int)>(r1, l2, 0);

        $r13 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $l6 = $r13.<com.android.internal.app.ProcessStats: long mTimePeriodEndRealtime>;

        $r15 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $l5 = $r15.<com.android.internal.app.ProcessStats: long mTimePeriodStartRealtime>;

        l1 = $l6 - $l5;

        exitmonitor r2;

     label03:
        goto label06;

     label04:
        $r44 := @caughtexception;

        r3 = $r44;

        exitmonitor r2;

     label05:
        throw r3;

     label06:
        $b7 = l1 cmp l0;

        if $b7 >= 0 goto label11;

        r46 = specialinvoke r0.<com.android.server.am.ProcessStatsService: java.util.ArrayList getCommittedFiles(int,boolean,boolean)>(0, 0, 1);

        if r46 == null goto label11;

        $i8 = virtualinvoke r46.<java.util.ArrayList: int size()>();

        if $i8 <= 0 goto label11;

        virtualinvoke r1.<android.os.Parcel: void setDataPosition(int)>(0);

        $r17 = <com.android.internal.app.ProcessStats: android.os.Parcelable$Creator CREATOR>;

        $r19 = interfaceinvoke $r17.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r47 = (com.android.internal.app.ProcessStats) $r19;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        $i10 = virtualinvoke r46.<java.util.ArrayList: int size()>();

        i3 = $i10 - 1;

     label07:
        if i3 < 0 goto label10;

        $l12 = r47.<com.android.internal.app.ProcessStats: long mTimePeriodEndRealtime>;

        $l9 = r47.<com.android.internal.app.ProcessStats: long mTimePeriodStartRealtime>;

        $l13 = $l12 - $l9;

        $b11 = $l13 cmp l0;

        if $b11 >= 0 goto label10;

        $r20 = new android.util.AtomicFile;

        $r23 = new java.io.File;

        $r24 = virtualinvoke r46.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r21 = (java.lang.String) $r24;

        specialinvoke $r23.<java.io.File: void <init>(java.lang.String)>($r21);

        specialinvoke $r20.<android.util.AtomicFile: void <init>(java.io.File)>($r23);

        r48 = $r20;

        i3 = i3 + -1;

        $r22 = new com.android.internal.app.ProcessStats;

        specialinvoke $r22.<com.android.internal.app.ProcessStats: void <init>(boolean)>(0);

        r4 = $r22;

        virtualinvoke r0.<com.android.server.am.ProcessStatsService: boolean readLocked(com.android.internal.app.ProcessStats,android.util.AtomicFile)>(r4, r48);

        $r26 = r4.<com.android.internal.app.ProcessStats: java.lang.String mReadError>;

        if $r26 != null goto label08;

        virtualinvoke r47.<com.android.internal.app.ProcessStats: void add(com.android.internal.app.ProcessStats)>(r4);

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        r5 = $r35;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added stats: ");

        $r38 = r4.<com.android.internal.app.ProcessStats: java.lang.String mTimePeriodStartClockStr>;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", over ");

        $l16 = r4.<com.android.internal.app.ProcessStats: long mTimePeriodEndRealtime>;

        $l18 = r4.<com.android.internal.app.ProcessStats: long mTimePeriodStartRealtime>;

        $l17 = $l16 - $l18;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>($l17, r5);

        $r37 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("ProcessStatsService", $r37);

        goto label09;

     label08:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure reading ");

        $i14 = i3 + 1;

        $r28 = virtualinvoke r46.<java.util.ArrayList: java.lang.Object get(int)>($i14);

        $r27 = (java.lang.String) $r28;

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r31 = r4.<com.android.internal.app.ProcessStats: java.lang.String mReadError>;

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r36 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ProcessStatsService", $r36);

        goto label07;

     label09:
        goto label07;

     label10:
        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke r47.<com.android.internal.app.ProcessStats: void writeToParcel(android.os.Parcel,int)>(r1, 0);

     label11:
        r49 = virtualinvoke r1.<android.os.Parcel: byte[] marshall()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        r50 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createPipe()>();

        $r16 = new com.android.server.am.ProcessStatsService$3;

        specialinvoke $r16.<com.android.server.am.ProcessStatsService$3: void <init>(com.android.server.am.ProcessStatsService,java.lang.String,android.os.ParcelFileDescriptor[],byte[])>(r0, "ProcessStats pipe output", r50, r49);

        r51 = $r16;

        virtualinvoke r51.<java.lang.Thread: void start()>();

        r52 = r50[0];

     label12:
        $r18 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r18.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return r52;

     label13:
        $r42 := @caughtexception;

        r53 = $r42;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ProcessStatsService", "Failed building output pipe", r53);

     label14:
        $r43 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r43.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label17;

     label15:
        $r45 := @caughtexception;

        r6 = $r45;

     label16:
        $r41 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r41.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw r6;

     label17:
        return null;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.io.IOException from label01 to label12 with label13;
        catch java.lang.Throwable from label01 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public int getCurrentMemoryState()
    {
        com.android.server.am.ProcessStatsService r0;
        com.android.server.am.ActivityManagerService r1, $r3;
        java.lang.Throwable r2, $r4;
        int $i0;

        r0 := @this: com.android.server.am.ProcessStatsService;

        $r3 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $i0 = r0.<com.android.server.am.ProcessStatsService: int mLastMemOnlyState>;

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void dumpAggregatedStats(java.io.PrintWriter, long, long, java.lang.String, boolean, boolean, boolean, boolean, boolean)
    {
        com.android.server.am.ProcessStatsService r0;
        java.io.PrintWriter r1;
        long l0, l1, $l2, $l3, $l4, $l5, $l6, $l7;
        java.lang.String r2, $r8, $r9;
        boolean z0, z1, z2, z3, z4, $z5;
        android.os.ParcelFileDescriptor r3;
        com.android.internal.app.ProcessStats r4, $r7;
        android.os.ParcelFileDescriptor$AutoCloseInputStream r5, $r6;

        r0 := @this: com.android.server.am.ProcessStatsService;

        r1 := @parameter0: java.io.PrintWriter;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        z2 := @parameter6: boolean;

        z3 := @parameter7: boolean;

        z4 := @parameter8: boolean;

        $l2 = l0 * 60L;

        $l4 = $l2 * 60L;

        $l5 = $l4 * 1000L;

        $l3 = <com.android.internal.app.ProcessStats: long COMMIT_PERIOD>;

        $l6 = $l3 / 2L;

        $l7 = $l5 - $l6;

        r3 = virtualinvoke r0.<com.android.server.am.ProcessStatsService: android.os.ParcelFileDescriptor getStatsOverTime(long)>($l7);

        if r3 != null goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Unable to build stats!");

        return;

     label1:
        $r7 = new com.android.internal.app.ProcessStats;

        specialinvoke $r7.<com.android.internal.app.ProcessStats: void <init>(boolean)>(0);

        r4 = $r7;

        $r6 = new android.os.ParcelFileDescriptor$AutoCloseInputStream;

        specialinvoke $r6.<android.os.ParcelFileDescriptor$AutoCloseInputStream: void <init>(android.os.ParcelFileDescriptor)>(r3);

        r5 = $r6;

        virtualinvoke r4.<com.android.internal.app.ProcessStats: void read(java.io.InputStream)>(r5);

        $r8 = r4.<com.android.internal.app.ProcessStats: java.lang.String mReadError>;

        if $r8 == null goto label2;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Failure reading: ");

        $r9 = r4.<com.android.internal.app.ProcessStats: java.lang.String mReadError>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        return;

     label2:
        if z0 == 0 goto label3;

        virtualinvoke r4.<com.android.internal.app.ProcessStats: void dumpCheckinLocked(java.io.PrintWriter,java.lang.String)>(r1, r2);

        goto label8;

     label3:
        if z1 != 0 goto label4;

        if z2 == 0 goto label7;

     label4:
        if z2 != 0 goto label5;

        $z5 = 1;

        goto label6;

     label5:
        $z5 = 0;

     label6:
        virtualinvoke r4.<com.android.internal.app.ProcessStats: void dumpLocked(java.io.PrintWriter,java.lang.String,long,boolean,boolean,boolean)>(r1, r2, l1, $z5, z3, z4);

        goto label8;

     label7:
        virtualinvoke r4.<com.android.internal.app.ProcessStats: void dumpSummaryLocked(java.io.PrintWriter,java.lang.String,long,boolean)>(r1, r2, l1, z4);

     label8:
        return;
    }

    private static void dumpHelp(java.io.PrintWriter)
    {
        java.io.PrintWriter r0;

        r0 := @parameter0: java.io.PrintWriter;

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("Process stats (procstats) dump options:");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    [--checkin|-c|--csv] [--csv-screen] [--csv-proc] [--csv-mem]");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    [--details] [--full-details] [--current] [--hours N] [--last N]");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    [--active] [--commit] [--reset] [--clear] [--write] [-h] [<package.name>]");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --checkin: perform a checkin: print and delete old committed states.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --c: print only state in checkin format.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --csv: output data suitable for putting in a spreadsheet.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --csv-screen: on, off.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --csv-mem: norm, mod, low, crit.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --csv-proc: pers, top, fore, vis, precept, backup,");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("    service, home, prev, cached");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --details: dump per-package details, not just summary.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --full-details: dump all timing and active state details.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --current: only dump current state.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --hours: aggregate over about N last hours.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --last: only show the last committed stats at index N (starting at 1).");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --active: only show currently active processes/services.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --commit: commit current stats to disk and reset to start new stats.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --reset: reset current stats, without committing.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --clear: clear all stats; does both --reset and deletes old stats.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --write: write current in-memory stats to disk.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  --read: replace current stats with last-written stats.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  -a: print everything.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  -h: print this help text.");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("  <package.name>: optional name of package to filter output by.");

        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.am.ProcessStatsService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        long l0;
        java.lang.Throwable r4, $r14;
        com.android.server.am.ActivityManagerService $r5;
        int $i1, $i2, $i3;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11, $r13;
        java.lang.String $r12;

        r0 := @this: com.android.server.am.ProcessStatsService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r5 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        $i1 = virtualinvoke $r5.<com.android.server.am.ActivityManagerService: int checkCallingPermission(java.lang.String)>("android.permission.DUMP");

        if $i1 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump procstats from from pid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without permission ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.DUMP");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        return;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        specialinvoke r0.<com.android.server.am.ProcessStatsService: void dumpInner(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label6;

     label4:
        $r14 := @caughtexception;

        r4 = $r14;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r4;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void dumpInner(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.am.ProcessStatsService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3, r11, $r62, $r103, $r117, $r135, r158, r160;
        long l0, $l9;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, $z11, $z15, $z17, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z37, $z38, z40, z41, z42;
        int i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26, i27, i28, i29;
        java.lang.String r4, r9, $r32, $r35, $r41, $r42, $r45, $r46, $r50, $r52, $r53, $r56, $r58, $r60, $r63, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r88, $r98, $r102, $r107, $r108, $r109, $r111, $r112, $r113, $r118, $r121, $r122, $r126, $r128, $r131, $r134, $r138, $r146, $r148, $r150, $r155, r173, r177;
        int[] r5, r6, r7, $r20, $r21;
        boolean[] r8, r157, r159;
        java.lang.Throwable r10, r12, r13, r14, r15, r16, r17, r18, $r129, $r142, $r143, $r144, $r145, $r152, $r153, $r154, $r156, r178;
        java.util.concurrent.locks.ReentrantLock $r19, $r23, $r151;
        com.android.internal.app.ProcessStats $r22, $r25, $r30, $r31, $r55, $r86, $r92, $r94, $r96, r172, r176;
        com.android.server.am.ActivityManagerService $r24, $r64, $r84, $r87, $r93, $r95, $r97, r163, r164, r165, r167, r168, r169, r179;
        android.util.AtomicFile $r26, $r29, $r47, $r59, $r85, r171, r175;
        java.io.File $r27, $r28, $r34, $r38, $r39, $r43, $r48, $r51, $r61, $r100;
        java.lang.Object $r33, $r40, $r49, $r54, $r57, $r99, $r149;
        java.lang.StringBuilder $r36, $r37, $r44, $r89, $r90, $r91, $r101, $r104, $r105, $r106, $r110, $r114, $r115, $r116, $r119, $r120, $r124, $r125, $r127, $r130, $r132, $r133, $r136, $r137, $r139, $r140, $r147;
        char $c16;
        java.lang.NumberFormatException $r123, $r141;
        java.util.ArrayList r166, r170, r174;

        r0 := @this: com.android.server.am.ProcessStatsService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        z0 = 0;

        z1 = 0;

        z2 = 0;

        z3 = 0;

        z4 = 0;

        z5 = 0;

        z6 = 0;

        i1 = 0;

        i2 = 0;

        z7 = 0;

        r4 = null;

        z8 = 0;

        $r20 = newarray (int)[2];

        $r20[0] = 0;

        $r20[1] = 4;

        r5 = $r20;

        z9 = 0;

        $r21 = newarray (int)[1];

        $r21[0] = 3;

        r6 = $r21;

        z10 = 1;

        r7 = <com.android.internal.app.ProcessStats: int[] ALL_PROC_STATES>;

        if r3 == null goto label062;

        i3 = 0;

     label001:
        $i10 = lengthof r3;

        if i3 >= $i10 goto label062;

        r9 = r3[i3];

        $r66 = "--checkin";

        $z19 = virtualinvoke $r66.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z19 == 0 goto label002;

        z0 = 1;

        goto label061;

     label002:
        $r65 = "-c";

        $z23 = virtualinvoke $r65.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z23 == 0 goto label003;

        z1 = 1;

        goto label061;

     label003:
        $r70 = "--csv";

        $z22 = virtualinvoke $r70.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z22 == 0 goto label004;

        z2 = 1;

        goto label061;

     label004:
        $r69 = "--csv-screen";

        $z21 = virtualinvoke $r69.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z21 == 0 goto label007;

        i3 = i3 + 1;

        $i23 = lengthof r3;

        if i3 < $i23 goto label005;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Error: argument required for --csv-screen");

        staticinvoke <com.android.server.am.ProcessStatsService: void dumpHelp(java.io.PrintWriter)>(r2);

        return;

     label005:
        r8 = newarray (boolean)[1];

        r11 = newarray (java.lang.String)[1];

        $r135 = <com.android.internal.app.ProcessStats: java.lang.String[] ADJ_SCREEN_NAMES_CSV>;

        $r134 = r3[i3];

        r5 = staticinvoke <com.android.server.am.ProcessStatsService: int[] parseStateList(java.lang.String[],int,java.lang.String,boolean[],java.lang.String[])>($r135, 4, $r134, r8, r11);

        if r5 != null goto label006;

        $r136 = new java.lang.StringBuilder;

        specialinvoke $r136.<java.lang.StringBuilder: void <init>()>();

        $r130 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in \"");

        $r131 = r3[i3];

        $r132 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r131);

        $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": ");

        $r126 = r11[0];

        $r127 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r126);

        $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r128);

        staticinvoke <com.android.server.am.ProcessStatsService: void dumpHelp(java.io.PrintWriter)>(r2);

        return;

     label006:
        z8 = r8[0];

        goto label061;

     label007:
        $r68 = "--csv-mem";

        $z20 = virtualinvoke $r68.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z20 == 0 goto label010;

        i3 = i3 + 1;

        $i24 = lengthof r3;

        if i3 < $i24 goto label008;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Error: argument required for --csv-mem");

        staticinvoke <com.android.server.am.ProcessStatsService: void dumpHelp(java.io.PrintWriter)>(r2);

        return;

     label008:
        r157 = newarray (boolean)[1];

        r158 = newarray (java.lang.String)[1];

        $r117 = <com.android.internal.app.ProcessStats: java.lang.String[] ADJ_MEM_NAMES_CSV>;

        $r118 = r3[i3];

        r6 = staticinvoke <com.android.server.am.ProcessStatsService: int[] parseStateList(java.lang.String[],int,java.lang.String,boolean[],java.lang.String[])>($r117, 1, $r118, r157, r158);

        if r6 != null goto label009;

        $r119 = new java.lang.StringBuilder;

        specialinvoke $r119.<java.lang.StringBuilder: void <init>()>();

        $r114 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in \"");

        $r113 = r3[i3];

        $r116 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r113);

        $r115 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": ");

        $r111 = r158[0];

        $r110 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r111);

        $r112 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r112);

        staticinvoke <com.android.server.am.ProcessStatsService: void dumpHelp(java.io.PrintWriter)>(r2);

        return;

     label009:
        z9 = r157[0];

        goto label061;

     label010:
        $r67 = "--csv-proc";

        $z27 = virtualinvoke $r67.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z27 == 0 goto label013;

        i3 = i3 + 1;

        $i21 = lengthof r3;

        if i3 < $i21 goto label011;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Error: argument required for --csv-proc");

        staticinvoke <com.android.server.am.ProcessStatsService: void dumpHelp(java.io.PrintWriter)>(r2);

        return;

     label011:
        r159 = newarray (boolean)[1];

        r160 = newarray (java.lang.String)[1];

        $r103 = <com.android.internal.app.ProcessStats: java.lang.String[] STATE_NAMES_CSV>;

        $r102 = r3[i3];

        r7 = staticinvoke <com.android.server.am.ProcessStatsService: int[] parseStateList(java.lang.String[],int,java.lang.String,boolean[],java.lang.String[])>($r103, 1, $r102, r159, r160);

        if r7 != null goto label012;

        $r101 = new java.lang.StringBuilder;

        specialinvoke $r101.<java.lang.StringBuilder: void <init>()>();

        $r106 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in \"");

        $r107 = r3[i3];

        $r104 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r107);

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\": ");

        $r121 = r160[0];

        $r120 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r121);

        $r122 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r122);

        staticinvoke <com.android.server.am.ProcessStatsService: void dumpHelp(java.io.PrintWriter)>(r2);

        return;

     label012:
        z10 = r159[0];

        goto label061;

     label013:
        $r74 = "--details";

        $z26 = virtualinvoke $r74.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z26 == 0 goto label014;

        z4 = 1;

        goto label061;

     label014:
        $r73 = "--full-details";

        $z25 = virtualinvoke $r73.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z25 == 0 goto label015;

        z5 = 1;

        goto label061;

     label015:
        $r72 = "--hours";

        $z24 = virtualinvoke $r72.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z24 == 0 goto label019;

        i3 = i3 + 1;

        $i22 = lengthof r3;

        if i3 < $i22 goto label016;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Error: argument required for --hours");

        staticinvoke <com.android.server.am.ProcessStatsService: void dumpHelp(java.io.PrintWriter)>(r2);

        return;

     label016:
        $r109 = r3[i3];

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r109);

     label017:
        goto label061;

     label018:
        $r123 := @caughtexception;

        $r124 = new java.lang.StringBuilder;

        specialinvoke $r124.<java.lang.StringBuilder: void <init>()>();

        $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: --hours argument not an int -- ");

        $r148 = r3[i3];

        $r147 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r148);

        $r146 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r146);

        staticinvoke <com.android.server.am.ProcessStatsService: void dumpHelp(java.io.PrintWriter)>(r2);

        return;

     label019:
        $r71 = "--last";

        $z32 = virtualinvoke $r71.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z32 == 0 goto label023;

        i3 = i3 + 1;

        $i20 = lengthof r3;

        if i3 < $i20 goto label020;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Error: argument required for --last");

        staticinvoke <com.android.server.am.ProcessStatsService: void dumpHelp(java.io.PrintWriter)>(r2);

        return;

     label020:
        $r108 = r3[i3];

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r108);

     label021:
        goto label061;

     label022:
        $r141 := @caughtexception;

        $r140 = new java.lang.StringBuilder;

        specialinvoke $r140.<java.lang.StringBuilder: void <init>()>();

        $r139 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: --last argument not an int -- ");

        $r138 = r3[i3];

        $r137 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r138);

        $r155 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r155);

        staticinvoke <com.android.server.am.ProcessStatsService: void dumpHelp(java.io.PrintWriter)>(r2);

        return;

     label023:
        $r79 = "--active";

        $z33 = virtualinvoke $r79.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z33 == 0 goto label024;

        z7 = 1;

        z3 = 1;

        goto label061;

     label024:
        $r80 = "--current";

        $z34 = virtualinvoke $r80.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z34 == 0 goto label025;

        z3 = 1;

        goto label061;

     label025:
        $r81 = "--commit";

        $z35 = virtualinvoke $r81.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z35 == 0 goto label031;

        $r95 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        r163 = $r95;

        entermonitor $r95;

     label026:
        $r94 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $i18 = $r94.<com.android.internal.app.ProcessStats: int mFlags>;

        $i17 = $i18 | 1;

        $r94.<com.android.internal.app.ProcessStats: int mFlags> = $i17;

        virtualinvoke r0.<com.android.server.am.ProcessStatsService: void writeStateLocked(boolean,boolean)>(1, 1);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Process stats committed.");

        exitmonitor r163;

     label027:
        goto label030;

     label028:
        $r156 := @caughtexception;

        r10 = $r156;

        exitmonitor r163;

     label029:
        throw r10;

     label030:
        return;

     label031:
        $r82 = "--reset";

        $z28 = virtualinvoke $r82.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z28 == 0 goto label037;

        $r93 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        r164 = $r93;

        entermonitor $r93;

     label032:
        $r92 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        virtualinvoke $r92.<com.android.internal.app.ProcessStats: void resetSafely()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Process stats reset.");

        exitmonitor r164;

     label033:
        goto label036;

     label034:
        $r129 := @caughtexception;

        r13 = $r129;

        exitmonitor r164;

     label035:
        throw r13;

     label036:
        return;

     label037:
        $r75 = "--clear";

        $z29 = virtualinvoke $r75.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z29 == 0 goto label045;

        $r97 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        r165 = $r97;

        entermonitor $r97;

     label038:
        $r96 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        virtualinvoke $r96.<com.android.internal.app.ProcessStats: void resetSafely()>();

        r166 = specialinvoke r0.<com.android.server.am.ProcessStatsService: java.util.ArrayList getCommittedFiles(int,boolean,boolean)>(0, 1, 1);

        if r166 == null goto label040;

        i25 = 0;

     label039:
        $i19 = virtualinvoke r166.<java.util.ArrayList: int size()>();

        if i25 >= $i19 goto label040;

        $r100 = new java.io.File;

        $r99 = virtualinvoke r166.<java.util.ArrayList: java.lang.Object get(int)>(i25);

        $r98 = (java.lang.String) $r99;

        specialinvoke $r100.<java.io.File: void <init>(java.lang.String)>($r98);

        virtualinvoke $r100.<java.io.File: boolean delete()>();

        i25 = i25 + 1;

        goto label039;

     label040:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("All process stats cleared.");

        exitmonitor r165;

     label041:
        goto label044;

     label042:
        $r144 := @caughtexception;

        r12 = $r144;

        exitmonitor r165;

     label043:
        throw r12;

     label044:
        return;

     label045:
        $r76 = "--write";

        $z30 = virtualinvoke $r76.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z30 == 0 goto label051;

        $r87 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        r167 = $r87;

        entermonitor $r87;

     label046:
        virtualinvoke r0.<com.android.server.am.ProcessStatsService: void writeStateSyncLocked()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Process stats written.");

        exitmonitor r167;

     label047:
        goto label050;

     label048:
        $r145 := @caughtexception;

        r15 = $r145;

        exitmonitor r167;

     label049:
        throw r15;

     label050:
        return;

     label051:
        $r77 = "--read";

        $z31 = virtualinvoke $r77.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z31 == 0 goto label057;

        $r84 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        r168 = $r84;

        entermonitor $r84;

     label052:
        $r86 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        $r85 = r0.<com.android.server.am.ProcessStatsService: android.util.AtomicFile mFile>;

        virtualinvoke r0.<com.android.server.am.ProcessStatsService: boolean readLocked(com.android.internal.app.ProcessStats,android.util.AtomicFile)>($r86, $r85);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Process stats read.");

        exitmonitor r168;

     label053:
        goto label056;

     label054:
        $r154 := @caughtexception;

        r14 = $r154;

        exitmonitor r168;

     label055:
        throw r14;

     label056:
        return;

     label057:
        $r78 = "-h";

        $z37 = virtualinvoke $r78.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z37 == 0 goto label058;

        staticinvoke <com.android.server.am.ProcessStatsService: void dumpHelp(java.io.PrintWriter)>(r2);

        return;

     label058:
        $r88 = "-a";

        $z38 = virtualinvoke $r88.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z38 == 0 goto label059;

        z4 = 1;

        z6 = 1;

        goto label061;

     label059:
        $i15 = virtualinvoke r9.<java.lang.String: int length()>();

        if $i15 <= 0 goto label060;

        $c16 = virtualinvoke r9.<java.lang.String: char charAt(int)>(0);

        if $c16 != 45 goto label060;

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown option: ");

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r83 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r83);

        staticinvoke <com.android.server.am.ProcessStatsService: void dumpHelp(java.io.PrintWriter)>(r2);

        return;

     label060:
        r4 = r9;

        z4 = 1;

     label061:
        i3 = i3 + 1;

        goto label001;

     label062:
        if z2 == 0 goto label074;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Processes running summed over");

        if z8 != 0 goto label064;

        i26 = 0;

     label063:
        $i11 = lengthof r5;

        if i26 >= $i11 goto label064;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $i12 = r5[i26];

        staticinvoke <com.android.internal.app.ProcessStats: void printScreenLabelCsv(java.io.PrintWriter,int)>(r2, $i12);

        i26 = i26 + 1;

        goto label063;

     label064:
        if z9 != 0 goto label066;

        i27 = 0;

     label065:
        $i13 = lengthof r6;

        if i27 >= $i13 goto label066;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $i14 = r6[i27];

        staticinvoke <com.android.internal.app.ProcessStats: void printMemLabelCsv(java.io.PrintWriter,int)>(r2, $i14);

        i27 = i27 + 1;

        goto label065;

     label066:
        if z10 != 0 goto label068;

        i28 = 0;

     label067:
        $i7 = lengthof r7;

        if i28 >= $i7 goto label068;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $r62 = <com.android.internal.app.ProcessStats: java.lang.String[] STATE_NAMES_CSV>;

        $i8 = r7[i28];

        $r63 = $r62[$i8];

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r63);

        i28 = i28 + 1;

        goto label067;

     label068:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        $r64 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        r169 = $r64;

        entermonitor $r64;

     label069:
        virtualinvoke r0.<com.android.server.am.ProcessStatsService: boolean dumpFilteredProcessesCsvLocked(java.io.PrintWriter,java.lang.String,boolean,int[],boolean,int[],boolean,int[],long,java.lang.String)>(r2, null, z8, r5, z9, r6, z10, r7, l0, r4);

        exitmonitor r169;

     label070:
        goto label073;

     label071:
        $r142 := @caughtexception;

        r17 = $r142;

        exitmonitor r169;

     label072:
        throw r17;

     label073:
        return;

     label074:
        if i1 == 0 goto label075;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("AGGREGATED OVER LAST ");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i1);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" HOURS:");

        $l9 = (long) i1;

        specialinvoke r0.<com.android.server.am.ProcessStatsService: void dumpAggregatedStats(java.io.PrintWriter,long,long,java.lang.String,boolean,boolean,boolean,boolean,boolean)>(r2, $l9, l0, r4, z1, z4, z5, z6, z7);

        return;

     label075:
        if i2 <= 0 goto label088;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("LAST STATS AT INDEX ");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i2);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(":");

        r170 = specialinvoke r0.<com.android.server.am.ProcessStatsService: java.util.ArrayList getCommittedFiles(int,boolean,boolean)>(0, 0, 1);

        $i5 = virtualinvoke r170.<java.util.ArrayList: int size()>();

        if i2 < $i5 goto label076;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Only have ");

        $i6 = virtualinvoke r170.<java.util.ArrayList: int size()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i6);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" data sets");

        return;

     label076:
        $r47 = new android.util.AtomicFile;

        $r48 = new java.io.File;

        $r54 = virtualinvoke r170.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r53 = (java.lang.String) $r54;

        specialinvoke $r48.<java.io.File: void <init>(java.lang.String)>($r53);

        specialinvoke $r47.<android.util.AtomicFile: void <init>(java.io.File)>($r48);

        r171 = $r47;

        $r55 = new com.android.internal.app.ProcessStats;

        specialinvoke $r55.<com.android.internal.app.ProcessStats: void <init>(boolean)>(0);

        r172 = $r55;

        virtualinvoke r0.<com.android.server.am.ProcessStatsService: boolean readLocked(com.android.internal.app.ProcessStats,android.util.AtomicFile)>(r172, r171);

        $r52 = r172.<com.android.internal.app.ProcessStats: java.lang.String mReadError>;

        if $r52 == null goto label079;

        if z0 != 0 goto label077;

        if z1 == 0 goto label078;

     label077:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("err,");

     label078:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Failure reading ");

        $r57 = virtualinvoke r170.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r56 = (java.lang.String) $r57;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r56);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("; ");

        $r58 = r172.<com.android.internal.app.ProcessStats: java.lang.String mReadError>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r58);

        return;

     label079:
        $r51 = virtualinvoke r171.<android.util.AtomicFile: java.io.File getBaseFile()>();

        r173 = virtualinvoke $r51.<java.io.File: java.lang.String getPath()>();

        z40 = virtualinvoke r173.<java.lang.String: boolean endsWith(java.lang.String)>(".ci");

        if z0 != 0 goto label080;

        if z1 == 0 goto label081;

     label080:
        virtualinvoke r172.<com.android.internal.app.ProcessStats: void dumpCheckinLocked(java.io.PrintWriter,java.lang.String)>(r2, r4);

        goto label087;

     label081:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("COMMITTED STATS FROM ");

        $r60 = r172.<com.android.internal.app.ProcessStats: java.lang.String mTimePeriodStartClockStr>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r60);

        if z40 == 0 goto label082;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" (checked in)");

     label082:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(":");

        if z4 != 0 goto label083;

        if z5 == 0 goto label086;

     label083:
        if z5 != 0 goto label084;

        $z17 = 1;

        goto label085;

     label084:
        $z17 = 0;

     label085:
        virtualinvoke r172.<com.android.internal.app.ProcessStats: void dumpLocked(java.io.PrintWriter,java.lang.String,long,boolean,boolean,boolean)>(r2, r4, l0, $z17, z6, z7);

        if z6 == 0 goto label087;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  mFile=");

        $r59 = r0.<com.android.server.am.ProcessStatsService: android.util.AtomicFile mFile>;

        $r61 = virtualinvoke $r59.<android.util.AtomicFile: java.io.File getBaseFile()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r61);

        goto label087;

     label086:
        virtualinvoke r172.<com.android.internal.app.ProcessStats: void dumpSummaryLocked(java.io.PrintWriter,java.lang.String,long,boolean)>(r2, r4, l0, z7);

     label087:
        return;

     label088:
        z41 = 0;

        if z6 != 0 goto label089;

        if z0 == 0 goto label112;

     label089:
        $r19 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r19.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label090:
        if z0 != 0 goto label091;

        $z15 = 1;

        goto label092;

     label091:
        $z15 = 0;

     label092:
        r174 = specialinvoke r0.<com.android.server.am.ProcessStatsService: java.util.ArrayList getCommittedFiles(int,boolean,boolean)>(0, 0, $z15);

        if r174 == null goto label109;

        i29 = 0;

     label093:
        $i4 = virtualinvoke r174.<java.util.ArrayList: int size()>();

        if i29 >= $i4 goto label109;

     label094:
        $r29 = new android.util.AtomicFile;

        $r28 = new java.io.File;

        $r33 = virtualinvoke r174.<java.util.ArrayList: java.lang.Object get(int)>(i29);

        $r32 = (java.lang.String) $r33;

        specialinvoke $r28.<java.io.File: void <init>(java.lang.String)>($r32);

        specialinvoke $r29.<android.util.AtomicFile: void <init>(java.io.File)>($r28);

        r175 = $r29;

        $r31 = new com.android.internal.app.ProcessStats;

        specialinvoke $r31.<com.android.internal.app.ProcessStats: void <init>(boolean)>(0);

        r176 = $r31;

        virtualinvoke r0.<com.android.server.am.ProcessStatsService: boolean readLocked(com.android.internal.app.ProcessStats,android.util.AtomicFile)>(r176, r175);

        $r35 = r176.<com.android.internal.app.ProcessStats: java.lang.String mReadError>;

        if $r35 == null goto label098;

        if z0 != 0 goto label095;

        if z1 == 0 goto label096;

     label095:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("err,");

     label096:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Failure reading ");

        $r40 = virtualinvoke r174.<java.util.ArrayList: java.lang.Object get(int)>(i29);

        $r41 = (java.lang.String) $r40;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r41);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("; ");

        $r42 = r176.<com.android.internal.app.ProcessStats: java.lang.String mReadError>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r42);

        $r43 = new java.io.File;

        $r49 = virtualinvoke r174.<java.util.ArrayList: java.lang.Object get(int)>(i29);

        $r50 = (java.lang.String) $r49;

        specialinvoke $r43.<java.io.File: void <init>(java.lang.String)>($r50);

        virtualinvoke $r43.<java.io.File: boolean delete()>();

     label097:
        goto label108;

     label098:
        $r34 = virtualinvoke r175.<android.util.AtomicFile: java.io.File getBaseFile()>();

        r177 = virtualinvoke $r34.<java.io.File: java.lang.String getPath()>();

        z42 = virtualinvoke r177.<java.lang.String: boolean endsWith(java.lang.String)>(".ci");

        if z0 != 0 goto label099;

        if z1 == 0 goto label100;

     label099:
        virtualinvoke r176.<com.android.internal.app.ProcessStats: void dumpCheckinLocked(java.io.PrintWriter,java.lang.String)>(r2, r4);

        goto label105;

     label100:
        if z41 == 0 goto label101;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        goto label102;

     label101:
        z41 = 1;

     label102:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("COMMITTED STATS FROM ");

        $r46 = r176.<com.android.internal.app.ProcessStats: java.lang.String mTimePeriodStartClockStr>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r46);

        if z42 == 0 goto label103;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" (checked in)");

     label103:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(":");

        if z5 == 0 goto label104;

        virtualinvoke r176.<com.android.internal.app.ProcessStats: void dumpLocked(java.io.PrintWriter,java.lang.String,long,boolean,boolean,boolean)>(r2, r4, l0, 0, 0, z7);

        goto label105;

     label104:
        virtualinvoke r176.<com.android.internal.app.ProcessStats: void dumpSummaryLocked(java.io.PrintWriter,java.lang.String,long,boolean)>(r2, r4, l0, z7);

     label105:
        if z0 == 0 goto label106;

        $r39 = virtualinvoke r175.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $r38 = new java.io.File;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r177);

        $r44 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".ci");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<java.io.File: void <init>(java.lang.String)>($r45);

        virtualinvoke $r39.<java.io.File: boolean renameTo(java.io.File)>($r38);

     label106:
        goto label108;

     label107:
        $r152 := @caughtexception;

        r178 = $r152;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("**** FAILURE DUMPING STATE: ");

        $r149 = virtualinvoke r174.<java.util.ArrayList: java.lang.Object get(int)>(i29);

        $r150 = (java.lang.String) $r149;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r150);

        virtualinvoke r178.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r2);

     label108:
        i29 = i29 + 1;

        goto label093;

     label109:
        $r23 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r23.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label112;

     label110:
        $r153 := @caughtexception;

        r18 = $r153;

     label111:
        $r151 = r0.<com.android.server.am.ProcessStatsService: java.util.concurrent.locks.ReentrantLock mWriteLock>;

        virtualinvoke $r151.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw r18;

     label112:
        if z0 != 0 goto label126;

        if z3 != 0 goto label114;

        if z41 == 0 goto label113;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label113:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("AGGREGATED OVER LAST 24 HOURS:");

        specialinvoke r0.<com.android.server.am.ProcessStatsService: void dumpAggregatedStats(java.io.PrintWriter,long,long,java.lang.String,boolean,boolean,boolean,boolean,boolean)>(r2, 24L, l0, r4, z1, z4, z5, z6, z7);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("AGGREGATED OVER LAST 3 HOURS:");

        specialinvoke r0.<com.android.server.am.ProcessStatsService: void dumpAggregatedStats(java.io.PrintWriter,long,long,java.lang.String,boolean,boolean,boolean,boolean,boolean)>(r2, 3L, l0, r4, z1, z4, z5, z6, z7);

        z41 = 1;

     label114:
        $r24 = r0.<com.android.server.am.ProcessStatsService: com.android.server.am.ActivityManagerService mAm>;

        r179 = $r24;

        entermonitor $r24;

     label115:
        if z1 == 0 goto label116;

        $r30 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        virtualinvoke $r30.<com.android.internal.app.ProcessStats: void dumpCheckinLocked(java.io.PrintWriter,java.lang.String)>(r2, r4);

        goto label122;

     label116:
        if z41 == 0 goto label117;

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label117:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("CURRENT STATS:");

        if z4 != 0 goto label118;

        if z5 == 0 goto label121;

     label118:
        $r22 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        if z5 != 0 goto label119;

        $z11 = 1;

        goto label120;

     label119:
        $z11 = 0;

     label120:
        virtualinvoke $r22.<com.android.internal.app.ProcessStats: void dumpLocked(java.io.PrintWriter,java.lang.String,long,boolean,boolean,boolean)>(r2, r4, l0, $z11, z6, z7);

        if z6 == 0 goto label122;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  mFile=");

        $r26 = r0.<com.android.server.am.ProcessStatsService: android.util.AtomicFile mFile>;

        $r27 = virtualinvoke $r26.<android.util.AtomicFile: java.io.File getBaseFile()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r27);

        goto label122;

     label121:
        $r25 = r0.<com.android.server.am.ProcessStatsService: com.android.internal.app.ProcessStats mProcessStats>;

        virtualinvoke $r25.<com.android.internal.app.ProcessStats: void dumpSummaryLocked(java.io.PrintWriter,java.lang.String,long,boolean)>(r2, r4, l0, z7);

     label122:
        exitmonitor r179;

     label123:
        goto label126;

     label124:
        $r143 := @caughtexception;

        r16 = $r143;

        exitmonitor r179;

     label125:
        throw r16;

     label126:
        return;

        catch java.lang.NumberFormatException from label016 to label017 with label018;
        catch java.lang.NumberFormatException from label020 to label021 with label022;
        catch java.lang.Throwable from label026 to label027 with label028;
        catch java.lang.Throwable from label028 to label029 with label028;
        catch java.lang.Throwable from label032 to label033 with label034;
        catch java.lang.Throwable from label034 to label035 with label034;
        catch java.lang.Throwable from label038 to label041 with label042;
        catch java.lang.Throwable from label042 to label043 with label042;
        catch java.lang.Throwable from label046 to label047 with label048;
        catch java.lang.Throwable from label048 to label049 with label048;
        catch java.lang.Throwable from label052 to label053 with label054;
        catch java.lang.Throwable from label054 to label055 with label054;
        catch java.lang.Throwable from label069 to label070 with label071;
        catch java.lang.Throwable from label071 to label072 with label071;
        catch java.lang.Throwable from label094 to label097 with label107;
        catch java.lang.Throwable from label098 to label106 with label107;
        catch java.lang.Throwable from label090 to label109 with label110;
        catch java.lang.Throwable from label110 to label111 with label110;
        catch java.lang.Throwable from label115 to label123 with label124;
        catch java.lang.Throwable from label124 to label125 with label124;
    }

    static void <clinit>()
    {
        <com.android.server.am.ProcessStatsService: java.lang.String STATE_FILE_CHECKIN_SUFFIX> = ".ci";

        <com.android.server.am.ProcessStatsService: java.lang.String STATE_FILE_SUFFIX> = ".bin";

        <com.android.server.am.ProcessStatsService: java.lang.String STATE_FILE_PREFIX> = "state-";

        <com.android.server.am.ProcessStatsService: int MAX_HISTORIC_STATES> = 8;

        <com.android.server.am.ProcessStatsService: boolean DEBUG> = 0;

        <com.android.server.am.ProcessStatsService: java.lang.String TAG> = "ProcessStatsService";

        <com.android.server.am.ProcessStatsService: long WRITE_PERIOD> = 1800000L;

        return;
    }
}
