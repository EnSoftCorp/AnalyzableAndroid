public final class com.android.server.pm.Installer extends com.android.server.SystemService
{
    private static final java.lang.String TAG;
    private final com.android.internal.os.InstallerConnection mInstaller;

    public void <init>(android.content.Context)
    {
        com.android.server.pm.Installer r0;
        android.content.Context r1;
        com.android.internal.os.InstallerConnection $r2;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        $r2 = new com.android.internal.os.InstallerConnection;

        specialinvoke $r2.<com.android.internal.os.InstallerConnection: void <init>()>();

        r0.<com.android.server.pm.Installer: com.android.internal.os.InstallerConnection mInstaller> = $r2;

        return;
    }

    public void onStart()
    {
        com.android.server.pm.Installer r0;

        r0 := @this: com.android.server.pm.Installer;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("Installer", "Waiting for installd to be ready.");

        virtualinvoke r0.<com.android.server.pm.Installer: boolean ping()>();

        return;
    }

    public int install(java.lang.String, int, int, java.lang.String)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, r2, $r14, $r15;
        int i0, i1, $i2;
        java.lang.StringBuilder r3, $r4;
        com.android.internal.os.InstallerConnection $r13;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("install");

        r3 = $r4;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        if r2 == null goto label1;

        $r15 = r2;

        goto label2;

     label1:
        $r15 = "!";

     label2:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r13 = r0.<com.android.server.pm.Installer: com.android.internal.os.InstallerConnection mInstaller>;

        $r14 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = virtualinvoke $r13.<com.android.internal.os.InstallerConnection: int execute(java.lang.String)>($r14);

        return $i2;
    }

    public int patchoat(java.lang.String, int, boolean, java.lang.String, java.lang.String)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, r2, r3, $r8;
        int i0, $i1;
        boolean z0, $z1;
        com.android.internal.os.InstallerConnection $r4;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        $z1 = staticinvoke <com.android.server.pm.Installer: boolean isValidInstructionSet(java.lang.String)>(r3);

        if $z1 != 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid instruction set: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("Installer", $r8);

        return -1;

     label1:
        $r4 = r0.<com.android.server.pm.Installer: com.android.internal.os.InstallerConnection mInstaller>;

        $i1 = virtualinvoke $r4.<com.android.internal.os.InstallerConnection: int patchoat(java.lang.String,int,boolean,java.lang.String,java.lang.String)>(r1, i0, z0, r2, r3);

        return $i1;
    }

    public int patchoat(java.lang.String, int, boolean, java.lang.String)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, r2, $r7;
        int i0, $i1;
        boolean z0, $z1;
        com.android.internal.os.InstallerConnection $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.lang.String;

        $z1 = staticinvoke <com.android.server.pm.Installer: boolean isValidInstructionSet(java.lang.String)>(r2);

        if $z1 != 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid instruction set: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("Installer", $r7);

        return -1;

     label1:
        $r3 = r0.<com.android.server.pm.Installer: com.android.internal.os.InstallerConnection mInstaller>;

        $i1 = virtualinvoke $r3.<com.android.internal.os.InstallerConnection: int patchoat(java.lang.String,int,boolean,java.lang.String)>(r1, i0, z0, r2);

        return $i1;
    }

    public int dexopt(java.lang.String, int, boolean, java.lang.String)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, r2, $r7;
        int i0, $i1;
        boolean z0, $z1;
        com.android.internal.os.InstallerConnection $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.lang.String;

        $z1 = staticinvoke <com.android.server.pm.Installer: boolean isValidInstructionSet(java.lang.String)>(r2);

        if $z1 != 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid instruction set: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("Installer", $r7);

        return -1;

     label1:
        $r3 = r0.<com.android.server.pm.Installer: com.android.internal.os.InstallerConnection mInstaller>;

        $i1 = virtualinvoke $r3.<com.android.internal.os.InstallerConnection: int dexopt(java.lang.String,int,boolean,java.lang.String)>(r1, i0, z0, r2);

        return $i1;
    }

    public int dexopt(java.lang.String, int, boolean, java.lang.String, java.lang.String, boolean)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, r2, r3, $r8;
        int i0, $i1;
        boolean z0, z1, $z2;
        com.android.internal.os.InstallerConnection $r4;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        z1 := @parameter5: boolean;

        $z2 = staticinvoke <com.android.server.pm.Installer: boolean isValidInstructionSet(java.lang.String)>(r3);

        if $z2 != 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid instruction set: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("Installer", $r8);

        return -1;

     label1:
        $r4 = r0.<com.android.server.pm.Installer: com.android.internal.os.InstallerConnection mInstaller>;

        $i1 = virtualinvoke $r4.<com.android.internal.os.InstallerConnection: int dexopt(java.lang.String,int,boolean,java.lang.String,java.lang.String,boolean)>(r1, i0, z0, r2, r3, z1);

        return $i1;
    }

    public int idmap(java.lang.String, java.lang.String, int)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, r2, $r12;
        int i0, $i1;
        java.lang.StringBuilder r3, $r4;
        com.android.internal.os.InstallerConnection $r11;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("idmap");

        r3 = $r4;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = r0.<com.android.server.pm.Installer: com.android.internal.os.InstallerConnection mInstaller>;

        $r12 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke $r11.<com.android.internal.os.InstallerConnection: int execute(java.lang.String)>($r12);

        return $i1;
    }

    public int movedex(java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, r2, r3, $r13, $r17;
        java.lang.StringBuilder r4, $r5, $r14, $r15, $r16;
        boolean $z0;
        com.android.internal.os.InstallerConnection $r12;
        int $i0;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $z0 = staticinvoke <com.android.server.pm.Installer: boolean isValidInstructionSet(java.lang.String)>(r3);

        if $z0 != 0 goto label1;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid instruction set: ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("Installer", $r17);

        return -1;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("movedex");

        r4 = $r5;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r12 = r0.<com.android.server.pm.Installer: com.android.internal.os.InstallerConnection mInstaller>;

        $r13 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke $r12.<com.android.internal.os.InstallerConnection: int execute(java.lang.String)>($r13);

        return $i0;
    }

    public int rmdex(java.lang.String, java.lang.String)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, r2, $r10, $r13;
        java.lang.StringBuilder r3, $r4, $r11, $r12, $r14;
        boolean $z0;
        com.android.internal.os.InstallerConnection $r9;
        int $i0;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = staticinvoke <com.android.server.pm.Installer: boolean isValidInstructionSet(java.lang.String)>(r2);

        if $z0 != 0 goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid instruction set: ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("Installer", $r13);

        return -1;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("rmdex");

        r3 = $r4;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = r0.<com.android.server.pm.Installer: com.android.internal.os.InstallerConnection mInstaller>;

        $r10 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke $r9.<com.android.internal.os.InstallerConnection: int execute(java.lang.String)>($r10);

        return $i0;
    }

    public int remove(java.lang.String, int)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, $r9;
        int i0, $i1;
        java.lang.StringBuilder r2, $r3;
        com.android.internal.os.InstallerConnection $r8;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("remove");

        r2 = $r3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = r0.<com.android.server.pm.Installer: com.android.internal.os.InstallerConnection mInstaller>;

        $r9 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke $r8.<com.android.internal.os.InstallerConnection: int execute(java.lang.String)>($r9);

        return $i1;
    }

    public int rename(java.lang.String, java.lang.String)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, r2, $r10;
        java.lang.StringBuilder r3, $r4;
        com.android.internal.os.InstallerConnection $r9;
        int $i0;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("rename");

        r3 = $r4;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = r0.<com.android.server.pm.Installer: com.android.internal.os.InstallerConnection mInstaller>;

        $r10 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = virtualinvoke $r9.<com.android.internal.os.InstallerConnection: int execute(java.lang.String)>($r10);

        return $i0;
    }

    public int fixUid(java.lang.String, int, int)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, $r11;
        int i0, i1, $i2;
        java.lang.StringBuilder r2, $r3;
        com.android.internal.os.InstallerConnection $r10;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("fixuid");

        r2 = $r3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = r0.<com.android.server.pm.Installer: com.android.internal.os.InstallerConnection mInstaller>;

        $r11 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = virtualinvoke $r10.<com.android.internal.os.InstallerConnection: int execute(java.lang.String)>($r11);

        return $i2;
    }

    public int deleteCacheFiles(java.lang.String, int)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, $r9;
        int i0, $i1;
        java.lang.StringBuilder r2, $r3;
        com.android.internal.os.InstallerConnection $r8;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("rmcache");

        r2 = $r3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = r0.<com.android.server.pm.Installer: com.android.internal.os.InstallerConnection mInstaller>;

        $r9 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke $r8.<com.android.internal.os.InstallerConnection: int execute(java.lang.String)>($r9);

        return $i1;
    }

    public int deleteCodeCacheFiles(java.lang.String, int)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, $r9;
        int i0, $i1;
        java.lang.StringBuilder r2, $r3;
        com.android.internal.os.InstallerConnection $r8;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("rmcodecache");

        r2 = $r3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = r0.<com.android.server.pm.Installer: com.android.internal.os.InstallerConnection mInstaller>;

        $r9 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke $r8.<com.android.internal.os.InstallerConnection: int execute(java.lang.String)>($r9);

        return $i1;
    }

    public int createUserData(java.lang.String, int, int, java.lang.String)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, r2, $r14, $r15;
        int i0, i1, $i2;
        java.lang.StringBuilder r3, $r4;
        com.android.internal.os.InstallerConnection $r13;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("mkuserdata");

        r3 = $r4;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        if r2 == null goto label1;

        $r15 = r2;

        goto label2;

     label1:
        $r15 = "!";

     label2:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r13 = r0.<com.android.server.pm.Installer: com.android.internal.os.InstallerConnection mInstaller>;

        $r14 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = virtualinvoke $r13.<com.android.internal.os.InstallerConnection: int execute(java.lang.String)>($r14);

        return $i2;
    }

    public int createUserConfig(int)
    {
        com.android.server.pm.Installer r0;
        int i0, $i1;
        java.lang.StringBuilder r1, $r2;
        com.android.internal.os.InstallerConnection $r5;
        java.lang.String $r6;

        r0 := @this: com.android.server.pm.Installer;

        i0 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("mkuserconfig");

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = r0.<com.android.server.pm.Installer: com.android.internal.os.InstallerConnection mInstaller>;

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke $r5.<com.android.internal.os.InstallerConnection: int execute(java.lang.String)>($r6);

        return $i1;
    }

    public int removeUserDataDirs(int)
    {
        com.android.server.pm.Installer r0;
        int i0, $i1;
        java.lang.StringBuilder r1, $r2;
        com.android.internal.os.InstallerConnection $r5;
        java.lang.String $r6;

        r0 := @this: com.android.server.pm.Installer;

        i0 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("rmuser");

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = r0.<com.android.server.pm.Installer: com.android.internal.os.InstallerConnection mInstaller>;

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke $r5.<com.android.internal.os.InstallerConnection: int execute(java.lang.String)>($r6);

        return $i1;
    }

    public int clearUserData(java.lang.String, int)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, $r9;
        int i0, $i1;
        java.lang.StringBuilder r2, $r3;
        com.android.internal.os.InstallerConnection $r8;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("rmuserdata");

        r2 = $r3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = r0.<com.android.server.pm.Installer: com.android.internal.os.InstallerConnection mInstaller>;

        $r9 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke $r8.<com.android.internal.os.InstallerConnection: int execute(java.lang.String)>($r9);

        return $i1;
    }

    public boolean ping()
    {
        com.android.server.pm.Installer r0;
        com.android.internal.os.InstallerConnection $r1;
        int $i0;

        r0 := @this: com.android.server.pm.Installer;

        $r1 = r0.<com.android.server.pm.Installer: com.android.internal.os.InstallerConnection mInstaller>;

        $i0 = virtualinvoke $r1.<com.android.internal.os.InstallerConnection: int execute(java.lang.String)>("ping");

        if $i0 >= 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public int freeCache(long)
    {
        com.android.server.pm.Installer r0;
        long l0;
        java.lang.StringBuilder r1, $r2;
        java.lang.String $r4, $r7;
        com.android.internal.os.InstallerConnection $r6;
        int $i1;

        r0 := @this: com.android.server.pm.Installer;

        l0 := @parameter0: long;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("freecache");

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = r0.<com.android.server.pm.Installer: com.android.internal.os.InstallerConnection mInstaller>;

        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke $r6.<com.android.internal.os.InstallerConnection: int execute(java.lang.String)>($r7);

        return $i1;
    }

    public int getSizeInfo(java.lang.String, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], android.content.pm.PackageStats)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, r2, r3, r4, r5, r9, $r23, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r40, r42;
        int i0, i1, i2, $i4, $i7;
        java.lang.String[] r6, r8, r43;
        android.content.pm.PackageStats r7;
        java.lang.StringBuilder $r10, $r36, $r37, $r38, r41;
        com.android.internal.os.InstallerConnection $r25;
        long $l3, $l5, $l6, $l8;
        boolean $z0;
        java.lang.NumberFormatException $r39;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        r6 := @parameter6: java.lang.String[];

        r7 := @parameter7: android.content.pm.PackageStats;

        r8 = r6;

        i1 = lengthof r8;

        i2 = 0;

     label01:
        if i2 >= i1 goto label03;

        r9 = r8[i2];

        $z0 = staticinvoke <com.android.server.pm.Installer: boolean isValidInstructionSet(java.lang.String)>(r9);

        if $z0 != 0 goto label02;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid instruction set: ");

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r40 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("Installer", $r40);

        return -1;

     label02:
        i2 = i2 + 1;

        goto label01;

     label03:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("getsize");

        r41 = $r10;

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        if r3 == null goto label04;

        $r33 = r3;

        goto label05;

     label04:
        $r33 = "!";

     label05:
        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        if r4 == null goto label06;

        $r35 = r4;

        goto label07;

     label06:
        $r35 = "!";

     label07:
        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        if r5 == null goto label08;

        $r34 = r5;

        goto label09;

     label08:
        $r34 = "!";

     label09:
        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r23 = r6[0];

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = r0.<com.android.server.pm.Installer: com.android.internal.os.InstallerConnection mInstaller>;

        $r27 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        r42 = virtualinvoke $r25.<com.android.internal.os.InstallerConnection: java.lang.String transact(java.lang.String)>($r27);

        r43 = virtualinvoke r42.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        if r43 == null goto label10;

        $i4 = lengthof r43;

        if $i4 == 5 goto label11;

     label10:
        return -1;

     label11:
        $r28 = r43[1];

        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r28);

        r7.<android.content.pm.PackageStats: long codeSize> = $l3;

        $r30 = r43[2];

        $l6 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r30);

        r7.<android.content.pm.PackageStats: long dataSize> = $l6;

        $r29 = r43[3];

        $l5 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r29);

        r7.<android.content.pm.PackageStats: long cacheSize> = $l5;

        $r32 = r43[4];

        $l8 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r32);

        r7.<android.content.pm.PackageStats: long externalCodeSize> = $l8;

        $r31 = r43[0];

        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r31);

     label12:
        return $i7;

     label13:
        $r39 := @caughtexception;

        return -1;

        catch java.lang.NumberFormatException from label11 to label12 with label13;
    }

    public int moveFiles()
    {
        com.android.server.pm.Installer r0;
        com.android.internal.os.InstallerConnection $r1;
        int $i0;

        r0 := @this: com.android.server.pm.Installer;

        $r1 = r0.<com.android.server.pm.Installer: com.android.internal.os.InstallerConnection mInstaller>;

        $i0 = virtualinvoke $r1.<com.android.internal.os.InstallerConnection: int execute(java.lang.String)>("movefiles");

        return $i0;
    }

    public int linkNativeLibraryDirectory(java.lang.String, java.lang.String, int)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, r2, $r11;
        int i0, $i1;
        java.lang.StringBuilder r3, $r4;
        com.android.internal.os.InstallerConnection $r10;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        if r1 != null goto label1;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("Installer", "linkNativeLibraryDirectory dataPath is null");

        return -1;

     label1:
        if r2 != null goto label2;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("Installer", "linkNativeLibraryDirectory nativeLibPath is null");

        return -1;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("linklib ");

        r3 = $r4;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = r0.<com.android.server.pm.Installer: com.android.internal.os.InstallerConnection mInstaller>;

        $r11 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke $r10.<com.android.internal.os.InstallerConnection: int execute(java.lang.String)>($r11);

        return $i1;
    }

    public boolean restoreconData(java.lang.String, java.lang.String, int)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, r2, $r12, $r13;
        int i0, $i1;
        java.lang.StringBuilder r3, $r4;
        com.android.internal.os.InstallerConnection $r11;
        boolean $z0;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("restorecondata");

        r3 = $r4;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        if r2 == null goto label1;

        $r13 = r2;

        goto label2;

     label1:
        $r13 = "!";

     label2:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = r0.<com.android.server.pm.Installer: com.android.internal.os.InstallerConnection mInstaller>;

        $r12 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke $r11.<com.android.internal.os.InstallerConnection: int execute(java.lang.String)>($r12);

        if $i1 != 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    private static boolean isValidInstructionSet(java.lang.String)
    {
        java.lang.String r0, r2, $r3;
        java.lang.String[] r1;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        r1 = <android.os.Build: java.lang.String[] SUPPORTED_ABIS>;

        i0 = lengthof r1;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r2 = r1[i1];

        $r3 = staticinvoke <dalvik.system.VMRuntime: java.lang.String getInstructionSet(java.lang.String)>(r2);

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    public static void <clinit>()
    {
        <com.android.server.pm.Installer: java.lang.String TAG> = "Installer";

        return;
    }
}
