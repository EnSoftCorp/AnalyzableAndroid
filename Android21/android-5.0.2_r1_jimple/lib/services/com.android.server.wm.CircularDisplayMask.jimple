class com.android.server.wm.CircularDisplayMask extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final int STROKE_WIDTH;
    private int mScreenOffset;
    private android.graphics.Point mScreenSize;
    private final android.view.SurfaceControl mSurfaceControl;
    private final android.view.Surface mSurface;
    private int mLastDW;
    private int mLastDH;
    private boolean mDrawNeeded;
    private android.graphics.Paint mPaint;
    private int mRotation;
    private boolean mVisible;
    private boolean mDimensionsUnequal;

    public void <init>(android.view.Display, android.view.SurfaceSession, int, int)
    {
        com.android.server.wm.CircularDisplayMask r0;
        android.view.Display r1;
        android.view.SurfaceSession r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.view.SurfaceControl r3, $r10;
        android.view.Surface $r5, $r14;
        android.graphics.Point $r6, $r7, $r8, $r9, $r11, $r12;
        android.graphics.Paint $r13, $r16, $r17, $r18, $r20;
        android.graphics.Paint$Style $r15;
        java.lang.StringBuilder $r19, $r21, $r22, $r24;
        android.view.Surface$OutOfResourcesException $r23;
        java.lang.String $r25;

        r0 := @this: com.android.server.wm.CircularDisplayMask;

        r1 := @parameter0: android.view.Display;

        r2 := @parameter1: android.view.SurfaceSession;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wm.CircularDisplayMask: int mScreenOffset> = 0;

        $r5 = new android.view.Surface;

        specialinvoke $r5.<android.view.Surface: void <init>()>();

        r0.<com.android.server.wm.CircularDisplayMask: android.view.Surface mSurface> = $r5;

        r0.<com.android.server.wm.CircularDisplayMask: boolean mDimensionsUnequal> = 0;

        $r6 = new android.graphics.Point;

        specialinvoke $r6.<android.graphics.Point: void <init>()>();

        r0.<com.android.server.wm.CircularDisplayMask: android.graphics.Point mScreenSize> = $r6;

        $r7 = r0.<com.android.server.wm.CircularDisplayMask: android.graphics.Point mScreenSize>;

        virtualinvoke r1.<android.view.Display: void getSize(android.graphics.Point)>($r7);

        $r8 = r0.<com.android.server.wm.CircularDisplayMask: android.graphics.Point mScreenSize>;

        $i3 = $r8.<android.graphics.Point: int x>;

        $r9 = r0.<com.android.server.wm.CircularDisplayMask: android.graphics.Point mScreenSize>;

        $i2 = $r9.<android.graphics.Point: int y>;

        if $i3 == $i2 goto label1;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Screen dimensions of displayId = ");

        $i7 = virtualinvoke r1.<android.view.Display: int getDisplayId()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("are not equal, circularMask will not be drawn.");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("CircularDisplayMask", $r25);

        r0.<com.android.server.wm.CircularDisplayMask: boolean mDimensionsUnequal> = 1;

     label1:
        r3 = null;

     label2:
        $r10 = new android.view.SurfaceControl;

        $r11 = r0.<com.android.server.wm.CircularDisplayMask: android.graphics.Point mScreenSize>;

        $i6 = $r11.<android.graphics.Point: int x>;

        $r12 = r0.<com.android.server.wm.CircularDisplayMask: android.graphics.Point mScreenSize>;

        $i4 = $r12.<android.graphics.Point: int y>;

        specialinvoke $r10.<android.view.SurfaceControl: void <init>(android.view.SurfaceSession,java.lang.String,int,int,int,int)>(r2, "CircularDisplayMask", $i6, $i4, -3, 4);

        r3 = $r10;

        $i5 = virtualinvoke r1.<android.view.Display: int getLayerStack()>();

        virtualinvoke r3.<android.view.SurfaceControl: void setLayerStack(int)>($i5);

        virtualinvoke r3.<android.view.SurfaceControl: void setLayer(int)>(i0);

        virtualinvoke r3.<android.view.SurfaceControl: void setPosition(float,float)>(0.0F, 0.0F);

        virtualinvoke r3.<android.view.SurfaceControl: void show()>();

        $r14 = r0.<com.android.server.wm.CircularDisplayMask: android.view.Surface mSurface>;

        virtualinvoke $r14.<android.view.Surface: void copyFrom(android.view.SurfaceControl)>(r3);

     label3:
        goto label5;

     label4:
        $r23 := @caughtexception;

     label5:
        r0.<com.android.server.wm.CircularDisplayMask: android.view.SurfaceControl mSurfaceControl> = r3;

        r0.<com.android.server.wm.CircularDisplayMask: boolean mDrawNeeded> = 1;

        $r13 = new android.graphics.Paint;

        specialinvoke $r13.<android.graphics.Paint: void <init>()>();

        r0.<com.android.server.wm.CircularDisplayMask: android.graphics.Paint mPaint> = $r13;

        $r16 = r0.<com.android.server.wm.CircularDisplayMask: android.graphics.Paint mPaint>;

        virtualinvoke $r16.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r18 = r0.<com.android.server.wm.CircularDisplayMask: android.graphics.Paint mPaint>;

        $r15 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r18.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r15);

        $r17 = r0.<com.android.server.wm.CircularDisplayMask: android.graphics.Paint mPaint>;

        virtualinvoke $r17.<android.graphics.Paint: void setColor(int)>(-16777216);

        $r20 = r0.<com.android.server.wm.CircularDisplayMask: android.graphics.Paint mPaint>;

        virtualinvoke $r20.<android.graphics.Paint: void setStrokeWidth(float)>(2.0F);

        r0.<com.android.server.wm.CircularDisplayMask: int mScreenOffset> = i1;

        return;

        catch android.view.Surface$OutOfResourcesException from label2 to label3 with label4;
    }

    private void drawIfNeeded()
    {
        com.android.server.wm.CircularDisplayMask r0;
        android.graphics.Rect r1, $r4;
        android.graphics.Canvas r2;
        boolean $z0, $z1, $z2;
        android.graphics.Point $r5, $r6, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        android.view.Surface $r7, $r12;
        android.graphics.PorterDuff$Mode $r8;
        android.view.SurfaceControl $r10, $r13, $r14;
        android.graphics.Paint $r11;
        float $f0, $f1, $f2, $f3, $f4;
        java.lang.IllegalArgumentException $r15;
        android.view.Surface$OutOfResourcesException $r16;

        r0 := @this: com.android.server.wm.CircularDisplayMask;

        $z0 = r0.<com.android.server.wm.CircularDisplayMask: boolean mDrawNeeded>;

        if $z0 == 0 goto label01;

        $z1 = r0.<com.android.server.wm.CircularDisplayMask: boolean mVisible>;

        if $z1 == 0 goto label01;

        $z2 = r0.<com.android.server.wm.CircularDisplayMask: boolean mDimensionsUnequal>;

        if $z2 == 0 goto label02;

     label01:
        return;

     label02:
        r0.<com.android.server.wm.CircularDisplayMask: boolean mDrawNeeded> = 0;

        $r4 = new android.graphics.Rect;

        $r5 = r0.<com.android.server.wm.CircularDisplayMask: android.graphics.Point mScreenSize>;

        $i1 = $r5.<android.graphics.Point: int x>;

        $r6 = r0.<com.android.server.wm.CircularDisplayMask: android.graphics.Point mScreenSize>;

        $i0 = $r6.<android.graphics.Point: int y>;

        specialinvoke $r4.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i1, $i0);

        r1 = $r4;

        r2 = null;

     label03:
        $r7 = r0.<com.android.server.wm.CircularDisplayMask: android.view.Surface mSurface>;

        r2 = virtualinvoke $r7.<android.view.Surface: android.graphics.Canvas lockCanvas(android.graphics.Rect)>(r1);

     label04:
        goto label07;

     label05:
        $r15 := @caughtexception;

        goto label07;

     label06:
        $r16 := @caughtexception;

     label07:
        if r2 != null goto label08;

        return;

     label08:
        $r8 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC>;

        virtualinvoke r2.<android.graphics.Canvas: void drawColor(int,android.graphics.PorterDuff$Mode)>(0, $r8);

        $i2 = r0.<com.android.server.wm.CircularDisplayMask: int mRotation>;

        tableswitch($i2)
        {
            case 0: goto label09;
            case 1: goto label09;
            case 2: goto label10;
            case 3: goto label11;
            default: goto label12;
        };

     label09:
        $r10 = r0.<com.android.server.wm.CircularDisplayMask: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r10.<android.view.SurfaceControl: void setPosition(float,float)>(0.0F, 0.0F);

        goto label12;

     label10:
        $r14 = r0.<com.android.server.wm.CircularDisplayMask: android.view.SurfaceControl mSurfaceControl>;

        $i7 = r0.<com.android.server.wm.CircularDisplayMask: int mScreenOffset>;

        $i6 = neg $i7;

        $f4 = (float) $i6;

        virtualinvoke $r14.<android.view.SurfaceControl: void setPosition(float,float)>(0.0F, $f4);

        goto label12;

     label11:
        $r13 = r0.<com.android.server.wm.CircularDisplayMask: android.view.SurfaceControl mSurfaceControl>;

        $i5 = r0.<com.android.server.wm.CircularDisplayMask: int mScreenOffset>;

        $i4 = neg $i5;

        $f3 = (float) $i4;

        virtualinvoke $r13.<android.view.SurfaceControl: void setPosition(float,float)>($f3, 0.0F);

     label12:
        $r9 = r0.<com.android.server.wm.CircularDisplayMask: android.graphics.Point mScreenSize>;

        $i3 = $r9.<android.graphics.Point: int x>;

        i8 = $i3 / 2;

        $f2 = (float) i8;

        $f0 = (float) i8;

        $f1 = (float) i8;

        $r11 = r0.<com.android.server.wm.CircularDisplayMask: android.graphics.Paint mPaint>;

        virtualinvoke r2.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f2, $f0, $f1, $r11);

        $r12 = r0.<com.android.server.wm.CircularDisplayMask: android.view.Surface mSurface>;

        virtualinvoke $r12.<android.view.Surface: void unlockCanvasAndPost(android.graphics.Canvas)>(r2);

        return;

        catch java.lang.IllegalArgumentException from label03 to label04 with label05;
        catch android.view.Surface$OutOfResourcesException from label03 to label04 with label06;
    }

    public void setVisibility(boolean)
    {
        com.android.server.wm.CircularDisplayMask r0;
        boolean z0;
        android.view.SurfaceControl $r1, $r2, $r3;

        r0 := @this: com.android.server.wm.CircularDisplayMask;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.wm.CircularDisplayMask: android.view.SurfaceControl mSurfaceControl>;

        if $r1 != null goto label1;

        return;

     label1:
        r0.<com.android.server.wm.CircularDisplayMask: boolean mVisible> = z0;

        specialinvoke r0.<com.android.server.wm.CircularDisplayMask: void drawIfNeeded()>();

        if z0 == 0 goto label2;

        $r3 = r0.<com.android.server.wm.CircularDisplayMask: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r3.<android.view.SurfaceControl: void show()>();

        goto label3;

     label2:
        $r2 = r0.<com.android.server.wm.CircularDisplayMask: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r2.<android.view.SurfaceControl: void hide()>();

     label3:
        return;
    }

    void positionSurface(int, int, int)
    {
        com.android.server.wm.CircularDisplayMask r0;
        int i0, i1, i2, $i3, $i4, $i5;

        r0 := @this: com.android.server.wm.CircularDisplayMask;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = r0.<com.android.server.wm.CircularDisplayMask: int mLastDW>;

        if $i3 != i0 goto label1;

        $i4 = r0.<com.android.server.wm.CircularDisplayMask: int mLastDH>;

        if $i4 != i1 goto label1;

        $i5 = r0.<com.android.server.wm.CircularDisplayMask: int mRotation>;

        if $i5 != i2 goto label1;

        return;

     label1:
        r0.<com.android.server.wm.CircularDisplayMask: int mLastDW> = i0;

        r0.<com.android.server.wm.CircularDisplayMask: int mLastDH> = i1;

        r0.<com.android.server.wm.CircularDisplayMask: boolean mDrawNeeded> = 1;

        r0.<com.android.server.wm.CircularDisplayMask: int mRotation> = i2;

        specialinvoke r0.<com.android.server.wm.CircularDisplayMask: void drawIfNeeded()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.CircularDisplayMask: int STROKE_WIDTH> = 2;

        <com.android.server.wm.CircularDisplayMask: java.lang.String TAG> = "CircularDisplayMask";

        return;
    }
}
