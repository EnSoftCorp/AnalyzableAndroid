public class com.android.server.MountServiceIdler extends android.app.job.JobService
{
    private static final java.lang.String TAG;
    private static android.content.ComponentName sIdleService;
    private static int MOUNT_JOB_ID;
    private boolean mStarted;
    private android.app.job.JobParameters mJobParams;
    private java.lang.Runnable mFinishCallback;

    public void <init>()
    {
        com.android.server.MountServiceIdler r0;
        com.android.server.MountServiceIdler$1 $r1;

        r0 := @this: com.android.server.MountServiceIdler;

        specialinvoke r0.<android.app.job.JobService: void <init>()>();

        $r1 = new com.android.server.MountServiceIdler$1;

        specialinvoke $r1.<com.android.server.MountServiceIdler$1: void <init>(com.android.server.MountServiceIdler)>(r0);

        r0.<com.android.server.MountServiceIdler: java.lang.Runnable mFinishCallback> = $r1;

        return;
    }

    public boolean onStartJob(android.app.job.JobParameters)
    {
        com.android.server.MountServiceIdler r0;
        android.app.job.JobParameters r1;
        com.android.server.MountService r2;
        java.lang.Runnable r3, $r5, $r6;
        java.lang.Throwable r4, $r7;
        boolean $z0;

        r0 := @this: com.android.server.MountServiceIdler;

        r1 := @parameter0: android.app.job.JobParameters;

        r0.<com.android.server.MountServiceIdler: android.app.job.JobParameters mJobParams> = r1;

        r2 = <com.android.server.MountService: com.android.server.MountService sSelf>;

        if r2 == null goto label6;

        $r5 = r0.<com.android.server.MountServiceIdler: java.lang.Runnable mFinishCallback>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        r0.<com.android.server.MountServiceIdler: boolean mStarted> = 1;

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        $r6 = r0.<com.android.server.MountServiceIdler: java.lang.Runnable mFinishCallback>;

        virtualinvoke r2.<com.android.server.MountService: void runIdleMaintenance(java.lang.Runnable)>($r6);

     label6:
        if r2 == null goto label7;

        $z0 = 1;

        goto label8;

     label7:
        $z0 = 0;

     label8:
        return $z0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean onStopJob(android.app.job.JobParameters)
    {
        com.android.server.MountServiceIdler r0;
        android.app.job.JobParameters r1;
        java.lang.Runnable r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.server.MountServiceIdler;

        r1 := @parameter0: android.app.job.JobParameters;

        $r4 = r0.<com.android.server.MountServiceIdler: java.lang.Runnable mFinishCallback>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        r0.<com.android.server.MountServiceIdler: boolean mStarted> = 0;

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return 0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void scheduleIdlePass(android.content.Context)
    {
        android.content.Context r0;
        android.app.job.JobScheduler r1;
        java.util.Calendar r2;
        long l0, $l1, $l2;
        android.app.job.JobInfo$Builder r3, $r5;
        java.lang.Object $r4;
        android.content.ComponentName $r6;
        int $i3;
        android.app.job.JobInfo $r10;

        r0 := @parameter0: android.content.Context;

        $r4 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("jobscheduler");

        r1 = (android.app.job.JobScheduler) $r4;

        r2 = staticinvoke <com.android.server.MountServiceIdler: java.util.Calendar tomorrowMidnight()>();

        $l1 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>();

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l0 = $l1 - $l2;

        $r5 = new android.app.job.JobInfo$Builder;

        $i3 = <com.android.server.MountServiceIdler: int MOUNT_JOB_ID>;

        $r6 = <com.android.server.MountServiceIdler: android.content.ComponentName sIdleService>;

        specialinvoke $r5.<android.app.job.JobInfo$Builder: void <init>(int,android.content.ComponentName)>($i3, $r6);

        r3 = $r5;

        virtualinvoke r3.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiresDeviceIdle(boolean)>(1);

        virtualinvoke r3.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setRequiresCharging(boolean)>(1);

        virtualinvoke r3.<android.app.job.JobInfo$Builder: android.app.job.JobInfo$Builder setMinimumLatency(long)>(l0);

        $r10 = virtualinvoke r3.<android.app.job.JobInfo$Builder: android.app.job.JobInfo build()>();

        virtualinvoke r1.<android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>($r10);

        return;
    }

    private static java.util.Calendar tomorrowMidnight()
    {
        java.util.Calendar r0;
        long $l0;

        r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r0.<java.util.Calendar: void setTimeInMillis(long)>($l0);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(10, 0);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(12, 0);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(13, 0);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(14, 0);

        virtualinvoke r0.<java.util.Calendar: void add(int,int)>(5, 1);

        return r0;
    }

    static java.lang.Runnable access$000(com.android.server.MountServiceIdler)
    {
        com.android.server.MountServiceIdler r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: com.android.server.MountServiceIdler;

        $r1 = r0.<com.android.server.MountServiceIdler: java.lang.Runnable mFinishCallback>;

        return $r1;
    }

    static boolean access$100(com.android.server.MountServiceIdler)
    {
        com.android.server.MountServiceIdler r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.MountServiceIdler;

        $z0 = r0.<com.android.server.MountServiceIdler: boolean mStarted>;

        return $z0;
    }

    static android.app.job.JobParameters access$200(com.android.server.MountServiceIdler)
    {
        com.android.server.MountServiceIdler r0;
        android.app.job.JobParameters $r1;

        r0 := @parameter0: com.android.server.MountServiceIdler;

        $r1 = r0.<com.android.server.MountServiceIdler: android.app.job.JobParameters mJobParams>;

        return $r1;
    }

    static boolean access$102(com.android.server.MountServiceIdler, boolean)
    {
        com.android.server.MountServiceIdler r0;
        boolean z0;

        r0 := @parameter0: com.android.server.MountServiceIdler;

        z0 := @parameter1: boolean;

        r0.<com.android.server.MountServiceIdler: boolean mStarted> = z0;

        return z0;
    }

    static void <clinit>()
    {
        android.content.ComponentName $r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        <com.android.server.MountServiceIdler: java.lang.String TAG> = "MountServiceIdler";

        $r0 = new android.content.ComponentName;

        $r1 = class "com/android/server/MountServiceIdler";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r0.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("android", $r2);

        <com.android.server.MountServiceIdler: android.content.ComponentName sIdleService> = $r0;

        <com.android.server.MountServiceIdler: int MOUNT_JOB_ID> = 808;

        return;
    }
}
