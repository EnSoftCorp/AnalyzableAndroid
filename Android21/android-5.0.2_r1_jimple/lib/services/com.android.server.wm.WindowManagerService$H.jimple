final class com.android.server.wm.WindowManagerService$H extends android.os.Handler
{
    public static final int REPORT_FOCUS_CHANGE;
    public static final int REPORT_LOSING_FOCUS;
    public static final int DO_TRAVERSAL;
    public static final int ADD_STARTING;
    public static final int REMOVE_STARTING;
    public static final int FINISHED_STARTING;
    public static final int REPORT_APPLICATION_TOKEN_WINDOWS;
    public static final int REPORT_APPLICATION_TOKEN_DRAWN;
    public static final int WINDOW_FREEZE_TIMEOUT;
    public static final int APP_TRANSITION_TIMEOUT;
    public static final int PERSIST_ANIMATION_SCALE;
    public static final int FORCE_GC;
    public static final int ENABLE_SCREEN;
    public static final int APP_FREEZE_TIMEOUT;
    public static final int SEND_NEW_CONFIGURATION;
    public static final int REPORT_WINDOWS_CHANGE;
    public static final int DRAG_START_TIMEOUT;
    public static final int DRAG_END_TIMEOUT;
    public static final int REPORT_HARD_KEYBOARD_STATUS_CHANGE;
    public static final int BOOT_TIMEOUT;
    public static final int WAITING_FOR_DRAWN_TIMEOUT;
    public static final int SHOW_STRICT_MODE_VIOLATION;
    public static final int DO_ANIMATION_CALLBACK;
    public static final int DO_DISPLAY_ADDED;
    public static final int DO_DISPLAY_REMOVED;
    public static final int DO_DISPLAY_CHANGED;
    public static final int CLIENT_FREEZE_TIMEOUT;
    public static final int TAP_OUTSIDE_STACK;
    public static final int NOTIFY_ACTIVITY_DRAWN;
    public static final int ALL_WINDOWS_DRAWN;
    public static final int NEW_ANIMATOR_SCALE;
    public static final int SHOW_CIRCULAR_DISPLAY_MASK;
    public static final int SHOW_EMULATOR_DISPLAY_OVERLAY;
    public static final int CHECK_IF_BOOT_ANIMATION_FINISHED;
    final com.android.server.wm.WindowManagerService this$0;

    void <init>(com.android.server.wm.WindowManagerService)
    {
        com.android.server.wm.WindowManagerService$H r0;
        com.android.server.wm.WindowManagerService r1;

        r0 := @this: com.android.server.wm.WindowManagerService$H;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>()>();

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.wm.WindowManagerService$H r0;
        android.os.Message r1;
        com.android.server.wm.WindowState r2, r3, $r186, $r201, $r223, $r240, r283;
        java.util.HashMap r4, $r28, $r37, $r48, $r62, $r66, $r73, $r78, $r85, $r88, $r111, $r117, $r119, $r133, $r139, $r157, $r169, $r187, $r196, $r207, $r209, $r222, r260, r262, r267, r272, r274, r281, r284, r285, r286, r291, r292, r294, r296, r297, r299, r300, r301, r302, r306, r307;
        java.lang.Throwable r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, $r228, $r229, $r230, $r231, $r232, $r236, $r237, $r238, $r239, $r242, $r243, $r246, $r249, $r250, $r251, $r253, $r254, $r255, $r256, $r257, $r258;
        com.android.server.wm.WindowManagerService $r26, $r27, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r38, $r39, $r40, $r41, $r42, $r43, $r47, $r53, $r54, $r58, $r63, $r64, $r67, $r69, $r70, $r72, $r74, $r75, $r76, $r77, $r79, $r80, $r83, $r84, $r89, $r90, $r91, $r93, $r97, $r100, $r102, $r103, $r105, $r106, $r107, $r108, $r110, $r112, $r114, $r115, $r116, $r118, $r120, $r122, $r124, $r126, $r130, $r131, $r132, $r134, $r138, $r140, $r141, $r148, $r149, $r152, $r153, $r155, $r156, $r158, $r161, $r163, $r164, $r167, $r168, $r170, $r171, $r173, $r175, $r183, $r185, $r188, $r192, $r193, $r197, $r198, $r199, $r204, $r206, $r208, $r210, $r212, $r213, $r215, $r221, $r224;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33, i34;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, z14, z15, z16;
        java.util.ArrayList $r36, $r44, $r92, $r96, $r200, $r202, $r211, r261, r288, r305;
        java.lang.Object $r45, $r50, $r56, $r59, $r68, $r81, $r104, $r109, $r128, $r142, $r143, $r166, $r176, $r177, $r189, $r190, $r203, $r214;
        android.util.ArraySet $r46, $r55;
        android.view.IWindowSessionCallback $r49, $r51, $r52;
        com.android.server.wm.Session $r57, r304;
        android.os.IBinder $r60, $r219, $r225, r270, r277, r293, r295;
        android.app.IActivityManager $r61, $r71;
        com.android.server.wm.DisplayContent $r65;
        android.os.IRemoteCallback $r82;
        java.lang.StringBuilder $r86, $r87, $r95, $r136, $r137, $r145, $r180, $r181, $r182;
        java.lang.String $r94, $r135, $r179, $r218;
        com.android.server.wm.DragState $r98, $r99, $r101, $r113, $r121, $r123;
        com.android.server.wm.InputMonitor $r125;
        android.util.SparseArray $r127, $r129;
        com.android.server.wm.Task $r144;
        com.android.server.wm.AppWindowAnimator $r146;
        android.content.Context $r147, $r159, $r165;
        android.content.ContentResolver $r150, $r160, $r162;
        java.lang.Runtime $r151;
        com.android.server.wm.WindowAnimator $r154;
        float $f0, $f1, $f2, f3;
        com.android.server.wm.AppTransition $r172, $r174;
        android.view.IApplicationToken $r178, $r194, $r195;
        long $l13, $l15, $l16;
        android.view.WindowManagerPolicy $r184, $r191, $r220, $r226;
        com.android.server.wm.StartingData $r205, r264;
        java.lang.CharSequence $r216;
        android.content.res.CompatibilityInfo $r217;
        java.lang.Exception $r227, $r241, $r245, $r252, r266, r268, r273, r278;
        android.os.RemoteException $r233, $r234, $r235, $r244, $r247, $r248, $r259;
        com.android.server.wm.AppWindowToken r263, r269, r275, r279, r280, r290;
        android.view.View r265, r271, r276;
        com.android.server.wm.WindowList r282;
        com.android.server.wm.TaskStack r287;
        com.android.server.wm.AppTokenList r289;
        java.lang.Runnable r298, r303;

        r0 := @this: com.android.server.wm.WindowManagerService$H;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        tableswitch($i0)
        {
            case 2: goto label001;
            case 3: goto label012;
            case 4: goto label020;
            case 5: goto label026;
            case 6: goto label044;
            case 7: goto label055;
            case 8: goto label073;
            case 9: goto label068;
            case 10: goto label221;
            case 11: goto label081;
            case 12: goto label221;
            case 13: goto label090;
            case 14: goto label097;
            case 15: goto label098;
            case 16: goto label109;
            case 17: goto label110;
            case 18: goto label130;
            case 19: goto label131;
            case 20: goto label137;
            case 21: goto label144;
            case 22: goto label151;
            case 23: goto label152;
            case 24: goto label153;
            case 25: goto label159;
            case 26: goto label162;
            case 27: goto label165;
            case 28: goto label166;
            case 29: goto label172;
            case 30: goto label123;
            case 31: goto label178;
            case 32: goto label188;
            case 33: goto label191;
            case 34: goto label197;
            case 35: goto label160;
            case 36: goto label161;
            case 37: goto label215;
            default: goto label221;
        };

     label001:
        $r26 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r28 = $r26.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r4 = $r28;

        entermonitor $r28;

     label002:
        $r27 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r2 = $r27.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowState mLastFocus>;

        $r30 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r3 = $r30.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowState mCurrentFocus>;

        if r2 != r3 goto label004;

        exitmonitor r4;

     label003:
        return;

     label004:
        $r29 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r29.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowState mLastFocus> = r3;

        if r3 == null goto label005;

        if r2 == null goto label005;

        $z1 = virtualinvoke r3.<com.android.server.wm.WindowState: boolean isDisplayedLw()>();

        if $z1 != 0 goto label005;

        $r33 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r36 = $r33.<com.android.server.wm.WindowManagerService: java.util.ArrayList mLosingFocus>;

        virtualinvoke $r36.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        r2 = null;

     label005:
        exitmonitor r4;

     label006:
        goto label009;

     label007:
        $r253 := @caughtexception;

        r5 = $r253;

        exitmonitor r4;

     label008:
        throw r5;

     label009:
        if r3 == null goto label010;

        $r31 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $z2 = $r31.<com.android.server.wm.WindowManagerService: boolean mInTouchMode>;

        virtualinvoke r3.<com.android.server.wm.WindowState: void reportFocusChangedSerialized(boolean,boolean)>(1, $z2);

        $r34 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        staticinvoke <com.android.server.wm.WindowManagerService: void access$300(com.android.server.wm.WindowManagerService)>($r34);

     label010:
        if r2 == null goto label011;

        $r32 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $z0 = $r32.<com.android.server.wm.WindowManagerService: boolean mInTouchMode>;

        virtualinvoke r2.<com.android.server.wm.WindowState: void reportFocusChangedSerialized(boolean,boolean)>(0, $z0);

     label011:
        goto label221;

     label012:
        $r210 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r209 = $r210.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r260 = $r209;

        entermonitor $r209;

     label013:
        $r212 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r261 = $r212.<com.android.server.wm.WindowManagerService: java.util.ArrayList mLosingFocus>;

        $r213 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r211 = new java.util.ArrayList;

        specialinvoke $r211.<java.util.ArrayList: void <init>()>();

        $r213.<com.android.server.wm.WindowManagerService: java.util.ArrayList mLosingFocus> = $r211;

        exitmonitor r260;

     label014:
        goto label017;

     label015:
        $r232 := @caughtexception;

        r6 = $r232;

        exitmonitor r260;

     label016:
        throw r6;

     label017:
        i24 = virtualinvoke r261.<java.util.ArrayList: int size()>();

        i25 = 0;

     label018:
        if i25 >= i24 goto label019;

        $r214 = virtualinvoke r261.<java.util.ArrayList: java.lang.Object get(int)>(i25);

        $r240 = (com.android.server.wm.WindowState) $r214;

        $r215 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $z12 = $r215.<com.android.server.wm.WindowManagerService: boolean mInTouchMode>;

        virtualinvoke $r240.<com.android.server.wm.WindowState: void reportFocusChangedSerialized(boolean,boolean)>(0, $z12);

        i25 = i25 + 1;

        goto label018;

     label019:
        goto label221;

     label020:
        $r204 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r207 = $r204.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r262 = $r207;

        entermonitor $r207;

     label021:
        $r206 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r206.<com.android.server.wm.WindowManagerService: boolean mTraversalScheduled> = 0;

        $r208 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        staticinvoke <com.android.server.wm.WindowManagerService: void access$400(com.android.server.wm.WindowManagerService)>($r208);

        exitmonitor r262;

     label022:
        goto label025;

     label023:
        $r228 := @caughtexception;

        r7 = $r228;

        exitmonitor r262;

     label024:
        throw r7;

     label025:
        goto label221;

     label026:
        $r190 = r1.<android.os.Message: java.lang.Object obj>;

        r263 = (com.android.server.wm.AppWindowToken) $r190;

        r264 = r263.<com.android.server.wm.AppWindowToken: com.android.server.wm.StartingData startingData>;

        if r264 != null goto label027;

        return;

     label027:
        r265 = null;

     label028:
        $r193 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r220 = $r193.<com.android.server.wm.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        $r219 = r263.<com.android.server.wm.AppWindowToken: android.os.IBinder token>;

        $r218 = r264.<com.android.server.wm.StartingData: java.lang.String pkg>;

        $i23 = r264.<com.android.server.wm.StartingData: int theme>;

        $r217 = r264.<com.android.server.wm.StartingData: android.content.res.CompatibilityInfo compatInfo>;

        $r216 = r264.<com.android.server.wm.StartingData: java.lang.CharSequence nonLocalizedLabel>;

        $i22 = r264.<com.android.server.wm.StartingData: int labelRes>;

        $i17 = r264.<com.android.server.wm.StartingData: int icon>;

        $i18 = r264.<com.android.server.wm.StartingData: int logo>;

        $i19 = r264.<com.android.server.wm.StartingData: int windowFlags>;

        r265 = interfaceinvoke $r220.<android.view.WindowManagerPolicy: android.view.View addStartingWindow(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int,int)>($r219, $r218, $i23, $r217, $r216, $i22, $i17, $i18, $i19);

     label029:
        goto label031;

     label030:
        $r241 := @caughtexception;

        r266 = $r241;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Exception when adding starting window", r266);

     label031:
        if r265 == null goto label043;

        z14 = 0;

        $r221 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r222 = $r221.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r267 = $r222;

        entermonitor $r222;

     label032:
        $z13 = r263.<com.android.server.wm.AppWindowToken: boolean removed>;

        if $z13 != 0 goto label033;

        $r205 = r263.<com.android.server.wm.AppWindowToken: com.android.server.wm.StartingData startingData>;

        if $r205 != null goto label034;

     label033:
        $r223 = r263.<com.android.server.wm.AppWindowToken: com.android.server.wm.WindowState startingWindow>;

        if $r223 == null goto label035;

        r263.<com.android.server.wm.AppWindowToken: com.android.server.wm.WindowState startingWindow> = null;

        r263.<com.android.server.wm.AppWindowToken: com.android.server.wm.StartingData startingData> = null;

        z14 = 1;

        goto label035;

     label034:
        r263.<com.android.server.wm.AppWindowToken: android.view.View startingView> = r265;

     label035:
        exitmonitor r267;

     label036:
        goto label039;

     label037:
        $r255 := @caughtexception;

        r8 = $r255;

        exitmonitor r267;

     label038:
        throw r8;

     label039:
        if z14 == 0 goto label043;

     label040:
        $r224 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r226 = $r224.<com.android.server.wm.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        $r225 = r263.<com.android.server.wm.AppWindowToken: android.os.IBinder token>;

        interfaceinvoke $r226.<android.view.WindowManagerPolicy: void removeStartingWindow(android.os.IBinder,android.view.View)>($r225, r265);

     label041:
        goto label043;

     label042:
        $r227 := @caughtexception;

        r268 = $r227;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Exception when removing starting window", r268);

     label043:
        goto label221;

     label044:
        $r189 = r1.<android.os.Message: java.lang.Object obj>;

        r269 = (com.android.server.wm.AppWindowToken) $r189;

        r270 = null;

        r271 = null;

        $r188 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r187 = $r188.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r272 = $r187;

        entermonitor $r187;

     label045:
        $r186 = r269.<com.android.server.wm.AppWindowToken: com.android.server.wm.WindowState startingWindow>;

        if $r186 == null goto label046;

        r271 = r269.<com.android.server.wm.AppWindowToken: android.view.View startingView>;

        r270 = r269.<com.android.server.wm.AppWindowToken: android.os.IBinder token>;

        r269.<com.android.server.wm.AppWindowToken: com.android.server.wm.StartingData startingData> = null;

        r269.<com.android.server.wm.AppWindowToken: android.view.View startingView> = null;

        r269.<com.android.server.wm.AppWindowToken: com.android.server.wm.WindowState startingWindow> = null;

        r269.<com.android.server.wm.AppWindowToken: boolean startingDisplayed> = 0;

     label046:
        exitmonitor r272;

     label047:
        goto label050;

     label048:
        $r238 := @caughtexception;

        r9 = $r238;

        exitmonitor r272;

     label049:
        throw r9;

     label050:
        if r271 == null goto label054;

     label051:
        $r192 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r191 = $r192.<com.android.server.wm.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        interfaceinvoke $r191.<android.view.WindowManagerPolicy: void removeStartingWindow(android.os.IBinder,android.view.View)>(r270, r271);

     label052:
        goto label054;

     label053:
        $r245 := @caughtexception;

        r273 = $r245;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Exception when removing starting window", r273);

     label054:
        goto label221;

     label055:
        $r198 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r196 = $r198.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r274 = $r196;

        entermonitor $r196;

     label056:
        $r197 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r200 = $r197.<com.android.server.wm.WindowManagerService: java.util.ArrayList mFinishedStarting>;

        i26 = virtualinvoke $r200.<java.util.ArrayList: int size()>();

        if i26 > 0 goto label058;

        exitmonitor r274;

     label057:
        goto label067;

     label058:
        $r199 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r202 = $r199.<com.android.server.wm.WindowManagerService: java.util.ArrayList mFinishedStarting>;

        $i21 = i26 - 1;

        $r203 = virtualinvoke $r202.<java.util.ArrayList: java.lang.Object remove(int)>($i21);

        r275 = (com.android.server.wm.AppWindowToken) $r203;

        $r201 = r275.<com.android.server.wm.AppWindowToken: com.android.server.wm.WindowState startingWindow>;

        if $r201 != null goto label060;

        exitmonitor r274;

     label059:
        goto label055;

     label060:
        r276 = r275.<com.android.server.wm.AppWindowToken: android.view.View startingView>;

        r277 = r275.<com.android.server.wm.AppWindowToken: android.os.IBinder token>;

        r275.<com.android.server.wm.AppWindowToken: com.android.server.wm.StartingData startingData> = null;

        r275.<com.android.server.wm.AppWindowToken: android.view.View startingView> = null;

        r275.<com.android.server.wm.AppWindowToken: com.android.server.wm.WindowState startingWindow> = null;

        r275.<com.android.server.wm.AppWindowToken: boolean startingDisplayed> = 0;

        exitmonitor r274;

     label061:
        goto label064;

     label062:
        $r237 := @caughtexception;

        r10 = $r237;

        exitmonitor r274;

     label063:
        throw r10;

     label064:
        $r185 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r184 = $r185.<com.android.server.wm.WindowManagerService: android.view.WindowManagerPolicy mPolicy>;

        interfaceinvoke $r184.<android.view.WindowManagerPolicy: void removeStartingWindow(android.os.IBinder,android.view.View)>(r277, r276);

     label065:
        goto label055;

     label066:
        $r252 := @caughtexception;

        r278 = $r252;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", "Exception when removing starting window", r278);

        goto label055;

     label067:
        goto label221;

     label068:
        $r177 = r1.<android.os.Message: java.lang.Object obj>;

        r279 = (com.android.server.wm.AppWindowToken) $r177;

     label069:
        $r178 = r279.<com.android.server.wm.AppWindowToken: android.view.IApplicationToken appToken>;

        interfaceinvoke $r178.<android.view.IApplicationToken: void windowsDrawn()>();

     label070:
        goto label072;

     label071:
        $r248 := @caughtexception;

     label072:
        goto label221;

     label073:
        $r176 = r1.<android.os.Message: java.lang.Object obj>;

        r280 = (com.android.server.wm.AppWindowToken) $r176;

        $i12 = r1.<android.os.Message: int arg1>;

        if $i12 == 0 goto label074;

        $z11 = 1;

        goto label075;

     label074:
        $z11 = 0;

     label075:
        z15 = $z11;

        $i20 = r1.<android.os.Message: int arg2>;

        if $i20 == 0 goto label076;

        goto label076;

     label076:
        if z15 == 0 goto label077;

        $r194 = r280.<com.android.server.wm.AppWindowToken: android.view.IApplicationToken appToken>;

        interfaceinvoke $r194.<android.view.IApplicationToken: void windowsVisible()>();

        goto label078;

     label077:
        $r195 = r280.<com.android.server.wm.AppWindowToken: android.view.IApplicationToken appToken>;

        interfaceinvoke $r195.<android.view.IApplicationToken: void windowsGone()>();

     label078:
        goto label080;

     label079:
        $r259 := @caughtexception;

     label080:
        goto label221;

     label081:
        $r170 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r169 = $r170.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r281 = $r169;

        entermonitor $r169;

     label082:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", "Window freeze timeout expired.");

        $r168 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r282 = virtualinvoke $r168.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowList getDefaultWindowListLocked()>();

        i27 = virtualinvoke r282.<com.android.server.wm.WindowList: int size()>();

     label083:
        if i27 <= 0 goto label085;

        i27 = i27 + -1;

        $r166 = virtualinvoke r282.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i27);

        r283 = (com.android.server.wm.WindowState) $r166;

        $z10 = r283.<com.android.server.wm.WindowState: boolean mOrientationChanging>;

        if $z10 == 0 goto label084;

        r283.<com.android.server.wm.WindowState: boolean mOrientationChanging> = 0;

        $l16 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r183 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $l15 = $r183.<com.android.server.wm.WindowManagerService: long mDisplayFreezeTime>;

        $l13 = $l16 - $l15;

        $i14 = (int) $l13;

        r283.<com.android.server.wm.WindowState: int mLastFreezeDuration> = $i14;

        $r182 = new java.lang.StringBuilder;

        specialinvoke $r182.<java.lang.StringBuilder: void <init>()>();

        $r180 = virtualinvoke $r182.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Force clearing orientation change: ");

        $r181 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r283);

        $r179 = virtualinvoke $r181.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r179);

     label084:
        goto label083;

     label085:
        $r167 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        staticinvoke <com.android.server.wm.WindowManagerService: void access$400(com.android.server.wm.WindowManagerService)>($r167);

        exitmonitor r281;

     label086:
        goto label089;

     label087:
        $r229 := @caughtexception;

        r11 = $r229;

        exitmonitor r281;

     label088:
        throw r11;

     label089:
        goto label221;

     label090:
        $r156 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r157 = $r156.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r284 = $r157;

        entermonitor $r157;

     label091:
        $r175 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r174 = $r175.<com.android.server.wm.WindowManagerService: com.android.server.wm.AppTransition mAppTransition>;

        $z9 = virtualinvoke $r174.<com.android.server.wm.AppTransition: boolean isTransitionSet()>();

        if $z9 == 0 goto label092;

        $r173 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r172 = $r173.<com.android.server.wm.WindowManagerService: com.android.server.wm.AppTransition mAppTransition>;

        virtualinvoke $r172.<com.android.server.wm.AppTransition: void setTimeout()>();

        $r171 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        staticinvoke <com.android.server.wm.WindowManagerService: void access$400(com.android.server.wm.WindowManagerService)>($r171);

     label092:
        exitmonitor r284;

     label093:
        goto label096;

     label094:
        $r230 := @caughtexception;

        r12 = $r230;

        exitmonitor r284;

     label095:
        throw r12;

     label096:
        goto label221;

     label097:
        $r148 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r147 = $r148.<com.android.server.wm.WindowManagerService: android.content.Context mContext>;

        $r150 = virtualinvoke $r147.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r149 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $f2 = $r149.<com.android.server.wm.WindowManagerService: float mWindowAnimationScaleSetting>;

        staticinvoke <android.provider.Settings$Global: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>($r150, "window_animation_scale", $f2);

        $r164 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r165 = $r164.<com.android.server.wm.WindowManagerService: android.content.Context mContext>;

        $r162 = virtualinvoke $r165.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r163 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $f1 = $r163.<com.android.server.wm.WindowManagerService: float mTransitionAnimationScaleSetting>;

        staticinvoke <android.provider.Settings$Global: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>($r162, "transition_animation_scale", $f1);

        $r158 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r159 = $r158.<com.android.server.wm.WindowManagerService: android.content.Context mContext>;

        $r160 = virtualinvoke $r159.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r161 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $f0 = $r161.<com.android.server.wm.WindowManagerService: float mAnimatorDurationScaleSetting>;

        staticinvoke <android.provider.Settings$Global: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>($r160, "animator_duration_scale", $f0);

        goto label221;

     label098:
        $r138 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r139 = $r138.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r285 = $r139;

        entermonitor $r139;

     label099:
        $r155 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r154 = $r155.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowAnimator mAnimator>;

        $z8 = $r154.<com.android.server.wm.WindowAnimator: boolean mAnimating>;

        if $z8 != 0 goto label100;

        $r152 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $z7 = $r152.<com.android.server.wm.WindowManagerService: boolean mAnimationScheduled>;

        if $z7 == 0 goto label102;

     label100:
        virtualinvoke r0.<com.android.server.wm.WindowManagerService$H: boolean sendEmptyMessageDelayed(int,long)>(15, 2000L);

        exitmonitor r285;

     label101:
        return;

     label102:
        $r153 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $z6 = $r153.<com.android.server.wm.WindowManagerService: boolean mDisplayFrozen>;

        if $z6 == 0 goto label104;

        exitmonitor r285;

     label103:
        return;

     label104:
        exitmonitor r285;

     label105:
        goto label108;

     label106:
        $r258 := @caughtexception;

        r13 = $r258;

        exitmonitor r285;

     label107:
        throw r13;

     label108:
        $r151 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r151.<java.lang.Runtime: void gc()>();

        goto label221;

     label109:
        $r141 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        virtualinvoke $r141.<com.android.server.wm.WindowManagerService: void performEnableScreen()>();

        goto label221;

     label110:
        $r134 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r133 = $r134.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r286 = $r133;

        entermonitor $r133;

     label111:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", "App freeze timeout expired.");

        $r132 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r127 = $r132.<com.android.server.wm.WindowManagerService: android.util.SparseArray mStackIdToStack>;

        i28 = virtualinvoke $r127.<android.util.SparseArray: int size()>();

        i29 = 0;

     label112:
        if i29 >= i28 goto label118;

        $r126 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r129 = $r126.<com.android.server.wm.WindowManagerService: android.util.SparseArray mStackIdToStack>;

        $r128 = virtualinvoke $r129.<android.util.SparseArray: java.lang.Object valueAt(int)>(i29);

        r287 = (com.android.server.wm.TaskStack) $r128;

        r288 = virtualinvoke r287.<com.android.server.wm.TaskStack: java.util.ArrayList getTasks()>();

        $i10 = virtualinvoke r288.<java.util.ArrayList: int size()>();

        i30 = $i10 - 1;

     label113:
        if i30 < 0 goto label117;

        $r143 = virtualinvoke r288.<java.util.ArrayList: java.lang.Object get(int)>(i30);

        $r144 = (com.android.server.wm.Task) $r143;

        r289 = $r144.<com.android.server.wm.Task: com.android.server.wm.AppTokenList mAppTokens>;

        $i11 = virtualinvoke r289.<com.android.server.wm.AppTokenList: int size()>();

        i31 = $i11 - 1;

     label114:
        if i31 < 0 goto label116;

        $r142 = virtualinvoke r289.<com.android.server.wm.AppTokenList: java.lang.Object get(int)>(i31);

        r290 = (com.android.server.wm.AppWindowToken) $r142;

        $r146 = r290.<com.android.server.wm.AppWindowToken: com.android.server.wm.AppWindowAnimator mAppAnimator>;

        $z5 = $r146.<com.android.server.wm.AppWindowAnimator: boolean freezingScreen>;

        if $z5 == 0 goto label115;

        $r145 = new java.lang.StringBuilder;

        specialinvoke $r145.<java.lang.StringBuilder: void <init>()>();

        $r136 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Force clearing freeze: ");

        $r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r290);

        $r135 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r135);

        $r140 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        virtualinvoke $r140.<com.android.server.wm.WindowManagerService: void unsetAppFreezingScreenLocked(com.android.server.wm.AppWindowToken,boolean,boolean)>(r290, 1, 1);

     label115:
        i31 = i31 + -1;

        goto label114;

     label116:
        i30 = i30 + -1;

        goto label113;

     label117:
        i29 = i29 + 1;

        goto label112;

     label118:
        exitmonitor r286;

     label119:
        goto label122;

     label120:
        $r257 := @caughtexception;

        r14 = $r257;

        exitmonitor r286;

     label121:
        throw r14;

     label122:
        goto label221;

     label123:
        $r74 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r73 = $r74.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r291 = $r73;

        entermonitor $r73;

     label124:
        $r69 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $z3 = $r69.<com.android.server.wm.WindowManagerService: boolean mClientFreezingScreen>;

        if $z3 == 0 goto label125;

        $r70 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r70.<com.android.server.wm.WindowManagerService: boolean mClientFreezingScreen> = 0;

        $r79 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r79.<com.android.server.wm.WindowManagerService: java.lang.Object mLastFinishedFreezeSource> = "client-timeout";

        $r80 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        staticinvoke <com.android.server.wm.WindowManagerService: void access$500(com.android.server.wm.WindowManagerService)>($r80);

     label125:
        exitmonitor r291;

     label126:
        goto label129;

     label127:
        $r236 := @caughtexception;

        r15 = $r236;

        exitmonitor r291;

     label128:
        throw r15;

     label129:
        goto label221;

     label130:
        virtualinvoke r0.<com.android.server.wm.WindowManagerService$H: void removeMessages(int)>(18);

        $r130 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        virtualinvoke $r130.<com.android.server.wm.WindowManagerService: void sendNewConfiguration()>();

        goto label221;

     label131:
        $r115 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $z4 = staticinvoke <com.android.server.wm.WindowManagerService: boolean access$600(com.android.server.wm.WindowManagerService)>($r115);

        if $z4 == 0 goto label221;

        $r116 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r117 = $r116.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r292 = $r117;

        entermonitor $r117;

     label132:
        $r118 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        staticinvoke <com.android.server.wm.WindowManagerService: boolean access$602(com.android.server.wm.WindowManagerService,boolean)>($r118, 0);

        exitmonitor r292;

     label133:
        goto label136;

     label134:
        $r239 := @caughtexception;

        r17 = $r239;

        exitmonitor r292;

     label135:
        throw r17;

     label136:
        $r131 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        staticinvoke <com.android.server.wm.WindowManagerService: void access$700(com.android.server.wm.WindowManagerService)>($r131);

        goto label221;

     label137:
        $r104 = r1.<android.os.Message: java.lang.Object obj>;

        r293 = (android.os.IBinder) $r104;

        $r103 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r119 = $r103.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r294 = $r119;

        entermonitor $r119;

     label138:
        $r120 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r121 = $r120.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        if $r121 == null goto label139;

        $r122 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r123 = $r122.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        virtualinvoke $r123.<com.android.server.wm.DragState: void unregister()>();

        $r124 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r125 = $r124.<com.android.server.wm.WindowManagerService: com.android.server.wm.InputMonitor mInputMonitor>;

        virtualinvoke $r125.<com.android.server.wm.InputMonitor: void updateInputWindowsLw(boolean)>(1);

        $r112 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r113 = $r112.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        virtualinvoke $r113.<com.android.server.wm.DragState: void reset()>();

        $r114 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r114.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState> = null;

     label139:
        exitmonitor r294;

     label140:
        goto label143;

     label141:
        $r251 := @caughtexception;

        r16 = $r251;

        exitmonitor r294;

     label142:
        throw r16;

     label143:
        goto label221;

     label144:
        $r109 = r1.<android.os.Message: java.lang.Object obj>;

        r295 = (android.os.IBinder) $r109;

        $r108 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r111 = $r108.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r296 = $r111;

        entermonitor $r111;

     label145:
        $r110 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r98 = $r110.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        if $r98 == null goto label146;

        $r100 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r99 = $r100.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        $r99.<com.android.server.wm.DragState: boolean mDragResult> = 0;

        $r102 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r101 = $r102.<com.android.server.wm.WindowManagerService: com.android.server.wm.DragState mDragState>;

        virtualinvoke $r101.<com.android.server.wm.DragState: void endDragLw()>();

     label146:
        exitmonitor r296;

     label147:
        goto label150;

     label148:
        $r250 := @caughtexception;

        r19 = $r250;

        exitmonitor r296;

     label149:
        throw r19;

     label150:
        goto label221;

     label151:
        $r106 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        virtualinvoke $r106.<com.android.server.wm.WindowManagerService: void notifyHardKeyboardStatusChange()>();

        goto label221;

     label152:
        $r107 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        virtualinvoke $r107.<com.android.server.wm.WindowManagerService: void performBootTimeout()>();

        goto label221;

     label153:
        $r89 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r88 = $r89.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r297 = $r88;

        entermonitor $r88;

     label154:
        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r86 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timeout waiting for drawn: undrawn=");

        $r97 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r96 = $r97.<com.android.server.wm.WindowManagerService: java.util.ArrayList mWaitingForDrawn>;

        $r95 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r96);

        $r94 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r94);

        $r93 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r92 = $r93.<com.android.server.wm.WindowManagerService: java.util.ArrayList mWaitingForDrawn>;

        virtualinvoke $r92.<java.util.ArrayList: void clear()>();

        $r91 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r298 = $r91.<com.android.server.wm.WindowManagerService: java.lang.Runnable mWaitingForDrawnCallback>;

        $r105 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r105.<com.android.server.wm.WindowManagerService: java.lang.Runnable mWaitingForDrawnCallback> = null;

        exitmonitor r297;

     label155:
        goto label158;

     label156:
        $r256 := @caughtexception;

        r18 = $r256;

        exitmonitor r297;

     label157:
        throw r18;

     label158:
        if r298 == null goto label221;

        interfaceinvoke r298.<java.lang.Runnable: void run()>();

        goto label221;

     label159:
        $r90 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $i8 = r1.<android.os.Message: int arg1>;

        $i9 = r1.<android.os.Message: int arg2>;

        staticinvoke <com.android.server.wm.WindowManagerService: void access$800(com.android.server.wm.WindowManagerService,int,int)>($r90, $i8, $i9);

        goto label221;

     label160:
        $r40 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        virtualinvoke $r40.<com.android.server.wm.WindowManagerService: void showCircularMask()>();

        goto label221;

     label161:
        $r41 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        virtualinvoke $r41.<com.android.server.wm.WindowManagerService: void showEmulatorDisplayOverlay()>();

        goto label221;

     label162:
        $r81 = r1.<android.os.Message: java.lang.Object obj>;

        $r82 = (android.os.IRemoteCallback) $r81;

        interfaceinvoke $r82.<android.os.IRemoteCallback: void sendResult(android.os.Bundle)>(null);

     label163:
        goto label221;

     label164:
        $r247 := @caughtexception;

        goto label221;

     label165:
        $r83 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $i6 = r1.<android.os.Message: int arg1>;

        virtualinvoke $r83.<com.android.server.wm.WindowManagerService: void handleDisplayAdded(int)>($i6);

        goto label221;

     label166:
        $r75 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r85 = $r75.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r299 = $r85;

        entermonitor $r85;

     label167:
        $r84 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $i7 = r1.<android.os.Message: int arg1>;

        staticinvoke <com.android.server.wm.WindowManagerService: void access$900(com.android.server.wm.WindowManagerService,int)>($r84, $i7);

        exitmonitor r299;

     label168:
        goto label171;

     label169:
        $r254 := @caughtexception;

        r21 = $r254;

        exitmonitor r299;

     label170:
        throw r21;

     label171:
        goto label221;

     label172:
        $r77 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r78 = $r77.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r300 = $r78;

        entermonitor $r78;

     label173:
        $r76 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $i5 = r1.<android.os.Message: int arg1>;

        staticinvoke <com.android.server.wm.WindowManagerService: void access$1000(com.android.server.wm.WindowManagerService,int)>($r76, $i5);

        exitmonitor r300;

     label174:
        goto label177;

     label175:
        $r242 := @caughtexception;

        r20 = $r242;

        exitmonitor r300;

     label176:
        throw r20;

     label177:
        goto label221;

     label178:
        $r67 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r66 = $r67.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r301 = $r66;

        entermonitor $r66;

     label179:
        $r68 = r1.<android.os.Message: java.lang.Object obj>;

        $r65 = (com.android.server.wm.DisplayContent) $r68;

        $i3 = r1.<android.os.Message: int arg1>;

        $i4 = r1.<android.os.Message: int arg2>;

        i32 = virtualinvoke $r65.<com.android.server.wm.DisplayContent: int stackIdFromPoint(int,int)>($i3, $i4);

        exitmonitor r301;

     label180:
        goto label183;

     label181:
        $r231 := @caughtexception;

        r23 = $r231;

        exitmonitor r301;

     label182:
        throw r23;

     label183:
        if i32 < 0 goto label187;

     label184:
        $r72 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r71 = $r72.<com.android.server.wm.WindowManagerService: android.app.IActivityManager mActivityManager>;

        interfaceinvoke $r71.<android.app.IActivityManager: void setFocusedStack(int)>(i32);

     label185:
        goto label187;

     label186:
        $r234 := @caughtexception;

     label187:
        goto label221;

     label188:
        $r58 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r61 = $r58.<com.android.server.wm.WindowManagerService: android.app.IActivityManager mActivityManager>;

        $r59 = r1.<android.os.Message: java.lang.Object obj>;

        $r60 = (android.os.IBinder) $r59;

        interfaceinvoke $r61.<android.app.IActivityManager: void notifyActivityDrawn(android.os.IBinder)>($r60);

     label189:
        goto label221;

     label190:
        $r235 := @caughtexception;

        goto label221;

     label191:
        $r53 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r62 = $r53.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r302 = $r62;

        entermonitor $r62;

     label192:
        $r63 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r303 = $r63.<com.android.server.wm.WindowManagerService: java.lang.Runnable mWaitingForDrawnCallback>;

        $r64 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r64.<com.android.server.wm.WindowManagerService: java.lang.Runnable mWaitingForDrawnCallback> = null;

        exitmonitor r302;

     label193:
        goto label196;

     label194:
        $r246 := @caughtexception;

        r22 = $r246;

        exitmonitor r302;

     label195:
        throw r22;

     label196:
        if r303 == null goto label197;

        interfaceinvoke r303.<java.lang.Runnable: void run()>();

     label197:
        $r39 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        f3 = virtualinvoke $r39.<com.android.server.wm.WindowManagerService: float getCurrentAnimatorScale()>();

        staticinvoke <android.animation.ValueAnimator: void setDurationScale(float)>(f3);

        $r45 = r1.<android.os.Message: java.lang.Object obj>;

        r304 = (com.android.server.wm.Session) $r45;

        if r304 == null goto label201;

     label198:
        $r52 = r304.<com.android.server.wm.Session: android.view.IWindowSessionCallback mCallback>;

        interfaceinvoke $r52.<android.view.IWindowSessionCallback: void onAnimatorScaleChanged(float)>(f3);

     label199:
        goto label214;

     label200:
        $r233 := @caughtexception;

        goto label214;

     label201:
        $r44 = new java.util.ArrayList;

        specialinvoke $r44.<java.util.ArrayList: void <init>()>();

        r305 = $r44;

        $r43 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r48 = $r43.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r306 = $r48;

        entermonitor $r48;

     label202:
        i33 = 0;

     label203:
        $r47 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r46 = $r47.<com.android.server.wm.WindowManagerService: android.util.ArraySet mSessions>;

        $i1 = virtualinvoke $r46.<android.util.ArraySet: int size()>();

        if i33 >= $i1 goto label204;

        $r54 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r55 = $r54.<com.android.server.wm.WindowManagerService: android.util.ArraySet mSessions>;

        $r56 = virtualinvoke $r55.<android.util.ArraySet: java.lang.Object valueAt(int)>(i33);

        $r57 = (com.android.server.wm.Session) $r56;

        $r51 = $r57.<com.android.server.wm.Session: android.view.IWindowSessionCallback mCallback>;

        virtualinvoke r305.<java.util.ArrayList: boolean add(java.lang.Object)>($r51);

        i33 = i33 + 1;

        goto label203;

     label204:
        exitmonitor r306;

     label205:
        goto label208;

     label206:
        $r249 := @caughtexception;

        r25 = $r249;

        exitmonitor r306;

     label207:
        throw r25;

     label208:
        i34 = 0;

     label209:
        $i2 = virtualinvoke r305.<java.util.ArrayList: int size()>();

        if i34 >= $i2 goto label214;

     label210:
        $r50 = virtualinvoke r305.<java.util.ArrayList: java.lang.Object get(int)>(i34);

        $r49 = (android.view.IWindowSessionCallback) $r50;

        interfaceinvoke $r49.<android.view.IWindowSessionCallback: void onAnimatorScaleChanged(float)>(f3);

     label211:
        goto label213;

     label212:
        $r244 := @caughtexception;

     label213:
        i34 = i34 + 1;

        goto label209;

     label214:
        goto label221;

     label215:
        $r35 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r37 = $r35.<com.android.server.wm.WindowManagerService: java.util.HashMap mWindowMap>;

        r307 = $r37;

        entermonitor $r37;

     label216:
        $r38 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        z16 = staticinvoke <com.android.server.wm.WindowManagerService: boolean access$1100(com.android.server.wm.WindowManagerService)>($r38);

        exitmonitor r307;

     label217:
        goto label220;

     label218:
        $r243 := @caughtexception;

        r24 = $r243;

        exitmonitor r307;

     label219:
        throw r24;

     label220:
        if z16 == 0 goto label221;

        $r42 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        virtualinvoke $r42.<com.android.server.wm.WindowManagerService: void performEnableScreen()>();

     label221:
        return;

        catch java.lang.Throwable from label002 to label003 with label007;
        catch java.lang.Throwable from label004 to label006 with label007;
        catch java.lang.Throwable from label007 to label008 with label007;
        catch java.lang.Throwable from label013 to label014 with label015;
        catch java.lang.Throwable from label015 to label016 with label015;
        catch java.lang.Throwable from label021 to label022 with label023;
        catch java.lang.Throwable from label023 to label024 with label023;
        catch java.lang.Exception from label028 to label029 with label030;
        catch java.lang.Throwable from label032 to label036 with label037;
        catch java.lang.Throwable from label037 to label038 with label037;
        catch java.lang.Exception from label040 to label041 with label042;
        catch java.lang.Throwable from label045 to label047 with label048;
        catch java.lang.Throwable from label048 to label049 with label048;
        catch java.lang.Exception from label051 to label052 with label053;
        catch java.lang.Throwable from label056 to label057 with label062;
        catch java.lang.Throwable from label058 to label059 with label062;
        catch java.lang.Throwable from label060 to label061 with label062;
        catch java.lang.Throwable from label062 to label063 with label062;
        catch java.lang.Exception from label064 to label065 with label066;
        catch android.os.RemoteException from label069 to label070 with label071;
        catch android.os.RemoteException from label076 to label078 with label079;
        catch java.lang.Throwable from label082 to label086 with label087;
        catch java.lang.Throwable from label087 to label088 with label087;
        catch java.lang.Throwable from label091 to label093 with label094;
        catch java.lang.Throwable from label094 to label095 with label094;
        catch java.lang.Throwable from label099 to label101 with label106;
        catch java.lang.Throwable from label102 to label103 with label106;
        catch java.lang.Throwable from label104 to label105 with label106;
        catch java.lang.Throwable from label106 to label107 with label106;
        catch java.lang.Throwable from label111 to label119 with label120;
        catch java.lang.Throwable from label120 to label121 with label120;
        catch java.lang.Throwable from label124 to label126 with label127;
        catch java.lang.Throwable from label127 to label128 with label127;
        catch java.lang.Throwable from label132 to label133 with label134;
        catch java.lang.Throwable from label134 to label135 with label134;
        catch java.lang.Throwable from label138 to label140 with label141;
        catch java.lang.Throwable from label141 to label142 with label141;
        catch java.lang.Throwable from label145 to label147 with label148;
        catch java.lang.Throwable from label148 to label149 with label148;
        catch java.lang.Throwable from label154 to label155 with label156;
        catch java.lang.Throwable from label156 to label157 with label156;
        catch android.os.RemoteException from label162 to label163 with label164;
        catch java.lang.Throwable from label167 to label168 with label169;
        catch java.lang.Throwable from label169 to label170 with label169;
        catch java.lang.Throwable from label173 to label174 with label175;
        catch java.lang.Throwable from label175 to label176 with label175;
        catch java.lang.Throwable from label179 to label180 with label181;
        catch java.lang.Throwable from label181 to label182 with label181;
        catch android.os.RemoteException from label184 to label185 with label186;
        catch android.os.RemoteException from label188 to label189 with label190;
        catch java.lang.Throwable from label192 to label193 with label194;
        catch java.lang.Throwable from label194 to label195 with label194;
        catch android.os.RemoteException from label198 to label199 with label200;
        catch java.lang.Throwable from label202 to label205 with label206;
        catch java.lang.Throwable from label206 to label207 with label206;
        catch android.os.RemoteException from label210 to label211 with label212;
        catch java.lang.Throwable from label216 to label217 with label218;
        catch java.lang.Throwable from label218 to label219 with label218;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.WindowManagerService$H: int CHECK_IF_BOOT_ANIMATION_FINISHED> = 37;

        <com.android.server.wm.WindowManagerService$H: int SHOW_EMULATOR_DISPLAY_OVERLAY> = 36;

        <com.android.server.wm.WindowManagerService$H: int SHOW_CIRCULAR_DISPLAY_MASK> = 35;

        <com.android.server.wm.WindowManagerService$H: int NEW_ANIMATOR_SCALE> = 34;

        <com.android.server.wm.WindowManagerService$H: int ALL_WINDOWS_DRAWN> = 33;

        <com.android.server.wm.WindowManagerService$H: int NOTIFY_ACTIVITY_DRAWN> = 32;

        <com.android.server.wm.WindowManagerService$H: int TAP_OUTSIDE_STACK> = 31;

        <com.android.server.wm.WindowManagerService$H: int CLIENT_FREEZE_TIMEOUT> = 30;

        <com.android.server.wm.WindowManagerService$H: int DO_DISPLAY_CHANGED> = 29;

        <com.android.server.wm.WindowManagerService$H: int DO_DISPLAY_REMOVED> = 28;

        <com.android.server.wm.WindowManagerService$H: int DO_DISPLAY_ADDED> = 27;

        <com.android.server.wm.WindowManagerService$H: int DO_ANIMATION_CALLBACK> = 26;

        <com.android.server.wm.WindowManagerService$H: int SHOW_STRICT_MODE_VIOLATION> = 25;

        <com.android.server.wm.WindowManagerService$H: int WAITING_FOR_DRAWN_TIMEOUT> = 24;

        <com.android.server.wm.WindowManagerService$H: int BOOT_TIMEOUT> = 23;

        <com.android.server.wm.WindowManagerService$H: int REPORT_HARD_KEYBOARD_STATUS_CHANGE> = 22;

        <com.android.server.wm.WindowManagerService$H: int DRAG_END_TIMEOUT> = 21;

        <com.android.server.wm.WindowManagerService$H: int DRAG_START_TIMEOUT> = 20;

        <com.android.server.wm.WindowManagerService$H: int REPORT_WINDOWS_CHANGE> = 19;

        <com.android.server.wm.WindowManagerService$H: int SEND_NEW_CONFIGURATION> = 18;

        <com.android.server.wm.WindowManagerService$H: int APP_FREEZE_TIMEOUT> = 17;

        <com.android.server.wm.WindowManagerService$H: int ENABLE_SCREEN> = 16;

        <com.android.server.wm.WindowManagerService$H: int FORCE_GC> = 15;

        <com.android.server.wm.WindowManagerService$H: int PERSIST_ANIMATION_SCALE> = 14;

        <com.android.server.wm.WindowManagerService$H: int APP_TRANSITION_TIMEOUT> = 13;

        <com.android.server.wm.WindowManagerService$H: int WINDOW_FREEZE_TIMEOUT> = 11;

        <com.android.server.wm.WindowManagerService$H: int REPORT_APPLICATION_TOKEN_DRAWN> = 9;

        <com.android.server.wm.WindowManagerService$H: int REPORT_APPLICATION_TOKEN_WINDOWS> = 8;

        <com.android.server.wm.WindowManagerService$H: int FINISHED_STARTING> = 7;

        <com.android.server.wm.WindowManagerService$H: int REMOVE_STARTING> = 6;

        <com.android.server.wm.WindowManagerService$H: int ADD_STARTING> = 5;

        <com.android.server.wm.WindowManagerService$H: int DO_TRAVERSAL> = 4;

        <com.android.server.wm.WindowManagerService$H: int REPORT_LOSING_FOCUS> = 3;

        <com.android.server.wm.WindowManagerService$H: int REPORT_FOCUS_CHANGE> = 2;

        return;
    }
}
