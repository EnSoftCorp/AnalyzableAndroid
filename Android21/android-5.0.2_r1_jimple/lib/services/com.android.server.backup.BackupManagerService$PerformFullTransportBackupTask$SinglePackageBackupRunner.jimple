class com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner extends java.lang.Object implements java.lang.Runnable
{
    final android.os.ParcelFileDescriptor mOutput;
    final android.content.pm.PackageInfo mTarget;
    final java.util.concurrent.atomic.AtomicBoolean mLatch;
    final com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask this$1;

    void <init>(com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask, android.os.ParcelFileDescriptor, android.content.pm.PackageInfo, java.util.concurrent.atomic.AtomicBoolean) throws java.io.IOException
    {
        com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner r0;
        com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask r1;
        android.os.ParcelFileDescriptor r2, $r6;
        android.content.pm.PackageInfo r3;
        java.util.concurrent.atomic.AtomicBoolean r4;
        java.io.FileDescriptor $r5;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner;

        r1 := @parameter0: com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask;

        r2 := @parameter1: android.os.ParcelFileDescriptor;

        r3 := @parameter2: android.content.pm.PackageInfo;

        r4 := @parameter3: java.util.concurrent.atomic.AtomicBoolean;

        r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner: com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r2.<android.os.ParcelFileDescriptor: int getFd()>();

        $r5 = virtualinvoke r2.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        $r6 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup(java.io.FileDescriptor)>($r5);

        r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner: android.os.ParcelFileDescriptor mOutput> = $r6;

        r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner: android.content.pm.PackageInfo mTarget> = r3;

        r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner: java.util.concurrent.atomic.AtomicBoolean mLatch> = r4;

        return;
    }

    public void run()
    {
        com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner r0;
        java.io.FileOutputStream r1, $r8;
        com.android.server.backup.BackupManagerService$FullBackupEngine r2, $r11;
        java.lang.Throwable r3, r4, r5, r7, $r20, $r23, $r24, $r41;
        java.util.concurrent.atomic.AtomicBoolean r6, $r17, $r18, $r19, $r25, $r26, $r29, $r36, $r37, $r38, r42, r45;
        android.os.ParcelFileDescriptor $r9, $r21, $r27, $r40;
        java.io.FileDescriptor $r10;
        com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask $r12;
        android.content.pm.PackageInfo $r13, $r16, $r35;
        java.lang.String $r14, $r33;
        com.android.server.backup.BackupManagerService $r15;
        java.io.IOException $r22, $r28, $r39;
        java.lang.StringBuilder $r30, $r32, $r34;
        java.lang.Exception $r31;

        r0 := @this: com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner;

     label01:
        $r8 = new java.io.FileOutputStream;

        $r9 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner: android.os.ParcelFileDescriptor mOutput>;

        $r10 = virtualinvoke $r9.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r8.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r10);

        r1 = $r8;

        $r11 = new com.android.server.backup.BackupManagerService$FullBackupEngine;

        $r12 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner: com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask this$1>;

        $r15 = $r12.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask: com.android.server.backup.BackupManagerService this$0>;

        $r13 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner: android.content.pm.PackageInfo mTarget>;

        $r14 = $r13.<android.content.pm.PackageInfo: java.lang.String packageName>;

        specialinvoke $r11.<com.android.server.backup.BackupManagerService$FullBackupEngine: void <init>(com.android.server.backup.BackupManagerService,java.io.OutputStream,java.lang.String,boolean)>($r15, r1, $r14, 0);

        r2 = $r11;

        $r16 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner: android.content.pm.PackageInfo mTarget>;

        virtualinvoke r2.<com.android.server.backup.BackupManagerService$FullBackupEngine: int backupOnePackage(android.content.pm.PackageInfo)>($r16);

     label02:
        $r18 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner: java.util.concurrent.atomic.AtomicBoolean mLatch>;

        r42 = $r18;

        entermonitor $r18;

     label03:
        $r17 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner: java.util.concurrent.atomic.AtomicBoolean mLatch>;

        virtualinvoke $r17.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r19 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner: java.util.concurrent.atomic.AtomicBoolean mLatch>;

        virtualinvoke $r19.<java.lang.Object: void notifyAll()>();

        exitmonitor r42;

     label04:
        goto label07;

     label05:
        $r23 := @caughtexception;

        r3 = $r23;

        exitmonitor r42;

     label06:
        throw r3;

     label07:
        $r21 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner: android.os.ParcelFileDescriptor mOutput>;

        virtualinvoke $r21.<android.os.ParcelFileDescriptor: void close()>();

     label08:
        goto label29;

     label09:
        $r28 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PFTBT", "Error closing transport pipe in runner");

        goto label29;

     label10:
        $r31 := @caughtexception;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception during full package backup of ");

        $r35 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner: android.content.pm.PackageInfo mTarget>;

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r35);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PFTBT", $r33);

     label11:
        $r38 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner: java.util.concurrent.atomic.AtomicBoolean mLatch>;

        r45 = $r38;

        entermonitor $r38;

     label12:
        $r36 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner: java.util.concurrent.atomic.AtomicBoolean mLatch>;

        virtualinvoke $r36.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r37 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner: java.util.concurrent.atomic.AtomicBoolean mLatch>;

        virtualinvoke $r37.<java.lang.Object: void notifyAll()>();

        exitmonitor r45;

     label13:
        goto label16;

     label14:
        $r41 := @caughtexception;

        r4 = $r41;

        exitmonitor r45;

     label15:
        throw r4;

     label16:
        $r40 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner: android.os.ParcelFileDescriptor mOutput>;

        virtualinvoke $r40.<android.os.ParcelFileDescriptor: void close()>();

     label17:
        goto label29;

     label18:
        $r39 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PFTBT", "Error closing transport pipe in runner");

        goto label29;

     label19:
        $r24 := @caughtexception;

        r5 = $r24;

     label20:
        $r26 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner: java.util.concurrent.atomic.AtomicBoolean mLatch>;

        r6 = $r26;

        entermonitor $r26;

     label21:
        $r25 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner: java.util.concurrent.atomic.AtomicBoolean mLatch>;

        virtualinvoke $r25.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r29 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner: java.util.concurrent.atomic.AtomicBoolean mLatch>;

        virtualinvoke $r29.<java.lang.Object: void notifyAll()>();

        exitmonitor r6;

     label22:
        goto label25;

     label23:
        $r20 := @caughtexception;

        r7 = $r20;

        exitmonitor r6;

     label24:
        throw r7;

     label25:
        $r27 = r0.<com.android.server.backup.BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner: android.os.ParcelFileDescriptor mOutput>;

        virtualinvoke $r27.<android.os.ParcelFileDescriptor: void close()>();

     label26:
        goto label28;

     label27:
        $r22 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PFTBT", "Error closing transport pipe in runner");

     label28:
        throw r5;

     label29:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label10 to label11 with label19;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
        catch java.io.IOException from label25 to label26 with label27;
        catch java.lang.Throwable from label19 to label20 with label19;
    }
}
