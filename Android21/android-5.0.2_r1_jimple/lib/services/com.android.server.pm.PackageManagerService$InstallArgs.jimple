abstract class com.android.server.pm.PackageManagerService$InstallArgs extends java.lang.Object
{
    final com.android.server.pm.PackageManagerService$OriginInfo origin;
    final android.content.pm.IPackageInstallObserver2 observer;
    final int installFlags;
    final java.lang.String installerPackageName;
    final android.content.pm.ManifestDigest manifestDigest;
    final android.os.UserHandle user;
    final java.lang.String abiOverride;
    java.lang.String[] instructionSets;

    void <init>(com.android.server.pm.PackageManagerService$OriginInfo, android.content.pm.IPackageInstallObserver2, int, java.lang.String, android.content.pm.ManifestDigest, android.os.UserHandle, java.lang.String[], java.lang.String)
    {
        com.android.server.pm.PackageManagerService$InstallArgs r0;
        com.android.server.pm.PackageManagerService$OriginInfo r1;
        android.content.pm.IPackageInstallObserver2 r2;
        int i0;
        java.lang.String r3, r7;
        android.content.pm.ManifestDigest r4;
        android.os.UserHandle r5;
        java.lang.String[] r6;

        r0 := @this: com.android.server.pm.PackageManagerService$InstallArgs;

        r1 := @parameter0: com.android.server.pm.PackageManagerService$OriginInfo;

        r2 := @parameter1: android.content.pm.IPackageInstallObserver2;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.content.pm.ManifestDigest;

        r5 := @parameter5: android.os.UserHandle;

        r6 := @parameter6: java.lang.String[];

        r7 := @parameter7: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.pm.PackageManagerService$InstallArgs: com.android.server.pm.PackageManagerService$OriginInfo origin> = r1;

        r0.<com.android.server.pm.PackageManagerService$InstallArgs: int installFlags> = i0;

        r0.<com.android.server.pm.PackageManagerService$InstallArgs: android.content.pm.IPackageInstallObserver2 observer> = r2;

        r0.<com.android.server.pm.PackageManagerService$InstallArgs: java.lang.String installerPackageName> = r3;

        r0.<com.android.server.pm.PackageManagerService$InstallArgs: android.content.pm.ManifestDigest manifestDigest> = r4;

        r0.<com.android.server.pm.PackageManagerService$InstallArgs: android.os.UserHandle user> = r5;

        r0.<com.android.server.pm.PackageManagerService$InstallArgs: java.lang.String[] instructionSets> = r6;

        r0.<com.android.server.pm.PackageManagerService$InstallArgs: java.lang.String abiOverride> = r7;

        return;
    }

    abstract int copyApk(com.android.internal.app.IMediaContainerService, boolean) throws android.os.RemoteException;

    abstract int doPreInstall(int);

    abstract boolean doRename(int, android.content.pm.PackageParser$Package, java.lang.String);

    abstract int doPostInstall(int, int);

    abstract java.lang.String getCodePath();

    abstract java.lang.String getResourcePath();

    abstract java.lang.String getLegacyNativeLibraryPath();

    abstract void cleanUpResourcesLI();

    abstract boolean doPostDeleteLI(boolean);

    abstract boolean checkFreeStorage(com.android.internal.app.IMediaContainerService) throws android.os.RemoteException;

    int doPreCopy()
    {
        com.android.server.pm.PackageManagerService$InstallArgs r0;

        r0 := @this: com.android.server.pm.PackageManagerService$InstallArgs;

        return 1;
    }

    int doPostCopy(int)
    {
        com.android.server.pm.PackageManagerService$InstallArgs r0;
        int i0;

        r0 := @this: com.android.server.pm.PackageManagerService$InstallArgs;

        i0 := @parameter0: int;

        return 1;
    }

    protected boolean isFwdLocked()
    {
        com.android.server.pm.PackageManagerService$InstallArgs r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService$InstallArgs;

        $i0 = r0.<com.android.server.pm.PackageManagerService$InstallArgs: int installFlags>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected boolean isExternal()
    {
        com.android.server.pm.PackageManagerService$InstallArgs r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageManagerService$InstallArgs;

        $i0 = r0.<com.android.server.pm.PackageManagerService$InstallArgs: int installFlags>;

        $i1 = $i0 & 8;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    android.os.UserHandle getUser()
    {
        com.android.server.pm.PackageManagerService$InstallArgs r0;
        android.os.UserHandle $r1;

        r0 := @this: com.android.server.pm.PackageManagerService$InstallArgs;

        $r1 = r0.<com.android.server.pm.PackageManagerService$InstallArgs: android.os.UserHandle user>;

        return $r1;
    }
}
