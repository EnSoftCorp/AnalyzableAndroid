public class com.android.server.ConnectivityService extends android.net.IConnectivityManager$Stub
{
    private static final java.lang.String TAG;
    private static final boolean DBG;
    private static final boolean VDBG;
    private static final boolean SAMPLE_DBG;
    private static final boolean LOGD_RULES;
    private static final int RESTORE_DEFAULT_NETWORK_DELAY;
    private static final java.lang.String NETWORK_RESTORE_DELAY_PROP_NAME;
    private static final int DEFAULT_FAIL_FAST_TIME_MS;
    private static final java.lang.String FAIL_FAST_TIME_MS;
    private static final java.lang.String ACTION_PKT_CNT_SAMPLE_INTERVAL_ELAPSED;
    private static final int SAMPLE_INTERVAL_ELAPSED_REQUEST_CODE;
    private android.app.PendingIntent mSampleIntervalElapsedIntent;
    private static final int DEFAULT_SAMPLING_INTERVAL_IN_SECONDS;
    private static final int DEFAULT_START_SAMPLING_INTERVAL_IN_SECONDS;
    android.app.AlarmManager mAlarmManager;
    private com.android.server.connectivity.Tethering mTethering;
    private final com.android.server.connectivity.PermissionMonitor mPermissionMonitor;
    private android.security.KeyStore mKeyStore;
    private final android.util.SparseArray mVpns;
    private boolean mLockdownEnabled;
    private com.android.server.net.LockdownVpnTracker mLockdownTracker;
    private com.android.server.connectivity.Nat464Xlat mClat;
    private java.lang.Object mRulesLock;
    private android.util.SparseIntArray mUidRules;
    private java.util.HashSet mMeteredIfaces;
    private android.net.NetworkStateTracker[] mNetTrackers;
    private android.content.Context mContext;
    private int mNetworkPreference;
    private int mActiveDefaultNetwork;
    private int mDefaultInetConditionPublished;
    private java.lang.Object mDnsLock;
    private int mNumDnsEntries;
    private boolean mTestMode;
    private static com.android.server.ConnectivityService sServiceInstance;
    private android.os.INetworkManagementService mNetd;
    private android.net.INetworkPolicyManager mPolicyManager;
    private java.lang.String mCurrentTcpBufferSizes;
    private static final int ENABLED;
    private static final int DISABLED;
    private static final int EVENT_CHANGE_MOBILE_DATA_ENABLED;
    private static final int EVENT_CLEAR_NET_TRANSITION_WAKELOCK;
    private static final int EVENT_APPLY_GLOBAL_HTTP_PROXY;
    private static final int EVENT_SET_DEPENDENCY_MET;
    private static final int EVENT_SEND_STICKY_BROADCAST_INTENT;
    private static final int EVENT_SET_POLICY_DATA_ENABLE;
    private static final int EVENT_ENABLE_FAIL_FAST_MOBILE_DATA;
    private static final int EVENT_SAMPLE_INTERVAL_ELAPSED;
    private static final int EVENT_PROXY_HAS_CHANGED;
    private static final int EVENT_REGISTER_NETWORK_FACTORY;
    private static final int EVENT_REGISTER_NETWORK_AGENT;
    private static final int EVENT_REGISTER_NETWORK_REQUEST;
    private static final int EVENT_TIMEOUT_NETWORK_REQUEST;
    private static final int EVENT_REGISTER_NETWORK_LISTENER;
    private static final int EVENT_RELEASE_NETWORK_REQUEST;
    private static final int EVENT_UNREGISTER_NETWORK_FACTORY;
    private static final int EVENT_EXPIRE_NET_TRANSITION_WAKELOCK;
    private static final int EVENT_SYSTEM_READY;
    private final com.android.server.ConnectivityService$InternalHandler mHandler;
    private final com.android.server.ConnectivityService$NetworkStateTrackerHandler mTrackerHandler;
    private boolean mSystemReady;
    private android.content.Intent mInitialBroadcast;
    private android.os.PowerManager$WakeLock mNetTransitionWakeLock;
    private java.lang.String mNetTransitionWakeLockCausedBy;
    private int mNetTransitionWakeLockSerialNumber;
    private int mNetTransitionWakeLockTimeout;
    private java.net.InetAddress mDefaultDns;
    private static final int INET_CONDITION_LOG_MAX_SIZE;
    private java.util.ArrayList mInetLog;
    private volatile android.net.ProxyInfo mDefaultProxy;
    private java.lang.Object mProxyLock;
    private boolean mDefaultProxyDisabled;
    private android.net.ProxyInfo mGlobalProxy;
    private com.android.server.connectivity.PacManager mPacManager;
    private com.android.server.ConnectivityService$SettingsObserver mSettingsObserver;
    private android.os.UserManager mUserManager;
    android.net.NetworkConfig[] mNetConfigs;
    int mNetworksDefined;
    java.util.List mProtectedNetworks;
    private com.android.server.connectivity.DataConnectionStats mDataConnectionStats;
    private java.util.concurrent.atomic.AtomicInteger mEnableFailFastMobileDataTag;
    android.telephony.TelephonyManager mTelephonyManager;
    private static final int MIN_NET_ID;
    private static final int MAX_NET_ID;
    private int mNextNetId;
    private int mNextNetworkRequestId;
    private com.android.server.ConnectivityService$LegacyTypeTracker mLegacyTypeTracker;
    private android.net.INetworkManagementEventObserver mDataActivityObserver;
    private android.net.INetworkPolicyListener mPolicyListener;
    private android.content.BroadcastReceiver mUserPresentReceiver;
    private static final java.lang.String DEFAULT_TCP_BUFFER_SIZES;
    private static final java.lang.String NOTIFICATION_ID;
    private volatile boolean mIsNotificationVisible;
    private static final java.lang.String PROVISIONING_URL_PATH;
    private final java.io.File mProvisioningUrlFile;
    private static final java.lang.String TAG_PROVISIONING_URLS;
    private static final java.lang.String TAG_PROVISIONING_URL;
    private static final java.lang.String TAG_REDIRECTED_URL;
    private static final java.lang.String ATTR_MCC;
    private static final java.lang.String ATTR_MNC;
    private static final int REDIRECTED_PROVISIONING;
    private static final int PROVISIONING;
    private android.content.BroadcastReceiver mUserIntentReceiver;
    private final java.util.HashMap mNetworkFactoryInfos;
    private final java.util.HashMap mNetworkRequests;
    private final android.util.SparseArray mNetworkForRequestId;
    private final android.util.SparseArray mNetworkForNetId;
    private final java.util.HashMap mNetworkAgentInfos;
    private final android.net.NetworkRequest mDefaultRequest;

    public void <init>(android.content.Context, android.os.INetworkManagementService, android.net.INetworkStatsService, android.net.INetworkPolicyManager)
    {
        com.android.server.ConnectivityService r0;
        android.content.Context r1, $r53, $r62, $r67, $r76, $r82, $r86, $r95, $r100, $r106, $r111, $r113, $r125;
        android.os.INetworkManagementService r2, $r51, $r79, $r89, $r91, $r93, $r94, $r104;
        android.net.INetworkStatsService r3;
        android.net.INetworkPolicyManager r4, $r58, $r60;
        android.net.NetworkCapabilities r5, $r30;
        com.android.server.ConnectivityService$NetworkRequestInfo r6, $r37;
        android.os.HandlerThread r7, $r45;
        java.lang.String r8, r9, r12, $r47, $r74, $r80, $r118, $r126, $r142, $r145, $r154, $r157, $r158, $r159, $r164, $r166, r168;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z7;
        java.lang.String[] r10, r11;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18;
        android.util.SparseArray $r13, $r31, $r32;
        android.net.NetworkConfig r14, $r114, $r129, $r136;
        android.util.SparseIntArray $r15;
        java.lang.Object $r16, $r17, $r20, $r52, $r54, $r55, $r59, $r65, $r110, $r124;
        java.util.HashSet $r18;
        java.util.concurrent.atomic.AtomicInteger $r19;
        com.android.server.ConnectivityService$2 $r21;
        com.android.server.ConnectivityService$LegacyTypeTracker $r22, $r130;
        com.android.server.ConnectivityService$4 $r23;
        com.android.server.ConnectivityService$3 $r24;
        com.android.server.ConnectivityService$5 $r25;
        java.io.File $r26;
        java.util.HashMap $r27, $r28, $r29, $r38;
        android.net.NetworkRequest $r33, $r40, $r41;
        android.os.Binder $r36;
        com.android.server.ConnectivityService$NetworkStateTrackerHandler $r42, $r97;
        android.os.Looper $r43, $r48, $r78;
        com.android.server.ConnectivityService$InternalHandler $r44, $r77, $r101, $r122;
        android.content.ContentResolver $r46, $r155;
        java.net.InetAddress $r49;
        android.content.res.Resources $r50, $r68, $r69, $r70;
        android.telephony.TelephonyManager $r56;
        android.net.INetworkPolicyListener $r57;
        android.security.KeyStore $r61;
        android.net.NetworkStateTracker[] $r63;
        android.net.NetworkConfig[] $r64, $r115, $r128, $r131;
        android.os.PowerManager$WakeLock $r66;
        java.util.ArrayList $r71, $r103;
        java.lang.StringBuilder $r72, $r73, $r75, $r116, $r117, $r119, $r137, $r138, $r139, $r140, $r141, $r143, $r144, $r146, $r147, $r148, $r152, $r153, $r156, $r160, $r162, $r163, $r165, $r167;
        com.android.server.connectivity.Tethering $r81, $r92;
        android.os.UserHandle $r84;
        android.content.BroadcastReceiver $r85;
        android.content.IntentFilter $r87, $r108, $r121, r175, r177;
        com.android.server.connectivity.PermissionMonitor $r88;
        android.net.INetworkManagementEventObserver $r90;
        com.android.server.connectivity.Nat464Xlat $r96, $r105;
        com.android.server.connectivity.DataConnectionStats $r98, $r112;
        com.android.server.ConnectivityService$SettingsObserver $r99, $r102;
        com.android.server.ConnectivityService$1 $r107;
        android.app.AlarmManager $r109;
        com.android.server.connectivity.PacManager $r123;
        android.os.UserManager $r127;
        java.util.List $r132, $r134;
        java.lang.Integer $r133, $r135;
        java.lang.Exception $r149;
        java.lang.IllegalArgumentException $r150;
        android.os.RemoteException $r151, $r161, r170, r176;
        android.os.PowerManager r171;
        int[] r173, r174;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.INetworkManagementService;

        r3 := @parameter2: android.net.INetworkStatsService;

        r4 := @parameter3: android.net.INetworkPolicyManager;

        specialinvoke r0.<android.net.IConnectivityManager$Stub: void <init>()>();

        $r13 = new android.util.SparseArray;

        specialinvoke $r13.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.ConnectivityService: android.util.SparseArray mVpns> = $r13;

        $r16 = new java.lang.Object;

        specialinvoke $r16.<java.lang.Object: void <init>()>();

        r0.<com.android.server.ConnectivityService: java.lang.Object mRulesLock> = $r16;

        $r15 = new android.util.SparseIntArray;

        specialinvoke $r15.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.server.ConnectivityService: android.util.SparseIntArray mUidRules> = $r15;

        $r18 = staticinvoke <com.google.android.collect.Sets: java.util.HashSet newHashSet()>();

        r0.<com.android.server.ConnectivityService: java.util.HashSet mMeteredIfaces> = $r18;

        r0.<com.android.server.ConnectivityService: int mActiveDefaultNetwork> = -1;

        r0.<com.android.server.ConnectivityService: int mDefaultInetConditionPublished> = 0;

        $r17 = new java.lang.Object;

        specialinvoke $r17.<java.lang.Object: void <init>()>();

        r0.<com.android.server.ConnectivityService: java.lang.Object mDnsLock> = $r17;

        r0.<com.android.server.ConnectivityService: java.lang.String mNetTransitionWakeLockCausedBy> = "";

        r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mDefaultProxy> = null;

        $r20 = new java.lang.Object;

        specialinvoke $r20.<java.lang.Object: void <init>()>();

        r0.<com.android.server.ConnectivityService: java.lang.Object mProxyLock> = $r20;

        r0.<com.android.server.ConnectivityService: boolean mDefaultProxyDisabled> = 0;

        r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mGlobalProxy> = null;

        r0.<com.android.server.ConnectivityService: com.android.server.connectivity.PacManager mPacManager> = null;

        $r19 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r19.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<com.android.server.ConnectivityService: java.util.concurrent.atomic.AtomicInteger mEnableFailFastMobileDataTag> = $r19;

        r0.<com.android.server.ConnectivityService: int mNextNetId> = 100;

        r0.<com.android.server.ConnectivityService: int mNextNetworkRequestId> = 1;

        $r22 = new com.android.server.ConnectivityService$LegacyTypeTracker;

        specialinvoke $r22.<com.android.server.ConnectivityService$LegacyTypeTracker: void <init>(com.android.server.ConnectivityService)>(r0);

        r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$LegacyTypeTracker mLegacyTypeTracker> = $r22;

        $r21 = new com.android.server.ConnectivityService$2;

        specialinvoke $r21.<com.android.server.ConnectivityService$2: void <init>(com.android.server.ConnectivityService)>(r0);

        r0.<com.android.server.ConnectivityService: android.net.INetworkManagementEventObserver mDataActivityObserver> = $r21;

        $r24 = new com.android.server.ConnectivityService$3;

        specialinvoke $r24.<com.android.server.ConnectivityService$3: void <init>(com.android.server.ConnectivityService)>(r0);

        r0.<com.android.server.ConnectivityService: android.net.INetworkPolicyListener mPolicyListener> = $r24;

        $r23 = new com.android.server.ConnectivityService$4;

        specialinvoke $r23.<com.android.server.ConnectivityService$4: void <init>(com.android.server.ConnectivityService)>(r0);

        r0.<com.android.server.ConnectivityService: android.content.BroadcastReceiver mUserPresentReceiver> = $r23;

        r0.<com.android.server.ConnectivityService: boolean mIsNotificationVisible> = 0;

        $r26 = new java.io.File;

        specialinvoke $r26.<java.io.File: void <init>(java.lang.String)>("/data/misc/radio/provisioning_urls.xml");

        r0.<com.android.server.ConnectivityService: java.io.File mProvisioningUrlFile> = $r26;

        $r25 = new com.android.server.ConnectivityService$5;

        specialinvoke $r25.<com.android.server.ConnectivityService$5: void <init>(com.android.server.ConnectivityService)>(r0);

        r0.<com.android.server.ConnectivityService: android.content.BroadcastReceiver mUserIntentReceiver> = $r25;

        $r28 = new java.util.HashMap;

        specialinvoke $r28.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkFactoryInfos> = $r28;

        $r27 = new java.util.HashMap;

        specialinvoke $r27.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkRequests> = $r27;

        $r31 = new android.util.SparseArray;

        specialinvoke $r31.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForRequestId> = $r31;

        $r32 = new android.util.SparseArray;

        specialinvoke $r32.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForNetId> = $r32;

        $r29 = new java.util.HashMap;

        specialinvoke $r29.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkAgentInfos> = $r29;

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>("ConnectivityService starting up");

        $r30 = new android.net.NetworkCapabilities;

        specialinvoke $r30.<android.net.NetworkCapabilities: void <init>()>();

        r5 = $r30;

        virtualinvoke r5.<android.net.NetworkCapabilities: android.net.NetworkCapabilities addCapability(int)>(12);

        virtualinvoke r5.<android.net.NetworkCapabilities: android.net.NetworkCapabilities addCapability(int)>(13);

        $r33 = new android.net.NetworkRequest;

        $i2 = specialinvoke r0.<com.android.server.ConnectivityService: int nextNetworkRequestId()>();

        specialinvoke $r33.<android.net.NetworkRequest: void <init>(android.net.NetworkCapabilities,int,int)>(r5, -1, $i2);

        r0.<com.android.server.ConnectivityService: android.net.NetworkRequest mDefaultRequest> = $r33;

        $r37 = new com.android.server.ConnectivityService$NetworkRequestInfo;

        $r40 = r0.<com.android.server.ConnectivityService: android.net.NetworkRequest mDefaultRequest>;

        $r36 = new android.os.Binder;

        specialinvoke $r36.<android.os.Binder: void <init>()>();

        specialinvoke $r37.<com.android.server.ConnectivityService$NetworkRequestInfo: void <init>(com.android.server.ConnectivityService,android.os.Messenger,android.net.NetworkRequest,android.os.IBinder,boolean)>(r0, null, $r40, $r36, 1);

        r6 = $r37;

        $r38 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkRequests>;

        $r41 = r0.<com.android.server.ConnectivityService: android.net.NetworkRequest mDefaultRequest>;

        virtualinvoke $r38.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r41, r6);

        $r45 = new android.os.HandlerThread;

        specialinvoke $r45.<android.os.HandlerThread: void <init>(java.lang.String)>("ConnectivityServiceThread");

        r7 = $r45;

        virtualinvoke r7.<android.os.HandlerThread: void start()>();

        $r44 = new com.android.server.ConnectivityService$InternalHandler;

        $r43 = virtualinvoke r7.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r44.<com.android.server.ConnectivityService$InternalHandler: void <init>(com.android.server.ConnectivityService,android.os.Looper)>(r0, $r43);

        r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler> = $r44;

        $r42 = new com.android.server.ConnectivityService$NetworkStateTrackerHandler;

        $r48 = virtualinvoke r7.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r42.<com.android.server.ConnectivityService$NetworkStateTrackerHandler: void <init>(com.android.server.ConnectivityService,android.os.Looper)>(r0, $r48);

        r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$NetworkStateTrackerHandler mTrackerHandler> = $r42;

        $r47 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("net.hostname");

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r47);

        if $z1 == 0 goto label01;

        $r155 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r8 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r155, "android_id");

        if r8 == null goto label01;

        $i15 = virtualinvoke r8.<java.lang.String: int length()>();

        if $i15 <= 0 goto label01;

        $r158 = new java.lang.String;

        specialinvoke $r158.<java.lang.String: void <init>(java.lang.String)>("android-");

        r9 = virtualinvoke $r158.<java.lang.String: java.lang.String concat(java.lang.String)>(r8);

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("net.hostname", r9);

     label01:
        $r46 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r168 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r46, "default_dns_server");

        if r168 == null goto label02;

        $i14 = virtualinvoke r168.<java.lang.String: int length()>();

        if $i14 != 0 goto label03;

     label02:
        $r50 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        r168 = virtualinvoke $r50.<android.content.res.Resources: java.lang.String getString(int)>(17039400);

     label03:
        $r49 = staticinvoke <android.net.NetworkUtils: java.net.InetAddress numericToInetAddress(java.lang.String)>(r168);

        r0.<com.android.server.ConnectivityService: java.net.InetAddress mDefaultDns> = $r49;

     label04:
        goto label06;

     label05:
        $r150 := @caughtexception;

        $r147 = new java.lang.StringBuilder;

        specialinvoke $r147.<java.lang.StringBuilder: void <init>()>();

        $r148 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error setting defaultDns using ");

        $r153 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r168);

        $r154 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r154);

     label06:
        $r54 = staticinvoke <com.android.server.ConnectivityService: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r1, "missing Context");

        $r53 = (android.content.Context) $r54;

        r0.<com.android.server.ConnectivityService: android.content.Context mContext> = $r53;

        $r52 = staticinvoke <com.android.server.ConnectivityService: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r2, "missing INetworkManagementService");

        $r51 = (android.os.INetworkManagementService) $r52;

        r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd> = $r51;

        $r59 = staticinvoke <com.android.server.ConnectivityService: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r4, "missing INetworkPolicyManager");

        $r60 = (android.net.INetworkPolicyManager) $r59;

        r0.<com.android.server.ConnectivityService: android.net.INetworkPolicyManager mPolicyManager> = $r60;

        $r61 = staticinvoke <android.security.KeyStore: android.security.KeyStore getInstance()>();

        r0.<com.android.server.ConnectivityService: android.security.KeyStore mKeyStore> = $r61;

        $r62 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r55 = virtualinvoke $r62.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r56 = (android.telephony.TelephonyManager) $r55;

        r0.<com.android.server.ConnectivityService: android.telephony.TelephonyManager mTelephonyManager> = $r56;

     label07:
        $r58 = r0.<com.android.server.ConnectivityService: android.net.INetworkPolicyManager mPolicyManager>;

        $r57 = r0.<com.android.server.ConnectivityService: android.net.INetworkPolicyListener mPolicyListener>;

        interfaceinvoke $r58.<android.net.INetworkPolicyManager: void registerListener(android.net.INetworkPolicyListener)>($r57);

     label08:
        goto label10;

     label09:
        $r151 := @caughtexception;

        r170 = $r151;

        $r152 = new java.lang.StringBuilder;

        specialinvoke $r152.<java.lang.StringBuilder: void <init>()>();

        $r165 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to register INetworkPolicyListener");

        $r164 = virtualinvoke r170.<android.os.RemoteException: java.lang.String toString()>();

        $r167 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r164);

        $r166 = virtualinvoke $r167.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r166);

     label10:
        $r65 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        r171 = (android.os.PowerManager) $r65;

        $r66 = virtualinvoke r171.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "ConnectivityService");

        r0.<com.android.server.ConnectivityService: android.os.PowerManager$WakeLock mNetTransitionWakeLock> = $r66;

        $r67 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r68 = virtualinvoke $r67.<android.content.Context: android.content.res.Resources getResources()>();

        $i3 = virtualinvoke $r68.<android.content.res.Resources: int getInteger(int)>(17694733);

        r0.<com.android.server.ConnectivityService: int mNetTransitionWakeLockTimeout> = $i3;

        $r63 = newarray (android.net.NetworkStateTracker)[18];

        r0.<com.android.server.ConnectivityService: android.net.NetworkStateTracker[] mNetTrackers> = $r63;

        $r64 = newarray (android.net.NetworkConfig)[18];

        r0.<com.android.server.ConnectivityService: android.net.NetworkConfig[] mNetConfigs> = $r64;

        z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("ro.radio.noril", 0);

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wifiOnly=");

        $r75 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r74 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r74);

        $r69 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        r10 = virtualinvoke $r69.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17235980);

        r11 = r10;

        i0 = lengthof r11;

        i1 = 0;

     label11:
        if i1 >= i0 goto label22;

        r12 = r11[i1];

     label12:
        $r136 = new android.net.NetworkConfig;

        specialinvoke $r136.<android.net.NetworkConfig: void <init>(java.lang.String)>(r12);

        r14 = $r136;

        $i8 = r14.<android.net.NetworkConfig: int type>;

        if $i8 <= 17 goto label14;

        $r141 = new java.lang.StringBuilder;

        specialinvoke $r141.<java.lang.StringBuilder: void <init>()>();

        $r140 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in networkAttributes - ignoring attempt to define type ");

        $i10 = r14.<android.net.NetworkConfig: int type>;

        $r156 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r157 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r157);

     label13:
        goto label21;

     label14:
        if z0 == 0 goto label16;

        $i13 = r14.<android.net.NetworkConfig: int type>;

        $z7 = staticinvoke <android.net.ConnectivityManager: boolean isNetworkTypeMobile(int)>($i13);

        if $z7 == 0 goto label16;

        $r139 = new java.lang.StringBuilder;

        specialinvoke $r139.<java.lang.StringBuilder: void <init>()>();

        $r138 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("networkAttributes - ignoring mobile as this dev is wifiOnly ");

        $i9 = r14.<android.net.NetworkConfig: int type>;

        $r137 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r142 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r142);

     label15:
        goto label21;

     label16:
        $r128 = r0.<com.android.server.ConnectivityService: android.net.NetworkConfig[] mNetConfigs>;

        $i4 = r14.<android.net.NetworkConfig: int type>;

        $r129 = $r128[$i4];

        if $r129 == null goto label18;

        $r144 = new java.lang.StringBuilder;

        specialinvoke $r144.<java.lang.StringBuilder: void <init>()>();

        $r143 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in networkAttributes - ignoring attempt to redefine type ");

        $i11 = r14.<android.net.NetworkConfig: int type>;

        $r146 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r145 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r145);

     label17:
        goto label21;

     label18:
        $r130 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$LegacyTypeTracker mLegacyTypeTracker>;

        $i5 = r14.<android.net.NetworkConfig: int type>;

        virtualinvoke $r130.<com.android.server.ConnectivityService$LegacyTypeTracker: void addSupportedType(int)>($i5);

        $r131 = r0.<com.android.server.ConnectivityService: android.net.NetworkConfig[] mNetConfigs>;

        $i6 = r14.<android.net.NetworkConfig: int type>;

        $r131[$i6] = r14;

        $i7 = r0.<com.android.server.ConnectivityService: int mNetworksDefined>;

        $i12 = $i7 + 1;

        r0.<com.android.server.ConnectivityService: int mNetworksDefined> = $i12;

     label19:
        goto label21;

     label20:
        $r149 := @caughtexception;

     label21:
        i1 = i1 + 1;

        goto label11;

     label22:
        $r71 = new java.util.ArrayList;

        specialinvoke $r71.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.ConnectivityService: java.util.List mProtectedNetworks> = $r71;

        $r70 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        r173 = virtualinvoke $r70.<android.content.res.Resources: int[] getIntArray(int)>(17235981);

        r174 = r173;

        i16 = lengthof r174;

        i17 = 0;

     label23:
        if i17 >= i16 goto label26;

        i18 = r174[i17];

        $r115 = r0.<com.android.server.ConnectivityService: android.net.NetworkConfig[] mNetConfigs>;

        $r114 = $r115[i18];

        if $r114 == null goto label24;

        $r132 = r0.<com.android.server.ConnectivityService: java.util.List mProtectedNetworks>;

        $r133 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i18);

        $z5 = interfaceinvoke $r132.<java.util.List: boolean contains(java.lang.Object)>($r133);

        if $z5 != 0 goto label24;

        $r134 = r0.<com.android.server.ConnectivityService: java.util.List mProtectedNetworks>;

        $r135 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i18);

        interfaceinvoke $r134.<java.util.List: boolean add(java.lang.Object)>($r135);

        goto label25;

     label24:
        $r117 = new java.lang.StringBuilder;

        specialinvoke $r117.<java.lang.StringBuilder: void <init>()>();

        $r116 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring protectedNetwork ");

        $r119 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        $r118 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r118);

     label25:
        i17 = i17 + 1;

        goto label23;

     label26:
        $r80 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("cm.test.mode");

        $z2 = virtualinvoke $r80.<java.lang.String: boolean equals(java.lang.Object)>("true");

        if $z2 == 0 goto label27;

        $r126 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.build.type");

        $z4 = virtualinvoke $r126.<java.lang.String: boolean equals(java.lang.Object)>("eng");

        if $z4 == 0 goto label27;

        $z3 = 1;

        goto label28;

     label27:
        $z3 = 0;

     label28:
        r0.<com.android.server.ConnectivityService: boolean mTestMode> = $z3;

        $r81 = new com.android.server.connectivity.Tethering;

        $r76 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r79 = r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd>;

        $r77 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r78 = virtualinvoke $r77.<com.android.server.ConnectivityService$InternalHandler: android.os.Looper getLooper()>();

        specialinvoke $r81.<com.android.server.connectivity.Tethering: void <init>(android.content.Context,android.os.INetworkManagementService,android.net.INetworkStatsService,android.os.Looper)>($r76, $r79, r3, $r78);

        r0.<com.android.server.ConnectivityService: com.android.server.connectivity.Tethering mTethering> = $r81;

        $r88 = new com.android.server.connectivity.PermissionMonitor;

        $r86 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r89 = r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd>;

        specialinvoke $r88.<com.android.server.connectivity.PermissionMonitor: void <init>(android.content.Context,android.os.INetworkManagementService)>($r86, $r89);

        r0.<com.android.server.ConnectivityService: com.android.server.connectivity.PermissionMonitor mPermissionMonitor> = $r88;

        $r87 = new android.content.IntentFilter;

        specialinvoke $r87.<android.content.IntentFilter: void <init>()>();

        r175 = $r87;

        virtualinvoke r175.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_STARTING");

        virtualinvoke r175.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_STOPPING");

        $r82 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r85 = r0.<com.android.server.ConnectivityService: android.content.BroadcastReceiver mUserIntentReceiver>;

        $r84 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r82.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r85, $r84, r175, null, null);

        $r96 = new com.android.server.connectivity.Nat464Xlat;

        $r95 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r94 = r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd>;

        $r97 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$NetworkStateTrackerHandler mTrackerHandler>;

        specialinvoke $r96.<com.android.server.connectivity.Nat464Xlat: void <init>(android.content.Context,android.os.INetworkManagementService,android.net.IConnectivityManager,android.os.Handler)>($r95, $r94, r0, $r97);

        r0.<com.android.server.ConnectivityService: com.android.server.connectivity.Nat464Xlat mClat> = $r96;

     label29:
        $r93 = r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd>;

        $r92 = r0.<com.android.server.ConnectivityService: com.android.server.connectivity.Tethering mTethering>;

        interfaceinvoke $r93.<android.os.INetworkManagementService: void registerObserver(android.net.INetworkManagementEventObserver)>($r92);

        $r91 = r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd>;

        $r90 = r0.<com.android.server.ConnectivityService: android.net.INetworkManagementEventObserver mDataActivityObserver>;

        interfaceinvoke $r91.<android.os.INetworkManagementService: void registerObserver(android.net.INetworkManagementEventObserver)>($r90);

        $r104 = r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd>;

        $r105 = r0.<com.android.server.ConnectivityService: com.android.server.connectivity.Nat464Xlat mClat>;

        interfaceinvoke $r104.<android.os.INetworkManagementService: void registerObserver(android.net.INetworkManagementEventObserver)>($r105);

     label30:
        goto label32;

     label31:
        $r161 := @caughtexception;

        r176 = $r161;

        $r160 = new java.lang.StringBuilder;

        specialinvoke $r160.<java.lang.StringBuilder: void <init>()>();

        $r163 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error registering observer :");

        $r162 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r176);

        $r159 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r159);

     label32:
        $r103 = new java.util.ArrayList;

        specialinvoke $r103.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.ConnectivityService: java.util.ArrayList mInetLog> = $r103;

        $r102 = new com.android.server.ConnectivityService$SettingsObserver;

        $r101 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        specialinvoke $r102.<com.android.server.ConnectivityService$SettingsObserver: void <init>(android.os.Handler,int)>($r101, 9);

        r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$SettingsObserver mSettingsObserver> = $r102;

        $r99 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$SettingsObserver mSettingsObserver>;

        $r100 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        virtualinvoke $r99.<com.android.server.ConnectivityService$SettingsObserver: void observe(android.content.Context)>($r100);

        $r98 = new com.android.server.connectivity.DataConnectionStats;

        $r113 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        specialinvoke $r98.<com.android.server.connectivity.DataConnectionStats: void <init>(android.content.Context)>($r113);

        r0.<com.android.server.ConnectivityService: com.android.server.connectivity.DataConnectionStats mDataConnectionStats> = $r98;

        $r112 = r0.<com.android.server.ConnectivityService: com.android.server.connectivity.DataConnectionStats mDataConnectionStats>;

        virtualinvoke $r112.<com.android.server.connectivity.DataConnectionStats: void startMonitoring()>();

        $r111 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r110 = virtualinvoke $r111.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r109 = (android.app.AlarmManager) $r110;

        r0.<com.android.server.ConnectivityService: android.app.AlarmManager mAlarmManager> = $r109;

        $r108 = new android.content.IntentFilter;

        specialinvoke $r108.<android.content.IntentFilter: void <init>()>();

        r177 = $r108;

        virtualinvoke r177.<android.content.IntentFilter: void addAction(java.lang.String)>("android.net.ConnectivityService.action.PKT_CNT_SAMPLE_INTERVAL_ELAPSED");

        $r106 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r107 = new com.android.server.ConnectivityService$1;

        specialinvoke $r107.<com.android.server.ConnectivityService$1: void <init>(com.android.server.ConnectivityService)>(r0);

        $r121 = new android.content.IntentFilter;

        specialinvoke $r121.<android.content.IntentFilter: void <init>(android.content.IntentFilter)>(r177);

        virtualinvoke $r106.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r107, $r121);

        $r123 = new com.android.server.connectivity.PacManager;

        $r125 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r122 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        specialinvoke $r123.<com.android.server.connectivity.PacManager: void <init>(android.content.Context,android.os.Handler,int)>($r125, $r122, 16);

        r0.<com.android.server.ConnectivityService: com.android.server.connectivity.PacManager mPacManager> = $r123;

        $r124 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("user");

        $r127 = (android.os.UserManager) $r124;

        r0.<com.android.server.ConnectivityService: android.os.UserManager mUserManager> = $r127;

        return;

        catch java.lang.IllegalArgumentException from label03 to label04 with label05;
        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.Exception from label12 to label13 with label20;
        catch java.lang.Exception from label14 to label15 with label20;
        catch java.lang.Exception from label16 to label17 with label20;
        catch java.lang.Exception from label18 to label19 with label20;
        catch android.os.RemoteException from label29 to label30 with label31;
    }

    private synchronized int nextNetworkRequestId()
    {
        com.android.server.ConnectivityService r0;
        int $i0, $i1;

        r0 := @this: com.android.server.ConnectivityService;

        $i0 = r0.<com.android.server.ConnectivityService: int mNextNetworkRequestId>;

        $i1 = $i0 + 1;

        r0.<com.android.server.ConnectivityService: int mNextNetworkRequestId> = $i1;

        return $i0;
    }

    private void assignNextNetId(com.android.server.connectivity.NetworkAgentInfo)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        android.util.SparseArray r2, $r4, $r6, $r9;
        int i0, i1, $i2, $i3;
        java.lang.Throwable r3, $r10;
        java.lang.IllegalStateException $r5;
        java.lang.Object $r7;
        android.net.Network $r8;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.server.connectivity.NetworkAgentInfo;

        $r4 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForNetId>;

        r2 = $r4;

        entermonitor $r4;

     label01:
        i0 = 100;

     label02:
        if i0 > 65535 goto label06;

        i1 = r0.<com.android.server.ConnectivityService: int mNextNetId>;

        $i2 = r0.<com.android.server.ConnectivityService: int mNextNetId>;

        $i3 = $i2 + 1;

        r0.<com.android.server.ConnectivityService: int mNextNetId> = $i3;

        if $i3 <= 65535 goto label03;

        r0.<com.android.server.ConnectivityService: int mNextNetId> = 100;

     label03:
        $r6 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForNetId>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        if $r7 != null goto label05;

        $r8 = new android.net.Network;

        specialinvoke $r8.<android.net.Network: void <init>(int)>(i1);

        r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.Network network> = $r8;

        $r9 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForNetId>;

        virtualinvoke $r9.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, r1);

        exitmonitor r2;

     label04:
        return;

     label05:
        i0 = i0 + 1;

        goto label02;

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r2;

     label09:
        throw r3;

     label10:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No free netIds");

        throw $r5;

        catch java.lang.Throwable from label01 to label04 with label08;
        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private int getConnectivityChangeDelay()
    {
        com.android.server.ConnectivityService r0;
        android.content.ContentResolver r1;
        int i0, $i1;
        android.content.Context $r2;

        r0 := @this: com.android.server.ConnectivityService;

        $r2 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        r1 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i0 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("conn.connectivity_change_delay", 3000);

        $i1 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "connectivity_change_delay", i0);

        return $i1;
    }

    private boolean teardown(android.net.NetworkStateTracker)
    {
        com.android.server.ConnectivityService r0;
        android.net.NetworkStateTracker r1;
        boolean $z0;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.NetworkStateTracker;

        $z0 = interfaceinvoke r1.<android.net.NetworkStateTracker: boolean teardown()>();

        if $z0 == 0 goto label1;

        interfaceinvoke r1.<android.net.NetworkStateTracker: void setTeardownRequested(boolean)>(1);

        return 1;

     label1:
        return 0;
    }

    private boolean isNetworkBlocked(int, int)
    {
        com.android.server.ConnectivityService r0;
        int i0, i1;
        android.net.LinkProperties $r1;
        boolean $z0;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.server.ConnectivityService: android.net.LinkProperties getLinkPropertiesForType(int)>(i0);

        $z0 = specialinvoke r0.<com.android.server.ConnectivityService: boolean isNetworkWithLinkPropertiesBlocked(android.net.LinkProperties,int)>($r1, i1);

        return $z0;
    }

    private boolean isNetworkBlocked(com.android.server.connectivity.NetworkAgentInfo, int)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        int i0;
        android.net.LinkProperties $r2;
        boolean $z0;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.server.connectivity.NetworkAgentInfo;

        i0 := @parameter1: int;

        $r2 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.LinkProperties linkProperties>;

        $z0 = specialinvoke r0.<com.android.server.ConnectivityService: boolean isNetworkWithLinkPropertiesBlocked(android.net.LinkProperties,int)>($r2, i0);

        return $z0;
    }

    private boolean isNetworkWithLinkPropertiesBlocked(android.net.LinkProperties, int)
    {
        com.android.server.ConnectivityService r0;
        android.net.LinkProperties r1;
        int i0, i1, $i2;
        boolean z0;
        java.lang.String r2, $r5;
        java.lang.Object r3, $r6;
        java.lang.Throwable r4, $r9;
        java.util.HashSet $r7;
        android.util.SparseIntArray $r8;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.LinkProperties;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        $r5 = "";

        goto label2;

     label1:
        $r5 = virtualinvoke r1.<android.net.LinkProperties: java.lang.String getInterfaceName()>();

     label2:
        r2 = $r5;

        $r6 = r0.<com.android.server.ConnectivityService: java.lang.Object mRulesLock>;

        r3 = $r6;

        entermonitor $r6;

     label3:
        $r7 = r0.<com.android.server.ConnectivityService: java.util.HashSet mMeteredIfaces>;

        z0 = virtualinvoke $r7.<java.util.HashSet: boolean contains(java.lang.Object)>(r2);

        $r8 = r0.<com.android.server.ConnectivityService: android.util.SparseIntArray mUidRules>;

        i1 = virtualinvoke $r8.<android.util.SparseIntArray: int get(int,int)>(i0, 0);

        exitmonitor r3;

     label4:
        goto label7;

     label5:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r3;

     label6:
        throw r4;

     label7:
        if z0 == 0 goto label8;

        $i2 = i1 & 1;

        if $i2 == 0 goto label8;

        return 1;

     label8:
        return 0;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private android.net.NetworkInfo getFilteredNetworkInfo(int, int)
    {
        com.android.server.ConnectivityService r0;
        int i0, i1;
        android.net.NetworkInfo r1, $r2;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = specialinvoke r0.<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfoForType(int)>(i0);

        $r2 = specialinvoke r0.<com.android.server.ConnectivityService: android.net.NetworkInfo getFilteredNetworkInfo(android.net.NetworkInfo,int,int)>(r1, i0, i1);

        return $r2;
    }

    private android.net.NetworkInfo getFilteredNetworkInfo(android.net.NetworkInfo, int, int)
    {
        com.android.server.ConnectivityService r0;
        android.net.NetworkInfo r1, $r4;
        int i0, i1;
        boolean $z0;
        com.android.server.net.LockdownVpnTracker $r2, $r3;
        android.net.NetworkInfo$DetailedState $r5;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.NetworkInfo;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.server.ConnectivityService: boolean isNetworkBlocked(int,int)>(i0, i1);

        if $z0 == 0 goto label1;

        $r4 = new android.net.NetworkInfo;

        specialinvoke $r4.<android.net.NetworkInfo: void <init>(android.net.NetworkInfo)>(r1);

        r1 = $r4;

        $r5 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState BLOCKED>;

        virtualinvoke r1.<android.net.NetworkInfo: void setDetailedState(android.net.NetworkInfo$DetailedState,java.lang.String,java.lang.String)>($r5, null, null);

     label1:
        $r2 = r0.<com.android.server.ConnectivityService: com.android.server.net.LockdownVpnTracker mLockdownTracker>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.server.ConnectivityService: com.android.server.net.LockdownVpnTracker mLockdownTracker>;

        r1 = virtualinvoke $r3.<com.android.server.net.LockdownVpnTracker: android.net.NetworkInfo augmentNetworkInfo(android.net.NetworkInfo)>(r1);

     label2:
        return r1;
    }

    private android.net.NetworkInfo getFilteredNetworkInfo(com.android.server.connectivity.NetworkAgentInfo, int)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        int i0;
        android.net.NetworkInfo r2, $r5;
        boolean $z0;
        com.android.server.net.LockdownVpnTracker $r3, $r4;
        android.net.NetworkInfo$DetailedState $r6;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.server.connectivity.NetworkAgentInfo;

        i0 := @parameter1: int;

        r2 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo>;

        $z0 = specialinvoke r0.<com.android.server.ConnectivityService: boolean isNetworkBlocked(com.android.server.connectivity.NetworkAgentInfo,int)>(r1, i0);

        if $z0 == 0 goto label1;

        $r5 = new android.net.NetworkInfo;

        specialinvoke $r5.<android.net.NetworkInfo: void <init>(android.net.NetworkInfo)>(r2);

        r2 = $r5;

        $r6 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState BLOCKED>;

        virtualinvoke r2.<android.net.NetworkInfo: void setDetailedState(android.net.NetworkInfo$DetailedState,java.lang.String,java.lang.String)>($r6, null, null);

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>("returning Blocked NetworkInfo");

     label1:
        $r3 = r0.<com.android.server.ConnectivityService: com.android.server.net.LockdownVpnTracker mLockdownTracker>;

        if $r3 == null goto label2;

        $r4 = r0.<com.android.server.ConnectivityService: com.android.server.net.LockdownVpnTracker mLockdownTracker>;

        r2 = virtualinvoke $r4.<com.android.server.net.LockdownVpnTracker: android.net.NetworkInfo augmentNetworkInfo(android.net.NetworkInfo)>(r2);

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>("returning Locked NetworkInfo");

     label2:
        return r2;
    }

    public android.net.NetworkInfo getActiveNetworkInfo()
    {
        com.android.server.ConnectivityService r0;
        int i0, $i1;
        android.net.NetworkInfo $r1;

        r0 := @this: com.android.server.ConnectivityService;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceAccessPermission()>();

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = r0.<com.android.server.ConnectivityService: int mActiveDefaultNetwork>;

        $r1 = specialinvoke r0.<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfo(int,int)>($i1, i0);

        return $r1;
    }

    private android.net.NetworkInfo getProvisioningNetworkInfo()
    {
        com.android.server.ConnectivityService r0;
        android.net.NetworkInfo r1, r3;
        android.net.NetworkInfo[] r2;
        int i0, i1;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        boolean $z0;

        r0 := @this: com.android.server.ConnectivityService;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceAccessPermission()>();

        r1 = null;

        r2 = virtualinvoke r0.<com.android.server.ConnectivityService: android.net.NetworkInfo[] getAllNetworkInfo()>();

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        $z0 = virtualinvoke r3.<android.net.NetworkInfo: boolean isConnectedToProvisioningNetwork()>();

        if $z0 == 0 goto label2;

        r1 = r3;

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getProvisioningNetworkInfo: X provNi=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r7);

        return r1;
    }

    public android.net.NetworkInfo getProvisioningOrActiveNetworkInfo()
    {
        com.android.server.ConnectivityService r0;
        android.net.NetworkInfo r1;
        int i0, $i1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: com.android.server.ConnectivityService;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceAccessPermission()>();

        r1 = specialinvoke r0.<com.android.server.ConnectivityService: android.net.NetworkInfo getProvisioningNetworkInfo()>();

        if r1 != null goto label1;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = r0.<com.android.server.ConnectivityService: int mActiveDefaultNetwork>;

        r1 = specialinvoke r0.<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfo(int,int)>($i1, i0);

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getProvisioningOrActiveNetworkInfo: X provNi=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r5);

        return r1;
    }

    public android.net.NetworkInfo getActiveNetworkInfoUnfiltered()
    {
        com.android.server.ConnectivityService r0;
        int $i0, $i1;
        boolean $z0;
        android.net.NetworkInfo $r1;

        r0 := @this: com.android.server.ConnectivityService;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceAccessPermission()>();

        $i0 = r0.<com.android.server.ConnectivityService: int mActiveDefaultNetwork>;

        $z0 = staticinvoke <android.net.ConnectivityManager: boolean isNetworkTypeValid(int)>($i0);

        if $z0 == 0 goto label1;

        $i1 = r0.<com.android.server.ConnectivityService: int mActiveDefaultNetwork>;

        $r1 = specialinvoke r0.<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfoForType(int)>($i1);

        return $r1;

     label1:
        return null;
    }

    public android.net.NetworkInfo getActiveNetworkInfoForUid(int)
    {
        com.android.server.ConnectivityService r0;
        int i0, $i1;
        android.net.NetworkInfo $r1;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceConnectivityInternalPermission()>();

        $i1 = r0.<com.android.server.ConnectivityService: int mActiveDefaultNetwork>;

        $r1 = specialinvoke r0.<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfo(int,int)>($i1, i0);

        return $r1;
    }

    public android.net.NetworkInfo getNetworkInfo(int)
    {
        com.android.server.ConnectivityService r0;
        int i0, i1;
        android.net.NetworkInfo $r1;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceAccessPermission()>();

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r1 = specialinvoke r0.<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfo(int,int)>(i0, i1);

        return $r1;
    }

    private android.net.NetworkInfo getNetworkInfo(int, int)
    {
        com.android.server.ConnectivityService r0;
        int i0, i1;
        android.net.NetworkInfo r1, $r2;
        boolean $z0;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = null;

        $z0 = staticinvoke <android.net.ConnectivityManager: boolean isNetworkTypeValid(int)>(i0);

        if $z0 == 0 goto label1;

        $r2 = specialinvoke r0.<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfoForType(int)>(i0);

        if $r2 == null goto label1;

        r1 = specialinvoke r0.<com.android.server.ConnectivityService: android.net.NetworkInfo getFilteredNetworkInfo(int,int)>(i0, i1);

     label1:
        return r1;
    }

    public android.net.NetworkInfo getNetworkInfoForNetwork(android.net.Network)
    {
        com.android.server.ConnectivityService r0;
        android.net.Network r1;
        int i0, $i1;
        android.util.SparseArray r2, $r5, $r6;
        java.lang.Throwable r3, r4, $r11, $r12;
        java.lang.Object $r7;
        android.net.NetworkInfo $r9, $r10;
        com.android.server.connectivity.NetworkAgentInfo r13, r14;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.Network;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceAccessPermission()>();

        if r1 != null goto label01;

        return null;

     label01:
        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r5 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForNetId>;

        r2 = $r5;

        entermonitor $r5;

     label02:
        $r6 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForNetId>;

        $i1 = r1.<android.net.Network: int netId>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>($i1);

        r13 = (com.android.server.connectivity.NetworkAgentInfo) $r7;

        exitmonitor r2;

     label03:
        goto label06;

     label04:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label05:
        throw r3;

     label06:
        if r13 != null goto label07;

        return null;

     label07:
        r14 = r13;

        entermonitor r13;

     label08:
        $r9 = r13.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo>;

        if $r9 != null goto label10;

        exitmonitor r14;

     label09:
        return null;

     label10:
        $r10 = specialinvoke r0.<com.android.server.ConnectivityService: android.net.NetworkInfo getFilteredNetworkInfo(com.android.server.connectivity.NetworkAgentInfo,int)>(r13, i0);

        exitmonitor r14;

     label11:
        return $r10;

     label12:
        $r12 := @caughtexception;

        r4 = $r12;

        exitmonitor r14;

     label13:
        throw r4;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public android.net.NetworkInfo[] getAllNetworkInfo()
    {
        com.android.server.ConnectivityService r0;
        int i0, i1, $i2;
        java.util.ArrayList r1;
        android.net.NetworkInfo[] $r2, $r4;
        java.lang.Object[] $r3;
        android.net.NetworkInfo $r5, $r6;

        r0 := @this: com.android.server.ConnectivityService;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceAccessPermission()>();

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r1 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList()>();

        i1 = 0;

     label1:
        if i1 > 17 goto label3;

        $r5 = specialinvoke r0.<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfoForType(int)>(i1);

        if $r5 == null goto label2;

        $r6 = specialinvoke r0.<com.android.server.ConnectivityService: android.net.NetworkInfo getFilteredNetworkInfo(int,int)>(i1, i0);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $r2 = newarray (android.net.NetworkInfo)[$i2];

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r4 = (android.net.NetworkInfo[]) $r3;

        return $r4;
    }

    public android.net.Network getNetworkForType(int)
    {
        com.android.server.ConnectivityService r0;
        int i0, i1;
        com.android.server.connectivity.NetworkAgentInfo r1;
        boolean $z0;
        com.android.server.ConnectivityService$LegacyTypeTracker $r2;
        android.net.Network $r3;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceAccessPermission()>();

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z0 = specialinvoke r0.<com.android.server.ConnectivityService: boolean isNetworkBlocked(int,int)>(i0, i1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$LegacyTypeTracker mLegacyTypeTracker>;

        r1 = virtualinvoke $r2.<com.android.server.ConnectivityService$LegacyTypeTracker: com.android.server.connectivity.NetworkAgentInfo getNetworkForType(int)>(i0);

        if r1 != null goto label2;

        $r3 = null;

        goto label3;

     label2:
        $r3 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.Network network>;

     label3:
        return $r3;
    }

    public android.net.Network[] getAllNetworks()
    {
        com.android.server.ConnectivityService r0;
        java.util.ArrayList r1, $r4;
        android.util.SparseArray r2, $r5, $r6, $r11;
        int i0, $i1, $i2;
        java.lang.Throwable r3, $r15;
        android.net.Network[] $r7, $r9;
        java.lang.Object[] $r8;
        android.net.Network $r10, $r14;
        com.android.server.connectivity.NetworkAgentInfo $r12;
        java.lang.Object $r13;

        r0 := @this: com.android.server.ConnectivityService;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceAccessPermission()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        $r5 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForNetId>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        i0 = 0;

     label2:
        $r6 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForNetId>;

        $i1 = virtualinvoke $r6.<android.util.SparseArray: int size()>();

        if i0 >= $i1 goto label3;

        $r10 = new android.net.Network;

        $r11 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForNetId>;

        $r13 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r12 = (com.android.server.connectivity.NetworkAgentInfo) $r13;

        $r14 = $r12.<com.android.server.connectivity.NetworkAgentInfo: android.net.Network network>;

        specialinvoke $r10.<android.net.Network: void <init>(android.net.Network)>($r14);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        i0 = i0 + 1;

        goto label2;

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r15 := @caughtexception;

        r3 = $r15;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $r7 = newarray (android.net.Network)[$i2];

        $r8 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r9 = (android.net.Network[]) $r8;

        return $r9;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isNetworkSupported(int)
    {
        com.android.server.ConnectivityService r0;
        int i0;
        boolean $z0, $z1;
        android.net.NetworkInfo $r1;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceAccessPermission()>();

        $z0 = staticinvoke <android.net.ConnectivityManager: boolean isNetworkTypeValid(int)>(i0);

        if $z0 == 0 goto label1;

        $r1 = specialinvoke r0.<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfoForType(int)>(i0);

        if $r1 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public android.net.LinkProperties getActiveLinkProperties()
    {
        com.android.server.ConnectivityService r0;
        int $i0;
        android.net.LinkProperties $r1;

        r0 := @this: com.android.server.ConnectivityService;

        $i0 = r0.<com.android.server.ConnectivityService: int mActiveDefaultNetwork>;

        $r1 = virtualinvoke r0.<com.android.server.ConnectivityService: android.net.LinkProperties getLinkPropertiesForType(int)>($i0);

        return $r1;
    }

    public android.net.LinkProperties getLinkPropertiesForType(int)
    {
        com.android.server.ConnectivityService r0;
        int i0;
        boolean $z0;
        android.net.LinkProperties $r1;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceAccessPermission()>();

        $z0 = staticinvoke <android.net.ConnectivityManager: boolean isNetworkTypeValid(int)>(i0);

        if $z0 == 0 goto label1;

        $r1 = specialinvoke r0.<com.android.server.ConnectivityService: android.net.LinkProperties getLinkPropertiesForTypeInternal(int)>(i0);

        return $r1;

     label1:
        return null;
    }

    public android.net.LinkProperties getLinkProperties(android.net.Network)
    {
        com.android.server.ConnectivityService r0;
        android.net.Network r1;
        android.util.SparseArray r2, $r5, $r6;
        java.lang.Throwable r3, r4, $r11, $r12;
        int $i0;
        java.lang.Object $r7;
        android.net.LinkProperties $r9, $r10;
        com.android.server.connectivity.NetworkAgentInfo r13, r14;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.Network;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceAccessPermission()>();

        $r5 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForNetId>;

        r2 = $r5;

        entermonitor $r5;

     label01:
        $r6 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForNetId>;

        $i0 = r1.<android.net.Network: int netId>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        r13 = (com.android.server.connectivity.NetworkAgentInfo) $r7;

        exitmonitor r2;

     label02:
        goto label05;

     label03:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label04:
        throw r3;

     label05:
        if r13 == null goto label10;

        r14 = r13;

        entermonitor r13;

     label06:
        $r9 = new android.net.LinkProperties;

        $r10 = r13.<com.android.server.connectivity.NetworkAgentInfo: android.net.LinkProperties linkProperties>;

        specialinvoke $r9.<android.net.LinkProperties: void <init>(android.net.LinkProperties)>($r10);

        exitmonitor r14;

     label07:
        return $r9;

     label08:
        $r12 := @caughtexception;

        r4 = $r12;

        exitmonitor r14;

     label09:
        throw r4;

     label10:
        return null;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)
    {
        com.android.server.ConnectivityService r0;
        android.net.Network r1;
        android.util.SparseArray r2, $r5, $r6;
        java.lang.Throwable r3, r4, $r11, $r12;
        int $i0;
        java.lang.Object $r7;
        android.net.NetworkCapabilities $r9, $r10;
        com.android.server.connectivity.NetworkAgentInfo r13, r14;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.Network;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceAccessPermission()>();

        $r5 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForNetId>;

        r2 = $r5;

        entermonitor $r5;

     label01:
        $r6 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForNetId>;

        $i0 = r1.<android.net.Network: int netId>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        r13 = (com.android.server.connectivity.NetworkAgentInfo) $r7;

        exitmonitor r2;

     label02:
        goto label05;

     label03:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label04:
        throw r3;

     label05:
        if r13 == null goto label10;

        r14 = r13;

        entermonitor r13;

     label06:
        $r9 = new android.net.NetworkCapabilities;

        $r10 = r13.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkCapabilities networkCapabilities>;

        specialinvoke $r9.<android.net.NetworkCapabilities: void <init>(android.net.NetworkCapabilities)>($r10);

        exitmonitor r14;

     label07:
        return $r9;

     label08:
        $r12 := @caughtexception;

        r4 = $r12;

        exitmonitor r14;

     label09:
        throw r4;

     label10:
        return null;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public android.net.NetworkState[] getAllNetworkState()
    {
        com.android.server.ConnectivityService r0;
        int i0, i1, $i2;
        java.util.ArrayList r1;
        android.net.NetworkInfo r2, $r8;
        android.net.LinkProperties r3;
        android.net.NetworkCapabilities r4;
        android.net.NetworkState[] $r5, $r7;
        java.lang.Object[] $r6;
        android.net.NetworkState $r9;

        r0 := @this: com.android.server.ConnectivityService;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceAccessPermission()>();

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r1 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList()>();

        i1 = 0;

     label1:
        if i1 > 17 goto label3;

        $r8 = specialinvoke r0.<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfoForType(int)>(i1);

        if $r8 == null goto label2;

        r2 = specialinvoke r0.<com.android.server.ConnectivityService: android.net.NetworkInfo getFilteredNetworkInfo(int,int)>(i1, i0);

        r3 = specialinvoke r0.<com.android.server.ConnectivityService: android.net.LinkProperties getLinkPropertiesForTypeInternal(int)>(i1);

        r4 = specialinvoke r0.<com.android.server.ConnectivityService: android.net.NetworkCapabilities getNetworkCapabilitiesForType(int)>(i1);

        $r9 = new android.net.NetworkState;

        specialinvoke $r9.<android.net.NetworkState: void <init>(android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities)>(r2, r3, r4);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $r5 = newarray (android.net.NetworkState)[$i2];

        $r6 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (android.net.NetworkState[]) $r6;

        return $r7;
    }

    private android.net.NetworkState getNetworkStateUnchecked(int)
    {
        com.android.server.ConnectivityService r0;
        int i0;
        android.net.NetworkInfo r1;
        boolean $z0;
        android.net.NetworkState $r2;
        android.net.LinkProperties $r3;
        android.net.NetworkCapabilities $r4;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        $z0 = staticinvoke <android.net.ConnectivityManager: boolean isNetworkTypeValid(int)>(i0);

        if $z0 == 0 goto label1;

        r1 = specialinvoke r0.<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfoForType(int)>(i0);

        if r1 == null goto label1;

        $r2 = new android.net.NetworkState;

        $r3 = specialinvoke r0.<com.android.server.ConnectivityService: android.net.LinkProperties getLinkPropertiesForTypeInternal(int)>(i0);

        $r4 = specialinvoke r0.<com.android.server.ConnectivityService: android.net.NetworkCapabilities getNetworkCapabilitiesForType(int)>(i0);

        specialinvoke $r2.<android.net.NetworkState: void <init>(android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities)>(r1, $r3, $r4);

        return $r2;

     label1:
        return null;
    }

    public android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()
    {
        com.android.server.ConnectivityService r0;
        long l0;
        android.net.NetworkState r1;
        android.net.NetworkQuotaInfo r2;
        java.lang.Throwable r3, $r5;
        int $i1;
        android.net.INetworkPolicyManager $r4;
        android.os.RemoteException $r6;

        r0 := @this: com.android.server.ConnectivityService;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceAccessPermission()>();

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $i1 = r0.<com.android.server.ConnectivityService: int mActiveDefaultNetwork>;

        r1 = specialinvoke r0.<com.android.server.ConnectivityService: android.net.NetworkState getNetworkStateUnchecked(int)>($i1);

        if r1 == null goto label5;

     label2:
        $r4 = r0.<com.android.server.ConnectivityService: android.net.INetworkPolicyManager mPolicyManager>;

        r2 = interfaceinvoke $r4.<android.net.INetworkPolicyManager: android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)>(r1);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return r2;

     label4:
        $r6 := @caughtexception;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return null;

     label6:
        $r5 := @caughtexception;

        r3 = $r5;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r3;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public boolean isActiveNetworkMetered()
    {
        com.android.server.ConnectivityService r0;
        long l0;
        boolean z0;
        java.lang.Throwable r1, $r2;
        int $i1;

        r0 := @this: com.android.server.ConnectivityService;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceAccessPermission()>();

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $i1 = r0.<com.android.server.ConnectivityService: int mActiveDefaultNetwork>;

        z0 = specialinvoke r0.<com.android.server.ConnectivityService: boolean isNetworkMeteredUnchecked(int)>($i1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private boolean isNetworkMeteredUnchecked(int)
    {
        com.android.server.ConnectivityService r0;
        int i0;
        android.net.NetworkState r1;
        android.net.INetworkPolicyManager $r3;
        boolean $z0;
        android.os.RemoteException $r4;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<com.android.server.ConnectivityService: android.net.NetworkState getNetworkStateUnchecked(int)>(i0);

        if r1 == null goto label4;

     label1:
        $r3 = r0.<com.android.server.ConnectivityService: android.net.INetworkPolicyManager mPolicyManager>;

        $z0 = interfaceinvoke $r3.<android.net.INetworkPolicyManager: boolean isNetworkMetered(android.net.NetworkState)>(r1);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

     label4:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean requestRouteToHostAddress(int, byte[])
    {
        com.android.server.ConnectivityService r0;
        int i0, i1, i2;
        byte[] r1;
        java.net.InetAddress r2;
        java.net.UnknownHostException r3, $r34;
        android.net.NetworkInfo$DetailedState r4, $r16, $r24;
        com.android.server.connectivity.NetworkAgentInfo r5, r8, r46;
        java.lang.Throwable r6, r9, r10, $r42, $r43, $r45;
        android.net.LinkProperties r7;
        java.util.List $r11;
        java.lang.Integer $r12;
        boolean $z0, $z1, $z2, z3, z4;
        com.android.server.ConnectivityService$LegacyTypeTracker $r13, $r25;
        android.net.NetworkInfo $r15;
        android.net.Network $r17;
        java.lang.StringBuilder $r19, $r21, $r22, $r23, $r27, $r28, $r29, $r31, $r32, $r33, $r36, $r37, $r38, $r40, $r41;
        java.lang.String $r20, $r26, $r30, $r35, $r39, $r44;
        long l3;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceChangePermission()>();

        $r11 = r0.<com.android.server.ConnectivityService: java.util.List mProtectedNetworks>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = interfaceinvoke $r11.<java.util.List: boolean contains(java.lang.Object)>($r12);

        if $z0 == 0 goto label01;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceConnectivityInternalPermission()>();

     label01:
        r2 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>(r1);

     label02:
        goto label04;

     label03:
        $r34 := @caughtexception;

        r3 = $r34;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requestRouteToHostAddress got ");

        $r39 = virtualinvoke r3.<java.net.UnknownHostException: java.lang.String toString()>();

        $r38 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r44 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r44);

        return 0;

     label04:
        $z1 = staticinvoke <android.net.ConnectivityManager: boolean isNetworkTypeValid(int)>(i0);

        if $z1 != 0 goto label05;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requestRouteToHostAddress on invalid network: ");

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r35);

        return 0;

     label05:
        $r13 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$LegacyTypeTracker mLegacyTypeTracker>;

        r46 = virtualinvoke $r13.<com.android.server.ConnectivityService$LegacyTypeTracker: com.android.server.connectivity.NetworkAgentInfo getNetworkForType(int)>(i0);

        if r46 != null goto label08;

        $r25 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$LegacyTypeTracker mLegacyTypeTracker>;

        $z2 = virtualinvoke $r25.<com.android.server.ConnectivityService$LegacyTypeTracker: boolean isTypeSupported(int)>(i0);

        if $z2 != 0 goto label06;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requestRouteToHostAddress on unsupported network: ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r30 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r30);

        goto label07;

     label06:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requestRouteToHostAddress on down network: ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r26);

     label07:
        return 0;

     label08:
        r5 = r46;

        entermonitor r46;

     label09:
        $r15 = r46.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo>;

        r4 = virtualinvoke $r15.<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()>();

        exitmonitor r5;

     label10:
        goto label13;

     label11:
        $r43 := @caughtexception;

        r6 = $r43;

        exitmonitor r5;

     label12:
        throw r6;

     label13:
        $r16 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState CONNECTED>;

        if r4 == $r16 goto label14;

        $r24 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState CAPTIVE_PORTAL_CHECK>;

        if r4 == $r24 goto label14;

        return 0;

     label14:
        i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        l3 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label15:
        r8 = r46;

        entermonitor r46;

     label16:
        r7 = r46.<com.android.server.connectivity.NetworkAgentInfo: android.net.LinkProperties linkProperties>;

        $r17 = r46.<com.android.server.connectivity.NetworkAgentInfo: android.net.Network network>;

        i1 = $r17.<android.net.Network: int netId>;

        exitmonitor r8;

     label17:
        goto label20;

     label18:
        $r45 := @caughtexception;

        r9 = $r45;

        exitmonitor r8;

     label19:
        throw r9;

     label20:
        z3 = specialinvoke r0.<com.android.server.ConnectivityService: boolean addLegacyRouteToHost(android.net.LinkProperties,java.net.InetAddress,int,int)>(r7, r2, i1, i2);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requestRouteToHostAddress ok=");

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r20);

        z4 = z3;

     label21:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        return z4;

     label22:
        $r42 := @caughtexception;

        r10 = $r42;

     label23:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l3);

        throw r10;

        catch java.net.UnknownHostException from label01 to label02 with label03;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
        catch java.lang.Throwable from label15 to label21 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
    }

    private boolean addLegacyRouteToHost(android.net.LinkProperties, java.net.InetAddress, int, int)
    {
        com.android.server.ConnectivityService r0;
        android.net.LinkProperties r1;
        java.net.InetAddress r2, $r6, $r7;
        int i0, i1;
        android.net.RouteInfo r3, r22;
        java.lang.String r4, $r13, $r15, $r16, $r20;
        java.util.List $r5;
        boolean $z0;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r18, $r19, $r21;
        android.os.INetworkManagementService $r14;
        java.lang.Exception $r17, r23;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.LinkProperties;

        r2 := @parameter1: java.net.InetAddress;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r5 = virtualinvoke r1.<android.net.LinkProperties: java.util.List getAllRoutes()>();

        r3 = staticinvoke <android.net.RouteInfo: android.net.RouteInfo selectBestRoute(java.util.Collection,java.net.InetAddress)>($r5, r2);

        if r3 != null goto label1;

        $r16 = virtualinvoke r1.<android.net.LinkProperties: java.lang.String getInterfaceName()>();

        r22 = staticinvoke <android.net.RouteInfo: android.net.RouteInfo makeHostRoute(java.net.InetAddress,java.lang.String)>(r2, $r16);

        goto label3;

     label1:
        r4 = virtualinvoke r3.<android.net.RouteInfo: java.lang.String getInterface()>();

        $r6 = virtualinvoke r3.<android.net.RouteInfo: java.net.InetAddress getGateway()>();

        $z0 = virtualinvoke $r6.<java.net.InetAddress: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        r22 = staticinvoke <android.net.RouteInfo: android.net.RouteInfo makeHostRoute(java.net.InetAddress,java.lang.String)>(r2, r4);

        goto label3;

     label2:
        $r7 = virtualinvoke r3.<android.net.RouteInfo: java.net.InetAddress getGateway()>();

        r22 = staticinvoke <android.net.RouteInfo: android.net.RouteInfo makeHostRoute(java.net.InetAddress,java.net.InetAddress,java.lang.String)>(r2, $r7, r4);

     label3:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r22);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for interface ");

        $r13 = virtualinvoke r22.<android.net.RouteInfo: java.lang.String getInterface()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r15);

     label4:
        $r14 = r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd>;

        interfaceinvoke $r14.<android.os.INetworkManagementService: void addLegacyRouteForNetId(int,android.net.RouteInfo,int)>(i0, r22, i1);

     label5:
        goto label7;

     label6:
        $r17 := @caughtexception;

        r23 = $r17;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception trying to add a route: ");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r20);

        return 0;

     label7:
        return 1;

        catch java.lang.Exception from label4 to label5 with label6;
    }

    public void setDataDependency(int, boolean)
    {
        com.android.server.ConnectivityService r0;
        int i0;
        boolean z0;
        com.android.server.ConnectivityService$InternalHandler $r1, $r2;
        android.os.Message $r3;
        byte $b1;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceConnectivityInternalPermission()>();

        $r2 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r1 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        if z0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        $r3 = virtualinvoke $r1.<com.android.server.ConnectivityService$InternalHandler: android.os.Message obtainMessage(int,int,int)>(10, $b1, i0);

        virtualinvoke $r2.<com.android.server.ConnectivityService$InternalHandler: boolean sendMessage(android.os.Message)>($r3);

        return;
    }

    private void handleSetDependencyMet(int, boolean)
    {
        com.android.server.ConnectivityService r0;
        int i0;
        boolean z0;
        android.net.NetworkStateTracker[] $r1, $r10;
        android.net.NetworkStateTracker $r2, $r11;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<com.android.server.ConnectivityService: android.net.NetworkStateTracker[] mNetTrackers>;

        $r2 = $r1[i0];

        if $r2 == null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleSetDependencyMet(");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r9);

        $r10 = r0.<com.android.server.ConnectivityService: android.net.NetworkStateTracker[] mNetTrackers>;

        $r11 = $r10[i0];

        interfaceinvoke $r11.<android.net.NetworkStateTracker: void setDependencyMet(boolean)>(z0);

     label1:
        return;
    }

    public void setPolicyDataEnable(int, boolean)
    {
        com.android.server.ConnectivityService r0;
        int i0;
        boolean z0;
        android.content.Context $r1;
        com.android.server.ConnectivityService$InternalHandler $r2, $r3;
        android.os.Message $r4;
        byte $b1;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.MANAGE_NETWORK_POLICY", "ConnectivityService");

        $r3 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r2 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        if z0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        $r4 = virtualinvoke $r2.<com.android.server.ConnectivityService$InternalHandler: android.os.Message obtainMessage(int,int,int)>(12, i0, $b1);

        virtualinvoke $r3.<com.android.server.ConnectivityService$InternalHandler: boolean sendMessage(android.os.Message)>($r4);

        return;
    }

    private void handleSetPolicyDataEnable(int, boolean)
    {
        com.android.server.ConnectivityService r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        return;
    }

    private void enforceInternetPermission()
    {
        com.android.server.ConnectivityService r0;
        android.content.Context $r1;

        r0 := @this: com.android.server.ConnectivityService;

        $r1 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.INTERNET", "ConnectivityService");

        return;
    }

    private void enforceAccessPermission()
    {
        com.android.server.ConnectivityService r0;
        android.content.Context $r1;

        r0 := @this: com.android.server.ConnectivityService;

        $r1 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_NETWORK_STATE", "ConnectivityService");

        return;
    }

    private void enforceChangePermission()
    {
        com.android.server.ConnectivityService r0;
        android.content.Context $r1;

        r0 := @this: com.android.server.ConnectivityService;

        $r1 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.CHANGE_NETWORK_STATE", "ConnectivityService");

        return;
    }

    private void enforceTetherAccessPermission()
    {
        com.android.server.ConnectivityService r0;
        android.content.Context $r1;

        r0 := @this: com.android.server.ConnectivityService;

        $r1 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_NETWORK_STATE", "ConnectivityService");

        return;
    }

    private void enforceConnectivityInternalPermission()
    {
        com.android.server.ConnectivityService r0;
        android.content.Context $r1;

        r0 := @this: com.android.server.ConnectivityService;

        $r1 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        virtualinvoke $r1.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.CONNECTIVITY_INTERNAL", "ConnectivityService");

        return;
    }

    public void sendConnectedBroadcast(android.net.NetworkInfo)
    {
        com.android.server.ConnectivityService r0;
        android.net.NetworkInfo r1;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.NetworkInfo;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceConnectivityInternalPermission()>();

        specialinvoke r0.<com.android.server.ConnectivityService: void sendGeneralBroadcast(android.net.NetworkInfo,java.lang.String)>(r1, "android.net.conn.CONNECTIVITY_CHANGE_IMMEDIATE");

        specialinvoke r0.<com.android.server.ConnectivityService: void sendGeneralBroadcast(android.net.NetworkInfo,java.lang.String)>(r1, "android.net.conn.CONNECTIVITY_CHANGE");

        return;
    }

    private void sendConnectedBroadcastDelayed(android.net.NetworkInfo, int)
    {
        com.android.server.ConnectivityService r0;
        android.net.NetworkInfo r1;
        int i0;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.NetworkInfo;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.ConnectivityService: void sendGeneralBroadcast(android.net.NetworkInfo,java.lang.String)>(r1, "android.net.conn.CONNECTIVITY_CHANGE_IMMEDIATE");

        specialinvoke r0.<com.android.server.ConnectivityService: void sendGeneralBroadcastDelayed(android.net.NetworkInfo,java.lang.String,int)>(r1, "android.net.conn.CONNECTIVITY_CHANGE", i0);

        return;
    }

    private void sendInetConditionBroadcast(android.net.NetworkInfo)
    {
        com.android.server.ConnectivityService r0;
        android.net.NetworkInfo r1;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.NetworkInfo;

        specialinvoke r0.<com.android.server.ConnectivityService: void sendGeneralBroadcast(android.net.NetworkInfo,java.lang.String)>(r1, "android.net.conn.INET_CONDITION_ACTION");

        return;
    }

    private android.content.Intent makeGeneralIntent(android.net.NetworkInfo, java.lang.String)
    {
        com.android.server.ConnectivityService r0;
        android.net.NetworkInfo r1, $r6;
        java.lang.String r2, $r9, $r10, $r13, $r14;
        android.content.Intent r3, $r5;
        com.android.server.net.LockdownVpnTracker $r4, $r17;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.NetworkInfo;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<com.android.server.ConnectivityService: com.android.server.net.LockdownVpnTracker mLockdownTracker>;

        if $r4 == null goto label1;

        $r17 = r0.<com.android.server.ConnectivityService: com.android.server.net.LockdownVpnTracker mLockdownTracker>;

        r1 = virtualinvoke $r17.<com.android.server.net.LockdownVpnTracker: android.net.NetworkInfo augmentNetworkInfo(android.net.NetworkInfo)>(r1);

     label1:
        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>(r2);

        r3 = $r5;

        $r6 = new android.net.NetworkInfo;

        specialinvoke $r6.<android.net.NetworkInfo: void <init>(android.net.NetworkInfo)>(r1);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("networkInfo", $r6);

        $i0 = virtualinvoke r1.<android.net.NetworkInfo: int getType()>();

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("networkType", $i0);

        $z0 = virtualinvoke r1.<android.net.NetworkInfo: boolean isFailover()>();

        if $z0 == 0 goto label2;

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("isFailover", 1);

        virtualinvoke r1.<android.net.NetworkInfo: void setFailover(boolean)>(0);

     label2:
        $r9 = virtualinvoke r1.<android.net.NetworkInfo: java.lang.String getReason()>();

        if $r9 == null goto label3;

        $r14 = virtualinvoke r1.<android.net.NetworkInfo: java.lang.String getReason()>();

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("reason", $r14);

     label3:
        $r10 = virtualinvoke r1.<android.net.NetworkInfo: java.lang.String getExtraInfo()>();

        if $r10 == null goto label4;

        $r13 = virtualinvoke r1.<android.net.NetworkInfo: java.lang.String getExtraInfo()>();

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("extraInfo", $r13);

     label4:
        $i1 = r0.<com.android.server.ConnectivityService: int mDefaultInetConditionPublished>;

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("inetCondition", $i1);

        return r3;
    }

    private void sendGeneralBroadcast(android.net.NetworkInfo, java.lang.String)
    {
        com.android.server.ConnectivityService r0;
        android.net.NetworkInfo r1;
        java.lang.String r2;
        android.content.Intent $r3;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.NetworkInfo;

        r2 := @parameter1: java.lang.String;

        $r3 = specialinvoke r0.<com.android.server.ConnectivityService: android.content.Intent makeGeneralIntent(android.net.NetworkInfo,java.lang.String)>(r1, r2);

        specialinvoke r0.<com.android.server.ConnectivityService: void sendStickyBroadcast(android.content.Intent)>($r3);

        return;
    }

    private void sendGeneralBroadcastDelayed(android.net.NetworkInfo, java.lang.String, int)
    {
        com.android.server.ConnectivityService r0;
        android.net.NetworkInfo r1;
        java.lang.String r2;
        int i0;
        android.content.Intent $r3;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.NetworkInfo;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r3 = specialinvoke r0.<com.android.server.ConnectivityService: android.content.Intent makeGeneralIntent(android.net.NetworkInfo,java.lang.String)>(r1, r2);

        specialinvoke r0.<com.android.server.ConnectivityService: void sendStickyBroadcastDelayed(android.content.Intent,int)>($r3, i0);

        return;
    }

    private void sendDataActivityBroadcast(int, boolean, long)
    {
        com.android.server.ConnectivityService r0;
        int i0;
        boolean z0;
        long l1, l2;
        android.content.Intent r1, $r3;
        java.lang.Throwable r2, $r9;
        android.os.UserHandle $r7;
        android.content.Context $r8;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        l1 := @parameter2: long;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.net.conn.DATA_ACTIVITY_CHANGE");

        r1 = $r3;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("deviceType", i0);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("isActive", z0);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("tsNanos", l1);

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r8 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r7 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r8.<android.content.Context: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>(r1, $r7, "android.permission.RECEIVE_DATA_ACTIVITY_CHANGE", null, null, 0, null, null);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label5;

     label3:
        $r9 := @caughtexception;

        r2 = $r9;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void sendStickyBroadcast(android.content.Intent)
    {
        com.android.server.ConnectivityService r0, r2;
        android.content.Intent r1, $r14;
        long l0;
        java.lang.Throwable r3, r4, $r15, $r16;
        boolean $z0;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r9, $r11;
        android.content.Context $r12;
        android.os.UserHandle $r13;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.content.Intent;

        r2 = r0;

        entermonitor r0;

     label01:
        $z0 = r0.<com.android.server.ConnectivityService: boolean mSystemReady>;

        if $z0 != 0 goto label02;

        $r14 = new android.content.Intent;

        specialinvoke $r14.<android.content.Intent: void <init>(android.content.Intent)>(r1);

        r0.<com.android.server.ConnectivityService: android.content.Intent mInitialBroadcast> = $r14;

     label02:
        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendStickyBroadcast: action=");

        $r9 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r11);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label03:
        $r12 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r13 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r12.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r1, $r13);

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label07;

     label05:
        $r16 := @caughtexception;

        r3 = $r16;

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r3;

     label07:
        exitmonitor r2;

     label08:
        goto label11;

     label09:
        $r15 := @caughtexception;

        r4 = $r15;

        exitmonitor r2;

     label10:
        throw r4;

     label11:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private void sendStickyBroadcastDelayed(android.content.Intent, int)
    {
        com.android.server.ConnectivityService r0;
        android.content.Intent r1;
        int i0;
        com.android.server.ConnectivityService$InternalHandler $r2, $r3;
        android.os.Message $r4;
        long $l1;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        if i0 > 0 goto label1;

        specialinvoke r0.<com.android.server.ConnectivityService: void sendStickyBroadcast(android.content.Intent)>(r1);

        goto label2;

     label1:
        $r3 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r2 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r4 = virtualinvoke $r2.<com.android.server.ConnectivityService$InternalHandler: android.os.Message obtainMessage(int,java.lang.Object)>(11, r1);

        $l1 = (long) i0;

        virtualinvoke $r3.<com.android.server.ConnectivityService$InternalHandler: boolean sendMessageDelayed(android.os.Message,long)>($r4, $l1);

     label2:
        return;
    }

    void systemReady()
    {
        com.android.server.ConnectivityService r0, r2;
        android.content.Intent r1, $r4, $r12, $r24;
        java.lang.Throwable r3, $r26;
        android.content.Context $r5, $r8, $r23, $r27;
        java.lang.String $r6;
        android.app.PendingIntent $r9, $r10;
        com.android.server.ConnectivityService$InternalHandler $r13, $r14, $r16, $r18;
        android.os.Message $r15, $r17;
        boolean $z1;
        com.android.server.connectivity.PermissionMonitor $r19;
        android.content.BroadcastReceiver $r20;
        android.content.IntentFilter $r21, r28;
        android.os.UserHandle $r25;

        r0 := @this: com.android.server.ConnectivityService;

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.net.ConnectivityService.action.PKT_CNT_SAMPLE_INTERVAL_ELAPSED");

        r1 = $r4;

        $r5 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r6);

        $r8 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r9 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r8, 0, r1, 0);

        r0.<com.android.server.ConnectivityService: android.app.PendingIntent mSampleIntervalElapsedIntent> = $r9;

        $r10 = r0.<com.android.server.ConnectivityService: android.app.PendingIntent mSampleIntervalElapsedIntent>;

        virtualinvoke r0.<com.android.server.ConnectivityService: void setAlarm(int,android.app.PendingIntent)>(60000, $r10);

        specialinvoke r0.<com.android.server.ConnectivityService: void loadGlobalProxy()>();

        r2 = r0;

        entermonitor r0;

     label1:
        r0.<com.android.server.ConnectivityService: boolean mSystemReady> = 1;

        $r12 = r0.<com.android.server.ConnectivityService: android.content.Intent mInitialBroadcast>;

        if $r12 == null goto label2;

        $r27 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r24 = r0.<com.android.server.ConnectivityService: android.content.Intent mInitialBroadcast>;

        $r25 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r27.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>($r24, $r25);

        r0.<com.android.server.ConnectivityService: android.content.Intent mInitialBroadcast> = null;

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r26 := @caughtexception;

        r3 = $r26;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        $r14 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r13 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r15 = virtualinvoke $r13.<com.android.server.ConnectivityService$InternalHandler: android.os.Message obtainMessage(int)>(9);

        virtualinvoke $r14.<com.android.server.ConnectivityService$InternalHandler: boolean sendMessage(android.os.Message)>($r15);

        $z1 = virtualinvoke r0.<com.android.server.ConnectivityService: boolean updateLockdownVpn()>();

        if $z1 != 0 goto label7;

        $r21 = new android.content.IntentFilter;

        specialinvoke $r21.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.USER_PRESENT");

        r28 = $r21;

        $r23 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r20 = r0.<com.android.server.ConnectivityService: android.content.BroadcastReceiver mUserPresentReceiver>;

        virtualinvoke $r23.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r20, r28);

     label7:
        $r18 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r16 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r17 = virtualinvoke $r16.<com.android.server.ConnectivityService$InternalHandler: android.os.Message obtainMessage(int)>(25);

        virtualinvoke $r18.<com.android.server.ConnectivityService$InternalHandler: boolean sendMessage(android.os.Message)>($r17);

        $r19 = r0.<com.android.server.ConnectivityService: com.android.server.connectivity.PermissionMonitor mPermissionMonitor>;

        virtualinvoke $r19.<com.android.server.connectivity.PermissionMonitor: void startMonitoring()>();

        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void captivePortalCheckCompleted(android.net.NetworkInfo, boolean)
    {
        com.android.server.ConnectivityService r0;
        android.net.NetworkInfo r1;
        boolean z0;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.NetworkInfo;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceConnectivityInternalPermission()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("captivePortalCheckCompleted: ni=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" captive=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r7);

        return;
    }

    private void setupDataActivityTracking(com.android.server.connectivity.NetworkAgentInfo)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        java.lang.String r2, $r15;
        int i0;
        byte b1;
        java.lang.Exception r3, $r12;
        android.net.LinkProperties $r4;
        android.net.NetworkCapabilities $r5, $r6;
        boolean $z0, $z1;
        android.os.INetworkManagementService $r7;
        android.content.Context $r8, $r11;
        android.content.ContentResolver $r9, $r10;
        java.lang.StringBuilder $r13, $r14, $r16;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.server.connectivity.NetworkAgentInfo;

        $r4 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.LinkProperties linkProperties>;

        r2 = virtualinvoke $r4.<android.net.LinkProperties: java.lang.String getInterfaceName()>();

        b1 = -1;

        $r5 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkCapabilities networkCapabilities>;

        $z0 = virtualinvoke $r5.<android.net.NetworkCapabilities: boolean hasTransport(int)>(0);

        if $z0 == 0 goto label1;

        $r11 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r10 = virtualinvoke $r11.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r10, "data_activity_timeout_mobile", 5);

        b1 = 0;

        goto label3;

     label1:
        $r6 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkCapabilities networkCapabilities>;

        $z1 = virtualinvoke $r6.<android.net.NetworkCapabilities: boolean hasTransport(int)>(1);

        if $z1 == 0 goto label2;

        $r8 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r9, "data_activity_timeout_wifi", 0);

        b1 = 1;

        goto label3;

     label2:
        i0 = 0;

     label3:
        if i0 <= 0 goto label7;

        if r2 == null goto label7;

        if b1 == -1 goto label7;

     label4:
        $r7 = r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd>;

        interfaceinvoke $r7.<android.os.INetworkManagementService: void addIdleTimer(java.lang.String,int,int)>(r2, i0, b1);

     label5:
        goto label7;

     label6:
        $r12 := @caughtexception;

        r3 = $r12;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in setupDataActivityTracking ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r15);

     label7:
        return;

        catch java.lang.Exception from label4 to label5 with label6;
    }

    private void removeDataActivityTracking(com.android.server.connectivity.NetworkAgentInfo)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        java.lang.String r2, $r11;
        android.net.NetworkCapabilities r3;
        java.lang.Exception r4, $r7;
        android.net.LinkProperties $r5;
        boolean $z0, $z1;
        android.os.INetworkManagementService $r6;
        java.lang.StringBuilder $r8, $r9, $r10;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.server.connectivity.NetworkAgentInfo;

        $r5 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.LinkProperties linkProperties>;

        r2 = virtualinvoke $r5.<android.net.LinkProperties: java.lang.String getInterfaceName()>();

        r3 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkCapabilities networkCapabilities>;

        if r2 == null goto label4;

        $z0 = virtualinvoke r3.<android.net.NetworkCapabilities: boolean hasTransport(int)>(0);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r3.<android.net.NetworkCapabilities: boolean hasTransport(int)>(1);

        if $z1 == 0 goto label4;

     label1:
        $r6 = r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd>;

        interfaceinvoke $r6.<android.os.INetworkManagementService: void removeIdleTimer(java.lang.String)>(r2);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in removeDataActivityTracking ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r11);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void updateMtu(android.net.LinkProperties, android.net.LinkProperties)
    {
        com.android.server.ConnectivityService r0;
        android.net.LinkProperties r1, r2;
        java.lang.String r3, $r11, $r16, $r22;
        int i0;
        java.lang.Exception r4, $r18;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r12, $r13, $r14, $r15, $r17, $r19, $r20, $r21;
        android.os.INetworkManagementService $r10;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.LinkProperties;

        r2 := @parameter1: android.net.LinkProperties;

        r3 = virtualinvoke r1.<android.net.LinkProperties: java.lang.String getInterfaceName()>();

        i0 = virtualinvoke r1.<android.net.LinkProperties: int getMtu()>();

        if r2 == null goto label1;

        $z3 = virtualinvoke r1.<android.net.LinkProperties: boolean isIdenticalMtu(android.net.LinkProperties)>(r2);

        if $z3 == 0 goto label1;

        return;

     label1:
        $z0 = virtualinvoke r1.<android.net.LinkProperties: boolean hasGlobalIPv6Address()>();

        $z1 = staticinvoke <android.net.LinkProperties: boolean isValidMtu(int,boolean)>(i0, $z0);

        if $z1 != 0 goto label2;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected mtu value: ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r16);

        return;

     label2:
        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z2 == 0 goto label3;

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>("Setting MTU size with null iface.");

        return;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting MTU size: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r11);

        $r10 = r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd>;

        interfaceinvoke $r10.<android.os.INetworkManagementService: void setMtu(java.lang.String,int)>(r3, i0);

     label4:
        goto label6;

     label5:
        $r18 := @caughtexception;

        r4 = $r18;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception in setMtu()");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ConnectivityService", $r22);

     label6:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    private void updateTcpBufferSizes(com.android.server.connectivity.NetworkAgentInfo)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        java.lang.String r2, $r12, $r13, $r16, $r18, $r19, $r20, $r21, $r22, $r23, $r26, $r31;
        java.lang.String[] r3;
        int i0, $i2, $i3, $i4;
        java.lang.Integer r5;
        boolean $z0, $z1;
        android.net.LinkProperties $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r14, $r15, $r17, $r27, $r28, $r30;
        android.content.Context $r24;
        android.content.ContentResolver $r25;
        java.io.IOException $r29, r32;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.server.connectivity.NetworkAgentInfo;

        $z0 = specialinvoke r0.<com.android.server.ConnectivityService: boolean isDefaultNetwork(com.android.server.connectivity.NetworkAgentInfo)>(r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r7 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.LinkProperties linkProperties>;

        r2 = virtualinvoke $r7.<android.net.LinkProperties: java.lang.String getTcpBufferSizes()>();

        r3 = null;

        if r2 == null goto label2;

        r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

     label2:
        if r3 == null goto label3;

        $i3 = lengthof r3;

        if $i3 == 6 goto label4;

     label3:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid tcpBufferSizes string: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", using defaults");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r12);

        r2 = "4096,87380,110208,4096,16384,110208";

        r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

     label4:
        $r13 = r0.<com.android.server.ConnectivityService: java.lang.String mCurrentTcpBufferSizes>;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 == 0 goto label5;

        return;

     label5:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting tx/rx TCP buffers to ");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ConnectivityService", $r16);

        $r18 = r3[0];

        staticinvoke <android.os.FileUtils: void stringToFile(java.lang.String,java.lang.String)>("/sys/kernel/ipv4/tcp_rmem_min", $r18);

        $r20 = r3[1];

        staticinvoke <android.os.FileUtils: void stringToFile(java.lang.String,java.lang.String)>("/sys/kernel/ipv4/tcp_rmem_def", $r20);

        $r19 = r3[2];

        staticinvoke <android.os.FileUtils: void stringToFile(java.lang.String,java.lang.String)>("/sys/kernel/ipv4/tcp_rmem_max", $r19);

        $r22 = r3[3];

        staticinvoke <android.os.FileUtils: void stringToFile(java.lang.String,java.lang.String)>("/sys/kernel/ipv4/tcp_wmem_min", $r22);

        $r21 = r3[4];

        staticinvoke <android.os.FileUtils: void stringToFile(java.lang.String,java.lang.String)>("/sys/kernel/ipv4/tcp_wmem_def", $r21);

        $r23 = r3[5];

        staticinvoke <android.os.FileUtils: void stringToFile(java.lang.String,java.lang.String)>("/sys/kernel/ipv4/tcp_wmem_max", $r23);

        r0.<com.android.server.ConnectivityService: java.lang.String mCurrentTcpBufferSizes> = r2;

     label6:
        goto label8;

     label7:
        $r29 := @caughtexception;

        r32 = $r29;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t set TCP buffer sizes:");

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r32);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r31);

     label8:
        i0 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("net.tcp.default_init_rwnd", 0);

        $r24 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r25 = virtualinvoke $r24.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i2 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r25, "tcp_default_init_rwnd", i0);

        r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $i4 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

        if $i4 == 0 goto label9;

        $r26 = virtualinvoke r5.<java.lang.Integer: java.lang.String toString()>();

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("sys.sysctl.tcp_def_init_rwnd", $r26);

     label9:
        return;

        catch java.io.IOException from label5 to label6 with label7;
    }

    private void flushVmDnsCache()
    {
        com.android.server.ConnectivityService r0;
        android.content.Intent r1, $r3;
        long l0;
        java.lang.Throwable r2, $r8;
        android.os.UserHandle $r6;
        android.content.Context $r7;

        r0 := @this: com.android.server.ConnectivityService;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.CLEAR_DNS_CACHE");

        r1 = $r3;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(536870912);

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r7 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r6 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r7.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r1, $r6);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label5;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getRestoreDefaultNetworkDelay(int)
    {
        com.android.server.ConnectivityService r0;
        int i0, $i1, $i2, i3;
        java.lang.String r1;
        android.net.NetworkConfig[] $r3, $r5;
        android.net.NetworkConfig $r4, $r6;
        java.lang.Integer $r7;
        java.lang.NumberFormatException $r8;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("android.telephony.apn-restore");

        if r1 == null goto label4;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 == 0 goto label4;

     label1:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(r1);

        $i2 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

     label2:
        return $i2;

     label3:
        $r8 := @caughtexception;

     label4:
        i3 = 60000;

        if i0 > 17 goto label5;

        $r3 = r0.<com.android.server.ConnectivityService: android.net.NetworkConfig[] mNetConfigs>;

        $r4 = $r3[i0];

        if $r4 == null goto label5;

        $r5 = r0.<com.android.server.ConnectivityService: android.net.NetworkConfig[] mNetConfigs>;

        $r6 = $r5[i0];

        i3 = $r6.<android.net.NetworkConfig: int restoreTime>;

     label5:
        return i3;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.ConnectivityService r0, r80;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        com.android.internal.util.IndentingPrintWriter r4, $r10;
        java.util.Iterator r5, r75, r76, r77;
        com.android.server.ConnectivityService$NetworkFactoryInfo r6;
        com.android.server.connectivity.NetworkAgentInfo r7, r74;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        android.net.NetworkRequest r8, $r14, $r68;
        java.lang.Throwable r9, $r71;
        android.content.Context $r11;
        java.util.HashMap $r12, $r19, $r21;
        java.util.Collection $r13, $r18, $r20;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r15, $r43, $r49, $r51, $r56, $r62, $r65;
        android.util.SparseArray $r16, $r59, $r66;
        android.net.Network $r17;
        java.lang.StringBuilder $r22, $r23, $r24, $r29, $r30, $r32, $r33, $r34, $r36, $r38, $r46, $r47, $r52, $r53, $r55, $r63, $r64, $r70, $r72, $r73;
        com.android.server.ConnectivityService$LegacyTypeTracker $r25;
        java.lang.String $r27, $r31, $r35, $r37, $r42, $r48, $r50, $r57, $r58, $r61, $r67, $r69;
        android.os.PowerManager$WakeLock $r28;
        java.util.ArrayList $r39, $r40, $r44, $r60;
        com.android.server.connectivity.Tethering $r41;
        android.net.NetworkInfo$State $r45;
        android.net.NetworkInfo$DetailedState $r54;
        com.android.server.ConnectivityService$NetworkRequestInfo r78;
        android.net.NetworkInfo r79;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r10 = new com.android.internal.util.IndentingPrintWriter;

        specialinvoke $r10.<com.android.internal.util.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String)>(r2, "  ");

        r4 = $r10;

        $r11 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $i1 = virtualinvoke $r11.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i1 == 0 goto label01;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump ConnectivityService from from pid=");

        $i8 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r72 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i9 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r70 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r69 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r69);

        return;

     label01:
        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("NetworkFactories for:");

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void increaseIndent()>();

        $r12 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkFactoryInfos>;

        $r13 = virtualinvoke $r12.<java.util.HashMap: java.util.Collection values()>();

        r5 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r62 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.android.server.ConnectivityService$NetworkFactoryInfo) $r62;

        $r61 = r6.<com.android.server.ConnectivityService$NetworkFactoryInfo: java.lang.String name>;

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r61);

        goto label02;

     label03:
        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void decreaseIndent()>();

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void println()>();

        $r16 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForRequestId>;

        $r14 = r0.<com.android.server.ConnectivityService: android.net.NetworkRequest mDefaultRequest>;

        $i2 = $r14.<android.net.NetworkRequest: int requestId>;

        $r15 = virtualinvoke $r16.<android.util.SparseArray: java.lang.Object get(int)>($i2);

        r74 = (com.android.server.connectivity.NetworkAgentInfo) $r15;

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>("Active default network: ");

        if r74 != null goto label04;

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("none");

        goto label05;

     label04:
        $r17 = r74.<com.android.server.connectivity.NetworkAgentInfo: android.net.Network network>;

        $i3 = $r17.<android.net.Network: int netId>;

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void println(int)>($i3);

     label05:
        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void println()>();

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Current Networks:");

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void increaseIndent()>();

        $r19 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkAgentInfos>;

        $r18 = virtualinvoke $r19.<java.util.HashMap: java.util.Collection values()>();

        r75 = interfaceinvoke $r18.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke r75.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r51 = interfaceinvoke r75.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.android.server.connectivity.NetworkAgentInfo) $r51;

        $r58 = virtualinvoke r7.<com.android.server.connectivity.NetworkAgentInfo: java.lang.String toString()>();

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r58);

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void increaseIndent()>();

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Requests:");

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void increaseIndent()>();

        i0 = 0;

     label07:
        $r59 = r7.<com.android.server.connectivity.NetworkAgentInfo: android.util.SparseArray networkRequests>;

        $i7 = virtualinvoke $r59.<android.util.SparseArray: int size()>();

        if i0 >= $i7 goto label08;

        $r66 = r7.<com.android.server.connectivity.NetworkAgentInfo: android.util.SparseArray networkRequests>;

        $r65 = virtualinvoke $r66.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r68 = (android.net.NetworkRequest) $r65;

        $r67 = virtualinvoke $r68.<android.net.NetworkRequest: java.lang.String toString()>();

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r67);

        i0 = i0 + 1;

        goto label07;

     label08:
        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void decreaseIndent()>();

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Lingered:");

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void increaseIndent()>();

        $r60 = r7.<com.android.server.connectivity.NetworkAgentInfo: java.util.ArrayList networkLingered>;

        r76 = virtualinvoke $r60.<java.util.ArrayList: java.util.Iterator iterator()>();

     label09:
        $z4 = interfaceinvoke r76.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label10;

        $r56 = interfaceinvoke r76.<java.util.Iterator: java.lang.Object next()>();

        r8 = (android.net.NetworkRequest) $r56;

        $r57 = virtualinvoke r8.<android.net.NetworkRequest: java.lang.String toString()>();

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r57);

        goto label09;

     label10:
        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void decreaseIndent()>();

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void decreaseIndent()>();

        goto label06;

     label11:
        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void decreaseIndent()>();

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void println()>();

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Network Requests:");

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void increaseIndent()>();

        $r21 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkRequests>;

        $r20 = virtualinvoke $r21.<java.util.HashMap: java.util.Collection values()>();

        r77 = interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>();

     label12:
        $z2 = interfaceinvoke r77.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label13;

        $r49 = interfaceinvoke r77.<java.util.Iterator: java.lang.Object next()>();

        r78 = (com.android.server.ConnectivityService$NetworkRequestInfo) $r49;

        $r50 = virtualinvoke r78.<com.android.server.ConnectivityService$NetworkRequestInfo: java.lang.String toString()>();

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r50);

        goto label12;

     label13:
        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void println()>();

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void decreaseIndent()>();

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mActiveDefaultNetwork: ");

        $i4 = r0.<com.android.server.ConnectivityService: int mActiveDefaultNetwork>;

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>($r27);

        $i5 = r0.<com.android.server.ConnectivityService: int mActiveDefaultNetwork>;

        if $i5 == -1 goto label14;

        r79 = virtualinvoke r0.<com.android.server.ConnectivityService: android.net.NetworkInfo getActiveNetworkInfo()>();

        if r79 == null goto label14;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r45 = virtualinvoke r79.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r52 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r45);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r54 = virtualinvoke r79.<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()>();

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r54);

        $r48 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void print(java.lang.String)>($r48);

     label14:
        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void println()>();

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("mLegacyTypeTracker:");

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void increaseIndent()>();

        $r25 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$LegacyTypeTracker mLegacyTypeTracker>;

        virtualinvoke $r25.<com.android.server.ConnectivityService$LegacyTypeTracker: void dump(com.android.internal.util.IndentingPrintWriter)>(r4);

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void decreaseIndent()>();

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void println()>();

        r80 = r0;

        entermonitor r0;

     label15:
        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NetworkTransitionWakeLock is currently ");

        $r28 = r0.<com.android.server.ConnectivityService: android.os.PowerManager$WakeLock mNetTransitionWakeLock>;

        $z3 = virtualinvoke $r28.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z3 == 0 goto label16;

        $r42 = "";

        goto label17;

     label16:
        $r42 = "not ";

     label17:
        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("held.");

        $r31 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r31);

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("It was last requested for ");

        $r37 = r0.<com.android.server.ConnectivityService: java.lang.String mNetTransitionWakeLockCausedBy>;

        $r36 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>($r35);

        exitmonitor r80;

     label18:
        goto label21;

     label19:
        $r71 := @caughtexception;

        r9 = $r71;

        exitmonitor r80;

     label20:
        throw r9;

     label21:
        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void println()>();

        $r41 = r0.<com.android.server.ConnectivityService: com.android.server.connectivity.Tethering mTethering>;

        virtualinvoke $r41.<com.android.server.connectivity.Tethering: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r4, r3);

        $r40 = r0.<com.android.server.ConnectivityService: java.util.ArrayList mInetLog>;

        if $r40 == null goto label24;

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void println()>();

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.String)>("Inet condition reports:");

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void increaseIndent()>();

        i10 = 0;

     label22:
        $r39 = r0.<com.android.server.ConnectivityService: java.util.ArrayList mInetLog>;

        $i6 = virtualinvoke $r39.<java.util.ArrayList: int size()>();

        if i10 >= $i6 goto label23;

        $r44 = r0.<com.android.server.ConnectivityService: java.util.ArrayList mInetLog>;

        $r43 = virtualinvoke $r44.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void println(java.lang.Object)>($r43);

        i10 = i10 + 1;

        goto label22;

     label23:
        virtualinvoke r4.<com.android.internal.util.IndentingPrintWriter: void decreaseIndent()>();

     label24:
        return;

        catch java.lang.Throwable from label15 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
    }

    private boolean isLiveNetworkAgent(com.android.server.connectivity.NetworkAgentInfo, java.lang.String)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1, r3;
        java.lang.String r2, $r16;
        android.util.SparseArray r4, $r7, $r9;
        java.lang.Throwable r5, $r18;
        android.net.Network $r6, $r8;
        int $i0;
        java.lang.Object $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r17;
        boolean $z0;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.server.connectivity.NetworkAgentInfo;

        r2 := @parameter1: java.lang.String;

        $r6 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.Network network>;

        if $r6 != null goto label1;

        return 0;

     label1:
        $r7 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForNetId>;

        r4 = $r7;

        entermonitor $r7;

     label2:
        $r9 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForNetId>;

        $r8 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.Network network>;

        $i0 = $r8.<android.net.Network: int netId>;

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        r3 = (com.android.server.connectivity.NetworkAgentInfo) $r10;

        exitmonitor r4;

     label3:
        goto label6;

     label4:
        $r18 := @caughtexception;

        r5 = $r18;

        exitmonitor r4;

     label5:
        throw r5;

     label6:
        if r3 == null goto label7;

        $z0 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label7;

        return 1;

     label7:
        if r3 != null goto label8;

        goto label9;

     label8:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - isLiveNetworkAgent found mismatched netId: ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r16);

     label9:
        return 0;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private boolean isRequest(android.net.NetworkRequest)
    {
        com.android.server.ConnectivityService r0;
        android.net.NetworkRequest r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        com.android.server.ConnectivityService$NetworkRequestInfo $r4;
        boolean $z0;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.NetworkRequest;

        $r2 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkRequests>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.android.server.ConnectivityService$NetworkRequestInfo) $r3;

        $z0 = $r4.<com.android.server.ConnectivityService$NetworkRequestInfo: boolean isRequest>;

        return $z0;
    }

    private void handleAsyncChannelHalfConnect(android.os.Message)
    {
        com.android.server.ConnectivityService r0;
        android.os.Message r1;
        com.android.internal.util.AsyncChannel r2, $r23;
        java.util.Iterator r3;
        com.android.server.ConnectivityService$NetworkRequestInfo r4;
        com.android.server.connectivity.NetworkAgentInfo r5, $r21, r35;
        java.lang.Throwable r6, $r34;
        java.lang.Object $r7, $r13, $r22, $r25, $r30, $r31;
        android.os.Messenger $r8, $r10, $r12, $r20;
        java.util.HashMap $r9, $r11, $r14, $r19, $r24, $r28;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1, $i2, $i3, $i5;
        android.net.Network $r15;
        android.util.SparseArray $r16, $r17, $r33, r36;
        com.android.server.ConnectivityService$LegacyTypeTracker $r18;
        java.util.Collection $r26;
        android.net.NetworkRequest $r29, $r32;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.os.Message;

        $r7 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.internal.util.AsyncChannel) $r7;

        $r9 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkFactoryInfos>;

        $r8 = r1.<android.os.Message: android.os.Messenger replyTo>;

        $z0 = virtualinvoke $r9.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r8);

        if $z0 == 0 goto label07;

        $i2 = r1.<android.os.Message: int arg1>;

        if $i2 != 0 goto label06;

        $r28 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkRequests>;

        $r26 = virtualinvoke $r28.<java.util.HashMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r26.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label05;

        $r30 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.ConnectivityService$NetworkRequestInfo) $r30;

        $z2 = r4.<com.android.server.ConnectivityService$NetworkRequestInfo: boolean isRequest>;

        if $z2 != 0 goto label02;

        goto label01;

     label02:
        $r33 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForRequestId>;

        $r29 = r4.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        $i3 = $r29.<android.net.NetworkRequest: int requestId>;

        $r31 = virtualinvoke $r33.<android.util.SparseArray: java.lang.Object get(int)>($i3);

        r5 = (com.android.server.connectivity.NetworkAgentInfo) $r31;

        if r5 == null goto label03;

        $i5 = virtualinvoke r5.<com.android.server.connectivity.NetworkAgentInfo: int getCurrentScore()>();

        goto label04;

     label03:
        $i5 = 0;

     label04:
        $r32 = r4.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        virtualinvoke r2.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int,java.lang.Object)>(536576, $i5, 0, $r32);

        goto label01;

     label05:
        goto label14;

     label06:
        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>("Error connecting NetworkFactory");

        $r24 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkFactoryInfos>;

        $r25 = r1.<android.os.Message: java.lang.Object obj>;

        virtualinvoke $r24.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r25);

        goto label14;

     label07:
        $r11 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkAgentInfos>;

        $r10 = r1.<android.os.Message: android.os.Messenger replyTo>;

        $z1 = virtualinvoke $r11.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r10);

        if $z1 == 0 goto label14;

        $i0 = r1.<android.os.Message: int arg1>;

        if $i0 != 0 goto label08;

        $r19 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkAgentInfos>;

        $r20 = r1.<android.os.Message: android.os.Messenger replyTo>;

        $r22 = virtualinvoke $r19.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r20);

        $r21 = (com.android.server.connectivity.NetworkAgentInfo) $r22;

        $r23 = $r21.<com.android.server.connectivity.NetworkAgentInfo: com.android.internal.util.AsyncChannel asyncChannel>;

        virtualinvoke $r23.<com.android.internal.util.AsyncChannel: void sendMessage(int)>(69633);

        goto label14;

     label08:
        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>("Error connecting NetworkAgent");

        $r14 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkAgentInfos>;

        $r12 = r1.<android.os.Message: android.os.Messenger replyTo>;

        $r13 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r12);

        r35 = (com.android.server.connectivity.NetworkAgentInfo) $r13;

        if r35 == null goto label14;

        $r16 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForNetId>;

        r36 = $r16;

        entermonitor $r16;

     label09:
        $r17 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForNetId>;

        $r15 = r35.<com.android.server.connectivity.NetworkAgentInfo: android.net.Network network>;

        $i1 = $r15.<android.net.Network: int netId>;

        virtualinvoke $r17.<android.util.SparseArray: void remove(int)>($i1);

        exitmonitor r36;

     label10:
        goto label13;

     label11:
        $r34 := @caughtexception;

        r6 = $r34;

        exitmonitor r36;

     label12:
        throw r6;

     label13:
        $r18 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$LegacyTypeTracker mLegacyTypeTracker>;

        virtualinvoke $r18.<com.android.server.ConnectivityService$LegacyTypeTracker: void remove(com.android.server.connectivity.NetworkAgentInfo)>(r35);

     label14:
        return;

        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    private void handleAsyncChannelDisconnected(android.os.Message)
    {
        com.android.server.ConnectivityService r0;
        android.os.Message r1;
        com.android.server.connectivity.NetworkAgentInfo r2, r6, r7, r10, r76;
        java.lang.Exception r3, $r72;
        java.lang.Throwable r4, $r68;
        android.net.NetworkRequest r5, $r35;
        java.util.Iterator r8, r75;
        java.util.Map$Entry r9;
        android.os.Messenger $r11, $r22;
        java.util.HashMap $r12, $r25, $r54;
        java.lang.Object $r13, $r34, $r36, $r38, $r43, $r56, $r57;
        java.lang.StringBuilder $r14, $r16, $r17, $r20, $r45, $r48, $r49, $r50, $r51, $r59, $r66, $r67, $r71;
        java.lang.String $r15, $r19, $r40, $r47, $r52, $r60, $r69;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        android.util.SparseArray $r18, $r28, $r29, $r31, $r33, $r39, $r44, $r53, r73;
        android.net.NetworkInfo $r21, $r58, $r63;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8;
        com.android.server.connectivity.NetworkMonitor $r23, $r41;
        com.android.server.ConnectivityService$LegacyTypeTracker $r26;
        android.net.LinkProperties $r27;
        android.net.Network $r30, $r42, $r46, $r62;
        java.util.ArrayList $r32, $r37, r74;
        java.util.Set $r55;
        android.net.NetworkInfo$DetailedState $r61;
        android.net.NetworkCapabilities $r64, $r65;
        android.os.INetworkManagementService $r70;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.os.Message;

        $r12 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkAgentInfos>;

        $r11 = r1.<android.os.Message: android.os.Messenger replyTo>;

        $r13 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r11);

        r2 = (com.android.server.connectivity.NetworkAgentInfo) $r13;

        if r2 == null goto label21;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke r2.<com.android.server.connectivity.NetworkAgentInfo: java.lang.String name()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" got DISCONNECTED, was satisfying ");

        $r18 = r2.<com.android.server.connectivity.NetworkAgentInfo: android.util.SparseArray networkRequests>;

        $i0 = virtualinvoke $r18.<android.util.SparseArray: int size()>();

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r19);

        $z0 = r2.<com.android.server.connectivity.NetworkAgentInfo: boolean created>;

        if $z0 == 0 goto label04;

     label01:
        $r70 = r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd>;

        $r62 = r2.<com.android.server.connectivity.NetworkAgentInfo: android.net.Network network>;

        $i10 = $r62.<android.net.Network: int netId>;

        interfaceinvoke $r70.<android.os.INetworkManagementService: void removeNetwork(int)>($i10);

     label02:
        goto label04;

     label03:
        $r72 := @caughtexception;

        r3 = $r72;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception removing network: ");

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r69 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r69);

     label04:
        $r21 = r2.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo>;

        $z2 = virtualinvoke $r21.<android.net.NetworkInfo: boolean isConnected()>();

        if $z2 == 0 goto label05;

        $r63 = r2.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo>;

        $r61 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState DISCONNECTED>;

        virtualinvoke $r63.<android.net.NetworkInfo: void setDetailedState(android.net.NetworkInfo$DetailedState,java.lang.String,java.lang.String)>($r61, null, null);

     label05:
        $z1 = specialinvoke r0.<com.android.server.ConnectivityService: boolean isDefaultNetwork(com.android.server.connectivity.NetworkAgentInfo)>(r2);

        if $z1 == 0 goto label06;

        r0.<com.android.server.ConnectivityService: int mDefaultInetConditionPublished> = 0;

     label06:
        virtualinvoke r0.<com.android.server.ConnectivityService: void notifyNetworkCallbacks(com.android.server.connectivity.NetworkAgentInfo,int)>(r2, 524292);

        $r23 = r2.<com.android.server.connectivity.NetworkAgentInfo: com.android.server.connectivity.NetworkMonitor networkMonitor>;

        virtualinvoke $r23.<com.android.server.connectivity.NetworkMonitor: void sendMessage(int)>(532487);

        $r25 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkAgentInfos>;

        $r22 = r1.<android.os.Message: android.os.Messenger replyTo>;

        virtualinvoke $r25.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r22);

        $r27 = r2.<com.android.server.connectivity.NetworkAgentInfo: android.net.LinkProperties linkProperties>;

        specialinvoke r0.<com.android.server.ConnectivityService: void updateClat(android.net.LinkProperties,android.net.LinkProperties,com.android.server.connectivity.NetworkAgentInfo)>(null, $r27, r2);

        $r26 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$LegacyTypeTracker mLegacyTypeTracker>;

        virtualinvoke $r26.<com.android.server.ConnectivityService$LegacyTypeTracker: void remove(com.android.server.connectivity.NetworkAgentInfo)>(r2);

        $r29 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForNetId>;

        r73 = $r29;

        entermonitor $r29;

     label07:
        $r28 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForNetId>;

        $r30 = r2.<com.android.server.connectivity.NetworkAgentInfo: android.net.Network network>;

        $i1 = $r30.<android.net.Network: int netId>;

        virtualinvoke $r28.<android.util.SparseArray: void remove(int)>($i1);

        exitmonitor r73;

     label08:
        goto label11;

     label09:
        $r68 := @caughtexception;

        r4 = $r68;

        exitmonitor r73;

     label10:
        throw r4;

     label11:
        $r32 = new java.util.ArrayList;

        specialinvoke $r32.<java.util.ArrayList: void <init>()>();

        r74 = $r32;

        i11 = 0;

     label12:
        $r31 = r2.<com.android.server.connectivity.NetworkAgentInfo: android.util.SparseArray networkRequests>;

        $i2 = virtualinvoke $r31.<android.util.SparseArray: int size()>();

        if i11 >= $i2 goto label18;

        $r39 = r2.<com.android.server.connectivity.NetworkAgentInfo: android.util.SparseArray networkRequests>;

        $r38 = virtualinvoke $r39.<android.util.SparseArray: java.lang.Object valueAt(int)>(i11);

        r5 = (android.net.NetworkRequest) $r38;

        $r44 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForRequestId>;

        $i4 = r5.<android.net.NetworkRequest: int requestId>;

        $r43 = virtualinvoke $r44.<android.util.SparseArray: java.lang.Object get(int)>($i4);

        r6 = (com.android.server.connectivity.NetworkAgentInfo) $r43;

        if r6 == null goto label17;

        $r42 = r6.<com.android.server.connectivity.NetworkAgentInfo: android.net.Network network>;

        $i5 = $r42.<android.net.Network: int netId>;

        $r46 = r2.<com.android.server.connectivity.NetworkAgentInfo: android.net.Network network>;

        $i6 = $r46.<android.net.Network: int netId>;

        if $i5 != $i6 goto label17;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking for replacement network to handle request ");

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r47);

        $r53 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForRequestId>;

        $i7 = r5.<android.net.NetworkRequest: int requestId>;

        virtualinvoke $r53.<android.util.SparseArray: void remove(int)>($i7);

        specialinvoke r0.<com.android.server.ConnectivityService: void sendUpdatedScoreToFactories(android.net.NetworkRequest,int)>(r5, 0);

        r7 = null;

        $r54 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkAgentInfos>;

        $r55 = virtualinvoke $r54.<java.util.HashMap: java.util.Set entrySet()>();

        r8 = interfaceinvoke $r55.<java.util.Set: java.util.Iterator iterator()>();

     label13:
        $z4 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label16;

        $r56 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.Map$Entry) $r56;

        $r57 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        r10 = (com.android.server.connectivity.NetworkAgentInfo) $r57;

        $r58 = r10.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo>;

        $z5 = virtualinvoke $r58.<android.net.NetworkInfo: boolean isConnected()>();

        if $z5 == 0 goto label15;

        $r64 = r5.<android.net.NetworkRequest: android.net.NetworkCapabilities networkCapabilities>;

        $r65 = r10.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkCapabilities networkCapabilities>;

        $z8 = virtualinvoke $r64.<android.net.NetworkCapabilities: boolean satisfiedByNetworkCapabilities(android.net.NetworkCapabilities)>($r65);

        if $z8 == 0 goto label15;

        if r7 == null goto label14;

        $i9 = virtualinvoke r7.<com.android.server.connectivity.NetworkAgentInfo: int getCurrentScore()>();

        $i8 = virtualinvoke r10.<com.android.server.connectivity.NetworkAgentInfo: int getCurrentScore()>();

        if $i9 >= $i8 goto label15;

     label14:
        r7 = r10;

     label15:
        goto label13;

     label16:
        if r7 == null goto label17;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found replacement in ");

        $r52 = virtualinvoke r7.<com.android.server.connectivity.NetworkAgentInfo: java.lang.String name()>();

        $r59 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r60);

        $z6 = virtualinvoke r74.<java.util.ArrayList: boolean contains(java.lang.Object)>(r7);

        if $z6 != 0 goto label17;

        virtualinvoke r74.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

     label17:
        i11 = i11 + 1;

        goto label12;

     label18:
        $r33 = r2.<com.android.server.connectivity.NetworkAgentInfo: android.util.SparseArray networkRequests>;

        $r35 = r0.<com.android.server.ConnectivityService: android.net.NetworkRequest mDefaultRequest>;

        $i3 = $r35.<android.net.NetworkRequest: int requestId>;

        $r34 = virtualinvoke $r33.<android.util.SparseArray: java.lang.Object get(int)>($i3);

        if $r34 == null goto label19;

        specialinvoke r0.<com.android.server.ConnectivityService: void removeDataActivityTracking(com.android.server.connectivity.NetworkAgentInfo)>(r2);

        r0.<com.android.server.ConnectivityService: int mActiveDefaultNetwork> = -1;

        specialinvoke r0.<com.android.server.ConnectivityService: void notifyLockdownVpn(com.android.server.connectivity.NetworkAgentInfo)>(r2);

        $r40 = virtualinvoke r2.<com.android.server.connectivity.NetworkAgentInfo: java.lang.String name()>();

        specialinvoke r0.<com.android.server.ConnectivityService: void requestNetworkTransitionWakelock(java.lang.String)>($r40);

     label19:
        r75 = virtualinvoke r74.<java.util.ArrayList: java.util.Iterator iterator()>();

     label20:
        $z3 = interfaceinvoke r75.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label21;

        $r36 = interfaceinvoke r75.<java.util.Iterator: java.lang.Object next()>();

        r76 = (com.android.server.connectivity.NetworkAgentInfo) $r36;

        $r37 = r76.<com.android.server.connectivity.NetworkAgentInfo: java.util.ArrayList networkLingered>;

        virtualinvoke $r37.<java.util.ArrayList: void clear()>();

        $r41 = r76.<com.android.server.connectivity.NetworkAgentInfo: com.android.server.connectivity.NetworkMonitor networkMonitor>;

        virtualinvoke $r41.<com.android.server.connectivity.NetworkMonitor: void sendMessage(int)>(532481);

        specialinvoke r0.<com.android.server.ConnectivityService: void rematchNetworkAndRequests(com.android.server.connectivity.NetworkAgentInfo,boolean)>(r76, 0);

        goto label20;

     label21:
        return;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private void handleRegisterNetworkRequest(android.os.Message)
    {
        com.android.server.ConnectivityService r0;
        android.os.Message r1;
        com.android.server.ConnectivityService$NetworkRequestInfo r2, $r8;
        android.net.NetworkCapabilities r3, $r37;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.android.server.connectivity.NetworkAgentInfo r4, r6;
        java.util.Iterator r5, r46;
        java.lang.Object $r7, $r17, $r36;
        android.net.NetworkRequest $r9, $r12, $r19, $r26, $r27, $r28, $r32, $r43;
        java.util.HashMap $r10, $r14, $r15;
        java.util.Collection $r11, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.android.internal.util.AsyncChannel $r18;
        java.lang.StringBuilder $r20, $r21, $r22, $r33, $r34, $r39, $r41, $r42, $r45;
        java.lang.String $r23, $r25, $r38, $r40, $r44;
        android.net.NetworkInfo $r24;
        android.util.SparseArray $r29;
        com.android.server.ConnectivityService$LegacyTypeTracker $r30;
        java.util.ArrayList $r31;
        com.android.server.connectivity.NetworkMonitor $r35;
        com.android.server.ConnectivityService$NetworkFactoryInfo r47;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.os.Message;

        $r7 = r1.<android.os.Message: java.lang.Object obj>;

        $r8 = (com.android.server.ConnectivityService$NetworkRequestInfo) $r7;

        r2 = (com.android.server.ConnectivityService$NetworkRequestInfo) $r8;

        $r9 = r2.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        r3 = $r9.<android.net.NetworkRequest: android.net.NetworkCapabilities networkCapabilities>;

        i0 = 0;

        r4 = null;

        $r10 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkAgentInfos>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.util.Collection values()>();

        r5 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r36 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.android.server.connectivity.NetworkAgentInfo) $r36;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleRegisterNetworkRequest checking ");

        $r40 = virtualinvoke r6.<com.android.server.connectivity.NetworkAgentInfo: java.lang.String name()>();

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r38);

        $r37 = r6.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkCapabilities networkCapabilities>;

        $z4 = virtualinvoke r3.<android.net.NetworkCapabilities: boolean satisfiedByNetworkCapabilities(android.net.NetworkCapabilities)>($r37);

        if $z4 == 0 goto label4;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("apparently satisfied.  currentScore=");

        $i4 = virtualinvoke r6.<com.android.server.connectivity.NetworkAgentInfo: int getCurrentScore()>();

        $r45 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r44);

        if r4 == null goto label2;

        $i6 = virtualinvoke r4.<com.android.server.connectivity.NetworkAgentInfo: int getCurrentScore()>();

        $i5 = virtualinvoke r6.<com.android.server.connectivity.NetworkAgentInfo: int getCurrentScore()>();

        if $i6 >= $i5 goto label4;

     label2:
        $z5 = r2.<com.android.server.ConnectivityService$NetworkRequestInfo: boolean isRequest>;

        if $z5 != 0 goto label3;

        $r43 = r2.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        virtualinvoke r6.<com.android.server.connectivity.NetworkAgentInfo: void addRequest(android.net.NetworkRequest)>($r43);

        virtualinvoke r0.<com.android.server.ConnectivityService: void notifyNetworkCallback(com.android.server.connectivity.NetworkAgentInfo,com.android.server.ConnectivityService$NetworkRequestInfo)>(r6, r2);

        goto label4;

     label3:
        r4 = r6;

     label4:
        goto label1;

     label5:
        if r4 == null goto label7;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("using ");

        $r23 = virtualinvoke r4.<com.android.server.connectivity.NetworkAgentInfo: java.lang.String name()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r25);

        $r24 = r4.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo>;

        $z3 = virtualinvoke $r24.<android.net.NetworkInfo: boolean isConnected()>();

        if $z3 == 0 goto label6;

        $r31 = r4.<com.android.server.connectivity.NetworkAgentInfo: java.util.ArrayList networkLingered>;

        virtualinvoke $r31.<java.util.ArrayList: void clear()>();

        $r35 = r4.<com.android.server.connectivity.NetworkAgentInfo: com.android.server.connectivity.NetworkMonitor networkMonitor>;

        virtualinvoke $r35.<com.android.server.connectivity.NetworkMonitor: void sendMessage(int)>(532481);

     label6:
        $r27 = r2.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        virtualinvoke r4.<com.android.server.connectivity.NetworkAgentInfo: void addRequest(android.net.NetworkRequest)>($r27);

        $r29 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForRequestId>;

        $r26 = r2.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        $i1 = $r26.<android.net.NetworkRequest: int requestId>;

        virtualinvoke $r29.<android.util.SparseArray: void put(int,java.lang.Object)>($i1, r4);

        virtualinvoke r0.<com.android.server.ConnectivityService: void notifyNetworkCallback(com.android.server.connectivity.NetworkAgentInfo,com.android.server.ConnectivityService$NetworkRequestInfo)>(r4, r2);

        i0 = virtualinvoke r4.<com.android.server.connectivity.NetworkAgentInfo: int getCurrentScore()>();

        $r28 = r2.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        $i2 = $r28.<android.net.NetworkRequest: int legacyType>;

        if $i2 == -1 goto label7;

        $r30 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$LegacyTypeTracker mLegacyTypeTracker>;

        $r32 = r2.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        $i3 = $r32.<android.net.NetworkRequest: int legacyType>;

        virtualinvoke $r30.<com.android.server.ConnectivityService$LegacyTypeTracker: void add(int,com.android.server.connectivity.NetworkAgentInfo)>($i3, r4);

     label7:
        $r14 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkRequests>;

        $r12 = r2.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        virtualinvoke $r14.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, r2);

        $z1 = r2.<com.android.server.ConnectivityService$NetworkRequestInfo: boolean isRequest>;

        if $z1 == 0 goto label9;

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>("sending new NetworkRequest to factories");

        $r15 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkFactoryInfos>;

        $r16 = virtualinvoke $r15.<java.util.HashMap: java.util.Collection values()>();

        r46 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();

     label8:
        $z2 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label9;

        $r17 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>();

        r47 = (com.android.server.ConnectivityService$NetworkFactoryInfo) $r17;

        $r18 = r47.<com.android.server.ConnectivityService$NetworkFactoryInfo: com.android.internal.util.AsyncChannel asyncChannel>;

        $r19 = r2.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        virtualinvoke $r18.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int,java.lang.Object)>(536576, i0, 0, $r19);

        goto label8;

     label9:
        return;
    }

    private void handleReleaseNetworkRequest(android.net.NetworkRequest, int)
    {
        com.android.server.ConnectivityService r0;
        android.net.NetworkRequest r1, r5, $r16, $r21, $r27, $r30, $r31, $r32, $r33, $r36;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        com.android.server.ConnectivityService$NetworkRequestInfo r2;
        java.util.Iterator r3, r64, r66;
        com.android.server.connectivity.NetworkAgentInfo r4, r63, r67;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.util.HashMap $r6, $r12, $r15, $r20, $r22;
        java.lang.Object $r7, $r17, $r25, $r26, $r34, $r37, $r54;
        java.lang.StringBuilder $r8, $r9, $r10, $r40, $r41, $r44, $r45, $r47, $r48, $r49, $r50, $r56, $r57, $r60, $r61, $r62;
        java.lang.String $r11, $r39, $r51, $r55, $r58, $r59;
        java.util.Collection $r14, $r19, $r23;
        android.util.SparseArray $r18, $r24, $r28, $r38, $r42, $r43, $r46, $r53;
        com.android.internal.util.AsyncChannel $r29, $r52;
        com.android.server.ConnectivityService$LegacyTypeTracker $r35;
        com.android.server.ConnectivityService$NetworkFactoryInfo r65;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.NetworkRequest;

        i0 := @parameter1: int;

        $r6 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkRequests>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.ConnectivityService$NetworkRequestInfo) $r7;

        if r2 == null goto label14;

        if 1000 == i0 goto label01;

        $i11 = r2.<com.android.server.ConnectivityService$NetworkRequestInfo: int mUid>;

        if $i11 == i0 goto label01;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to release unowned NetworkRequest ");

        $r61 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r59 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r59);

        return;

     label01:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("releasing NetworkRequest ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r11);

        virtualinvoke r2.<com.android.server.ConnectivityService$NetworkRequestInfo: void unlinkDeathRecipient()>();

        $r12 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkRequests>;

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $z1 = r2.<com.android.server.ConnectivityService$NetworkRequestInfo: boolean isRequest>;

        if $z1 == 0 goto label11;

        $r20 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkAgentInfos>;

        $r19 = virtualinvoke $r20.<java.util.HashMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label07;

        $r34 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.connectivity.NetworkAgentInfo) $r34;

        $r38 = r4.<com.android.server.connectivity.NetworkAgentInfo: android.util.SparseArray networkRequests>;

        $r33 = r2.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        $i7 = $r33.<android.net.NetworkRequest: int requestId>;

        $r37 = virtualinvoke $r38.<android.util.SparseArray: java.lang.Object get(int)>($i7);

        if $r37 == null goto label06;

        $r42 = r4.<com.android.server.connectivity.NetworkAgentInfo: android.util.SparseArray networkRequests>;

        $r36 = r2.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        $i8 = $r36.<android.net.NetworkRequest: int requestId>;

        virtualinvoke $r42.<android.util.SparseArray: void remove(int)>($i8);

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Removing from current network ");

        $r39 = virtualinvoke r4.<com.android.server.connectivity.NetworkAgentInfo: java.lang.String name()>();

        $r45 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", leaving ");

        $r43 = r4.<com.android.server.connectivity.NetworkAgentInfo: android.util.SparseArray networkRequests>;

        $i9 = virtualinvoke $r43.<android.util.SparseArray: int size()>();

        $r49 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requests.");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r51);

        z0 = virtualinvoke r4.<com.android.server.connectivity.NetworkAgentInfo: boolean isVPN()>();

        i1 = 0;

     label03:
        $r46 = r4.<com.android.server.connectivity.NetworkAgentInfo: android.util.SparseArray networkRequests>;

        $i10 = virtualinvoke $r46.<android.util.SparseArray: int size()>();

        if i1 >= $i10 goto label05;

        if z0 != 0 goto label05;

        $r53 = r4.<com.android.server.connectivity.NetworkAgentInfo: android.util.SparseArray networkRequests>;

        $r54 = virtualinvoke $r53.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r5 = (android.net.NetworkRequest) $r54;

        $z5 = specialinvoke r0.<com.android.server.ConnectivityService: boolean isRequest(android.net.NetworkRequest)>(r5);

        if $z5 == 0 goto label04;

        z0 = 1;

     label04:
        i1 = i1 + 1;

        goto label03;

     label05:
        if z0 != 0 goto label06;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no live requests for ");

        $r55 = virtualinvoke r4.<com.android.server.connectivity.NetworkAgentInfo: java.lang.String name()>();

        $r56 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; disconnecting");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r58);

        $r52 = r4.<com.android.server.connectivity.NetworkAgentInfo: com.android.internal.util.AsyncChannel asyncChannel>;

        virtualinvoke $r52.<com.android.internal.util.AsyncChannel: void disconnect()>();

     label06:
        goto label02;

     label07:
        $r24 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForRequestId>;

        $r21 = r2.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        $i3 = $r21.<android.net.NetworkRequest: int requestId>;

        $r25 = virtualinvoke $r24.<android.util.SparseArray: java.lang.Object get(int)>($i3);

        r63 = (com.android.server.connectivity.NetworkAgentInfo) $r25;

        if r63 == null goto label08;

        $r28 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForRequestId>;

        $r30 = r2.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        $i4 = $r30.<android.net.NetworkRequest: int requestId>;

        virtualinvoke $r28.<android.util.SparseArray: void remove(int)>($i4);

        $r32 = r2.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        $i6 = $r32.<android.net.NetworkRequest: int legacyType>;

        if $i6 == -1 goto label08;

        $r35 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$LegacyTypeTracker mLegacyTypeTracker>;

        $r31 = r2.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        $i5 = $r31.<android.net.NetworkRequest: int legacyType>;

        virtualinvoke $r35.<com.android.server.ConnectivityService$LegacyTypeTracker: void remove(int,com.android.server.connectivity.NetworkAgentInfo)>($i5, r63);

     label08:
        $r22 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkFactoryInfos>;

        $r23 = virtualinvoke $r22.<java.util.HashMap: java.util.Collection values()>();

        r64 = interfaceinvoke $r23.<java.util.Collection: java.util.Iterator iterator()>();

     label09:
        $z4 = interfaceinvoke r64.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label10;

        $r26 = interfaceinvoke r64.<java.util.Iterator: java.lang.Object next()>();

        r65 = (com.android.server.ConnectivityService$NetworkFactoryInfo) $r26;

        $r29 = r65.<com.android.server.ConnectivityService$NetworkFactoryInfo: com.android.internal.util.AsyncChannel asyncChannel>;

        $r27 = r2.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        virtualinvoke $r29.<com.android.internal.util.AsyncChannel: void sendMessage(int,java.lang.Object)>(536577, $r27);

        goto label09;

     label10:
        goto label13;

     label11:
        $r15 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkAgentInfos>;

        $r14 = virtualinvoke $r15.<java.util.HashMap: java.util.Collection values()>();

        r66 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();

     label12:
        $z2 = interfaceinvoke r66.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label13;

        $r17 = interfaceinvoke r66.<java.util.Iterator: java.lang.Object next()>();

        r67 = (com.android.server.connectivity.NetworkAgentInfo) $r17;

        $r18 = r67.<com.android.server.connectivity.NetworkAgentInfo: android.util.SparseArray networkRequests>;

        $r16 = r2.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        $i2 = $r16.<android.net.NetworkRequest: int requestId>;

        virtualinvoke $r18.<android.util.SparseArray: void remove(int)>($i2);

        goto label12;

     label13:
        specialinvoke r0.<com.android.server.ConnectivityService: void callCallbackForRequest(com.android.server.ConnectivityService$NetworkRequestInfo,com.android.server.connectivity.NetworkAgentInfo,int)>(r2, null, 524296);

     label14:
        return;
    }

    public int tether(java.lang.String)
    {
        com.android.server.ConnectivityService r0;
        java.lang.String r1;
        android.content.Context $r2;
        boolean $z0;
        com.android.server.connectivity.Tethering $r3;
        int $i0;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        staticinvoke <android.net.ConnectivityManager: void enforceTetherChangePermission(android.content.Context)>($r2);

        $z0 = virtualinvoke r0.<com.android.server.ConnectivityService: boolean isTetheringSupported()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.server.ConnectivityService: com.android.server.connectivity.Tethering mTethering>;

        $i0 = virtualinvoke $r3.<com.android.server.connectivity.Tethering: int tether(java.lang.String)>(r1);

        return $i0;

     label1:
        return 3;
    }

    public int untether(java.lang.String)
    {
        com.android.server.ConnectivityService r0;
        java.lang.String r1;
        android.content.Context $r2;
        boolean $z0;
        com.android.server.connectivity.Tethering $r3;
        int $i0;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        staticinvoke <android.net.ConnectivityManager: void enforceTetherChangePermission(android.content.Context)>($r2);

        $z0 = virtualinvoke r0.<com.android.server.ConnectivityService: boolean isTetheringSupported()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.server.ConnectivityService: com.android.server.connectivity.Tethering mTethering>;

        $i0 = virtualinvoke $r3.<com.android.server.connectivity.Tethering: int untether(java.lang.String)>(r1);

        return $i0;

     label1:
        return 3;
    }

    public int getLastTetherError(java.lang.String)
    {
        com.android.server.ConnectivityService r0;
        java.lang.String r1;
        boolean $z0;
        com.android.server.connectivity.Tethering $r2;
        int $i0;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceTetherAccessPermission()>();

        $z0 = virtualinvoke r0.<com.android.server.ConnectivityService: boolean isTetheringSupported()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.ConnectivityService: com.android.server.connectivity.Tethering mTethering>;

        $i0 = virtualinvoke $r2.<com.android.server.connectivity.Tethering: int getLastTetherError(java.lang.String)>(r1);

        return $i0;

     label1:
        return 3;
    }

    public java.lang.String[] getTetherableUsbRegexs()
    {
        com.android.server.ConnectivityService r0;
        boolean $z0;
        java.lang.String[] $r1, $r3;
        com.android.server.connectivity.Tethering $r2;

        r0 := @this: com.android.server.ConnectivityService;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceTetherAccessPermission()>();

        $z0 = virtualinvoke r0.<com.android.server.ConnectivityService: boolean isTetheringSupported()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.ConnectivityService: com.android.server.connectivity.Tethering mTethering>;

        $r3 = virtualinvoke $r2.<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableUsbRegexs()>();

        return $r3;

     label1:
        $r1 = newarray (java.lang.String)[0];

        return $r1;
    }

    public java.lang.String[] getTetherableWifiRegexs()
    {
        com.android.server.ConnectivityService r0;
        boolean $z0;
        java.lang.String[] $r1, $r3;
        com.android.server.connectivity.Tethering $r2;

        r0 := @this: com.android.server.ConnectivityService;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceTetherAccessPermission()>();

        $z0 = virtualinvoke r0.<com.android.server.ConnectivityService: boolean isTetheringSupported()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.ConnectivityService: com.android.server.connectivity.Tethering mTethering>;

        $r3 = virtualinvoke $r2.<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableWifiRegexs()>();

        return $r3;

     label1:
        $r1 = newarray (java.lang.String)[0];

        return $r1;
    }

    public java.lang.String[] getTetherableBluetoothRegexs()
    {
        com.android.server.ConnectivityService r0;
        boolean $z0;
        java.lang.String[] $r1, $r3;
        com.android.server.connectivity.Tethering $r2;

        r0 := @this: com.android.server.ConnectivityService;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceTetherAccessPermission()>();

        $z0 = virtualinvoke r0.<com.android.server.ConnectivityService: boolean isTetheringSupported()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.ConnectivityService: com.android.server.connectivity.Tethering mTethering>;

        $r3 = virtualinvoke $r2.<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableBluetoothRegexs()>();

        return $r3;

     label1:
        $r1 = newarray (java.lang.String)[0];

        return $r1;
    }

    public int setUsbTethering(boolean)
    {
        com.android.server.ConnectivityService r0;
        boolean z0, $z1;
        android.content.Context $r1;
        com.android.server.connectivity.Tethering $r2;
        int $i0;

        r0 := @this: com.android.server.ConnectivityService;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        staticinvoke <android.net.ConnectivityManager: void enforceTetherChangePermission(android.content.Context)>($r1);

        $z1 = virtualinvoke r0.<com.android.server.ConnectivityService: boolean isTetheringSupported()>();

        if $z1 == 0 goto label1;

        $r2 = r0.<com.android.server.ConnectivityService: com.android.server.connectivity.Tethering mTethering>;

        $i0 = virtualinvoke $r2.<com.android.server.connectivity.Tethering: int setUsbTethering(boolean)>(z0);

        return $i0;

     label1:
        return 3;
    }

    public java.lang.String[] getTetherableIfaces()
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.Tethering $r1;
        java.lang.String[] $r2;

        r0 := @this: com.android.server.ConnectivityService;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceTetherAccessPermission()>();

        $r1 = r0.<com.android.server.ConnectivityService: com.android.server.connectivity.Tethering mTethering>;

        $r2 = virtualinvoke $r1.<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableIfaces()>();

        return $r2;
    }

    public java.lang.String[] getTetheredIfaces()
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.Tethering $r1;
        java.lang.String[] $r2;

        r0 := @this: com.android.server.ConnectivityService;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceTetherAccessPermission()>();

        $r1 = r0.<com.android.server.ConnectivityService: com.android.server.connectivity.Tethering mTethering>;

        $r2 = virtualinvoke $r1.<com.android.server.connectivity.Tethering: java.lang.String[] getTetheredIfaces()>();

        return $r2;
    }

    public java.lang.String[] getTetheringErroredIfaces()
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.Tethering $r1;
        java.lang.String[] $r2;

        r0 := @this: com.android.server.ConnectivityService;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceTetherAccessPermission()>();

        $r1 = r0.<com.android.server.ConnectivityService: com.android.server.connectivity.Tethering mTethering>;

        $r2 = virtualinvoke $r1.<com.android.server.connectivity.Tethering: java.lang.String[] getErroredIfaces()>();

        return $r2;
    }

    public java.lang.String[] getTetheredDhcpRanges()
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.Tethering $r1;
        java.lang.String[] $r2;

        r0 := @this: com.android.server.ConnectivityService;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceConnectivityInternalPermission()>();

        $r1 = r0.<com.android.server.ConnectivityService: com.android.server.connectivity.Tethering mTethering>;

        $r2 = virtualinvoke $r1.<com.android.server.connectivity.Tethering: java.lang.String[] getTetheredDhcpRanges()>();

        return $r2;
    }

    public boolean isTetheringSupported()
    {
        com.android.server.ConnectivityService r0;
        byte b0, $b6;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.String $r1;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        int $i1, $i2, $i3, $i4, $i5;
        com.android.server.connectivity.Tethering $r4, $r6, $r8, $r11;
        java.lang.String[] $r5, $r9, $r10;
        int[] $r7;
        android.os.UserManager $r12;

        r0 := @this: com.android.server.ConnectivityService;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceTetherAccessPermission()>();

        $r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.tether.denied");

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("true");

        if $z1 == 0 goto label1;

        $b6 = 0;

        goto label2;

     label1:
        $b6 = 1;

     label2:
        b0 = $b6;

        $r2 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i1 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r3, "tether_supported", b0);

        if $i1 == 0 goto label3;

        $r12 = r0.<com.android.server.ConnectivityService: android.os.UserManager mUserManager>;

        $z4 = virtualinvoke $r12.<android.os.UserManager: boolean hasUserRestriction(java.lang.String)>("no_config_tethering");

        if $z4 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        z0 = $z3;

        if z0 == 0 goto label6;

        $r4 = r0.<com.android.server.ConnectivityService: com.android.server.connectivity.Tethering mTethering>;

        $r5 = virtualinvoke $r4.<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableUsbRegexs()>();

        $i2 = lengthof $r5;

        if $i2 != 0 goto label5;

        $r8 = r0.<com.android.server.ConnectivityService: com.android.server.connectivity.Tethering mTethering>;

        $r9 = virtualinvoke $r8.<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableWifiRegexs()>();

        $i4 = lengthof $r9;

        if $i4 != 0 goto label5;

        $r11 = r0.<com.android.server.ConnectivityService: com.android.server.connectivity.Tethering mTethering>;

        $r10 = virtualinvoke $r11.<com.android.server.connectivity.Tethering: java.lang.String[] getTetherableBluetoothRegexs()>();

        $i5 = lengthof $r10;

        if $i5 == 0 goto label6;

     label5:
        $r6 = r0.<com.android.server.ConnectivityService: com.android.server.connectivity.Tethering mTethering>;

        $r7 = virtualinvoke $r6.<com.android.server.connectivity.Tethering: int[] getUpstreamIfaceTypes()>();

        $i3 = lengthof $r7;

        if $i3 == 0 goto label6;

        $z2 = 1;

        goto label7;

     label6:
        $z2 = 0;

     label7:
        return $z2;
    }

    private void requestNetworkTransitionWakelock(java.lang.String)
    {
        com.android.server.ConnectivityService r0, r2;
        java.lang.String r1;
        java.lang.Throwable r3, $r10;
        android.os.PowerManager$WakeLock $r5, $r6;
        boolean $z1;
        int $i0, $i1, $i2, i4;
        com.android.server.ConnectivityService$InternalHandler $r7, $r8;
        android.os.Message $r9;
        long $l3;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: java.lang.String;

        r2 = r0;

        entermonitor r0;

     label1:
        $r5 = r0.<com.android.server.ConnectivityService: android.os.PowerManager$WakeLock mNetTransitionWakeLock>;

        $z1 = virtualinvoke $r5.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z1 == 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $i0 = r0.<com.android.server.ConnectivityService: int mNetTransitionWakeLockSerialNumber>;

        $i1 = $i0 + 1;

        r0.<com.android.server.ConnectivityService: int mNetTransitionWakeLockSerialNumber> = $i1;

        i4 = $i1;

        $r6 = r0.<com.android.server.ConnectivityService: android.os.PowerManager$WakeLock mNetTransitionWakeLock>;

        virtualinvoke $r6.<android.os.PowerManager$WakeLock: void acquire()>();

        r0.<com.android.server.ConnectivityService: java.lang.String mNetTransitionWakeLockCausedBy> = r1;

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        $r8 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r7 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r9 = virtualinvoke $r7.<com.android.server.ConnectivityService$InternalHandler: android.os.Message obtainMessage(int,int,int)>(24, i4, 0);

        $i2 = r0.<com.android.server.ConnectivityService: int mNetTransitionWakeLockTimeout>;

        $l3 = (long) $i2;

        virtualinvoke $r8.<com.android.server.ConnectivityService$InternalHandler: boolean sendMessageDelayed(android.os.Message,long)>($r9, $l3);

        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void reportInetCondition(int, int)
    {
        com.android.server.ConnectivityService r0;
        int i0, i1;
        com.android.server.connectivity.NetworkAgentInfo r1;
        com.android.server.ConnectivityService$LegacyTypeTracker $r2;
        android.net.Network $r3;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 <= 50 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$LegacyTypeTracker mLegacyTypeTracker>;

        r1 = virtualinvoke $r2.<com.android.server.ConnectivityService$LegacyTypeTracker: com.android.server.connectivity.NetworkAgentInfo getNetworkForType(int)>(i0);

        if r1 == null goto label2;

        $r3 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.Network network>;

        virtualinvoke r0.<com.android.server.ConnectivityService: void reportBadNetwork(android.net.Network)>($r3);

     label2:
        return;
    }

    public void reportBadNetwork(android.net.Network)
    {
        com.android.server.ConnectivityService r0;
        android.net.Network r1;
        int i0, $i1;
        android.util.SparseArray r2, $r5, $r6;
        java.lang.Throwable r3, r4, $r17, $r18;
        java.lang.Object $r7;
        java.lang.StringBuilder $r8, $r9, $r11, $r12, $r14;
        java.lang.String $r10, $r13;
        boolean $z0, $z1;
        com.android.server.connectivity.NetworkMonitor $r16;
        com.android.server.connectivity.NetworkAgentInfo r19, r20;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.Network;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceAccessPermission()>();

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceInternetPermission()>();

        if r1 != null goto label01;

        return;

     label01:
        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r5 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForNetId>;

        r2 = $r5;

        entermonitor $r5;

     label02:
        $r6 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForNetId>;

        $i1 = r1.<android.net.Network: int netId>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>($i1);

        r19 = (com.android.server.connectivity.NetworkAgentInfo) $r7;

        exitmonitor r2;

     label03:
        goto label06;

     label04:
        $r18 := @caughtexception;

        r3 = $r18;

        exitmonitor r2;

     label05:
        throw r3;

     label06:
        if r19 != null goto label07;

        return;

     label07:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reportBadNetwork(");

        $r10 = virtualinvoke r19.<com.android.server.connectivity.NetworkAgentInfo: java.lang.String name()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") by ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r13);

        r20 = r19;

        entermonitor r19;

     label08:
        $z0 = r19.<com.android.server.connectivity.NetworkAgentInfo: boolean created>;

        if $z0 != 0 goto label10;

        exitmonitor r20;

     label09:
        return;

     label10:
        $z1 = specialinvoke r0.<com.android.server.ConnectivityService: boolean isNetworkBlocked(com.android.server.connectivity.NetworkAgentInfo,int)>(r19, i0);

        if $z1 == 0 goto label12;

        exitmonitor r20;

     label11:
        return;

     label12:
        $r16 = r19.<com.android.server.connectivity.NetworkAgentInfo: com.android.server.connectivity.NetworkMonitor networkMonitor>;

        virtualinvoke $r16.<com.android.server.connectivity.NetworkMonitor: void sendMessage(int,int)>(532488, i0);

        exitmonitor r20;

     label13:
        goto label16;

     label14:
        $r17 := @caughtexception;

        r4 = $r17;

        exitmonitor r20;

     label15:
        throw r4;

     label16:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public android.net.ProxyInfo getProxy()
    {
        com.android.server.ConnectivityService r0;
        java.lang.Object r1, $r4;
        android.net.ProxyInfo r2;
        java.lang.Throwable r3, $r5;
        boolean $z0;

        r0 := @this: com.android.server.ConnectivityService;

        $r4 = r0.<com.android.server.ConnectivityService: java.lang.Object mProxyLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        r2 = r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mGlobalProxy>;

        if r2 != null goto label2;

        $z0 = r0.<com.android.server.ConnectivityService: boolean mDefaultProxyDisabled>;

        if $z0 != 0 goto label2;

        r2 = r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mDefaultProxy>;

     label2:
        exitmonitor r1;

     label3:
        return r2;

     label4:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r1;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void setGlobalProxy(android.net.ProxyInfo)
    {
        com.android.server.ConnectivityService r0;
        android.net.ProxyInfo r1, $r10, $r11, $r13, $r15, $r16, $r17, $r20, $r29, $r30;
        java.lang.Object r2, $r9;
        java.lang.String r3, r4, r5, $r14, $r24, $r26;
        int i0;
        android.content.ContentResolver r6;
        long l1;
        java.lang.Throwable r7, r8, $r31, $r32;
        android.content.Context $r12;
        boolean $z4, $z5, $z6, $z7, $z8, $z9;
        android.net.Uri $r18, $r19, $r22, $r27, $r28;
        java.lang.StringBuilder $r21, $r23, $r25;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.ProxyInfo;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceConnectivityInternalPermission()>();

        $r9 = r0.<com.android.server.ConnectivityService: java.lang.Object mProxyLock>;

        r2 = $r9;

        entermonitor $r9;

     label01:
        $r10 = r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mGlobalProxy>;

        if r1 != $r10 goto label03;

        exitmonitor r2;

     label02:
        return;

     label03:
        if r1 == null goto label05;

        $r29 = r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mGlobalProxy>;

        $z9 = virtualinvoke r1.<android.net.ProxyInfo: boolean equals(java.lang.Object)>($r29);

        if $z9 == 0 goto label05;

        exitmonitor r2;

     label04:
        return;

     label05:
        $r11 = r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mGlobalProxy>;

        if $r11 == null goto label07;

        $r30 = r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mGlobalProxy>;

        $z8 = virtualinvoke $r30.<android.net.ProxyInfo: boolean equals(java.lang.Object)>(r1);

        if $z8 == 0 goto label07;

        exitmonitor r2;

     label06:
        return;

     label07:
        r3 = "";

        i0 = 0;

        r4 = "";

        r5 = "";

        if r1 == null goto label11;

        $r14 = virtualinvoke r1.<android.net.ProxyInfo: java.lang.String getHost()>();

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r14);

        if $z4 == 0 goto label08;

        $r28 = <android.net.Uri: android.net.Uri EMPTY>;

        $r27 = virtualinvoke r1.<android.net.ProxyInfo: android.net.Uri getPacFileUrl()>();

        $z7 = virtualinvoke $r28.<android.net.Uri: boolean equals(java.lang.Object)>($r27);

        if $z7 != 0 goto label11;

     label08:
        $z5 = virtualinvoke r1.<android.net.ProxyInfo: boolean isValid()>();

        if $z5 != 0 goto label10;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid proxy properties, ignoring: ");

        $r26 = virtualinvoke r1.<android.net.ProxyInfo: java.lang.String toString()>();

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r24);

        exitmonitor r2;

     label09:
        return;

     label10:
        $r15 = new android.net.ProxyInfo;

        specialinvoke $r15.<android.net.ProxyInfo: void <init>(android.net.ProxyInfo)>(r1);

        r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mGlobalProxy> = $r15;

        $r16 = r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mGlobalProxy>;

        r3 = virtualinvoke $r16.<android.net.ProxyInfo: java.lang.String getHost()>();

        $r17 = r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mGlobalProxy>;

        i0 = virtualinvoke $r17.<android.net.ProxyInfo: int getPort()>();

        $r20 = r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mGlobalProxy>;

        r4 = virtualinvoke $r20.<android.net.ProxyInfo: java.lang.String getExclusionListAsString()>();

        $r18 = <android.net.Uri: android.net.Uri EMPTY>;

        $r19 = virtualinvoke r1.<android.net.ProxyInfo: android.net.Uri getPacFileUrl()>();

        $z6 = virtualinvoke $r18.<android.net.Uri: boolean equals(java.lang.Object)>($r19);

        if $z6 != 0 goto label12;

        $r22 = virtualinvoke r1.<android.net.ProxyInfo: android.net.Uri getPacFileUrl()>();

        r5 = virtualinvoke $r22.<android.net.Uri: java.lang.String toString()>();

        goto label12;

     label11:
        r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mGlobalProxy> = null;

     label12:
        $r12 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        r6 = virtualinvoke $r12.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label13:
        staticinvoke <android.provider.Settings$Global: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>(r6, "global_http_proxy_host", r3);

        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>(r6, "global_http_proxy_port", i0);

        staticinvoke <android.provider.Settings$Global: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>(r6, "global_http_proxy_exclusion_list", r4);

        staticinvoke <android.provider.Settings$Global: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>(r6, "global_proxy_pac_url", r5);

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label17;

     label15:
        $r31 := @caughtexception;

        r7 = $r31;

     label16:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r7;

     label17:
        $r13 = r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mGlobalProxy>;

        if $r13 != null goto label18;

        r1 = r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mDefaultProxy>;

     label18:
        specialinvoke r0.<com.android.server.ConnectivityService: void sendProxyBroadcast(android.net.ProxyInfo)>(r1);

        exitmonitor r2;

     label19:
        goto label22;

     label20:
        $r32 := @caughtexception;

        r8 = $r32;

        exitmonitor r2;

     label21:
        throw r8;

     label22:
        return;

        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label05 to label06 with label20;
        catch java.lang.Throwable from label07 to label09 with label20;
        catch java.lang.Throwable from label10 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
    }

    private void loadGlobalProxy()
    {
        com.android.server.ConnectivityService r0;
        android.content.ContentResolver r1;
        java.lang.String r2, r3, r4, $r12, $r14;
        int i0;
        android.net.ProxyInfo r5, $r9, $r16;
        java.lang.Object r6, $r10;
        java.lang.Throwable r7, $r17;
        android.content.Context $r8;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r11, $r13, $r15;

        r0 := @this: com.android.server.ConnectivityService;

        $r8 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        r1 = virtualinvoke $r8.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r2 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r1, "global_http_proxy_host");

        i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "global_http_proxy_port", 0);

        r3 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r1, "global_http_proxy_exclusion_list");

        r4 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>(r1, "global_proxy_pac_url");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z3 != 0 goto label9;

     label1:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z1 != 0 goto label2;

        $r16 = new android.net.ProxyInfo;

        specialinvoke $r16.<android.net.ProxyInfo: void <init>(java.lang.String)>(r4);

        r5 = $r16;

        goto label3;

     label2:
        $r9 = new android.net.ProxyInfo;

        specialinvoke $r9.<android.net.ProxyInfo: void <init>(java.lang.String,int,java.lang.String)>(r2, i0, r3);

        r5 = $r9;

     label3:
        $z2 = virtualinvoke r5.<android.net.ProxyInfo: boolean isValid()>();

        if $z2 != 0 goto label4;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid proxy properties, ignoring: ");

        $r12 = virtualinvoke r5.<android.net.ProxyInfo: java.lang.String toString()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r14);

        return;

     label4:
        $r10 = r0.<com.android.server.ConnectivityService: java.lang.Object mProxyLock>;

        r6 = $r10;

        entermonitor $r10;

     label5:
        r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mGlobalProxy> = r5;

        exitmonitor r6;

     label6:
        goto label9;

     label7:
        $r17 := @caughtexception;

        r7 = $r17;

        exitmonitor r6;

     label8:
        throw r7;

     label9:
        return;

        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public android.net.ProxyInfo getGlobalProxy()
    {
        com.android.server.ConnectivityService r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        android.net.ProxyInfo $r4;

        r0 := @this: com.android.server.ConnectivityService;

        $r3 = r0.<com.android.server.ConnectivityService: java.lang.Object mProxyLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mGlobalProxy>;

        exitmonitor r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void handleApplyDefaultProxy(android.net.ProxyInfo)
    {
        com.android.server.ConnectivityService r0;
        android.net.ProxyInfo r1, $r5, $r6, $r7, $r8, $r13, $r14, $r20;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.net.Uri $r9, $r10, $r11, $r12, $r21, $r22;
        java.lang.StringBuilder $r15, $r16, $r17;
        java.lang.String $r18, $r19, $r23;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.ProxyInfo;

        if r1 == null goto label01;

        $r23 = virtualinvoke r1.<android.net.ProxyInfo: java.lang.String getHost()>();

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r23);

        if $z5 == 0 goto label01;

        $r21 = <android.net.Uri: android.net.Uri EMPTY>;

        $r22 = virtualinvoke r1.<android.net.ProxyInfo: android.net.Uri getPacFileUrl()>();

        $z6 = virtualinvoke $r21.<android.net.Uri: boolean equals(java.lang.Object)>($r22);

        if $z6 == 0 goto label01;

        r1 = null;

     label01:
        $r4 = r0.<com.android.server.ConnectivityService: java.lang.Object mProxyLock>;

        r2 = $r4;

        entermonitor $r4;

     label02:
        $r5 = r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mDefaultProxy>;

        if $r5 == null goto label04;

        $r20 = r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mDefaultProxy>;

        $z4 = virtualinvoke $r20.<android.net.ProxyInfo: boolean equals(java.lang.Object)>(r1);

        if $z4 == 0 goto label04;

        exitmonitor r2;

     label03:
        return;

     label04:
        $r6 = r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mDefaultProxy>;

        if $r6 != r1 goto label06;

        exitmonitor r2;

     label05:
        return;

     label06:
        if r1 == null goto label08;

        $z3 = virtualinvoke r1.<android.net.ProxyInfo: boolean isValid()>();

        if $z3 != 0 goto label08;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid proxy properties, ignoring: ");

        $r18 = virtualinvoke r1.<android.net.ProxyInfo: java.lang.String toString()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r19);

        exitmonitor r2;

     label07:
        return;

     label08:
        $r7 = r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mGlobalProxy>;

        if $r7 == null goto label10;

        if r1 == null goto label10;

        $r9 = <android.net.Uri: android.net.Uri EMPTY>;

        $r10 = virtualinvoke r1.<android.net.ProxyInfo: android.net.Uri getPacFileUrl()>();

        $z1 = virtualinvoke $r9.<android.net.Uri: boolean equals(java.lang.Object)>($r10);

        if $z1 != 0 goto label10;

        $r11 = virtualinvoke r1.<android.net.ProxyInfo: android.net.Uri getPacFileUrl()>();

        $r13 = r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mGlobalProxy>;

        $r12 = virtualinvoke $r13.<android.net.ProxyInfo: android.net.Uri getPacFileUrl()>();

        $z2 = virtualinvoke $r11.<android.net.Uri: boolean equals(java.lang.Object)>($r12);

        if $z2 == 0 goto label10;

        r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mGlobalProxy> = r1;

        $r14 = r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mGlobalProxy>;

        specialinvoke r0.<com.android.server.ConnectivityService: void sendProxyBroadcast(android.net.ProxyInfo)>($r14);

        exitmonitor r2;

     label09:
        return;

     label10:
        r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mDefaultProxy> = r1;

        $r8 = r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mGlobalProxy>;

        if $r8 == null goto label12;

        exitmonitor r2;

     label11:
        return;

     label12:
        $z0 = r0.<com.android.server.ConnectivityService: boolean mDefaultProxyDisabled>;

        if $z0 != 0 goto label13;

        specialinvoke r0.<com.android.server.ConnectivityService: void sendProxyBroadcast(android.net.ProxyInfo)>(r1);

     label13:
        exitmonitor r2;

     label14:
        goto label17;

     label15:
        $r24 := @caughtexception;

        r3 = $r24;

        exitmonitor r2;

     label16:
        throw r3;

     label17:
        return;

        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label12 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    private void handleDeprecatedGlobalHttpProxy()
    {
        com.android.server.ConnectivityService r0;
        java.lang.String r1, r3, $r8, $r9;
        java.lang.String[] r2;
        int i0, $i1, $i2;
        android.content.Context $r5;
        android.content.ContentResolver $r6;
        boolean $z0;
        android.net.ProxyInfo $r7, r11;
        java.lang.NumberFormatException $r10;

        r0 := @this: com.android.server.ConnectivityService;

        $r5 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r6, "http_proxy");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label6;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $i1 = lengthof r2;

        if $i1 != 0 goto label1;

        return;

     label1:
        r3 = r2[0];

        i0 = 8080;

        $i2 = lengthof r2;

        if $i2 <= 1 goto label5;

     label2:
        $r9 = r2[1];

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        return;

     label5:
        $r7 = new android.net.ProxyInfo;

        $r8 = r2[0];

        specialinvoke $r7.<android.net.ProxyInfo: void <init>(java.lang.String,int,java.lang.String)>($r8, i0, "");

        r11 = $r7;

        virtualinvoke r0.<com.android.server.ConnectivityService: void setGlobalProxy(android.net.ProxyInfo)>(r11);

     label6:
        return;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    private void sendProxyBroadcast(android.net.ProxyInfo)
    {
        com.android.server.ConnectivityService r0;
        android.net.ProxyInfo r1, $r15;
        android.content.Intent r2, $r9;
        long l0;
        java.lang.Throwable r3, $r14;
        com.android.server.connectivity.PacManager $r4;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;
        android.content.Context $r12;
        android.os.UserHandle $r13;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.ProxyInfo;

        if r1 != null goto label1;

        $r15 = new android.net.ProxyInfo;

        specialinvoke $r15.<android.net.ProxyInfo: void <init>(java.lang.String,int,java.lang.String)>("", 0, "");

        r1 = $r15;

     label1:
        $r4 = r0.<com.android.server.ConnectivityService: com.android.server.connectivity.PacManager mPacManager>;

        $z0 = virtualinvoke $r4.<com.android.server.connectivity.PacManager: boolean setCurrentProxyScriptUrl(android.net.ProxyInfo)>(r1);

        if $z0 == 0 goto label2;

        return;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sending Proxy Broadcast for ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r8);

        $r9 = new android.content.Intent;

        specialinvoke $r9.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.PROXY_CHANGE");

        r2 = $r9;

        virtualinvoke r2.<android.content.Intent: android.content.Intent addFlags(int)>(603979776);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.PROXY_INFO", r1);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label3:
        $r12 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r13 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r12.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r2, $r13);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label7;

     label5:
        $r14 := @caughtexception;

        r3 = $r14;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private static void log(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ConnectivityService", r0);

        return;
    }

    private static void loge(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ConnectivityService", r0);

        return;
    }

    int convertFeatureToNetworkType(int, java.lang.String)
    {
        com.android.server.ConnectivityService r0;
        int i0, i1;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 = i0;

        if i0 != 0 goto label10;

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, "enableMMS");

        if $z1 == 0 goto label01;

        i1 = 2;

        goto label13;

     label01:
        $z2 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, "enableSUPL");

        if $z2 == 0 goto label02;

        i1 = 3;

        goto label13;

     label02:
        $z3 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, "enableDUN");

        if $z3 != 0 goto label03;

        $z4 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, "enableDUNAlways");

        if $z4 == 0 goto label04;

     label03:
        i1 = 4;

        goto label13;

     label04:
        $z5 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, "enableHIPRI");

        if $z5 == 0 goto label05;

        i1 = 5;

        goto label13;

     label05:
        $z6 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, "enableFOTA");

        if $z6 == 0 goto label06;

        i1 = 10;

        goto label13;

     label06:
        $z7 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, "enableIMS");

        if $z7 == 0 goto label07;

        i1 = 11;

        goto label13;

     label07:
        $z8 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, "enableCBS");

        if $z8 == 0 goto label08;

        i1 = 12;

        goto label13;

     label08:
        $z9 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, "enableEmergency");

        if $z9 == 0 goto label09;

        i1 = 15;

        goto label13;

     label09:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ConnectivityService", "Can\'t match any mobile netTracker!");

        goto label13;

     label10:
        if i0 != 1 goto label12;

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, "p2p");

        if $z0 == 0 goto label11;

        i1 = 13;

        goto label13;

     label11:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ConnectivityService", "Can\'t match any wifi netTracker!");

        goto label13;

     label12:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ConnectivityService", "Unexpected network type");

     label13:
        return i1;
    }

    private static java.lang.Object checkNotNull(java.lang.Object, java.lang.String)
    {
        java.lang.Object r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>(r1);

        throw $r2;

     label1:
        return r0;
    }

    public boolean prepareVpn(java.lang.String, java.lang.String)
    {
        com.android.server.ConnectivityService r0;
        java.lang.String r1, r2;
        int i0, $i1;
        android.util.SparseArray r3, $r5, $r6;
        java.lang.Throwable r4, $r9;
        java.lang.Object $r7;
        com.android.server.connectivity.Vpn $r8;
        boolean $z0;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.ConnectivityService: void throwIfLockdownEnabled()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i1);

        $r5 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mVpns>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mVpns>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r8 = (com.android.server.connectivity.Vpn) $r7;

        $z0 = virtualinvoke $r8.<com.android.server.connectivity.Vpn: boolean prepare(java.lang.String,java.lang.String)>(r1, r2);

        exitmonitor r3;

     label2:
        return $z0;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r3;

     label4:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setVpnPackageAuthorization(boolean)
    {
        com.android.server.ConnectivityService r0;
        boolean z0;
        int i0, $i1;
        android.util.SparseArray r1, $r3, $r4;
        java.lang.Throwable r2, $r7;
        java.lang.Object $r5;
        com.android.server.connectivity.Vpn $r6;

        r0 := @this: com.android.server.ConnectivityService;

        z0 := @parameter0: boolean;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i1);

        $r3 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mVpns>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mVpns>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r6 = (com.android.server.connectivity.Vpn) $r5;

        virtualinvoke $r6.<com.android.server.connectivity.Vpn: void setPackageAuthorization(boolean)>(z0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.os.ParcelFileDescriptor establishVpn(com.android.internal.net.VpnConfig)
    {
        com.android.server.ConnectivityService r0;
        com.android.internal.net.VpnConfig r1;
        int i0, $i1;
        android.util.SparseArray r2, $r4, $r5;
        java.lang.Throwable r3, $r9;
        java.lang.Object $r6;
        com.android.server.connectivity.Vpn $r7;
        android.os.ParcelFileDescriptor $r8;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.internal.net.VpnConfig;

        specialinvoke r0.<com.android.server.ConnectivityService: void throwIfLockdownEnabled()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i1);

        $r4 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mVpns>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mVpns>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r7 = (com.android.server.connectivity.Vpn) $r6;

        $r8 = virtualinvoke $r7.<com.android.server.connectivity.Vpn: android.os.ParcelFileDescriptor establish(com.android.internal.net.VpnConfig)>(r1);

        exitmonitor r2;

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void startLegacyVpn(com.android.internal.net.VpnProfile)
    {
        com.android.server.ConnectivityService r0;
        com.android.internal.net.VpnProfile r1;
        android.net.LinkProperties r2;
        int i0, $i1;
        android.util.SparseArray r3, $r5, $r6;
        java.lang.Throwable r4, $r11;
        java.lang.Object $r7;
        android.security.KeyStore $r8;
        com.android.server.connectivity.Vpn $r9;
        java.lang.IllegalStateException $r10;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.internal.net.VpnProfile;

        specialinvoke r0.<com.android.server.ConnectivityService: void throwIfLockdownEnabled()>();

        r2 = virtualinvoke r0.<com.android.server.ConnectivityService: android.net.LinkProperties getActiveLinkProperties()>();

        if r2 != null goto label1;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Missing active network connection");

        throw $r10;

     label1:
        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i1);

        $r5 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mVpns>;

        r3 = $r5;

        entermonitor $r5;

     label2:
        $r6 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mVpns>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r9 = (com.android.server.connectivity.Vpn) $r7;

        $r8 = r0.<com.android.server.ConnectivityService: android.security.KeyStore mKeyStore>;

        virtualinvoke $r9.<com.android.server.connectivity.Vpn: void startLegacyVpn(com.android.internal.net.VpnProfile,android.security.KeyStore,android.net.LinkProperties)>(r1, $r8, r2);

        exitmonitor r3;

     label3:
        goto label6;

     label4:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r3;

     label5:
        throw r4;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo()
    {
        com.android.server.ConnectivityService r0;
        int i0, $i1;
        android.util.SparseArray r1, $r3, $r4;
        java.lang.Throwable r2, $r8;
        java.lang.Object $r5;
        com.android.server.connectivity.Vpn $r6;
        com.android.internal.net.LegacyVpnInfo $r7;

        r0 := @this: com.android.server.ConnectivityService;

        specialinvoke r0.<com.android.server.ConnectivityService: void throwIfLockdownEnabled()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i1);

        $r3 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mVpns>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mVpns>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r6 = (com.android.server.connectivity.Vpn) $r5;

        $r7 = virtualinvoke $r6.<com.android.server.connectivity.Vpn: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo()>();

        exitmonitor r1;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public com.android.internal.net.VpnConfig getVpnConfig()
    {
        com.android.server.ConnectivityService r0;
        int i0, $i1;
        android.util.SparseArray r1, $r3, $r4;
        java.lang.Throwable r2, $r8;
        java.lang.Object $r5;
        com.android.server.connectivity.Vpn $r6;
        com.android.internal.net.VpnConfig $r7;

        r0 := @this: com.android.server.ConnectivityService;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i1);

        $r3 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mVpns>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mVpns>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r6 = (com.android.server.connectivity.Vpn) $r5;

        $r7 = virtualinvoke $r6.<com.android.server.connectivity.Vpn: com.android.internal.net.VpnConfig getVpnConfig()>();

        exitmonitor r1;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean updateLockdownVpn()
    {
        com.android.server.ConnectivityService r0;
        java.lang.String r1, $r6, $r14;
        com.android.internal.net.VpnProfile r2;
        int i0, $i1, $i2;
        android.util.SparseArray r3, $r15, $r16;
        java.lang.Throwable r4, $r22;
        boolean $z0, $z1, $z2;
        android.security.KeyStore $r5, $r7, $r10;
        byte[] $r8, $r13;
        java.lang.StringBuilder $r9, $r11, $r12;
        com.android.server.net.LockdownVpnTracker $r17;
        android.os.INetworkManagementService $r18;
        android.content.Context $r19;
        com.android.server.connectivity.Vpn $r20;
        java.lang.Object $r21;

        r0 := @this: com.android.server.ConnectivityService;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i1 == 1000 goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ConnectivityService", "Lockdown VPN only available to AID_SYSTEM");

        return 0;

     label1:
        $z0 = staticinvoke <com.android.server.net.LockdownVpnTracker: boolean isEnabled()>();

        r0.<com.android.server.ConnectivityService: boolean mLockdownEnabled> = $z0;

        $z1 = r0.<com.android.server.ConnectivityService: boolean mLockdownEnabled>;

        if $z1 == 0 goto label8;

        $r5 = r0.<com.android.server.ConnectivityService: android.security.KeyStore mKeyStore>;

        $z2 = virtualinvoke $r5.<android.security.KeyStore: boolean isUnlocked()>();

        if $z2 != 0 goto label2;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ConnectivityService", "KeyStore locked; unable to create LockdownTracker");

        return 0;

     label2:
        $r6 = new java.lang.String;

        $r7 = r0.<com.android.server.ConnectivityService: android.security.KeyStore mKeyStore>;

        $r8 = virtualinvoke $r7.<android.security.KeyStore: byte[] get(java.lang.String)>("LOCKDOWN_VPN");

        specialinvoke $r6.<java.lang.String: void <init>(byte[])>($r8);

        r1 = $r6;

        $r10 = r0.<com.android.server.ConnectivityService: android.security.KeyStore mKeyStore>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("VPN_");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = virtualinvoke $r10.<android.security.KeyStore: byte[] get(java.lang.String)>($r14);

        r2 = staticinvoke <com.android.internal.net.VpnProfile: com.android.internal.net.VpnProfile decode(java.lang.String,byte[])>(r1, $r13);

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        $r15 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mVpns>;

        r3 = $r15;

        entermonitor $r15;

     label3:
        $r17 = new com.android.server.net.LockdownVpnTracker;

        $r19 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r18 = r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd>;

        $r16 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mVpns>;

        $r21 = virtualinvoke $r16.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r20 = (com.android.server.connectivity.Vpn) $r21;

        specialinvoke $r17.<com.android.server.net.LockdownVpnTracker: void <init>(android.content.Context,android.os.INetworkManagementService,com.android.server.ConnectivityService,com.android.server.connectivity.Vpn,com.android.internal.net.VpnProfile)>($r19, $r18, r0, $r20, r2);

        specialinvoke r0.<com.android.server.ConnectivityService: void setLockdownTracker(com.android.server.net.LockdownVpnTracker)>($r17);

        exitmonitor r3;

     label4:
        goto label7;

     label5:
        $r22 := @caughtexception;

        r4 = $r22;

        exitmonitor r3;

     label6:
        throw r4;

     label7:
        goto label9;

     label8:
        specialinvoke r0.<com.android.server.ConnectivityService: void setLockdownTracker(com.android.server.net.LockdownVpnTracker)>(null);

     label9:
        return 1;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void setLockdownTracker(com.android.server.net.LockdownVpnTracker)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.net.LockdownVpnTracker r1, r2, $r7;
        android.os.INetworkManagementService $r4, $r5, $r6;
        android.os.RemoteException $r8;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.server.net.LockdownVpnTracker;

        r2 = r0.<com.android.server.ConnectivityService: com.android.server.net.LockdownVpnTracker mLockdownTracker>;

        r0.<com.android.server.ConnectivityService: com.android.server.net.LockdownVpnTracker mLockdownTracker> = null;

        if r2 == null goto label1;

        virtualinvoke r2.<com.android.server.net.LockdownVpnTracker: void shutdown()>();

     label1:
        if r1 == null goto label2;

        $r5 = r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd>;

        interfaceinvoke $r5.<android.os.INetworkManagementService: void setFirewallEnabled(boolean)>(1);

        $r6 = r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd>;

        interfaceinvoke $r6.<android.os.INetworkManagementService: void setFirewallInterfaceRule(java.lang.String,boolean)>("lo", 1);

        r0.<com.android.server.ConnectivityService: com.android.server.net.LockdownVpnTracker mLockdownTracker> = r1;

        $r7 = r0.<com.android.server.ConnectivityService: com.android.server.net.LockdownVpnTracker mLockdownTracker>;

        virtualinvoke $r7.<com.android.server.net.LockdownVpnTracker: void init()>();

        goto label3;

     label2:
        $r4 = r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd>;

        interfaceinvoke $r4.<android.os.INetworkManagementService: void setFirewallEnabled(boolean)>(0);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

     label5:
        return;

        catch android.os.RemoteException from label1 to label3 with label4;
    }

    private void throwIfLockdownEnabled()
    {
        com.android.server.ConnectivityService r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: com.android.server.ConnectivityService;

        $z0 = r0.<com.android.server.ConnectivityService: boolean mLockdownEnabled>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unavailable in lockdown mode");

        throw $r1;

     label1:
        return;
    }

    public void supplyMessenger(int, android.os.Messenger)
    {
        com.android.server.ConnectivityService r0;
        int i0;
        android.os.Messenger r1;
        boolean $z0;
        android.net.NetworkStateTracker[] $r2, $r4;
        android.net.NetworkStateTracker $r3, $r5;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Messenger;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceConnectivityInternalPermission()>();

        $z0 = staticinvoke <android.net.ConnectivityManager: boolean isNetworkTypeValid(int)>(i0);

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.ConnectivityService: android.net.NetworkStateTracker[] mNetTrackers>;

        $r3 = $r2[i0];

        if $r3 == null goto label1;

        $r4 = r0.<com.android.server.ConnectivityService: android.net.NetworkStateTracker[] mNetTrackers>;

        $r5 = $r4[i0];

        interfaceinvoke $r5.<android.net.NetworkStateTracker: void supplyMessenger(android.os.Messenger)>(r1);

     label1:
        return;
    }

    public int findConnectionTypeForIface(java.lang.String)
    {
        com.android.server.ConnectivityService r0;
        java.lang.String r1, $r10;
        android.util.SparseArray r2, $r6, $r7, $r8;
        int i0, $i1, $i2;
        com.android.server.connectivity.NetworkAgentInfo r3;
        android.net.LinkProperties r4;
        java.lang.Throwable r5, $r13;
        boolean $z0, $z1;
        java.lang.Object $r9;
        android.net.NetworkInfo $r11, $r12;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceConnectivityInternalPermission()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label01;

        return -1;

     label01:
        $r6 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForNetId>;

        r2 = $r6;

        entermonitor $r6;

     label02:
        i0 = 0;

     label03:
        $r7 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForNetId>;

        $i1 = virtualinvoke $r7.<android.util.SparseArray: int size()>();

        if i0 >= $i1 goto label06;

        $r8 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForNetId>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        r3 = (com.android.server.connectivity.NetworkAgentInfo) $r9;

        r4 = r3.<com.android.server.connectivity.NetworkAgentInfo: android.net.LinkProperties linkProperties>;

        if r4 == null goto label05;

        $r10 = virtualinvoke r4.<android.net.LinkProperties: java.lang.String getInterfaceName()>();

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label05;

        $r12 = r3.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo>;

        if $r12 == null goto label05;

        $r11 = r3.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo>;

        $i2 = virtualinvoke $r11.<android.net.NetworkInfo: int getType()>();

        exitmonitor r2;

     label04:
        return $i2;

     label05:
        i0 = i0 + 1;

        goto label03;

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r13 := @caughtexception;

        r5 = $r13;

        exitmonitor r2;

     label09:
        throw r5;

     label10:
        return -1;

        catch java.lang.Throwable from label02 to label04 with label08;
        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private void setEnableFailFastMobileData(int)
    {
        com.android.server.ConnectivityService r0;
        int i0, i1;
        java.util.concurrent.atomic.AtomicInteger $r1, $r5;
        com.android.server.ConnectivityService$InternalHandler $r2, $r3;
        android.os.Message $r4;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        if i0 != 1 goto label1;

        $r5 = r0.<com.android.server.ConnectivityService: java.util.concurrent.atomic.AtomicInteger mEnableFailFastMobileDataTag>;

        i1 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        goto label2;

     label1:
        $r1 = r0.<com.android.server.ConnectivityService: java.util.concurrent.atomic.AtomicInteger mEnableFailFastMobileDataTag>;

        i1 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

     label2:
        $r3 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r2 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r4 = virtualinvoke $r2.<com.android.server.ConnectivityService$InternalHandler: android.os.Message obtainMessage(int,int,int)>(14, i1, i0);

        virtualinvoke $r3.<com.android.server.ConnectivityService$InternalHandler: boolean sendMessage(android.os.Message)>($r4);

        return;
    }

    public int checkMobileProvisioning(int)
    {
        com.android.server.ConnectivityService r0;
        int i0;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        return -1;
    }

    private void setProvNotificationVisible(boolean, int, java.lang.String)
    {
        com.android.server.ConnectivityService r0;
        boolean z0;
        int i0, i1, $i2;
        java.lang.String r1, $r11;
        android.content.Intent r2, $r12;
        android.app.PendingIntent r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        android.content.Context $r13;

        r0 := @this: com.android.server.ConnectivityService;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setProvNotificationVisible: E visible=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" networkType=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" action=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r11);

        $r12 = new android.content.Intent;

        specialinvoke $r12.<android.content.Intent: void <init>(java.lang.String)>(r1);

        r2 = $r12;

        $r13 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        r3 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r13, 0, r2, 0);

        $i2 = i0 - -1;

        i1 = 65536 + $i2;

        specialinvoke r0.<com.android.server.ConnectivityService: void setProvNotificationVisibleIntent(boolean,int,int,java.lang.String,android.app.PendingIntent)>(z0, i1, i0, null, r3);

        return;
    }

    private void setProvNotificationVisibleIntent(boolean, int, int, java.lang.String, android.app.PendingIntent)
    {
        com.android.server.ConnectivityService r0;
        boolean z0;
        int i0, i1, i2, $i3;
        java.lang.String r1, r5, r6, $r16, $r34, $r42;
        android.app.PendingIntent r2, $r23;
        android.content.res.Resources r3, $r25;
        android.app.NotificationManager r4;
        android.app.Notification r7, $r20;
        java.lang.NullPointerException r8, $r32, $r41, r43;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r35, $r36, $r37, $r38, $r39, $r40;
        java.lang.Object $r17;
        android.content.Context $r18, $r24, $r26;
        java.lang.Object[] $r19, $r22, $r27, $r31, $r33;
        java.lang.Integer $r21, $r29, $r30;
        android.telephony.TelephonyManager $r28;

        r0 := @this: com.android.server.ConnectivityService;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: android.app.PendingIntent;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setProvNotificationVisibleIntent: E visible=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" networkType=");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" extraInfo=");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r16);

        r3 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $r18 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r17 = virtualinvoke $r18.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("notification");

        r4 = (android.app.NotificationManager) $r17;

        if z0 == 0 goto label09;

        $r20 = new android.app.Notification;

        specialinvoke $r20.<android.app.Notification: void <init>()>();

        r7 = $r20;

        lookupswitch(i1)
        {
            case 0: goto label02;
            case 1: goto label01;
            case 5: goto label02;
            default: goto label03;
        };

     label01:
        $r19 = newarray (java.lang.Object)[1];

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r19[0] = $r21;

        r5 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(17040549, $r19);

        $r22 = newarray (java.lang.Object)[1];

        $r22[0] = r1;

        r6 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(17040551, $r22);

        i2 = 17303126;

        goto label04;

     label02:
        $r27 = newarray (java.lang.Object)[1];

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r27[0] = $r29;

        r5 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(17040550, $r27);

        $r28 = r0.<com.android.server.ConnectivityService: android.telephony.TelephonyManager mTelephonyManager>;

        r6 = virtualinvoke $r28.<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>();

        i2 = 17303122;

        goto label04;

     label03:
        $r31 = newarray (java.lang.Object)[1];

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r31[0] = $r30;

        r5 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(17040550, $r31);

        $r33 = newarray (java.lang.Object)[1];

        $r33[0] = r1;

        r6 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(17040551, $r33);

        i2 = 17303122;

     label04:
        r7.<android.app.Notification: long when> = 0L;

        r7.<android.app.Notification: int icon> = i2;

        r7.<android.app.Notification: int flags> = 16;

        r7.<android.app.Notification: java.lang.CharSequence tickerText> = r5;

        $r24 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r25 = virtualinvoke $r24.<android.content.Context: android.content.res.Resources getResources()>();

        $i3 = virtualinvoke $r25.<android.content.res.Resources: int getColor(int)>(17170520);

        r7.<android.app.Notification: int color> = $i3;

        $r26 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r23 = r7.<android.app.Notification: android.app.PendingIntent contentIntent>;

        virtualinvoke r7.<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>($r26, r5, r6, $r23);

        r7.<android.app.Notification: android.app.PendingIntent contentIntent> = r2;

     label05:
        virtualinvoke r4.<android.app.NotificationManager: void notify(java.lang.String,int,android.app.Notification)>("CaptivePortal.Notification", i0, r7);

     label06:
        goto label08;

     label07:
        $r32 := @caughtexception;

        r8 = $r32;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setNotificaitionVisible: visible notificationManager npe=");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r34);

        virtualinvoke r8.<java.lang.NullPointerException: void printStackTrace()>();

     label08:
        goto label12;

     label09:
        virtualinvoke r4.<android.app.NotificationManager: void cancel(java.lang.String,int)>("CaptivePortal.Notification", i0);

     label10:
        goto label12;

     label11:
        $r41 := @caughtexception;

        r43 = $r41;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setNotificaitionVisible: cancel notificationManager npe=");

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r43);

        $r42 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r42);

        virtualinvoke r43.<java.lang.NullPointerException: void printStackTrace()>();

     label12:
        r0.<com.android.server.ConnectivityService: boolean mIsNotificationVisible> = z0;

        return;

        catch java.lang.NullPointerException from label05 to label06 with label07;
        catch java.lang.NullPointerException from label09 to label10 with label11;
    }

    private java.lang.String getProvisioningUrlBaseFromFile(int)
    {
        com.android.server.ConnectivityService r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.io.FileReader r1, $r12;
        android.content.res.Configuration r2;
        java.lang.String r3, r4, r5, r6, r7, $r15, $r20, $r29, $r36;
        java.lang.Throwable r8, $r27;
        android.content.Context $r9;
        android.content.res.Resources $r10;
        java.io.File $r11;
        boolean $z0;
        java.lang.StringBuilder $r13, $r17, $r18, $r19, $r21, $r22, $r23, $r24, $r26, $r31, $r37, $r38;
        java.lang.RuntimeException $r14;
        java.io.IOException $r16, $r30, $r33, $r34, $r35, $r39, $r40, r44;
        java.lang.NumberFormatException $r25, r42;
        java.io.FileNotFoundException $r28;
        org.xmlpull.v1.XmlPullParserException $r32, r43;
        org.xmlpull.v1.XmlPullParser r41;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        r1 = null;

        $r9 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke $r10.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        lookupswitch(i0)
        {
            case 1: goto label02;
            case 2: goto label01;
            default: goto label03;
        };

     label01:
        r3 = "provisioningUrl";

        goto label04;

     label02:
        r3 = "redirectedUrl";

        goto label04;

     label03:
        $r14 = new java.lang.RuntimeException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getProvisioningUrlBaseFromFile: Unexpected parameter ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label04:
        $r12 = new java.io.FileReader;

        $r11 = r0.<com.android.server.ConnectivityService: java.io.File mProvisioningUrlFile>;

        specialinvoke $r12.<java.io.FileReader: void <init>(java.io.File)>($r11);

        r1 = $r12;

        r41 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r41.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>(r1);

        staticinvoke <com.android.internal.util.XmlUtils: void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r41, "provisioningUrls");

     label05:
        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>(r41);

        r4 = interfaceinvoke r41.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        if r4 != null goto label06;

        goto label16;

     label06:
        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label15;

        r5 = interfaceinvoke r41.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "mcc");

     label07:
        if r5 == null goto label13;

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r5);

        $i1 = r2.<android.content.res.Configuration: int mcc>;

        if $i2 != $i1 goto label13;

        r6 = interfaceinvoke r41.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "mnc");

        if r6 == null goto label13;

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r6);

        $i4 = r2.<android.content.res.Configuration: int mnc>;

        if $i3 != $i4 goto label13;

        interfaceinvoke r41.<org.xmlpull.v1.XmlPullParser: int next()>();

        $i5 = interfaceinvoke r41.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i5 != 4 goto label13;

        r7 = interfaceinvoke r41.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label08:
        if r1 == null goto label12;

     label09:
        virtualinvoke r1.<java.io.FileReader: void close()>();

     label10:
        goto label12;

     label11:
        $r35 := @caughtexception;

     label12:
        return r7;

     label13:
        goto label15;

     label14:
        $r25 := @caughtexception;

        r42 = $r25;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NumberFormatException in getProvisioningUrlBaseFromFile: ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r42);

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r29);

     label15:
        goto label05;

     label16:
        if r1 == null goto label20;

     label17:
        virtualinvoke r1.<java.io.FileReader: void close()>();

     label18:
        goto label20;

     label19:
        $r30 := @caughtexception;

     label20:
        return null;

     label21:
        $r28 := @caughtexception;

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>("Carrier Provisioning Urls file not found");

     label22:
        if r1 == null goto label42;

     label23:
        virtualinvoke r1.<java.io.FileReader: void close()>();

     label24:
        goto label42;

     label25:
        $r40 := @caughtexception;

        goto label42;

     label26:
        $r32 := @caughtexception;

        r43 = $r32;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Xml parser exception reading Carrier Provisioning Urls file: ");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r43);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r36);

     label27:
        if r1 == null goto label42;

     label28:
        virtualinvoke r1.<java.io.FileReader: void close()>();

     label29:
        goto label42;

     label30:
        $r34 := @caughtexception;

        goto label42;

     label31:
        $r16 := @caughtexception;

        r44 = $r16;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("I/O exception reading Carrier Provisioning Urls file: ");

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r44);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r20);

     label32:
        if r1 == null goto label42;

     label33:
        virtualinvoke r1.<java.io.FileReader: void close()>();

     label34:
        goto label42;

     label35:
        $r33 := @caughtexception;

        goto label42;

     label36:
        $r27 := @caughtexception;

        r8 = $r27;

     label37:
        if r1 == null goto label41;

     label38:
        virtualinvoke r1.<java.io.FileReader: void close()>();

     label39:
        goto label41;

     label40:
        $r39 := @caughtexception;

     label41:
        throw r8;

     label42:
        return null;

        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.NumberFormatException from label07 to label08 with label14;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.io.FileNotFoundException from label04 to label08 with label21;
        catch java.io.FileNotFoundException from label13 to label16 with label21;
        catch java.io.IOException from label23 to label24 with label25;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label08 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label16 with label26;
        catch java.io.IOException from label28 to label29 with label30;
        catch java.io.IOException from label04 to label08 with label31;
        catch java.io.IOException from label13 to label16 with label31;
        catch java.io.IOException from label33 to label34 with label35;
        catch java.lang.Throwable from label04 to label08 with label36;
        catch java.lang.Throwable from label13 to label16 with label36;
        catch java.lang.Throwable from label21 to label22 with label36;
        catch java.lang.Throwable from label26 to label27 with label36;
        catch java.lang.Throwable from label31 to label32 with label36;
        catch java.io.IOException from label38 to label39 with label40;
        catch java.lang.Throwable from label36 to label37 with label36;
    }

    public java.lang.String getMobileRedirectedProvisioningUrl()
    {
        com.android.server.ConnectivityService r0;
        java.lang.String r1;
        boolean $z0;
        android.content.Context $r2;
        android.content.res.Resources $r3;

        r0 := @this: com.android.server.ConnectivityService;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceConnectivityInternalPermission()>();

        r1 = specialinvoke r0.<com.android.server.ConnectivityService: java.lang.String getProvisioningUrlBaseFromFile(int)>(1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int)>(17039403);

     label1:
        return r1;
    }

    public java.lang.String getMobileProvisioningUrl()
    {
        com.android.server.ConnectivityService r0;
        java.lang.String r1, r2, $r6, $r11, $r12, $r17;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r3, $r4, $r5, $r15, $r16, $r18;
        android.telephony.TelephonyManager $r7, $r9, $r10;
        java.lang.Object[] $r8;
        android.content.Context $r13;
        android.content.res.Resources $r14;

        r0 := @this: com.android.server.ConnectivityService;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceConnectivityInternalPermission()>();

        r1 = specialinvoke r0.<com.android.server.ConnectivityService: java.lang.String getProvisioningUrlBaseFromFile(int)>(2);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r13 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r14 = virtualinvoke $r13.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r14.<android.content.res.Resources: java.lang.String getString(int)>(17039402);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getMobileProvisioningUrl: mobile_provisioining_url from resource =");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r17);

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getMobileProvisioningUrl: mobile_provisioning_url from File =");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r6);

     label2:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 != 0 goto label4;

        $r7 = r0.<com.android.server.ConnectivityService: android.telephony.TelephonyManager mTelephonyManager>;

        r2 = virtualinvoke $r7.<android.telephony.TelephonyManager: java.lang.String getLine1Number()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z2 == 0 goto label3;

        r2 = "0000000000";

     label3:
        $r8 = newarray (java.lang.Object)[3];

        $r9 = r0.<com.android.server.ConnectivityService: android.telephony.TelephonyManager mTelephonyManager>;

        $r11 = virtualinvoke $r9.<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>();

        $r8[0] = $r11;

        $r10 = r0.<com.android.server.ConnectivityService: android.telephony.TelephonyManager mTelephonyManager>;

        $r12 = virtualinvoke $r10.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

        $r8[1] = $r12;

        $r8[2] = r2;

        r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, $r8);

     label4:
        return r1;
    }

    public void setProvisioningNotificationVisible(boolean, int, java.lang.String)
    {
        com.android.server.ConnectivityService r0;
        boolean z0;
        int i0;
        java.lang.String r1;
        long l1;
        java.lang.Throwable r2, $r3;

        r0 := @this: com.android.server.ConnectivityService;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceConnectivityInternalPermission()>();

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        specialinvoke r0.<com.android.server.ConnectivityService: void setProvNotificationVisible(boolean,int,java.lang.String)>(z0, i0, r1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label5;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setAirplaneMode(boolean)
    {
        com.android.server.ConnectivityService r0;
        boolean z0;
        long l0;
        android.content.ContentResolver r1;
        android.content.Intent r2, $r5;
        java.lang.Throwable r3, $r8;
        android.content.Context $r4, $r7;
        byte $b1;

        r0 := @this: com.android.server.ConnectivityService;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceConnectivityInternalPermission()>();

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        r1 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        if z0 == 0 goto label2;

        $b1 = 1;

        goto label3;

     label2:
        $b1 = 0;

     label3:
        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>(r1, "airplane_mode_on", $b1);

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.AIRPLANE_MODE");

        r2 = $r5;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("state", z0);

        $r7 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        virtualinvoke $r7.<android.content.Context: void sendBroadcast(android.content.Intent)>(r2);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label7;

     label5:
        $r8 := @caughtexception;

        r3 = $r8;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void onUserStart(int)
    {
        com.android.server.ConnectivityService r0;
        int i0;
        android.util.SparseArray r1, $r4, $r5, $r12;
        com.android.server.connectivity.Vpn r2, $r7, r14;
        java.lang.Throwable r3, $r13;
        java.lang.Object $r6;
        com.android.server.ConnectivityService$InternalHandler $r8;
        android.os.Looper $r9;
        android.os.INetworkManagementService $r10;
        android.content.Context $r11;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mVpns>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mVpns>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.connectivity.Vpn) $r6;

        if r2 == null goto label3;

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>("Starting user already has a VPN");

        exitmonitor r1;

     label2:
        return;

     label3:
        $r7 = new com.android.server.connectivity.Vpn;

        $r8 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r9 = virtualinvoke $r8.<com.android.server.ConnectivityService$InternalHandler: android.os.Looper getLooper()>();

        $r11 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r10 = r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd>;

        specialinvoke $r7.<com.android.server.connectivity.Vpn: void <init>(android.os.Looper,android.content.Context,android.os.INetworkManagementService,android.net.IConnectivityManager,int)>($r9, $r11, $r10, r0, i0);

        r14 = $r7;

        $r12 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mVpns>;

        virtualinvoke $r12.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r14);

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r13 := @caughtexception;

        r3 = $r13;

        exitmonitor r1;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void onUserStop(int)
    {
        com.android.server.ConnectivityService r0;
        int i0;
        android.util.SparseArray r1, $r4, $r5, $r7;
        com.android.server.connectivity.Vpn r2;
        java.lang.Throwable r3, $r8;
        java.lang.Object $r6;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mVpns>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mVpns>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.connectivity.Vpn) $r6;

        if r2 != null goto label3;

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>("Stopping user has no VPN");

        exitmonitor r1;

     label2:
        return;

     label3:
        $r7 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mVpns>;

        virtualinvoke $r7.<android.util.SparseArray: void delete(int)>(i0);

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r1;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public android.net.LinkQualityInfo getLinkQualityInfo(int)
    {
        com.android.server.ConnectivityService r0;
        int i0;
        boolean $z0;
        android.net.NetworkStateTracker[] $r1, $r3;
        android.net.NetworkStateTracker $r2, $r4;
        android.net.LinkQualityInfo $r5;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceAccessPermission()>();

        $z0 = staticinvoke <android.net.ConnectivityManager: boolean isNetworkTypeValid(int)>(i0);

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.server.ConnectivityService: android.net.NetworkStateTracker[] mNetTrackers>;

        $r2 = $r1[i0];

        if $r2 == null goto label1;

        $r3 = r0.<com.android.server.ConnectivityService: android.net.NetworkStateTracker[] mNetTrackers>;

        $r4 = $r3[i0];

        $r5 = interfaceinvoke $r4.<android.net.NetworkStateTracker: android.net.LinkQualityInfo getLinkQualityInfo()>();

        return $r5;

     label1:
        return null;
    }

    public android.net.LinkQualityInfo getActiveLinkQualityInfo()
    {
        com.android.server.ConnectivityService r0;
        int $i0, $i1, $i2;
        boolean $z0;
        android.net.NetworkStateTracker[] $r1, $r3;
        android.net.NetworkStateTracker $r2, $r4;
        android.net.LinkQualityInfo $r5;

        r0 := @this: com.android.server.ConnectivityService;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceAccessPermission()>();

        $i0 = r0.<com.android.server.ConnectivityService: int mActiveDefaultNetwork>;

        $z0 = staticinvoke <android.net.ConnectivityManager: boolean isNetworkTypeValid(int)>($i0);

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.server.ConnectivityService: android.net.NetworkStateTracker[] mNetTrackers>;

        $i1 = r0.<com.android.server.ConnectivityService: int mActiveDefaultNetwork>;

        $r2 = $r1[$i1];

        if $r2 == null goto label1;

        $r3 = r0.<com.android.server.ConnectivityService: android.net.NetworkStateTracker[] mNetTrackers>;

        $i2 = r0.<com.android.server.ConnectivityService: int mActiveDefaultNetwork>;

        $r4 = $r3[$i2];

        $r5 = interfaceinvoke $r4.<android.net.NetworkStateTracker: android.net.LinkQualityInfo getLinkQualityInfo()>();

        return $r5;

     label1:
        return null;
    }

    public android.net.LinkQualityInfo[] getAllLinkQualityInfo()
    {
        com.android.server.ConnectivityService r0;
        java.util.ArrayList r1;
        android.net.NetworkStateTracker[] r2;
        int i0, i1, $i2;
        android.net.NetworkStateTracker r3;
        android.net.LinkQualityInfo r4;
        android.net.LinkQualityInfo[] $r5, $r7;
        java.lang.Object[] $r6;

        r0 := @this: com.android.server.ConnectivityService;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceAccessPermission()>();

        r1 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList()>();

        r2 = r0.<com.android.server.ConnectivityService: android.net.NetworkStateTracker[] mNetTrackers>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        if r3 == null goto label2;

        r4 = interfaceinvoke r3.<android.net.NetworkStateTracker: android.net.LinkQualityInfo getLinkQualityInfo()>();

        if r4 == null goto label2;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $r5 = newarray (android.net.LinkQualityInfo)[$i2];

        $r6 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r7 = (android.net.LinkQualityInfo[]) $r6;

        return $r7;
    }

    private void handleNetworkSamplingTimeout()
    {
        com.android.server.ConnectivityService r0;
        java.util.HashMap r1, $r6;
        android.net.NetworkStateTracker[] r2, r12;
        int i0, i1, $i2, i3, i4, i5;
        android.net.NetworkStateTracker r3, r13;
        java.lang.String r4, r14;
        android.net.SamplingDataTracker$SamplingSnapshot r5;
        android.content.Context $r7;
        android.content.ContentResolver $r8;
        android.app.PendingIntent $r9;
        java.lang.Object $r10;

        r0 := @this: com.android.server.ConnectivityService;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r1 = $r6;

        r2 = r0.<com.android.server.ConnectivityService: android.net.NetworkStateTracker[] mNetTrackers>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        if r3 == null goto label2;

        r4 = interfaceinvoke r3.<android.net.NetworkStateTracker: java.lang.String getNetworkInterfaceName()>();

        if r4 == null goto label2;

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, null);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        staticinvoke <android.net.SamplingDataTracker: void getSamplingSnapshots(java.util.Map)>(r1);

        r12 = r0.<com.android.server.ConnectivityService: android.net.NetworkStateTracker[] mNetTrackers>;

        i3 = lengthof r12;

        i4 = 0;

     label4:
        if i4 >= i3 goto label6;

        r13 = r12[i4];

        if r13 == null goto label5;

        r14 = interfaceinvoke r13.<android.net.NetworkStateTracker: java.lang.String getNetworkInterfaceName()>();

        $r10 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r14);

        r5 = (android.net.SamplingDataTracker$SamplingSnapshot) $r10;

        if r5 == null goto label5;

        interfaceinvoke r13.<android.net.NetworkStateTracker: void stopSampling(android.net.SamplingDataTracker$SamplingSnapshot)>(r5);

        interfaceinvoke r13.<android.net.NetworkStateTracker: void startSampling(android.net.SamplingDataTracker$SamplingSnapshot)>(r5);

     label5:
        i4 = i4 + 1;

        goto label4;

     label6:
        $r7 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i5 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r8, "connectivity_sampling_interval_in_seconds", 720);

        $i2 = i5 * 1000;

        $r9 = r0.<com.android.server.ConnectivityService: android.app.PendingIntent mSampleIntervalElapsedIntent>;

        virtualinvoke r0.<com.android.server.ConnectivityService: void setAlarm(int,android.app.PendingIntent)>($i2, $r9);

        return;
    }

    void setAlarm(int, android.app.PendingIntent)
    {
        com.android.server.ConnectivityService r0;
        int i0;
        android.app.PendingIntent r1;
        long l1, $l3, $l4;
        byte b2;
        android.content.res.Resources $r2;
        boolean $z0;
        android.app.AlarmManager $r3;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.PendingIntent;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l4 = (long) i0;

        l1 = $l3 + $l4;

        $r2 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $z0 = virtualinvoke $r2.<android.content.res.Resources: boolean getBoolean(int)>(17956981);

        if $z0 == 0 goto label1;

        b2 = 2;

        goto label2;

     label1:
        b2 = 3;

     label2:
        $r3 = r0.<com.android.server.ConnectivityService: android.app.AlarmManager mAlarmManager>;

        virtualinvoke $r3.<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>(b2, l1, r1);

        return;
    }

    public android.net.NetworkRequest requestNetwork(android.net.NetworkCapabilities, android.os.Messenger, int, android.os.IBinder, int)
    {
        com.android.server.ConnectivityService r0;
        android.net.NetworkCapabilities r1, $r6, r24;
        android.os.Messenger r2;
        int i0, i1, i2, i3, $i4, $i6;
        android.os.IBinder r3;
        java.lang.Object r4, $r20;
        java.lang.Throwable r5, $r23;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r7;
        android.net.NetworkRequest $r8, r25;
        java.lang.StringBuilder $r9, $r10, $r12;
        java.lang.String $r11;
        com.android.server.ConnectivityService$InternalHandler $r13, $r16, $r17, $r19;
        com.android.server.ConnectivityService$NetworkRequestInfo $r14, r26;
        android.os.Message $r15, $r18;
        long $l5;
        android.util.SparseIntArray $r21;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.NetworkCapabilities;

        r2 := @parameter1: android.os.Messenger;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.IBinder;

        i1 := @parameter4: int;

        $z0 = virtualinvoke r1.<android.net.NetworkCapabilities: boolean hasCapability(int)>(13);

        if $z0 != 0 goto label01;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceConnectivityInternalPermission()>();

        goto label02;

     label01:
        specialinvoke r0.<com.android.server.ConnectivityService: void enforceChangePermission()>();

     label02:
        $r6 = new android.net.NetworkCapabilities;

        specialinvoke $r6.<android.net.NetworkCapabilities: void <init>(android.net.NetworkCapabilities)>(r1);

        r24 = $r6;

        $z1 = virtualinvoke r24.<android.net.NetworkCapabilities: boolean hasCapability(int)>(11);

        if $z1 != 0 goto label08;

        i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r20 = r0.<com.android.server.ConnectivityService: java.lang.Object mRulesLock>;

        r4 = $r20;

        entermonitor $r20;

     label03:
        $r21 = r0.<com.android.server.ConnectivityService: android.util.SparseIntArray mUidRules>;

        i2 = virtualinvoke $r21.<android.util.SparseIntArray: int get(int,int)>(i3, 0);

        exitmonitor r4;

     label04:
        goto label07;

     label05:
        $r23 := @caughtexception;

        r5 = $r23;

        exitmonitor r4;

     label06:
        throw r5;

     label07:
        $i6 = i2 & 1;

        if $i6 == 0 goto label08;

        virtualinvoke r24.<android.net.NetworkCapabilities: android.net.NetworkCapabilities addCapability(int)>(11);

     label08:
        if i0 < 0 goto label09;

        if i0 <= 6000000 goto label10;

     label09:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bad timeout specified");

        throw $r7;

     label10:
        $r8 = new android.net.NetworkRequest;

        $i4 = specialinvoke r0.<com.android.server.ConnectivityService: int nextNetworkRequestId()>();

        specialinvoke $r8.<android.net.NetworkRequest: void <init>(android.net.NetworkCapabilities,int,int)>(r24, i1, $i4);

        r25 = $r8;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requestNetwork for ");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r11);

        $r14 = new com.android.server.ConnectivityService$NetworkRequestInfo;

        specialinvoke $r14.<com.android.server.ConnectivityService$NetworkRequestInfo: void <init>(com.android.server.ConnectivityService,android.os.Messenger,android.net.NetworkRequest,android.os.IBinder,boolean)>(r0, r2, r25, r3, 1);

        r26 = $r14;

        $r16 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r13 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r15 = virtualinvoke $r13.<com.android.server.ConnectivityService$InternalHandler: android.os.Message obtainMessage(int,java.lang.Object)>(19, r26);

        virtualinvoke $r16.<com.android.server.ConnectivityService$InternalHandler: boolean sendMessage(android.os.Message)>($r15);

        if i0 <= 0 goto label11;

        $r19 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r17 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r18 = virtualinvoke $r17.<com.android.server.ConnectivityService$InternalHandler: android.os.Message obtainMessage(int,java.lang.Object)>(20, r26);

        $l5 = (long) i0;

        virtualinvoke $r19.<com.android.server.ConnectivityService$InternalHandler: boolean sendMessageDelayed(android.os.Message,long)>($r18, $l5);

     label11:
        return r25;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
    }

    public android.net.NetworkRequest pendingRequestForNetwork(android.net.NetworkCapabilities, android.app.PendingIntent)
    {
        com.android.server.ConnectivityService r0;
        android.net.NetworkCapabilities r1;
        android.app.PendingIntent r2;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.NetworkCapabilities;

        r2 := @parameter1: android.app.PendingIntent;

        return null;
    }

    public android.net.NetworkRequest listenForNetwork(android.net.NetworkCapabilities, android.os.Messenger, android.os.IBinder)
    {
        com.android.server.ConnectivityService r0;
        android.net.NetworkCapabilities r1, $r7;
        android.os.Messenger r2;
        android.os.IBinder r3;
        android.net.NetworkRequest r4, $r6;
        com.android.server.ConnectivityService$NetworkRequestInfo r5, $r12;
        int $i0;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;
        com.android.server.ConnectivityService$InternalHandler $r13, $r15;
        android.os.Message $r14;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.NetworkCapabilities;

        r2 := @parameter1: android.os.Messenger;

        r3 := @parameter2: android.os.IBinder;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceAccessPermission()>();

        $r6 = new android.net.NetworkRequest;

        $r7 = new android.net.NetworkCapabilities;

        specialinvoke $r7.<android.net.NetworkCapabilities: void <init>(android.net.NetworkCapabilities)>(r1);

        $i0 = specialinvoke r0.<com.android.server.ConnectivityService: int nextNetworkRequestId()>();

        specialinvoke $r6.<android.net.NetworkRequest: void <init>(android.net.NetworkCapabilities,int,int)>($r7, -1, $i0);

        r4 = $r6;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("listenForNetwork for ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r11);

        $r12 = new com.android.server.ConnectivityService$NetworkRequestInfo;

        specialinvoke $r12.<com.android.server.ConnectivityService$NetworkRequestInfo: void <init>(com.android.server.ConnectivityService,android.os.Messenger,android.net.NetworkRequest,android.os.IBinder,boolean)>(r0, r2, r4, r3, 0);

        r5 = $r12;

        $r15 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r13 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r14 = virtualinvoke $r13.<com.android.server.ConnectivityService$InternalHandler: android.os.Message obtainMessage(int,java.lang.Object)>(21, r5);

        virtualinvoke $r15.<com.android.server.ConnectivityService$InternalHandler: boolean sendMessage(android.os.Message)>($r14);

        return r4;
    }

    public void pendingListenForNetwork(android.net.NetworkCapabilities, android.app.PendingIntent)
    {
        com.android.server.ConnectivityService r0;
        android.net.NetworkCapabilities r1;
        android.app.PendingIntent r2;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.NetworkCapabilities;

        r2 := @parameter1: android.app.PendingIntent;

        return;
    }

    public void releaseNetworkRequest(android.net.NetworkRequest)
    {
        com.android.server.ConnectivityService r0;
        android.net.NetworkRequest r1;
        com.android.server.ConnectivityService$InternalHandler $r2, $r3;
        int $i0;
        android.os.Message $r4;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.NetworkRequest;

        $r2 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r3 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $i0 = staticinvoke <com.android.server.ConnectivityService: int getCallingUid()>();

        $r4 = virtualinvoke $r3.<com.android.server.ConnectivityService$InternalHandler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(22, $i0, 0, r1);

        virtualinvoke $r2.<com.android.server.ConnectivityService$InternalHandler: boolean sendMessage(android.os.Message)>($r4);

        return;
    }

    public void registerNetworkFactory(android.os.Messenger, java.lang.String)
    {
        com.android.server.ConnectivityService r0;
        android.os.Messenger r1;
        java.lang.String r2;
        com.android.server.ConnectivityService$NetworkFactoryInfo r3, $r4;
        com.android.internal.util.AsyncChannel $r5;
        com.android.server.ConnectivityService$InternalHandler $r6, $r7;
        android.os.Message $r8;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.os.Messenger;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceConnectivityInternalPermission()>();

        $r4 = new com.android.server.ConnectivityService$NetworkFactoryInfo;

        $r5 = new com.android.internal.util.AsyncChannel;

        specialinvoke $r5.<com.android.internal.util.AsyncChannel: void <init>()>();

        specialinvoke $r4.<com.android.server.ConnectivityService$NetworkFactoryInfo: void <init>(java.lang.String,android.os.Messenger,com.android.internal.util.AsyncChannel)>(r2, r1, $r5);

        r3 = $r4;

        $r7 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r6 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r8 = virtualinvoke $r6.<com.android.server.ConnectivityService$InternalHandler: android.os.Message obtainMessage(int,java.lang.Object)>(17, r3);

        virtualinvoke $r7.<com.android.server.ConnectivityService$InternalHandler: boolean sendMessage(android.os.Message)>($r8);

        return;
    }

    private void handleRegisterNetworkFactory(com.android.server.ConnectivityService$NetworkFactoryInfo)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.ConnectivityService$NetworkFactoryInfo r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r4, $r6;
        android.os.Messenger $r7, $r10;
        java.util.HashMap $r8;
        com.android.server.ConnectivityService$NetworkStateTrackerHandler $r11;
        android.content.Context $r12;
        com.android.internal.util.AsyncChannel $r13;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.server.ConnectivityService$NetworkFactoryInfo;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got NetworkFactory Messenger for ");

        $r4 = r1.<com.android.server.ConnectivityService$NetworkFactoryInfo: java.lang.String name>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r6);

        $r8 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkFactoryInfos>;

        $r7 = r1.<com.android.server.ConnectivityService$NetworkFactoryInfo: android.os.Messenger messenger>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r1);

        $r13 = r1.<com.android.server.ConnectivityService$NetworkFactoryInfo: com.android.internal.util.AsyncChannel asyncChannel>;

        $r12 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r11 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$NetworkStateTrackerHandler mTrackerHandler>;

        $r10 = r1.<com.android.server.ConnectivityService$NetworkFactoryInfo: android.os.Messenger messenger>;

        virtualinvoke $r13.<com.android.internal.util.AsyncChannel: void connect(android.content.Context,android.os.Handler,android.os.Messenger)>($r12, $r11, $r10);

        return;
    }

    public void unregisterNetworkFactory(android.os.Messenger)
    {
        com.android.server.ConnectivityService r0;
        android.os.Messenger r1;
        com.android.server.ConnectivityService$InternalHandler $r2, $r3;
        android.os.Message $r4;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.os.Messenger;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceConnectivityInternalPermission()>();

        $r3 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r2 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r4 = virtualinvoke $r2.<com.android.server.ConnectivityService$InternalHandler: android.os.Message obtainMessage(int,java.lang.Object)>(23, r1);

        virtualinvoke $r3.<com.android.server.ConnectivityService$InternalHandler: boolean sendMessage(android.os.Message)>($r4);

        return;
    }

    private void handleUnregisterNetworkFactory(android.os.Messenger)
    {
        com.android.server.ConnectivityService r0;
        android.os.Messenger r1;
        com.android.server.ConnectivityService$NetworkFactoryInfo r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r7, $r9;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.os.Messenger;

        $r3 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkFactoryInfos>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        r2 = (com.android.server.ConnectivityService$NetworkFactoryInfo) $r4;

        if r2 != null goto label1;

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>("Failed to find Messenger in unregisterNetworkFactory");

        return;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unregisterNetworkFactory for ");

        $r7 = r2.<com.android.server.ConnectivityService$NetworkFactoryInfo: java.lang.String name>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r9);

        return;
    }

    private boolean isDefaultNetwork(com.android.server.connectivity.NetworkAgentInfo)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        android.net.NetworkRequest $r2;
        int $i0;
        android.util.SparseArray $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.server.connectivity.NetworkAgentInfo;

        $r3 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForRequestId>;

        $r2 = r0.<com.android.server.ConnectivityService: android.net.NetworkRequest mDefaultRequest>;

        $i0 = $r2.<android.net.NetworkRequest: int requestId>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>($i0);

        if $r4 != r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void registerNetworkAgent(android.os.Messenger, android.net.NetworkInfo, android.net.LinkProperties, android.net.NetworkCapabilities, int, android.net.NetworkMisc)
    {
        com.android.server.ConnectivityService r0, r7;
        android.os.Messenger r1;
        android.net.NetworkInfo r2, $r11;
        android.net.LinkProperties r3, $r12;
        android.net.NetworkCapabilities r4, $r13;
        int i0;
        android.net.NetworkMisc r5, $r14;
        com.android.server.connectivity.NetworkAgentInfo r6, $r9;
        java.lang.Throwable r8, $r26;
        com.android.internal.util.AsyncChannel $r10;
        com.android.server.ConnectivityService$NetworkStateTrackerHandler $r15;
        android.content.Context $r16;
        boolean $z0;
        com.android.server.connectivity.NetworkMonitor $r18;
        java.lang.StringBuilder $r19, $r20, $r22;
        java.lang.String $r21;
        com.android.server.ConnectivityService$InternalHandler $r23, $r24;
        android.os.Message $r25;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.os.Messenger;

        r2 := @parameter1: android.net.NetworkInfo;

        r3 := @parameter2: android.net.LinkProperties;

        r4 := @parameter3: android.net.NetworkCapabilities;

        i0 := @parameter4: int;

        r5 := @parameter5: android.net.NetworkMisc;

        specialinvoke r0.<com.android.server.ConnectivityService: void enforceConnectivityInternalPermission()>();

        $r9 = new com.android.server.connectivity.NetworkAgentInfo;

        $r10 = new com.android.internal.util.AsyncChannel;

        specialinvoke $r10.<com.android.internal.util.AsyncChannel: void <init>()>();

        $r11 = new android.net.NetworkInfo;

        specialinvoke $r11.<android.net.NetworkInfo: void <init>(android.net.NetworkInfo)>(r2);

        $r12 = new android.net.LinkProperties;

        specialinvoke $r12.<android.net.LinkProperties: void <init>(android.net.LinkProperties)>(r3);

        $r13 = new android.net.NetworkCapabilities;

        specialinvoke $r13.<android.net.NetworkCapabilities: void <init>(android.net.NetworkCapabilities)>(r4);

        $r16 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r15 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$NetworkStateTrackerHandler mTrackerHandler>;

        $r14 = new android.net.NetworkMisc;

        specialinvoke $r14.<android.net.NetworkMisc: void <init>(android.net.NetworkMisc)>(r5);

        specialinvoke $r9.<com.android.server.connectivity.NetworkAgentInfo: void <init>(android.os.Messenger,com.android.internal.util.AsyncChannel,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.content.Context,android.os.Handler,android.net.NetworkMisc)>(r1, $r10, $r11, $r12, $r13, i0, $r16, $r15, $r14);

        r6 = $r9;

        r7 = r0;

        entermonitor r0;

     label1:
        $r18 = r6.<com.android.server.connectivity.NetworkAgentInfo: com.android.server.connectivity.NetworkMonitor networkMonitor>;

        $z0 = r0.<com.android.server.ConnectivityService: boolean mSystemReady>;

        $r18.<com.android.server.connectivity.NetworkMonitor: boolean systemReady> = $z0;

        exitmonitor r7;

     label2:
        goto label5;

     label3:
        $r26 := @caughtexception;

        r8 = $r26;

        exitmonitor r7;

     label4:
        throw r8;

     label5:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("registerNetworkAgent ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r21);

        $r23 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r24 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r25 = virtualinvoke $r24.<com.android.server.ConnectivityService$InternalHandler: android.os.Message obtainMessage(int,java.lang.Object)>(18, r6);

        virtualinvoke $r23.<com.android.server.ConnectivityService$InternalHandler: boolean sendMessage(android.os.Message)>($r25);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void handleRegisterNetworkAgent(com.android.server.connectivity.NetworkAgentInfo)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        android.net.NetworkInfo r2;
        android.os.Messenger $r3, $r6;
        java.util.HashMap $r4;
        com.android.server.ConnectivityService$NetworkStateTrackerHandler $r7;
        android.content.Context $r8;
        com.android.internal.util.AsyncChannel $r9;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.server.connectivity.NetworkAgentInfo;

        $r4 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkAgentInfos>;

        $r3 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.os.Messenger messenger>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);

        specialinvoke r0.<com.android.server.ConnectivityService: void assignNextNetId(com.android.server.connectivity.NetworkAgentInfo)>(r1);

        $r9 = r1.<com.android.server.connectivity.NetworkAgentInfo: com.android.internal.util.AsyncChannel asyncChannel>;

        $r8 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        $r7 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$NetworkStateTrackerHandler mTrackerHandler>;

        $r6 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.os.Messenger messenger>;

        virtualinvoke $r9.<com.android.internal.util.AsyncChannel: void connect(android.content.Context,android.os.Handler,android.os.Messenger)>($r8, $r7, $r6);

        r2 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo>;

        r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo> = null;

        specialinvoke r0.<com.android.server.ConnectivityService: void updateNetworkInfo(com.android.server.connectivity.NetworkAgentInfo,android.net.NetworkInfo)>(r1, r2);

        return;
    }

    private void updateLinkProperties(com.android.server.connectivity.NetworkAgentInfo, android.net.LinkProperties)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        android.net.LinkProperties r2, r3;
        int i0;
        boolean z0, $z1, $z2;
        android.net.Network $r4;
        com.android.server.connectivity.Nat464Xlat $r5;
        android.net.ProxyInfo $r6;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.server.connectivity.NetworkAgentInfo;

        r2 := @parameter1: android.net.LinkProperties;

        r3 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.LinkProperties linkProperties>;

        $r4 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.Network network>;

        i0 = $r4.<android.net.Network: int netId>;

        $r5 = r0.<com.android.server.ConnectivityService: com.android.server.connectivity.Nat464Xlat mClat>;

        virtualinvoke $r5.<com.android.server.connectivity.Nat464Xlat: void fixupLinkProperties(com.android.server.connectivity.NetworkAgentInfo,android.net.LinkProperties)>(r1, r2);

        specialinvoke r0.<com.android.server.ConnectivityService: void updateInterfaces(android.net.LinkProperties,android.net.LinkProperties,int)>(r3, r2, i0);

        specialinvoke r0.<com.android.server.ConnectivityService: void updateMtu(android.net.LinkProperties,android.net.LinkProperties)>(r3, r2);

        specialinvoke r0.<com.android.server.ConnectivityService: void updateTcpBufferSizes(com.android.server.connectivity.NetworkAgentInfo)>(r1);

        z0 = specialinvoke r0.<com.android.server.ConnectivityService: boolean updateRoutes(android.net.LinkProperties,android.net.LinkProperties,int)>(r3, r2, i0);

        specialinvoke r0.<com.android.server.ConnectivityService: void updateDnses(android.net.LinkProperties,android.net.LinkProperties,int,boolean)>(r3, r2, i0, z0);

        specialinvoke r0.<com.android.server.ConnectivityService: void updateClat(android.net.LinkProperties,android.net.LinkProperties,com.android.server.connectivity.NetworkAgentInfo)>(r3, r2, r1);

        $z1 = specialinvoke r0.<com.android.server.ConnectivityService: boolean isDefaultNetwork(com.android.server.connectivity.NetworkAgentInfo)>(r1);

        if $z1 == 0 goto label1;

        $r6 = virtualinvoke r3.<android.net.LinkProperties: android.net.ProxyInfo getHttpProxy()>();

        specialinvoke r0.<com.android.server.ConnectivityService: void handleApplyDefaultProxy(android.net.ProxyInfo)>($r6);

     label1:
        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r3, r2);

        if $z2 != 0 goto label2;

        virtualinvoke r0.<com.android.server.ConnectivityService: void notifyNetworkCallbacks(com.android.server.connectivity.NetworkAgentInfo,int)>(r1, 524295);

     label2:
        return;
    }

    private void updateClat(android.net.LinkProperties, android.net.LinkProperties, com.android.server.connectivity.NetworkAgentInfo)
    {
        com.android.server.ConnectivityService r0;
        android.net.LinkProperties r1, r2;
        com.android.server.connectivity.NetworkAgentInfo r3;
        boolean z0, z1;
        com.android.server.connectivity.Nat464Xlat $r4, $r5, $r6;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.LinkProperties;

        r2 := @parameter1: android.net.LinkProperties;

        r3 := @parameter2: com.android.server.connectivity.NetworkAgentInfo;

        $r4 = r0.<com.android.server.ConnectivityService: com.android.server.connectivity.Nat464Xlat mClat>;

        z0 = virtualinvoke $r4.<com.android.server.connectivity.Nat464Xlat: boolean isRunningClat(com.android.server.connectivity.NetworkAgentInfo)>(r3);

        z1 = staticinvoke <com.android.server.connectivity.Nat464Xlat: boolean requiresClat(com.android.server.connectivity.NetworkAgentInfo)>(r3);

        if z0 != 0 goto label1;

        if z1 == 0 goto label1;

        $r6 = r0.<com.android.server.ConnectivityService: com.android.server.connectivity.Nat464Xlat mClat>;

        virtualinvoke $r6.<com.android.server.connectivity.Nat464Xlat: void startClat(com.android.server.connectivity.NetworkAgentInfo)>(r3);

        goto label2;

     label1:
        if z0 == 0 goto label2;

        if z1 != 0 goto label2;

        $r5 = r0.<com.android.server.ConnectivityService: com.android.server.connectivity.Nat464Xlat mClat>;

        virtualinvoke $r5.<com.android.server.connectivity.Nat464Xlat: void stopClat()>();

     label2:
        return;
    }

    private void updateInterfaces(android.net.LinkProperties, android.net.LinkProperties, int)
    {
        com.android.server.ConnectivityService r0;
        android.net.LinkProperties r1, r2;
        int i0;
        android.net.LinkProperties$CompareResult r3, $r7;
        java.util.Iterator r4, r37;
        java.lang.String r5, $r15, $r23, $r33, $r34, r38;
        java.lang.Exception r6, $r29, $r30, r39;
        java.util.List $r8, $r9, $r25;
        boolean $z0, $z1;
        java.lang.Object $r10, $r17;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r16, $r19, $r20, $r21, $r22, $r24, $r27, $r28, $r31, $r32, $r35, $r36;
        android.os.INetworkManagementService $r18, $r26;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.LinkProperties;

        r2 := @parameter1: android.net.LinkProperties;

        i0 := @parameter2: int;

        $r7 = new android.net.LinkProperties$CompareResult;

        specialinvoke $r7.<android.net.LinkProperties$CompareResult: void <init>()>();

        r3 = $r7;

        if r2 == null goto label01;

        r3 = virtualinvoke r2.<android.net.LinkProperties: android.net.LinkProperties$CompareResult compareAllInterfaceNames(android.net.LinkProperties)>(r1);

        goto label02;

     label01:
        if r1 == null goto label02;

        $r25 = virtualinvoke r1.<android.net.LinkProperties: java.util.List getAllInterfaceNames()>();

        r3.<android.net.LinkProperties$CompareResult: java.util.List added> = $r25;

     label02:
        $r8 = r3.<android.net.LinkProperties$CompareResult: java.util.List added>;

        r4 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r17 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r17;

     label04:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding iface ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to network ");

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r23);

        $r26 = r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd>;

        interfaceinvoke $r26.<android.os.INetworkManagementService: void addInterfaceToNetwork(java.lang.String,int)>(r5, i0);

     label05:
        goto label07;

     label06:
        $r30 := @caughtexception;

        r6 = $r30;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception adding interface: ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r34 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r34);

     label07:
        goto label03;

     label08:
        $r9 = r3.<android.net.LinkProperties$CompareResult: java.util.List removed>;

        r37 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label14;

        $r10 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>();

        r38 = (java.lang.String) $r10;

     label10:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing iface ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from network ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r15);

        $r18 = r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd>;

        interfaceinvoke $r18.<android.os.INetworkManagementService: void removeInterfaceFromNetwork(java.lang.String,int)>(r38, i0);

     label11:
        goto label13;

     label12:
        $r29 := @caughtexception;

        r39 = $r29;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception removing interface: ");

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r39);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r33);

     label13:
        goto label09;

     label14:
        return;

        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    private boolean updateRoutes(android.net.LinkProperties, android.net.LinkProperties, int)
    {
        com.android.server.ConnectivityService r0;
        android.net.LinkProperties r1, r2;
        int i0;
        android.net.LinkProperties$CompareResult r3, $r7;
        java.util.Iterator r4, r56, r59;
        android.net.RouteInfo r5, r57, r60;
        java.lang.Exception r6, $r36, $r43, $r54, r58, r61;
        java.util.List $r8, $r9, $r10, $r11, $r12, $r37;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.Object $r13, $r20, $r31;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r19, $r22, $r23, $r24, $r27, $r28, $r29, $r30, $r32, $r34, $r35, $r39, $r40, $r45, $r46, $r47, $r49, $r50, $r52, $r55;
        java.lang.String $r18, $r25, $r33, $r44, $r51, $r53;
        android.os.INetworkManagementService $r21, $r26, $r38;
        java.net.InetAddress $r41, $r48;
        android.net.IpPrefix $r42;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.LinkProperties;

        r2 := @parameter1: android.net.LinkProperties;

        i0 := @parameter2: int;

        $r7 = new android.net.LinkProperties$CompareResult;

        specialinvoke $r7.<android.net.LinkProperties$CompareResult: void <init>()>();

        r3 = $r7;

        if r2 == null goto label01;

        r3 = virtualinvoke r2.<android.net.LinkProperties: android.net.LinkProperties$CompareResult compareAllRoutes(android.net.LinkProperties)>(r1);

        goto label02;

     label01:
        if r1 == null goto label02;

        $r37 = virtualinvoke r1.<android.net.LinkProperties: java.util.List getAllRoutes()>();

        r3.<android.net.LinkProperties$CompareResult: java.util.List added> = $r37;

     label02:
        $r8 = r3.<android.net.LinkProperties$CompareResult: java.util.List added>;

        r4 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r31 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.net.RouteInfo) $r31;

        $z7 = virtualinvoke r5.<android.net.RouteInfo: boolean hasGateway()>();

        if $z7 == 0 goto label04;

        goto label03;

     label04:
        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding Route [");

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] to network ");

        $r32 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r33);

     label05:
        $r38 = r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd>;

        interfaceinvoke $r38.<android.os.INetworkManagementService: void addRoute(int,android.net.RouteInfo)>(i0, r5);

     label06:
        goto label09;

     label07:
        $r43 := @caughtexception;

        r6 = $r43;

        $r42 = virtualinvoke r5.<android.net.RouteInfo: android.net.IpPrefix getDestination()>();

        $r48 = virtualinvoke $r42.<android.net.IpPrefix: java.net.InetAddress getAddress()>();

        $z9 = $r48 instanceof java.net.Inet4Address;

        if $z9 != 0 goto label08;

        goto label09;

     label08:
        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in addRoute for non-gateway: ");

        $r52 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r53);

     label09:
        goto label03;

     label10:
        $r9 = r3.<android.net.LinkProperties$CompareResult: java.util.List added>;

        r56 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z1 = interfaceinvoke r56.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label18;

        $r20 = interfaceinvoke r56.<java.util.Iterator: java.lang.Object next()>();

        r57 = (android.net.RouteInfo) $r20;

        $z6 = virtualinvoke r57.<android.net.RouteInfo: boolean hasGateway()>();

        if $z6 != 0 goto label12;

        goto label11;

     label12:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding Route [");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r57);

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] to network ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r25);

     label13:
        $r26 = r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd>;

        interfaceinvoke $r26.<android.os.INetworkManagementService: void addRoute(int,android.net.RouteInfo)>(i0, r57);

     label14:
        goto label17;

     label15:
        $r36 := @caughtexception;

        r58 = $r36;

        $r41 = virtualinvoke r57.<android.net.RouteInfo: java.net.InetAddress getGateway()>();

        $z8 = $r41 instanceof java.net.Inet4Address;

        if $z8 != 0 goto label16;

        goto label17;

     label16:
        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in addRoute for gateway: ");

        $r45 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r58);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r44);

     label17:
        goto label11;

     label18:
        $r10 = r3.<android.net.LinkProperties$CompareResult: java.util.List removed>;

        r59 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label19:
        $z2 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label24;

        $r13 = interfaceinvoke r59.<java.util.Iterator: java.lang.Object next()>();

        r60 = (android.net.RouteInfo) $r13;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing Route [");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r60);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] from network ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r18);

     label20:
        $r21 = r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd>;

        interfaceinvoke $r21.<android.os.INetworkManagementService: void removeRoute(int,android.net.RouteInfo)>(i0, r60);

     label21:
        goto label23;

     label22:
        $r54 := @caughtexception;

        r61 = $r54;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in removeRoute: ");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r61);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r51);

     label23:
        goto label19;

     label24:
        $r11 = r3.<android.net.LinkProperties$CompareResult: java.util.List added>;

        $z3 = interfaceinvoke $r11.<java.util.List: boolean isEmpty()>();

        if $z3 == 0 goto label25;

        $r12 = r3.<android.net.LinkProperties$CompareResult: java.util.List removed>;

        $z4 = interfaceinvoke $r12.<java.util.List: boolean isEmpty()>();

        if $z4 != 0 goto label26;

     label25:
        $z5 = 1;

        goto label27;

     label26:
        $z5 = 0;

     label27:
        return $z5;

        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.Exception from label13 to label14 with label15;
        catch java.lang.Exception from label20 to label21 with label22;
    }

    private void updateDnses(android.net.LinkProperties, android.net.LinkProperties, int, boolean)
    {
        com.android.server.ConnectivityService r0;
        android.net.LinkProperties r1, r2;
        int i0, $i1, $i2, $i3;
        boolean z0, $z2;
        java.util.List r3;
        java.lang.Exception r4, $r26, $r34, r38;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r21, $r22, $r23, $r24, $r28, $r30, $r31, $r32, $r33, $r35;
        java.lang.String $r10, $r12, $r27, $r29, $r36;
        android.os.INetworkManagementService $r11, $r25;
        java.lang.String[] $r13;
        android.net.NetworkRequest $r14;
        java.lang.Object $r15;
        android.util.SparseArray $r16;
        android.net.Network $r17;
        java.util.ArrayList $r18;
        java.net.InetAddress $r19, $r20;
        com.android.server.connectivity.NetworkAgentInfo r37;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.LinkProperties;

        r2 := @parameter1: android.net.LinkProperties;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        if r2 == null goto label01;

        $z2 = virtualinvoke r1.<android.net.LinkProperties: boolean isIdenticalDnses(android.net.LinkProperties)>(r2);

        if $z2 != 0 goto label08;

     label01:
        r3 = virtualinvoke r1.<android.net.LinkProperties: java.util.List getDnsServers()>();

        $i1 = interfaceinvoke r3.<java.util.Collection: int size()>();

        if $i1 != 0 goto label02;

        $r19 = r0.<com.android.server.ConnectivityService: java.net.InetAddress mDefaultDns>;

        if $r19 == null goto label02;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        r3 = $r18;

        $r20 = r0.<com.android.server.ConnectivityService: java.net.InetAddress mDefaultDns>;

        interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>($r20);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no dns provided for netId ");

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", so using defaults");

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r27);

     label02:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting Dns servers for network ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r10);

     label03:
        $r11 = r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd>;

        $r13 = staticinvoke <android.net.NetworkUtils: java.lang.String[] makeStrings(java.util.Collection)>(r3);

        $r12 = virtualinvoke r1.<android.net.LinkProperties: java.lang.String getDomains()>();

        interfaceinvoke $r11.<android.os.INetworkManagementService: void setDnsServersForNetwork(int,java.lang.String[],java.lang.String)>(i0, $r13, $r12);

     label04:
        goto label06;

     label05:
        $r26 := @caughtexception;

        r4 = $r26;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in setDnsServersForNetwork: ");

        $r28 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r29);

     label06:
        $r16 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForRequestId>;

        $r14 = r0.<com.android.server.ConnectivityService: android.net.NetworkRequest mDefaultRequest>;

        $i2 = $r14.<android.net.NetworkRequest: int requestId>;

        $r15 = virtualinvoke $r16.<android.util.SparseArray: java.lang.Object get(int)>($i2);

        r37 = (com.android.server.connectivity.NetworkAgentInfo) $r15;

        if r37 == null goto label07;

        $r17 = r37.<com.android.server.connectivity.NetworkAgentInfo: android.net.Network network>;

        $i3 = $r17.<android.net.Network: int netId>;

        if $i3 != i0 goto label07;

        specialinvoke r0.<com.android.server.ConnectivityService: void setDefaultDnsSystemProperties(java.util.Collection)>(r3);

     label07:
        specialinvoke r0.<com.android.server.ConnectivityService: void flushVmDnsCache()>();

        goto label13;

     label08:
        if z0 == 0 goto label13;

     label09:
        $r25 = r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd>;

        interfaceinvoke $r25.<android.os.INetworkManagementService: void flushNetworkDnsCache(int)>(i0);

     label10:
        goto label12;

     label11:
        $r34 := @caughtexception;

        r38 = $r34;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in flushNetworkDnsCache: ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r38);

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r36);

     label12:
        specialinvoke r0.<com.android.server.ConnectivityService: void flushVmDnsCache()>();

     label13:
        return;

        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    private void setDefaultDnsSystemProperties(java.util.Collection)
    {
        com.android.server.ConnectivityService r0;
        java.util.Collection r1;
        int i0, $i1, i2;
        java.util.Iterator r2;
        java.net.InetAddress r3;
        java.lang.String r4, r5, r13;
        boolean $z0;
        java.lang.StringBuilder $r6, $r7, $r8, $r10, $r11, $r12;
        java.lang.Object $r9;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: java.util.Collection;

        i0 = 0;

        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.net.InetAddress) $r9;

        i0 = i0 + 1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("net.dns");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        r4 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r5 = virtualinvoke r3.<java.net.InetAddress: java.lang.String getHostAddress()>();

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>(r4, r5);

        goto label1;

     label2:
        i2 = i0 + 1;

     label3:
        $i1 = r0.<com.android.server.ConnectivityService: int mNumDnsEntries>;

        if i2 > $i1 goto label4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("net.dns");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>(r13, "");

        i2 = i2 + 1;

        goto label3;

     label4:
        r0.<com.android.server.ConnectivityService: int mNumDnsEntries> = i0;

        return;
    }

    private void updateCapabilities(com.android.server.connectivity.NetworkAgentInfo, android.net.NetworkCapabilities)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1, r3;
        android.net.NetworkCapabilities r2, $r5;
        java.lang.Throwable r4, $r7;
        boolean $z0;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.server.connectivity.NetworkAgentInfo;

        r2 := @parameter1: android.net.NetworkCapabilities;

        $r5 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkCapabilities networkCapabilities>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r5, r2);

        if $z0 != 0 goto label6;

        r3 = r1;

        entermonitor r1;

     label1:
        r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkCapabilities networkCapabilities> = r2;

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        virtualinvoke r0.<com.android.server.ConnectivityService: void notifyNetworkCallbacks(com.android.server.connectivity.NetworkAgentInfo,int)>(r1, 524294);

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void sendUpdatedScoreToFactories(com.android.server.connectivity.NetworkAgentInfo)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        int i0, $i1, $i2;
        android.net.NetworkRequest r2;
        android.util.SparseArray $r3, $r4;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.server.connectivity.NetworkAgentInfo;

        i0 = 0;

     label1:
        $r3 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.util.SparseArray networkRequests>;

        $i1 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if i0 >= $i1 goto label4;

        $r4 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.util.SparseArray networkRequests>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        r2 = (android.net.NetworkRequest) $r5;

        $z0 = specialinvoke r0.<com.android.server.ConnectivityService: boolean isRequest(android.net.NetworkRequest)>(r2);

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        $i2 = virtualinvoke r1.<com.android.server.connectivity.NetworkAgentInfo: int getCurrentScore()>();

        specialinvoke r0.<com.android.server.ConnectivityService: void sendUpdatedScoreToFactories(android.net.NetworkRequest,int)>(r2, $i2);

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        return;
    }

    private void sendUpdatedScoreToFactories(android.net.NetworkRequest, int)
    {
        com.android.server.ConnectivityService r0;
        android.net.NetworkRequest r1;
        int i0;
        java.util.Iterator r2;
        com.android.server.ConnectivityService$NetworkFactoryInfo r3;
        java.util.HashMap $r4;
        java.util.Collection $r5;
        boolean $z0;
        java.lang.Object $r6;
        com.android.internal.util.AsyncChannel $r7;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: android.net.NetworkRequest;

        i0 := @parameter1: int;

        $r4 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkFactoryInfos>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.ConnectivityService$NetworkFactoryInfo) $r6;

        $r7 = r3.<com.android.server.ConnectivityService$NetworkFactoryInfo: com.android.internal.util.AsyncChannel asyncChannel>;

        virtualinvoke $r7.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int,java.lang.Object)>(536576, i0, 0, r1);

        goto label1;

     label2:
        return;
    }

    private void callCallbackForRequest(com.android.server.ConnectivityService$NetworkRequestInfo, com.android.server.connectivity.NetworkAgentInfo, int)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.ConnectivityService$NetworkRequestInfo r1;
        com.android.server.connectivity.NetworkAgentInfo r2;
        int i0;
        android.os.Bundle r3, $r7;
        android.os.Message r4;
        android.os.Messenger $r6, $r12;
        java.lang.Class $r8, $r13, $r16, $r20;
        java.lang.String $r9, $r15, $r19, $r23, $r28;
        android.net.NetworkRequest $r10, $r11, $r26;
        android.net.LinkProperties $r14, $r17;
        android.net.NetworkCapabilities $r18, $r21;
        android.net.Network $r22;
        java.lang.StringBuilder $r24, $r27, $r29;
        android.os.RemoteException $r25;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.server.ConnectivityService$NetworkRequestInfo;

        r2 := @parameter1: com.android.server.connectivity.NetworkAgentInfo;

        i0 := @parameter2: int;

        $r6 = r1.<com.android.server.ConnectivityService$NetworkRequestInfo: android.os.Messenger messenger>;

        if $r6 != null goto label01;

        return;

     label01:
        $r7 = new android.os.Bundle;

        specialinvoke $r7.<android.os.Bundle: void <init>()>();

        r3 = $r7;

        $r8 = class "android/net/NetworkRequest";

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getSimpleName()>();

        $r10 = new android.net.NetworkRequest;

        $r11 = r1.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        specialinvoke $r10.<android.net.NetworkRequest: void <init>(android.net.NetworkRequest)>($r11);

        virtualinvoke r3.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>($r9, $r10);

        r4 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        if i0 == 524293 goto label02;

        if i0 == 524296 goto label02;

        $r20 = class "android/net/Network";

        $r23 = virtualinvoke $r20.<java.lang.Class: java.lang.String getSimpleName()>();

        $r22 = r2.<com.android.server.connectivity.NetworkAgentInfo: android.net.Network network>;

        virtualinvoke r3.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>($r23, $r22);

     label02:
        tableswitch(i0)
        {
            case 524291: goto label03;
            case 524292: goto label06;
            case 524293: goto label06;
            case 524294: goto label04;
            case 524295: goto label05;
            default: goto label06;
        };

     label03:
        r4.<android.os.Message: int arg1> = 30000;

        goto label06;

     label04:
        $r16 = class "android/net/NetworkCapabilities";

        $r19 = virtualinvoke $r16.<java.lang.Class: java.lang.String getSimpleName()>();

        $r18 = new android.net.NetworkCapabilities;

        $r21 = r2.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkCapabilities networkCapabilities>;

        specialinvoke $r18.<android.net.NetworkCapabilities: void <init>(android.net.NetworkCapabilities)>($r21);

        virtualinvoke r3.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>($r19, $r18);

        goto label06;

     label05:
        $r13 = class "android/net/LinkProperties";

        $r15 = virtualinvoke $r13.<java.lang.Class: java.lang.String getSimpleName()>();

        $r14 = new android.net.LinkProperties;

        $r17 = r2.<com.android.server.connectivity.NetworkAgentInfo: android.net.LinkProperties linkProperties>;

        specialinvoke $r14.<android.net.LinkProperties: void <init>(android.net.LinkProperties)>($r17);

        virtualinvoke r3.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>($r15, $r14);

     label06:
        r4.<android.os.Message: int what> = i0;

        virtualinvoke r4.<android.os.Message: void setData(android.os.Bundle)>(r3);

     label07:
        $r12 = r1.<com.android.server.ConnectivityService$NetworkRequestInfo: android.os.Messenger messenger>;

        virtualinvoke $r12.<android.os.Messenger: void send(android.os.Message)>(r4);

     label08:
        goto label10;

     label09:
        $r25 := @caughtexception;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RemoteException caught trying to send a callback msg for ");

        $r26 = r1.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r28);

     label10:
        return;

        catch android.os.RemoteException from label07 to label08 with label09;
    }

    private void teardownUnneededNetwork(com.android.server.connectivity.NetworkAgentInfo)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        int i0, $i1;
        android.net.NetworkRequest r2;
        android.util.SparseArray $r3, $r5;
        com.android.internal.util.AsyncChannel $r4;
        java.lang.Object $r6;
        boolean $z0;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.server.connectivity.NetworkAgentInfo;

        i0 = 0;

     label1:
        $r3 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.util.SparseArray networkRequests>;

        $i1 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if i0 >= $i1 goto label4;

        $r5 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.util.SparseArray networkRequests>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        r2 = (android.net.NetworkRequest) $r6;

        $z0 = specialinvoke r0.<com.android.server.ConnectivityService: boolean isRequest(android.net.NetworkRequest)>(r2);

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dead network still had at least ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r10);

        goto label4;

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        $r4 = r1.<com.android.server.connectivity.NetworkAgentInfo: com.android.internal.util.AsyncChannel asyncChannel>;

        virtualinvoke $r4.<com.android.internal.util.AsyncChannel: void disconnect()>();

        return;
    }

    private void handleLingerComplete(com.android.server.connectivity.NetworkAgentInfo)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r4, $r6;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.server.connectivity.NetworkAgentInfo;

        if r1 != null goto label1;

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>("Unknown NetworkAgentInfo in handleLingerComplete");

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleLingerComplete for ");

        $r4 = virtualinvoke r1.<com.android.server.connectivity.NetworkAgentInfo: java.lang.String name()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r6);

        specialinvoke r0.<com.android.server.ConnectivityService: void teardownUnneededNetwork(com.android.server.connectivity.NetworkAgentInfo)>(r1);

        return;
    }

    private void makeDefault(com.android.server.connectivity.NetworkAgentInfo)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        java.lang.Exception r2, $r12;
        java.lang.StringBuilder $r3, $r4, $r5, $r13, $r14, $r15;
        java.lang.String $r6, $r16;
        android.net.NetworkInfo $r7;
        int $i0, $i1;
        android.net.Network $r8;
        android.os.INetworkManagementService $r9;
        android.net.LinkProperties $r10;
        android.net.ProxyInfo $r11;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.server.connectivity.NetworkAgentInfo;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Switching to new default network: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r6);

        $r7 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo>;

        $i0 = virtualinvoke $r7.<android.net.NetworkInfo: int getType()>();

        r0.<com.android.server.ConnectivityService: int mActiveDefaultNetwork> = $i0;

        specialinvoke r0.<com.android.server.ConnectivityService: void setupDataActivityTracking(com.android.server.connectivity.NetworkAgentInfo)>(r1);

     label1:
        $r9 = r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd>;

        $r8 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.Network network>;

        $i1 = $r8.<android.net.Network: int netId>;

        interfaceinvoke $r9.<android.os.INetworkManagementService: void setDefaultNetId(int)>($i1);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        r2 = $r12;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception setting default network :");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r16);

     label4:
        specialinvoke r0.<com.android.server.ConnectivityService: void notifyLockdownVpn(com.android.server.connectivity.NetworkAgentInfo)>(r1);

        $r10 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.LinkProperties linkProperties>;

        $r11 = virtualinvoke $r10.<android.net.LinkProperties: android.net.ProxyInfo getHttpProxy()>();

        specialinvoke r0.<com.android.server.ConnectivityService: void handleApplyDefaultProxy(android.net.ProxyInfo)>($r11);

        specialinvoke r0.<com.android.server.ConnectivityService: void updateTcpBufferSizes(com.android.server.connectivity.NetworkAgentInfo)>(r1);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void rematchNetworkAndRequests(com.android.server.connectivity.NetworkAgentInfo, boolean)
    {
        com.android.server.ConnectivityService r0, r93;
        com.android.server.connectivity.NetworkAgentInfo r1, r5, r92;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z19, z20;
        java.util.ArrayList r2, $r15, $r28, $r50, $r65;
        java.util.Iterator r3, r91, r96;
        com.android.server.ConnectivityService$NetworkRequestInfo r4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18;
        android.net.NetworkRequest r6, $r33, $r35, $r38, $r40, $r43, $r45, $r46, $r51, $r53, $r58, $r64, $r67, $r74;
        java.lang.Throwable r8, $r76;
        java.lang.StringBuilder $r9, $r11, $r13, $r60, $r61, $r62, $r68, $r69, $r70, $r72, $r73, $r78, $r79, $r80, $r83, $r85, $r86, $r88, $r89, $r90;
        java.lang.String $r10, $r12, $r57, $r59, $r71, $r77, $r81, $r82, $r87, r95, r98;
        java.util.HashMap $r14;
        java.util.Collection $r16;
        android.net.NetworkInfo $r17, $r44, $r48, $r55;
        android.net.LinkProperties $r18, $r19, $r49, $r56, r97;
        java.util.List $r20, $r52;
        android.os.PowerManager$WakeLock $r22;
        java.lang.Object $r23, $r25, $r30, $r34, $r36;
        com.android.server.ConnectivityService$InternalHandler $r24, $r26;
        android.os.Message $r27;
        android.util.SparseArray $r29, $r31, $r37, $r39, $r66;
        com.android.server.connectivity.NetworkMonitor $r32;
        android.net.NetworkCapabilities $r41, $r42;
        com.android.server.ConnectivityService$LegacyTypeTracker $r47, $r54, $r63;
        byte $b8;
        android.os.RemoteException $r75;
        java.lang.Exception $r84;
        com.android.internal.app.IBatteryStats r94;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.server.connectivity.NetworkAgentInfo;

        z0 := @parameter1: boolean;

        $z3 = r1.<com.android.server.connectivity.NetworkAgentInfo: boolean created>;

        if $z3 != 0 goto label01;

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>("ERROR: uncreated network being rematched.");

     label01:
        if z0 == 0 goto label02;

        $z19 = r1.<com.android.server.connectivity.NetworkAgentInfo: boolean validated>;

        if $z19 != 0 goto label02;

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>("ERROR: nascent network not validated.");

     label02:
        z1 = virtualinvoke r1.<com.android.server.connectivity.NetworkAgentInfo: boolean isVPN()>();

        z2 = 0;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rematching ");

        $r10 = virtualinvoke r1.<com.android.server.connectivity.NetworkAgentInfo: java.lang.String name()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r12);

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r2 = $r15;

        $r14 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkRequests>;

        $r16 = virtualinvoke $r14.<java.util.HashMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z4 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label16;

        $r34 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.ConnectivityService$NetworkRequestInfo) $r34;

        $r37 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForRequestId>;

        $r33 = r4.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        $i3 = $r33.<android.net.NetworkRequest: int requestId>;

        $r36 = virtualinvoke $r37.<android.util.SparseArray: java.lang.Object get(int)>($i3);

        r5 = (com.android.server.connectivity.NetworkAgentInfo) $r36;

        if r1 != r5 goto label04;

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Network ");

        $r71 = virtualinvoke r1.<com.android.server.connectivity.NetworkAgentInfo: java.lang.String name()>();

        $r70 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r69 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was already satisfying");

        $r68 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" request ");

        $r67 = r4.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        $i17 = $r67.<android.net.NetworkRequest: int requestId>;

        $r79 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r78 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". No change.");

        $r77 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r77);

        z1 = 1;

        goto label03;

     label04:
        $r35 = r4.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        $r42 = $r35.<android.net.NetworkRequest: android.net.NetworkCapabilities networkCapabilities>;

        $r41 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkCapabilities networkCapabilities>;

        $z13 = virtualinvoke $r42.<android.net.NetworkCapabilities: boolean satisfiedByNetworkCapabilities(android.net.NetworkCapabilities)>($r41);

        if $z13 == 0 goto label15;

        $z14 = r4.<com.android.server.ConnectivityService$NetworkRequestInfo: boolean isRequest>;

        if $z14 != 0 goto label05;

        $r74 = r4.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        virtualinvoke r1.<com.android.server.connectivity.NetworkAgentInfo: void addRequest(android.net.NetworkRequest)>($r74);

        goto label03;

     label05:
        if r5 == null goto label06;

        $i14 = virtualinvoke r5.<com.android.server.connectivity.NetworkAgentInfo: int getCurrentScore()>();

        $i15 = virtualinvoke r1.<com.android.server.connectivity.NetworkAgentInfo: int getCurrentScore()>();

        if $i14 >= $i15 goto label15;

     label06:
        if r5 == null goto label07;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   accepting network in place of ");

        $r59 = virtualinvoke r5.<com.android.server.connectivity.NetworkAgentInfo: java.lang.String name()>();

        $r60 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r57 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r57);

        $r66 = r5.<com.android.server.connectivity.NetworkAgentInfo: android.util.SparseArray networkRequests>;

        $r58 = r4.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        $i16 = $r58.<android.net.NetworkRequest: int requestId>;

        virtualinvoke $r66.<android.util.SparseArray: void remove(int)>($i16);

        $r65 = r5.<com.android.server.connectivity.NetworkAgentInfo: java.util.ArrayList networkLingered>;

        $r64 = r4.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        virtualinvoke $r65.<java.util.ArrayList: boolean add(java.lang.Object)>($r64);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        goto label08;

     label07:
        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>("   accepting network in place of null");

     label08:
        $r39 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForRequestId>;

        $r38 = r4.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        $i4 = $r38.<android.net.NetworkRequest: int requestId>;

        virtualinvoke $r39.<android.util.SparseArray: void put(int,java.lang.Object)>($i4, r1);

        $r40 = r4.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        virtualinvoke r1.<com.android.server.connectivity.NetworkAgentInfo: void addRequest(android.net.NetworkRequest)>($r40);

        $z15 = r4.<com.android.server.ConnectivityService$NetworkRequestInfo: boolean isRequest>;

        if $z15 == 0 goto label09;

        $r51 = r4.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        $i11 = $r51.<android.net.NetworkRequest: int legacyType>;

        if $i11 == -1 goto label09;

        $r63 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$LegacyTypeTracker mLegacyTypeTracker>;

        $r53 = r4.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        $i13 = $r53.<android.net.NetworkRequest: int legacyType>;

        virtualinvoke $r63.<com.android.server.ConnectivityService$LegacyTypeTracker: void add(int,com.android.server.connectivity.NetworkAgentInfo)>($i13, r1);

     label09:
        z1 = 1;

        $r45 = r4.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        $i7 = virtualinvoke r1.<com.android.server.connectivity.NetworkAgentInfo: int getCurrentScore()>();

        specialinvoke r0.<com.android.server.ConnectivityService: void sendUpdatedScoreToFactories(android.net.NetworkRequest,int)>($r45, $i7);

        $r46 = r0.<com.android.server.ConnectivityService: android.net.NetworkRequest mDefaultRequest>;

        $i6 = $r46.<android.net.NetworkRequest: int requestId>;

        $r43 = r4.<com.android.server.ConnectivityService$NetworkRequestInfo: android.net.NetworkRequest request>;

        $i5 = $r43.<android.net.NetworkRequest: int requestId>;

        if $i6 != $i5 goto label15;

        z2 = 1;

        $r44 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo>;

        $i10 = virtualinvoke $r44.<android.net.NetworkInfo: int getType()>();

        r0.<com.android.server.ConnectivityService: int mActiveDefaultNetwork> = $i10;

        $r49 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.LinkProperties linkProperties>;

        if $r49 == null goto label10;

        specialinvoke r0.<com.android.server.ConnectivityService: void updateTcpBufferSizes(com.android.server.connectivity.NetworkAgentInfo)>(r1);

        $r56 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.LinkProperties linkProperties>;

        $r52 = virtualinvoke $r56.<android.net.LinkProperties: java.util.List getDnsServers()>();

        specialinvoke r0.<com.android.server.ConnectivityService: void setDefaultDnsSystemProperties(java.util.Collection)>($r52);

        goto label11;

     label10:
        $r50 = new java.util.ArrayList;

        specialinvoke $r50.<java.util.ArrayList: void <init>()>();

        specialinvoke r0.<com.android.server.ConnectivityService: void setDefaultDnsSystemProperties(java.util.Collection)>($r50);

     label11:
        if r5 == null goto label12;

        $r54 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$LegacyTypeTracker mLegacyTypeTracker>;

        $r55 = r5.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo>;

        $i12 = virtualinvoke $r55.<android.net.NetworkInfo: int getType()>();

        virtualinvoke $r54.<com.android.server.ConnectivityService$LegacyTypeTracker: void remove(int,com.android.server.connectivity.NetworkAgentInfo)>($i12, r5);

     label12:
        $z16 = r1.<com.android.server.connectivity.NetworkAgentInfo: boolean validated>;

        if $z16 == 0 goto label13;

        $b8 = 100;

        goto label14;

     label13:
        $b8 = 0;

     label14:
        r0.<com.android.server.ConnectivityService: int mDefaultInetConditionPublished> = $b8;

        $r47 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$LegacyTypeTracker mLegacyTypeTracker>;

        $r48 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo>;

        $i9 = virtualinvoke $r48.<android.net.NetworkInfo: int getType()>();

        virtualinvoke $r47.<com.android.server.ConnectivityService$LegacyTypeTracker: void add(int,com.android.server.connectivity.NetworkAgentInfo)>($i9, r1);

        specialinvoke r0.<com.android.server.ConnectivityService: void notifyLockdownVpn(com.android.server.connectivity.NetworkAgentInfo)>(r1);

     label15:
        goto label03;

     label16:
        r91 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label17:
        $z5 = interfaceinvoke r91.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label28;

        $r25 = interfaceinvoke r91.<java.util.Iterator: java.lang.Object next()>();

        r92 = (com.android.server.connectivity.NetworkAgentInfo) $r25;

        $z9 = virtualinvoke r92.<com.android.server.connectivity.NetworkAgentInfo: boolean isVPN()>();

        if $z9 != 0 goto label18;

        $z12 = r92.<com.android.server.connectivity.NetworkAgentInfo: boolean validated>;

        if $z12 == 0 goto label18;

        $z11 = 1;

        goto label19;

     label18:
        $z11 = 0;

     label19:
        z20 = $z11;

        i0 = 0;

     label20:
        $r29 = r92.<com.android.server.connectivity.NetworkAgentInfo: android.util.SparseArray networkRequests>;

        $i2 = virtualinvoke $r29.<android.util.SparseArray: int size()>();

        if i0 >= $i2 goto label25;

        if z20 == 0 goto label25;

        $r31 = r92.<com.android.server.connectivity.NetworkAgentInfo: android.util.SparseArray networkRequests>;

        $r30 = virtualinvoke $r31.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        r6 = (android.net.NetworkRequest) $r30;

     label21:
        $z10 = specialinvoke r0.<com.android.server.ConnectivityService: boolean isRequest(android.net.NetworkRequest)>(r6);

        if $z10 == 0 goto label22;

        z20 = 0;

     label22:
        goto label24;

     label23:
        $r84 := @caughtexception;

        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        $r86 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request ");

        $r85 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r88 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found in mNetworkRequests.");

        $r87 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r87);

        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        $r89 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  it came from request list  of ");

        $r81 = virtualinvoke r92.<com.android.server.connectivity.NetworkAgentInfo: java.lang.String name()>();

        $r80 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81);

        $r82 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r82);

     label24:
        i0 = i0 + 1;

        goto label20;

     label25:
        if z20 == 0 goto label26;

        $r32 = r92.<com.android.server.connectivity.NetworkAgentInfo: com.android.server.connectivity.NetworkMonitor networkMonitor>;

        virtualinvoke $r32.<com.android.server.connectivity.NetworkMonitor: void sendMessage(int)>(532483);

        virtualinvoke r0.<com.android.server.ConnectivityService: void notifyNetworkCallbacks(com.android.server.connectivity.NetworkAgentInfo,int)>(r92, 524291);

        goto label27;

     label26:
        $r28 = r92.<com.android.server.connectivity.NetworkAgentInfo: java.util.ArrayList networkLingered>;

        virtualinvoke $r28.<java.util.ArrayList: void clear()>();

     label27:
        goto label17;

     label28:
        if z1 == 0 goto label39;

        if z2 == 0 goto label34;

        specialinvoke r0.<com.android.server.ConnectivityService: void makeDefault(com.android.server.connectivity.NetworkAgentInfo)>(r1);

        r93 = r0;

        entermonitor r0;

     label29:
        $r22 = r0.<com.android.server.ConnectivityService: android.os.PowerManager$WakeLock mNetTransitionWakeLock>;

        $z7 = virtualinvoke $r22.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z7 == 0 goto label30;

        $r26 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $r24 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        $i1 = r0.<com.android.server.ConnectivityService: int mNetTransitionWakeLockSerialNumber>;

        $r27 = virtualinvoke $r24.<com.android.server.ConnectivityService$InternalHandler: android.os.Message obtainMessage(int,int,int)>(8, $i1, 0);

        virtualinvoke $r26.<com.android.server.ConnectivityService$InternalHandler: boolean sendMessageDelayed(android.os.Message,long)>($r27, 1000L);

     label30:
        exitmonitor r93;

     label31:
        goto label34;

     label32:
        $r76 := @caughtexception;

        r8 = $r76;

        exitmonitor r93;

     label33:
        throw r8;

     label34:
        r94 = staticinvoke <com.android.server.am.BatteryStatsService: com.android.internal.app.IBatteryStats getService()>();

        $r17 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo>;

        i18 = virtualinvoke $r17.<android.net.NetworkInfo: int getType()>();

        $r18 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.LinkProperties linkProperties>;

        r95 = virtualinvoke $r18.<android.net.LinkProperties: java.lang.String getInterfaceName()>();

        interfaceinvoke r94.<com.android.internal.app.IBatteryStats: void noteNetworkInterfaceType(java.lang.String,int)>(r95, i18);

        $r19 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.LinkProperties linkProperties>;

        $r20 = virtualinvoke $r19.<android.net.LinkProperties: java.util.List getStackedLinks()>();

        r96 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();

     label35:
        $z6 = interfaceinvoke r96.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label36;

        $r23 = interfaceinvoke r96.<java.util.Iterator: java.lang.Object next()>();

        r97 = (android.net.LinkProperties) $r23;

        r98 = virtualinvoke r97.<android.net.LinkProperties: java.lang.String getInterfaceName()>();

        interfaceinvoke r94.<com.android.internal.app.IBatteryStats: void noteNetworkInterfaceType(java.lang.String,int)>(r98, i18);

        staticinvoke <com.android.internal.net.NetworkStatsFactory: void noteStackedIface(java.lang.String,java.lang.String)>(r98, r95);

        goto label35;

     label36:
        goto label38;

     label37:
        $r75 := @caughtexception;

     label38:
        virtualinvoke r0.<com.android.server.ConnectivityService: void notifyNetworkCallbacks(com.android.server.connectivity.NetworkAgentInfo,int)>(r1, 524290);

        goto label40;

     label39:
        if z0 == 0 goto label40;

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>("Validated network turns out to be unwanted.  Tear it down.");

        specialinvoke r0.<com.android.server.ConnectivityService: void teardownUnneededNetwork(com.android.server.connectivity.NetworkAgentInfo)>(r1);

     label40:
        return;

        catch java.lang.Exception from label21 to label22 with label23;
        catch java.lang.Throwable from label29 to label31 with label32;
        catch java.lang.Throwable from label32 to label33 with label32;
        catch android.os.RemoteException from label34 to label36 with label37;
    }

    private void rematchAllNetworksAndRequests(com.android.server.connectivity.NetworkAgentInfo, int)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1, r3;
        int i0, $i1;
        java.util.Iterator r2;
        java.util.HashMap $r4;
        java.util.Collection $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.server.connectivity.NetworkAgentInfo;

        i0 := @parameter1: int;

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<com.android.server.connectivity.NetworkAgentInfo: int getCurrentScore()>();

        if i0 >= $i1 goto label1;

        specialinvoke r0.<com.android.server.ConnectivityService: void rematchNetworkAndRequests(com.android.server.connectivity.NetworkAgentInfo,boolean)>(r1, 0);

        goto label3;

     label1:
        $r4 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkAgentInfos>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.connectivity.NetworkAgentInfo) $r6;

        specialinvoke r0.<com.android.server.ConnectivityService: void rematchNetworkAndRequests(com.android.server.connectivity.NetworkAgentInfo,boolean)>(r3, 0);

        goto label2;

     label3:
        return;
    }

    private void updateInetCondition(com.android.server.connectivity.NetworkAgentInfo, boolean)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        boolean z0, $z1, $z2;
        byte b0, $b2;
        int $i1;
        android.net.NetworkInfo $r2;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.server.connectivity.NetworkAgentInfo;

        z0 := @parameter1: boolean;

        $z1 = r1.<com.android.server.connectivity.NetworkAgentInfo: boolean validated>;

        if $z1 != 0 goto label1;

        return;

     label1:
        $z2 = specialinvoke r0.<com.android.server.ConnectivityService: boolean isDefaultNetwork(com.android.server.connectivity.NetworkAgentInfo)>(r1);

        if $z2 != 0 goto label2;

        return;

     label2:
        if z0 == 0 goto label3;

        $b2 = 100;

        goto label4;

     label3:
        $b2 = 0;

     label4:
        b0 = $b2;

        $i1 = r0.<com.android.server.ConnectivityService: int mDefaultInetConditionPublished>;

        if b0 != $i1 goto label5;

        return;

     label5:
        r0.<com.android.server.ConnectivityService: int mDefaultInetConditionPublished> = b0;

        $r2 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo>;

        specialinvoke r0.<com.android.server.ConnectivityService: void sendInetConditionBroadcast(android.net.NetworkInfo)>($r2);

        return;
    }

    private void notifyLockdownVpn(com.android.server.connectivity.NetworkAgentInfo)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        com.android.server.net.LockdownVpnTracker $r2, $r3, $r5;
        boolean $z0;
        android.net.NetworkInfo $r4;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.server.connectivity.NetworkAgentInfo;

        $r2 = r0.<com.android.server.ConnectivityService: com.android.server.net.LockdownVpnTracker mLockdownTracker>;

        if $r2 == null goto label2;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.server.connectivity.NetworkAgentInfo: boolean isVPN()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.server.ConnectivityService: com.android.server.net.LockdownVpnTracker mLockdownTracker>;

        $r4 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo>;

        virtualinvoke $r5.<com.android.server.net.LockdownVpnTracker: void onVpnStateChanged(android.net.NetworkInfo)>($r4);

        goto label2;

     label1:
        $r3 = r0.<com.android.server.ConnectivityService: com.android.server.net.LockdownVpnTracker mLockdownTracker>;

        virtualinvoke $r3.<com.android.server.net.LockdownVpnTracker: void onNetworkInfoChanged()>();

     label2:
        return;
    }

    private void updateNetworkInfo(com.android.server.connectivity.NetworkAgentInfo, android.net.NetworkInfo)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1, r4;
        android.net.NetworkInfo r2, r51;
        android.net.NetworkInfo$State r3, $r17, $r20, $r24, $r38;
        java.lang.Throwable r5, r6, r7, $r39, $r40, $r47;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r15, $r16, $r42, $r43, $r45, $r48, $r49;
        java.lang.String $r10, $r18, $r46, $r50;
        java.io.Serializable $r14;
        com.android.internal.util.AsyncChannel $r19;
        java.lang.Object $r21, $r27, r53, r54;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        android.net.ProxyInfo $r22, $r23, $r25, $r30, $r31;
        android.net.Network $r26, $r33, $r41;
        int $i0, $i1, $i2;
        android.os.INetworkManagementService $r28, $r32;
        com.android.server.connectivity.NetworkMonitor $r29;
        android.net.LinkProperties $r34;
        android.net.NetworkMisc $r35, $r36;
        java.util.List $r37;
        java.lang.Exception $r44, r52;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.server.connectivity.NetworkAgentInfo;

        r2 := @parameter1: android.net.NetworkInfo;

        r3 = virtualinvoke r2.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        r4 = r1;

        entermonitor r1;

     label01:
        r51 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo>;

        r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo> = r2;

        exitmonitor r4;

     label02:
        goto label05;

     label03:
        $r39 := @caughtexception;

        r5 = $r39;

        exitmonitor r4;

     label04:
        throw r5;

     label05:
        specialinvoke r0.<com.android.server.ConnectivityService: void notifyLockdownVpn(com.android.server.connectivity.NetworkAgentInfo)>(r1);

        if r51 == null goto label06;

        $r38 = virtualinvoke r51.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        if $r38 != r3 goto label06;

        return;

     label06:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r1.<com.android.server.connectivity.NetworkAgentInfo: java.lang.String name()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" EVENT_NETWORK_INFO_CHANGED, going from ");

        if r51 != null goto label07;

        $r14 = "null";

        goto label08;

     label07:
        $r14 = virtualinvoke r51.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

     label08:
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r18);

        $r17 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTED>;

        if r3 != $r17 goto label25;

        $z2 = r1.<com.android.server.connectivity.NetworkAgentInfo: boolean created>;

        if $z2 != 0 goto label25;

     label09:
        $z3 = virtualinvoke r1.<com.android.server.connectivity.NetworkAgentInfo: boolean isVPN()>();

        if $z3 == 0 goto label15;

        $r32 = r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd>;

        $r33 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.Network network>;

        $i1 = $r33.<android.net.Network: int netId>;

        $r34 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.LinkProperties linkProperties>;

        $r37 = virtualinvoke $r34.<android.net.LinkProperties: java.util.List getDnsServers()>();

        $z6 = interfaceinvoke $r37.<java.util.List: boolean isEmpty()>();

        if $z6 != 0 goto label10;

        $z7 = 1;

        goto label11;

     label10:
        $z7 = 0;

     label11:
        $r36 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkMisc networkMisc>;

        if $r36 == null goto label12;

        $r35 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkMisc networkMisc>;

        $z9 = $r35.<android.net.NetworkMisc: boolean allowBypass>;

        if $z9 != 0 goto label13;

     label12:
        $z8 = 1;

        goto label14;

     label13:
        $z8 = 0;

     label14:
        interfaceinvoke $r32.<android.os.INetworkManagementService: void createVirtualNetwork(int,boolean,boolean)>($i1, $z7, $z8);

        goto label16;

     label15:
        $r28 = r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd>;

        $r26 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.Network network>;

        $i0 = $r26.<android.net.Network: int netId>;

        interfaceinvoke $r28.<android.os.INetworkManagementService: void createPhysicalNetwork(int)>($i0);

     label16:
        goto label18;

     label17:
        $r44 := @caughtexception;

        r52 = $r44;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error creating network ");

        $r41 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.Network network>;

        $i2 = $r41.<android.net.Network: int netId>;

        $r48 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r50 = virtualinvoke r52.<java.lang.Exception: java.lang.String getMessage()>();

        $r45 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r46);

        return;

     label18:
        r1.<com.android.server.connectivity.NetworkAgentInfo: boolean created> = 1;

        specialinvoke r0.<com.android.server.ConnectivityService: void updateLinkProperties(com.android.server.connectivity.NetworkAgentInfo,android.net.LinkProperties)>(r1, null);

        virtualinvoke r0.<com.android.server.ConnectivityService: void notifyNetworkCallbacks(com.android.server.connectivity.NetworkAgentInfo,int)>(r1, 524289);

        $r29 = r1.<com.android.server.connectivity.NetworkAgentInfo: com.android.server.connectivity.NetworkMonitor networkMonitor>;

        virtualinvoke $r29.<com.android.server.connectivity.NetworkMonitor: void sendMessage(int)>(532481);

        $z4 = virtualinvoke r1.<com.android.server.connectivity.NetworkAgentInfo: boolean isVPN()>();

        if $z4 == 0 goto label24;

        $r27 = r0.<com.android.server.ConnectivityService: java.lang.Object mProxyLock>;

        r53 = $r27;

        entermonitor $r27;

     label19:
        $z5 = r0.<com.android.server.ConnectivityService: boolean mDefaultProxyDisabled>;

        if $z5 != 0 goto label20;

        r0.<com.android.server.ConnectivityService: boolean mDefaultProxyDisabled> = 1;

        $r30 = r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mGlobalProxy>;

        if $r30 != null goto label20;

        $r31 = r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mDefaultProxy>;

        if $r31 == null goto label20;

        specialinvoke r0.<com.android.server.ConnectivityService: void sendProxyBroadcast(android.net.ProxyInfo)>(null);

     label20:
        exitmonitor r53;

     label21:
        goto label24;

     label22:
        $r47 := @caughtexception;

        r6 = $r47;

        exitmonitor r53;

     label23:
        throw r6;

     label24:
        specialinvoke r0.<com.android.server.ConnectivityService: void rematchNetworkAndRequests(com.android.server.connectivity.NetworkAgentInfo,boolean)>(r1, 0);

        goto label32;

     label25:
        $r20 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State DISCONNECTED>;

        if r3 == $r20 goto label26;

        $r24 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State SUSPENDED>;

        if r3 != $r24 goto label32;

     label26:
        $r19 = r1.<com.android.server.connectivity.NetworkAgentInfo: com.android.internal.util.AsyncChannel asyncChannel>;

        virtualinvoke $r19.<com.android.internal.util.AsyncChannel: void disconnect()>();

        $z0 = virtualinvoke r1.<com.android.server.connectivity.NetworkAgentInfo: boolean isVPN()>();

        if $z0 == 0 goto label32;

        $r21 = r0.<com.android.server.ConnectivityService: java.lang.Object mProxyLock>;

        r54 = $r21;

        entermonitor $r21;

     label27:
        $z1 = r0.<com.android.server.ConnectivityService: boolean mDefaultProxyDisabled>;

        if $z1 == 0 goto label28;

        r0.<com.android.server.ConnectivityService: boolean mDefaultProxyDisabled> = 0;

        $r23 = r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mGlobalProxy>;

        if $r23 != null goto label28;

        $r22 = r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mDefaultProxy>;

        if $r22 == null goto label28;

        $r25 = r0.<com.android.server.ConnectivityService: android.net.ProxyInfo mDefaultProxy>;

        specialinvoke r0.<com.android.server.ConnectivityService: void sendProxyBroadcast(android.net.ProxyInfo)>($r25);

     label28:
        exitmonitor r54;

     label29:
        goto label32;

     label30:
        $r40 := @caughtexception;

        r7 = $r40;

        exitmonitor r54;

     label31:
        throw r7;

     label32:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Exception from label09 to label16 with label17;
        catch java.lang.Throwable from label19 to label21 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
        catch java.lang.Throwable from label27 to label29 with label30;
        catch java.lang.Throwable from label30 to label31 with label30;
    }

    private void updateNetworkScore(com.android.server.connectivity.NetworkAgentInfo, int)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        int i0, i1;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r7, $r9, $r10, $r12, $r13, $r14, $r15;
        java.lang.String $r4, $r8, $r11, $r16;
        boolean $z0;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.server.connectivity.NetworkAgentInfo;

        i0 := @parameter1: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateNetworkScore for ");

        $r4 = virtualinvoke r1.<com.android.server.connectivity.NetworkAgentInfo: java.lang.String name()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r8);

        if i0 >= 0 goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateNetworkScore for ");

        $r11 = virtualinvoke r1.<com.android.server.connectivity.NetworkAgentInfo: java.lang.String name()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" got a negative score (");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").  Bumping score to min of 0");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>($r16);

        i0 = 0;

     label1:
        i1 = virtualinvoke r1.<com.android.server.connectivity.NetworkAgentInfo: int getCurrentScore()>();

        virtualinvoke r1.<com.android.server.connectivity.NetworkAgentInfo: void setCurrentScore(int)>(i0);

        $z0 = r1.<com.android.server.connectivity.NetworkAgentInfo: boolean created>;

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.android.server.ConnectivityService: void rematchAllNetworksAndRequests(com.android.server.connectivity.NetworkAgentInfo,int)>(r1, i1);

     label2:
        specialinvoke r0.<com.android.server.ConnectivityService: void sendUpdatedScoreToFactories(com.android.server.connectivity.NetworkAgentInfo)>(r1);

        return;
    }

    protected void notifyNetworkCallback(com.android.server.connectivity.NetworkAgentInfo, com.android.server.ConnectivityService$NetworkRequestInfo)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        com.android.server.ConnectivityService$NetworkRequestInfo r2;
        int i0;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.server.connectivity.NetworkAgentInfo;

        r2 := @parameter1: com.android.server.ConnectivityService$NetworkRequestInfo;

        i0 = 524290;

        specialinvoke r0.<com.android.server.ConnectivityService: void callCallbackForRequest(com.android.server.ConnectivityService$NetworkRequestInfo,com.android.server.connectivity.NetworkAgentInfo,int)>(r2, r1, i0);

        return;
    }

    private void sendLegacyNetworkBroadcast(com.android.server.connectivity.NetworkAgentInfo, boolean, int)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1, r4;
        boolean z0, $z1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.net.NetworkInfo r2, $r6, $r7, $r21, $r27, $r31;
        android.content.Intent r3, r5, $r10, $r18;
        android.net.NetworkInfo$DetailedState $r8, $r32;
        java.lang.String $r9, $r13, $r15, $r28, $r29, $r35;
        android.net.NetworkRequest $r14, $r24;
        android.util.SparseArray $r16, $r22;
        java.lang.Object $r17, $r23;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.server.connectivity.NetworkAgentInfo;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        $r6 = new android.net.NetworkInfo;

        $r7 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo>;

        specialinvoke $r6.<android.net.NetworkInfo: void <init>(android.net.NetworkInfo)>($r7);

        r2 = $r6;

        virtualinvoke r2.<android.net.NetworkInfo: void setType(int)>(i0);

        if z0 == 0 goto label1;

        $r32 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState CONNECTED>;

        $r35 = virtualinvoke r2.<android.net.NetworkInfo: java.lang.String getExtraInfo()>();

        virtualinvoke r2.<android.net.NetworkInfo: void setDetailedState(android.net.NetworkInfo$DetailedState,java.lang.String,java.lang.String)>($r32, null, $r35);

        $i7 = specialinvoke r0.<com.android.server.ConnectivityService: int getConnectivityChangeDelay()>();

        specialinvoke r0.<com.android.server.ConnectivityService: void sendConnectedBroadcastDelayed(android.net.NetworkInfo,int)>(r2, $i7);

        goto label7;

     label1:
        $r8 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState DISCONNECTED>;

        $r9 = virtualinvoke r2.<android.net.NetworkInfo: java.lang.String getExtraInfo()>();

        virtualinvoke r2.<android.net.NetworkInfo: void setDetailedState(android.net.NetworkInfo$DetailedState,java.lang.String,java.lang.String)>($r8, null, $r9);

        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>(java.lang.String)>("android.net.conn.CONNECTIVITY_CHANGE");

        r3 = $r10;

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("networkInfo", r2);

        $i1 = virtualinvoke r2.<android.net.NetworkInfo: int getType()>();

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("networkType", $i1);

        $z1 = virtualinvoke r2.<android.net.NetworkInfo: boolean isFailover()>();

        if $z1 == 0 goto label2;

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("isFailover", 1);

        $r31 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo>;

        virtualinvoke $r31.<android.net.NetworkInfo: void setFailover(boolean)>(0);

     label2:
        $r13 = virtualinvoke r2.<android.net.NetworkInfo: java.lang.String getReason()>();

        if $r13 == null goto label3;

        $r28 = virtualinvoke r2.<android.net.NetworkInfo: java.lang.String getReason()>();

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("reason", $r28);

     label3:
        $r15 = virtualinvoke r2.<android.net.NetworkInfo: java.lang.String getExtraInfo()>();

        if $r15 == null goto label4;

        $r29 = virtualinvoke r2.<android.net.NetworkInfo: java.lang.String getExtraInfo()>();

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("extraInfo", $r29);

     label4:
        r4 = null;

        $r16 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.util.SparseArray networkRequests>;

        $r14 = r0.<com.android.server.ConnectivityService: android.net.NetworkRequest mDefaultRequest>;

        $i2 = $r14.<android.net.NetworkRequest: int requestId>;

        $r17 = virtualinvoke $r16.<android.util.SparseArray: java.lang.Object get(int)>($i2);

        if $r17 == null goto label6;

        $r22 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForRequestId>;

        $r24 = r0.<com.android.server.ConnectivityService: android.net.NetworkRequest mDefaultRequest>;

        $i6 = $r24.<android.net.NetworkRequest: int requestId>;

        $r23 = virtualinvoke $r22.<android.util.SparseArray: java.lang.Object get(int)>($i6);

        r4 = (com.android.server.connectivity.NetworkAgentInfo) $r23;

        if r4 == null goto label5;

        $r27 = r4.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo>;

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("otherNetwork", $r27);

        goto label6;

     label5:
        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("noConnectivity", 1);

     label6:
        $i3 = r0.<com.android.server.ConnectivityService: int mDefaultInetConditionPublished>;

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("inetCondition", $i3);

        $r18 = new android.content.Intent;

        specialinvoke $r18.<android.content.Intent: void <init>(android.content.Intent)>(r3);

        r5 = $r18;

        virtualinvoke r5.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.net.conn.CONNECTIVITY_CHANGE_IMMEDIATE");

        specialinvoke r0.<com.android.server.ConnectivityService: void sendStickyBroadcast(android.content.Intent)>(r5);

        $i4 = specialinvoke r0.<com.android.server.ConnectivityService: int getConnectivityChangeDelay()>();

        specialinvoke r0.<com.android.server.ConnectivityService: void sendStickyBroadcastDelayed(android.content.Intent,int)>(r3, $i4);

        if r4 == null goto label7;

        $r21 = r4.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo>;

        $i5 = specialinvoke r0.<com.android.server.ConnectivityService: int getConnectivityChangeDelay()>();

        specialinvoke r0.<com.android.server.ConnectivityService: void sendConnectedBroadcastDelayed(android.net.NetworkInfo,int)>($r21, $i5);

     label7:
        return;
    }

    protected void notifyNetworkCallbacks(com.android.server.connectivity.NetworkAgentInfo, int)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        int i0, i1, $i2;
        android.net.NetworkRequest r2;
        com.android.server.ConnectivityService$NetworkRequestInfo r3;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r10;
        java.lang.String $r6, $r9, $r11;
        android.util.SparseArray $r12, $r14;
        java.lang.Object $r13, $r15;
        java.util.HashMap $r16;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: com.android.server.connectivity.NetworkAgentInfo;

        i0 := @parameter1: int;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifyType ");

        $r6 = specialinvoke r0.<com.android.server.ConnectivityService: java.lang.String notifyTypeToName(int)>(i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r9 = virtualinvoke r1.<com.android.server.connectivity.NetworkAgentInfo: java.lang.String name()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>($r11);

        i1 = 0;

     label1:
        $r12 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.util.SparseArray networkRequests>;

        $i2 = virtualinvoke $r12.<android.util.SparseArray: int size()>();

        if i1 >= $i2 goto label2;

        $r14 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.util.SparseArray networkRequests>;

        $r13 = virtualinvoke $r14.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r2 = (android.net.NetworkRequest) $r13;

        $r16 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkRequests>;

        $r15 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (com.android.server.ConnectivityService$NetworkRequestInfo) $r15;

        specialinvoke r0.<com.android.server.ConnectivityService: void callCallbackForRequest(com.android.server.ConnectivityService$NetworkRequestInfo,com.android.server.connectivity.NetworkAgentInfo,int)>(r3, r1, i0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private java.lang.String notifyTypeToName(int)
    {
        com.android.server.ConnectivityService r0;
        int i0;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 524289: goto label1;
            case 524290: goto label2;
            case 524291: goto label3;
            case 524292: goto label4;
            case 524293: goto label5;
            case 524294: goto label6;
            case 524295: goto label7;
            case 524296: goto label8;
            default: goto label9;
        };

     label1:
        return "PRECHECK";

     label2:
        return "AVAILABLE";

     label3:
        return "LOSING";

     label4:
        return "LOST";

     label5:
        return "UNAVAILABLE";

     label6:
        return "CAP_CHANGED";

     label7:
        return "IP_CHANGED";

     label8:
        return "RELEASED";

     label9:
        return "UNKNOWN";
    }

    private android.net.LinkProperties getLinkPropertiesForTypeInternal(int)
    {
        com.android.server.ConnectivityService r0;
        int i0;
        com.android.server.connectivity.NetworkAgentInfo r1, r2;
        java.lang.Throwable r3, $r9;
        com.android.server.ConnectivityService$LegacyTypeTracker $r4;
        android.net.LinkProperties $r5, $r7, $r8;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$LegacyTypeTracker mLegacyTypeTracker>;

        r1 = virtualinvoke $r4.<com.android.server.ConnectivityService$LegacyTypeTracker: com.android.server.connectivity.NetworkAgentInfo getNetworkForType(int)>(i0);

        if r1 == null goto label5;

        r2 = r1;

        entermonitor r1;

     label1:
        $r7 = new android.net.LinkProperties;

        $r8 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.LinkProperties linkProperties>;

        specialinvoke $r7.<android.net.LinkProperties: void <init>(android.net.LinkProperties)>($r8);

        exitmonitor r2;

     label2:
        return $r7;

     label3:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        $r5 = new android.net.LinkProperties;

        specialinvoke $r5.<android.net.LinkProperties: void <init>()>();

        return $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private android.net.NetworkInfo getNetworkInfoForType(int)
    {
        com.android.server.ConnectivityService r0;
        int i0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        android.net.NetworkInfo r2, $r5, $r8, $r9, r10;
        com.android.server.ConnectivityService$LegacyTypeTracker $r3, $r4;
        boolean $z0;
        java.lang.String $r6;
        android.net.NetworkInfo$DetailedState $r7;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$LegacyTypeTracker mLegacyTypeTracker>;

        $z0 = virtualinvoke $r3.<com.android.server.ConnectivityService$LegacyTypeTracker: boolean isTypeSupported(int)>(i0);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r4 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$LegacyTypeTracker mLegacyTypeTracker>;

        r1 = virtualinvoke $r4.<com.android.server.ConnectivityService$LegacyTypeTracker: com.android.server.connectivity.NetworkAgentInfo getNetworkForType(int)>(i0);

        if r1 == null goto label2;

        $r8 = new android.net.NetworkInfo;

        $r9 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkInfo networkInfo>;

        specialinvoke $r8.<android.net.NetworkInfo: void <init>(android.net.NetworkInfo)>($r9);

        r2 = $r8;

        virtualinvoke r2.<android.net.NetworkInfo: void setType(int)>(i0);

        return r2;

     label2:
        $r5 = new android.net.NetworkInfo;

        $r6 = staticinvoke <android.net.ConnectivityManager: java.lang.String getNetworkTypeName(int)>(i0);

        specialinvoke $r5.<android.net.NetworkInfo: void <init>(int,int,java.lang.String,java.lang.String)>(i0, 0, $r6, "");

        r10 = $r5;

        $r7 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState DISCONNECTED>;

        virtualinvoke r10.<android.net.NetworkInfo: void setDetailedState(android.net.NetworkInfo$DetailedState,java.lang.String,java.lang.String)>($r7, null, null);

        virtualinvoke r10.<android.net.NetworkInfo: void setIsAvailable(boolean)>(1);

        return r10;
    }

    private android.net.NetworkCapabilities getNetworkCapabilitiesForType(int)
    {
        com.android.server.ConnectivityService r0;
        int i0;
        com.android.server.connectivity.NetworkAgentInfo r1, r2;
        java.lang.Throwable r3, $r9;
        com.android.server.ConnectivityService$LegacyTypeTracker $r4;
        android.net.NetworkCapabilities $r5, $r7, $r8;

        r0 := @this: com.android.server.ConnectivityService;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$LegacyTypeTracker mLegacyTypeTracker>;

        r1 = virtualinvoke $r4.<com.android.server.ConnectivityService$LegacyTypeTracker: com.android.server.connectivity.NetworkAgentInfo getNetworkForType(int)>(i0);

        if r1 == null goto label5;

        r2 = r1;

        entermonitor r1;

     label1:
        $r7 = new android.net.NetworkCapabilities;

        $r8 = r1.<com.android.server.connectivity.NetworkAgentInfo: android.net.NetworkCapabilities networkCapabilities>;

        specialinvoke $r7.<android.net.NetworkCapabilities: void <init>(android.net.NetworkCapabilities)>($r8);

        exitmonitor r2;

     label2:
        return $r7;

     label3:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        $r5 = new android.net.NetworkCapabilities;

        specialinvoke $r5.<android.net.NetworkCapabilities: void <init>()>();

        return $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean addVpnAddress(java.lang.String, int)
    {
        com.android.server.ConnectivityService r0;
        java.lang.String r1;
        int i0, i1, $i2;
        android.util.SparseArray r2, $r4, $r5;
        java.lang.Throwable r3, $r8;
        java.lang.Object $r6;
        com.android.server.connectivity.Vpn $r7;
        boolean $z0;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.ConnectivityService: void throwIfLockdownEnabled()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        $r4 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mVpns>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mVpns>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        $r7 = (com.android.server.connectivity.Vpn) $r6;

        $z0 = virtualinvoke $r7.<com.android.server.connectivity.Vpn: boolean addAddress(java.lang.String,int)>(r1, i0);

        exitmonitor r2;

     label2:
        return $z0;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean removeVpnAddress(java.lang.String, int)
    {
        com.android.server.ConnectivityService r0;
        java.lang.String r1;
        int i0, i1, $i2;
        android.util.SparseArray r2, $r4, $r5;
        java.lang.Throwable r3, $r8;
        java.lang.Object $r6;
        com.android.server.connectivity.Vpn $r7;
        boolean $z0;

        r0 := @this: com.android.server.ConnectivityService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.ConnectivityService: void throwIfLockdownEnabled()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        $r4 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mVpns>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mVpns>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        $r7 = (com.android.server.connectivity.Vpn) $r6;

        $z0 = virtualinvoke $r7.<com.android.server.connectivity.Vpn: boolean removeAddress(java.lang.String,int)>(r1, i0);

        exitmonitor r2;

     label2:
        return $z0;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static boolean access$000(com.android.server.ConnectivityService, com.android.server.connectivity.NetworkAgentInfo)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.ConnectivityService;

        r1 := @parameter1: com.android.server.connectivity.NetworkAgentInfo;

        $z0 = specialinvoke r0.<com.android.server.ConnectivityService: boolean isDefaultNetwork(com.android.server.connectivity.NetworkAgentInfo)>(r1);

        return $z0;
    }

    static void access$100(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.android.server.ConnectivityService: void loge(java.lang.String)>(r0);

        return;
    }

    static void access$200(com.android.server.ConnectivityService, com.android.server.connectivity.NetworkAgentInfo, boolean, int)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        boolean z0;
        int i0;

        r0 := @parameter0: com.android.server.ConnectivityService;

        r1 := @parameter1: com.android.server.connectivity.NetworkAgentInfo;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        specialinvoke r0.<com.android.server.ConnectivityService: void sendLegacyNetworkBroadcast(com.android.server.connectivity.NetworkAgentInfo,boolean,int)>(r1, z0, i0);

        return;
    }

    static com.android.server.ConnectivityService$InternalHandler access$300(com.android.server.ConnectivityService)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.ConnectivityService$InternalHandler $r1;

        r0 := @parameter0: com.android.server.ConnectivityService;

        $r1 = r0.<com.android.server.ConnectivityService: com.android.server.ConnectivityService$InternalHandler mHandler>;

        return $r1;
    }

    static void access$400(com.android.server.ConnectivityService, int, boolean, long)
    {
        com.android.server.ConnectivityService r0;
        int i0;
        boolean z0;
        long l1;

        r0 := @parameter0: com.android.server.ConnectivityService;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        l1 := @parameter3: long;

        specialinvoke r0.<com.android.server.ConnectivityService: void sendDataActivityBroadcast(int,boolean,long)>(i0, z0, l1);

        return;
    }

    static java.lang.Object access$500(com.android.server.ConnectivityService)
    {
        com.android.server.ConnectivityService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.ConnectivityService;

        $r1 = r0.<com.android.server.ConnectivityService: java.lang.Object mRulesLock>;

        return $r1;
    }

    static android.util.SparseIntArray access$600(com.android.server.ConnectivityService)
    {
        com.android.server.ConnectivityService r0;
        android.util.SparseIntArray $r1;

        r0 := @parameter0: com.android.server.ConnectivityService;

        $r1 = r0.<com.android.server.ConnectivityService: android.util.SparseIntArray mUidRules>;

        return $r1;
    }

    static java.util.HashSet access$700(com.android.server.ConnectivityService)
    {
        com.android.server.ConnectivityService r0;
        java.util.HashSet $r1;

        r0 := @parameter0: com.android.server.ConnectivityService;

        $r1 = r0.<com.android.server.ConnectivityService: java.util.HashSet mMeteredIfaces>;

        return $r1;
    }

    static int access$800(com.android.server.ConnectivityService)
    {
        com.android.server.ConnectivityService r0;
        int $i0;

        r0 := @parameter0: com.android.server.ConnectivityService;

        $i0 = r0.<com.android.server.ConnectivityService: int mActiveDefaultNetwork>;

        return $i0;
    }

    static android.net.NetworkStateTracker[] access$900(com.android.server.ConnectivityService)
    {
        com.android.server.ConnectivityService r0;
        android.net.NetworkStateTracker[] $r1;

        r0 := @parameter0: com.android.server.ConnectivityService;

        $r1 = r0.<com.android.server.ConnectivityService: android.net.NetworkStateTracker[] mNetTrackers>;

        return $r1;
    }

    static android.content.Context access$1000(com.android.server.ConnectivityService)
    {
        com.android.server.ConnectivityService r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.ConnectivityService;

        $r1 = r0.<com.android.server.ConnectivityService: android.content.Context mContext>;

        return $r1;
    }

    static void access$1100(com.android.server.ConnectivityService, android.os.Message)
    {
        com.android.server.ConnectivityService r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.ConnectivityService;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<com.android.server.ConnectivityService: void handleAsyncChannelHalfConnect(android.os.Message)>(r1);

        return;
    }

    static java.util.HashMap access$1200(com.android.server.ConnectivityService)
    {
        com.android.server.ConnectivityService r0;
        java.util.HashMap $r1;

        r0 := @parameter0: com.android.server.ConnectivityService;

        $r1 = r0.<com.android.server.ConnectivityService: java.util.HashMap mNetworkAgentInfos>;

        return $r1;
    }

    static void access$1300(com.android.server.ConnectivityService, android.os.Message)
    {
        com.android.server.ConnectivityService r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.ConnectivityService;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<com.android.server.ConnectivityService: void handleAsyncChannelDisconnected(android.os.Message)>(r1);

        return;
    }

    static void access$1400(com.android.server.ConnectivityService, com.android.server.connectivity.NetworkAgentInfo, android.net.NetworkCapabilities)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        android.net.NetworkCapabilities r2;

        r0 := @parameter0: com.android.server.ConnectivityService;

        r1 := @parameter1: com.android.server.connectivity.NetworkAgentInfo;

        r2 := @parameter2: android.net.NetworkCapabilities;

        specialinvoke r0.<com.android.server.ConnectivityService: void updateCapabilities(com.android.server.connectivity.NetworkAgentInfo,android.net.NetworkCapabilities)>(r1, r2);

        return;
    }

    static void access$1500(com.android.server.ConnectivityService, com.android.server.connectivity.NetworkAgentInfo, android.net.LinkProperties)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        android.net.LinkProperties r2;

        r0 := @parameter0: com.android.server.ConnectivityService;

        r1 := @parameter1: com.android.server.connectivity.NetworkAgentInfo;

        r2 := @parameter2: android.net.LinkProperties;

        specialinvoke r0.<com.android.server.ConnectivityService: void updateLinkProperties(com.android.server.connectivity.NetworkAgentInfo,android.net.LinkProperties)>(r1, r2);

        return;
    }

    static void access$1600(com.android.server.ConnectivityService, com.android.server.connectivity.NetworkAgentInfo, android.net.NetworkInfo)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        android.net.NetworkInfo r2;

        r0 := @parameter0: com.android.server.ConnectivityService;

        r1 := @parameter1: com.android.server.connectivity.NetworkAgentInfo;

        r2 := @parameter2: android.net.NetworkInfo;

        specialinvoke r0.<com.android.server.ConnectivityService: void updateNetworkInfo(com.android.server.connectivity.NetworkAgentInfo,android.net.NetworkInfo)>(r1, r2);

        return;
    }

    static void access$1700(com.android.server.ConnectivityService, com.android.server.connectivity.NetworkAgentInfo, int)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        int i0;

        r0 := @parameter0: com.android.server.ConnectivityService;

        r1 := @parameter1: com.android.server.connectivity.NetworkAgentInfo;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.ConnectivityService: void updateNetworkScore(com.android.server.connectivity.NetworkAgentInfo,int)>(r1, i0);

        return;
    }

    static android.os.INetworkManagementService access$1800(com.android.server.ConnectivityService)
    {
        com.android.server.ConnectivityService r0;
        android.os.INetworkManagementService $r1;

        r0 := @parameter0: com.android.server.ConnectivityService;

        $r1 = r0.<com.android.server.ConnectivityService: android.os.INetworkManagementService mNetd>;

        return $r1;
    }

    static boolean access$1900(com.android.server.ConnectivityService, com.android.server.connectivity.NetworkAgentInfo, java.lang.String)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        java.lang.String r2;
        boolean $z0;

        r0 := @parameter0: com.android.server.ConnectivityService;

        r1 := @parameter1: com.android.server.connectivity.NetworkAgentInfo;

        r2 := @parameter2: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.ConnectivityService: boolean isLiveNetworkAgent(com.android.server.connectivity.NetworkAgentInfo,java.lang.String)>(r1, r2);

        return $z0;
    }

    static void access$2000(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.android.server.ConnectivityService: void log(java.lang.String)>(r0);

        return;
    }

    static void access$2100(com.android.server.ConnectivityService, com.android.server.connectivity.NetworkAgentInfo, boolean)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        boolean z0;

        r0 := @parameter0: com.android.server.ConnectivityService;

        r1 := @parameter1: com.android.server.connectivity.NetworkAgentInfo;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.ConnectivityService: void rematchNetworkAndRequests(com.android.server.connectivity.NetworkAgentInfo,boolean)>(r1, z0);

        return;
    }

    static void access$2200(com.android.server.ConnectivityService, com.android.server.connectivity.NetworkAgentInfo)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;

        r0 := @parameter0: com.android.server.ConnectivityService;

        r1 := @parameter1: com.android.server.connectivity.NetworkAgentInfo;

        specialinvoke r0.<com.android.server.ConnectivityService: void sendUpdatedScoreToFactories(com.android.server.connectivity.NetworkAgentInfo)>(r1);

        return;
    }

    static void access$2300(com.android.server.ConnectivityService, com.android.server.connectivity.NetworkAgentInfo, boolean)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;
        boolean z0;

        r0 := @parameter0: com.android.server.ConnectivityService;

        r1 := @parameter1: com.android.server.connectivity.NetworkAgentInfo;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.ConnectivityService: void updateInetCondition(com.android.server.connectivity.NetworkAgentInfo,boolean)>(r1, z0);

        return;
    }

    static void access$2400(com.android.server.ConnectivityService, com.android.server.connectivity.NetworkAgentInfo)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;

        r0 := @parameter0: com.android.server.ConnectivityService;

        r1 := @parameter1: com.android.server.connectivity.NetworkAgentInfo;

        specialinvoke r0.<com.android.server.ConnectivityService: void handleLingerComplete(com.android.server.connectivity.NetworkAgentInfo)>(r1);

        return;
    }

    static void access$2500(com.android.server.ConnectivityService, boolean, int, int, java.lang.String, android.app.PendingIntent)
    {
        com.android.server.ConnectivityService r0;
        boolean z0;
        int i0, i1;
        java.lang.String r1;
        android.app.PendingIntent r2;

        r0 := @parameter0: com.android.server.ConnectivityService;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r1 := @parameter4: java.lang.String;

        r2 := @parameter5: android.app.PendingIntent;

        specialinvoke r0.<com.android.server.ConnectivityService: void setProvNotificationVisibleIntent(boolean,int,int,java.lang.String,android.app.PendingIntent)>(z0, i0, i1, r1, r2);

        return;
    }

    static android.util.SparseArray access$2600(com.android.server.ConnectivityService)
    {
        com.android.server.ConnectivityService r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.server.ConnectivityService;

        $r1 = r0.<com.android.server.ConnectivityService: android.util.SparseArray mNetworkForNetId>;

        return $r1;
    }

    static android.net.LinkProperties access$2700(com.android.server.ConnectivityService, int)
    {
        com.android.server.ConnectivityService r0;
        int i0;
        android.net.LinkProperties $r1;

        r0 := @parameter0: com.android.server.ConnectivityService;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.ConnectivityService: android.net.LinkProperties getLinkPropertiesForTypeInternal(int)>(i0);

        return $r1;
    }

    static void access$2800(com.android.server.ConnectivityService, com.android.server.connectivity.NetworkAgentInfo)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;

        r0 := @parameter0: com.android.server.ConnectivityService;

        r1 := @parameter1: com.android.server.connectivity.NetworkAgentInfo;

        specialinvoke r0.<com.android.server.ConnectivityService: void notifyLockdownVpn(com.android.server.connectivity.NetworkAgentInfo)>(r1);

        return;
    }

    static int access$2900(com.android.server.ConnectivityService)
    {
        com.android.server.ConnectivityService r0;
        int $i0;

        r0 := @parameter0: com.android.server.ConnectivityService;

        $i0 = r0.<com.android.server.ConnectivityService: int mNetTransitionWakeLockSerialNumber>;

        return $i0;
    }

    static android.os.PowerManager$WakeLock access$3000(com.android.server.ConnectivityService)
    {
        com.android.server.ConnectivityService r0;
        android.os.PowerManager$WakeLock $r1;

        r0 := @parameter0: com.android.server.ConnectivityService;

        $r1 = r0.<com.android.server.ConnectivityService: android.os.PowerManager$WakeLock mNetTransitionWakeLock>;

        return $r1;
    }

    static java.lang.String access$3100(com.android.server.ConnectivityService)
    {
        com.android.server.ConnectivityService r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.ConnectivityService;

        $r1 = r0.<com.android.server.ConnectivityService: java.lang.String mNetTransitionWakeLockCausedBy>;

        return $r1;
    }

    static void access$3200(com.android.server.ConnectivityService)
    {
        com.android.server.ConnectivityService r0;

        r0 := @parameter0: com.android.server.ConnectivityService;

        specialinvoke r0.<com.android.server.ConnectivityService: void handleDeprecatedGlobalHttpProxy()>();

        return;
    }

    static void access$3300(com.android.server.ConnectivityService, int, boolean)
    {
        com.android.server.ConnectivityService r0;
        int i0;
        boolean z0;

        r0 := @parameter0: com.android.server.ConnectivityService;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.ConnectivityService: void handleSetDependencyMet(int,boolean)>(i0, z0);

        return;
    }

    static void access$3400(com.android.server.ConnectivityService, android.content.Intent)
    {
        com.android.server.ConnectivityService r0;
        android.content.Intent r1;

        r0 := @parameter0: com.android.server.ConnectivityService;

        r1 := @parameter1: android.content.Intent;

        specialinvoke r0.<com.android.server.ConnectivityService: void sendStickyBroadcast(android.content.Intent)>(r1);

        return;
    }

    static void access$3500(com.android.server.ConnectivityService, int, boolean)
    {
        com.android.server.ConnectivityService r0;
        int i0;
        boolean z0;

        r0 := @parameter0: com.android.server.ConnectivityService;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.ConnectivityService: void handleSetPolicyDataEnable(int,boolean)>(i0, z0);

        return;
    }

    static java.util.concurrent.atomic.AtomicInteger access$3600(com.android.server.ConnectivityService)
    {
        com.android.server.ConnectivityService r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @parameter0: com.android.server.ConnectivityService;

        $r1 = r0.<com.android.server.ConnectivityService: java.util.concurrent.atomic.AtomicInteger mEnableFailFastMobileDataTag>;

        return $r1;
    }

    static void access$3700(com.android.server.ConnectivityService)
    {
        com.android.server.ConnectivityService r0;

        r0 := @parameter0: com.android.server.ConnectivityService;

        specialinvoke r0.<com.android.server.ConnectivityService: void handleNetworkSamplingTimeout()>();

        return;
    }

    static void access$3800(com.android.server.ConnectivityService, android.net.ProxyInfo)
    {
        com.android.server.ConnectivityService r0;
        android.net.ProxyInfo r1;

        r0 := @parameter0: com.android.server.ConnectivityService;

        r1 := @parameter1: android.net.ProxyInfo;

        specialinvoke r0.<com.android.server.ConnectivityService: void handleApplyDefaultProxy(android.net.ProxyInfo)>(r1);

        return;
    }

    static void access$3900(com.android.server.ConnectivityService, com.android.server.ConnectivityService$NetworkFactoryInfo)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.ConnectivityService$NetworkFactoryInfo r1;

        r0 := @parameter0: com.android.server.ConnectivityService;

        r1 := @parameter1: com.android.server.ConnectivityService$NetworkFactoryInfo;

        specialinvoke r0.<com.android.server.ConnectivityService: void handleRegisterNetworkFactory(com.android.server.ConnectivityService$NetworkFactoryInfo)>(r1);

        return;
    }

    static void access$4000(com.android.server.ConnectivityService, android.os.Messenger)
    {
        com.android.server.ConnectivityService r0;
        android.os.Messenger r1;

        r0 := @parameter0: com.android.server.ConnectivityService;

        r1 := @parameter1: android.os.Messenger;

        specialinvoke r0.<com.android.server.ConnectivityService: void handleUnregisterNetworkFactory(android.os.Messenger)>(r1);

        return;
    }

    static void access$4100(com.android.server.ConnectivityService, com.android.server.connectivity.NetworkAgentInfo)
    {
        com.android.server.ConnectivityService r0;
        com.android.server.connectivity.NetworkAgentInfo r1;

        r0 := @parameter0: com.android.server.ConnectivityService;

        r1 := @parameter1: com.android.server.connectivity.NetworkAgentInfo;

        specialinvoke r0.<com.android.server.ConnectivityService: void handleRegisterNetworkAgent(com.android.server.connectivity.NetworkAgentInfo)>(r1);

        return;
    }

    static void access$4200(com.android.server.ConnectivityService, android.os.Message)
    {
        com.android.server.ConnectivityService r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.ConnectivityService;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<com.android.server.ConnectivityService: void handleRegisterNetworkRequest(android.os.Message)>(r1);

        return;
    }

    static void access$4300(com.android.server.ConnectivityService, android.net.NetworkRequest, int)
    {
        com.android.server.ConnectivityService r0;
        android.net.NetworkRequest r1;
        int i0;

        r0 := @parameter0: com.android.server.ConnectivityService;

        r1 := @parameter1: android.net.NetworkRequest;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.ConnectivityService: void handleReleaseNetworkRequest(android.net.NetworkRequest,int)>(r1, i0);

        return;
    }

    static void access$4400(com.android.server.ConnectivityService, int)
    {
        com.android.server.ConnectivityService r0;
        int i0;

        r0 := @parameter0: com.android.server.ConnectivityService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.ConnectivityService: void onUserStart(int)>(i0);

        return;
    }

    static void access$4500(com.android.server.ConnectivityService, int)
    {
        com.android.server.ConnectivityService r0;
        int i0;

        r0 := @parameter0: com.android.server.ConnectivityService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.ConnectivityService: void onUserStop(int)>(i0);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.ConnectivityService: int PROVISIONING> = 2;

        <com.android.server.ConnectivityService: int REDIRECTED_PROVISIONING> = 1;

        <com.android.server.ConnectivityService: java.lang.String ATTR_MNC> = "mnc";

        <com.android.server.ConnectivityService: java.lang.String ATTR_MCC> = "mcc";

        <com.android.server.ConnectivityService: java.lang.String TAG_REDIRECTED_URL> = "redirectedUrl";

        <com.android.server.ConnectivityService: java.lang.String TAG_PROVISIONING_URL> = "provisioningUrl";

        <com.android.server.ConnectivityService: java.lang.String TAG_PROVISIONING_URLS> = "provisioningUrls";

        <com.android.server.ConnectivityService: java.lang.String PROVISIONING_URL_PATH> = "/data/misc/radio/provisioning_urls.xml";

        <com.android.server.ConnectivityService: java.lang.String NOTIFICATION_ID> = "CaptivePortal.Notification";

        <com.android.server.ConnectivityService: java.lang.String DEFAULT_TCP_BUFFER_SIZES> = "4096,87380,110208,4096,16384,110208";

        <com.android.server.ConnectivityService: int MAX_NET_ID> = 65535;

        <com.android.server.ConnectivityService: int MIN_NET_ID> = 100;

        <com.android.server.ConnectivityService: int INET_CONDITION_LOG_MAX_SIZE> = 15;

        <com.android.server.ConnectivityService: int EVENT_SYSTEM_READY> = 25;

        <com.android.server.ConnectivityService: int EVENT_EXPIRE_NET_TRANSITION_WAKELOCK> = 24;

        <com.android.server.ConnectivityService: int EVENT_UNREGISTER_NETWORK_FACTORY> = 23;

        <com.android.server.ConnectivityService: int EVENT_RELEASE_NETWORK_REQUEST> = 22;

        <com.android.server.ConnectivityService: int EVENT_REGISTER_NETWORK_LISTENER> = 21;

        <com.android.server.ConnectivityService: int EVENT_TIMEOUT_NETWORK_REQUEST> = 20;

        <com.android.server.ConnectivityService: int EVENT_REGISTER_NETWORK_REQUEST> = 19;

        <com.android.server.ConnectivityService: int EVENT_REGISTER_NETWORK_AGENT> = 18;

        <com.android.server.ConnectivityService: int EVENT_REGISTER_NETWORK_FACTORY> = 17;

        <com.android.server.ConnectivityService: int EVENT_PROXY_HAS_CHANGED> = 16;

        <com.android.server.ConnectivityService: int EVENT_SAMPLE_INTERVAL_ELAPSED> = 15;

        <com.android.server.ConnectivityService: int EVENT_ENABLE_FAIL_FAST_MOBILE_DATA> = 14;

        <com.android.server.ConnectivityService: int EVENT_SET_POLICY_DATA_ENABLE> = 12;

        <com.android.server.ConnectivityService: int EVENT_SEND_STICKY_BROADCAST_INTENT> = 11;

        <com.android.server.ConnectivityService: int EVENT_SET_DEPENDENCY_MET> = 10;

        <com.android.server.ConnectivityService: int EVENT_APPLY_GLOBAL_HTTP_PROXY> = 9;

        <com.android.server.ConnectivityService: int EVENT_CLEAR_NET_TRANSITION_WAKELOCK> = 8;

        <com.android.server.ConnectivityService: int EVENT_CHANGE_MOBILE_DATA_ENABLED> = 2;

        <com.android.server.ConnectivityService: int DISABLED> = 0;

        <com.android.server.ConnectivityService: int ENABLED> = 1;

        <com.android.server.ConnectivityService: int DEFAULT_START_SAMPLING_INTERVAL_IN_SECONDS> = 60;

        <com.android.server.ConnectivityService: int DEFAULT_SAMPLING_INTERVAL_IN_SECONDS> = 720;

        <com.android.server.ConnectivityService: int SAMPLE_INTERVAL_ELAPSED_REQUEST_CODE> = 0;

        <com.android.server.ConnectivityService: java.lang.String ACTION_PKT_CNT_SAMPLE_INTERVAL_ELAPSED> = "android.net.ConnectivityService.action.PKT_CNT_SAMPLE_INTERVAL_ELAPSED";

        <com.android.server.ConnectivityService: java.lang.String FAIL_FAST_TIME_MS> = "persist.radio.fail_fast_time_ms";

        <com.android.server.ConnectivityService: int DEFAULT_FAIL_FAST_TIME_MS> = 60000;

        <com.android.server.ConnectivityService: java.lang.String NETWORK_RESTORE_DELAY_PROP_NAME> = "android.telephony.apn-restore";

        <com.android.server.ConnectivityService: int RESTORE_DEFAULT_NETWORK_DELAY> = 60000;

        <com.android.server.ConnectivityService: boolean LOGD_RULES> = 0;

        <com.android.server.ConnectivityService: boolean SAMPLE_DBG> = 0;

        <com.android.server.ConnectivityService: boolean VDBG> = 0;

        <com.android.server.ConnectivityService: boolean DBG> = 1;

        <com.android.server.ConnectivityService: java.lang.String TAG> = "ConnectivityService";

        return;
    }
}
