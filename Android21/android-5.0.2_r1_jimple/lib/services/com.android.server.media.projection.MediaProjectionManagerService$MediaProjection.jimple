final class com.android.server.media.projection.MediaProjectionManagerService$MediaProjection extends android.media.projection.IMediaProjection$Stub
{
    public final int uid;
    public final java.lang.String packageName;
    public final android.os.UserHandle userHandle;
    private android.os.IBinder mToken;
    private android.os.IBinder$DeathRecipient mDeathEater;
    private int mType;
    final com.android.server.media.projection.MediaProjectionManagerService this$0;

    public void <init>(com.android.server.media.projection.MediaProjectionManagerService, int, int, java.lang.String)
    {
        com.android.server.media.projection.MediaProjectionManagerService$MediaProjection r0;
        com.android.server.media.projection.MediaProjectionManagerService r1;
        int i0, i1, $i2;
        java.lang.String r2;
        android.os.UserHandle $r3;

        r0 := @this: com.android.server.media.projection.MediaProjectionManagerService$MediaProjection;

        r1 := @parameter0: com.android.server.media.projection.MediaProjectionManagerService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: com.android.server.media.projection.MediaProjectionManagerService this$0> = r1;

        specialinvoke r0.<android.media.projection.IMediaProjection$Stub: void <init>()>();

        r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: int mType> = i0;

        r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: int uid> = i1;

        r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: java.lang.String packageName> = r2;

        $r3 = new android.os.UserHandle;

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i1);

        specialinvoke $r3.<android.os.UserHandle: void <init>(int)>($i2);

        r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: android.os.UserHandle userHandle> = $r3;

        return;
    }

    public boolean canProjectVideo()
    {
        com.android.server.media.projection.MediaProjectionManagerService$MediaProjection r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.server.media.projection.MediaProjectionManagerService$MediaProjection;

        $i0 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: int mType>;

        if $i0 == 1 goto label1;

        $i1 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: int mType>;

        if $i1 != 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean canProjectSecureVideo()
    {
        com.android.server.media.projection.MediaProjectionManagerService$MediaProjection r0;

        r0 := @this: com.android.server.media.projection.MediaProjectionManagerService$MediaProjection;

        return 0;
    }

    public boolean canProjectAudio()
    {
        com.android.server.media.projection.MediaProjectionManagerService$MediaProjection r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.server.media.projection.MediaProjectionManagerService$MediaProjection;

        $i0 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: int mType>;

        if $i0 == 1 goto label1;

        $i1 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: int mType>;

        if $i1 != 2 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public int applyVirtualDisplayFlags(int)
    {
        com.android.server.media.projection.MediaProjectionManagerService$MediaProjection r0;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7, i8, i9;
        java.lang.RuntimeException $r1;

        r0 := @this: com.android.server.media.projection.MediaProjectionManagerService$MediaProjection;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: int mType>;

        if $i1 != 0 goto label1;

        i4 = i0 & -9;

        i5 = i4 | 18;

        return i5;

     label1:
        $i2 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: int mType>;

        if $i2 != 1 goto label2;

        i6 = i0 & -18;

        i7 = i6 | 10;

        return i7;

     label2:
        $i3 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: int mType>;

        if $i3 != 2 goto label3;

        i8 = i0 & -9;

        i9 = i8 | 19;

        return i9;

     label3:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unknown MediaProjection type");

        throw $r1;
    }

    public void start(android.media.projection.IMediaProjectionCallback)
    {
        com.android.server.media.projection.MediaProjectionManagerService$MediaProjection r0;
        android.media.projection.IMediaProjectionCallback r1;
        java.lang.Object r2, $r6;
        android.os.RemoteException r3, $r17;
        java.lang.Throwable r4, $r16;
        com.android.server.media.projection.MediaProjectionManagerService $r5, $r7, $r13;
        android.os.IBinder $r8, $r9, $r12;
        boolean $z0;
        com.android.server.media.projection.MediaProjectionManagerService$MediaProjection$1 $r10;
        android.os.IBinder$DeathRecipient $r11;
        java.lang.IllegalArgumentException $r14;
        java.lang.IllegalStateException $r15;

        r0 := @this: com.android.server.media.projection.MediaProjectionManagerService$MediaProjection;

        r1 := @parameter0: android.media.projection.IMediaProjectionCallback;

        if r1 != null goto label01;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback must not be null");

        throw $r14;

     label01:
        $r5 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: com.android.server.media.projection.MediaProjectionManagerService this$0>;

        $r6 = staticinvoke <com.android.server.media.projection.MediaProjectionManagerService: java.lang.Object access$200(com.android.server.media.projection.MediaProjectionManagerService)>($r5);

        r2 = $r6;

        entermonitor $r6;

     label02:
        $r7 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: com.android.server.media.projection.MediaProjectionManagerService this$0>;

        $r8 = virtualinvoke r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: android.os.IBinder asBinder()>();

        $z0 = staticinvoke <com.android.server.media.projection.MediaProjectionManagerService: boolean access$600(com.android.server.media.projection.MediaProjectionManagerService,android.os.IBinder)>($r7, $r8);

        if $z0 == 0 goto label03;

        $r15 = new java.lang.IllegalStateException;

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot start already started MediaProjection");

        throw $r15;

     label03:
        virtualinvoke r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: void registerCallback(android.media.projection.IMediaProjectionCallback)>(r1);

     label04:
        $r9 = interfaceinvoke r1.<android.media.projection.IMediaProjectionCallback: android.os.IBinder asBinder()>();

        r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: android.os.IBinder mToken> = $r9;

        $r10 = new com.android.server.media.projection.MediaProjectionManagerService$MediaProjection$1;

        specialinvoke $r10.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection$1: void <init>(com.android.server.media.projection.MediaProjectionManagerService$MediaProjection,android.media.projection.IMediaProjectionCallback)>(r0, r1);

        r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: android.os.IBinder$DeathRecipient mDeathEater> = $r10;

        $r12 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: android.os.IBinder mToken>;

        $r11 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: android.os.IBinder$DeathRecipient mDeathEater>;

        interfaceinvoke $r12.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r11, 0);

     label05:
        goto label08;

     label06:
        $r17 := @caughtexception;

        r3 = $r17;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaProjectionManagerService", "MediaProjectionCallbacks must be valid, aborting MediaProjection", r3);

        exitmonitor r2;

     label07:
        return;

     label08:
        $r13 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: com.android.server.media.projection.MediaProjectionManagerService this$0>;

        staticinvoke <com.android.server.media.projection.MediaProjectionManagerService: void access$1200(com.android.server.media.projection.MediaProjectionManagerService,com.android.server.media.projection.MediaProjectionManagerService$MediaProjection)>($r13, r0);

        exitmonitor r2;

     label09:
        goto label12;

     label10:
        $r16 := @caughtexception;

        r4 = $r16;

        exitmonitor r2;

     label11:
        throw r4;

     label12:
        return;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void stop()
    {
        com.android.server.media.projection.MediaProjectionManagerService$MediaProjection r0;
        java.lang.Object r1, $r4;
        java.lang.Throwable r2, $r18;
        com.android.server.media.projection.MediaProjectionManagerService $r3, $r5, $r9;
        android.os.IBinder $r6, $r8;
        boolean $z0;
        android.os.IBinder$DeathRecipient $r7;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r15, $r17;
        int $i0, $i1;
        java.lang.String $r16;

        r0 := @this: com.android.server.media.projection.MediaProjectionManagerService$MediaProjection;

        $r3 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: com.android.server.media.projection.MediaProjectionManagerService this$0>;

        $r4 = staticinvoke <com.android.server.media.projection.MediaProjectionManagerService: java.lang.Object access$200(com.android.server.media.projection.MediaProjectionManagerService)>($r3);

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: com.android.server.media.projection.MediaProjectionManagerService this$0>;

        $r6 = virtualinvoke r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: android.os.IBinder asBinder()>();

        $z0 = staticinvoke <com.android.server.media.projection.MediaProjectionManagerService: boolean access$600(com.android.server.media.projection.MediaProjectionManagerService,android.os.IBinder)>($r5, $r6);

        if $z0 != 0 goto label3;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to stop inactive MediaProjection (uid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pid=");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("MediaProjectionManagerService", $r16);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r8 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: android.os.IBinder mToken>;

        $r7 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: android.os.IBinder$DeathRecipient mDeathEater>;

        interfaceinvoke $r8.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r7, 0);

        $r9 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: com.android.server.media.projection.MediaProjectionManagerService this$0>;

        staticinvoke <com.android.server.media.projection.MediaProjectionManagerService: void access$1300(com.android.server.media.projection.MediaProjectionManagerService,com.android.server.media.projection.MediaProjectionManagerService$MediaProjection)>($r9, r0);

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r18 := @caughtexception;

        r2 = $r18;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void registerCallback(android.media.projection.IMediaProjectionCallback)
    {
        com.android.server.media.projection.MediaProjectionManagerService$MediaProjection r0;
        android.media.projection.IMediaProjectionCallback r1;
        com.android.server.media.projection.MediaProjectionManagerService $r2;
        com.android.server.media.projection.MediaProjectionManagerService$CallbackDelegate $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: com.android.server.media.projection.MediaProjectionManagerService$MediaProjection;

        r1 := @parameter0: android.media.projection.IMediaProjectionCallback;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback must not be null");

        throw $r4;

     label1:
        $r2 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: com.android.server.media.projection.MediaProjectionManagerService this$0>;

        $r3 = staticinvoke <com.android.server.media.projection.MediaProjectionManagerService: com.android.server.media.projection.MediaProjectionManagerService$CallbackDelegate access$1100(com.android.server.media.projection.MediaProjectionManagerService)>($r2);

        virtualinvoke $r3.<com.android.server.media.projection.MediaProjectionManagerService$CallbackDelegate: void add(android.media.projection.IMediaProjectionCallback)>(r1);

        return;
    }

    public void unregisterCallback(android.media.projection.IMediaProjectionCallback)
    {
        com.android.server.media.projection.MediaProjectionManagerService$MediaProjection r0;
        android.media.projection.IMediaProjectionCallback r1;
        com.android.server.media.projection.MediaProjectionManagerService $r2;
        com.android.server.media.projection.MediaProjectionManagerService$CallbackDelegate $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: com.android.server.media.projection.MediaProjectionManagerService$MediaProjection;

        r1 := @parameter0: android.media.projection.IMediaProjectionCallback;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback must not be null");

        throw $r4;

     label1:
        $r2 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: com.android.server.media.projection.MediaProjectionManagerService this$0>;

        $r3 = staticinvoke <com.android.server.media.projection.MediaProjectionManagerService: com.android.server.media.projection.MediaProjectionManagerService$CallbackDelegate access$1100(com.android.server.media.projection.MediaProjectionManagerService)>($r2);

        virtualinvoke $r3.<com.android.server.media.projection.MediaProjectionManagerService$CallbackDelegate: void remove(android.media.projection.IMediaProjectionCallback)>(r1);

        return;
    }

    public android.media.projection.MediaProjectionInfo getProjectionInfo()
    {
        com.android.server.media.projection.MediaProjectionManagerService$MediaProjection r0;
        android.media.projection.MediaProjectionInfo $r1;
        android.os.UserHandle $r2;
        java.lang.String $r3;

        r0 := @this: com.android.server.media.projection.MediaProjectionManagerService$MediaProjection;

        $r1 = new android.media.projection.MediaProjectionInfo;

        $r3 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: java.lang.String packageName>;

        $r2 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: android.os.UserHandle userHandle>;

        specialinvoke $r1.<android.media.projection.MediaProjectionInfo: void <init>(java.lang.String,android.os.UserHandle)>($r3, $r2);

        return $r1;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.media.projection.MediaProjectionManagerService$MediaProjection r0;
        java.io.PrintWriter r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r7, $r8, $r10;
        java.lang.String $r4, $r9, $r11;
        int $i0, $i1;

        r0 := @this: com.android.server.media.projection.MediaProjectionManagerService$MediaProjection;

        r1 := @parameter0: java.io.PrintWriter;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r4 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: java.lang.String packageName>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i0 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: int uid>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $i1 = r0.<com.android.server.media.projection.MediaProjectionManagerService$MediaProjection: int mType>;

        $r9 = staticinvoke <com.android.server.media.projection.MediaProjectionManagerService: java.lang.String access$1400(int)>($i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        return;
    }
}
