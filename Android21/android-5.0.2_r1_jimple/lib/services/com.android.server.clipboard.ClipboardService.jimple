public class com.android.server.clipboard.ClipboardService extends android.content.IClipboard$Stub
{
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final android.app.IActivityManager mAm;
    private final android.os.IUserManager mUm;
    private final android.content.pm.PackageManager mPm;
    private final android.app.AppOpsManager mAppOps;
    private final android.os.IBinder mPermissionOwner;
    private android.util.SparseArray mClipboards;

    public void <init>(android.content.Context)
    {
        com.android.server.clipboard.ClipboardService r0;
        android.content.Context r1, $r14;
        android.os.IBinder r2, $r7;
        android.os.RemoteException r3, $r15;
        android.util.SparseArray $r4;
        android.app.IActivityManager $r5, $r11;
        android.content.pm.PackageManager $r6;
        android.os.IUserManager $r8;
        java.lang.Object $r9;
        android.app.AppOpsManager $r10;
        android.content.IntentFilter $r12, r17;
        com.android.server.clipboard.ClipboardService$1 $r13;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.content.IClipboard$Stub: void <init>()>();

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.clipboard.ClipboardService: android.util.SparseArray mClipboards> = $r4;

        r0.<com.android.server.clipboard.ClipboardService: android.content.Context mContext> = r1;

        $r5 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        r0.<com.android.server.clipboard.ClipboardService: android.app.IActivityManager mAm> = $r5;

        $r6 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r0.<com.android.server.clipboard.ClipboardService: android.content.pm.PackageManager mPm> = $r6;

        $r7 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("user");

        $r8 = (android.os.IUserManager) $r7;

        r0.<com.android.server.clipboard.ClipboardService: android.os.IUserManager mUm> = $r8;

        $r9 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("appops");

        $r10 = (android.app.AppOpsManager) $r9;

        r0.<com.android.server.clipboard.ClipboardService: android.app.AppOpsManager mAppOps> = $r10;

        r2 = null;

     label1:
        $r11 = r0.<com.android.server.clipboard.ClipboardService: android.app.IActivityManager mAm>;

        r2 = interfaceinvoke $r11.<android.app.IActivityManager: android.os.IBinder newUriPermissionOwner(java.lang.String)>("clipboard");

     label2:
        goto label4;

     label3:
        $r15 := @caughtexception;

        r3 = $r15;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("clipboard", "AM dead", r3);

     label4:
        r0.<com.android.server.clipboard.ClipboardService: android.os.IBinder mPermissionOwner> = r2;

        $r12 = new android.content.IntentFilter;

        specialinvoke $r12.<android.content.IntentFilter: void <init>()>();

        r17 = $r12;

        virtualinvoke r17.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_REMOVED");

        $r14 = r0.<com.android.server.clipboard.ClipboardService: android.content.Context mContext>;

        $r13 = new com.android.server.clipboard.ClipboardService$1;

        specialinvoke $r13.<com.android.server.clipboard.ClipboardService$1: void <init>(com.android.server.clipboard.ClipboardService)>(r0);

        virtualinvoke $r14.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r13, r17);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        com.android.server.clipboard.ClipboardService r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        java.lang.RuntimeException r3, $r4;
        boolean $z0, $z1;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

     label1:
        $z0 = specialinvoke r0.<android.content.IClipboard$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

        $z1 = r3 instanceof java.lang.SecurityException;

        if $z1 != 0 goto label4;

        staticinvoke <android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("clipboard", "Exception: ", r3);

     label4:
        throw r3;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    private com.android.server.clipboard.ClipboardService$PerUserClipboard getClipboard()
    {
        com.android.server.clipboard.ClipboardService r0;
        int $i0;
        com.android.server.clipboard.ClipboardService$PerUserClipboard $r1;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r1 = specialinvoke r0.<com.android.server.clipboard.ClipboardService: com.android.server.clipboard.ClipboardService$PerUserClipboard getClipboard(int)>($i0);

        return $r1;
    }

    private com.android.server.clipboard.ClipboardService$PerUserClipboard getClipboard(int)
    {
        com.android.server.clipboard.ClipboardService r0;
        int i0;
        android.util.SparseArray r1, $r4, $r5, $r8;
        com.android.server.clipboard.ClipboardService$PerUserClipboard r2, $r7;
        java.lang.Throwable r3, $r9;
        java.lang.Object $r6;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.server.clipboard.ClipboardService: android.util.SparseArray mClipboards>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.server.clipboard.ClipboardService: android.util.SparseArray mClipboards>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.clipboard.ClipboardService$PerUserClipboard) $r6;

        if r2 != null goto label2;

        $r7 = new com.android.server.clipboard.ClipboardService$PerUserClipboard;

        specialinvoke $r7.<com.android.server.clipboard.ClipboardService$PerUserClipboard: void <init>(com.android.server.clipboard.ClipboardService,int)>(r0, i0);

        r2 = $r7;

        $r8 = r0.<com.android.server.clipboard.ClipboardService: android.util.SparseArray mClipboards>;

        virtualinvoke $r8.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r2);

     label2:
        exitmonitor r1;

     label3:
        return r2;

     label4:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r1;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void removeClipboard(int)
    {
        com.android.server.clipboard.ClipboardService r0;
        int i0;
        android.util.SparseArray r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.clipboard.ClipboardService: android.util.SparseArray mClipboards>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.clipboard.ClipboardService: android.util.SparseArray mClipboards>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>(i0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setPrimaryClip(android.content.ClipData, java.lang.String)
    {
        com.android.server.clipboard.ClipboardService r0, r3;
        android.content.ClipData r1;
        java.lang.String r2, $r21;
        int i0, i1, i2, i3, $i4, $i5, i7;
        com.android.server.clipboard.ClipboardService$PerUserClipboard r4, $r13;
        java.util.List r5;
        boolean z0, $z1, $z2;
        android.os.RemoteException r6, $r17;
        java.lang.Throwable r7, $r19;
        android.app.AppOpsManager $r9;
        android.os.Bundle $r10;
        android.os.IUserManager $r11;
        java.lang.Object $r12;
        android.content.pm.UserInfo $r14;
        java.lang.IllegalArgumentException $r15;
        java.lang.StringBuilder $r16, $r18, $r20;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r1 := @parameter0: android.content.ClipData;

        r2 := @parameter1: java.lang.String;

        r3 = r0;

        entermonitor r0;

     label01:
        if r1 == null goto label02;

        $i5 = virtualinvoke r1.<android.content.ClipData: int getItemCount()>();

        if $i5 > 0 goto label02;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No items");

        throw $r15;

     label02:
        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r9 = r0.<com.android.server.clipboard.ClipboardService: android.app.AppOpsManager mAppOps>;

        $i4 = virtualinvoke $r9.<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>(30, i0, r2);

        if $i4 == 0 goto label04;

        exitmonitor r3;

     label03:
        return;

     label04:
        specialinvoke r0.<com.android.server.clipboard.ClipboardService: void checkDataOwnerLocked(android.content.ClipData,int)>(r1, i0);

        i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        r4 = specialinvoke r0.<com.android.server.clipboard.ClipboardService: com.android.server.clipboard.ClipboardService$PerUserClipboard getClipboard(int)>(i1);

        specialinvoke r0.<com.android.server.clipboard.ClipboardService: void revokeUris(com.android.server.clipboard.ClipboardService$PerUserClipboard)>(r4);

        virtualinvoke r0.<com.android.server.clipboard.ClipboardService: void setPrimaryClipInternal(com.android.server.clipboard.ClipboardService$PerUserClipboard,android.content.ClipData)>(r4, r1);

        r5 = virtualinvoke r0.<com.android.server.clipboard.ClipboardService: java.util.List getRelatedProfiles(int)>(i1);

        if r5 == null goto label15;

        i2 = interfaceinvoke r5.<java.util.List: int size()>();

        if i2 <= 1 goto label15;

        z0 = 0;

     label05:
        $r11 = r0.<com.android.server.clipboard.ClipboardService: android.os.IUserManager mUm>;

        $r10 = interfaceinvoke $r11.<android.os.IUserManager: android.os.Bundle getUserRestrictions(int)>(i1);

        $z1 = virtualinvoke $r10.<android.os.Bundle: boolean getBoolean(java.lang.String)>("no_cross_profile_copy_paste");

        if $z1 != 0 goto label06;

        $z2 = 1;

        goto label07;

     label06:
        $z2 = 0;

     label07:
        z0 = $z2;

     label08:
        goto label10;

     label09:
        $r17 := @caughtexception;

        r6 = $r17;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remote Exception calling UserManager: ");

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ClipboardService", $r21);

     label10:
        if z0 != 0 goto label11;

        r1 = null;

        goto label12;

     label11:
        virtualinvoke r1.<android.content.ClipData: void fixUrisLight(int)>(i1);

     label12:
        i7 = 0;

     label13:
        if i7 >= i2 goto label15;

        $r12 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i7);

        $r14 = (android.content.pm.UserInfo) $r12;

        i3 = $r14.<android.content.pm.UserInfo: int id>;

        if i3 == i1 goto label14;

        $r13 = specialinvoke r0.<com.android.server.clipboard.ClipboardService: com.android.server.clipboard.ClipboardService$PerUserClipboard getClipboard(int)>(i3);

        virtualinvoke r0.<com.android.server.clipboard.ClipboardService: void setPrimaryClipInternal(com.android.server.clipboard.ClipboardService$PerUserClipboard,android.content.ClipData)>($r13, r1);

     label14:
        i7 = i7 + 1;

        goto label13;

     label15:
        exitmonitor r3;

     label16:
        goto label19;

     label17:
        $r19 := @caughtexception;

        r7 = $r19;

        exitmonitor r3;

     label18:
        throw r7;

     label19:
        return;

        catch android.os.RemoteException from label05 to label08 with label09;
        catch java.lang.Throwable from label01 to label03 with label17;
        catch java.lang.Throwable from label04 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    java.util.List getRelatedProfiles(int)
    {
        com.android.server.clipboard.ClipboardService r0;
        int i0;
        java.util.List r1;
        long l1;
        android.os.RemoteException r2, $r6;
        java.lang.Throwable r3, $r5;
        android.os.IUserManager $r4;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r9;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.clipboard.ClipboardService: android.os.IUserManager mUm>;

        r1 = interfaceinvoke $r4.<android.os.IUserManager: java.util.List getProfiles(int,boolean)>(i0, 1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label7;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remote Exception calling UserManager: ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("ClipboardService", $r9);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return null;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r3;

     label7:
        return r1;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    void setPrimaryClipInternal(com.android.server.clipboard.ClipboardService$PerUserClipboard, android.content.ClipData)
    {
        com.android.server.clipboard.ClipboardService r0;
        com.android.server.clipboard.ClipboardService$PerUserClipboard r1;
        android.content.ClipData r2, $r14;
        long l0;
        int i1, i2, $i3, $i4;
        com.android.server.clipboard.ClipboardService$ListenerInfo r3;
        java.lang.Throwable r4, $r16;
        java.util.HashSet $r5;
        android.os.RemoteCallbackList $r6, $r7, $r8, $r13, $r18;
        java.lang.Object $r9;
        java.lang.String $r10;
        android.app.AppOpsManager $r11;
        android.os.IInterface $r12;
        android.content.IOnPrimaryClipChangedListener $r15;
        android.os.RemoteException $r17;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r1 := @parameter0: com.android.server.clipboard.ClipboardService$PerUserClipboard;

        r2 := @parameter1: android.content.ClipData;

        $r5 = r1.<com.android.server.clipboard.ClipboardService$PerUserClipboard: java.util.HashSet activePermissionOwners>;

        virtualinvoke $r5.<java.util.HashSet: void clear()>();

        if r2 != null goto label01;

        $r14 = r1.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.content.ClipData primaryClip>;

        if $r14 != null goto label01;

        return;

     label01:
        r1.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.content.ClipData primaryClip> = r2;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r6 = r1.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.os.RemoteCallbackList primaryClipListeners>;

        i1 = virtualinvoke $r6.<android.os.RemoteCallbackList: int beginBroadcast()>();

     label02:
        i2 = 0;

     label03:
        if i2 >= i1 goto label08;

     label04:
        $r8 = r1.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.os.RemoteCallbackList primaryClipListeners>;

        $r9 = virtualinvoke $r8.<android.os.RemoteCallbackList: java.lang.Object getBroadcastCookie(int)>(i2);

        r3 = (com.android.server.clipboard.ClipboardService$ListenerInfo) $r9;

        $r11 = r0.<com.android.server.clipboard.ClipboardService: android.app.AppOpsManager mAppOps>;

        $i3 = r3.<com.android.server.clipboard.ClipboardService$ListenerInfo: int mUid>;

        $r10 = r3.<com.android.server.clipboard.ClipboardService$ListenerInfo: java.lang.String mPackageName>;

        $i4 = virtualinvoke $r11.<android.app.AppOpsManager: int checkOpNoThrow(int,int,java.lang.String)>(29, $i3, $r10);

        if $i4 != 0 goto label05;

        $r13 = r1.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.os.RemoteCallbackList primaryClipListeners>;

        $r12 = virtualinvoke $r13.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i2);

        $r15 = (android.content.IOnPrimaryClipChangedListener) $r12;

        interfaceinvoke $r15.<android.content.IOnPrimaryClipChangedListener: void dispatchPrimaryClipChanged()>();

     label05:
        goto label07;

     label06:
        $r17 := @caughtexception;

     label07:
        i2 = i2 + 1;

        goto label03;

     label08:
        $r7 = r1.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.os.RemoteCallbackList primaryClipListeners>;

        virtualinvoke $r7.<android.os.RemoteCallbackList: void finishBroadcast()>();

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label11;

     label09:
        $r16 := @caughtexception;

        r4 = $r16;

     label10:
        $r18 = r1.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.os.RemoteCallbackList primaryClipListeners>;

        virtualinvoke $r18.<android.os.RemoteCallbackList: void finishBroadcast()>();

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r4;

     label11:
        return;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public android.content.ClipData getPrimaryClip(java.lang.String)
    {
        com.android.server.clipboard.ClipboardService r0, r2;
        java.lang.String r1;
        java.lang.Throwable r3, $r8;
        android.app.AppOpsManager $r5;
        int $i0, $i1, $i2;
        com.android.server.clipboard.ClipboardService$PerUserClipboard $r6;
        android.content.ClipData $r7;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r1 := @parameter0: java.lang.String;

        r2 = r0;

        entermonitor r0;

     label1:
        $r5 = r0.<com.android.server.clipboard.ClipboardService: android.app.AppOpsManager mAppOps>;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = virtualinvoke $r5.<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>(29, $i0, r1);

        if $i1 == 0 goto label3;

        exitmonitor r2;

     label2:
        return null;

     label3:
        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke r0.<com.android.server.clipboard.ClipboardService: void addActiveOwnerLocked(int,java.lang.String)>($i2, r1);

        $r6 = specialinvoke r0.<com.android.server.clipboard.ClipboardService: com.android.server.clipboard.ClipboardService$PerUserClipboard getClipboard()>();

        $r7 = $r6.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.content.ClipData primaryClip>;

        exitmonitor r2;

     label4:
        return $r7;

     label5:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public android.content.ClipDescription getPrimaryClipDescription(java.lang.String)
    {
        com.android.server.clipboard.ClipboardService r0, r2;
        java.lang.String r1;
        com.android.server.clipboard.ClipboardService$PerUserClipboard r3;
        java.lang.Throwable r4, $r10;
        android.app.AppOpsManager $r6;
        int $i0, $i1;
        android.content.ClipData $r7, $r8;
        android.content.ClipDescription $r9;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r1 := @parameter0: java.lang.String;

        r2 = r0;

        entermonitor r0;

     label1:
        $r6 = r0.<com.android.server.clipboard.ClipboardService: android.app.AppOpsManager mAppOps>;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = virtualinvoke $r6.<android.app.AppOpsManager: int checkOp(int,int,java.lang.String)>(29, $i0, r1);

        if $i1 == 0 goto label3;

        exitmonitor r2;

     label2:
        return null;

     label3:
        r3 = specialinvoke r0.<com.android.server.clipboard.ClipboardService: com.android.server.clipboard.ClipboardService$PerUserClipboard getClipboard()>();

        $r7 = r3.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.content.ClipData primaryClip>;

        if $r7 == null goto label4;

        $r8 = r3.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.content.ClipData primaryClip>;

        $r9 = virtualinvoke $r8.<android.content.ClipData: android.content.ClipDescription getDescription()>();

        goto label5;

     label4:
        $r9 = null;

     label5:
        exitmonitor r2;

     label6:
        return $r9;

     label7:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r2;

     label8:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public boolean hasPrimaryClip(java.lang.String)
    {
        com.android.server.clipboard.ClipboardService r0, r2;
        java.lang.String r1;
        java.lang.Throwable r3, $r8;
        android.app.AppOpsManager $r5;
        int $i0, $i1;
        com.android.server.clipboard.ClipboardService$PerUserClipboard $r6;
        android.content.ClipData $r7;
        boolean $z0;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r1 := @parameter0: java.lang.String;

        r2 = r0;

        entermonitor r0;

     label1:
        $r5 = r0.<com.android.server.clipboard.ClipboardService: android.app.AppOpsManager mAppOps>;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = virtualinvoke $r5.<android.app.AppOpsManager: int checkOp(int,int,java.lang.String)>(29, $i0, r1);

        if $i1 == 0 goto label3;

        exitmonitor r2;

     label2:
        return 0;

     label3:
        $r6 = specialinvoke r0.<com.android.server.clipboard.ClipboardService: com.android.server.clipboard.ClipboardService$PerUserClipboard getClipboard()>();

        $r7 = $r6.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.content.ClipData primaryClip>;

        if $r7 == null goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        exitmonitor r2;

     label6:
        return $z0;

     label7:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label8:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void addPrimaryClipChangedListener(android.content.IOnPrimaryClipChangedListener, java.lang.String)
    {
        com.android.server.clipboard.ClipboardService r0, r3;
        android.content.IOnPrimaryClipChangedListener r1;
        java.lang.String r2;
        java.lang.Throwable r4, $r9;
        com.android.server.clipboard.ClipboardService$PerUserClipboard $r6;
        com.android.server.clipboard.ClipboardService$ListenerInfo $r7;
        android.os.RemoteCallbackList $r8;
        int $i0;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r1 := @parameter0: android.content.IOnPrimaryClipChangedListener;

        r2 := @parameter1: java.lang.String;

        r3 = r0;

        entermonitor r0;

     label1:
        $r6 = specialinvoke r0.<com.android.server.clipboard.ClipboardService: com.android.server.clipboard.ClipboardService$PerUserClipboard getClipboard()>();

        $r8 = $r6.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.os.RemoteCallbackList primaryClipListeners>;

        $r7 = new com.android.server.clipboard.ClipboardService$ListenerInfo;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        specialinvoke $r7.<com.android.server.clipboard.ClipboardService$ListenerInfo: void <init>(com.android.server.clipboard.ClipboardService,int,java.lang.String)>(r0, $i0, r2);

        virtualinvoke $r8.<android.os.RemoteCallbackList: boolean register(android.os.IInterface,java.lang.Object)>(r1, $r7);

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removePrimaryClipChangedListener(android.content.IOnPrimaryClipChangedListener)
    {
        com.android.server.clipboard.ClipboardService r0, r2;
        android.content.IOnPrimaryClipChangedListener r1;
        java.lang.Throwable r3, $r7;
        com.android.server.clipboard.ClipboardService$PerUserClipboard $r5;
        android.os.RemoteCallbackList $r6;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r1 := @parameter0: android.content.IOnPrimaryClipChangedListener;

        r2 = r0;

        entermonitor r0;

     label1:
        $r5 = specialinvoke r0.<com.android.server.clipboard.ClipboardService: com.android.server.clipboard.ClipboardService$PerUserClipboard getClipboard()>();

        $r6 = $r5.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.os.RemoteCallbackList primaryClipListeners>;

        virtualinvoke $r6.<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean hasClipboardText(java.lang.String)
    {
        com.android.server.clipboard.ClipboardService r0, r2;
        java.lang.String r1;
        com.android.server.clipboard.ClipboardService$PerUserClipboard r3;
        java.lang.CharSequence r4;
        java.lang.Throwable r5, $r11;
        android.app.AppOpsManager $r7;
        int $i0, $i1, $i2;
        android.content.ClipData $r8, $r9;
        android.content.ClipData$Item $r10;
        boolean $z0;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r1 := @parameter0: java.lang.String;

        r2 = r0;

        entermonitor r0;

     label01:
        $r7 = r0.<com.android.server.clipboard.ClipboardService: android.app.AppOpsManager mAppOps>;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = virtualinvoke $r7.<android.app.AppOpsManager: int checkOp(int,int,java.lang.String)>(29, $i0, r1);

        if $i1 == 0 goto label03;

        exitmonitor r2;

     label02:
        return 0;

     label03:
        r3 = specialinvoke r0.<com.android.server.clipboard.ClipboardService: com.android.server.clipboard.ClipboardService$PerUserClipboard getClipboard()>();

        $r8 = r3.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.content.ClipData primaryClip>;

        if $r8 == null goto label07;

        $r9 = r3.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.content.ClipData primaryClip>;

        $r10 = virtualinvoke $r9.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(0);

        r4 = virtualinvoke $r10.<android.content.ClipData$Item: java.lang.CharSequence getText()>();

        if r4 == null goto label04;

        $i2 = interfaceinvoke r4.<java.lang.CharSequence: int length()>();

        if $i2 <= 0 goto label04;

        $z0 = 1;

        goto label05;

     label04:
        $z0 = 0;

     label05:
        exitmonitor r2;

     label06:
        return $z0;

     label07:
        exitmonitor r2;

     label08:
        return 0;

     label09:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r2;

     label10:
        throw r5;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private final void checkUriOwnerLocked(android.net.Uri, int)
    {
        com.android.server.clipboard.ClipboardService r0;
        android.net.Uri r1, $r7;
        int i0, $i2, $i4;
        long l1;
        java.lang.Throwable r3, $r8;
        java.lang.String $r4, $r5;
        boolean $z0;
        android.app.IActivityManager $r6;
        android.os.RemoteException $r9;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        $r4 = "content";

        $r5 = virtualinvoke r1.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        return;

     label1:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r6 = r0.<com.android.server.clipboard.ClipboardService: android.app.IActivityManager mAm>;

        $r7 = staticinvoke <android.content.ContentProvider: android.net.Uri getUriWithoutUserId(android.net.Uri)>(r1);

        $i2 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        $i4 = staticinvoke <android.content.ContentProvider: int getUserIdFromUri(android.net.Uri,int)>(r1, $i2);

        interfaceinvoke $r6.<android.app.IActivityManager: int checkGrantUriPermission(int,java.lang.String,android.net.Uri,int,int)>(i0, null, $r7, 1, $i4);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label8;

     label4:
        $r9 := @caughtexception;

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label8;

     label6:
        $r8 := @caughtexception;

        r3 = $r8;

     label7:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r3;

     label8:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private final void checkItemOwnerLocked(android.content.ClipData$Item, int)
    {
        com.android.server.clipboard.ClipboardService r0;
        android.content.ClipData$Item r1;
        int i0;
        android.content.Intent r2;
        android.net.Uri $r3, $r4, $r5, $r6;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r1 := @parameter0: android.content.ClipData$Item;

        i0 := @parameter1: int;

        $r3 = virtualinvoke r1.<android.content.ClipData$Item: android.net.Uri getUri()>();

        if $r3 == null goto label1;

        $r6 = virtualinvoke r1.<android.content.ClipData$Item: android.net.Uri getUri()>();

        specialinvoke r0.<com.android.server.clipboard.ClipboardService: void checkUriOwnerLocked(android.net.Uri,int)>($r6, i0);

     label1:
        r2 = virtualinvoke r1.<android.content.ClipData$Item: android.content.Intent getIntent()>();

        if r2 == null goto label2;

        $r4 = virtualinvoke r2.<android.content.Intent: android.net.Uri getData()>();

        if $r4 == null goto label2;

        $r5 = virtualinvoke r2.<android.content.Intent: android.net.Uri getData()>();

        specialinvoke r0.<com.android.server.clipboard.ClipboardService: void checkUriOwnerLocked(android.net.Uri,int)>($r5, i0);

     label2:
        return;
    }

    private final void checkDataOwnerLocked(android.content.ClipData, int)
    {
        com.android.server.clipboard.ClipboardService r0;
        android.content.ClipData r1;
        int i0, i1, i2;
        android.content.ClipData$Item $r2;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r1 := @parameter0: android.content.ClipData;

        i0 := @parameter1: int;

        i1 = virtualinvoke r1.<android.content.ClipData: int getItemCount()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r2 = virtualinvoke r1.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(i2);

        specialinvoke r0.<com.android.server.clipboard.ClipboardService: void checkItemOwnerLocked(android.content.ClipData$Item,int)>($r2, i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    private final void grantUriLocked(android.net.Uri, java.lang.String, int)
    {
        com.android.server.clipboard.ClipboardService r0;
        android.net.Uri r1, r8;
        java.lang.String r2;
        int i0, i2, $i3;
        long l1;
        java.lang.Throwable r3, $r6;
        android.app.IActivityManager $r4;
        android.os.IBinder $r5;
        android.os.RemoteException $r7;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        i2 = staticinvoke <android.content.ContentProvider: int getUserIdFromUri(android.net.Uri,int)>(r1, i0);

        r8 = staticinvoke <android.content.ContentProvider: android.net.Uri getUriWithoutUserId(android.net.Uri)>(r1);

        $r4 = r0.<com.android.server.clipboard.ClipboardService: android.app.IActivityManager mAm>;

        $r5 = r0.<com.android.server.clipboard.ClipboardService: android.os.IBinder mPermissionOwner>;

        $i3 = staticinvoke <android.os.Process: int myUid()>();

        interfaceinvoke $r4.<android.app.IActivityManager: void grantUriPermissionFromOwner(android.os.IBinder,int,java.lang.String,android.net.Uri,int,int,int)>($r5, $i3, r2, r8, 1, i2, i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label7;

     label3:
        $r7 := @caughtexception;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label7;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r3;

     label7:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private final void grantItemLocked(android.content.ClipData$Item, java.lang.String, int)
    {
        com.android.server.clipboard.ClipboardService r0;
        android.content.ClipData$Item r1;
        java.lang.String r2;
        int i0;
        android.content.Intent r3;
        android.net.Uri $r4, $r5, $r6, $r7;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r1 := @parameter0: android.content.ClipData$Item;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r4 = virtualinvoke r1.<android.content.ClipData$Item: android.net.Uri getUri()>();

        if $r4 == null goto label1;

        $r7 = virtualinvoke r1.<android.content.ClipData$Item: android.net.Uri getUri()>();

        specialinvoke r0.<com.android.server.clipboard.ClipboardService: void grantUriLocked(android.net.Uri,java.lang.String,int)>($r7, r2, i0);

     label1:
        r3 = virtualinvoke r1.<android.content.ClipData$Item: android.content.Intent getIntent()>();

        if r3 == null goto label2;

        $r5 = virtualinvoke r3.<android.content.Intent: android.net.Uri getData()>();

        if $r5 == null goto label2;

        $r6 = virtualinvoke r3.<android.content.Intent: android.net.Uri getData()>();

        specialinvoke r0.<com.android.server.clipboard.ClipboardService: void grantUriLocked(android.net.Uri,java.lang.String,int)>($r6, r2, i0);

     label2:
        return;
    }

    private final void addActiveOwnerLocked(int, java.lang.String)
    {
        com.android.server.clipboard.ClipboardService r0;
        int i0, i1, i3, $i4, $i5, i6;
        java.lang.String r1, $r16, $r21;
        android.content.pm.IPackageManager r2;
        long l2;
        android.content.pm.PackageInfo r3;
        java.lang.Throwable r4, $r25;
        android.content.pm.ApplicationInfo $r5;
        boolean $z0, $z1;
        java.util.HashSet $r6, $r9;
        android.content.ClipData $r7, $r8, $r10;
        android.content.ClipData$Item $r11;
        java.lang.StringBuilder $r12, $r14, $r15, $r18, $r19, $r20, $r22, $r23;
        java.lang.SecurityException $r13;
        java.lang.IllegalArgumentException $r17;
        android.os.RemoteException $r24;
        com.android.server.clipboard.ClipboardService$PerUserClipboard r27;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r3 = interfaceinvoke r2.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r1, 0, i1);

        if r3 != null goto label02;

        $r17 = new java.lang.IllegalArgumentException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package ");

        $r20 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r17;

     label02:
        $r5 = r3.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r5.<android.content.pm.ApplicationInfo: int uid>;

        $z0 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>($i4, i0);

        if $z0 != 0 goto label03;

        $r13 = new java.lang.SecurityException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling uid ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not own package ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.SecurityException: void <init>(java.lang.String)>($r16);

        throw $r13;

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label08;

     label04:
        $r24 := @caughtexception;

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label08;

     label06:
        $r25 := @caughtexception;

        r4 = $r25;

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r4;

     label08:
        r27 = specialinvoke r0.<com.android.server.clipboard.ClipboardService: com.android.server.clipboard.ClipboardService$PerUserClipboard getClipboard()>();

        $r7 = r27.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.content.ClipData primaryClip>;

        if $r7 == null goto label11;

        $r6 = r27.<com.android.server.clipboard.ClipboardService$PerUserClipboard: java.util.HashSet activePermissionOwners>;

        $z1 = virtualinvoke $r6.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z1 != 0 goto label11;

        $r8 = r27.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.content.ClipData primaryClip>;

        i6 = virtualinvoke $r8.<android.content.ClipData: int getItemCount()>();

        i3 = 0;

     label09:
        if i3 >= i6 goto label10;

        $r10 = r27.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.content.ClipData primaryClip>;

        $r11 = virtualinvoke $r10.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(i3);

        $i5 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        specialinvoke r0.<com.android.server.clipboard.ClipboardService: void grantItemLocked(android.content.ClipData$Item,java.lang.String,int)>($r11, r1, $i5);

        i3 = i3 + 1;

        goto label09;

     label10:
        $r9 = r27.<com.android.server.clipboard.ClipboardService$PerUserClipboard: java.util.HashSet activePermissionOwners>;

        virtualinvoke $r9.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

     label11:
        return;

        catch android.os.RemoteException from label01 to label03 with label04;
        catch java.lang.Throwable from label01 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
    }

    private final void revokeUriLocked(android.net.Uri)
    {
        com.android.server.clipboard.ClipboardService r0;
        android.net.Uri r1, r8;
        int i0, $i2, $i3;
        long l1;
        java.lang.Throwable r3, $r7;
        android.os.IBinder $r4;
        android.app.IActivityManager $r5;
        android.os.RemoteException $r6;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r1 := @parameter0: android.net.Uri;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        i0 = staticinvoke <android.content.ContentProvider: int getUserIdFromUri(android.net.Uri,int)>(r1, $i3);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        r8 = staticinvoke <android.content.ContentProvider: android.net.Uri getUriWithoutUserId(android.net.Uri)>(r1);

        $r5 = r0.<com.android.server.clipboard.ClipboardService: android.app.IActivityManager mAm>;

        $r4 = r0.<com.android.server.clipboard.ClipboardService: android.os.IBinder mPermissionOwner>;

        interfaceinvoke $r5.<android.app.IActivityManager: void revokeUriPermissionFromOwner(android.os.IBinder,android.net.Uri,int,int)>($r4, r8, 3, i0);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label7;

     label3:
        $r6 := @caughtexception;

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        goto label7;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r3;

     label7:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private final void revokeItemLocked(android.content.ClipData$Item)
    {
        com.android.server.clipboard.ClipboardService r0;
        android.content.ClipData$Item r1;
        android.content.Intent r2;
        android.net.Uri $r3, $r4, $r5, $r6;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r1 := @parameter0: android.content.ClipData$Item;

        $r3 = virtualinvoke r1.<android.content.ClipData$Item: android.net.Uri getUri()>();

        if $r3 == null goto label1;

        $r6 = virtualinvoke r1.<android.content.ClipData$Item: android.net.Uri getUri()>();

        specialinvoke r0.<com.android.server.clipboard.ClipboardService: void revokeUriLocked(android.net.Uri)>($r6);

     label1:
        r2 = virtualinvoke r1.<android.content.ClipData$Item: android.content.Intent getIntent()>();

        if r2 == null goto label2;

        $r4 = virtualinvoke r2.<android.content.Intent: android.net.Uri getData()>();

        if $r4 == null goto label2;

        $r5 = virtualinvoke r2.<android.content.Intent: android.net.Uri getData()>();

        specialinvoke r0.<com.android.server.clipboard.ClipboardService: void revokeUriLocked(android.net.Uri)>($r5);

     label2:
        return;
    }

    private final void revokeUris(com.android.server.clipboard.ClipboardService$PerUserClipboard)
    {
        com.android.server.clipboard.ClipboardService r0;
        com.android.server.clipboard.ClipboardService$PerUserClipboard r1;
        int i0, i1;
        android.content.ClipData $r2, $r3, $r4;
        android.content.ClipData$Item $r5;

        r0 := @this: com.android.server.clipboard.ClipboardService;

        r1 := @parameter0: com.android.server.clipboard.ClipboardService$PerUserClipboard;

        $r2 = r1.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.content.ClipData primaryClip>;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = r1.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.content.ClipData primaryClip>;

        i0 = virtualinvoke $r3.<android.content.ClipData: int getItemCount()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r4 = r1.<com.android.server.clipboard.ClipboardService$PerUserClipboard: android.content.ClipData primaryClip>;

        $r5 = virtualinvoke $r4.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(i1);

        specialinvoke r0.<com.android.server.clipboard.ClipboardService: void revokeItemLocked(android.content.ClipData$Item)>($r5);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    static void access$000(com.android.server.clipboard.ClipboardService, int)
    {
        com.android.server.clipboard.ClipboardService r0;
        int i0;

        r0 := @parameter0: com.android.server.clipboard.ClipboardService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.clipboard.ClipboardService: void removeClipboard(int)>(i0);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.clipboard.ClipboardService: java.lang.String TAG> = "ClipboardService";

        return;
    }
}
