public class com.android.server.pm.PackageKeySetData extends java.lang.Object
{
    static final long KEYSET_UNASSIGNED;
    private long mProperSigningKeySet;
    private long[] mSigningKeySets;
    private long[] mUpgradeKeySets;
    private long[] mDefinedKeySets;
    private final java.util.Map mKeySetAliases;

    void <init>()
    {
        com.android.server.pm.PackageKeySetData r0;
        java.util.HashMap $r1;

        r0 := @this: com.android.server.pm.PackageKeySetData;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.pm.PackageKeySetData: java.util.Map mKeySetAliases> = $r1;

        r0.<com.android.server.pm.PackageKeySetData: long mProperSigningKeySet> = -1L;

        return;
    }

    void <init>(com.android.server.pm.PackageKeySetData)
    {
        com.android.server.pm.PackageKeySetData r0, r1;
        java.util.HashMap $r2;
        long $l0;
        long[] $r3, $r4, $r5, $r6, $r7, $r8;
        java.util.Map $r9, $r10;

        r0 := @this: com.android.server.pm.PackageKeySetData;

        r1 := @parameter0: com.android.server.pm.PackageKeySetData;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.pm.PackageKeySetData: java.util.Map mKeySetAliases> = $r2;

        $l0 = r1.<com.android.server.pm.PackageKeySetData: long mProperSigningKeySet>;

        r0.<com.android.server.pm.PackageKeySetData: long mProperSigningKeySet> = $l0;

        $r3 = r1.<com.android.server.pm.PackageKeySetData: long[] mSigningKeySets>;

        $r4 = staticinvoke <com.android.internal.util.ArrayUtils: long[] cloneOrNull(long[])>($r3);

        r0.<com.android.server.pm.PackageKeySetData: long[] mSigningKeySets> = $r4;

        $r5 = r1.<com.android.server.pm.PackageKeySetData: long[] mUpgradeKeySets>;

        $r6 = staticinvoke <com.android.internal.util.ArrayUtils: long[] cloneOrNull(long[])>($r5);

        r0.<com.android.server.pm.PackageKeySetData: long[] mUpgradeKeySets> = $r6;

        $r7 = r1.<com.android.server.pm.PackageKeySetData: long[] mDefinedKeySets>;

        $r8 = staticinvoke <com.android.internal.util.ArrayUtils: long[] cloneOrNull(long[])>($r7);

        r0.<com.android.server.pm.PackageKeySetData: long[] mDefinedKeySets> = $r8;

        $r10 = r0.<com.android.server.pm.PackageKeySetData: java.util.Map mKeySetAliases>;

        $r9 = r1.<com.android.server.pm.PackageKeySetData: java.util.Map mKeySetAliases>;

        interfaceinvoke $r10.<java.util.Map: void putAll(java.util.Map)>($r9);

        return;
    }

    protected void setProperSigningKeySet(long)
    {
        com.android.server.pm.PackageKeySetData r0;
        long l0, $l1;
        byte $b2;

        r0 := @this: com.android.server.pm.PackageKeySetData;

        l0 := @parameter0: long;

        $l1 = r0.<com.android.server.pm.PackageKeySetData: long mProperSigningKeySet>;

        $b2 = l0 cmp $l1;

        if $b2 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.android.server.pm.PackageKeySetData: void removeAllSigningKeySets()>();

        r0.<com.android.server.pm.PackageKeySetData: long mProperSigningKeySet> = l0;

        virtualinvoke r0.<com.android.server.pm.PackageKeySetData: void addSigningKeySet(long)>(l0);

        return;
    }

    protected long getProperSigningKeySet()
    {
        com.android.server.pm.PackageKeySetData r0;
        long $l0;

        r0 := @this: com.android.server.pm.PackageKeySetData;

        $l0 = r0.<com.android.server.pm.PackageKeySetData: long mProperSigningKeySet>;

        return $l0;
    }

    protected void addSigningKeySet(long)
    {
        com.android.server.pm.PackageKeySetData r0;
        long l0;
        long[] $r1, $r2;

        r0 := @this: com.android.server.pm.PackageKeySetData;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.server.pm.PackageKeySetData: long[] mSigningKeySets>;

        $r2 = staticinvoke <com.android.internal.util.ArrayUtils: long[] appendLong(long[],long)>($r1, l0);

        r0.<com.android.server.pm.PackageKeySetData: long[] mSigningKeySets> = $r2;

        return;
    }

    protected void removeSigningKeySet(long)
    {
        com.android.server.pm.PackageKeySetData r0;
        long l0;
        long[] $r1, $r2;

        r0 := @this: com.android.server.pm.PackageKeySetData;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.server.pm.PackageKeySetData: long[] mSigningKeySets>;

        $r2 = staticinvoke <com.android.internal.util.ArrayUtils: long[] removeLong(long[],long)>($r1, l0);

        r0.<com.android.server.pm.PackageKeySetData: long[] mSigningKeySets> = $r2;

        return;
    }

    protected void addUpgradeKeySet(java.lang.String)
    {
        com.android.server.pm.PackageKeySetData r0;
        java.lang.String r1, $r10;
        java.lang.Long r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        long[] $r11, $r12;
        long $l0;

        r0 := @this: com.android.server.pm.PackageKeySetData;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.server.pm.PackageKeySetData: java.util.Map mKeySetAliases>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.Long) $r4;

        if r2 == null goto label1;

        $r11 = r0.<com.android.server.pm.PackageKeySetData: long[] mUpgradeKeySets>;

        $l0 = virtualinvoke r2.<java.lang.Long: long longValue()>();

        $r12 = staticinvoke <com.android.internal.util.ArrayUtils: long[] appendLong(long[],long)>($r11, $l0);

        r0.<com.android.server.pm.PackageKeySetData: long[] mUpgradeKeySets> = $r12;

        goto label2;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Upgrade keyset alias ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("does not refer to a defined keyset alias!");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label2:
        return;
    }

    protected void addUpgradeKeySetById(long)
    {
        com.android.server.pm.PackageKeySetData r0;
        long l0;
        long[] $r1, $r2;

        r0 := @this: com.android.server.pm.PackageKeySetData;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.server.pm.PackageKeySetData: long[] mSigningKeySets>;

        $r2 = staticinvoke <com.android.internal.util.ArrayUtils: long[] appendLong(long[],long)>($r1, l0);

        r0.<com.android.server.pm.PackageKeySetData: long[] mSigningKeySets> = $r2;

        return;
    }

    protected void addDefinedKeySet(long, java.lang.String)
    {
        com.android.server.pm.PackageKeySetData r0;
        long l0;
        java.lang.String r1;
        long[] $r2, $r3;
        java.util.Map $r4;
        java.lang.Long $r5;

        r0 := @this: com.android.server.pm.PackageKeySetData;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.pm.PackageKeySetData: long[] mDefinedKeySets>;

        $r3 = staticinvoke <com.android.internal.util.ArrayUtils: long[] appendLong(long[],long)>($r2, l0);

        r0.<com.android.server.pm.PackageKeySetData: long[] mDefinedKeySets> = $r3;

        $r4 = r0.<com.android.server.pm.PackageKeySetData: java.util.Map mKeySetAliases>;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

        return;
    }

    protected void removeAllSigningKeySets()
    {
        com.android.server.pm.PackageKeySetData r0;

        r0 := @this: com.android.server.pm.PackageKeySetData;

        r0.<com.android.server.pm.PackageKeySetData: long mProperSigningKeySet> = -1L;

        r0.<com.android.server.pm.PackageKeySetData: long[] mSigningKeySets> = null;

        return;
    }

    protected void removeAllUpgradeKeySets()
    {
        com.android.server.pm.PackageKeySetData r0;

        r0 := @this: com.android.server.pm.PackageKeySetData;

        r0.<com.android.server.pm.PackageKeySetData: long[] mUpgradeKeySets> = null;

        return;
    }

    protected void removeAllDefinedKeySets()
    {
        com.android.server.pm.PackageKeySetData r0;
        java.util.Map $r1;

        r0 := @this: com.android.server.pm.PackageKeySetData;

        r0.<com.android.server.pm.PackageKeySetData: long[] mDefinedKeySets> = null;

        $r1 = r0.<com.android.server.pm.PackageKeySetData: java.util.Map mKeySetAliases>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        return;
    }

    protected boolean packageIsSignedBy(long)
    {
        com.android.server.pm.PackageKeySetData r0;
        long l0;
        long[] $r1;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageKeySetData;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.server.pm.PackageKeySetData: long[] mSigningKeySets>;

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(long[],long)>($r1, l0);

        return $z0;
    }

    protected long[] getSigningKeySets()
    {
        com.android.server.pm.PackageKeySetData r0;
        long[] $r1;

        r0 := @this: com.android.server.pm.PackageKeySetData;

        $r1 = r0.<com.android.server.pm.PackageKeySetData: long[] mSigningKeySets>;

        return $r1;
    }

    protected long[] getUpgradeKeySets()
    {
        com.android.server.pm.PackageKeySetData r0;
        long[] $r1;

        r0 := @this: com.android.server.pm.PackageKeySetData;

        $r1 = r0.<com.android.server.pm.PackageKeySetData: long[] mUpgradeKeySets>;

        return $r1;
    }

    protected long[] getDefinedKeySets()
    {
        com.android.server.pm.PackageKeySetData r0;
        long[] $r1;

        r0 := @this: com.android.server.pm.PackageKeySetData;

        $r1 = r0.<com.android.server.pm.PackageKeySetData: long[] mDefinedKeySets>;

        return $r1;
    }

    protected java.util.Map getAliases()
    {
        com.android.server.pm.PackageKeySetData r0;
        java.util.Map $r1;

        r0 := @this: com.android.server.pm.PackageKeySetData;

        $r1 = r0.<com.android.server.pm.PackageKeySetData: java.util.Map mKeySetAliases>;

        return $r1;
    }

    protected boolean isUsingDefinedKeySets()
    {
        com.android.server.pm.PackageKeySetData r0;
        long[] $r1, $r2;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageKeySetData;

        $r1 = r0.<com.android.server.pm.PackageKeySetData: long[] mDefinedKeySets>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.pm.PackageKeySetData: long[] mDefinedKeySets>;

        $i0 = lengthof $r2;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected boolean isUsingUpgradeKeySets()
    {
        com.android.server.pm.PackageKeySetData r0;
        long[] $r1, $r2;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.pm.PackageKeySetData;

        $r1 = r0.<com.android.server.pm.PackageKeySetData: long[] mUpgradeKeySets>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.pm.PackageKeySetData: long[] mUpgradeKeySets>;

        $i0 = lengthof $r2;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static void <clinit>()
    {
        <com.android.server.pm.PackageKeySetData: long KEYSET_UNASSIGNED> = -1L;

        return;
    }
}
