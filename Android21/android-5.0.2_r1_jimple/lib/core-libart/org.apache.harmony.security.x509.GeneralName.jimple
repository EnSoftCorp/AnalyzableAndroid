public final class org.apache.harmony.security.x509.GeneralName extends java.lang.Object
{
    public static final int OTHER_NAME;
    public static final int RFC822_NAME;
    public static final int DNS_NAME;
    public static final int X400_ADDR;
    public static final int DIR_NAME;
    public static final int EDIP_NAME;
    public static final int UR_ID;
    public static final int IP_ADDR;
    public static final int REG_ID;
    private static org.apache.harmony.security.asn1.ASN1Type[] nameASN1;
    private int tag;
    private java.lang.Object name;
    private byte[] encoding;
    private byte[] name_encoding;
    private static final org.apache.harmony.security.asn1.ASN1SequenceOf NAME_ASN1;
    public static final org.apache.harmony.security.asn1.ASN1Choice ASN1;

    public void <init>(int, java.lang.String) throws java.io.IOException
    {
        org.apache.harmony.security.x509.GeneralName r0;
        int i0;
        java.lang.String r1, $r7, $r15;
        java.io.IOException $r2, $r11, $r17;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r12, $r13, $r14, $r16;
        int[] $r8;
        byte[] $r9;
        org.apache.harmony.security.x501.Name $r10;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label01;

        $r17 = new java.io.IOException;

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>("name == null");

        throw $r17;

     label01:
        r0.<org.apache.harmony.security.x509.GeneralName: int tag> = i0;

        tableswitch(i0)
        {
            case 0: goto label02;
            case 1: goto label05;
            case 2: goto label03;
            case 3: goto label02;
            case 4: goto label07;
            case 5: goto label02;
            case 6: goto label04;
            case 7: goto label08;
            case 8: goto label06;
            default: goto label09;
        };

     label02:
        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown string representation for type [");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label03:
        staticinvoke <org.apache.harmony.security.x509.GeneralName: void checkDNS(java.lang.String)>(r1);

        r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name> = r1;

        goto label10;

     label04:
        staticinvoke <org.apache.harmony.security.x509.GeneralName: void checkURI(java.lang.String)>(r1);

        r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name> = r1;

        goto label10;

     label05:
        r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name> = r1;

        goto label10;

     label06:
        $r8 = staticinvoke <org.apache.harmony.security.x509.GeneralName: int[] oidStrToInts(java.lang.String)>(r1);

        r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name> = $r8;

        goto label10;

     label07:
        $r10 = new org.apache.harmony.security.x501.Name;

        specialinvoke $r10.<org.apache.harmony.security.x501.Name: void <init>(java.lang.String)>(r1);

        r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name> = $r10;

        goto label10;

     label08:
        $r9 = staticinvoke <org.apache.harmony.security.x509.GeneralName: byte[] ipStrToBytes(java.lang.String)>(r1);

        r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name> = $r9;

        goto label10;

     label09:
        $r11 = new java.io.IOException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown type: [");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label10:
        return;
    }

    public void <init>(org.apache.harmony.security.x509.OtherName)
    {
        org.apache.harmony.security.x509.GeneralName r0;
        org.apache.harmony.security.x509.OtherName r1;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        r1 := @parameter0: org.apache.harmony.security.x509.OtherName;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.harmony.security.x509.GeneralName: int tag> = 0;

        r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name> = r1;

        return;
    }

    public void <init>(org.apache.harmony.security.x509.ORAddress)
    {
        org.apache.harmony.security.x509.GeneralName r0;
        org.apache.harmony.security.x509.ORAddress r1;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        r1 := @parameter0: org.apache.harmony.security.x509.ORAddress;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.harmony.security.x509.GeneralName: int tag> = 3;

        r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name> = r1;

        return;
    }

    public void <init>(org.apache.harmony.security.x501.Name)
    {
        org.apache.harmony.security.x509.GeneralName r0;
        org.apache.harmony.security.x501.Name r1;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        r1 := @parameter0: org.apache.harmony.security.x501.Name;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.harmony.security.x509.GeneralName: int tag> = 4;

        r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name> = r1;

        return;
    }

    public void <init>(org.apache.harmony.security.x509.EDIPartyName)
    {
        org.apache.harmony.security.x509.GeneralName r0;
        org.apache.harmony.security.x509.EDIPartyName r1;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        r1 := @parameter0: org.apache.harmony.security.x509.EDIPartyName;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.harmony.security.x509.GeneralName: int tag> = 5;

        r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name> = r1;

        return;
    }

    public void <init>(byte[]) throws java.lang.IllegalArgumentException
    {
        org.apache.harmony.security.x509.GeneralName r0;
        byte[] r1, $r2;
        int $i0, $i1;
        java.lang.Object $r3;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.harmony.security.x509.GeneralName: int tag> = 7;

        $i0 = lengthof r1;

        $r2 = newarray (byte)[$i0];

        r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name> = $r2;

        $r3 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r3, 0, $i1);

        return;
    }

    public void <init>(int, byte[]) throws java.io.IOException
    {
        org.apache.harmony.security.x509.GeneralName r0;
        int i0, $i1, $i2;
        byte[] r1, $r7, $r8, $r10;
        java.io.IOException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        org.apache.harmony.security.asn1.ASN1Type[] $r9;
        org.apache.harmony.security.asn1.ASN1Type $r11;
        java.lang.Object $r12;
        java.lang.NullPointerException $r13;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r13 = new java.lang.NullPointerException;

        specialinvoke $r13.<java.lang.NullPointerException: void <init>(java.lang.String)>("name == null");

        throw $r13;

     label1:
        if i0 < 0 goto label2;

        if i0 <= 8 goto label3;

     label2:
        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GeneralName: unknown tag: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label3:
        r0.<org.apache.harmony.security.x509.GeneralName: int tag> = i0;

        $i1 = lengthof r1;

        $r7 = newarray (byte)[$i1];

        r0.<org.apache.harmony.security.x509.GeneralName: byte[] name_encoding> = $r7;

        $r8 = r0.<org.apache.harmony.security.x509.GeneralName: byte[] name_encoding>;

        $i2 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, 0, $r8, 0, $i2);

        $r9 = <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Type[] nameASN1>;

        $r11 = $r9[i0];

        $r10 = r0.<org.apache.harmony.security.x509.GeneralName: byte[] name_encoding>;

        $r12 = virtualinvoke $r11.<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(byte[])>($r10);

        r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name> = $r12;

        return;
    }

    public int getTag()
    {
        org.apache.harmony.security.x509.GeneralName r0;
        int $i0;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        $i0 = r0.<org.apache.harmony.security.x509.GeneralName: int tag>;

        return $i0;
    }

    public java.lang.Object getName()
    {
        org.apache.harmony.security.x509.GeneralName r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        $r1 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.harmony.security.x509.GeneralName r0, r2;
        java.lang.Object r1, $r3, $r5, $r7, $r9, $r13, $r14;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2;
        java.lang.String $r4, $r6;
        int[] $r8, $r10, $r11, $r12;
        byte[] $r15, $r16, $r17, $r18, $r19, $r20;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.harmony.security.x509.GeneralName;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.apache.harmony.security.x509.GeneralName) r1;

        $i1 = r0.<org.apache.harmony.security.x509.GeneralName: int tag>;

        $i0 = r2.<org.apache.harmony.security.x509.GeneralName: int tag>;

        if $i1 == $i0 goto label2;

        return 0;

     label2:
        $i2 = r0.<org.apache.harmony.security.x509.GeneralName: int tag>;

        tableswitch($i2)
        {
            case 0: goto label6;
            case 1: goto label3;
            case 2: goto label3;
            case 3: goto label6;
            case 4: goto label6;
            case 5: goto label6;
            case 6: goto label3;
            case 7: goto label5;
            case 8: goto label4;
            default: goto label7;
        };

     label3:
        $r3 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r4 = (java.lang.String) $r3;

        $r5 = virtualinvoke r2.<org.apache.harmony.security.x509.GeneralName: java.lang.Object getName()>();

        $r6 = (java.lang.String) $r5;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r6);

        return $z1;

     label4:
        $r7 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r8 = (int[]) $r7;

        $r11 = (int[]) $r8;

        $r9 = r2.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r10 = (int[]) $r9;

        $r12 = (int[]) $r10;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r11, $r12);

        return $z2;

     label5:
        $r13 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r15 = (byte[]) $r13;

        $r18 = (byte[]) $r15;

        $r14 = r2.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r17 = (byte[]) $r14;

        $r16 = (byte[]) $r17;

        $z3 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r18, $r16);

        return $z3;

     label6:
        $r20 = virtualinvoke r0.<org.apache.harmony.security.x509.GeneralName: byte[] getEncoded()>();

        $r19 = virtualinvoke r2.<org.apache.harmony.security.x509.GeneralName: byte[] getEncoded()>();

        $z4 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r20, $r19);

        return $z4;

     label7:
        return 0;
    }

    public int hashCode()
    {
        org.apache.harmony.security.x509.GeneralName r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r1;
        byte[] $r2;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        $i0 = r0.<org.apache.harmony.security.x509.GeneralName: int tag>;

        tableswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label1;
            case 7: goto label1;
            case 8: goto label1;
            default: goto label3;
        };

     label1:
        $r1 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $i1 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i1;

     label2:
        $r2 = virtualinvoke r0.<org.apache.harmony.security.x509.GeneralName: byte[] getEncoded()>();

        $i2 = staticinvoke <java.util.Arrays: int hashCode(byte[])>($r2);

        return $i2;

     label3:
        $i3 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i3;
    }

    public boolean isAcceptable(org.apache.harmony.security.x509.GeneralName)
    {
        org.apache.harmony.security.x509.GeneralName r0, r1;
        java.lang.String r2, r3, r4, r5, r6, $r11, $r12, $r15, $r16, $r21, $r23, $r25, $r27, $r33, $r38, $r40, r41;
        int i0, i1, i2, i3, i4, $i7, $i9, $i10, $i11, $i13, $i16, $i17, $i18, i19, i20;
        byte[] r7, r8, $r19, $r20, $r35, $r36;
        short s5, s6, s8;
        java.util.Locale $r9, $r13, $r26, $r28, $r34, $r37;
        java.lang.Object $r10, $r14, $r17, $r18, $r22, $r24, $r29, $r30;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        byte $b12, $b14, $b15;
        java.lang.StringBuilder $r31, $r32, $r39;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        r1 := @parameter0: org.apache.harmony.security.x509.GeneralName;

        $i7 = r0.<org.apache.harmony.security.x509.GeneralName: int tag>;

        $i10 = virtualinvoke r1.<org.apache.harmony.security.x509.GeneralName: int getTag()>();

        if $i7 == $i10 goto label01;

        return 0;

     label01:
        $i9 = r0.<org.apache.harmony.security.x509.GeneralName: int tag>;

        tableswitch($i9)
        {
            case 0: goto label19;
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label19;
            case 4: goto label19;
            case 5: goto label19;
            case 6: goto label05;
            case 7: goto label11;
            case 8: goto label19;
            default: goto label20;
        };

     label02:
        $r10 = virtualinvoke r1.<org.apache.harmony.security.x509.GeneralName: java.lang.Object getName()>();

        $r12 = (java.lang.String) $r10;

        $r9 = <java.util.Locale: java.util.Locale US>;

        $r11 = virtualinvoke $r12.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r9);

        $r14 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r16 = (java.lang.String) $r14;

        $r13 = <java.util.Locale: java.util.Locale US>;

        $r15 = virtualinvoke $r16.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r13);

        $z0 = virtualinvoke $r11.<java.lang.String: boolean endsWith(java.lang.String)>($r15);

        return $z0;

     label03:
        $r30 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        r2 = (java.lang.String) $r30;

        $r29 = virtualinvoke r1.<org.apache.harmony.security.x509.GeneralName: java.lang.Object getName()>();

        r3 = (java.lang.String) $r29;

        $z5 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r3);

        if $z5 == 0 goto label04;

        return 1;

     label04:
        $r34 = <java.util.Locale: java.util.Locale US>;

        $r33 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r34);

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r37 = <java.util.Locale: java.util.Locale US>;

        $r38 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r37);

        $r39 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        $z6 = virtualinvoke $r33.<java.lang.String: boolean endsWith(java.lang.String)>($r40);

        return $z6;

     label05:
        $r22 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        r4 = (java.lang.String) $r22;

        $i17 = virtualinvoke r4.<java.lang.String: int indexOf(java.lang.String)>("://");

        i0 = $i17 + 3;

        i1 = virtualinvoke r4.<java.lang.String: int indexOf(int,int)>(47, i0);

        if i1 != -1 goto label06;

        $r21 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>(i0);

        goto label07;

     label06:
        $r21 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);

     label07:
        r5 = $r21;

        $r24 = virtualinvoke r1.<org.apache.harmony.security.x509.GeneralName: java.lang.Object getName()>();

        r41 = (java.lang.String) $r24;

        $i18 = virtualinvoke r41.<java.lang.String: int indexOf(java.lang.String)>("://");

        i19 = $i18 + 3;

        i20 = virtualinvoke r41.<java.lang.String: int indexOf(int,int)>(47, i19);

        if i20 != -1 goto label08;

        $r23 = virtualinvoke r41.<java.lang.String: java.lang.String substring(int)>(i19);

        goto label09;

     label08:
        $r23 = virtualinvoke r41.<java.lang.String: java.lang.String substring(int,int)>(i19, i20);

     label09:
        r6 = $r23;

        $z3 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z3 == 0 goto label10;

        $r26 = <java.util.Locale: java.util.Locale US>;

        $r25 = virtualinvoke r6.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r26);

        $r28 = <java.util.Locale: java.util.Locale US>;

        $r27 = virtualinvoke r5.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r28);

        $z4 = virtualinvoke $r25.<java.lang.String: boolean endsWith(java.lang.String)>($r27);

        return $z4;

     label10:
        $z2 = virtualinvoke r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r6);

        return $z2;

     label11:
        $r17 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r19 = (byte[]) $r17;

        r7 = (byte[]) $r19;

        $r18 = virtualinvoke r1.<org.apache.harmony.security.x509.GeneralName: java.lang.Object getName()>();

        $r20 = (byte[]) $r18;

        r8 = (byte[]) $r20;

        i2 = lengthof r7;

        if i2 == 4 goto label12;

        if i2 == 8 goto label12;

        if i2 == 16 goto label12;

        if i2 == 32 goto label12;

        return 0;

     label12:
        i3 = lengthof r8;

        if i2 != i3 goto label13;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r7, r8);

        return $z1;

     label13:
        $i13 = 2 * i3;

        if i2 != $i13 goto label18;

        i4 = 0;

     label14:
        $i11 = lengthof r8;

        if i4 >= $i11 goto label17;

        $b12 = r8[i4];

        s5 = $b12 & 255;

        $b15 = r7[i4];

        s6 = $b15 & 255;

        $i16 = i4 + i3;

        $b14 = r7[$i16];

        s8 = $b14 & 255;

        if s5 < s6 goto label15;

        if s5 <= s8 goto label16;

     label15:
        return 0;

     label16:
        i4 = i4 + 1;

        goto label14;

     label17:
        return 1;

     label18:
        return 0;

     label19:
        $r35 = virtualinvoke r0.<org.apache.harmony.security.x509.GeneralName: byte[] getEncoded()>();

        $r36 = virtualinvoke r1.<org.apache.harmony.security.x509.GeneralName: byte[] getEncoded()>();

        $z7 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r35, $r36);

        return $z7;

     label20:
        return 1;
    }

    public java.util.List getAsList()
    {
        org.apache.harmony.security.x509.GeneralName r0;
        java.util.ArrayList r1, $r2;
        int $i0, $i1;
        java.lang.Integer $r3;
        java.lang.Object $r4, $r8, $r12, $r17, $r20, $r23, $r24;
        org.apache.harmony.security.x509.OtherName $r5;
        byte[] $r6, $r13, $r14, $r18, $r25;
        java.util.List $r7;
        int[] $r9, $r10;
        java.lang.String $r11, $r15, $r21;
        org.apache.harmony.security.x509.EDIPartyName $r16;
        org.apache.harmony.security.x501.Name $r19;
        org.apache.harmony.security.x509.ORAddress $r22;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = $r2;

        $i0 = r0.<org.apache.harmony.security.x509.GeneralName: int tag>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = r0.<org.apache.harmony.security.x509.GeneralName: int tag>;

        tableswitch($i1)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label2;
            case 7: goto label7;
            case 8: goto label3;
            default: goto label8;
        };

     label1:
        $r4 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r5 = (org.apache.harmony.security.x509.OtherName) $r4;

        $r6 = virtualinvoke $r5.<org.apache.harmony.security.x509.OtherName: byte[] getEncoded()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        goto label8;

     label2:
        $r24 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r24);

        goto label8;

     label3:
        $r8 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r9 = (int[]) $r8;

        $r10 = (int[]) $r9;

        $r11 = staticinvoke <org.apache.harmony.security.asn1.ObjectIdentifier: java.lang.String toString(int[])>($r10);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        goto label8;

     label4:
        $r23 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r22 = (org.apache.harmony.security.x509.ORAddress) $r23;

        $r25 = virtualinvoke $r22.<org.apache.harmony.security.x509.ORAddress: byte[] getEncoded()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r25);

        goto label8;

     label5:
        $r20 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r19 = (org.apache.harmony.security.x501.Name) $r20;

        $r21 = virtualinvoke $r19.<org.apache.harmony.security.x501.Name: java.lang.String getName(java.lang.String)>("RFC2253");

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r21);

        goto label8;

     label6:
        $r17 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r16 = (org.apache.harmony.security.x509.EDIPartyName) $r17;

        $r18 = virtualinvoke $r16.<org.apache.harmony.security.x509.EDIPartyName: byte[] getEncoded()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

        goto label8;

     label7:
        $r12 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r14 = (byte[]) $r12;

        $r13 = (byte[]) $r14;

        $r15 = staticinvoke <org.apache.harmony.security.x509.GeneralName: java.lang.String ipBytesToStr(byte[])>($r13);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

        goto label8;

     label8:
        $r7 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r1);

        return $r7;
    }

    public java.lang.String toString()
    {
        org.apache.harmony.security.x509.GeneralName r0;
        java.lang.String r1, $r5, $r12, $r20, $r29, $r35, $r37;
        int $i0;
        java.lang.StringBuilder $r2, $r3, $r6, $r7, $r8, $r13, $r14, $r16, $r19, $r21, $r23, $r24, $r25, $r26, $r27, $r32, $r33, $r34, $r36, $r38, $r39, $r42, $r43, $r44, $r45, $r46, $r47;
        byte[] $r4, $r17, $r18, $r28, $r40;
        java.lang.Object $r9, $r15, $r22, $r30, $r41, $r48;
        int[] $r10, $r11;
        org.apache.harmony.security.x501.Name $r31;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        r1 = "";

        $i0 = r0.<org.apache.harmony.security.x509.GeneralName: int tag>;

        tableswitch($i0)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label06;
            case 4: goto label07;
            case 5: goto label08;
            case 6: goto label04;
            case 7: goto label09;
            case 8: goto label05;
            default: goto label10;
        };

     label01:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("otherName[0]: ");

        $r4 = virtualinvoke r0.<org.apache.harmony.security.x509.GeneralName: byte[] getEncoded()>();

        $r5 = staticinvoke <org.apache.harmony.security.utils.Array: java.lang.String getBytesAsString(byte[])>($r4);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label10;

     label02:
        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rfc822Name[1]: ");

        $r48 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r47 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r48);

        r1 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label10;

     label03:
        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dNSName[2]: ");

        $r41 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r46 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r41);

        r1 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label10;

     label04:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("uniformResourceIdentifier[6]: ");

        $r22 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        r1 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label10;

     label05:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("registeredID[8]: ");

        $r9 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r10 = (int[]) $r9;

        $r11 = (int[]) $r10;

        $r12 = staticinvoke <org.apache.harmony.security.asn1.ObjectIdentifier: java.lang.String toString(int[])>($r11);

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        r1 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label10;

     label06:
        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x400Address[3]: ");

        $r40 = virtualinvoke r0.<org.apache.harmony.security.x509.GeneralName: byte[] getEncoded()>();

        $r37 = staticinvoke <org.apache.harmony.security.utils.Array: java.lang.String getBytesAsString(byte[])>($r40);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        r1 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label10;

     label07:
        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("directoryName[4]: ");

        $r30 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r31 = (org.apache.harmony.security.x501.Name) $r30;

        $r35 = virtualinvoke $r31.<org.apache.harmony.security.x501.Name: java.lang.String getName(java.lang.String)>("RFC2253");

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        r1 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label10;

     label08:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ediPartyName[5]: ");

        $r28 = virtualinvoke r0.<org.apache.harmony.security.x509.GeneralName: byte[] getEncoded()>();

        $r29 = staticinvoke <org.apache.harmony.security.utils.Array: java.lang.String getBytesAsString(byte[])>($r28);

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        r1 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label10;

     label09:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("iPAddress[7]: ");

        $r15 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r18 = (byte[]) $r15;

        $r17 = (byte[]) $r18;

        $r20 = staticinvoke <org.apache.harmony.security.x509.GeneralName: java.lang.String ipBytesToStr(byte[])>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        r1 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label10;

     label10:
        return r1;
    }

    public byte[] getEncoded()
    {
        org.apache.harmony.security.x509.GeneralName r0;
        byte[] $r1, $r2, $r4;
        org.apache.harmony.security.asn1.ASN1Choice $r3;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        $r1 = r0.<org.apache.harmony.security.x509.GeneralName: byte[] encoding>;

        if $r1 != null goto label1;

        $r3 = <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Choice ASN1>;

        $r4 = virtualinvoke $r3.<org.apache.harmony.security.asn1.ASN1Choice: byte[] encode(java.lang.Object)>(r0);

        r0.<org.apache.harmony.security.x509.GeneralName: byte[] encoding> = $r4;

     label1:
        $r2 = r0.<org.apache.harmony.security.x509.GeneralName: byte[] encoding>;

        return $r2;
    }

    public byte[] getEncodedName()
    {
        org.apache.harmony.security.x509.GeneralName r0;
        byte[] $r1, $r2, $r6;
        int $i0;
        org.apache.harmony.security.asn1.ASN1Type[] $r3;
        java.lang.Object $r4;
        org.apache.harmony.security.asn1.ASN1Type $r5;

        r0 := @this: org.apache.harmony.security.x509.GeneralName;

        $r1 = r0.<org.apache.harmony.security.x509.GeneralName: byte[] name_encoding>;

        if $r1 != null goto label1;

        $r3 = <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Type[] nameASN1>;

        $i0 = r0.<org.apache.harmony.security.x509.GeneralName: int tag>;

        $r5 = $r3[$i0];

        $r4 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        $r6 = virtualinvoke $r5.<org.apache.harmony.security.asn1.ASN1Type: byte[] encode(java.lang.Object)>($r4);

        r0.<org.apache.harmony.security.x509.GeneralName: byte[] name_encoding> = $r6;

     label1:
        $r2 = r0.<org.apache.harmony.security.x509.GeneralName: byte[] name_encoding>;

        return $r2;
    }

    public static void checkDNS(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, r1, $r8, $r11, $r17;
        int i0, i1, $i3;
        boolean z0;
        char c2, $c4;
        java.util.Locale $r2;
        java.io.IOException $r3, $r7, $r14;
        java.lang.StringBuilder $r4, $r5, $r6, $r9, $r10, $r12, $r13, $r15, $r16;

        r0 := @parameter0: java.lang.String;

        $r2 = <java.util.Locale: java.util.Locale US>;

        r1 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        z0 = 1;

        i1 = 0;

     label01:
        if i1 >= i0 goto label11;

        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);

        if z0 == 0 goto label05;

        if c2 > 122 goto label02;

        if c2 >= 97 goto label04;

     label02:
        if c2 < 48 goto label03;

        if c2 <= 57 goto label04;

     label03:
        if c2 == 42 goto label04;

        $r14 = new java.io.IOException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DNS name must start with a letter: ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>($r17);

        throw $r14;

     label04:
        z0 = 0;

        goto label10;

     label05:
        if c2 < 97 goto label06;

        if c2 <= 122 goto label08;

     label06:
        if c2 < 48 goto label07;

        if c2 <= 57 goto label08;

     label07:
        if c2 == 45 goto label08;

        if c2 == 46 goto label08;

        if c2 == 42 goto label08;

        $r7 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incorrect DNS name: ");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label08:
        if c2 != 46 goto label10;

        $i3 = i1 - 1;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i3);

        if $c4 != 45 goto label09;

        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incorrect DNS name: label ends with \'-\': ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label09:
        z0 = 1;

     label10:
        i1 = i1 + 1;

        goto label01;

     label11:
        return;
    }

    public static void checkURI(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, $r3, $r8, $r9, $r15, $r21;
        java.net.URI r1, $r2;
        java.io.IOException $r4, $r10, $r17, $r22;
        java.lang.StringBuilder $r5, $r6, $r7, $r11, $r12, $r13, $r16, $r18, $r19;
        boolean $z0, $z1;
        java.net.URISyntaxException $r14, r23;
        java.lang.Throwable $r20;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = new java.net.URI;

        specialinvoke $r2.<java.net.URI: void <init>(java.lang.String)>(r0);

        r1 = $r2;

        $r3 = virtualinvoke r1.<java.net.URI: java.lang.String getScheme()>();

        if $r3 == null goto label2;

        $r9 = virtualinvoke r1.<java.net.URI: java.lang.String getRawSchemeSpecificPart()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label3;

     label2:
        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No scheme or scheme-specific-part in uniformResourceIdentifier: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label3:
        $z1 = virtualinvoke r1.<java.net.URI: boolean isAbsolute()>();

        if $z1 != 0 goto label4;

        $r10 = new java.io.IOException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Relative uniformResourceIdentifier: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>($r15);

        throw $r10;

     label4:
        goto label6;

     label5:
        $r14 := @caughtexception;

        r23 = $r14;

        $r17 = new java.io.IOException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad representation of uniformResourceIdentifier: ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>($r21);

        $r20 = virtualinvoke $r17.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>(r23);

        $r22 = (java.io.IOException) $r20;

        throw $r22;

     label6:
        return;

        catch java.net.URISyntaxException from label1 to label4 with label5;
    }

    public static int[] oidStrToInts(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, $r7, $r11, $r17, $r20;
        int i0, i1, i2, i3, i4, $i6, $i8, $i9, $i10, $i11, $i12;
        int[] r1, $r2;
        char c5, $c7, c13;
        java.io.IOException $r3, $r8, $r14, $r18;
        java.lang.StringBuilder $r4, $r5, $r6, $r9, $r10, $r12, $r13, $r15, $r16, $r19, $r21, $r22;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i6 = i0 - 1;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);

        if $c7 != 46 goto label01;

        $r18 = new java.io.IOException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad OID: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>($r20);

        throw $r18;

     label01:
        $i8 = i0 / 2;

        $i9 = $i8 + 1;

        r1 = newarray (int)[$i9];

        i1 = 0;

        i2 = 0;

     label02:
        if i2 >= i0 goto label09;

        i3 = 0;

        i4 = i2;

     label03:
        if i2 >= i0 goto label05;

        c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        if c5 < 48 goto label05;

        if c5 <= 57 goto label04;

        goto label05;

     label04:
        $i12 = 10 * i3;

        $i11 = c5 - 48;

        i3 = $i12 + $i11;

        i2 = i2 + 1;

        goto label03;

     label05:
        if i2 != i4 goto label06;

        $r14 = new java.io.IOException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad OID: ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>($r17);

        throw $r14;

     label06:
        $i10 = i1;

        i1 = i1 + 1;

        r1[$i10] = i3;

        if i2 != i0 goto label07;

        goto label09;

     label07:
        c13 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        if c13 == 46 goto label08;

        $r8 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad OID: ");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r8;

     label08:
        i2 = i2 + 1;

        goto label02;

     label09:
        if i1 >= 2 goto label10;

        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OID should consist of no less than 2 components: ");

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label10:
        $r2 = staticinvoke <java.util.Arrays: int[] copyOfRange(int[],int,int)>(r1, 0, i1);

        return $r2;
    }

    public static byte[] ipStrToBytes(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, $r7;
        boolean $z0;
        java.net.InetAddress $r1;
        byte[] $r2;
        java.io.IOException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <java.net.InetAddress: boolean isNumeric(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not an IP address: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        $r1 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r0);

        $r2 = virtualinvoke $r1.<java.net.InetAddress: byte[] getAddress()>();

        return $r2;
    }

    public static java.lang.String ipBytesToStr(byte[])
    {
        byte[] r0;
        java.net.InetAddress $r2;
        java.lang.String $r3, $r8, $r10;
        java.net.UnknownHostException $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r9;

        r0 := @parameter0: byte[];

     label1:
        $r2 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(java.lang.String,byte[])>(null, r0);

        $r3 = virtualinvoke $r2.<java.net.InetAddress: java.lang.String getHostAddress()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected IP address: ");

        $r8 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>(r0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r5;

        catch java.net.UnknownHostException from label1 to label2 with label3;
    }

    static java.lang.Object access$000(org.apache.harmony.security.x509.GeneralName)
    {
        org.apache.harmony.security.x509.GeneralName r0;
        java.lang.Object $r1;

        r0 := @parameter0: org.apache.harmony.security.x509.GeneralName;

        $r1 = r0.<org.apache.harmony.security.x509.GeneralName: java.lang.Object name>;

        return $r1;
    }

    static int access$100(org.apache.harmony.security.x509.GeneralName)
    {
        org.apache.harmony.security.x509.GeneralName r0;
        int $i0;

        r0 := @parameter0: org.apache.harmony.security.x509.GeneralName;

        $i0 = r0.<org.apache.harmony.security.x509.GeneralName: int tag>;

        return $i0;
    }

    static byte[] access$202(org.apache.harmony.security.x509.GeneralName, byte[])
    {
        org.apache.harmony.security.x509.GeneralName r0;
        byte[] r1;

        r0 := @parameter0: org.apache.harmony.security.x509.GeneralName;

        r1 := @parameter1: byte[];

        r0.<org.apache.harmony.security.x509.GeneralName: byte[] encoding> = r1;

        return r1;
    }

    static void <clinit>()
    {
        org.apache.harmony.security.asn1.ASN1Type[] $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r15, $r17, $r23;
        org.apache.harmony.security.asn1.ASN1Sequence $r1, $r9, $r13, $r24, $r29, $r35;
        org.apache.harmony.security.asn1.ASN1StringType $r3, $r5, $r7, $r25, $r30, $r37;
        org.apache.harmony.security.asn1.ASN1SequenceOf $r11, $r21, $r31;
        org.apache.harmony.security.asn1.ASN1OctetString $r16, $r39;
        org.apache.harmony.security.x509.GeneralName$1 $r18;
        org.apache.harmony.security.asn1.ASN1Oid $r19, $r40;
        org.apache.harmony.security.x509.GeneralName$2 $r20;
        org.apache.harmony.security.asn1.ASN1Implicit $r22, $r26, $r27, $r28, $r32, $r33, $r34, $r36, $r38;

        <org.apache.harmony.security.x509.GeneralName: int REG_ID> = 8;

        <org.apache.harmony.security.x509.GeneralName: int IP_ADDR> = 7;

        <org.apache.harmony.security.x509.GeneralName: int UR_ID> = 6;

        <org.apache.harmony.security.x509.GeneralName: int EDIP_NAME> = 5;

        <org.apache.harmony.security.x509.GeneralName: int DIR_NAME> = 4;

        <org.apache.harmony.security.x509.GeneralName: int X400_ADDR> = 3;

        <org.apache.harmony.security.x509.GeneralName: int DNS_NAME> = 2;

        <org.apache.harmony.security.x509.GeneralName: int RFC822_NAME> = 1;

        <org.apache.harmony.security.x509.GeneralName: int OTHER_NAME> = 0;

        $r0 = newarray (org.apache.harmony.security.asn1.ASN1Type)[9];

        <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Type[] nameASN1> = $r0;

        $r2 = <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Type[] nameASN1>;

        $r1 = <org.apache.harmony.security.x509.OtherName: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r2[0] = $r1;

        $r4 = <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Type[] nameASN1>;

        $r3 = <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType IA5STRING>;

        $r4[1] = $r3;

        $r6 = <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Type[] nameASN1>;

        $r5 = <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType IA5STRING>;

        $r6[2] = $r5;

        $r8 = <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Type[] nameASN1>;

        $r7 = <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType IA5STRING>;

        $r8[6] = $r7;

        $r10 = <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Type[] nameASN1>;

        $r9 = <org.apache.harmony.security.x509.ORAddress: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r10[3] = $r9;

        $r12 = <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Type[] nameASN1>;

        $r11 = <org.apache.harmony.security.x501.Name: org.apache.harmony.security.asn1.ASN1SequenceOf ASN1>;

        $r12[4] = $r11;

        $r14 = <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Type[] nameASN1>;

        $r13 = <org.apache.harmony.security.x509.EDIPartyName: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r14[5] = $r13;

        $r15 = <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Type[] nameASN1>;

        $r16 = staticinvoke <org.apache.harmony.security.asn1.ASN1OctetString: org.apache.harmony.security.asn1.ASN1OctetString getInstance()>();

        $r15[7] = $r16;

        $r17 = <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Type[] nameASN1>;

        $r19 = staticinvoke <org.apache.harmony.security.asn1.ASN1Oid: org.apache.harmony.security.asn1.ASN1Oid getInstance()>();

        $r17[8] = $r19;

        $r18 = new org.apache.harmony.security.x509.GeneralName$1;

        $r21 = <org.apache.harmony.security.x501.Name: org.apache.harmony.security.asn1.ASN1SequenceOf ASN1>;

        specialinvoke $r18.<org.apache.harmony.security.x509.GeneralName$1: void <init>(org.apache.harmony.security.asn1.ASN1Type)>($r21);

        <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1SequenceOf NAME_ASN1> = $r18;

        $r20 = new org.apache.harmony.security.x509.GeneralName$2;

        $r23 = newarray (org.apache.harmony.security.asn1.ASN1Type)[9];

        $r22 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r24 = <org.apache.harmony.security.x509.OtherName: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        specialinvoke $r22.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(0, $r24);

        $r23[0] = $r22;

        $r26 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r25 = <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType IA5STRING>;

        specialinvoke $r26.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(1, $r25);

        $r23[1] = $r26;

        $r27 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r30 = <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType IA5STRING>;

        specialinvoke $r27.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(2, $r30);

        $r23[2] = $r27;

        $r28 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r29 = <org.apache.harmony.security.x509.ORAddress: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        specialinvoke $r28.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(3, $r29);

        $r23[3] = $r28;

        $r32 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r31 = <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1SequenceOf NAME_ASN1>;

        specialinvoke $r32.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(4, $r31);

        $r23[4] = $r32;

        $r34 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r35 = <org.apache.harmony.security.x509.EDIPartyName: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        specialinvoke $r34.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(5, $r35);

        $r23[5] = $r34;

        $r33 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r37 = <org.apache.harmony.security.asn1.ASN1StringType: org.apache.harmony.security.asn1.ASN1StringType IA5STRING>;

        specialinvoke $r33.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(6, $r37);

        $r23[6] = $r33;

        $r36 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r39 = staticinvoke <org.apache.harmony.security.asn1.ASN1OctetString: org.apache.harmony.security.asn1.ASN1OctetString getInstance()>();

        specialinvoke $r36.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(7, $r39);

        $r23[7] = $r36;

        $r38 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r40 = staticinvoke <org.apache.harmony.security.asn1.ASN1Oid: org.apache.harmony.security.asn1.ASN1Oid getInstance()>();

        specialinvoke $r38.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(8, $r40);

        $r23[8] = $r38;

        specialinvoke $r20.<org.apache.harmony.security.x509.GeneralName$2: void <init>(org.apache.harmony.security.asn1.ASN1Type[])>($r23);

        <org.apache.harmony.security.x509.GeneralName: org.apache.harmony.security.asn1.ASN1Choice ASN1> = $r20;

        return;
    }
}
