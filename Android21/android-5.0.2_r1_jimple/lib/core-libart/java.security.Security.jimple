public final class java.security.Security extends java.lang.Object
{
    private static final java.util.Properties secprops;

    private void <init>()
    {
        java.security.Security r0;

        r0 := @this: java.security.Security;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void registerDefaultProviders()
    {
        java.util.Properties $r0, $r2, $r4, $r6;

        $r0 = <java.security.Security: java.util.Properties secprops>;

        virtualinvoke $r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("security.provider.1", "com.android.org.conscrypt.OpenSSLProvider");

        $r2 = <java.security.Security: java.util.Properties secprops>;

        virtualinvoke $r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("security.provider.2", "com.android.org.bouncycastle.jce.provider.BouncyCastleProvider");

        $r4 = <java.security.Security: java.util.Properties secprops>;

        virtualinvoke $r4.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("security.provider.3", "org.apache.harmony.security.provider.crypto.CryptoProvider");

        $r6 = <java.security.Security: java.util.Properties secprops>;

        virtualinvoke $r6.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("security.provider.4", "com.android.org.conscrypt.JSSEProvider");

        return;
    }

    public static java.lang.String getAlgorithmProperty(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, r7, $r14;
        java.security.Provider[] r3, r4;
        int i0, i1;
        java.security.Provider r5;
        java.util.Enumeration r6;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12;
        java.lang.Object $r13;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        return null;

     label2:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Alg.");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        r2 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = staticinvoke <java.security.Security: java.security.Provider[] getProviders()>();

        r4 = r3;

        i0 = lengthof r4;

        i1 = 0;

     label3:
        if i1 >= i0 goto label7;

        r5 = r4[i1];

        r6 = virtualinvoke r5.<java.security.Provider: java.util.Enumeration propertyNames()>();

     label4:
        $z0 = interfaceinvoke r6.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label6;

        $r13 = interfaceinvoke r6.<java.util.Enumeration: java.lang.Object nextElement()>();

        r7 = (java.lang.String) $r13;

        $z1 = virtualinvoke r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z1 == 0 goto label5;

        $r14 = virtualinvoke r5.<java.security.Provider: java.lang.String getProperty(java.lang.String)>(r7);

        return $r14;

     label5:
        goto label4;

     label6:
        i1 = i1 + 1;

        goto label3;

     label7:
        return null;
    }

    public static synchronized int insertProviderAt(java.security.Provider, int)
    {
        java.security.Provider r0, $r2;
        int i0, i1;
        java.lang.String $r1;

        r0 := @parameter0: java.security.Provider;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<java.security.Provider: java.lang.String getName()>();

        $r2 = staticinvoke <java.security.Security: java.security.Provider getProvider(java.lang.String)>($r1);

        if $r2 == null goto label1;

        return -1;

     label1:
        i1 = staticinvoke <org.apache.harmony.security.fortress.Services: int insertProviderAt(java.security.Provider,int)>(r0, i0);

        staticinvoke <java.security.Security: void renumProviders()>();

        return i1;
    }

    public static int addProvider(java.security.Provider)
    {
        java.security.Provider r0;
        int $i0;

        r0 := @parameter0: java.security.Provider;

        $i0 = staticinvoke <java.security.Security: int insertProviderAt(java.security.Provider,int)>(r0, 0);

        return $i0;
    }

    public static synchronized void removeProvider(java.lang.String)
    {
        java.lang.String r0;
        java.security.Provider r1;
        int $i0, $i1;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return;

     label2:
        r1 = staticinvoke <java.security.Security: java.security.Provider getProvider(java.lang.String)>(r0);

        if r1 != null goto label3;

        return;

     label3:
        $i1 = virtualinvoke r1.<java.security.Provider: int getProviderNumber()>();

        staticinvoke <org.apache.harmony.security.fortress.Services: void removeProvider(int)>($i1);

        staticinvoke <java.security.Security: void renumProviders()>();

        virtualinvoke r1.<java.security.Provider: void setProviderNumber(int)>(-1);

        return;
    }

    public static synchronized java.security.Provider[] getProviders()
    {
        java.util.ArrayList r0;
        int $i0;
        java.security.Provider[] $r1, $r3;
        java.lang.Object[] $r2;

        r0 = staticinvoke <org.apache.harmony.security.fortress.Services: java.util.ArrayList getProviders()>();

        $i0 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        $r1 = newarray (java.security.Provider)[$i0];

        $r2 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        $r3 = (java.security.Provider[]) $r2;

        return $r3;
    }

    public static synchronized java.security.Provider getProvider(java.lang.String)
    {
        java.lang.String r0;
        java.security.Provider $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.harmony.security.fortress.Services: java.security.Provider getProvider(java.lang.String)>(r0);

        return $r1;
    }

    public static java.security.Provider[] getProviders(java.lang.String)
    {
        java.lang.String r0, $r4, $r5;
        java.util.HashMap r1, $r2;
        int i0, $i1, $i2, $i3, $i4;
        java.security.InvalidParameterException $r3, $r9;
        java.security.Provider[] $r7;
        java.lang.NullPointerException $r10;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("filter == null");

        throw $r10;

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 != 0 goto label2;

        $r9 = new java.security.InvalidParameterException;

        specialinvoke $r9.<java.security.InvalidParameterException: void <init>()>();

        throw $r9;

     label2:
        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r1 = $r2;

        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58);

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        $i3 = $i2 - 1;

        if i0 == $i3 goto label3;

        if i0 != 0 goto label4;

     label3:
        $r3 = new java.security.InvalidParameterException;

        specialinvoke $r3.<java.security.InvalidParameterException: void <init>()>();

        throw $r3;

     label4:
        if i0 >= 1 goto label5;

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, "");

        goto label6;

     label5:
        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $i4 = i0 + 1;

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i4);

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

     label6:
        $r7 = staticinvoke <java.security.Security: java.security.Provider[] getProviders(java.util.Map)>(r1);

        return $r7;
    }

    public static synchronized java.security.Provider[] getProviders(java.util.Map)
    {
        java.util.Map r0;
        java.util.ArrayList r1, $r10, $r11;
        java.util.Set r2;
        java.util.Map$Entry r3;
        java.util.Iterator r4;
        java.lang.String r5, r6, r7, r8, r9, $r18;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean $z0, $z1;
        java.lang.Object[] $r12;
        java.security.Provider[] $r13, $r15;
        java.lang.Object $r14, $r16, $r17;
        java.security.InvalidParameterException $r19, $r20, $r21, $r22, $r23;
        java.lang.NullPointerException $r24;

        r0 := @parameter0: java.util.Map;

        if r0 != null goto label01;

        $r24 = new java.lang.NullPointerException;

        specialinvoke $r24.<java.lang.NullPointerException: void <init>(java.lang.String)>("filter == null");

        throw $r24;

     label01:
        $z0 = interfaceinvoke r0.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label02;

        return null;

     label02:
        $r10 = new java.util.ArrayList;

        $r11 = staticinvoke <org.apache.harmony.security.fortress.Services: java.util.ArrayList getProviders()>();

        specialinvoke $r10.<java.util.ArrayList: void <init>(java.util.Collection)>($r11);

        r1 = $r10;

        r2 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        r4 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r14;

        $r17 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        r5 = (java.lang.String) $r17;

        $r16 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        r6 = (java.lang.String) $r16;

        r7 = null;

        i0 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(32);

        i1 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(46);

        if i1 != -1 goto label04;

        $r23 = new java.security.InvalidParameterException;

        specialinvoke $r23.<java.security.InvalidParameterException: void <init>()>();

        throw $r23;

     label04:
        if i0 != -1 goto label05;

        $i10 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i10 == 0 goto label08;

        $r20 = new java.security.InvalidParameterException;

        specialinvoke $r20.<java.security.InvalidParameterException: void <init>()>();

        throw $r20;

     label05:
        $i5 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i5 != 0 goto label06;

        $r22 = new java.security.InvalidParameterException;

        specialinvoke $r22.<java.security.InvalidParameterException: void <init>()>();

        throw $r22;

     label06:
        $i4 = i0 + 1;

        r7 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i4);

        $r18 = virtualinvoke r7.<java.lang.String: java.lang.String trim()>();

        $i7 = virtualinvoke $r18.<java.lang.String: int length()>();

        if $i7 != 0 goto label07;

        $r21 = new java.security.InvalidParameterException;

        specialinvoke $r21.<java.security.InvalidParameterException: void <init>()>();

        throw $r21;

     label07:
        r5 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label08:
        r8 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        $i6 = i1 + 1;

        r9 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i6);

        $i9 = virtualinvoke r8.<java.lang.String: int length()>();

        if $i9 == 0 goto label09;

        $i8 = virtualinvoke r9.<java.lang.String: int length()>();

        if $i8 != 0 goto label10;

     label09:
        $r19 = new java.security.InvalidParameterException;

        specialinvoke $r19.<java.security.InvalidParameterException: void <init>()>();

        throw $r19;

     label10:
        staticinvoke <java.security.Security: void filterProviders(java.util.ArrayList,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r8, r9, r7, r6);

        goto label03;

     label11:
        $i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label12;

        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $r13 = newarray (java.security.Provider)[$i2];

        $r12 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r13);

        $r15 = (java.security.Provider[]) $r12;

        return $r15;

     label12:
        return null;
    }

    private static void filterProviders(java.util.ArrayList, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.util.ArrayList r0;
        java.lang.String r1, r2, r3, r4;
        java.util.Iterator r5;
        java.security.Provider r6;
        boolean $z0, $z1;
        java.lang.Object $r7;

        r0 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 = virtualinvoke r0.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.security.Provider) $r7;

        $z1 = virtualinvoke r6.<java.security.Provider: boolean implementsAlg(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4);

        if $z1 != 0 goto label2;

        interfaceinvoke r5.<java.util.Iterator: void remove()>();

     label2:
        goto label1;

     label3:
        return;
    }

    public static java.lang.String getProperty(java.lang.String)
    {
        java.lang.String r0, r1;
        java.util.Properties $r2;
        java.lang.NullPointerException $r3;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("key == null");

        throw $r3;

     label1:
        $r2 = <java.security.Security: java.util.Properties secprops>;

        r1 = virtualinvoke $r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r0);

        if r1 == null goto label2;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

     label2:
        return r1;
    }

    public static void setProperty(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        java.util.Properties $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        staticinvoke <org.apache.harmony.security.fortress.Services: void setNeedRefresh()>();

        $r2 = <java.security.Security: java.util.Properties secprops>;

        virtualinvoke $r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);

        return;
    }

    public static java.util.Set getAlgorithms(java.lang.String)
    {
        java.lang.String r0, $r9, $r10;
        java.util.HashSet r1, $r6;
        java.security.Provider[] r2;
        int i0, i1;
        java.security.Provider r3;
        java.util.Iterator r4;
        java.security.Provider$Service r5;
        java.util.Set $r7;
        boolean $z0, $z1;
        java.lang.Object $r8;

        r0 := @parameter0: java.lang.String;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r1 = $r6;

        if r0 != null goto label1;

        return r1;

     label1:
        r2 = staticinvoke <java.security.Security: java.security.Provider[] getProviders()>();

        i0 = lengthof r2;

        i1 = 0;

     label2:
        if i1 >= i0 goto label6;

        r3 = r2[i1];

        $r7 = virtualinvoke r3.<java.security.Provider: java.util.Set getServices()>();

        r4 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.security.Provider$Service) $r8;

        $r9 = virtualinvoke r5.<java.security.Provider$Service: java.lang.String getType()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z1 == 0 goto label4;

        $r10 = virtualinvoke r5.<java.security.Provider$Service: java.lang.String getAlgorithm()>();

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r10);

     label4:
        goto label3;

     label5:
        i1 = i1 + 1;

        goto label2;

     label6:
        return r1;
    }

    private static void renumProviders()
    {
        java.util.ArrayList r0;
        int i0, $i1, $i2;
        java.lang.Object $r1;
        java.security.Provider $r2;

        r0 = staticinvoke <org.apache.harmony.security.fortress.Services: java.util.ArrayList getProviders()>();

        i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label2;

        $r1 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r2 = (java.security.Provider) $r1;

        $i2 = i0 + 1;

        virtualinvoke $r2.<java.security.Provider: void setProviderNumber(int)>($i2);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    static void access$100()
    {
        staticinvoke <java.security.Security: void renumProviders()>();

        return;
    }

    static void <clinit>()
    {
        boolean z0;
        java.io.InputStream r0;
        java.io.BufferedInputStream r1, $r4;
        java.util.Properties $r2, $r5;
        java.lang.Class $r3;
        java.security.Security$SecurityDoor $r6;
        java.lang.Exception $r7, r8;

        $r2 = new java.util.Properties;

        specialinvoke $r2.<java.util.Properties: void <init>()>();

        <java.security.Security: java.util.Properties secprops> = $r2;

        z0 = 0;

     label1:
        $r3 = class "java/security/Security";

        r0 = virtualinvoke $r3.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("security.properties");

        $r4 = new java.io.BufferedInputStream;

        specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r0);

        r1 = $r4;

        $r5 = <java.security.Security: java.util.Properties secprops>;

        virtualinvoke $r5.<java.util.Properties: void load(java.io.InputStream)>(r1);

        z0 = 1;

        virtualinvoke r0.<java.io.InputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r8 = $r7;

        staticinvoke <java.lang.System: void logE(java.lang.String,java.lang.Throwable)>("Could not load \'security.properties\'", r8);

     label4:
        if z0 != 0 goto label5;

        staticinvoke <java.security.Security: void registerDefaultProviders()>();

     label5:
        $r6 = new java.security.Security$SecurityDoor;

        specialinvoke $r6.<java.security.Security$SecurityDoor: void <init>(java.security.Security$1)>(null);

        <org.apache.harmony.security.fortress.Engine: org.apache.harmony.security.fortress.SecurityAccess door> = $r6;

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
