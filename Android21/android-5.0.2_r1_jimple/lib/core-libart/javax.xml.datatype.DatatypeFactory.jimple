public abstract class javax.xml.datatype.DatatypeFactory extends java.lang.Object
{
    public static final java.lang.String DATATYPEFACTORY_PROPERTY;
    public static final java.lang.String DATATYPEFACTORY_IMPLEMENTATION_CLASS;

    protected void <init>()
    {
        javax.xml.datatype.DatatypeFactory r0;

        r0 := @this: javax.xml.datatype.DatatypeFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static javax.xml.datatype.DatatypeFactory newInstance() throws javax.xml.datatype.DatatypeConfigurationException
    {
        javax.xml.datatype.FactoryFinder$ConfigurationError r0, $r4;
        java.lang.String $r1, $r6;
        java.lang.Object $r2;
        javax.xml.datatype.DatatypeFactory $r3;
        javax.xml.datatype.DatatypeConfigurationException $r5;
        java.lang.Exception $r7;

     label1:
        $r1 = <javax.xml.datatype.DatatypeFactory: java.lang.String DATATYPEFACTORY_IMPLEMENTATION_CLASS>;

        $r2 = staticinvoke <javax.xml.datatype.FactoryFinder: java.lang.Object find(java.lang.String,java.lang.String)>("javax.xml.datatype.DatatypeFactory", $r1);

        $r3 = (javax.xml.datatype.DatatypeFactory) $r2;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r0 = $r4;

        $r5 = new javax.xml.datatype.DatatypeConfigurationException;

        $r6 = virtualinvoke r0.<javax.xml.datatype.FactoryFinder$ConfigurationError: java.lang.String getMessage()>();

        $r7 = virtualinvoke r0.<javax.xml.datatype.FactoryFinder$ConfigurationError: java.lang.Exception getException()>();

        specialinvoke $r5.<javax.xml.datatype.DatatypeConfigurationException: void <init>(java.lang.String,java.lang.Throwable)>($r6, $r7);

        throw $r5;

        catch javax.xml.datatype.FactoryFinder$ConfigurationError from label1 to label2 with label3;
    }

    public static javax.xml.datatype.DatatypeFactory newInstance(java.lang.String, java.lang.ClassLoader) throws javax.xml.datatype.DatatypeConfigurationException
    {
        java.lang.String r0;
        java.lang.ClassLoader r1;
        java.lang.Class r2, $r3;
        java.lang.Object $r4;
        javax.xml.datatype.DatatypeFactory $r5;
        java.lang.Thread $r6;
        javax.xml.datatype.DatatypeConfigurationException $r7, $r9, $r11, $r13;
        java.lang.InstantiationException $r8, r15;
        java.lang.ClassNotFoundException $r10, r14;
        java.lang.IllegalAccessException $r12, r16;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.ClassLoader;

        if r0 != null goto label1;

        $r7 = new javax.xml.datatype.DatatypeConfigurationException;

        specialinvoke $r7.<javax.xml.datatype.DatatypeConfigurationException: void <init>(java.lang.String)>("factoryClassName == null");

        throw $r7;

     label1:
        if r1 != null goto label2;

        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r1 = virtualinvoke $r6.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

     label2:
        if r1 == null goto label3;

        $r3 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0);

        goto label4;

     label3:
        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label4:
        r2 = $r3;

        $r4 = virtualinvoke r2.<java.lang.Class: java.lang.Object newInstance()>();

        $r5 = (javax.xml.datatype.DatatypeFactory) $r4;

     label5:
        return $r5;

     label6:
        $r10 := @caughtexception;

        r14 = $r10;

        $r11 = new javax.xml.datatype.DatatypeConfigurationException;

        specialinvoke $r11.<javax.xml.datatype.DatatypeConfigurationException: void <init>(java.lang.Throwable)>(r14);

        throw $r11;

     label7:
        $r8 := @caughtexception;

        r15 = $r8;

        $r9 = new javax.xml.datatype.DatatypeConfigurationException;

        specialinvoke $r9.<javax.xml.datatype.DatatypeConfigurationException: void <init>(java.lang.Throwable)>(r15);

        throw $r9;

     label8:
        $r12 := @caughtexception;

        r16 = $r12;

        $r13 = new javax.xml.datatype.DatatypeConfigurationException;

        specialinvoke $r13.<javax.xml.datatype.DatatypeConfigurationException: void <init>(java.lang.Throwable)>(r16);

        throw $r13;

        catch java.lang.ClassNotFoundException from label2 to label5 with label6;
        catch java.lang.InstantiationException from label2 to label5 with label7;
        catch java.lang.IllegalAccessException from label2 to label5 with label8;
    }

    public abstract javax.xml.datatype.Duration newDuration(java.lang.String);

    public abstract javax.xml.datatype.Duration newDuration(long);

    public abstract javax.xml.datatype.Duration newDuration(boolean, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigDecimal);

    public javax.xml.datatype.Duration newDuration(boolean, int, int, int, int, int, int)
    {
        javax.xml.datatype.DatatypeFactory r0;
        boolean z0;
        int i0, i1, i2, i3, i4, i5;
        java.math.BigInteger r1, r2, r3, r4, r5, $r9, $r10, $r11, $r12, $r13;
        java.math.BigDecimal r6, $r8;
        javax.xml.datatype.Duration $r7;
        long $l6, $l7, $l8, $l9, $l10, $l11;

        r0 := @this: javax.xml.datatype.DatatypeFactory;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        if i0 == -2147483648 goto label01;

        $l11 = (long) i0;

        $r13 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l11);

        goto label02;

     label01:
        $r13 = null;

     label02:
        r1 = $r13;

        if i1 == -2147483648 goto label03;

        $l10 = (long) i1;

        $r12 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l10);

        goto label04;

     label03:
        $r12 = null;

     label04:
        r2 = $r12;

        if i2 == -2147483648 goto label05;

        $l9 = (long) i2;

        $r11 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l9);

        goto label06;

     label05:
        $r11 = null;

     label06:
        r3 = $r11;

        if i3 == -2147483648 goto label07;

        $l8 = (long) i3;

        $r10 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l8);

        goto label08;

     label07:
        $r10 = null;

     label08:
        r4 = $r10;

        if i4 == -2147483648 goto label09;

        $l7 = (long) i4;

        $r9 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l7);

        goto label10;

     label09:
        $r9 = null;

     label10:
        r5 = $r9;

        if i5 == -2147483648 goto label11;

        $l6 = (long) i5;

        $r8 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>($l6);

        goto label12;

     label11:
        $r8 = null;

     label12:
        r6 = $r8;

        $r7 = virtualinvoke r0.<javax.xml.datatype.DatatypeFactory: javax.xml.datatype.Duration newDuration(boolean,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigDecimal)>(z0, r1, r2, r3, r4, r5, r6);

        return $r7;
    }

    public javax.xml.datatype.Duration newDurationDayTime(java.lang.String)
    {
        javax.xml.datatype.DatatypeFactory r0;
        java.lang.String r1, $r7;
        int i0, i1, i2, $i4;
        char c3;
        javax.xml.datatype.Duration $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.NullPointerException $r8;

        r0 := @this: javax.xml.datatype.DatatypeFactory;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("lexicalRepresentation == null");

        throw $r8;

     label1:
        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(84);

        if i0 < 0 goto label2;

        $i4 = i0;

        goto label3;

     label2:
        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

     label3:
        i1 = $i4;

        i2 = 0;

     label4:
        if i2 >= i1 goto label7;

        c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        if c3 == 89 goto label5;

        if c3 != 77 goto label6;

     label5:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid dayTimeDuration value: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label6:
        i2 = i2 + 1;

        goto label4;

     label7:
        $r2 = virtualinvoke r0.<javax.xml.datatype.DatatypeFactory: javax.xml.datatype.Duration newDuration(java.lang.String)>(r1);

        return $r2;
    }

    public javax.xml.datatype.Duration newDurationDayTime(long)
    {
        javax.xml.datatype.DatatypeFactory r0;
        long l0, l1, l2, l7, $l9, $l11, $l13, $l14, $l15, $l17, $l18, $l19, $l20, l23, l24, l25, l26, l27;
        boolean z0, z1;
        int i3, i4, i5, i6, $i12, $i22;
        byte $b8, $b10, $b16, $b21;
        javax.xml.datatype.Duration $r1, $r5, $r7, $r8;
        java.math.BigInteger $r2, $r3, $r6, r10, r11, r12;
        java.math.BigDecimal $r4, r9;

        r0 := @this: javax.xml.datatype.DatatypeFactory;

        l0 := @parameter0: long;

        l1 = l0;

        $b8 = l1 cmp 0L;

        if $b8 != 0 goto label1;

        $r7 = virtualinvoke r0.<javax.xml.datatype.DatatypeFactory: javax.xml.datatype.Duration newDuration(boolean,int,int,int,int,int,int)>(1, -2147483648, -2147483648, 0, 0, 0, 0);

        return $r7;

     label1:
        z0 = 0;

        $b10 = l1 cmp 0L;

        if $b10 >= 0 goto label3;

        z1 = 0;

        $b21 = l1 cmp -9223372036854775808L;

        if $b21 != 0 goto label2;

        l1 = l1 + 1L;

        z0 = 1;

     label2:
        l1 = l1 * -1L;

        goto label4;

     label3:
        z1 = 1;

     label4:
        l2 = l1;

        $l9 = l2 % 60000L;

        i3 = (int) $l9;

        if z0 == 0 goto label5;

        i3 = i3 + 1;

     label5:
        $i12 = i3 % 1000;

        if $i12 != 0 goto label7;

        i4 = i3 / 1000;

        l23 = l2 / 60000L;

        $l15 = l23 % 60L;

        i5 = (int) $l15;

        l24 = l23 / 60L;

        $l17 = l24 % 24L;

        i6 = (int) $l17;

        l7 = l24 / 24L;

        $b16 = l7 cmp 2147483647L;

        if $b16 > 0 goto label6;

        $i22 = (int) l7;

        $r8 = virtualinvoke r0.<javax.xml.datatype.DatatypeFactory: javax.xml.datatype.Duration newDuration(boolean,int,int,int,int,int,int)>(z1, -2147483648, -2147483648, $i22, i6, i5, i4);

        return $r8;

     label6:
        $r3 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l7);

        $l19 = (long) i6;

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l19);

        $l18 = (long) i5;

        $r6 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l18);

        $l20 = (long) i3;

        $r4 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>($l20, 3);

        $r5 = virtualinvoke r0.<javax.xml.datatype.DatatypeFactory: javax.xml.datatype.Duration newDuration(boolean,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigDecimal)>(z1, null, null, $r3, $r2, $r6, $r4);

        return $r5;

     label7:
        $l11 = (long) i3;

        r9 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>($l11, 3);

        l25 = l2 / 60000L;

        $l13 = l25 % 60L;

        r10 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l13);

        l26 = l25 / 60L;

        $l14 = l26 % 24L;

        r11 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l14);

        l27 = l26 / 24L;

        r12 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l27);

        $r1 = virtualinvoke r0.<javax.xml.datatype.DatatypeFactory: javax.xml.datatype.Duration newDuration(boolean,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigDecimal)>(z1, null, null, r12, r11, r10, r9);

        return $r1;
    }

    public javax.xml.datatype.Duration newDurationDayTime(boolean, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)
    {
        javax.xml.datatype.DatatypeFactory r0;
        boolean z0;
        java.math.BigInteger r1, r2, r3, r4;
        javax.xml.datatype.Duration $r5;
        java.math.BigDecimal $r6;

        r0 := @this: javax.xml.datatype.DatatypeFactory;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.math.BigInteger;

        r2 := @parameter2: java.math.BigInteger;

        r3 := @parameter3: java.math.BigInteger;

        r4 := @parameter4: java.math.BigInteger;

        if r4 == null goto label1;

        $r6 = new java.math.BigDecimal;

        specialinvoke $r6.<java.math.BigDecimal: void <init>(java.math.BigInteger)>(r4);

        goto label2;

     label1:
        $r6 = null;

     label2:
        $r5 = virtualinvoke r0.<javax.xml.datatype.DatatypeFactory: javax.xml.datatype.Duration newDuration(boolean,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigDecimal)>(z0, null, null, r1, r2, r3, $r6);

        return $r5;
    }

    public javax.xml.datatype.Duration newDurationDayTime(boolean, int, int, int, int)
    {
        javax.xml.datatype.DatatypeFactory r0;
        boolean z0;
        int i0, i1, i2, i3;
        javax.xml.datatype.Duration $r1;

        r0 := @this: javax.xml.datatype.DatatypeFactory;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r1 = virtualinvoke r0.<javax.xml.datatype.DatatypeFactory: javax.xml.datatype.Duration newDuration(boolean,int,int,int,int,int,int)>(z0, -2147483648, -2147483648, i0, i1, i2, i3);

        return $r1;
    }

    public javax.xml.datatype.Duration newDurationYearMonth(java.lang.String)
    {
        javax.xml.datatype.DatatypeFactory r0;
        java.lang.String r1, $r7;
        int i0, i1;
        char c2;
        javax.xml.datatype.Duration $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.NullPointerException $r8;

        r0 := @this: javax.xml.datatype.DatatypeFactory;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("lexicalRepresentation == null");

        throw $r8;

     label1:
        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label5;

        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);

        if c2 == 68 goto label3;

        if c2 != 84 goto label4;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid yearMonthDuration value: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        $r2 = virtualinvoke r0.<javax.xml.datatype.DatatypeFactory: javax.xml.datatype.Duration newDuration(java.lang.String)>(r1);

        return $r2;
    }

    public javax.xml.datatype.Duration newDurationYearMonth(long)
    {
        javax.xml.datatype.DatatypeFactory r0;
        long l0;
        javax.xml.datatype.Duration $r1;

        r0 := @this: javax.xml.datatype.DatatypeFactory;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<javax.xml.datatype.DatatypeFactory: javax.xml.datatype.Duration newDuration(long)>(l0);

        return $r1;
    }

    public javax.xml.datatype.Duration newDurationYearMonth(boolean, java.math.BigInteger, java.math.BigInteger)
    {
        javax.xml.datatype.DatatypeFactory r0;
        boolean z0;
        java.math.BigInteger r1, r2;
        javax.xml.datatype.Duration $r3;

        r0 := @this: javax.xml.datatype.DatatypeFactory;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.math.BigInteger;

        r2 := @parameter2: java.math.BigInteger;

        $r3 = virtualinvoke r0.<javax.xml.datatype.DatatypeFactory: javax.xml.datatype.Duration newDuration(boolean,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigDecimal)>(z0, r1, r2, null, null, null, null);

        return $r3;
    }

    public javax.xml.datatype.Duration newDurationYearMonth(boolean, int, int)
    {
        javax.xml.datatype.DatatypeFactory r0;
        boolean z0;
        int i0, i1;
        javax.xml.datatype.Duration $r1;

        r0 := @this: javax.xml.datatype.DatatypeFactory;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = virtualinvoke r0.<javax.xml.datatype.DatatypeFactory: javax.xml.datatype.Duration newDuration(boolean,int,int,int,int,int,int)>(z0, i0, i1, -2147483648, -2147483648, -2147483648, -2147483648);

        return $r1;
    }

    public abstract javax.xml.datatype.XMLGregorianCalendar newXMLGregorianCalendar();

    public abstract javax.xml.datatype.XMLGregorianCalendar newXMLGregorianCalendar(java.lang.String);

    public abstract javax.xml.datatype.XMLGregorianCalendar newXMLGregorianCalendar(java.util.GregorianCalendar);

    public abstract javax.xml.datatype.XMLGregorianCalendar newXMLGregorianCalendar(java.math.BigInteger, int, int, int, int, int, java.math.BigDecimal, int);

    public javax.xml.datatype.XMLGregorianCalendar newXMLGregorianCalendar(int, int, int, int, int, int, int, int)
    {
        javax.xml.datatype.DatatypeFactory r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        java.math.BigInteger r1, $r9;
        java.math.BigDecimal r2;
        javax.xml.datatype.XMLGregorianCalendar $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        long $l8, $l9;
        java.lang.String $r8;

        r0 := @this: javax.xml.datatype.DatatypeFactory;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        i7 := @parameter7: int;

        if i0 == -2147483648 goto label1;

        $l9 = (long) i0;

        $r9 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l9);

        goto label2;

     label1:
        $r9 = null;

     label2:
        r1 = $r9;

        r2 = null;

        if i6 == -2147483648 goto label5;

        if i6 < 0 goto label3;

        if i6 <= 1000 goto label4;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("javax.xml.datatype.DatatypeFactory#newXMLGregorianCalendar(int year, int month, int day, int hour, int minute, int second, int millisecond, int timezone)with invalid millisecond: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label4:
        $l8 = (long) i6;

        r2 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>($l8, 3);

     label5:
        $r3 = virtualinvoke r0.<javax.xml.datatype.DatatypeFactory: javax.xml.datatype.XMLGregorianCalendar newXMLGregorianCalendar(java.math.BigInteger,int,int,int,int,int,java.math.BigDecimal,int)>(r1, i1, i2, i3, i4, i5, r2, i7);

        return $r3;
    }

    public javax.xml.datatype.XMLGregorianCalendar newXMLGregorianCalendarDate(int, int, int, int)
    {
        javax.xml.datatype.DatatypeFactory r0;
        int i0, i1, i2, i3;
        javax.xml.datatype.XMLGregorianCalendar $r1;

        r0 := @this: javax.xml.datatype.DatatypeFactory;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = virtualinvoke r0.<javax.xml.datatype.DatatypeFactory: javax.xml.datatype.XMLGregorianCalendar newXMLGregorianCalendar(int,int,int,int,int,int,int,int)>(i0, i1, i2, -2147483648, -2147483648, -2147483648, -2147483648, i3);

        return $r1;
    }

    public javax.xml.datatype.XMLGregorianCalendar newXMLGregorianCalendarTime(int, int, int, int)
    {
        javax.xml.datatype.DatatypeFactory r0;
        int i0, i1, i2, i3;
        javax.xml.datatype.XMLGregorianCalendar $r1;

        r0 := @this: javax.xml.datatype.DatatypeFactory;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = virtualinvoke r0.<javax.xml.datatype.DatatypeFactory: javax.xml.datatype.XMLGregorianCalendar newXMLGregorianCalendar(int,int,int,int,int,int,int,int)>(-2147483648, -2147483648, -2147483648, i0, i1, i2, -2147483648, i3);

        return $r1;
    }

    public javax.xml.datatype.XMLGregorianCalendar newXMLGregorianCalendarTime(int, int, int, java.math.BigDecimal, int)
    {
        javax.xml.datatype.DatatypeFactory r0;
        int i0, i1, i2, i3;
        java.math.BigDecimal r1;
        javax.xml.datatype.XMLGregorianCalendar $r2;

        r0 := @this: javax.xml.datatype.DatatypeFactory;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.math.BigDecimal;

        i3 := @parameter4: int;

        $r2 = virtualinvoke r0.<javax.xml.datatype.DatatypeFactory: javax.xml.datatype.XMLGregorianCalendar newXMLGregorianCalendar(java.math.BigInteger,int,int,int,int,int,java.math.BigDecimal,int)>(null, -2147483648, -2147483648, i0, i1, i2, r1, i3);

        return $r2;
    }

    public javax.xml.datatype.XMLGregorianCalendar newXMLGregorianCalendarTime(int, int, int, int, int)
    {
        javax.xml.datatype.DatatypeFactory r0;
        int i0, i1, i2, i3, i4;
        java.math.BigDecimal r1;
        javax.xml.datatype.XMLGregorianCalendar $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        long $l5;

        r0 := @this: javax.xml.datatype.DatatypeFactory;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        r1 = null;

        if i3 == -2147483648 goto label3;

        if i3 < 0 goto label1;

        if i3 <= 1000 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("javax.xml.datatype.DatatypeFactory#newXMLGregorianCalendarTime(int hours, int minutes, int seconds, int milliseconds, int timezone)with invalid milliseconds: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label2:
        $l5 = (long) i3;

        r1 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long,int)>($l5, 3);

     label3:
        $r2 = virtualinvoke r0.<javax.xml.datatype.DatatypeFactory: javax.xml.datatype.XMLGregorianCalendar newXMLGregorianCalendarTime(int,int,int,java.math.BigDecimal,int)>(i0, i1, i2, r1, i4);

        return $r2;
    }

    static void <clinit>()
    {
        java.lang.String $r0;

        <javax.xml.datatype.DatatypeFactory: java.lang.String DATATYPEFACTORY_PROPERTY> = "javax.xml.datatype.DatatypeFactory";

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(java.lang.String)>("org.apache.xerces.jaxp.datatype.DatatypeFactoryImpl");

        <javax.xml.datatype.DatatypeFactory: java.lang.String DATATYPEFACTORY_IMPLEMENTATION_CLASS> = $r0;

        return;
    }
}
