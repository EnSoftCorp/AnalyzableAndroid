public class java.util.Timer extends java.lang.Object
{
    private static long timerId;
    private final java.util.Timer$TimerImpl impl;
    private final java.util.Timer$FinalizerHelper finalizer;

    private static synchronized long nextId()
    {
        long $l0, $l1;

        $l0 = <java.util.Timer: long timerId>;

        $l1 = $l0 + 1L;

        <java.util.Timer: long timerId> = $l1;

        return $l0;
    }

    public void <init>(java.lang.String, boolean)
    {
        java.util.Timer r0;
        java.lang.String r1;
        boolean z0;
        java.util.Timer$TimerImpl $r2, $r4;
        java.util.Timer$FinalizerHelper $r3;
        java.lang.NullPointerException $r5;

        r0 := @this: java.util.Timer;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("name == null");

        throw $r5;

     label1:
        $r2 = new java.util.Timer$TimerImpl;

        specialinvoke $r2.<java.util.Timer$TimerImpl: void <init>(java.lang.String,boolean)>(r1, z0);

        r0.<java.util.Timer: java.util.Timer$TimerImpl impl> = $r2;

        $r3 = new java.util.Timer$FinalizerHelper;

        $r4 = r0.<java.util.Timer: java.util.Timer$TimerImpl impl>;

        specialinvoke $r3.<java.util.Timer$FinalizerHelper: void <init>(java.util.Timer$TimerImpl)>($r4);

        r0.<java.util.Timer: java.util.Timer$FinalizerHelper finalizer> = $r3;

        return;
    }

    public void <init>(java.lang.String)
    {
        java.util.Timer r0;
        java.lang.String r1;

        r0 := @this: java.util.Timer;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.util.Timer: void <init>(java.lang.String,boolean)>(r1, 0);

        return;
    }

    public void <init>(boolean)
    {
        java.util.Timer r0;
        boolean z0;
        java.lang.StringBuilder $r1, $r2, $r3;
        long $l0;
        java.lang.String $r4;

        r0 := @this: java.util.Timer;

        z0 := @parameter0: boolean;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timer-");

        $l0 = staticinvoke <java.util.Timer: long nextId()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.util.Timer: void <init>(java.lang.String,boolean)>($r4, z0);

        return;
    }

    public void <init>()
    {
        java.util.Timer r0;

        r0 := @this: java.util.Timer;

        specialinvoke r0.<java.util.Timer: void <init>(boolean)>(0);

        return;
    }

    public void cancel()
    {
        java.util.Timer r0;
        java.util.Timer$TimerImpl $r1;

        r0 := @this: java.util.Timer;

        $r1 = r0.<java.util.Timer: java.util.Timer$TimerImpl impl>;

        virtualinvoke $r1.<java.util.Timer$TimerImpl: void cancel()>();

        return;
    }

    public int purge()
    {
        java.util.Timer r0;
        java.util.Timer$TimerImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;
        int $i0;

        r0 := @this: java.util.Timer;

        $r3 = r0.<java.util.Timer: java.util.Timer$TimerImpl impl>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<java.util.Timer: java.util.Timer$TimerImpl impl>;

        $i0 = virtualinvoke $r4.<java.util.Timer$TimerImpl: int purge()>();

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void schedule(java.util.TimerTask, java.util.Date)
    {
        java.util.Timer r0;
        java.util.TimerTask r1;
        java.util.Date r2;
        long l0, $l1, $l3, $l4, $l6, $l7;
        byte $b2, $b5;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: java.util.Timer;

        r1 := @parameter0: java.util.TimerTask;

        r2 := @parameter1: java.util.Date;

        $l1 = virtualinvoke r2.<java.util.Date: long getTime()>();

        $b2 = $l1 cmp 0L;

        if $b2 >= 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("when < 0: ");

        $l7 = virtualinvoke r2.<java.util.Date: long getTime()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        $l3 = virtualinvoke r2.<java.util.Date: long getTime()>();

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l0 = $l3 - $l4;

        $b5 = l0 cmp 0L;

        if $b5 >= 0 goto label2;

        $l6 = 0L;

        goto label3;

     label2:
        $l6 = l0;

     label3:
        specialinvoke r0.<java.util.Timer: void scheduleImpl(java.util.TimerTask,long,long,boolean)>(r1, $l6, -1L, 0);

        return;
    }

    public void schedule(java.util.TimerTask, long)
    {
        java.util.Timer r0;
        java.util.TimerTask r1;
        long l0;
        byte $b1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: java.util.Timer;

        r1 := @parameter0: java.util.TimerTask;

        l0 := @parameter1: long;

        $b1 = l0 cmp 0L;

        if $b1 >= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("delay < 0: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        specialinvoke r0.<java.util.Timer: void scheduleImpl(java.util.TimerTask,long,long,boolean)>(r1, l0, -1L, 0);

        return;
    }

    public void schedule(java.util.TimerTask, long, long)
    {
        java.util.Timer r0;
        java.util.TimerTask r1;
        long l0, l1;
        byte $b2, $b3;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: java.util.Timer;

        r1 := @parameter0: java.util.TimerTask;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $b2 = l0 cmp 0L;

        if $b2 < 0 goto label1;

        $b3 = l1 cmp 0L;

        if $b3 > 0 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label2:
        specialinvoke r0.<java.util.Timer: void scheduleImpl(java.util.TimerTask,long,long,boolean)>(r1, l0, l1, 0);

        return;
    }

    public void schedule(java.util.TimerTask, java.util.Date, long)
    {
        java.util.Timer r0;
        java.util.TimerTask r1;
        java.util.Date r2;
        long l0, l1, $l3, $l5, $l6, $l8;
        byte $b2, $b4, $b7;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: java.util.Timer;

        r1 := @parameter0: java.util.TimerTask;

        r2 := @parameter1: java.util.Date;

        l0 := @parameter2: long;

        $b2 = l0 cmp 0L;

        if $b2 <= 0 goto label1;

        $l3 = virtualinvoke r2.<java.util.Date: long getTime()>();

        $b4 = $l3 cmp 0L;

        if $b4 >= 0 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label2:
        $l5 = virtualinvoke r2.<java.util.Date: long getTime()>();

        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l1 = $l5 - $l6;

        $b7 = l1 cmp 0L;

        if $b7 >= 0 goto label3;

        $l8 = 0L;

        goto label4;

     label3:
        $l8 = l1;

     label4:
        specialinvoke r0.<java.util.Timer: void scheduleImpl(java.util.TimerTask,long,long,boolean)>(r1, $l8, l0, 0);

        return;
    }

    public void scheduleAtFixedRate(java.util.TimerTask, long, long)
    {
        java.util.Timer r0;
        java.util.TimerTask r1;
        long l0, l1;
        byte $b2, $b3;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: java.util.Timer;

        r1 := @parameter0: java.util.TimerTask;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $b2 = l0 cmp 0L;

        if $b2 < 0 goto label1;

        $b3 = l1 cmp 0L;

        if $b3 > 0 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label2:
        specialinvoke r0.<java.util.Timer: void scheduleImpl(java.util.TimerTask,long,long,boolean)>(r1, l0, l1, 1);

        return;
    }

    public void scheduleAtFixedRate(java.util.TimerTask, java.util.Date, long)
    {
        java.util.Timer r0;
        java.util.TimerTask r1;
        java.util.Date r2;
        long l0, l1, $l3, $l5, $l6;
        byte $b2, $b4;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: java.util.Timer;

        r1 := @parameter0: java.util.TimerTask;

        r2 := @parameter1: java.util.Date;

        l0 := @parameter2: long;

        $b2 = l0 cmp 0L;

        if $b2 <= 0 goto label1;

        $l3 = virtualinvoke r2.<java.util.Date: long getTime()>();

        $b4 = $l3 cmp 0L;

        if $b4 >= 0 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label2:
        $l5 = virtualinvoke r2.<java.util.Date: long getTime()>();

        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l1 = $l5 - $l6;

        specialinvoke r0.<java.util.Timer: void scheduleImpl(java.util.TimerTask,long,long,boolean)>(r1, l1, l0, 1);

        return;
    }

    private void scheduleImpl(java.util.TimerTask, long, long, boolean)
    {
        java.util.Timer r0;
        java.util.TimerTask r1;
        long l0, l1, l2, $l4;
        boolean z0, $z1, $z2, $z3;
        java.util.Timer$TimerImpl r2, $r6, $r7, $r9;
        java.lang.Object r3, $r8;
        java.lang.Throwable r4, r5, $r18, $r19;
        byte $b3;
        java.lang.IllegalStateException $r10, $r11, $r16;
        java.lang.StringBuilder $r12, $r14, $r15;
        java.lang.IllegalArgumentException $r13;
        java.lang.String $r17;

        r0 := @this: java.util.Timer;

        r1 := @parameter0: java.util.TimerTask;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        $r6 = r0.<java.util.Timer: java.util.Timer$TimerImpl impl>;

        r2 = $r6;

        entermonitor $r6;

     label01:
        $r7 = r0.<java.util.Timer: java.util.Timer$TimerImpl impl>;

        $z1 = staticinvoke <java.util.Timer$TimerImpl: boolean access$400(java.util.Timer$TimerImpl)>($r7);

        if $z1 == 0 goto label02;

        $r16 = new java.lang.IllegalStateException;

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Timer was canceled");

        throw $r16;

     label02:
        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l2 = l0 + $l4;

        $b3 = l2 cmp 0L;

        if $b3 >= 0 goto label03;

        $r13 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal delay to start the TimerTask: ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r13;

     label03:
        $r8 = r1.<java.util.TimerTask: java.lang.Object lock>;

        r3 = $r8;

        entermonitor $r8;

     label04:
        $z2 = virtualinvoke r1.<java.util.TimerTask: boolean isScheduled()>();

        if $z2 == 0 goto label05;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("TimerTask is scheduled already");

        throw $r10;

     label05:
        $z3 = r1.<java.util.TimerTask: boolean cancelled>;

        if $z3 == 0 goto label06;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("TimerTask is canceled");

        throw $r11;

     label06:
        r1.<java.util.TimerTask: long when> = l2;

        r1.<java.util.TimerTask: long period> = l1;

        r1.<java.util.TimerTask: boolean fixedRate> = z0;

        exitmonitor r3;

     label07:
        goto label10;

     label08:
        $r19 := @caughtexception;

        r4 = $r19;

        exitmonitor r3;

     label09:
        throw r4;

     label10:
        $r9 = r0.<java.util.Timer: java.util.Timer$TimerImpl impl>;

        staticinvoke <java.util.Timer$TimerImpl: void access$500(java.util.Timer$TimerImpl,java.util.TimerTask)>($r9, r1);

        exitmonitor r2;

     label11:
        goto label14;

     label12:
        $r18 := @caughtexception;

        r5 = $r18;

        exitmonitor r2;

     label13:
        throw r5;

     label14:
        return;

        catch java.lang.Throwable from label04 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label01 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }
}
