public class java.io.PipedOutputStream extends java.io.OutputStream
{
    private java.io.PipedInputStream target;

    public void <init>()
    {
        java.io.PipedOutputStream r0;

        r0 := @this: java.io.PipedOutputStream;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        return;
    }

    public void <init>(java.io.PipedInputStream) throws java.io.IOException
    {
        java.io.PipedOutputStream r0;
        java.io.PipedInputStream r1;

        r0 := @this: java.io.PipedOutputStream;

        r1 := @parameter0: java.io.PipedInputStream;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        virtualinvoke r0.<java.io.PipedOutputStream: void connect(java.io.PipedInputStream)>(r1);

        return;
    }

    public void close() throws java.io.IOException
    {
        java.io.PipedOutputStream r0;
        java.io.PipedInputStream r1;

        r0 := @this: java.io.PipedOutputStream;

        r1 = r0.<java.io.PipedOutputStream: java.io.PipedInputStream target>;

        if r1 == null goto label1;

        virtualinvoke r1.<java.io.PipedInputStream: void done()>();

        r0.<java.io.PipedOutputStream: java.io.PipedInputStream target> = null;

     label1:
        return;
    }

    public void connect(java.io.PipedInputStream) throws java.io.IOException
    {
        java.io.PipedOutputStream r0;
        java.io.PipedInputStream r1, r2, $r5;
        java.lang.Throwable r3, $r9;
        boolean $z0;
        java.io.IOException $r6, $r7;
        java.lang.NullPointerException $r8;

        r0 := @this: java.io.PipedOutputStream;

        r1 := @parameter0: java.io.PipedInputStream;

        if r1 != null goto label1;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("stream == null");

        throw $r8;

     label1:
        r2 = r1;

        entermonitor r1;

     label2:
        $r5 = r0.<java.io.PipedOutputStream: java.io.PipedInputStream target>;

        if $r5 == null goto label3;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("Already connected");

        throw $r7;

     label3:
        $z0 = r1.<java.io.PipedInputStream: boolean isConnected>;

        if $z0 == 0 goto label4;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Pipe already connected");

        throw $r6;

     label4:
        virtualinvoke r1.<java.io.PipedInputStream: void establishConnection()>();

        r0.<java.io.PipedOutputStream: java.io.PipedInputStream target> = r1;

        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label7:
        throw r3;

     label8:
        return;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void flush() throws java.io.IOException
    {
        java.io.PipedOutputStream r0;
        java.io.PipedInputStream r1, r2;
        java.lang.Throwable r3, $r5;

        r0 := @this: java.io.PipedOutputStream;

        r1 = r0.<java.io.PipedOutputStream: java.io.PipedInputStream target>;

        if r1 != null goto label1;

        return;

     label1:
        r2 = r1;

        entermonitor r1;

     label2:
        virtualinvoke r1.<java.lang.Object: void notifyAll()>();

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        java.io.PipedOutputStream r0;
        byte[] r1;
        int i0, i1;

        r0 := @this: java.io.PipedOutputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.io.OutputStream: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public void write(int) throws java.io.IOException
    {
        java.io.PipedOutputStream r0;
        int i0;
        java.io.PipedInputStream r1;
        java.io.IOException $r2;

        r0 := @this: java.io.PipedOutputStream;

        i0 := @parameter0: int;

        r1 = r0.<java.io.PipedOutputStream: java.io.PipedInputStream target>;

        if r1 != null goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Pipe not connected");

        throw $r2;

     label1:
        virtualinvoke r1.<java.io.PipedInputStream: void receive(int)>(i0);

        return;
    }
}
