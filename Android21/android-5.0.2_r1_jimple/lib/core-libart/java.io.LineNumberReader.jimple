public class java.io.LineNumberReader extends java.io.BufferedReader
{
    private int lineNumber;
    private int markedLineNumber;
    private boolean lastWasCR;
    private boolean markedLastWasCR;

    public void <init>(java.io.Reader)
    {
        java.io.LineNumberReader r0;
        java.io.Reader r1;

        r0 := @this: java.io.LineNumberReader;

        r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<java.io.BufferedReader: void <init>(java.io.Reader)>(r1);

        r0.<java.io.LineNumberReader: int markedLineNumber> = -1;

        return;
    }

    public void <init>(java.io.Reader, int)
    {
        java.io.LineNumberReader r0;
        java.io.Reader r1;
        int i0;

        r0 := @this: java.io.LineNumberReader;

        r1 := @parameter0: java.io.Reader;

        i0 := @parameter1: int;

        specialinvoke r0.<java.io.BufferedReader: void <init>(java.io.Reader,int)>(r1, i0);

        r0.<java.io.LineNumberReader: int markedLineNumber> = -1;

        return;
    }

    public int getLineNumber()
    {
        java.io.LineNumberReader r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;
        int $i0;

        r0 := @this: java.io.LineNumberReader;

        $r3 = r0.<java.io.LineNumberReader: java.lang.Object lock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $i0 = r0.<java.io.LineNumberReader: int lineNumber>;

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void mark(int) throws java.io.IOException
    {
        java.io.LineNumberReader r0;
        int i0, $i1;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;
        boolean $z0;

        r0 := @this: java.io.LineNumberReader;

        i0 := @parameter0: int;

        $r3 = r0.<java.io.LineNumberReader: java.lang.Object lock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<java.io.BufferedReader: void mark(int)>(i0);

        $i1 = r0.<java.io.LineNumberReader: int lineNumber>;

        r0.<java.io.LineNumberReader: int markedLineNumber> = $i1;

        $z0 = r0.<java.io.LineNumberReader: boolean lastWasCR>;

        r0.<java.io.LineNumberReader: boolean markedLastWasCR> = $z0;

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int read() throws java.io.IOException
    {
        java.io.LineNumberReader r0;
        java.lang.Object r1, $r3;
        int i0, $i1, $i2;
        java.lang.Throwable r2, $r4;
        boolean $z0;

        r0 := @this: java.io.LineNumberReader;

        $r3 = r0.<java.io.LineNumberReader: java.lang.Object lock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        i0 = specialinvoke r0.<java.io.BufferedReader: int read()>();

        if i0 != 10 goto label2;

        $z0 = r0.<java.io.LineNumberReader: boolean lastWasCR>;

        if $z0 == 0 goto label2;

        i0 = specialinvoke r0.<java.io.BufferedReader: int read()>();

     label2:
        r0.<java.io.LineNumberReader: boolean lastWasCR> = 0;

        lookupswitch(i0)
        {
            case 10: goto label4;
            case 13: goto label3;
            default: goto label5;
        };

     label3:
        i0 = 10;

        r0.<java.io.LineNumberReader: boolean lastWasCR> = 1;

     label4:
        $i1 = r0.<java.io.LineNumberReader: int lineNumber>;

        $i2 = $i1 + 1;

        r0.<java.io.LineNumberReader: int lineNumber> = $i2;

     label5:
        exitmonitor r1;

     label6:
        return i0;

     label7:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public int read(char[], int, int) throws java.io.IOException
    {
        java.io.LineNumberReader r0;
        char[] r1;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i8, $i9;
        java.lang.Object r2, $r4;
        char c4;
        java.lang.Throwable r3, $r5;
        boolean $z0;

        r0 := @this: java.io.LineNumberReader;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r4 = r0.<java.io.LineNumberReader: java.lang.Object lock>;

        r2 = $r4;

        entermonitor $r4;

     label01:
        i2 = specialinvoke r0.<java.io.BufferedReader: int read(char[],int,int)>(r1, i0, i1);

        if i2 != -1 goto label03;

        exitmonitor r2;

     label02:
        return -1;

     label03:
        i3 = 0;

     label04:
        if i3 >= i2 goto label09;

        $i5 = i0 + i3;

        c4 = r1[$i5];

        if c4 != 13 goto label05;

        $i9 = r0.<java.io.LineNumberReader: int lineNumber>;

        $i8 = $i9 + 1;

        r0.<java.io.LineNumberReader: int lineNumber> = $i8;

        r0.<java.io.LineNumberReader: boolean lastWasCR> = 1;

        goto label08;

     label05:
        if c4 != 10 goto label07;

        $z0 = r0.<java.io.LineNumberReader: boolean lastWasCR>;

        if $z0 != 0 goto label06;

        $i6 = r0.<java.io.LineNumberReader: int lineNumber>;

        $i7 = $i6 + 1;

        r0.<java.io.LineNumberReader: int lineNumber> = $i7;

     label06:
        r0.<java.io.LineNumberReader: boolean lastWasCR> = 0;

        goto label08;

     label07:
        r0.<java.io.LineNumberReader: boolean lastWasCR> = 0;

     label08:
        i3 = i3 + 1;

        goto label04;

     label09:
        exitmonitor r2;

     label10:
        return i2;

     label11:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label12:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public java.lang.String readLine() throws java.io.IOException
    {
        java.io.LineNumberReader r0;
        java.lang.Object r1, $r4;
        java.lang.String r2;
        java.lang.Throwable r3, $r5;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: java.io.LineNumberReader;

        $r4 = r0.<java.io.LineNumberReader: java.lang.Object lock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $z0 = r0.<java.io.LineNumberReader: boolean lastWasCR>;

        if $z0 == 0 goto label2;

        virtualinvoke r0.<java.io.LineNumberReader: void chompNewline()>();

        r0.<java.io.LineNumberReader: boolean lastWasCR> = 0;

     label2:
        r2 = specialinvoke r0.<java.io.BufferedReader: java.lang.String readLine()>();

        if r2 == null goto label3;

        $i0 = r0.<java.io.LineNumberReader: int lineNumber>;

        $i1 = $i0 + 1;

        r0.<java.io.LineNumberReader: int lineNumber> = $i1;

     label3:
        exitmonitor r1;

     label4:
        return r2;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r1;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void reset() throws java.io.IOException
    {
        java.io.LineNumberReader r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;
        int $i0;
        boolean $z0;

        r0 := @this: java.io.LineNumberReader;

        $r3 = r0.<java.io.LineNumberReader: java.lang.Object lock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<java.io.BufferedReader: void reset()>();

        $i0 = r0.<java.io.LineNumberReader: int markedLineNumber>;

        r0.<java.io.LineNumberReader: int lineNumber> = $i0;

        $z0 = r0.<java.io.LineNumberReader: boolean markedLastWasCR>;

        r0.<java.io.LineNumberReader: boolean lastWasCR> = $z0;

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setLineNumber(int)
    {
        java.io.LineNumberReader r0;
        int i0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: java.io.LineNumberReader;

        i0 := @parameter0: int;

        $r3 = r0.<java.io.LineNumberReader: java.lang.Object lock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        r0.<java.io.LineNumberReader: int lineNumber> = i0;

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public long skip(long) throws java.io.IOException
    {
        java.io.LineNumberReader r0;
        long l0, $l3, $l6;
        java.lang.Object r1, $r3;
        int i1, $i5;
        java.lang.Throwable r2, $r8;
        byte $b2, $b4;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r9;

        r0 := @this: java.io.LineNumberReader;

        l0 := @parameter0: long;

        $b2 = l0 cmp 0L;

        if $b2 >= 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("charCount < 0: ");

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label1:
        $r3 = r0.<java.io.LineNumberReader: java.lang.Object lock>;

        r1 = $r3;

        entermonitor $r3;

     label2:
        i1 = 0;

     label3:
        $l3 = (long) i1;

        $b4 = $l3 cmp l0;

        if $b4 >= 0 goto label6;

        $i5 = virtualinvoke r0.<java.io.LineNumberReader: int read()>();

        if $i5 != -1 goto label5;

        $l6 = (long) i1;

        exitmonitor r1;

     label4:
        return $l6;

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        exitmonitor r1;

     label7:
        return l0;

     label8:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label9:
        throw r2;

        catch java.lang.Throwable from label2 to label4 with label8;
        catch java.lang.Throwable from label5 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }
}
