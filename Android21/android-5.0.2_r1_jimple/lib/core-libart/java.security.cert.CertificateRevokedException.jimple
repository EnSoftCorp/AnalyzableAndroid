public class java.security.cert.CertificateRevokedException extends java.security.cert.CertificateException
{
    private static final long serialVersionUID;
    private final java.util.Date revocationDate;
    private final java.security.cert.CRLReason reason;
    private final javax.security.auth.x500.X500Principal authority;
    private transient java.util.Map extensions;

    public void <init>(java.util.Date, java.security.cert.CRLReason, javax.security.auth.x500.X500Principal, java.util.Map)
    {
        java.security.cert.CertificateRevokedException r0;
        java.util.Date r1;
        java.security.cert.CRLReason r2;
        javax.security.auth.x500.X500Principal r3;
        java.util.Map r4;

        r0 := @this: java.security.cert.CertificateRevokedException;

        r1 := @parameter0: java.util.Date;

        r2 := @parameter1: java.security.cert.CRLReason;

        r3 := @parameter2: javax.security.auth.x500.X500Principal;

        r4 := @parameter3: java.util.Map;

        specialinvoke r0.<java.security.cert.CertificateException: void <init>()>();

        r0.<java.security.cert.CertificateRevokedException: java.util.Date revocationDate> = r1;

        r0.<java.security.cert.CertificateRevokedException: java.security.cert.CRLReason reason> = r2;

        r0.<java.security.cert.CertificateRevokedException: javax.security.auth.x500.X500Principal authority> = r3;

        r0.<java.security.cert.CertificateRevokedException: java.util.Map extensions> = r4;

        return;
    }

    public javax.security.auth.x500.X500Principal getAuthorityName()
    {
        java.security.cert.CertificateRevokedException r0;
        javax.security.auth.x500.X500Principal $r1;

        r0 := @this: java.security.cert.CertificateRevokedException;

        $r1 = r0.<java.security.cert.CertificateRevokedException: javax.security.auth.x500.X500Principal authority>;

        return $r1;
    }

    public java.util.Map getExtensions()
    {
        java.security.cert.CertificateRevokedException r0;
        java.util.Map $r1, $r2;

        r0 := @this: java.security.cert.CertificateRevokedException;

        $r1 = r0.<java.security.cert.CertificateRevokedException: java.util.Map extensions>;

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r2;
    }

    public java.util.Date getInvalidityDate()
    {
        java.security.cert.CertificateRevokedException r0;
        java.security.cert.Extension r1;
        org.apache.harmony.security.x509.InvalidityDate r2, $r6;
        java.util.Map $r3, $r4;
        java.lang.Object $r5;
        byte[] $r7;
        java.util.Date $r8;
        java.io.IOException $r9;

        r0 := @this: java.security.cert.CertificateRevokedException;

        $r3 = r0.<java.security.cert.CertificateRevokedException: java.util.Map extensions>;

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = r0.<java.security.cert.CertificateRevokedException: java.util.Map extensions>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("2.5.29.24");

        r1 = (java.security.cert.Extension) $r5;

        if r1 != null goto label2;

        return null;

     label2:
        $r6 = new org.apache.harmony.security.x509.InvalidityDate;

        $r7 = interfaceinvoke r1.<java.security.cert.Extension: byte[] getValue()>();

        specialinvoke $r6.<org.apache.harmony.security.x509.InvalidityDate: void <init>(byte[])>($r7);

        r2 = $r6;

        $r8 = virtualinvoke r2.<org.apache.harmony.security.x509.InvalidityDate: java.util.Date getDate()>();

     label3:
        return $r8;

     label4:
        $r9 := @caughtexception;

        return null;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public java.lang.String getMessage()
    {
        java.security.cert.CertificateRevokedException r0;
        java.lang.StringBuffer r1, $r2, $r6, $r9;
        java.util.Date $r3, $r10;
        java.security.cert.CRLReason $r4, $r7;
        java.lang.String $r5, $r11;

        r0 := @this: java.security.cert.CertificateRevokedException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(java.lang.String)>("Certificate was revoked");

        r1 = $r2;

        $r3 = r0.<java.security.cert.CertificateRevokedException: java.util.Date revocationDate>;

        if $r3 == null goto label1;

        $r9 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" on ");

        $r10 = r0.<java.security.cert.CertificateRevokedException: java.util.Date revocationDate>;

        $r11 = virtualinvoke $r10.<java.util.Date: java.lang.String toString()>();

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

     label1:
        $r4 = r0.<java.security.cert.CertificateRevokedException: java.security.cert.CRLReason reason>;

        if $r4 == null goto label2;

        $r6 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" due to ");

        $r7 = r0.<java.security.cert.CertificateRevokedException: java.security.cert.CRLReason reason>;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

     label2:
        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public java.util.Date getRevocationDate()
    {
        java.security.cert.CertificateRevokedException r0;
        java.util.Date $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: java.security.cert.CertificateRevokedException;

        $r1 = r0.<java.security.cert.CertificateRevokedException: java.util.Date revocationDate>;

        $r2 = virtualinvoke $r1.<java.util.Date: java.lang.Object clone()>();

        $r3 = (java.util.Date) $r2;

        return $r3;
    }

    public java.security.cert.CRLReason getRevocationReason()
    {
        java.security.cert.CertificateRevokedException r0;
        java.security.cert.CRLReason $r1;

        r0 := @this: java.security.cert.CertificateRevokedException;

        $r1 = r0.<java.security.cert.CertificateRevokedException: java.security.cert.CRLReason reason>;

        return $r1;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.security.cert.CertificateRevokedException r0;
        java.io.ObjectInputStream r1;
        int i0, i1, i2;
        java.lang.String r2;
        boolean z0;
        byte[] r3;
        java.util.HashMap $r4;
        java.lang.Object $r5;
        org.apache.harmony.security.x509.Extension $r6;
        java.util.Map $r7;

        r0 := @this: java.security.cert.CertificateRevokedException;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>(int)>(i0);

        r0.<java.security.cert.CertificateRevokedException: java.util.Map extensions> = $r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r5 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r2 = (java.lang.String) $r5;

        z0 = virtualinvoke r1.<java.io.ObjectInputStream: boolean readBoolean()>();

        i2 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        r3 = newarray (byte)[i2];

        virtualinvoke r1.<java.io.ObjectInputStream: int read(byte[])>(r3);

        $r7 = r0.<java.security.cert.CertificateRevokedException: java.util.Map extensions>;

        $r6 = new org.apache.harmony.security.x509.Extension;

        specialinvoke $r6.<org.apache.harmony.security.x509.Extension: void <init>(java.lang.String,boolean,byte[])>(r2, z0, r3);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.security.cert.CertificateRevokedException r0;
        java.io.ObjectOutputStream r1;
        java.util.Iterator r2;
        java.security.cert.Extension r3;
        byte[] r4;
        java.util.Map $r5, $r6;
        int $i0, $i1;
        java.util.Collection $r7;
        boolean $z0, $z1;
        java.lang.Object $r8;
        java.lang.String $r9;

        r0 := @this: java.security.cert.CertificateRevokedException;

        r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $r5 = r0.<java.security.cert.CertificateRevokedException: java.util.Map extensions>;

        $i0 = interfaceinvoke $r5.<java.util.Map: int size()>();

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i0);

        $r6 = r0.<java.security.cert.CertificateRevokedException: java.util.Map extensions>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Collection values()>();

        r2 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.security.cert.Extension) $r8;

        $r9 = interfaceinvoke r3.<java.security.cert.Extension: java.lang.String getId()>();

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r9);

        $z1 = interfaceinvoke r3.<java.security.cert.Extension: boolean isCritical()>();

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeBoolean(boolean)>($z1);

        r4 = interfaceinvoke r3.<java.security.cert.Extension: byte[] getValue()>();

        $i1 = lengthof r4;

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i1);

        virtualinvoke r1.<java.io.ObjectOutputStream: void write(byte[])>(r4);

        goto label1;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <java.security.cert.CertificateRevokedException: long serialVersionUID> = 7839996631571608627L;

        return;
    }
}
