public class java.util.GregorianCalendar extends java.util.Calendar
{
    private static final long serialVersionUID;
    public static final int BC;
    public static final int AD;
    private static final long defaultGregorianCutover;
    private long gregorianCutover;
    private transient int changeYear;
    private transient int julianSkew;
    static byte[] DaysInMonth;
    private static int[] DaysInYear;
    private static int[] maximums;
    private static int[] minimums;
    private static int[] leastMaximums;
    private int currentYearSkew;
    private int lastYearSkew;

    public void <init>()
    {
        java.util.GregorianCalendar r0;
        java.util.TimeZone $r1;
        java.util.Locale $r2;

        r0 := @this: java.util.GregorianCalendar;

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke r0.<java.util.GregorianCalendar: void <init>(java.util.TimeZone,java.util.Locale)>($r1, $r2);

        return;
    }

    public void <init>(int, int, int)
    {
        java.util.GregorianCalendar r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.util.TimeZone $r1;
        java.util.Locale $r2;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke r0.<java.util.Calendar: void <init>(java.util.TimeZone,java.util.Locale)>($r1, $r2);

        r0.<java.util.GregorianCalendar: long gregorianCutover> = -12219292800000L;

        r0.<java.util.GregorianCalendar: int changeYear> = 1582;

        $i3 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i4 = $i3 - 2000;

        $i5 = $i4 / 400;

        $i6 = specialinvoke r0.<java.util.GregorianCalendar: int julianError()>();

        $i10 = $i5 + $i6;

        $i7 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i8 = $i7 - 2000;

        $i9 = $i8 / 100;

        $i11 = $i10 - $i9;

        r0.<java.util.GregorianCalendar: int julianSkew> = $i11;

        r0.<java.util.GregorianCalendar: int currentYearSkew> = 10;

        r0.<java.util.GregorianCalendar: int lastYearSkew> = 0;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int,int)>(i0, i1, i2);

        return;
    }

    public void <init>(int, int, int, int, int)
    {
        java.util.GregorianCalendar r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.util.TimeZone $r1;
        java.util.Locale $r2;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke r0.<java.util.Calendar: void <init>(java.util.TimeZone,java.util.Locale)>($r1, $r2);

        r0.<java.util.GregorianCalendar: long gregorianCutover> = -12219292800000L;

        r0.<java.util.GregorianCalendar: int changeYear> = 1582;

        $i5 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i6 = $i5 - 2000;

        $i7 = $i6 / 400;

        $i8 = specialinvoke r0.<java.util.GregorianCalendar: int julianError()>();

        $i12 = $i7 + $i8;

        $i9 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i10 = $i9 - 2000;

        $i11 = $i10 / 100;

        $i13 = $i12 - $i11;

        r0.<java.util.GregorianCalendar: int julianSkew> = $i13;

        r0.<java.util.GregorianCalendar: int currentYearSkew> = 10;

        r0.<java.util.GregorianCalendar: int lastYearSkew> = 0;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int,int,int,int)>(i0, i1, i2, i3, i4);

        return;
    }

    public void <init>(int, int, int, int, int, int)
    {
        java.util.GregorianCalendar r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.util.TimeZone $r1;
        java.util.Locale $r2;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke r0.<java.util.Calendar: void <init>(java.util.TimeZone,java.util.Locale)>($r1, $r2);

        r0.<java.util.GregorianCalendar: long gregorianCutover> = -12219292800000L;

        r0.<java.util.GregorianCalendar: int changeYear> = 1582;

        $i6 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i7 = $i6 - 2000;

        $i8 = $i7 / 400;

        $i9 = specialinvoke r0.<java.util.GregorianCalendar: int julianError()>();

        $i14 = $i8 + $i9;

        $i10 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i11 = $i10 - 2000;

        $i12 = $i11 / 100;

        $i13 = $i14 - $i12;

        r0.<java.util.GregorianCalendar: int julianSkew> = $i13;

        r0.<java.util.GregorianCalendar: int currentYearSkew> = 10;

        r0.<java.util.GregorianCalendar: int lastYearSkew> = 0;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int,int,int,int,int)>(i0, i1, i2, i3, i4, i5);

        return;
    }

    void <init>(long)
    {
        java.util.GregorianCalendar r0;
        long l0;

        r0 := @this: java.util.GregorianCalendar;

        l0 := @parameter0: long;

        specialinvoke r0.<java.util.GregorianCalendar: void <init>(boolean)>(0);

        virtualinvoke r0.<java.util.GregorianCalendar: void setTimeInMillis(long)>(l0);

        return;
    }

    public void <init>(java.util.Locale)
    {
        java.util.GregorianCalendar r0;
        java.util.Locale r1;
        java.util.TimeZone $r2;

        r0 := @this: java.util.GregorianCalendar;

        r1 := @parameter0: java.util.Locale;

        $r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        specialinvoke r0.<java.util.GregorianCalendar: void <init>(java.util.TimeZone,java.util.Locale)>($r2, r1);

        return;
    }

    public void <init>(java.util.TimeZone)
    {
        java.util.GregorianCalendar r0;
        java.util.TimeZone r1;
        java.util.Locale $r2;

        r0 := @this: java.util.GregorianCalendar;

        r1 := @parameter0: java.util.TimeZone;

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke r0.<java.util.GregorianCalendar: void <init>(java.util.TimeZone,java.util.Locale)>(r1, $r2);

        return;
    }

    public void <init>(java.util.TimeZone, java.util.Locale)
    {
        java.util.GregorianCalendar r0;
        java.util.TimeZone r1;
        java.util.Locale r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        long $l9;

        r0 := @this: java.util.GregorianCalendar;

        r1 := @parameter0: java.util.TimeZone;

        r2 := @parameter1: java.util.Locale;

        specialinvoke r0.<java.util.Calendar: void <init>(java.util.TimeZone,java.util.Locale)>(r1, r2);

        r0.<java.util.GregorianCalendar: long gregorianCutover> = -12219292800000L;

        r0.<java.util.GregorianCalendar: int changeYear> = 1582;

        $i0 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i1 = $i0 - 2000;

        $i2 = $i1 / 400;

        $i3 = specialinvoke r0.<java.util.GregorianCalendar: int julianError()>();

        $i7 = $i2 + $i3;

        $i4 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i5 = $i4 - 2000;

        $i6 = $i5 / 100;

        $i8 = $i7 - $i6;

        r0.<java.util.GregorianCalendar: int julianSkew> = $i8;

        r0.<java.util.GregorianCalendar: int currentYearSkew> = 10;

        r0.<java.util.GregorianCalendar: int lastYearSkew> = 0;

        $l9 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r0.<java.util.GregorianCalendar: void setTimeInMillis(long)>($l9);

        return;
    }

    public void <init>(boolean)
    {
        java.util.GregorianCalendar r0;
        boolean z0;
        java.util.TimeZone $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: java.util.GregorianCalendar;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        specialinvoke r0.<java.util.Calendar: void <init>(java.util.TimeZone)>($r1);

        r0.<java.util.GregorianCalendar: long gregorianCutover> = -12219292800000L;

        r0.<java.util.GregorianCalendar: int changeYear> = 1582;

        $i0 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i1 = $i0 - 2000;

        $i2 = $i1 / 400;

        $i3 = specialinvoke r0.<java.util.GregorianCalendar: int julianError()>();

        $i7 = $i2 + $i3;

        $i4 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i5 = $i4 - 2000;

        $i6 = $i5 / 100;

        $i8 = $i7 - $i6;

        r0.<java.util.GregorianCalendar: int julianSkew> = $i8;

        r0.<java.util.GregorianCalendar: int currentYearSkew> = 10;

        r0.<java.util.GregorianCalendar: int lastYearSkew> = 0;

        virtualinvoke r0.<java.util.GregorianCalendar: void setFirstDayOfWeek(int)>(1);

        virtualinvoke r0.<java.util.GregorianCalendar: void setMinimalDaysInFirstWeek(int)>(1);

        return;
    }

    public void add(int, int)
    {
        java.util.GregorianCalendar r0;
        int i0, i1, i2, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i33, $i49, i53;
        long l3, $l17, $l19, $l20, $l22, $l23, $l24, $l25, $l26, $l27, $l28, $l29, $l30, $l31, $l32, $l34, $l35, $l36, $l37, $l38, $l39, $l40, $l41, $l42, $l43, $l44, $l45, $l46, $l47, $l48, $l50, $l51, $l52, l54;
        java.lang.IllegalArgumentException $r1;
        int[] $r2, $r3, $r4, $r5, $r6, $r8;
        boolean $z0;
        java.util.TimeZone $r7;
        byte $b21;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 != 0 goto label01;

        return;

     label01:
        if i0 < 0 goto label02;

        if i0 < 15 goto label03;

     label02:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label03:
        if i0 != 0 goto label08;

        virtualinvoke r0.<java.util.GregorianCalendar: void complete()>();

        $r8 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i49 = $r8[0];

        if $i49 != 1 goto label05;

        if i1 < 0 goto label04;

        return;

     label04:
        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(0, 0);

        goto label07;

     label05:
        if i1 > 0 goto label06;

        return;

     label06:
        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(0, 1);

     label07:
        virtualinvoke r0.<java.util.GregorianCalendar: void complete()>();

        return;

     label08:
        if i0 == 1 goto label09;

        if i0 != 2 goto label14;

     label09:
        virtualinvoke r0.<java.util.GregorianCalendar: void complete()>();

        if i0 != 2 goto label12;

        $r6 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i14 = $r6[2];

        i2 = $i14 + i1;

        if i2 >= 0 goto label10;

        $i16 = i2 - 11;

        i1 = $i16 / 12;

        $i15 = i2 % 12;

        i2 = 12 + $i15;

        goto label11;

     label10:
        i1 = i2 / 12;

     label11:
        $i13 = i2 % 12;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(2, $i13);

     label12:
        $r2 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i8 = $r2[1];

        $i9 = $i8 + i1;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(1, $i9);

        $r3 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i10 = $r3[1];

        $z0 = virtualinvoke r0.<java.util.GregorianCalendar: boolean isLeapYear(int)>($i10);

        $r4 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i11 = $r4[2];

        i53 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth(boolean,int)>($z0, $i11);

        $r5 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i12 = $r5[5];

        if $i12 <= i53 goto label13;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(5, i53);

     label13:
        virtualinvoke r0.<java.util.GregorianCalendar: void complete()>();

        return;

     label14:
        l54 = 0L;

        virtualinvoke r0.<java.util.GregorianCalendar: long getTimeInMillis()>();

        tableswitch(i0)
        {
            case 3: goto label21;
            case 4: goto label21;
            case 5: goto label20;
            case 6: goto label20;
            case 7: goto label20;
            case 8: goto label21;
            case 9: goto label19;
            case 10: goto label18;
            case 11: goto label18;
            case 12: goto label17;
            case 13: goto label16;
            case 14: goto label15;
            default: goto label22;
        };

     label15:
        $l20 = r0.<java.util.GregorianCalendar: long time>;

        $l17 = (long) i1;

        $l19 = $l20 + $l17;

        r0.<java.util.GregorianCalendar: long time> = $l19;

        goto label22;

     label16:
        $l43 = r0.<java.util.GregorianCalendar: long time>;

        $l37 = (long) i1;

        $l44 = $l37 * 1000L;

        $l42 = $l43 + $l44;

        r0.<java.util.GregorianCalendar: long time> = $l42;

        goto label22;

     label17:
        $l47 = r0.<java.util.GregorianCalendar: long time>;

        $l41 = (long) i1;

        $l48 = $l41 * 60000L;

        $l46 = $l47 + $l48;

        r0.<java.util.GregorianCalendar: long time> = $l46;

        goto label22;

     label18:
        $l51 = r0.<java.util.GregorianCalendar: long time>;

        $l45 = (long) i1;

        $l50 = $l45 * 3600000L;

        $l52 = $l51 + $l50;

        r0.<java.util.GregorianCalendar: long time> = $l52;

        goto label22;

     label19:
        l54 = 43200000L;

        goto label22;

     label20:
        l54 = 86400000L;

        goto label22;

     label21:
        l54 = 604800000L;

     label22:
        $b21 = l54 cmp 0L;

        if $b21 != 0 goto label23;

        r0.<java.util.GregorianCalendar: boolean areFieldsSet> = 0;

        virtualinvoke r0.<java.util.GregorianCalendar: void complete()>();

        return;

     label23:
        $l22 = (long) i1;

        l3 = $l22 * l54;

        $r7 = virtualinvoke r0.<java.util.GregorianCalendar: java.util.TimeZone getTimeZone()>();

        i4 = virtualinvoke $r7.<java.util.TimeZone: int getRawOffset()>();

        $l25 = r0.<java.util.GregorianCalendar: long time>;

        $l24 = (long) i4;

        $l23 = $l25 + $l24;

        i5 = specialinvoke r0.<java.util.GregorianCalendar: int getOffset(long)>($l23);

        $l29 = r0.<java.util.GregorianCalendar: long time>;

        $l28 = (long) i4;

        $l26 = $l29 + $l28;

        $l27 = $l26 + l3;

        i6 = specialinvoke r0.<java.util.GregorianCalendar: int getOffset(long)>($l27);

        i7 = i5 - i6;

        $l30 = r0.<java.util.GregorianCalendar: long time>;

        $l32 = (long) i4;

        $l31 = $l30 + $l32;

        $l35 = $l31 + l3;

        $l36 = (long) i7;

        $l34 = $l35 + $l36;

        $i33 = specialinvoke r0.<java.util.GregorianCalendar: int getOffset(long)>($l34);

        if $i33 != i6 goto label24;

        $l38 = (long) i7;

        l3 = l3 + $l38;

     label24:
        $l40 = r0.<java.util.GregorianCalendar: long time>;

        $l39 = $l40 + l3;

        r0.<java.util.GregorianCalendar: long time> = $l39;

        r0.<java.util.GregorianCalendar: boolean areFieldsSet> = 0;

        virtualinvoke r0.<java.util.GregorianCalendar: void complete()>();

        return;
    }

    private void fullFieldsCalc()
    {
        java.util.GregorianCalendar r0;
        int i0, i2, i3, i4, i5, i7, $i11, $i12, $i16, $i17, $i18, $i19, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i40, $i42, $i43, $i46, $i47, $i48, $i49, $i50, $i52, $i53, $i55, $i59, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i72, $i74, $i75, $i76, $i77, $i82, $i83, $i88, $i89, $i90, $i93, $i94, $i95, $i97, $i99, $i100, $i101, $i104, $i110, $i111, $i117, $i118, $i119, $i120, $i126, $i127, $i130, $i131, $i132, i133, i134, i135, i136, i137, i138;
        long l1, l6, $l8, $l9, $l10, $l13, $l14, $l15, $l20, $l39, $l41, $l44, $l45, $l51, $l54, $l56, $l57, $l58, $l60, $l73, $l80, $l92, $l98, $l105, $l106, $l107, $l108, $l109, $l112, $l113, $l114, $l115, $l116, $l121, $l122, $l123, $l124, $l128;
        boolean z0, $z1;
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44;
        java.util.TimeZone $r7;
        short $s71;
        byte $b84, $b85, $b86, $b87, $b96, $b102, $b103, $b125, $b129;

        r0 := @this: java.util.GregorianCalendar;

        $l8 = r0.<java.util.GregorianCalendar: long time>;

        $l9 = $l8 % 86400000L;

        i0 = (int) $l9;

        $l10 = r0.<java.util.GregorianCalendar: long time>;

        l1 = $l10 / 86400000L;

        if i0 >= 0 goto label01;

        i0 = i0 + 86400000;

        l1 = l1 - 1L;

     label01:
        $r1 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i11 = $r1[15];

        i133 = i0 + $i11;

     label02:
        if i133 >= 0 goto label03;

        i133 = i133 + 86400000;

        l1 = l1 - 1L;

        goto label02;

     label03:
        if i133 < 86400000 goto label04;

        i133 = i133 - 86400000;

        l1 = l1 + 1L;

        goto label03;

     label04:
        $l13 = r0.<java.util.GregorianCalendar: long time>;

        $r2 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i12 = $r2[15];

        $l14 = (long) $i12;

        $l15 = $l13 + $l14;

        i2 = specialinvoke r0.<java.util.GregorianCalendar: int computeYearAndDay(long,long)>(l1, $l15);

        $r4 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r4[6] = i2;

        $r3 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i16 = $r3[1];

        $i17 = r0.<java.util.GregorianCalendar: int changeYear>;

        if $i16 != $i17 goto label05;

        $l122 = r0.<java.util.GregorianCalendar: long gregorianCutover>;

        $l124 = r0.<java.util.GregorianCalendar: long time>;

        $r44 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i130 = $r44[15];

        $l123 = (long) $i130;

        $l121 = $l124 + $l123;

        $b125 = $l122 cmp $l121;

        if $b125 > 0 goto label05;

        $i126 = r0.<java.util.GregorianCalendar: int currentYearSkew>;

        i2 = i2 + $i126;

     label05:
        i3 = i2 / 32;

        $r5 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i18 = $r5[1];

        z0 = virtualinvoke r0.<java.util.GregorianCalendar: boolean isLeapYear(int)>($i18);

        $i19 = specialinvoke r0.<java.util.GregorianCalendar: int daysInYear(boolean,int)>(z0, i3);

        i4 = i2 - $i19;

        $i21 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth(boolean,int)>(z0, i3);

        if i4 <= $i21 goto label06;

        $i132 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth(boolean,int)>(z0, i3);

        i4 = i4 - $i132;

        i3 = i3 + 1;

     label06:
        $r6 = r0.<java.util.GregorianCalendar: int[] fields>;

        $l20 = l1 - 3L;

        $i22 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l20);

        $i23 = $i22 + 1;

        $r6[7] = $i23;

        $r9 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i24 = $r9[1];

        if $i24 > 0 goto label07;

        $i26 = 0;

        goto label08;

     label07:
        $r7 = virtualinvoke r0.<java.util.GregorianCalendar: java.util.TimeZone getTimeZone()>();

        $r8 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i25 = $r8[1];

        $r10 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i27 = $r10[7];

        $i26 = virtualinvoke $r7.<java.util.TimeZone: int getOffset(int,int,int,int,int,int)>(1, $i25, i3, i4, $i27, i133);

     label08:
        i5 = $i26;

        $r12 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i29 = $r12[1];

        if $i29 <= 0 goto label09;

        $r43 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i131 = $r43[15];

        i5 = i5 - $i131;

     label09:
        $r11 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r11[16] = i5;

        if i5 == 0 goto label14;

        l6 = l1;

        i133 = i133 + i5;

        if i133 >= 0 goto label10;

        i133 = i133 + 86400000;

        l1 = l1 - 1L;

        goto label11;

     label10:
        if i133 < 86400000 goto label11;

        i133 = i133 - 86400000;

        l1 = l1 + 1L;

     label11:
        $b103 = l6 cmp l1;

        if $b103 == 0 goto label14;

        $l106 = r0.<java.util.GregorianCalendar: long time>;

        $r40 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i104 = $r40[15];

        $l105 = (long) $i104;

        $l108 = $l106 - $l105;

        $l107 = (long) i5;

        $l98 = $l108 + $l107;

        i134 = specialinvoke r0.<java.util.GregorianCalendar: int computeYearAndDay(long,long)>(l1, $l98);

        $r37 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r37[6] = i134;

        $r38 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i100 = $r38[1];

        $i99 = r0.<java.util.GregorianCalendar: int changeYear>;

        if $i100 != $i99 goto label12;

        $l128 = r0.<java.util.GregorianCalendar: long gregorianCutover>;

        $l115 = r0.<java.util.GregorianCalendar: long time>;

        $r41 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i110 = $r41[15];

        $l109 = (long) $i110;

        $l113 = $l115 - $l109;

        $l114 = (long) i5;

        $l112 = $l113 + $l114;

        $b129 = $l128 cmp $l112;

        if $b129 > 0 goto label12;

        $i127 = r0.<java.util.GregorianCalendar: int currentYearSkew>;

        i134 = i134 + $i127;

     label12:
        i3 = i134 / 32;

        $r39 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i101 = $r39[1];

        z0 = virtualinvoke r0.<java.util.GregorianCalendar: boolean isLeapYear(int)>($i101);

        $i118 = specialinvoke r0.<java.util.GregorianCalendar: int daysInYear(boolean,int)>(z0, i3);

        i4 = i134 - $i118;

        $i117 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth(boolean,int)>(z0, i3);

        if i4 <= $i117 goto label13;

        $i111 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth(boolean,int)>(z0, i3);

        i4 = i4 - $i111;

        i3 = i3 + 1;

     label13:
        $r42 = r0.<java.util.GregorianCalendar: int[] fields>;

        $l116 = l1 - 3L;

        $i120 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l116);

        $i119 = $i120 + 1;

        $r42[7] = $i119;

     label14:
        $r14 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i28 = i133 % 1000;

        $r14[14] = $i28;

        i135 = i133 / 1000;

        $r13 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i31 = i135 % 60;

        $r13[13] = $i31;

        i136 = i135 / 60;

        $r17 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i30 = i136 % 60;

        $r17[12] = $i30;

        i137 = i136 / 60;

        $r16 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i32 = i137 % 24;

        $r16[11] = $i32;

        $r19 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r15 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i34 = $r15[11];

        if $i34 <= 11 goto label15;

        $b102 = 1;

        goto label16;

     label15:
        $b102 = 0;

     label16:
        $r19[9] = $b102;

        $r21 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r18 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i33 = $r18[11];

        $i36 = $i33 % 12;

        $r21[10] = $i36;

        $r20 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i35 = $r20[1];

        if $i35 > 0 goto label17;

        $r35 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r35[0] = 0;

        $r36 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r34 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i89 = $r34[1];

        $i88 = neg $i89;

        $i90 = $i88 + 1;

        $r36[1] = $i90;

        goto label18;

     label17:
        $r23 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r23[0] = 1;

     label18:
        $r24 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r24[2] = i3;

        $r25 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r25[5] = i4;

        $r22 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i40 = i4 - 1;

        $i37 = $i40 / 7;

        $i38 = $i37 + 1;

        $r22[8] = $i38;

        $r26 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i46 = i4 - 1;

        $l39 = (long) i4;

        $l45 = l1 - $l39;

        $l41 = $l45 - 2L;

        $i42 = virtualinvoke r0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        $i43 = $i42 - 1;

        $l44 = (long) $i43;

        $l51 = $l41 - $l44;

        $i50 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l51);

        $i53 = $i46 + $i50;

        $i52 = $i53 / 7;

        $i47 = $i52 + 1;

        $r26[4] = $i47;

        $l57 = l1 - 3L;

        $r27 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i49 = $r27[6];

        $i48 = $i49 - 1;

        $l58 = (long) $i48;

        $l60 = $l57 - $l58;

        $i59 = virtualinvoke r0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        $i55 = $i59 - 1;

        $l54 = (long) $i55;

        $l56 = $l60 - $l54;

        i138 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l56);

        $r29 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i66 = $r29[6];

        $i64 = $i66 - 1;

        $i65 = $i64 + i138;

        $i62 = $i65 / 7;

        $i63 = 7 - i138;

        $i61 = virtualinvoke r0.<java.util.GregorianCalendar: int getMinimalDaysInFirstWeek()>();

        if $i63 < $i61 goto label19;

        $b86 = 1;

        goto label20;

     label19:
        $b86 = 0;

     label20:
        i7 = $i62 + $b86;

        if i7 != 0 goto label25;

        $r32 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r33 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i83 = $r33[1];

        $i82 = $i83 - 1;

        $z1 = virtualinvoke r0.<java.util.GregorianCalendar: boolean isLeapYear(int)>($i82);

        if $z1 == 0 goto label21;

        $b87 = 2;

        goto label22;

     label21:
        $b87 = 1;

     label22:
        $i93 = i138 - $b87;

        $l92 = (long) $i93;

        $i95 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l92);

        $i94 = 7 - $i95;

        $i97 = virtualinvoke r0.<java.util.GregorianCalendar: int getMinimalDaysInFirstWeek()>();

        if $i94 < $i97 goto label23;

        $b96 = 53;

        goto label24;

     label23:
        $b96 = 52;

     label24:
        $r32[3] = $b96;

        goto label35;

     label25:
        $r28 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i70 = $r28[6];

        if z0 == 0 goto label26;

        $s71 = 367;

        goto label27;

     label26:
        $s71 = 366;

     label27:
        if z0 == 0 goto label28;

        $b84 = 2;

        goto label29;

     label28:
        $b84 = 1;

     label29:
        $i72 = i138 + $b84;

        $l73 = (long) $i72;

        $i68 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l73);

        $i69 = $s71 - $i68;

        if $i70 < $i69 goto label34;

        $r31 = r0.<java.util.GregorianCalendar: int[] fields>;

        if z0 == 0 goto label30;

        $b85 = 2;

        goto label31;

     label30:
        $b85 = 1;

     label31:
        $i67 = i138 + $b85;

        $l80 = (long) $i67;

        $i77 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l80);

        $i76 = 7 - $i77;

        $i75 = virtualinvoke r0.<java.util.GregorianCalendar: int getMinimalDaysInFirstWeek()>();

        if $i76 < $i75 goto label32;

        $i74 = 1;

        goto label33;

     label32:
        $i74 = i7;

     label33:
        $r31[3] = $i74;

        goto label35;

     label34:
        $r30 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r30[3] = i7;

     label35:
        return;
    }

    protected void computeFields()
    {
        java.util.GregorianCalendar r0;
        java.util.TimeZone r1;
        int i0, i1, i2, $i4;
        java.util.Date $r2;
        long $l3;
        boolean $z0;
        int[] $r3, $r4;
        boolean[] $r5;

        r0 := @this: java.util.GregorianCalendar;

        r1 = virtualinvoke r0.<java.util.GregorianCalendar: java.util.TimeZone getTimeZone()>();

        $r2 = new java.util.Date;

        $l3 = r0.<java.util.GregorianCalendar: long time>;

        specialinvoke $r2.<java.util.Date: void <init>(long)>($l3);

        $z0 = virtualinvoke r1.<java.util.TimeZone: boolean inDaylightTime(java.util.Date)>($r2);

        if $z0 == 0 goto label1;

        $i4 = virtualinvoke r1.<java.util.TimeZone: int getDSTSavings()>();

        goto label2;

     label1:
        $i4 = 0;

     label2:
        i0 = $i4;

        i1 = virtualinvoke r1.<java.util.TimeZone: int getRawOffset()>();

        $r3 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r3[16] = i0;

        $r4 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r4[15] = i1;

        specialinvoke r0.<java.util.GregorianCalendar: void fullFieldsCalc()>();

        i2 = 0;

     label3:
        if i2 >= 17 goto label4;

        $r5 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $r5[i2] = 1;

        i2 = i2 + 1;

        goto label3;

     label4:
        return;
    }

    protected void computeTime()
    {
        java.util.GregorianCalendar r0;
        long l0, l1, l2, $l8, $l9, $l10, $l11, $l15, $l18, $l20, $l22, $l23, $l24, $l25, $l26, $l28, $l30, $l33, $l34, $l38, $l44, $l47, $l48, $l52, $l54, $l55, $l62, $l63, $l64, $l68, $l70, $l71, $l73, $l74, $l78, $l79, $l81, $l82, $l83, $l84, $l88, $l90, $l93, $l100, $l102, $l103, $l104, $l108, $l109, $l110, $l112, $l113, $l115, $l118, $l120, $l130, $l143, $l144, $l146, $l147, $l150, l189, l190, l191;
        int i3, i4, i5, i6, $i7, $i12, $i13, $i14, $i16, $i17, $i27, $i29, $i31, $i32, $i35, $i36, $i37, $i40, $i42, $i43, $i45, $i46, $i49, $i50, $i51, $i53, $i56, $i57, $i58, $i59, $i60, $i61, $i65, $i66, $i67, $i69, $i72, $i75, $i76, $i77, $i80, $i85, $i86, $i87, $i89, $i91, $i92, $i94, $i95, $i96, $i97, $i98, $i99, $i101, $i105, $i106, $i107, $i111, $i114, $i116, $i117, $i119, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i145, $i148, $i149, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, i185, i186, i187, i188;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48, $z49, $z50, $z51, $z52, z53;
        boolean[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r19, $r21, $r24, $r25, $r26, $r27, $r28, $r29, $r34, $r40, $r41, $r42, $r43, $r44, $r50, $r51, $r57, $r58, $r59, $r60, $r61, $r62, $r64, $r66, $r67, $r68, $r69, $r70, $r71, $r84;
        java.util.TimeZone $r13;
        byte $b19, $b21, $b39;
        int[] $r14, $r15, $r17, $r18, $r20, $r22, $r23, $r30, $r31, $r32, $r33, $r36, $r37, $r38, $r39, $r45, $r47, $r48, $r49, $r52, $r53, $r54, $r55, $r56, $r63, $r65, $r72, $r73, $r74, $r76, $r77, $r79, $r80, $r83, $r85, $r87, $r88, $r89, $r92, $r93, $r95, $r96, $r97, $r99, $r100, $r101, $r102, $r104, $r105, $r107, $r109, $r110, $r112, $r114;
        java.lang.IllegalArgumentException $r16, $r35, $r46, $r75, $r78, $r81, $r82, $r86, $r90, $r91, $r94, $r98, $r103, $r106, $r108, $r111, $r113;

        r0 := @this: java.util.GregorianCalendar;

        $z4 = virtualinvoke r0.<java.util.GregorianCalendar: boolean isLenient()>();

        if $z4 != 0 goto label27;

        $r67 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z47 = $r67[11];

        if $z47 == 0 goto label02;

        $r110 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i181 = $r110[11];

        if $i181 < 0 goto label01;

        $r112 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i184 = $r112[11];

        if $i184 <= 23 goto label04;

     label01:
        $r111 = new java.lang.IllegalArgumentException;

        specialinvoke $r111.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r111;

     label02:
        $r66 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z49 = $r66[10];

        if $z49 == 0 goto label04;

        $r96 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i182 = $r96[10];

        if $i182 < 0 goto label03;

        $r114 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i183 = $r114[10];

        if $i183 <= 11 goto label04;

     label03:
        $r113 = new java.lang.IllegalArgumentException;

        specialinvoke $r113.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r113;

     label04:
        $r69 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z48 = $r69[12];

        if $z48 == 0 goto label06;

        $r99 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i172 = $r99[12];

        if $i172 < 0 goto label05;

        $r97 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i171 = $r97[12];

        if $i171 <= 59 goto label06;

     label05:
        $r98 = new java.lang.IllegalArgumentException;

        specialinvoke $r98.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r98;

     label06:
        $r68 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z51 = $r68[13];

        if $z51 == 0 goto label08;

        $r92 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i168 = $r92[13];

        if $i168 < 0 goto label07;

        $r100 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i173 = $r100[13];

        if $i173 <= 59 goto label08;

     label07:
        $r91 = new java.lang.IllegalArgumentException;

        specialinvoke $r91.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r91;

     label08:
        $r71 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z50 = $r71[14];

        if $z50 == 0 goto label10;

        $r95 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i170 = $r95[14];

        if $i170 < 0 goto label09;

        $r93 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i169 = $r93[14];

        if $i169 <= 999 goto label10;

     label09:
        $r94 = new java.lang.IllegalArgumentException;

        specialinvoke $r94.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r94;

     label10:
        $r70 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z40 = $r70[3];

        if $z40 == 0 goto label12;

        $r107 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i179 = $r107[3];

        if $i179 < 1 goto label11;

        $r105 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i178 = $r105[3];

        if $i178 <= 53 goto label12;

     label11:
        $r106 = new java.lang.IllegalArgumentException;

        specialinvoke $r106.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r106;

     label12:
        $r58 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z39 = $r58[7];

        if $z39 == 0 goto label14;

        $r101 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i174 = $r101[7];

        if $i174 < 1 goto label13;

        $r109 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i180 = $r109[7];

        if $i180 <= 7 goto label14;

     label13:
        $r108 = new java.lang.IllegalArgumentException;

        specialinvoke $r108.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r108;

     label14:
        $r57 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z42 = $r57[8];

        if $z42 == 0 goto label16;

        $r104 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i176 = $r104[8];

        if $i176 < 1 goto label15;

        $r102 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i175 = $r102[8];

        if $i175 <= 6 goto label16;

     label15:
        $r103 = new java.lang.IllegalArgumentException;

        specialinvoke $r103.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r103;

     label16:
        $r60 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z41 = $r60[4];

        if $z41 == 0 goto label18;

        $r79 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i161 = $r79[4];

        if $i161 < 1 goto label17;

        $r80 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i177 = $r80[4];

        if $i177 <= 6 goto label18;

     label17:
        $r81 = new java.lang.IllegalArgumentException;

        specialinvoke $r81.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r81;

     label18:
        $r59 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z44 = $r59[9];

        if $z44 == 0 goto label19;

        $r76 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i159 = $r76[9];

        if $i159 == 0 goto label19;

        $r77 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i160 = $r77[9];

        if $i160 == 1 goto label19;

        $r78 = new java.lang.IllegalArgumentException;

        specialinvoke $r78.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r78;

     label19:
        $r62 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z43 = $r62[10];

        if $z43 == 0 goto label21;

        $r73 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i157 = $r73[10];

        if $i157 < 0 goto label20;

        $r74 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i158 = $r74[10];

        if $i158 <= 11 goto label21;

     label20:
        $r75 = new java.lang.IllegalArgumentException;

        specialinvoke $r75.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r75;

     label21:
        $r61 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z46 = $r61[1];

        if $z46 == 0 goto label25;

        $r84 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z52 = $r84[0];

        if $z52 == 0 goto label23;

        $r88 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i166 = $r88[0];

        if $i166 != 0 goto label23;

        $r89 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i167 = $r89[1];

        if $i167 < 1 goto label22;

        $r72 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i156 = $r72[1];

        if $i156 <= 292269054 goto label23;

     label22:
        $r90 = new java.lang.IllegalArgumentException;

        specialinvoke $r90.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r90;

     label23:
        $r85 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i164 = $r85[1];

        if $i164 < 1 goto label24;

        $r87 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i165 = $r87[1];

        if $i165 <= 292278994 goto label25;

     label24:
        $r86 = new java.lang.IllegalArgumentException;

        specialinvoke $r86.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r86;

     label25:
        $r64 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z45 = $r64[2];

        if $z45 == 0 goto label27;

        $r63 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i162 = $r63[2];

        if $i162 < 0 goto label26;

        $r83 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i163 = $r83[2];

        if $i163 <= 11 goto label27;

     label26:
        $r82 = new java.lang.IllegalArgumentException;

        specialinvoke $r82.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r82;

     label27:
        l1 = 0L;

        $r1 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z5 = $r1[11];

        if $z5 == 0 goto label28;

        $i152 = r0.<java.util.GregorianCalendar: int lastTimeFieldSet>;

        if $i152 == 10 goto label28;

        $r65 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i155 = $r65[11];

        l1 = (long) $i155;

        goto label29;

     label28:
        $r2 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z6 = $r2[10];

        if $z6 == 0 goto label29;

        $r53 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i142 = $r53[9];

        $i153 = $i142 * 12;

        $r52 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i141 = $r52[10];

        $i154 = $i153 + $i141;

        l1 = (long) $i154;

     label29:
        l0 = l1 * 3600000L;

        $r3 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z7 = $r3[12];

        if $z7 == 0 goto label30;

        $r54 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i145 = $r54[12];

        $l143 = (long) $i145;

        $l144 = $l143 * 60000L;

        l0 = l0 + $l144;

     label30:
        $r4 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z8 = $r4[13];

        if $z8 == 0 goto label31;

        $r55 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i148 = $r55[13];

        $l146 = (long) $i148;

        $l147 = $l146 * 1000L;

        l0 = l0 + $l147;

     label31:
        $r5 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z9 = $r5[14];

        if $z9 == 0 goto label32;

        $r56 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i149 = $r56[14];

        $l150 = (long) $i149;

        l0 = l0 + $l150;

     label32:
        $r6 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z10 = $r6[1];

        if $z10 == 0 goto label33;

        $r45 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i151 = $r45[1];

        goto label34;

     label33:
        $i151 = 1970;

     label34:
        i3 = $i151;

        $r7 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z11 = $r7[0];

        if $z11 == 0 goto label36;

        $r49 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i138 = $r49[0];

        if $i138 == 0 goto label35;

        $r47 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i136 = $r47[0];

        if $i136 == 1 goto label35;

        $r46 = new java.lang.IllegalArgumentException;

        specialinvoke $r46.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r46;

     label35:
        $r48 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i137 = $r48[0];

        if $i137 != 0 goto label36;

        i3 = 1 - i3;

     label36:
        $r8 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z12 = $r8[4];

        if $z12 != 0 goto label37;

        $r50 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z36 = $r50[8];

        if $z36 == 0 goto label38;

     label37:
        $z35 = 1;

        goto label39;

     label38:
        $z35 = 0;

     label39:
        z0 = $z35;

        $r10 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z13 = $r10[5];

        if $z13 != 0 goto label40;

        $r51 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z37 = $r51[2];

        if $z37 != 0 goto label40;

        if z0 == 0 goto label41;

     label40:
        $i7 = r0.<java.util.GregorianCalendar: int lastDateFieldSet>;

        if $i7 == 6 goto label41;

        $z38 = 1;

        goto label42;

     label41:
        $z38 = 0;

     label42:
        z1 = $z38;

        if z1 == 0 goto label48;

        $i135 = r0.<java.util.GregorianCalendar: int lastDateFieldSet>;

        if $i135 == 7 goto label43;

        $i139 = r0.<java.util.GregorianCalendar: int lastDateFieldSet>;

        if $i139 != 3 goto label48;

     label43:
        $r43 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z32 = $r43[3];

        if $z32 == 0 goto label45;

        $r40 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z29 = $r40[7];

        if $z29 == 0 goto label45;

        $i132 = r0.<java.util.GregorianCalendar: int lastDateFieldSet>;

        if $i132 != 3 goto label44;

        z1 = 0;

        goto label48;

     label44:
        $i140 = r0.<java.util.GregorianCalendar: int lastDateFieldSet>;

        if $i140 != 7 goto label48;

        z1 = z0;

        goto label48;

     label45:
        $r44 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z33 = $r44[6];

        if $z33 == 0 goto label48;

        $r41 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z30 = $r41[5];

        if $z30 == 0 goto label46;

        $r42 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z31 = $r42[2];

        if $z31 == 0 goto label46;

        $z28 = 1;

        goto label47;

     label46:
        $z28 = 0;

     label47:
        z1 = $z28;

     label48:
        if z1 == 0 goto label64;

        $r23 = r0.<java.util.GregorianCalendar: int[] fields>;

        i4 = $r23[2];

        $i65 = i4 / 12;

        i3 = i3 + $i65;

        i185 = i4 % 12;

        if i185 >= 0 goto label49;

        i3 = i3 + -1;

        i185 = i185 + 12;

     label49:
        z2 = virtualinvoke r0.<java.util.GregorianCalendar: boolean isLeapYear(int)>(i3);

        $l64 = (long) i3;

        $l63 = specialinvoke r0.<java.util.GregorianCalendar: long daysFromBaseYear(long)>($l64);

        $i69 = specialinvoke r0.<java.util.GregorianCalendar: int daysInYear(boolean,int)>(z2, i185);

        $l68 = (long) $i69;

        l2 = $l63 + $l68;

        $r27 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        z3 = $r27[5];

        if z3 == 0 goto label54;

        $i124 = r0.<java.util.GregorianCalendar: int lastDateFieldSet>;

        if $i124 == 7 goto label50;

        $i133 = r0.<java.util.GregorianCalendar: int lastDateFieldSet>;

        if $i133 == 4 goto label50;

        $i134 = r0.<java.util.GregorianCalendar: int lastDateFieldSet>;

        if $i134 != 8 goto label54;

     label50:
        $r34 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z26 = $r34[7];

        if $z26 == 0 goto label51;

        if z0 != 0 goto label52;

     label51:
        $z34 = 1;

        goto label53;

     label52:
        $z34 = 0;

     label53:
        z3 = $z34;

     label54:
        if z3 == 0 goto label57;

        $z27 = virtualinvoke r0.<java.util.GregorianCalendar: boolean isLenient()>();

        if $z27 != 0 goto label56;

        $r37 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i126 = $r37[5];

        if $i126 < 1 goto label55;

        $r36 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i127 = $r36[5];

        $i125 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth(boolean,int)>(z2, i185);

        if $i127 <= $i125 goto label56;

     label55:
        $r35 = new java.lang.IllegalArgumentException;

        specialinvoke $r35.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r35;

     label56:
        $r39 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i129 = $r39[5];

        $i128 = $i129 - 1;

        $l130 = (long) $i128;

        l2 = l2 + $l130;

        goto label63;

     label57:
        $r26 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z23 = $r26[7];

        if $z23 == 0 goto label58;

        $r38 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i131 = $r38[7];

        i5 = $i131 - 1;

        goto label59;

     label58:
        $i67 = virtualinvoke r0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        i5 = $i67 - 1;

     label59:
        $r25 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z22 = $r25[4];

        if $z22 == 0 goto label60;

        $i101 = r0.<java.util.GregorianCalendar: int lastDateFieldSet>;

        if $i101 == 8 goto label60;

        $l100 = l2 - 3L;

        $i99 = virtualinvoke r0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        $i119 = $i99 - 1;

        $l120 = (long) $i119;

        $l118 = $l100 - $l120;

        i6 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l118);

        $r33 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i123 = $r33[4];

        $i121 = $i123 - 1;

        $i111 = $i121 * 7;

        $i122 = i6 + i5;

        $l113 = (long) $i122;

        $l112 = l2 - 3L;

        $l110 = $l113 - $l112;

        $i116 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l110);

        $i117 = $i111 + $i116;

        $i114 = $i117 - i6;

        $l115 = (long) $i114;

        l2 = l2 + $l115;

        goto label63;

     label60:
        $r28 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z24 = $r28[8];

        if $z24 == 0 goto label62;

        $r31 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i91 = $r31[8];

        if $i91 < 0 goto label61;

        $l109 = (long) i5;

        $l103 = l2 - 3L;

        $l108 = $l109 - $l103;

        $i107 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l108);

        $r32 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i98 = $r32[8];

        $i97 = $i98 - 1;

        $i96 = $i97 * 7;

        $i95 = $i107 + $i96;

        $l102 = (long) $i95;

        l2 = l2 + $l102;

        goto label63;

     label61:
        $i92 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth(boolean,int)>(z2, i185);

        $l93 = (long) i5;

        $i94 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth(boolean,int)>(z2, i185);

        $l81 = (long) $i94;

        $l82 = l2 + $l81;

        $l83 = $l82 - 3L;

        $l84 = $l93 - $l83;

        $i85 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l84);

        $i106 = $i92 + $i85;

        $r30 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i86 = $r30[8];

        $i87 = $i86 * 7;

        $i105 = $i106 + $i87;

        $l104 = (long) $i105;

        l2 = l2 + $l104;

        goto label63;

     label62:
        $r29 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z25 = $r29[7];

        if $z25 == 0 goto label63;

        $l78 = l2 - 3L;

        $i77 = virtualinvoke r0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        $i80 = $i77 - 1;

        $l79 = (long) $i80;

        $l70 = $l78 - $l79;

        i186 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l70);

        $i72 = i186 + i5;

        $l74 = (long) $i72;

        $l71 = l2 - 3L;

        $l73 = $l74 - $l71;

        $i76 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l73);

        $i75 = $i76 - i186;

        $l88 = (long) $i75;

        $i89 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l88);

        $l90 = (long) $i89;

        l2 = l2 + $l90;

     label63:
        goto label77;

     label64:
        $r9 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z14 = $r9[3];

        if $z14 == 0 goto label65;

        $i66 = r0.<java.util.GregorianCalendar: int lastDateFieldSet>;

        if $i66 == 6 goto label65;

        $z21 = 1;

        goto label66;

     label65:
        $z21 = 0;

     label66:
        z53 = $z21;

        if z53 == 0 goto label67;

        $r21 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z20 = $r21[6];

        if $z20 == 0 goto label67;

        $r24 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        z53 = $r24[7];

     label67:
        $l8 = (long) i3;

        l2 = specialinvoke r0.<java.util.GregorianCalendar: long daysFromBaseYear(long)>($l8);

        if z53 == 0 goto label71;

        $r19 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z18 = $r19[7];

        if $z18 == 0 goto label68;

        $r22 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i58 = $r22[7];

        i187 = $i58 - 1;

        goto label69;

     label68:
        $i40 = virtualinvoke r0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        i187 = $i40 - 1;

     label69:
        $l47 = l2 - 3L;

        $i46 = virtualinvoke r0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        $i49 = $i46 - 1;

        $l48 = (long) $i49;

        $l44 = $l47 - $l48;

        i188 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l44);

        $r20 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i45 = $r20[3];

        $i56 = $i45 - 1;

        $i53 = $i56 * 7;

        $i57 = i188 + i187;

        $l55 = (long) $i57;

        $l54 = l2 - 3L;

        $l52 = $l55 - $l54;

        $i50 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l52);

        $i51 = $i53 + $i50;

        $i61 = $i51 - i188;

        $l62 = (long) $i61;

        l2 = l2 + $l62;

        $i59 = 7 - i188;

        $i60 = virtualinvoke r0.<java.util.GregorianCalendar: int getMinimalDaysInFirstWeek()>();

        if $i59 >= $i60 goto label70;

        l2 = l2 + 7L;

     label70:
        goto label77;

     label71:
        $r11 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z16 = $r11[6];

        if $z16 == 0 goto label76;

        $z17 = virtualinvoke r0.<java.util.GregorianCalendar: boolean isLenient()>();

        if $z17 != 0 goto label75;

        $r15 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i35 = $r15[6];

        if $i35 < 1 goto label74;

        $r17 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i42 = $r17[6];

        $z19 = virtualinvoke r0.<java.util.GregorianCalendar: boolean isLeapYear(int)>(i3);

        if $z19 == 0 goto label72;

        $b39 = 1;

        goto label73;

     label72:
        $b39 = 0;

     label73:
        $i43 = 365 + $b39;

        if $i42 <= $i43 goto label75;

     label74:
        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r16;

     label75:
        $r18 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i36 = $r18[6];

        $i37 = $i36 - 1;

        $l38 = (long) $i37;

        l2 = l2 + $l38;

        goto label77;

     label76:
        $r12 = r0.<java.util.GregorianCalendar: boolean[] isSet>;

        $z15 = $r12[7];

        if $z15 == 0 goto label77;

        $r14 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i31 = $r14[7];

        $i32 = $i31 - 1;

        $l34 = (long) $i32;

        $l33 = l2 - 3L;

        $l28 = $l34 - $l33;

        $i29 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l28);

        $l30 = (long) $i29;

        l2 = l2 + $l30;

     label77:
        r0.<java.util.GregorianCalendar: int lastDateFieldSet> = 0;

        $l9 = l2 * 86400000L;

        l189 = l0 + $l9;

        $i12 = r0.<java.util.GregorianCalendar: int changeYear>;

        if i3 != $i12 goto label78;

        $l18 = r0.<java.util.GregorianCalendar: long gregorianCutover>;

        $i17 = specialinvoke r0.<java.util.GregorianCalendar: int julianError()>();

        $l24 = (long) $i17;

        $l23 = $l24 * 86400000L;

        $l22 = $l18 + $l23;

        $b21 = l189 cmp $l22;

        if $b21 < 0 goto label78;

        $i27 = specialinvoke r0.<java.util.GregorianCalendar: int julianError()>();

        $l26 = (long) $i27;

        $l25 = $l26 * 86400000L;

        l189 = l189 - $l25;

     label78:
        $i13 = specialinvoke r0.<java.util.GregorianCalendar: int getOffset(long)>(l189);

        $l10 = (long) $i13;

        $l11 = l189 - $l10;

        $r13 = virtualinvoke r0.<java.util.GregorianCalendar: java.util.TimeZone getTimeZone()>();

        $i16 = virtualinvoke $r13.<java.util.TimeZone: int getRawOffset()>();

        $l15 = (long) $i16;

        l190 = $l11 + $l15;

        $i14 = specialinvoke r0.<java.util.GregorianCalendar: int getOffset(long)>(l190);

        $l20 = (long) $i14;

        l191 = l189 - $l20;

        r0.<java.util.GregorianCalendar: long time> = l191;

        $b19 = l190 cmp l191;

        if $b19 == 0 goto label79;

        virtualinvoke r0.<java.util.GregorianCalendar: void computeFields()>();

        r0.<java.util.GregorianCalendar: boolean areFieldsSet> = 1;

     label79:
        return;
    }

    private int computeYearAndDay(long, long)
    {
        java.util.GregorianCalendar r0;
        long l0, l1, l3, $l5, $l7, $l13, $l14, $l16, $l17;
        int i2, i4, $i8, $i10, $i11, $i12, $i15;
        byte $b6, $b9;
        int[] $r1;

        r0 := @this: java.util.GregorianCalendar;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 = 1970;

        l3 = l0;

        $l5 = r0.<java.util.GregorianCalendar: long gregorianCutover>;

        $b6 = l1 cmp $l5;

        if $b6 >= 0 goto label1;

        $i15 = r0.<java.util.GregorianCalendar: int julianSkew>;

        $l17 = (long) $i15;

        l3 = l3 - $l17;

     label1:
        $l7 = l3 / 365L;

        $i8 = (int) $l7;

        i4 = $i8;

        if $i8 == 0 goto label2;

        i2 = i2 + i4;

        $l13 = (long) i2;

        $l16 = specialinvoke r0.<java.util.GregorianCalendar: long daysFromBaseYear(long)>($l13);

        l3 = l0 - $l16;

        goto label1;

     label2:
        $b9 = l3 cmp 0L;

        if $b9 >= 0 goto label3;

        i2 = i2 - 1;

        $i11 = specialinvoke r0.<java.util.GregorianCalendar: int daysInYear(int)>(i2);

        $l14 = (long) $i11;

        l3 = l3 + $l14;

     label3:
        $r1 = r0.<java.util.GregorianCalendar: int[] fields>;

        $r1[1] = i2;

        $i10 = (int) l3;

        $i12 = $i10 + 1;

        return $i12;
    }

    private long daysFromBaseYear(long)
    {
        java.util.GregorianCalendar r0;
        long l0, l1, $l4, $l6, $l7, $l8, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l23, $l24, $l25, $l26, $l27, $l28, $l32, $l35, $l38, $l39, $l42, $l44, $l45, $l46, $l47, $l48, $l49, l50;
        byte $b2, $b5, $b29, $b36, $b40;
        int $i3, $i22, $i30, $i31, $i33, $i34, $i37, $i41, $i43;

        r0 := @this: java.util.GregorianCalendar;

        l0 := @parameter0: long;

        $b2 = l0 cmp 1970L;

        if $b2 < 0 goto label5;

        $l26 = l0 - 1970L;

        $l27 = $l26 * 365L;

        $l25 = l0 - 1969L;

        $l28 = $l25 / 4L;

        l1 = $l27 + $l28;

        $i31 = r0.<java.util.GregorianCalendar: int changeYear>;

        $l32 = (long) $i31;

        $b29 = l0 cmp $l32;

        if $b29 <= 0 goto label1;

        $l48 = l0 - 1901L;

        $l45 = $l48 / 100L;

        $l47 = l0 - 1601L;

        $l46 = $l47 / 400L;

        $l49 = $l45 - $l46;

        l50 = l1 - $l49;

        goto label4;

     label1:
        $i30 = r0.<java.util.GregorianCalendar: int changeYear>;

        $l35 = (long) $i30;

        $b36 = l0 cmp $l35;

        if $b36 != 0 goto label2;

        $i41 = r0.<java.util.GregorianCalendar: int currentYearSkew>;

        $l42 = (long) $i41;

        l50 = l1 + $l42;

        goto label4;

     label2:
        $i33 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i34 = $i33 - 1;

        $l39 = (long) $i34;

        $b40 = l0 cmp $l39;

        if $b40 != 0 goto label3;

        $i43 = r0.<java.util.GregorianCalendar: int lastYearSkew>;

        $l44 = (long) $i43;

        l50 = l1 + $l44;

        goto label4;

     label3:
        $i37 = r0.<java.util.GregorianCalendar: int julianSkew>;

        $l38 = (long) $i37;

        l50 = l1 + $l38;

     label4:
        return l50;

     label5:
        $i3 = r0.<java.util.GregorianCalendar: int changeYear>;

        $l4 = (long) $i3;

        $b5 = l0 cmp $l4;

        if $b5 > 0 goto label6;

        $l18 = l0 - 1970L;

        $l19 = $l18 * 365L;

        $l17 = l0 - 1972L;

        $l20 = $l17 / 4L;

        $l24 = $l19 + $l20;

        $i22 = r0.<java.util.GregorianCalendar: int julianSkew>;

        $l21 = (long) $i22;

        $l23 = $l24 + $l21;

        return $l23;

     label6:
        $l6 = l0 - 1970L;

        $l9 = $l6 * 365L;

        $l7 = l0 - 1972L;

        $l8 = $l7 / 4L;

        $l12 = $l9 + $l8;

        $l10 = l0 - 2000L;

        $l11 = $l10 / 100L;

        $l16 = $l12 - $l11;

        $l14 = l0 - 2000L;

        $l13 = $l14 / 400L;

        $l15 = $l16 + $l13;

        return $l15;
    }

    private int daysInMonth()
    {
        java.util.GregorianCalendar r0;
        int[] $r1, $r2;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: java.util.GregorianCalendar;

        $r1 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i0 = $r1[1];

        $z0 = virtualinvoke r0.<java.util.GregorianCalendar: boolean isLeapYear(int)>($i0);

        $r2 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i1 = $r2[2];

        $i2 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth(boolean,int)>($z0, $i1);

        return $i2;
    }

    private int daysInMonth(boolean, int)
    {
        java.util.GregorianCalendar r0;
        boolean z0;
        int i0, $i3;
        byte[] $r1, $r2;
        byte $b1, $b2;

        r0 := @this: java.util.GregorianCalendar;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        if z0 == 0 goto label1;

        if i0 != 1 goto label1;

        $r2 = <java.util.GregorianCalendar: byte[] DaysInMonth>;

        $b2 = $r2[i0];

        $i3 = $b2 + 1;

        return $i3;

     label1:
        $r1 = <java.util.GregorianCalendar: byte[] DaysInMonth>;

        $b1 = $r1[i0];

        return $b1;
    }

    private int daysInYear(int)
    {
        java.util.GregorianCalendar r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0;
        short $s7;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<java.util.GregorianCalendar: boolean isLeapYear(int)>(i0);

        if $z0 == 0 goto label1;

        $s7 = 366;

        goto label2;

     label1:
        $s7 = 365;

     label2:
        i1 = $s7;

        $i2 = r0.<java.util.GregorianCalendar: int changeYear>;

        if i0 != $i2 goto label3;

        $i6 = r0.<java.util.GregorianCalendar: int currentYearSkew>;

        i1 = i1 - $i6;

     label3:
        $i3 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i4 = $i3 - 1;

        if i0 != $i4 goto label4;

        $i5 = r0.<java.util.GregorianCalendar: int lastYearSkew>;

        i1 = i1 - $i5;

     label4:
        return i1;
    }

    private int daysInYear(boolean, int)
    {
        java.util.GregorianCalendar r0;
        boolean z0;
        int i0, $i1, $i2, $i3;
        int[] $r1, $r2;

        r0 := @this: java.util.GregorianCalendar;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        if z0 == 0 goto label1;

        if i0 <= 1 goto label1;

        $r2 = <java.util.GregorianCalendar: int[] DaysInYear>;

        $i2 = $r2[i0];

        $i3 = $i2 + 1;

        return $i3;

     label1:
        $r1 = <java.util.GregorianCalendar: int[] DaysInYear>;

        $i1 = $r1[i0];

        return $i1;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.GregorianCalendar r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        long $l0, $l1;
        byte $b2;

        r0 := @this: java.util.GregorianCalendar;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof java.util.GregorianCalendar;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        if r1 != r0 goto label2;

        return 1;

     label2:
        $z1 = specialinvoke r0.<java.util.Calendar: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

        $l1 = r0.<java.util.GregorianCalendar: long gregorianCutover>;

        $r2 = (java.util.GregorianCalendar) r1;

        $l0 = $r2.<java.util.GregorianCalendar: long gregorianCutover>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    public int getActualMaximum(int)
    {
        java.util.GregorianCalendar r0, r1;
        int i0, i1, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        long l2;
        int[] $r2, $r3, $r4;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        $r2 = <java.util.GregorianCalendar: int[] maximums>;

        $i4 = $r2[i0];

        i1 = $i4;

        $r3 = <java.util.GregorianCalendar: int[] leastMaximums>;

        $i5 = $r3[i0];

        if $i4 != $i5 goto label01;

        return i1;

     label01:
        virtualinvoke r0.<java.util.GregorianCalendar: void complete()>();

        l2 = r0.<java.util.GregorianCalendar: long time>;

        i3 = 0;

        tableswitch(i0)
        {
            case 1: goto label08;
            case 2: goto label12;
            case 3: goto label02;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label06;
            case 7: goto label12;
            case 8: goto label07;
            case 9: goto label12;
            case 10: goto label12;
            case 11: goto label12;
            case 12: goto label12;
            case 13: goto label12;
            case 14: goto label12;
            case 15: goto label12;
            case 16: goto label11;
            default: goto label12;
        };

     label02:
        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(5, 31);

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(2, 11);

        i3 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(3);

        if i3 != 1 goto label03;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(5, 24);

        i3 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(3);

     label03:
        r0.<java.util.GregorianCalendar: boolean areFieldsSet> = 0;

        goto label12;

     label04:
        $i14 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth()>();

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(5, $i14);

        i3 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(4);

        r0.<java.util.GregorianCalendar: boolean areFieldsSet> = 0;

        goto label12;

     label05:
        $i13 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth()>();

        return $i13;

     label06:
        $r4 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i12 = $r4[1];

        $i11 = specialinvoke r0.<java.util.GregorianCalendar: int daysInYear(int)>($i12);

        return $i11;

     label07:
        $i6 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(8);

        $i7 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth()>();

        $i9 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(5);

        $i8 = $i7 - $i9;

        $i10 = $i8 / 7;

        i3 = $i6 + $i10;

        goto label12;

     label08:
        $r5 = virtualinvoke r0.<java.util.GregorianCalendar: java.lang.Object clone()>();

        r1 = (java.util.GregorianCalendar) $r5;

        $i15 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(0);

        if $i15 != 1 goto label09;

        virtualinvoke r1.<java.util.GregorianCalendar: void setTimeInMillis(long)>(9223372036854775807L);

        goto label10;

     label09:
        virtualinvoke r1.<java.util.GregorianCalendar: void setTimeInMillis(long)>(-9223372036854775808L);

     label10:
        i3 = virtualinvoke r1.<java.util.GregorianCalendar: int get(int)>(1);

        $i16 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(1);

        virtualinvoke r1.<java.util.GregorianCalendar: void set(int,int)>(1, $i16);

        $z0 = virtualinvoke r1.<java.util.GregorianCalendar: boolean before(java.lang.Object)>(r0);

        if $z0 == 0 goto label12;

        i3 = i3 + -1;

        goto label12;

     label11:
        i3 = virtualinvoke r0.<java.util.GregorianCalendar: int getMaximum(int)>(16);

     label12:
        r0.<java.util.GregorianCalendar: long time> = l2;

        return i3;
    }

    public int getActualMinimum(int)
    {
        java.util.GregorianCalendar r0;
        int i0, $i1;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<java.util.GregorianCalendar: int getMinimum(int)>(i0);

        return $i1;
    }

    public int getGreatestMinimum(int)
    {
        java.util.GregorianCalendar r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        $r1 = <java.util.GregorianCalendar: int[] minimums>;

        $i1 = $r1[i0];

        return $i1;
    }

    public final java.util.Date getGregorianChange()
    {
        java.util.GregorianCalendar r0;
        java.util.Date $r1;
        long $l0;

        r0 := @this: java.util.GregorianCalendar;

        $r1 = new java.util.Date;

        $l0 = r0.<java.util.GregorianCalendar: long gregorianCutover>;

        specialinvoke $r1.<java.util.Date: void <init>(long)>($l0);

        return $r1;
    }

    public int getLeastMaximum(int)
    {
        java.util.GregorianCalendar r0;
        int i0, i2, $i5;
        long l1, $l3, $l6;
        byte $b4;
        int[] $r1;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        $l3 = r0.<java.util.GregorianCalendar: long gregorianCutover>;

        $b4 = $l3 cmp -12219292800000L;

        if $b4 == 0 goto label1;

        if i0 != 3 goto label1;

        l1 = r0.<java.util.GregorianCalendar: long time>;

        $l6 = r0.<java.util.GregorianCalendar: long gregorianCutover>;

        virtualinvoke r0.<java.util.GregorianCalendar: void setTimeInMillis(long)>($l6);

        i2 = virtualinvoke r0.<java.util.GregorianCalendar: int getActualMaximum(int)>(i0);

        virtualinvoke r0.<java.util.GregorianCalendar: void setTimeInMillis(long)>(l1);

        return i2;

     label1:
        $r1 = <java.util.GregorianCalendar: int[] leastMaximums>;

        $i5 = $r1[i0];

        return $i5;
    }

    public int getMaximum(int)
    {
        java.util.GregorianCalendar r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        $r1 = <java.util.GregorianCalendar: int[] maximums>;

        $i1 = $r1[i0];

        return $i1;
    }

    public int getMinimum(int)
    {
        java.util.GregorianCalendar r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        $r1 = <java.util.GregorianCalendar: int[] minimums>;

        $i1 = $r1[i0];

        return $i1;
    }

    private int getOffset(long)
    {
        java.util.GregorianCalendar r0;
        long l0, l1, l4, $l10, $l12, $l14, $l18, $l24, $l26, $l28, $l29, $l31, $l33, $l34;
        java.util.TimeZone r1;
        int i2, i3, i5, i6, i7, i8, i9, $i13, $i15, $i17, $i19, $i20, $i21, $i22, $i23, $i25, $i27, $i32;
        boolean z0, $z1, $z2;
        byte $b11, $b16, $b30;

        r0 := @this: java.util.GregorianCalendar;

        l0 := @parameter0: long;

        r1 = virtualinvoke r0.<java.util.GregorianCalendar: java.util.TimeZone getTimeZone()>();

        l1 = l0 / 86400000L;

        $l10 = l0 % 86400000L;

        i2 = (int) $l10;

        if i2 >= 0 goto label1;

        i2 = i2 + 86400000;

        l1 = l1 - 1L;

     label1:
        i3 = 1970;

        l4 = l1;

        $l12 = r0.<java.util.GregorianCalendar: long gregorianCutover>;

        $b11 = l0 cmp $l12;

        if $b11 >= 0 goto label2;

        $i32 = r0.<java.util.GregorianCalendar: int julianSkew>;

        $l34 = (long) $i32;

        l4 = l4 - $l34;

     label2:
        $l14 = l4 / 365L;

        $i13 = (int) $l14;

        i5 = $i13;

        if $i13 == 0 goto label3;

        i3 = i3 + i5;

        $l33 = (long) i3;

        $l31 = specialinvoke r0.<java.util.GregorianCalendar: long daysFromBaseYear(long)>($l33);

        l4 = l1 - $l31;

        goto label2;

     label3:
        $b16 = l4 cmp 0L;

        if $b16 >= 0 goto label6;

        i3 = i3 - 1;

        $l26 = l4 + 365L;

        $z1 = virtualinvoke r0.<java.util.GregorianCalendar: boolean isLeapYear(int)>(i3);

        if $z1 == 0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        $l24 = (long) $z2;

        l4 = $l26 + $l24;

        $i25 = r0.<java.util.GregorianCalendar: int changeYear>;

        if i3 != $i25 goto label6;

        $l29 = r0.<java.util.GregorianCalendar: long gregorianCutover>;

        $b30 = l0 cmp $l29;

        if $b30 >= 0 goto label6;

        $i27 = specialinvoke r0.<java.util.GregorianCalendar: int julianError()>();

        $l28 = (long) $i27;

        l4 = l4 - $l28;

     label6:
        if i3 > 0 goto label7;

        $i22 = virtualinvoke r1.<java.util.TimeZone: int getRawOffset()>();

        return $i22;

     label7:
        $i15 = (int) l4;

        i6 = $i15 + 1;

        i7 = i6 / 32;

        z0 = virtualinvoke r0.<java.util.GregorianCalendar: boolean isLeapYear(int)>(i3);

        $i17 = specialinvoke r0.<java.util.GregorianCalendar: int daysInYear(boolean,int)>(z0, i7);

        i8 = i6 - $i17;

        $i19 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth(boolean,int)>(z0, i7);

        if i8 <= $i19 goto label8;

        $i23 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth(boolean,int)>(z0, i7);

        i8 = i8 - $i23;

        i7 = i7 + 1;

     label8:
        $l18 = l1 - 3L;

        $i21 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l18);

        i9 = $i21 + 1;

        $i20 = virtualinvoke r1.<java.util.TimeZone: int getOffset(int,int,int,int,int,int)>(1, i3, i7, i8, i9, i2);

        return $i20;
    }

    public int hashCode()
    {
        java.util.GregorianCalendar r0;
        int $i0, $i4, $i5, $i6, $i7;
        long $l1, $l2, $l3;

        r0 := @this: java.util.GregorianCalendar;

        $i0 = specialinvoke r0.<java.util.Calendar: int hashCode()>();

        $l1 = r0.<java.util.GregorianCalendar: long gregorianCutover>;

        $l2 = $l1 >>> 32;

        $i5 = (int) $l2;

        $l3 = r0.<java.util.GregorianCalendar: long gregorianCutover>;

        $i4 = (int) $l3;

        $i6 = $i5 ^ $i4;

        $i7 = $i0 + $i6;

        return $i7;
    }

    public boolean isLeapYear(int)
    {
        java.util.GregorianCalendar r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        $i1 = r0.<java.util.GregorianCalendar: int changeYear>;

        if i0 <= $i1 goto label4;

        $i3 = i0 % 4;

        if $i3 != 0 goto label2;

        $i4 = i0 % 100;

        if $i4 != 0 goto label1;

        $i5 = i0 % 400;

        if $i5 != 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        $i2 = i0 % 4;

        if $i2 != 0 goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        return $z0;
    }

    private int julianError()
    {
        java.util.GregorianCalendar r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: java.util.GregorianCalendar;

        $i0 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i3 = $i0 / 100;

        $i1 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i2 = $i1 / 400;

        $i4 = $i3 - $i2;

        $i5 = $i4 - 2;

        return $i5;
    }

    private int mod(int, int)
    {
        java.util.GregorianCalendar r0;
        int i0, i1, i2, $i3;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = i0 % i1;

        if i0 >= 0 goto label1;

        if i2 >= 0 goto label1;

        $i3 = i2 + i1;

        return $i3;

     label1:
        return i2;
    }

    private int mod7(long)
    {
        java.util.GregorianCalendar r0;
        long l0, $l2;
        int i1, $i4;
        byte $b3;

        r0 := @this: java.util.GregorianCalendar;

        l0 := @parameter0: long;

        $l2 = l0 % 7L;

        i1 = (int) $l2;

        $b3 = l0 cmp 0L;

        if $b3 >= 0 goto label1;

        if i1 >= 0 goto label1;

        $i4 = i1 + 7;

        return $i4;

     label1:
        return i1;
    }

    public void roll(int, int)
    {
        java.util.GregorianCalendar r0;
        int i0, i1, i2, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, i90, i91, i93, i94, i95, i96;
        byte b3, b92;
        java.lang.IllegalArgumentException $r1;
        int[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26;
        long $l28, $l62;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 != 0 goto label01;

        return;

     label01:
        if i0 < 0 goto label02;

        if i0 < 15 goto label03;

     label02:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label03:
        virtualinvoke r0.<java.util.GregorianCalendar: void complete()>();

        i7 = -1;

        tableswitch(i0)
        {
            case 0: goto label22;
            case 1: goto label04;
            case 2: goto label22;
            case 3: goto label05;
            case 4: goto label12;
            case 5: goto label18;
            case 6: goto label19;
            case 7: goto label20;
            case 8: goto label21;
            case 9: goto label22;
            case 10: goto label22;
            case 11: goto label22;
            case 12: goto label22;
            case 13: goto label22;
            case 14: goto label22;
            default: goto label24;
        };

     label04:
        $r2 = <java.util.GregorianCalendar: int[] maximums>;

        i7 = $r2[i0];

        goto label24;

     label05:
        $r13 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i56 = $r13[1];

        i2 = specialinvoke r0.<java.util.GregorianCalendar: int daysInYear(int)>($i56);

        b3 = 6;

        $r16 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i53 = $r16[7];

        $r17 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i52 = $r17[b3];

        $i54 = $i53 - $i52;

        $i55 = virtualinvoke r0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        $i61 = $i55 - 1;

        $i60 = $i54 - $i61;

        $l62 = (long) $i60;

        i4 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l62);

        $i58 = i2 - 1;

        $i57 = $i58 + i4;

        $i59 = $i57 / 7;

        i5 = $i59 + 1;

        $r18 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i66 = $r18[i0];

        $i65 = $i66 - 1;

        $i68 = $i65 + i1;

        $i67 = specialinvoke r0.<java.util.GregorianCalendar: int mod(int,int)>($i68, i5);

        i6 = $i67 + 1;

        if i6 != i5 goto label08;

        $r21 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i80 = $r21[i0];

        $i81 = i6 - $i80;

        i8 = $i81 * 7;

        $r23 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i79 = $r23[b3];

        if $i79 <= i8 goto label06;

        $r22 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i76 = $r22[b3];

        $i77 = $i76 + i8;

        if $i77 <= i2 goto label06;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(i0, 1);

        goto label07;

     label06:
        $i78 = i6 - 1;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(i0, $i78);

     label07:
        goto label24;

     label08:
        if i6 != 1 goto label11;

        $r20 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i72 = $r20[b3];

        $r19 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i64 = $r19[b3];

        $i63 = $i64 - 1;

        $i74 = $i63 / 7;

        $i75 = $i74 * 7;

        $i73 = $i72 - $i75;

        $i70 = $i73 - 1;

        $i71 = $i70 + i4;

        $i69 = $i71 / 7;

        i90 = $i69 + 1;

        if i90 <= 1 goto label09;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(i0, 1);

        goto label10;

     label09:
        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(i0, i6);

     label10:
        goto label24;

     label11:
        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(i0, i6);

        goto label24;

     label12:
        i91 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth()>();

        b92 = 5;

        $r8 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i24 = $r8[7];

        $r9 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i26 = $r9[b92];

        $i25 = $i24 - $i26;

        $i29 = virtualinvoke r0.<java.util.GregorianCalendar: int getFirstDayOfWeek()>();

        $i30 = $i29 - 1;

        $i27 = $i25 - $i30;

        $l28 = (long) $i27;

        i93 = specialinvoke r0.<java.util.GregorianCalendar: int mod7(long)>($l28);

        $i33 = i91 - 1;

        $i31 = $i33 + i93;

        $i32 = $i31 / 7;

        i94 = $i32 + 1;

        $r10 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i36 = $r10[i0];

        $i35 = $i36 - 1;

        $i34 = $i35 + i1;

        $i38 = specialinvoke r0.<java.util.GregorianCalendar: int mod(int,int)>($i34, i94);

        i95 = $i38 + 1;

        if i95 != i94 goto label14;

        $r14 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i48 = $r14[b92];

        $r15 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i50 = $r15[i0];

        $i51 = i95 - $i50;

        $i47 = $i51 * 7;

        $i49 = $i48 + $i47;

        if $i49 <= i91 goto label13;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(b92, i91);

        goto label24;

     label13:
        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(i0, i95);

        goto label24;

     label14:
        if i95 != 1 goto label17;

        $r12 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i39 = $r12[b92];

        $r11 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i37 = $r11[b92];

        $i42 = $i37 - 1;

        $i41 = $i42 / 7;

        $i40 = $i41 * 7;

        $i46 = $i39 - $i40;

        $i45 = $i46 - 1;

        $i44 = $i45 + i93;

        $i43 = $i44 / 7;

        i96 = $i43 + 1;

        if i96 <= 1 goto label15;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(b92, 1);

        goto label16;

     label15:
        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(i0, i95);

     label16:
        goto label24;

     label17:
        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(i0, i95);

        goto label24;

     label18:
        i7 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth()>();

        goto label24;

     label19:
        $r7 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i23 = $r7[1];

        i7 = specialinvoke r0.<java.util.GregorianCalendar: int daysInYear(int)>($i23);

        goto label24;

     label20:
        $r6 = <java.util.GregorianCalendar: int[] maximums>;

        i7 = $r6[i0];

        r0.<java.util.GregorianCalendar: int lastDateFieldSet> = 4;

        goto label24;

     label21:
        $r4 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i14 = $r4[5];

        $i15 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth()>();

        $r5 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i17 = $r5[5];

        $i16 = $i15 - $i17;

        $i19 = $i16 / 7;

        $i18 = $i19 * 7;

        $i21 = $i14 + $i18;

        $i20 = $i21 - 1;

        $i22 = $i20 / 7;

        i7 = $i22 + 1;

        goto label24;

     label22:
        $r26 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i86 = $r26[i0];

        $i83 = $i86 + i1;

        $r25 = <java.util.GregorianCalendar: int[] maximums>;

        $i85 = $r25[i0];

        $i84 = $i85 + 1;

        $i82 = specialinvoke r0.<java.util.GregorianCalendar: int mod(int,int)>($i83, $i84);

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(i0, $i82);

        if i0 != 2 goto label23;

        $r24 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i89 = $r24[5];

        $i88 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth()>();

        if $i89 <= $i88 goto label23;

        $i87 = specialinvoke r0.<java.util.GregorianCalendar: int daysInMonth()>();

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(5, $i87);

        goto label24;

     label23:
        if i0 != 9 goto label24;

        r0.<java.util.GregorianCalendar: int lastTimeFieldSet> = 10;

     label24:
        if i7 == -1 goto label25;

        $r3 = r0.<java.util.GregorianCalendar: int[] fields>;

        $i9 = $r3[i0];

        $i10 = $i9 - 1;

        $i11 = $i10 + i1;

        $i13 = specialinvoke r0.<java.util.GregorianCalendar: int mod(int,int)>($i11, i7);

        $i12 = $i13 + 1;

        virtualinvoke r0.<java.util.GregorianCalendar: void set(int,int)>(i0, $i12);

     label25:
        virtualinvoke r0.<java.util.GregorianCalendar: void complete()>();

        return;
    }

    public void roll(int, boolean)
    {
        java.util.GregorianCalendar r0;
        int i0;
        boolean z0;
        byte $b1;

        r0 := @this: java.util.GregorianCalendar;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = -1;

     label2:
        virtualinvoke r0.<java.util.GregorianCalendar: void roll(int,int)>(i0, $b1);

        return;
    }

    public void setGregorianChange(java.util.Date)
    {
        java.util.GregorianCalendar r0, r2, $r3;
        java.util.Date r1;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        long $l1;
        java.util.TimeZone $r4;

        r0 := @this: java.util.GregorianCalendar;

        r1 := @parameter0: java.util.Date;

        $l1 = virtualinvoke r1.<java.util.Date: long getTime()>();

        r0.<java.util.GregorianCalendar: long gregorianCutover> = $l1;

        $r3 = new java.util.GregorianCalendar;

        $r4 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        specialinvoke $r3.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>($r4);

        r2 = $r3;

        virtualinvoke r2.<java.util.GregorianCalendar: void setTime(java.util.Date)>(r1);

        $i2 = virtualinvoke r2.<java.util.GregorianCalendar: int get(int)>(1);

        r0.<java.util.GregorianCalendar: int changeYear> = $i2;

        $i3 = virtualinvoke r2.<java.util.GregorianCalendar: int get(int)>(0);

        if $i3 != 0 goto label1;

        $i18 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i20 = 1 - $i18;

        r0.<java.util.GregorianCalendar: int changeYear> = $i20;

     label1:
        $i4 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i5 = $i4 - 2000;

        $i6 = $i5 / 400;

        $i7 = specialinvoke r0.<java.util.GregorianCalendar: int julianError()>();

        $i12 = $i6 + $i7;

        $i8 = r0.<java.util.GregorianCalendar: int changeYear>;

        $i9 = $i8 - 2000;

        $i10 = $i9 / 100;

        $i11 = $i12 - $i10;

        r0.<java.util.GregorianCalendar: int julianSkew> = $i11;

        i0 = virtualinvoke r2.<java.util.GregorianCalendar: int get(int)>(6);

        $i13 = r0.<java.util.GregorianCalendar: int julianSkew>;

        if i0 >= $i13 goto label2;

        $i14 = i0 - 1;

        r0.<java.util.GregorianCalendar: int currentYearSkew> = $i14;

        $i17 = r0.<java.util.GregorianCalendar: int julianSkew>;

        $i16 = $i17 - i0;

        $i19 = $i16 + 1;

        r0.<java.util.GregorianCalendar: int lastYearSkew> = $i19;

        goto label3;

     label2:
        r0.<java.util.GregorianCalendar: int lastYearSkew> = 0;

        $i15 = r0.<java.util.GregorianCalendar: int julianSkew>;

        r0.<java.util.GregorianCalendar: int currentYearSkew> = $i15;

     label3:
        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.util.GregorianCalendar r0;
        java.io.ObjectOutputStream r1;

        r0 := @this: java.util.GregorianCalendar;

        r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.util.GregorianCalendar r0;
        java.io.ObjectInputStream r1;
        java.util.Date $r2;
        long $l0;

        r0 := @this: java.util.GregorianCalendar;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r2 = new java.util.Date;

        $l0 = r0.<java.util.GregorianCalendar: long gregorianCutover>;

        specialinvoke $r2.<java.util.Date: void <init>(long)>($l0);

        virtualinvoke r0.<java.util.GregorianCalendar: void setGregorianChange(java.util.Date)>($r2);

        return;
    }

    static void <clinit>()
    {
        byte[] $r0;
        int[] $r1, $r2, $r3, $r4;

        <java.util.GregorianCalendar: long defaultGregorianCutover> = -12219292800000L;

        <java.util.GregorianCalendar: int AD> = 1;

        <java.util.GregorianCalendar: int BC> = 0;

        <java.util.GregorianCalendar: long serialVersionUID> = -8125100834729963327L;

        $r0 = newarray (byte)[12];

        $r0[0] = 31;

        $r0[1] = 28;

        $r0[2] = 31;

        $r0[3] = 30;

        $r0[4] = 31;

        $r0[5] = 30;

        $r0[6] = 31;

        $r0[7] = 31;

        $r0[8] = 30;

        $r0[9] = 31;

        $r0[10] = 30;

        $r0[11] = 31;

        <java.util.GregorianCalendar: byte[] DaysInMonth> = $r0;

        $r1 = newarray (int)[12];

        $r1[0] = 0;

        $r1[1] = 31;

        $r1[2] = 59;

        $r1[3] = 90;

        $r1[4] = 120;

        $r1[5] = 151;

        $r1[6] = 181;

        $r1[7] = 212;

        $r1[8] = 243;

        $r1[9] = 273;

        $r1[10] = 304;

        $r1[11] = 334;

        <java.util.GregorianCalendar: int[] DaysInYear> = $r1;

        $r2 = newarray (int)[17];

        $r2[0] = 1;

        $r2[1] = 292278994;

        $r2[2] = 11;

        $r2[3] = 53;

        $r2[4] = 6;

        $r2[5] = 31;

        $r2[6] = 366;

        $r2[7] = 7;

        $r2[8] = 6;

        $r2[9] = 1;

        $r2[10] = 11;

        $r2[11] = 23;

        $r2[12] = 59;

        $r2[13] = 59;

        $r2[14] = 999;

        $r2[15] = 50400000;

        $r2[16] = 7200000;

        <java.util.GregorianCalendar: int[] maximums> = $r2;

        $r3 = newarray (int)[17];

        $r3[0] = 0;

        $r3[1] = 1;

        $r3[2] = 0;

        $r3[3] = 1;

        $r3[4] = 0;

        $r3[5] = 1;

        $r3[6] = 1;

        $r3[7] = 1;

        $r3[8] = 1;

        $r3[9] = 0;

        $r3[10] = 0;

        $r3[11] = 0;

        $r3[12] = 0;

        $r3[13] = 0;

        $r3[14] = 0;

        $r3[15] = -46800000;

        $r3[16] = 0;

        <java.util.GregorianCalendar: int[] minimums> = $r3;

        $r4 = newarray (int)[17];

        $r4[0] = 1;

        $r4[1] = 292269054;

        $r4[2] = 11;

        $r4[3] = 50;

        $r4[4] = 3;

        $r4[5] = 28;

        $r4[6] = 355;

        $r4[7] = 7;

        $r4[8] = 3;

        $r4[9] = 1;

        $r4[10] = 11;

        $r4[11] = 23;

        $r4[12] = 59;

        $r4[13] = 59;

        $r4[14] = 999;

        $r4[15] = 50400000;

        $r4[16] = 1200000;

        <java.util.GregorianCalendar: int[] leastMaximums> = $r4;

        return;
    }
}
