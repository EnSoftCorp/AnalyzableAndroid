public final class libcore.util.Objects extends java.lang.Object
{

    private void <init>()
    {
        libcore.util.Objects r0;

        r0 := @this: libcore.util.Objects;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean equal(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 == r1 goto label1;

        if r0 == null goto label2;

        $z1 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static int hashCode(java.lang.Object)
    {
        java.lang.Object r0;
        int $i0;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

     label2:
        return $i0;
    }

    public static java.lang.String toString(java.lang.Object)
    {
        java.lang.Object r0, r5;
        java.lang.Class r1, $r15, $r16, $r17, $r23, $r26, $r27, $r28, $r29, $r30, $r32, $r33;
        java.lang.StringBuilder r2, $r6, $r8, $r18, $r21, $r24, $r25;
        int i0, i1, i2, $i3, $i4, $i5;
        java.lang.reflect.Field[] r3;
        java.lang.reflect.Field r4;
        java.lang.String $r7, $r11, $r12, $r37, $r40, $r44, $r48, $r52, $r55, $r59, $r63, $r67;
        boolean $z0;
        java.lang.Object[] $r31, $r36;
        short[] $r35, $r41;
        long[] $r38, $r45;
        int[] $r42, $r49;
        float[] $r46, $r53;
        double[] $r50, $r58;
        char[] $r54, $r61;
        byte[] $r57, $r66;
        boolean[] $r62, $r69;
        java.lang.AssertionError $r70;
        java.lang.IllegalAccessException $r71, r72;

        r0 := @parameter0: java.lang.Object;

        r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        r2 = $r6;

        $r7 = virtualinvoke r1.<java.lang.Class: java.lang.String getSimpleName()>();

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        i0 = 0;

        r3 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i1 = lengthof r3;

        i2 = 0;

     label01:
        if i2 >= i1 goto label19;

        r4 = r3[i2];

        $i3 = virtualinvoke r4.<java.lang.reflect.Field: int getModifiers()>();

        $i4 = $i3 & 136;

        if $i4 == 0 goto label02;

        goto label18;

     label02:
        virtualinvoke r4.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

     label03:
        r5 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $i5 = i0;

        i0 = i0 + 1;

        if $i5 <= 0 goto label04;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label04:
        $r12 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.String getName()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r15 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r15.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label13;

        $r23 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        if $r23 != class "[Z" goto label05;

        $r69 = (boolean[]) r5;

        $r62 = (boolean[]) $r69;

        $r63 = staticinvoke <java.util.Arrays: java.lang.String toString(boolean[])>($r62);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        goto label16;

     label05:
        $r28 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        if $r28 != class "[B" goto label06;

        $r57 = (byte[]) r5;

        $r66 = (byte[]) $r57;

        $r67 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>($r66);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        goto label16;

     label06:
        $r29 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        if $r29 != class "[C" goto label07;

        $r61 = (char[]) r5;

        $r54 = (char[]) $r61;

        $r55 = staticinvoke <java.util.Arrays: java.lang.String toString(char[])>($r54);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        goto label16;

     label07:
        $r26 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        if $r26 != class "[D" goto label08;

        $r50 = (double[]) r5;

        $r58 = (double[]) $r50;

        $r59 = staticinvoke <java.util.Arrays: java.lang.String toString(double[])>($r58);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        goto label16;

     label08:
        $r27 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        if $r27 != class "[F" goto label09;

        $r46 = (float[]) r5;

        $r53 = (float[]) $r46;

        $r52 = staticinvoke <java.util.Arrays: java.lang.String toString(float[])>($r53);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        goto label16;

     label09:
        $r32 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        if $r32 != class "[I" goto label10;

        $r42 = (int[]) r5;

        $r49 = (int[]) $r42;

        $r48 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r49);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        goto label16;

     label10:
        $r33 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        if $r33 != class "[J" goto label11;

        $r38 = (long[]) r5;

        $r45 = (long[]) $r38;

        $r44 = staticinvoke <java.util.Arrays: java.lang.String toString(long[])>($r45);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        goto label16;

     label11:
        $r30 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        if $r30 != class "[S" goto label12;

        $r35 = (short[]) r5;

        $r41 = (short[]) $r35;

        $r40 = staticinvoke <java.util.Arrays: java.lang.String toString(short[])>($r41);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        goto label16;

     label12:
        $r31 = (java.lang.Object[]) r5;

        $r36 = (java.lang.Object[]) $r31;

        $r37 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r36);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        goto label16;

     label13:
        $r17 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        if $r17 != class "java/lang/Character" goto label14;

        $r24 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        goto label16;

     label14:
        $r16 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        if $r16 != class "java/lang/String" goto label15;

        $r18 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        goto label16;

     label15:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

     label16:
        goto label18;

     label17:
        $r71 := @caughtexception;

        r72 = $r71;

        $r70 = new java.lang.AssertionError;

        specialinvoke $r70.<java.lang.AssertionError: void <init>(java.lang.Object)>(r72);

        throw $r70;

     label18:
        i2 = i2 + 1;

        goto label01;

     label19:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r11 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;

        catch java.lang.IllegalAccessException from label03 to label16 with label17;
    }
}
