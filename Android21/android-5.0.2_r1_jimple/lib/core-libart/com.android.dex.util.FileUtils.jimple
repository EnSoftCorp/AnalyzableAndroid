public final class com.android.dex.util.FileUtils extends java.lang.Object
{

    private void <init>()
    {
        com.android.dex.util.FileUtils r0;

        r0 := @this: com.android.dex.util.FileUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] readFile(java.lang.String)
    {
        java.lang.String r0;
        java.io.File r1, $r2;
        byte[] $r3;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r0);

        r1 = $r2;

        $r3 = staticinvoke <com.android.dex.util.FileUtils: byte[] readFile(java.io.File)>(r1);

        return $r3;
    }

    public static byte[] readFile(java.io.File)
    {
        java.io.File r0;
        long l0, $l4;
        int i1, i2, i3;
        byte[] r1;
        java.io.FileInputStream r2, $r3;
        boolean $z0, $z1, $z2;
        byte $b5;
        java.lang.StringBuilder $r4, $r6, $r7, $r10, $r11, $r13, $r14, $r16, $r17, $r20, $r22, $r23, $r24, $r25, $r27, $r29, $r33, $r34;
        java.lang.RuntimeException $r5, $r8, $r15, $r18, $r26, $r28;
        java.lang.String $r9, $r12, $r19, $r21, $r30, $r32;
        java.io.IOException $r31, r35;

        r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label01;

        $r26 = new java.lang.RuntimeException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": file not found");

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.RuntimeException: void <init>(java.lang.String)>($r30);

        throw $r26;

     label01:
        $z1 = virtualinvoke r0.<java.io.File: boolean isFile()>();

        if $z1 != 0 goto label02;

        $r18 = new java.lang.RuntimeException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r20 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": not a file");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String)>($r21);

        throw $r18;

     label02:
        $z2 = virtualinvoke r0.<java.io.File: boolean canRead()>();

        if $z2 != 0 goto label03;

        $r15 = new java.lang.RuntimeException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": file not readable");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>($r19);

        throw $r15;

     label03:
        l0 = virtualinvoke r0.<java.io.File: long length()>();

        i1 = (int) l0;

        $l4 = (long) i1;

        $b5 = $l4 cmp l0;

        if $b5 == 0 goto label04;

        $r8 = new java.lang.RuntimeException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": file too long");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label04:
        r1 = newarray (byte)[i1];

     label05:
        $r3 = new java.io.FileInputStream;

        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.io.File)>(r0);

        r2 = $r3;

        i2 = 0;

     label06:
        if i1 <= 0 goto label08;

        i3 = virtualinvoke r2.<java.io.FileInputStream: int read(byte[],int,int)>(r1, i2, i1);

        if i3 != -1 goto label07;

        $r5 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": unexpected EOF");

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label07:
        i2 = i2 + i3;

        i1 = i1 - i3;

        goto label06;

     label08:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label09:
        goto label11;

     label10:
        $r31 := @caughtexception;

        r35 = $r31;

        $r28 = new java.lang.RuntimeException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": trouble reading");

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r32, r35);

        throw $r28;

     label11:
        return r1;

        catch java.io.IOException from label05 to label09 with label10;
    }

    public static boolean hasArchiveSuffix(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".zip");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".jar");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".apk");

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }
}
