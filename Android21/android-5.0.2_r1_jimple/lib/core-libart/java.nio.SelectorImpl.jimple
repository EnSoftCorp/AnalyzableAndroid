final class java.nio.SelectorImpl extends java.nio.channels.spi.AbstractSelector
{
    final java.lang.Object keysLock;
    private final java.util.Set mutableKeys;
    private final java.util.Set unmodifiableKeys;
    private final java.util.Set mutableSelectedKeys;
    private final java.util.Set selectedKeys;
    private final java.io.FileDescriptor wakeupIn;
    private final java.io.FileDescriptor wakeupOut;
    private final java.util.UnsafeArrayList pollFds;

    public void <init>(java.nio.channels.spi.SelectorProvider) throws java.io.IOException
    {
        java.nio.SelectorImpl r0;
        java.nio.channels.spi.SelectorProvider r1;
        java.io.FileDescriptor[] r2;
        java.lang.Object $r3;
        java.util.HashSet $r4, $r7;
        java.util.Set $r5, $r6, $r9;
        java.nio.SelectorImpl$UnaddableSet $r8;
        java.util.UnsafeArrayList $r10, $r15;
        libcore.io.Os $r11;
        java.io.FileDescriptor $r12, $r13, $r14, $r18;
        android.system.StructPollfd $r16;
        int $i0;
        android.system.ErrnoException $r17, r20;
        java.io.IOException $r19;

        r0 := @this: java.nio.SelectorImpl;

        r1 := @parameter0: java.nio.channels.spi.SelectorProvider;

        specialinvoke r0.<java.nio.channels.spi.AbstractSelector: void <init>(java.nio.channels.spi.SelectorProvider)>(r1);

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<java.nio.SelectorImpl: java.lang.Object keysLock> = $r3;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r0.<java.nio.SelectorImpl: java.util.Set mutableKeys> = $r4;

        $r5 = r0.<java.nio.SelectorImpl: java.util.Set mutableKeys>;

        $r6 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r5);

        r0.<java.nio.SelectorImpl: java.util.Set unmodifiableKeys> = $r6;

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        r0.<java.nio.SelectorImpl: java.util.Set mutableSelectedKeys> = $r7;

        $r8 = new java.nio.SelectorImpl$UnaddableSet;

        $r9 = r0.<java.nio.SelectorImpl: java.util.Set mutableSelectedKeys>;

        specialinvoke $r8.<java.nio.SelectorImpl$UnaddableSet: void <init>(java.util.Set)>($r9);

        r0.<java.nio.SelectorImpl: java.util.Set selectedKeys> = $r8;

        $r10 = new java.util.UnsafeArrayList;

        specialinvoke $r10.<java.util.UnsafeArrayList: void <init>(java.lang.Class,int)>(class "android/system/StructPollfd", 8);

        r0.<java.nio.SelectorImpl: java.util.UnsafeArrayList pollFds> = $r10;

     label1:
        $r11 = <libcore.io.Libcore: libcore.io.Os os>;

        r2 = interfaceinvoke $r11.<libcore.io.Os: java.io.FileDescriptor[] pipe()>();

        $r12 = r2[0];

        r0.<java.nio.SelectorImpl: java.io.FileDescriptor wakeupIn> = $r12;

        $r13 = r2[1];

        r0.<java.nio.SelectorImpl: java.io.FileDescriptor wakeupOut> = $r13;

        $r14 = r0.<java.nio.SelectorImpl: java.io.FileDescriptor wakeupIn>;

        staticinvoke <libcore.io.IoUtils: void setBlocking(java.io.FileDescriptor,boolean)>($r14, 0);

        $r15 = r0.<java.nio.SelectorImpl: java.util.UnsafeArrayList pollFds>;

        $r16 = new android.system.StructPollfd;

        specialinvoke $r16.<android.system.StructPollfd: void <init>()>();

        virtualinvoke $r15.<java.util.UnsafeArrayList: boolean add(java.lang.Object)>($r16);

        $r18 = r0.<java.nio.SelectorImpl: java.io.FileDescriptor wakeupIn>;

        $i0 = <android.system.OsConstants: int POLLIN>;

        specialinvoke r0.<java.nio.SelectorImpl: void setPollFd(int,java.io.FileDescriptor,int,java.lang.Object)>(0, $r18, $i0, null);

     label2:
        goto label4;

     label3:
        $r17 := @caughtexception;

        r20 = $r17;

        $r19 = virtualinvoke r20.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r19;

     label4:
        return;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    protected void implCloseSelector() throws java.io.IOException
    {
        java.nio.SelectorImpl r0, r1;
        java.util.Set r2, r3, $r11, $r12, $r15;
        java.util.Iterator r4;
        java.nio.channels.SelectionKey r5;
        java.lang.Throwable r6, r7, r8, $r18, $r19, $r20;
        java.io.FileDescriptor $r13, $r14;
        boolean $z0;
        java.nio.channels.spi.AbstractSelectionKey $r16;
        java.lang.Object $r17;

        r0 := @this: java.nio.SelectorImpl;

        virtualinvoke r0.<java.nio.SelectorImpl: java.nio.channels.Selector wakeup()>();

        r1 = r0;

        entermonitor r0;

     label01:
        $r11 = r0.<java.nio.SelectorImpl: java.util.Set unmodifiableKeys>;

        r2 = $r11;

        entermonitor $r11;

     label02:
        $r12 = r0.<java.nio.SelectorImpl: java.util.Set selectedKeys>;

        r3 = $r12;

        entermonitor $r12;

     label03:
        $r13 = r0.<java.nio.SelectorImpl: java.io.FileDescriptor wakeupIn>;

        staticinvoke <libcore.io.IoUtils: void close(java.io.FileDescriptor)>($r13);

        $r14 = r0.<java.nio.SelectorImpl: java.io.FileDescriptor wakeupOut>;

        staticinvoke <libcore.io.IoUtils: void close(java.io.FileDescriptor)>($r14);

        specialinvoke r0.<java.nio.SelectorImpl: int doCancel()>();

        $r15 = r0.<java.nio.SelectorImpl: java.util.Set mutableKeys>;

        r4 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r17 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.nio.channels.SelectionKey) $r17;

        $r16 = (java.nio.channels.spi.AbstractSelectionKey) r5;

        virtualinvoke r0.<java.nio.SelectorImpl: void deregister(java.nio.channels.spi.AbstractSelectionKey)>($r16);

        goto label04;

     label05:
        exitmonitor r3;

     label06:
        goto label09;

     label07:
        $r18 := @caughtexception;

        r6 = $r18;

        exitmonitor r3;

     label08:
        throw r6;

     label09:
        exitmonitor r2;

     label10:
        goto label13;

     label11:
        $r19 := @caughtexception;

        r7 = $r19;

        exitmonitor r2;

     label12:
        throw r7;

     label13:
        exitmonitor r1;

     label14:
        goto label17;

     label15:
        $r20 := @caughtexception;

        r8 = $r20;

        exitmonitor r1;

     label16:
        throw r8;

     label17:
        return;

        catch java.lang.Throwable from label03 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label02 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label01 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    protected java.nio.channels.SelectionKey register(java.nio.channels.spi.AbstractSelectableChannel, int, java.lang.Object)
    {
        java.nio.SelectorImpl r0, r3;
        java.nio.channels.spi.AbstractSelectableChannel r1;
        int i0;
        java.lang.Object r2;
        java.util.Set r4, $r11, $r13;
        java.nio.SelectionKeyImpl r5, $r12;
        java.lang.Throwable r6, r7, $r15, $r16;
        java.nio.channels.spi.SelectorProvider $r8, $r9;
        boolean $z0;
        java.nio.channels.IllegalSelectorException $r14;

        r0 := @this: java.nio.SelectorImpl;

        r1 := @parameter0: java.nio.channels.spi.AbstractSelectableChannel;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r8 = virtualinvoke r0.<java.nio.SelectorImpl: java.nio.channels.spi.SelectorProvider provider()>();

        $r9 = virtualinvoke r1.<java.nio.channels.spi.AbstractSelectableChannel: java.nio.channels.spi.SelectorProvider provider()>();

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label1;

        $r14 = new java.nio.channels.IllegalSelectorException;

        specialinvoke $r14.<java.nio.channels.IllegalSelectorException: void <init>()>();

        throw $r14;

     label1:
        r3 = r0;

        entermonitor r0;

     label2:
        $r11 = r0.<java.nio.SelectorImpl: java.util.Set unmodifiableKeys>;

        r4 = $r11;

        entermonitor $r11;

     label3:
        $r12 = new java.nio.SelectionKeyImpl;

        specialinvoke $r12.<java.nio.SelectionKeyImpl: void <init>(java.nio.channels.spi.AbstractSelectableChannel,int,java.lang.Object,java.nio.SelectorImpl)>(r1, i0, r2, r0);

        r5 = $r12;

        $r13 = r0.<java.nio.SelectorImpl: java.util.Set mutableKeys>;

        interfaceinvoke $r13.<java.util.Set: boolean add(java.lang.Object)>(r5);

        specialinvoke r0.<java.nio.SelectorImpl: void ensurePollFdsCapacity()>();

        exitmonitor r4;

     label4:
        exitmonitor r3;

     label5:
        return r5;

     label6:
        $r16 := @caughtexception;

        r6 = $r16;

        exitmonitor r4;

     label7:
        throw r6;

     label8:
        $r15 := @caughtexception;

        r7 = $r15;

        exitmonitor r3;

     label9:
        throw r7;

        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
        catch java.lang.Throwable from label2 to label5 with label8;
        catch java.lang.Throwable from label6 to label9 with label8;
    }

    public synchronized java.util.Set keys()
    {
        java.nio.SelectorImpl r0;
        java.util.Set $r1;

        r0 := @this: java.nio.SelectorImpl;

        specialinvoke r0.<java.nio.SelectorImpl: void checkClosed()>();

        $r1 = r0.<java.nio.SelectorImpl: java.util.Set unmodifiableKeys>;

        return $r1;
    }

    private void checkClosed()
    {
        java.nio.SelectorImpl r0;
        boolean $z0;
        java.nio.channels.ClosedSelectorException $r1;

        r0 := @this: java.nio.SelectorImpl;

        $z0 = virtualinvoke r0.<java.nio.SelectorImpl: boolean isOpen()>();

        if $z0 != 0 goto label1;

        $r1 = new java.nio.channels.ClosedSelectorException;

        specialinvoke $r1.<java.nio.channels.ClosedSelectorException: void <init>()>();

        throw $r1;

     label1:
        return;
    }

    public int select() throws java.io.IOException
    {
        java.nio.SelectorImpl r0;
        int $i0;

        r0 := @this: java.nio.SelectorImpl;

        $i0 = specialinvoke r0.<java.nio.SelectorImpl: int selectInternal(long)>(-1L);

        return $i0;
    }

    public int select(long) throws java.io.IOException
    {
        java.nio.SelectorImpl r0;
        long l0, $l4;
        byte $b1, $b2;
        int $i3;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: java.nio.SelectorImpl;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("timeout < 0: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label1:
        $b2 = l0 cmp 0L;

        if $b2 != 0 goto label2;

        $l4 = -1L;

        goto label3;

     label2:
        $l4 = l0;

     label3:
        $i3 = specialinvoke r0.<java.nio.SelectorImpl: int selectInternal(long)>($l4);

        return $i3;
    }

    public int selectNow() throws java.io.IOException
    {
        java.nio.SelectorImpl r0;
        int $i0;

        r0 := @this: java.nio.SelectorImpl;

        $i0 = specialinvoke r0.<java.nio.SelectorImpl: int selectInternal(long)>(0L);

        return $i0;
    }

    private int selectInternal(long) throws java.io.IOException
    {
        java.nio.SelectorImpl r0, r1;
        long l0;
        java.util.Set r2, r3, $r11, $r12;
        boolean z0, $z1;
        java.lang.Object r4, $r13;
        java.lang.Throwable r5, r6, r7, r8, r9, $r19, $r20, $r22, $r23, $r24;
        byte $b1;
        libcore.io.Os $r14;
        java.util.UnsafeArrayList $r15;
        int $i3, $i4, $i5, $i6, $i7, i8, i9, i10;
        java.lang.Object[] $r16;
        android.system.StructPollfd[] $r17;
        android.system.ErrnoException $r18, r25;
        java.io.IOException $r21;

        r0 := @this: java.nio.SelectorImpl;

        l0 := @parameter0: long;

        specialinvoke r0.<java.nio.SelectorImpl: void checkClosed()>();

        r1 = r0;

        entermonitor r0;

     label01:
        $r11 = r0.<java.nio.SelectorImpl: java.util.Set unmodifiableKeys>;

        r2 = $r11;

        entermonitor $r11;

     label02:
        $r12 = r0.<java.nio.SelectorImpl: java.util.Set selectedKeys>;

        r3 = $r12;

        entermonitor $r12;

     label03:
        specialinvoke r0.<java.nio.SelectorImpl: int doCancel()>();

        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        z0 = $z1;

        $r13 = r0.<java.nio.SelectorImpl: java.lang.Object keysLock>;

        r4 = $r13;

        entermonitor $r13;

     label06:
        specialinvoke r0.<java.nio.SelectorImpl: void preparePollFds()>();

        exitmonitor r4;

     label07:
        goto label10;

     label08:
        $r19 := @caughtexception;

        r5 = $r19;

        exitmonitor r4;

     label09:
        throw r5;

     label10:
        i8 = -1;

     label11:
        if z0 == 0 goto label12;

        virtualinvoke r0.<java.nio.SelectorImpl: void begin()>();

     label12:
        $r14 = <libcore.io.Libcore: libcore.io.Os os>;

        $r15 = r0.<java.nio.SelectorImpl: java.util.UnsafeArrayList pollFds>;

        $r16 = virtualinvoke $r15.<java.util.UnsafeArrayList: java.lang.Object[] array()>();

        $r17 = (android.system.StructPollfd[]) $r16;

        $i3 = (int) l0;

        i8 = interfaceinvoke $r14.<libcore.io.Os: int poll(android.system.StructPollfd[],int)>($r17, $i3);

     label13:
        goto label15;

     label14:
        $r18 := @caughtexception;

        r25 = $r18;

        $i7 = r25.<android.system.ErrnoException: int errno>;

        $i6 = <android.system.OsConstants: int EINTR>;

        if $i7 == $i6 goto label15;

        $r21 = virtualinvoke r25.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r21;

     label15:
        if z0 == 0 goto label19;

        virtualinvoke r0.<java.nio.SelectorImpl: void end()>();

        goto label19;

     label16:
        $r22 := @caughtexception;

        r6 = $r22;

     label17:
        if z0 == 0 goto label18;

        virtualinvoke r0.<java.nio.SelectorImpl: void end()>();

     label18:
        throw r6;

     label19:
        if i8 <= 0 goto label20;

        $i5 = specialinvoke r0.<java.nio.SelectorImpl: int processPollFds()>();

        goto label21;

     label20:
        $i5 = 0;

     label21:
        i9 = $i5;

        $i4 = specialinvoke r0.<java.nio.SelectorImpl: int doCancel()>();

        i10 = i9 - $i4;

        exitmonitor r3;

     label22:
        exitmonitor r2;

     label23:
        exitmonitor r1;

     label24:
        return i10;

     label25:
        $r23 := @caughtexception;

        r7 = $r23;

        exitmonitor r3;

     label26:
        throw r7;

     label27:
        $r20 := @caughtexception;

        r8 = $r20;

        exitmonitor r2;

     label28:
        throw r8;

     label29:
        $r24 := @caughtexception;

        r9 = $r24;

        exitmonitor r1;

     label30:
        throw r9;

        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch android.system.ErrnoException from label12 to label13 with label14;
        catch java.lang.Throwable from label11 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
        catch java.lang.Throwable from label03 to label22 with label25;
        catch java.lang.Throwable from label25 to label26 with label25;
        catch java.lang.Throwable from label02 to label23 with label27;
        catch java.lang.Throwable from label25 to label28 with label27;
        catch java.lang.Throwable from label01 to label24 with label29;
        catch java.lang.Throwable from label25 to label30 with label29;
    }

    private void setPollFd(int, java.io.FileDescriptor, int, java.lang.Object)
    {
        java.nio.SelectorImpl r0;
        int i0, i1;
        java.io.FileDescriptor r1;
        java.lang.Object r2, $r5;
        android.system.StructPollfd r3;
        java.util.UnsafeArrayList $r4;
        short $s2;

        r0 := @this: java.nio.SelectorImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.io.FileDescriptor;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.Object;

        $r4 = r0.<java.nio.SelectorImpl: java.util.UnsafeArrayList pollFds>;

        $r5 = virtualinvoke $r4.<java.util.UnsafeArrayList: java.lang.Object get(int)>(i0);

        r3 = (android.system.StructPollfd) $r5;

        r3.<android.system.StructPollfd: java.io.FileDescriptor fd> = r1;

        $s2 = (short) i1;

        r3.<android.system.StructPollfd: short events> = $s2;

        r3.<android.system.StructPollfd: java.lang.Object userData> = r2;

        return;
    }

    private void preparePollFds()
    {
        java.nio.SelectorImpl r0;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.util.Iterator r1;
        java.nio.SelectionKeyImpl r2;
        short s2;
        java.util.Set $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.nio.channels.SelectableChannel $r5;
        java.nio.FileDescriptorChannel $r6;
        java.io.FileDescriptor $r7;

        r0 := @this: java.nio.SelectorImpl;

        i0 = 1;

        $r3 = r0.<java.nio.SelectorImpl: java.util.Set mutableKeys>;

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.nio.SelectionKeyImpl) $r4;

        i1 = virtualinvoke r2.<java.nio.SelectionKeyImpl: int interestOpsNoCheck()>();

        s2 = 0;

        $i3 = 17 & i1;

        if $i3 == 0 goto label2;

        $i7 = <android.system.OsConstants: int POLLIN>;

        $i9 = s2 | $i7;

        s2 = (short) $i9;

     label2:
        $i4 = 12 & i1;

        if $i4 == 0 goto label3;

        $i6 = <android.system.OsConstants: int POLLOUT>;

        $i8 = s2 | $i6;

        s2 = (short) $i8;

     label3:
        if s2 == 0 goto label4;

        $i5 = i0;

        i0 = i0 + 1;

        $r5 = virtualinvoke r2.<java.nio.SelectionKeyImpl: java.nio.channels.SelectableChannel channel()>();

        $r6 = (java.nio.FileDescriptorChannel) $r5;

        $r7 = interfaceinvoke $r6.<java.nio.FileDescriptorChannel: java.io.FileDescriptor getFD()>();

        specialinvoke r0.<java.nio.SelectorImpl: void setPollFd(int,java.io.FileDescriptor,int,java.lang.Object)>($i5, $r7, s2, r2);

     label4:
        goto label1;

     label5:
        return;
    }

    private void ensurePollFdsCapacity()
    {
        java.nio.SelectorImpl r0;
        java.util.UnsafeArrayList $r1, $r4;
        int $i0, $i1, $i2;
        java.util.Set $r2;
        android.system.StructPollfd $r3;

        r0 := @this: java.nio.SelectorImpl;

     label1:
        $r1 = r0.<java.nio.SelectorImpl: java.util.UnsafeArrayList pollFds>;

        $i0 = virtualinvoke $r1.<java.util.UnsafeArrayList: int size()>();

        $r2 = r0.<java.nio.SelectorImpl: java.util.Set mutableKeys>;

        $i1 = interfaceinvoke $r2.<java.util.Set: int size()>();

        $i2 = $i1 + 1;

        if $i0 >= $i2 goto label2;

        $r4 = r0.<java.nio.SelectorImpl: java.util.UnsafeArrayList pollFds>;

        $r3 = new android.system.StructPollfd;

        specialinvoke $r3.<android.system.StructPollfd: void <init>()>();

        virtualinvoke $r4.<java.util.UnsafeArrayList: boolean add(java.lang.Object)>($r3);

        goto label1;

     label2:
        return;
    }

    private int processPollFds() throws java.io.IOException
    {
        java.nio.SelectorImpl r0;
        byte[] r1;
        int i0, i1, i2, $i3, $i5, $i7, $i8, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25, i26;
        android.system.StructPollfd r2, $r6;
        java.nio.SelectionKeyImpl r3;
        boolean z0, $z2;
        java.util.UnsafeArrayList $r4, $r7, $r8;
        java.lang.Object $r5, $r9, $r10;
        short $s4, $s6, $s9, $s10, $s15, $s21;
        java.io.FileDescriptor $r11, $r14;
        java.util.Set $r12, $r13;

        r0 := @this: java.nio.SelectorImpl;

        $r4 = r0.<java.nio.SelectorImpl: java.util.UnsafeArrayList pollFds>;

        $r5 = virtualinvoke $r4.<java.util.UnsafeArrayList: java.lang.Object get(int)>(0);

        $r6 = (android.system.StructPollfd) $r5;

        $s4 = $r6.<android.system.StructPollfd: short revents>;

        $i3 = <android.system.OsConstants: int POLLIN>;

        if $s4 != $i3 goto label02;

        r1 = newarray (byte)[8];

     label01:
        $r14 = r0.<java.nio.SelectorImpl: java.io.FileDescriptor wakeupIn>;

        $i25 = staticinvoke <libcore.io.IoBridge: int read(java.io.FileDescriptor,byte[],int,int)>($r14, r1, 0, 1);

        if $i25 <= 0 goto label02;

        goto label01;

     label02:
        i26 = 0;

        i0 = 1;

     label03:
        $r7 = r0.<java.nio.SelectorImpl: java.util.UnsafeArrayList pollFds>;

        $i5 = virtualinvoke $r7.<java.util.UnsafeArrayList: int size()>();

        if i0 >= $i5 goto label13;

        $r8 = r0.<java.nio.SelectorImpl: java.util.UnsafeArrayList pollFds>;

        $r9 = virtualinvoke $r8.<java.util.UnsafeArrayList: java.lang.Object get(int)>(i0);

        r2 = (android.system.StructPollfd) $r9;

        $s6 = r2.<android.system.StructPollfd: short revents>;

        if $s6 != 0 goto label04;

        goto label12;

     label04:
        $r11 = r2.<android.system.StructPollfd: java.io.FileDescriptor fd>;

        if $r11 != null goto label05;

        goto label13;

     label05:
        $r10 = r2.<android.system.StructPollfd: java.lang.Object userData>;

        r3 = (java.nio.SelectionKeyImpl) $r10;

        r2.<android.system.StructPollfd: java.io.FileDescriptor fd> = null;

        r2.<android.system.StructPollfd: java.lang.Object userData> = null;

        i1 = virtualinvoke r3.<java.nio.SelectionKeyImpl: int interestOpsNoCheck()>();

        i2 = 0;

        $s9 = r2.<android.system.StructPollfd: short revents>;

        $i7 = <android.system.OsConstants: int POLLHUP>;

        $i8 = $s9 & $i7;

        if $i8 != 0 goto label06;

        $s21 = r2.<android.system.StructPollfd: short revents>;

        $i24 = <android.system.OsConstants: int POLLERR>;

        $i22 = $s21 & $i24;

        if $i22 == 0 goto label07;

     label06:
        i2 = i2 | i1;

     label07:
        $s10 = r2.<android.system.StructPollfd: short revents>;

        $i11 = <android.system.OsConstants: int POLLIN>;

        $i13 = $s10 & $i11;

        if $i13 == 0 goto label08;

        $i23 = i1 & 17;

        i2 = i2 | $i23;

     label08:
        $s15 = r2.<android.system.StructPollfd: short revents>;

        $i12 = <android.system.OsConstants: int POLLOUT>;

        $i14 = $s15 & $i12;

        if $i14 == 0 goto label10;

        $z2 = virtualinvoke r3.<java.nio.SelectionKeyImpl: boolean isConnected()>();

        if $z2 == 0 goto label09;

        $i19 = i1 & 4;

        i2 = i2 | $i19;

        goto label10;

     label09:
        $i18 = i1 & 8;

        i2 = i2 | $i18;

     label10:
        if i2 == 0 goto label12;

        $r12 = r0.<java.nio.SelectorImpl: java.util.Set mutableSelectedKeys>;

        z0 = interfaceinvoke $r12.<java.util.Set: boolean contains(java.lang.Object)>(r3);

        if z0 == 0 goto label11;

        $i16 = virtualinvoke r3.<java.nio.SelectionKeyImpl: int readyOps()>();

        if $i16 == i2 goto label11;

        $i17 = virtualinvoke r3.<java.nio.SelectionKeyImpl: int readyOps()>();

        $i20 = $i17 | i2;

        virtualinvoke r3.<java.nio.SelectionKeyImpl: void setReadyOps(int)>($i20);

        i26 = i26 + 1;

        goto label12;

     label11:
        if z0 != 0 goto label12;

        virtualinvoke r3.<java.nio.SelectionKeyImpl: void setReadyOps(int)>(i2);

        $r13 = r0.<java.nio.SelectorImpl: java.util.Set mutableSelectedKeys>;

        interfaceinvoke $r13.<java.util.Set: boolean add(java.lang.Object)>(r3);

        i26 = i26 + 1;

     label12:
        i0 = i0 + 1;

        goto label03;

     label13:
        return i26;
    }

    public synchronized java.util.Set selectedKeys()
    {
        java.nio.SelectorImpl r0;
        java.util.Set $r1;

        r0 := @this: java.nio.SelectorImpl;

        specialinvoke r0.<java.nio.SelectorImpl: void checkClosed()>();

        $r1 = r0.<java.nio.SelectorImpl: java.util.Set selectedKeys>;

        return $r1;
    }

    private int doCancel()
    {
        java.nio.SelectorImpl r0;
        int i0, $i1;
        java.util.Set r1, r2, $r8, $r9;
        java.util.Iterator r3;
        java.nio.channels.SelectionKey r4;
        java.lang.Throwable r5, $r11;
        boolean $z0, $z2;
        java.lang.Object $r7;
        java.nio.channels.spi.AbstractSelectionKey $r10;

        r0 := @this: java.nio.SelectorImpl;

        i0 = 0;

        r1 = virtualinvoke r0.<java.nio.SelectorImpl: java.util.Set cancelledKeys()>();

        r2 = r1;

        entermonitor r1;

     label1:
        $i1 = interfaceinvoke r1.<java.util.Set: int size()>();

        if $i1 <= 0 goto label5;

        r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.nio.channels.SelectionKey) $r7;

        $r8 = r0.<java.nio.SelectorImpl: java.util.Set mutableKeys>;

        interfaceinvoke $r8.<java.util.Set: boolean remove(java.lang.Object)>(r4);

        $r10 = (java.nio.channels.spi.AbstractSelectionKey) r4;

        virtualinvoke r0.<java.nio.SelectorImpl: void deregister(java.nio.channels.spi.AbstractSelectionKey)>($r10);

        $r9 = r0.<java.nio.SelectorImpl: java.util.Set mutableSelectedKeys>;

        $z2 = interfaceinvoke $r9.<java.util.Set: boolean remove(java.lang.Object)>(r4);

        if $z2 == 0 goto label3;

        i0 = i0 + 1;

     label3:
        goto label2;

     label4:
        interfaceinvoke r1.<java.util.Set: void clear()>();

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r2;

     label8:
        throw r5;

     label9:
        return i0;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public java.nio.channels.Selector wakeup()
    {
        java.nio.SelectorImpl r0;
        byte[] $r2;
        java.io.FileDescriptor $r3;
        libcore.io.Os $r4;
        android.system.ErrnoException $r5;
        java.io.InterruptedIOException $r6;

        r0 := @this: java.nio.SelectorImpl;

     label1:
        $r4 = <libcore.io.Libcore: libcore.io.Os os>;

        $r3 = r0.<java.nio.SelectorImpl: java.io.FileDescriptor wakeupOut>;

        $r2 = newarray (byte)[1];

        $r2[0] = 1;

        interfaceinvoke $r4.<libcore.io.Os: int write(java.io.FileDescriptor,byte[],int,int)>($r3, $r2, 0, 1);

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        goto label5;

     label4:
        $r6 := @caughtexception;

     label5:
        return r0;

        catch android.system.ErrnoException from label1 to label2 with label3;
        catch java.io.InterruptedIOException from label1 to label2 with label4;
    }
}
