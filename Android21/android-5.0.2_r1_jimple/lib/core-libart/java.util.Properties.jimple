public class java.util.Properties extends java.util.Hashtable
{
    private static final long serialVersionUID;
    private transient javax.xml.parsers.DocumentBuilder builder;
    private static final java.lang.String PROP_DTD_NAME;
    private static final java.lang.String PROP_DTD;
    protected java.util.Properties defaults;
    private static final int NONE;
    private static final int SLASH;
    private static final int UNICODE;
    private static final int CONTINUE;
    private static final int KEY_DONE;
    private static final int IGNORE;

    public void <init>()
    {
        java.util.Properties r0;

        r0 := @this: java.util.Properties;

        specialinvoke r0.<java.util.Hashtable: void <init>()>();

        r0.<java.util.Properties: javax.xml.parsers.DocumentBuilder builder> = null;

        return;
    }

    public void <init>(java.util.Properties)
    {
        java.util.Properties r0, r1;

        r0 := @this: java.util.Properties;

        r1 := @parameter0: java.util.Properties;

        specialinvoke r0.<java.util.Hashtable: void <init>()>();

        r0.<java.util.Properties: javax.xml.parsers.DocumentBuilder builder> = null;

        r0.<java.util.Properties: java.util.Properties defaults> = r1;

        return;
    }

    private void dumpString(java.lang.StringBuilder, java.lang.String, boolean)
    {
        java.util.Properties r0;
        java.lang.StringBuilder r1;
        java.lang.String r2, r3, $r8;
        boolean z0;
        int i0, i2, $i3, $i4, $i5, $i6, $i7;
        char c1, $c8;

        r0 := @this: java.util.Properties;

        r1 := @parameter0: java.lang.StringBuilder;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        i0 = 0;

        if z0 != 0 goto label01;

        $i7 = virtualinvoke r2.<java.lang.String: int length()>();

        if i0 >= $i7 goto label01;

        $c8 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i0);

        if $c8 != 32 goto label01;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\ ");

        i0 = i0 + 1;

     label01:
        $i3 = virtualinvoke r2.<java.lang.String: int length()>();

        if i0 >= $i3 goto label13;

        c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i0);

        tableswitch(c1)
        {
            case 9: goto label02;
            case 10: goto label03;
            case 11: goto label06;
            case 12: goto label04;
            case 13: goto label05;
            default: goto label06;
        };

     label02:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\t");

        goto label12;

     label03:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\n");

        goto label12;

     label04:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\f");

        goto label12;

     label05:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\r");

        goto label12;

     label06:
        $r8 = "\\#!=:";

        $i4 = virtualinvoke $r8.<java.lang.String: int indexOf(int)>(c1);

        if $i4 >= 0 goto label07;

        if z0 == 0 goto label08;

        if c1 != 32 goto label08;

     label07:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);

     label08:
        if c1 < 32 goto label09;

        if c1 > 126 goto label09;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        goto label12;

     label09:
        r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(c1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\u");

        i2 = 0;

     label10:
        $i6 = virtualinvoke r3.<java.lang.String: int length()>();

        $i5 = 4 - $i6;

        if i2 >= $i5 goto label11;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        i2 = i2 + 1;

        goto label10;

     label11:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

     label12:
        i0 = i0 + 1;

        goto label01;

     label13:
        return;
    }

    public java.lang.String getProperty(java.lang.String)
    {
        java.util.Properties r0, $r4, $r5;
        java.lang.String r1, r3, $r6;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this: java.util.Properties;

        r1 := @parameter0: java.lang.String;

        r2 = specialinvoke r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = r2 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r6 = (java.lang.String) r2;

        goto label2;

     label1:
        $r6 = null;

     label2:
        r3 = $r6;

        if r3 != null goto label3;

        $r4 = r0.<java.util.Properties: java.util.Properties defaults>;

        if $r4 == null goto label3;

        $r5 = r0.<java.util.Properties: java.util.Properties defaults>;

        r3 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1);

     label3:
        return r3;
    }

    public java.lang.String getProperty(java.lang.String, java.lang.String)
    {
        java.util.Properties r0, $r5, $r6;
        java.lang.String r1, r2, r4, $r7;
        java.lang.Object r3;
        boolean $z0;

        r0 := @this: java.util.Properties;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = specialinvoke r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $z0 = r3 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r7 = (java.lang.String) r3;

        goto label2;

     label1:
        $r7 = null;

     label2:
        r4 = $r7;

        if r4 != null goto label3;

        $r5 = r0.<java.util.Properties: java.util.Properties defaults>;

        if $r5 == null goto label3;

        $r6 = r0.<java.util.Properties: java.util.Properties defaults>;

        r4 = virtualinvoke $r6.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1);

     label3:
        if r4 != null goto label4;

        return r2;

     label4:
        return r4;
    }

    public void list(java.io.PrintStream)
    {
        java.util.Properties r0;
        java.io.PrintStream r1;

        r0 := @this: java.util.Properties;

        r1 := @parameter0: java.io.PrintStream;

        specialinvoke r0.<java.util.Properties: void listToAppendable(java.lang.Appendable)>(r1);

        return;
    }

    public void list(java.io.PrintWriter)
    {
        java.util.Properties r0;
        java.io.PrintWriter r1;

        r0 := @this: java.util.Properties;

        r1 := @parameter0: java.io.PrintWriter;

        specialinvoke r0.<java.util.Properties: void listToAppendable(java.lang.Appendable)>(r1);

        return;
    }

    private void listToAppendable(java.lang.Appendable)
    {
        java.util.Properties r0, r6;
        java.lang.Appendable r1;
        java.lang.StringBuilder r2, $r7;
        java.util.Enumeration r3;
        java.lang.String r4, r5, $r14, $r16, $r18;
        boolean $z0;
        java.lang.Object $r8, $r11, $r19;
        int $i0;
        java.io.IOException $r21, r24;
        java.lang.NullPointerException $r22;
        java.lang.AssertionError $r23;

        r0 := @this: java.util.Properties;

        r1 := @parameter0: java.lang.Appendable;

     label01:
        if r1 != null goto label02;

        $r22 = new java.lang.NullPointerException;

        specialinvoke $r22.<java.lang.NullPointerException: void <init>(java.lang.String)>("out == null");

        throw $r22;

     label02:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>(80);

        r2 = $r7;

        r3 = virtualinvoke r0.<java.util.Properties: java.util.Enumeration propertyNames()>();

     label03:
        $z0 = interfaceinvoke r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label08;

        $r8 = interfaceinvoke r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r4 = (java.lang.String) $r8;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r11 = specialinvoke r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (java.lang.String) $r11;

        r6 = r0.<java.util.Properties: java.util.Properties defaults>;

     label04:
        if r5 != null goto label05;

        $r19 = virtualinvoke r6.<java.util.Properties: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (java.lang.String) $r19;

        r6 = r6.<java.util.Properties: java.util.Properties defaults>;

        goto label04;

     label05:
        $i0 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i0 <= 40 goto label06;

        $r18 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, 37);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");

        goto label07;

     label06:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

     label07:
        $r14 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r16);

        virtualinvoke r2.<java.lang.StringBuilder: void setLength(int)>(0);

        goto label03;

     label08:
        goto label10;

     label09:
        $r21 := @caughtexception;

        r24 = $r21;

        $r23 = new java.lang.AssertionError;

        specialinvoke $r23.<java.lang.AssertionError: void <init>(java.lang.Object)>(r24);

        throw $r23;

     label10:
        return;

        catch java.io.IOException from label01 to label08 with label09;
    }

    public synchronized void load(java.io.InputStream) throws java.io.IOException
    {
        java.util.Properties r0;
        java.io.InputStream r1;
        java.io.InputStreamReader $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: java.util.Properties;

        r1 := @parameter0: java.io.InputStream;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("in == null");

        throw $r3;

     label1:
        $r2 = new java.io.InputStreamReader;

        specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r1, "ISO-8859-1");

        virtualinvoke r0.<java.util.Properties: void load(java.io.Reader)>($r2);

        return;
    }

    public synchronized void load(java.io.Reader) throws java.io.IOException
    {
        java.util.Properties r0;
        java.io.Reader r1;
        byte b0;
        int i1, i2, i4, i5, i6, $i7, $i8, $i10, $i11, $i12, $i13, i14, i15;
        char c3, $c9, c16;
        char[] r2, r4;
        boolean z0, $z1;
        java.io.BufferedReader r3, $r7;
        java.lang.String r5, r6, $r8, $r9, $r10, $r14, r20, r21;
        java.lang.IllegalArgumentException $r12, $r18;
        java.lang.StringBuilder $r15, $r16, $r17;
        java.lang.NullPointerException $r19;

        r0 := @this: java.util.Properties;

        r1 := @parameter0: java.io.Reader;

        if r1 != null goto label01;

        $r19 = new java.lang.NullPointerException;

        specialinvoke $r19.<java.lang.NullPointerException: void <init>(java.lang.String)>("in == null");

        throw $r19;

     label01:
        b0 = 0;

        i1 = 0;

        i2 = 0;

        r2 = newarray (char)[40];

        i4 = 0;

        i5 = -1;

        z0 = 1;

        $r7 = new java.io.BufferedReader;

        specialinvoke $r7.<java.io.BufferedReader: void <init>(java.io.Reader)>(r1);

        r3 = $r7;

     label02:
        i6 = virtualinvoke r3.<java.io.BufferedReader: int read()>();

        if i6 != -1 goto label03;

        goto label36;

     label03:
        c3 = (char) i6;

        $i7 = lengthof r2;

        if i4 != $i7 goto label04;

        $i13 = lengthof r2;

        $i12 = $i13 * 2;

        r4 = newarray (char)[$i12];

        staticinvoke <java.lang.System: void arraycopy(char[],int,char[],int,int)>(r2, 0, r4, 0, i4);

        r2 = r4;

     label04:
        if b0 != 2 goto label07;

        i14 = staticinvoke <java.lang.Character: int digit(char,int)>(c3, 16);

        if i14 < 0 goto label05;

        $i11 = i1 << 4;

        i1 = $i11 + i14;

        i2 = i2 + 1;

        if i2 >= 4 goto label06;

        goto label02;

     label05:
        if i2 > 4 goto label06;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid Unicode sequence: illegal character");

        throw $r12;

     label06:
        b0 = 0;

        $i10 = i4;

        i4 = i4 + 1;

        $c9 = (char) i1;

        r2[$i10] = $c9;

        if c3 == 10 goto label07;

        goto label02;

     label07:
        if b0 != 1 goto label17;

        b0 = 0;

        lookupswitch(c3)
        {
            case 10: goto label09;
            case 13: goto label08;
            case 98: goto label10;
            case 102: goto label11;
            case 110: goto label12;
            case 114: goto label13;
            case 116: goto label14;
            case 117: goto label15;
            default: goto label16;
        };

     label08:
        b0 = 3;

        goto label02;

     label09:
        b0 = 5;

        goto label02;

     label10:
        c3 = 8;

        goto label16;

     label11:
        c3 = 12;

        goto label16;

     label12:
        c3 = 10;

        goto label16;

     label13:
        c3 = 13;

        goto label16;

     label14:
        c3 = 9;

        goto label16;

     label15:
        b0 = 2;

        i2 = 0;

        i1 = 0;

        goto label02;

     label16:
        goto label34;

     label17:
        lookupswitch(c3)
        {
            case 10: goto label21;
            case 13: goto label22;
            case 33: goto label18;
            case 35: goto label18;
            case 58: goto label28;
            case 61: goto label28;
            case 92: goto label26;
            default: goto label29;
        };

     label18:
        if z0 == 0 goto label29;

     label19:
        i15 = virtualinvoke r3.<java.io.BufferedReader: int read()>();

        if i15 != -1 goto label20;

        goto label02;

     label20:
        c16 = (char) i15;

        if c16 == 13 goto label02;

        if c16 != 10 goto label19;

        goto label02;

     label21:
        if b0 != 3 goto label22;

        b0 = 5;

        goto label02;

     label22:
        b0 = 0;

        z0 = 1;

        if i4 > 0 goto label23;

        if i4 != 0 goto label25;

        if i5 != 0 goto label25;

     label23:
        if i5 != -1 goto label24;

        i5 = i4;

     label24:
        $r8 = new java.lang.String;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>(r2, 0, i4);

        r20 = $r8;

        $r10 = virtualinvoke r20.<java.lang.String: java.lang.String substring(int,int)>(0, i5);

        $r9 = virtualinvoke r20.<java.lang.String: java.lang.String substring(int)>(i5);

        virtualinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r9);

     label25:
        i5 = -1;

        i4 = 0;

        goto label02;

     label26:
        if b0 != 4 goto label27;

        i5 = i4;

     label27:
        b0 = 1;

        goto label02;

     label28:
        if i5 != -1 goto label29;

        b0 = 0;

        i5 = i4;

        goto label02;

     label29:
        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c3);

        if $z1 == 0 goto label32;

        if b0 != 3 goto label30;

        b0 = 5;

     label30:
        if i4 == 0 goto label02;

        if i4 == i5 goto label02;

        if b0 != 5 goto label31;

        goto label02;

     label31:
        if i5 != -1 goto label32;

        b0 = 4;

        goto label02;

     label32:
        if b0 == 5 goto label33;

        if b0 != 3 goto label34;

     label33:
        b0 = 0;

     label34:
        z0 = 0;

        if b0 != 4 goto label35;

        i5 = i4;

        b0 = 0;

     label35:
        $i8 = i4;

        i4 = i4 + 1;

        r2[$i8] = c3;

        goto label02;

     label36:
        if b0 != 2 goto label37;

        if i2 > 4 goto label37;

        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid Unicode sequence: expected format \\uxxxx");

        throw $r18;

     label37:
        if i5 != -1 goto label38;

        if i4 <= 0 goto label38;

        i5 = i4;

     label38:
        if i5 < 0 goto label40;

        $r14 = new java.lang.String;

        specialinvoke $r14.<java.lang.String: void <init>(char[],int,int)>(r2, 0, i4);

        r21 = $r14;

        r5 = virtualinvoke r21.<java.lang.String: java.lang.String substring(int,int)>(0, i5);

        r6 = virtualinvoke r21.<java.lang.String: java.lang.String substring(int)>(i5);

        if b0 != 1 goto label39;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r15 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000");

        r6 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

     label39:
        virtualinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r6);

     label40:
        return;
    }

    public java.util.Enumeration propertyNames()
    {
        java.util.Properties r0;
        java.util.Hashtable r1, $r2;
        java.util.Enumeration $r3;

        r0 := @this: java.util.Properties;

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r1 = $r2;

        specialinvoke r0.<java.util.Properties: void selectProperties(java.util.Hashtable,boolean)>(r1, 0);

        $r3 = virtualinvoke r1.<java.util.Hashtable: java.util.Enumeration keys()>();

        return $r3;
    }

    public java.util.Set stringPropertyNames()
    {
        java.util.Properties r0;
        java.util.Hashtable r1, $r2;
        java.util.Set $r3, $r4;

        r0 := @this: java.util.Properties;

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r1 = $r2;

        specialinvoke r0.<java.util.Properties: void selectProperties(java.util.Hashtable,boolean)>(r1, 1);

        $r3 = virtualinvoke r1.<java.util.Hashtable: java.util.Set keySet()>();

        $r4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r3);

        return $r4;
    }

    private void selectProperties(java.util.Hashtable, boolean)
    {
        java.util.Properties r0, $r5, $r7;
        java.util.Hashtable r1;
        boolean z0, $z1, $z2;
        java.util.Enumeration r2;
        java.lang.Object r3, r4;

        r0 := @this: java.util.Properties;

        r1 := @parameter0: java.util.Hashtable;

        z0 := @parameter1: boolean;

        $r5 = r0.<java.util.Properties: java.util.Properties defaults>;

        if $r5 == null goto label1;

        $r7 = r0.<java.util.Properties: java.util.Properties defaults>;

        specialinvoke $r7.<java.util.Properties: void selectProperties(java.util.Hashtable,boolean)>(r1, z0);

     label1:
        r2 = virtualinvoke r0.<java.util.Properties: java.util.Enumeration keys()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label4;

        r3 = interfaceinvoke r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        if z0 == 0 goto label3;

        $z2 = r3 instanceof java.lang.String;

        if $z2 != 0 goto label3;

        goto label2;

     label3:
        r4 = virtualinvoke r0.<java.util.Properties: java.lang.Object get(java.lang.Object)>(r3);

        virtualinvoke r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);

        goto label2;

     label4:
        return;
    }

    public void save(java.io.OutputStream, java.lang.String)
    {
        java.util.Properties r0;
        java.io.OutputStream r1;
        java.lang.String r2;
        java.io.IOException $r4;

        r0 := @this: java.util.Properties;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.lang.String;

     label1:
        virtualinvoke r0.<java.util.Properties: void store(java.io.OutputStream,java.lang.String)>(r1, r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.Object setProperty(java.lang.String, java.lang.String)
    {
        java.util.Properties r0;
        java.lang.String r1, r2;
        java.lang.Object $r3;

        r0 := @this: java.util.Properties;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r3;
    }

    public synchronized void store(java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        java.util.Properties r0;
        java.io.OutputStream r1;
        java.lang.String r2;
        java.io.OutputStreamWriter $r3;

        r0 := @this: java.util.Properties;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.io.OutputStreamWriter;

        specialinvoke $r3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r1, "ISO-8859-1");

        virtualinvoke r0.<java.util.Properties: void store(java.io.Writer,java.lang.String)>($r3, r2);

        return;
    }

    public synchronized void store(java.io.Writer, java.lang.String) throws java.io.IOException
    {
        java.util.Properties r0;
        java.io.Writer r1;
        java.lang.String r2, r6, $r8, $r9, $r16, $r17, $r18, $r20;
        java.lang.StringBuilder r3, $r10;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        java.util.Date $r7;
        java.util.Set $r11;
        boolean $z0;
        java.lang.Object $r12, $r13, $r14;

        r0 := @this: java.util.Properties;

        r1 := @parameter0: java.io.Writer;

        r2 := @parameter1: java.lang.String;

        if r2 == null goto label1;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("#");

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>(r2);

        $r20 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r20);

     label1:
        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>("#");

        $r7 = new java.util.Date;

        specialinvoke $r7.<java.util.Date: void <init>()>();

        $r8 = virtualinvoke $r7.<java.util.Date: java.lang.String toString()>();

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r8);

        $r9 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(int)>(200);

        r3 = $r10;

        $r11 = virtualinvoke r0.<java.util.Properties: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r12;

        $r13 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = (java.lang.String) $r13;

        specialinvoke r0.<java.util.Properties: void dumpString(java.lang.StringBuilder,java.lang.String,boolean)>(r3, r6, 1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r14 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r17 = (java.lang.String) $r14;

        specialinvoke r0.<java.util.Properties: void dumpString(java.lang.StringBuilder,java.lang.String,boolean)>(r3, $r17, 0);

        $r16 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r18);

        virtualinvoke r3.<java.lang.StringBuilder: void setLength(int)>(0);

        goto label2;

     label3:
        virtualinvoke r1.<java.io.Writer: void flush()>();

        return;
    }

    public synchronized void loadFromXML(java.io.InputStream) throws java.io.IOException, java.util.InvalidPropertiesFormatException
    {
        java.util.Properties r0;
        java.io.InputStream r1;
        javax.xml.parsers.DocumentBuilderFactory r2;
        javax.xml.parsers.ParserConfigurationException r3, $r21;
        int i0, i1;
        org.w3c.dom.Element r4;
        java.lang.String r5, r6;
        javax.xml.parsers.DocumentBuilder $r7, $r8, $r11, $r12, $r14;
        org.w3c.dom.Node $r9;
        java.util.Properties$1 $r13;
        java.util.Properties$2 $r15;
        org.xml.sax.SAXException $r16, r25;
        java.lang.NullPointerException $r17;
        java.io.IOException $r18, r24;
        java.util.InvalidPropertiesFormatException $r19;
        java.lang.Error $r20;
        org.w3c.dom.Document r22;
        org.w3c.dom.NodeList r23;

        r0 := @this: java.util.Properties;

        r1 := @parameter0: java.io.InputStream;

        if r1 != null goto label01;

        $r17 = new java.lang.NullPointerException;

        specialinvoke $r17.<java.lang.NullPointerException: void <init>(java.lang.String)>("in == null");

        throw $r17;

     label01:
        $r7 = r0.<java.util.Properties: javax.xml.parsers.DocumentBuilder builder>;

        if $r7 != null goto label06;

        r2 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

     label02:
        $r11 = virtualinvoke r2.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        r0.<java.util.Properties: javax.xml.parsers.DocumentBuilder builder> = $r11;

     label03:
        goto label05;

     label04:
        $r21 := @caughtexception;

        r3 = $r21;

        $r20 = new java.lang.Error;

        specialinvoke $r20.<java.lang.Error: void <init>(java.lang.Throwable)>(r3);

        throw $r20;

     label05:
        $r12 = r0.<java.util.Properties: javax.xml.parsers.DocumentBuilder builder>;

        $r13 = new java.util.Properties$1;

        specialinvoke $r13.<java.util.Properties$1: void <init>(java.util.Properties)>(r0);

        virtualinvoke $r12.<javax.xml.parsers.DocumentBuilder: void setErrorHandler(org.xml.sax.ErrorHandler)>($r13);

        $r14 = r0.<java.util.Properties: javax.xml.parsers.DocumentBuilder builder>;

        $r15 = new java.util.Properties$2;

        specialinvoke $r15.<java.util.Properties$2: void <init>(java.util.Properties)>(r0);

        virtualinvoke $r14.<javax.xml.parsers.DocumentBuilder: void setEntityResolver(org.xml.sax.EntityResolver)>($r15);

     label06:
        $r8 = r0.<java.util.Properties: javax.xml.parsers.DocumentBuilder builder>;

        r22 = virtualinvoke $r8.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>(r1);

        r23 = interfaceinvoke r22.<org.w3c.dom.Document: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("entry");

        if r23 != null goto label08;

     label07:
        return;

     label08:
        i0 = interfaceinvoke r23.<org.w3c.dom.NodeList: int getLength()>();

        i1 = 0;

     label09:
        if i1 >= i0 goto label10;

        $r9 = interfaceinvoke r23.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i1);

        r4 = (org.w3c.dom.Element) $r9;

        r5 = interfaceinvoke r4.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("key");

        r6 = interfaceinvoke r4.<org.w3c.dom.Element: java.lang.String getTextContent()>();

        virtualinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r6);

        i1 = i1 + 1;

        goto label09;

     label10:
        goto label13;

     label11:
        $r18 := @caughtexception;

        r24 = $r18;

        throw r24;

     label12:
        $r16 := @caughtexception;

        r25 = $r16;

        $r19 = new java.util.InvalidPropertiesFormatException;

        specialinvoke $r19.<java.util.InvalidPropertiesFormatException: void <init>(java.lang.Throwable)>(r25);

        throw $r19;

     label13:
        return;

        catch javax.xml.parsers.ParserConfigurationException from label02 to label03 with label04;
        catch java.io.IOException from label06 to label07 with label11;
        catch java.io.IOException from label08 to label10 with label11;
        catch org.xml.sax.SAXException from label06 to label07 with label12;
        catch org.xml.sax.SAXException from label08 to label10 with label12;
    }

    public void storeToXML(java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        java.util.Properties r0;
        java.io.OutputStream r1;
        java.lang.String r2;

        r0 := @this: java.util.Properties;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<java.util.Properties: void storeToXML(java.io.OutputStream,java.lang.String,java.lang.String)>(r1, r2, "UTF-8");

        return;
    }

    public synchronized void storeToXML(java.io.OutputStream, java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.util.Properties r0;
        java.io.OutputStream r1;
        java.lang.String r2, r3, r4, r8, r9, $r15, $r17, $r18, $r28, $r34;
        java.util.Iterator r6;
        java.util.Map$Entry r7;
        java.nio.charset.Charset $r10;
        java.io.PrintStream $r11, $r24, $r32, r36;
        java.util.Set $r12;
        boolean $z0;
        java.lang.Object $r13, $r14, $r16;
        java.lang.NullPointerException $r19, $r20;
        java.lang.StringBuilder $r21, $r23, $r25, $r26, $r29, $r30, $r31, $r33;
        java.nio.charset.IllegalCharsetNameException $r22;
        java.nio.charset.UnsupportedCharsetException $r27;

        r0 := @this: java.util.Properties;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        if r1 != null goto label1;

        $r19 = new java.lang.NullPointerException;

        specialinvoke $r19.<java.lang.NullPointerException: void <init>(java.lang.String)>("os == null");

        throw $r19;

     label1:
        if r3 != null goto label2;

        $r20 = new java.lang.NullPointerException;

        specialinvoke $r20.<java.lang.NullPointerException: void <init>(java.lang.String)>("encoding == null");

        throw $r20;

     label2:
        $r10 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r3);

        r4 = virtualinvoke $r10.<java.nio.charset.Charset: java.lang.String name()>();

     label3:
        goto label6;

     label4:
        $r22 := @caughtexception;

        $r24 = <java.lang.System: java.io.PrintStream out>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Warning: encoding name ");

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is illegal, using UTF-8 as default encoding");

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r28);

        r4 = "UTF-8";

        goto label6;

     label5:
        $r27 := @caughtexception;

        $r32 = <java.lang.System: java.io.PrintStream out>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Warning: encoding ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not supported, using UTF-8 as default encoding");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r34);

        r4 = "UTF-8";

     label6:
        $r11 = new java.io.PrintStream;

        specialinvoke $r11.<java.io.PrintStream: void <init>(java.io.OutputStream,boolean,java.lang.String)>(r1, 0, r4);

        r36 = $r11;

        virtualinvoke r36.<java.io.PrintStream: void print(java.lang.String)>("<?xml version=\"1.0\" encoding=\"");

        virtualinvoke r36.<java.io.PrintStream: void print(java.lang.String)>(r4);

        virtualinvoke r36.<java.io.PrintStream: void println(java.lang.String)>("\"?>");

        virtualinvoke r36.<java.io.PrintStream: void print(java.lang.String)>("<!DOCTYPE properties SYSTEM \"");

        virtualinvoke r36.<java.io.PrintStream: void print(java.lang.String)>("http://java.sun.com/dtd/properties.dtd");

        virtualinvoke r36.<java.io.PrintStream: void println(java.lang.String)>("\">");

        virtualinvoke r36.<java.io.PrintStream: void println(java.lang.String)>("<properties>");

        if r2 == null goto label7;

        virtualinvoke r36.<java.io.PrintStream: void print(java.lang.String)>("<comment>");

        $r17 = specialinvoke r0.<java.util.Properties: java.lang.String substitutePredefinedEntries(java.lang.String)>(r2);

        virtualinvoke r36.<java.io.PrintStream: void print(java.lang.String)>($r17);

        virtualinvoke r36.<java.io.PrintStream: void println(java.lang.String)>("</comment>");

     label7:
        $r12 = virtualinvoke r0.<java.util.Properties: java.util.Set entrySet()>();

        r6 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label8:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r14;

        $r13 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        r8 = (java.lang.String) $r13;

        $r16 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        r9 = (java.lang.String) $r16;

        virtualinvoke r36.<java.io.PrintStream: void print(java.lang.String)>("<entry key=\"");

        $r15 = specialinvoke r0.<java.util.Properties: java.lang.String substitutePredefinedEntries(java.lang.String)>(r8);

        virtualinvoke r36.<java.io.PrintStream: void print(java.lang.String)>($r15);

        virtualinvoke r36.<java.io.PrintStream: void print(java.lang.String)>("\">");

        $r18 = specialinvoke r0.<java.util.Properties: java.lang.String substitutePredefinedEntries(java.lang.String)>(r9);

        virtualinvoke r36.<java.io.PrintStream: void print(java.lang.String)>($r18);

        virtualinvoke r36.<java.io.PrintStream: void println(java.lang.String)>("</entry>");

        goto label8;

     label9:
        virtualinvoke r36.<java.io.PrintStream: void println(java.lang.String)>("</properties>");

        virtualinvoke r36.<java.io.PrintStream: void flush()>();

        return;

        catch java.nio.charset.IllegalCharsetNameException from label2 to label3 with label4;
        catch java.nio.charset.UnsupportedCharsetException from label2 to label3 with label5;
    }

    private java.lang.String substitutePredefinedEntries(java.lang.String)
    {
        java.util.Properties r0;
        java.lang.String r1, r2, r3, r4, r5, r6;

        r0 := @this: java.util.Properties;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("&", "&amp;");

        r3 = virtualinvoke r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("<", "&lt;");

        r4 = virtualinvoke r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(">", "&gt;");

        r5 = virtualinvoke r4.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\'", "&apos;");

        r6 = virtualinvoke r5.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\"", "&quot;");

        return r6;
    }

    public static void <clinit>()
    {
        <java.util.Properties: int IGNORE> = 5;

        <java.util.Properties: int KEY_DONE> = 4;

        <java.util.Properties: int CONTINUE> = 3;

        <java.util.Properties: int UNICODE> = 2;

        <java.util.Properties: int SLASH> = 1;

        <java.util.Properties: int NONE> = 0;

        <java.util.Properties: java.lang.String PROP_DTD> = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>    <!ELEMENT properties (comment?, entry*) >    <!ATTLIST properties version CDATA #FIXED \"1.0\" >    <!ELEMENT comment (#PCDATA) >    <!ELEMENT entry (#PCDATA) >    <!ATTLIST entry key CDATA #REQUIRED >";

        <java.util.Properties: java.lang.String PROP_DTD_NAME> = "http://java.sun.com/dtd/properties.dtd";

        <java.util.Properties: long serialVersionUID> = 4112578634029874840L;

        return;
    }
}
