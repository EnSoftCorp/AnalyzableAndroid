public abstract class javax.xml.transform.TransformerFactory extends java.lang.Object
{

    protected void <init>()
    {
        javax.xml.transform.TransformerFactory r0;

        r0 := @this: javax.xml.transform.TransformerFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static javax.xml.transform.TransformerFactory newInstance() throws javax.xml.transform.TransformerFactoryConfigurationError
    {
        java.lang.String r0;
        java.lang.Class $r2;
        java.lang.Object $r3;
        javax.xml.transform.TransformerFactory $r4;
        java.lang.Exception $r5;
        java.lang.NoClassDefFoundError $r6;

        r0 = "org.apache.xalan.processor.TransformerFactoryImpl";

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>();

        $r4 = (javax.xml.transform.TransformerFactory) $r3;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.NoClassDefFoundError;

        specialinvoke $r6.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>(r0);

        throw $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static javax.xml.transform.TransformerFactory newInstance(java.lang.String, java.lang.ClassLoader) throws javax.xml.transform.TransformerFactoryConfigurationError
    {
        java.lang.String r0;
        java.lang.ClassLoader r1;
        java.lang.Class r2, $r3;
        java.lang.Object $r4;
        javax.xml.transform.TransformerFactory $r5;
        java.lang.Thread $r6;
        javax.xml.transform.TransformerFactoryConfigurationError $r7, $r9, $r11, $r13;
        java.lang.InstantiationException $r8, r15;
        java.lang.IllegalAccessException $r10, r16;
        java.lang.ClassNotFoundException $r12, r14;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.ClassLoader;

        if r0 != null goto label1;

        $r7 = new javax.xml.transform.TransformerFactoryConfigurationError;

        specialinvoke $r7.<javax.xml.transform.TransformerFactoryConfigurationError: void <init>(java.lang.String)>("factoryClassName == null");

        throw $r7;

     label1:
        if r1 != null goto label2;

        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r1 = virtualinvoke $r6.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

     label2:
        if r1 == null goto label3;

        $r3 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0);

        goto label4;

     label3:
        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label4:
        r2 = $r3;

        $r4 = virtualinvoke r2.<java.lang.Class: java.lang.Object newInstance()>();

        $r5 = (javax.xml.transform.TransformerFactory) $r4;

     label5:
        return $r5;

     label6:
        $r12 := @caughtexception;

        r14 = $r12;

        $r13 = new javax.xml.transform.TransformerFactoryConfigurationError;

        specialinvoke $r13.<javax.xml.transform.TransformerFactoryConfigurationError: void <init>(java.lang.Exception)>(r14);

        throw $r13;

     label7:
        $r8 := @caughtexception;

        r15 = $r8;

        $r9 = new javax.xml.transform.TransformerFactoryConfigurationError;

        specialinvoke $r9.<javax.xml.transform.TransformerFactoryConfigurationError: void <init>(java.lang.Exception)>(r15);

        throw $r9;

     label8:
        $r10 := @caughtexception;

        r16 = $r10;

        $r11 = new javax.xml.transform.TransformerFactoryConfigurationError;

        specialinvoke $r11.<javax.xml.transform.TransformerFactoryConfigurationError: void <init>(java.lang.Exception)>(r16);

        throw $r11;

        catch java.lang.ClassNotFoundException from label2 to label5 with label6;
        catch java.lang.InstantiationException from label2 to label5 with label7;
        catch java.lang.IllegalAccessException from label2 to label5 with label8;
    }

    public abstract javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source) throws javax.xml.transform.TransformerConfigurationException;

    public abstract javax.xml.transform.Transformer newTransformer() throws javax.xml.transform.TransformerConfigurationException;

    public abstract javax.xml.transform.Templates newTemplates(javax.xml.transform.Source) throws javax.xml.transform.TransformerConfigurationException;

    public abstract javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source, java.lang.String, java.lang.String, java.lang.String) throws javax.xml.transform.TransformerConfigurationException;

    public abstract void setURIResolver(javax.xml.transform.URIResolver);

    public abstract javax.xml.transform.URIResolver getURIResolver();

    public abstract void setFeature(java.lang.String, boolean) throws javax.xml.transform.TransformerConfigurationException;

    public abstract boolean getFeature(java.lang.String);

    public abstract void setAttribute(java.lang.String, java.lang.Object);

    public abstract java.lang.Object getAttribute(java.lang.String);

    public abstract void setErrorListener(javax.xml.transform.ErrorListener);

    public abstract javax.xml.transform.ErrorListener getErrorListener();
}
