class java.util.jar.JarVerifier$VerifierEntry extends java.io.OutputStream
{
    private final java.lang.String name;
    private final java.security.MessageDigest digest;
    private final byte[] hash;
    private final java.security.cert.Certificate[][] certChains;
    private final java.util.Hashtable verifiedEntries;

    void <init>(java.lang.String, java.security.MessageDigest, byte[], java.security.cert.Certificate[][], java.util.Hashtable)
    {
        java.util.jar.JarVerifier$VerifierEntry r0;
        java.lang.String r1;
        java.security.MessageDigest r2;
        byte[] r3;
        java.security.cert.Certificate[][] r4;
        java.util.Hashtable r5;

        r0 := @this: java.util.jar.JarVerifier$VerifierEntry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.MessageDigest;

        r3 := @parameter2: byte[];

        r4 := @parameter3: java.security.cert.Certificate[][];

        r5 := @parameter4: java.util.Hashtable;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        r0.<java.util.jar.JarVerifier$VerifierEntry: java.lang.String name> = r1;

        r0.<java.util.jar.JarVerifier$VerifierEntry: java.security.MessageDigest digest> = r2;

        r0.<java.util.jar.JarVerifier$VerifierEntry: byte[] hash> = r3;

        r0.<java.util.jar.JarVerifier$VerifierEntry: java.security.cert.Certificate[][] certChains> = r4;

        r0.<java.util.jar.JarVerifier$VerifierEntry: java.util.Hashtable verifiedEntries> = r5;

        return;
    }

    public void write(int)
    {
        java.util.jar.JarVerifier$VerifierEntry r0;
        int i0;
        byte $b1;
        java.security.MessageDigest $r1;

        r0 := @this: java.util.jar.JarVerifier$VerifierEntry;

        i0 := @parameter0: int;

        $r1 = r0.<java.util.jar.JarVerifier$VerifierEntry: java.security.MessageDigest digest>;

        $b1 = (byte) i0;

        virtualinvoke $r1.<java.security.MessageDigest: void update(byte)>($b1);

        return;
    }

    public void write(byte[], int, int)
    {
        java.util.jar.JarVerifier$VerifierEntry r0;
        byte[] r1;
        int i0, i1;
        java.security.MessageDigest $r2;

        r0 := @this: java.util.jar.JarVerifier$VerifierEntry;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<java.util.jar.JarVerifier$VerifierEntry: java.security.MessageDigest digest>;

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[],int,int)>(r1, i0, i1);

        return;
    }

    void verify()
    {
        java.util.jar.JarVerifier$VerifierEntry r0;
        byte[] r1, $r3, $r4;
        java.security.MessageDigest $r2;
        boolean $z0;
        java.security.cert.Certificate[][] $r5;
        java.lang.String $r6, $r9, $r10;
        java.util.Hashtable $r7;
        java.lang.SecurityException $r11;

        r0 := @this: java.util.jar.JarVerifier$VerifierEntry;

        $r2 = r0.<java.util.jar.JarVerifier$VerifierEntry: java.security.MessageDigest digest>;

        r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

        $r3 = r0.<java.util.jar.JarVerifier$VerifierEntry: byte[] hash>;

        $r4 = staticinvoke <libcore.io.Base64: byte[] decode(byte[])>($r3);

        $z0 = staticinvoke <java.security.MessageDigest: boolean isEqual(byte[],byte[])>(r1, $r4);

        if $z0 != 0 goto label1;

        $r10 = r0.<java.util.jar.JarVerifier$VerifierEntry: java.lang.String name>;

        $r9 = r0.<java.util.jar.JarVerifier$VerifierEntry: java.lang.String name>;

        $r11 = staticinvoke <java.util.jar.JarVerifier: java.lang.SecurityException access$000(java.lang.String,java.lang.String,java.lang.String)>("META-INF/MANIFEST.MF", $r10, $r9);

        throw $r11;

     label1:
        $r7 = r0.<java.util.jar.JarVerifier$VerifierEntry: java.util.Hashtable verifiedEntries>;

        $r6 = r0.<java.util.jar.JarVerifier$VerifierEntry: java.lang.String name>;

        $r5 = r0.<java.util.jar.JarVerifier$VerifierEntry: java.security.cert.Certificate[][] certChains>;

        virtualinvoke $r7.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r5);

        return;
    }
}
