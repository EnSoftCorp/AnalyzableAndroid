class java.net.URLClassLoader$URLJarHandler extends java.net.URLClassLoader$URLHandler
{
    final java.util.jar.JarFile jf;
    final java.lang.String prefixName;
    final java.net.URLClassLoader$IndexFile index;
    final java.util.Map subHandlers;
    final java.net.URLClassLoader this$0;

    public void <init>(java.net.URLClassLoader, java.net.URL, java.net.URL, java.util.jar.JarFile, java.lang.String)
    {
        java.net.URLClassLoader$URLJarHandler r0;
        java.net.URLClassLoader r1;
        java.net.URL r2, r3;
        java.util.jar.JarFile r4;
        java.lang.String r5;
        java.util.jar.JarEntry r6;
        java.util.HashMap $r7;
        java.net.URLClassLoader$IndexFile $r8;

        r0 := @this: java.net.URLClassLoader$URLJarHandler;

        r1 := @parameter0: java.net.URLClassLoader;

        r2 := @parameter1: java.net.URL;

        r3 := @parameter2: java.net.URL;

        r4 := @parameter3: java.util.jar.JarFile;

        r5 := @parameter4: java.lang.String;

        r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader this$0> = r1;

        specialinvoke r0.<java.net.URLClassLoader$URLHandler: void <init>(java.net.URLClassLoader,java.net.URL)>(r1, r2);

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<java.net.URLClassLoader$URLJarHandler: java.util.Map subHandlers> = $r7;

        r0.<java.net.URLClassLoader$URLJarHandler: java.util.jar.JarFile jf> = r4;

        r0.<java.net.URLClassLoader$URLJarHandler: java.lang.String prefixName> = r5;

        r0.<java.net.URLClassLoader$URLJarHandler: java.net.URL codeSourceUrl> = r3;

        r6 = virtualinvoke r4.<java.util.jar.JarFile: java.util.jar.JarEntry getJarEntry(java.lang.String)>("META-INF/INDEX.LIST");

        if r6 != null goto label1;

        $r8 = null;

        goto label2;

     label1:
        $r8 = staticinvoke <java.net.URLClassLoader$IndexFile: java.net.URLClassLoader$IndexFile readIndexFile(java.util.jar.JarFile,java.util.jar.JarEntry,java.net.URL)>(r4, r6, r2);

     label2:
        r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$IndexFile index> = $r8;

        return;
    }

    public void <init>(java.net.URLClassLoader, java.net.URL, java.net.URL, java.util.jar.JarFile, java.lang.String, java.net.URLClassLoader$IndexFile)
    {
        java.net.URLClassLoader$URLJarHandler r0;
        java.net.URLClassLoader r1;
        java.net.URL r2, r3;
        java.util.jar.JarFile r4;
        java.lang.String r5;
        java.net.URLClassLoader$IndexFile r6;
        java.util.HashMap $r7;

        r0 := @this: java.net.URLClassLoader$URLJarHandler;

        r1 := @parameter0: java.net.URLClassLoader;

        r2 := @parameter1: java.net.URL;

        r3 := @parameter2: java.net.URL;

        r4 := @parameter3: java.util.jar.JarFile;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.net.URLClassLoader$IndexFile;

        r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader this$0> = r1;

        specialinvoke r0.<java.net.URLClassLoader$URLHandler: void <init>(java.net.URLClassLoader,java.net.URL)>(r1, r2);

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<java.net.URLClassLoader$URLJarHandler: java.util.Map subHandlers> = $r7;

        r0.<java.net.URLClassLoader$URLJarHandler: java.util.jar.JarFile jf> = r4;

        r0.<java.net.URLClassLoader$URLJarHandler: java.lang.String prefixName> = r5;

        r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$IndexFile index> = r6;

        r0.<java.net.URLClassLoader$URLJarHandler: java.net.URL codeSourceUrl> = r3;

        return;
    }

    java.net.URLClassLoader$IndexFile getIndex()
    {
        java.net.URLClassLoader$URLJarHandler r0;
        java.net.URLClassLoader$IndexFile $r1;

        r0 := @this: java.net.URLClassLoader$URLJarHandler;

        $r1 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$IndexFile index>;

        return $r1;
    }

    void findResources(java.lang.String, java.util.ArrayList)
    {
        java.net.URLClassLoader$URLJarHandler r0;
        java.lang.String r1, r4, $r13;
        java.util.ArrayList r2, r5;
        java.net.URL r3, r7, $r11;
        int i0;
        java.util.Iterator r6;
        java.net.URLClassLoader$URLHandler r8;
        java.net.URLClassLoader$IndexFile $r9, $r10;
        java.lang.Object $r12;
        boolean $z1, $z3;

        r0 := @this: java.net.URLClassLoader$URLJarHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.ArrayList;

        r3 = virtualinvoke r0.<java.net.URLClassLoader$URLJarHandler: java.net.URL findResourceInOwn(java.lang.String)>(r1);

        if r3 == null goto label1;

        $z3 = virtualinvoke r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r3);

        if $z3 != 0 goto label1;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label1:
        $r9 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$IndexFile index>;

        if $r9 == null goto label6;

        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

        if i0 <= 0 goto label2;

        $r13 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        goto label3;

     label2:
        $r13 = r1;

     label3:
        r4 = $r13;

        $r10 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$IndexFile index>;

        r5 = virtualinvoke $r10.<java.net.URLClassLoader$IndexFile: java.util.ArrayList get(java.lang.String)>(r4);

        if r5 == null goto label6;

        $r11 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URL url>;

        virtualinvoke r5.<java.util.ArrayList: boolean remove(java.lang.Object)>($r11);

        r6 = virtualinvoke r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r12 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.net.URL) $r12;

        r8 = specialinvoke r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$URLHandler getSubHandler(java.net.URL)>(r7);

        if r8 == null goto label5;

        virtualinvoke r8.<java.net.URLClassLoader$URLHandler: void findResources(java.lang.String,java.util.ArrayList)>(r1, r2);

     label5:
        goto label4;

     label6:
        return;
    }

    java.lang.Class findClass(java.lang.String, java.lang.String, java.lang.String)
    {
        java.net.URLClassLoader$URLJarHandler r0;
        java.lang.String r1, r2, r3, r4, $r12;
        java.util.jar.JarEntry r5;
        java.util.jar.Manifest r6;
        java.util.Iterator r7;
        java.net.URL r8, $r18;
        java.net.URLClassLoader$URLHandler r9;
        java.lang.Class r10, $r22;
        java.lang.StringBuilder $r11, $r13, $r14;
        java.util.jar.JarFile $r15, $r21;
        java.net.URLClassLoader$IndexFile $r16, $r17, $r20;
        java.lang.Object $r19;
        boolean $z1;
        java.io.IOException $r23;
        java.util.ArrayList r25;

        r0 := @this: java.net.URLClassLoader$URLJarHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = r0.<java.net.URLClassLoader$URLJarHandler: java.lang.String prefixName>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r4 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = r0.<java.net.URLClassLoader$URLJarHandler: java.util.jar.JarFile jf>;

        r5 = virtualinvoke $r15.<java.util.jar.JarFile: java.util.jar.JarEntry getJarEntry(java.lang.String)>(r4);

        if r5 == null goto label4;

     label1:
        $r21 = r0.<java.net.URLClassLoader$URLJarHandler: java.util.jar.JarFile jf>;

        r6 = virtualinvoke $r21.<java.util.jar.JarFile: java.util.jar.Manifest getManifest()>();

        $r22 = specialinvoke r0.<java.net.URLClassLoader$URLJarHandler: java.lang.Class createClass(java.util.jar.JarEntry,java.util.jar.Manifest,java.lang.String,java.lang.String)>(r5, r6, r1, r3);

     label2:
        return $r22;

     label3:
        $r23 := @caughtexception;

     label4:
        $r17 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$IndexFile index>;

        if $r17 == null goto label9;

        if r1 != null goto label5;

        $r20 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$IndexFile index>;

        r25 = virtualinvoke $r20.<java.net.URLClassLoader$IndexFile: java.util.ArrayList get(java.lang.String)>(r2);

        goto label6;

     label5:
        $r16 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$IndexFile index>;

        r25 = virtualinvoke $r16.<java.net.URLClassLoader$IndexFile: java.util.ArrayList get(java.lang.String)>(r1);

     label6:
        if r25 == null goto label9;

        $r18 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URL url>;

        virtualinvoke r25.<java.util.ArrayList: boolean remove(java.lang.Object)>($r18);

        r7 = virtualinvoke r25.<java.util.ArrayList: java.util.Iterator iterator()>();

     label7:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label9;

        $r19 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.net.URL) $r19;

        r9 = specialinvoke r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$URLHandler getSubHandler(java.net.URL)>(r8);

        if r9 == null goto label8;

        r10 = virtualinvoke r9.<java.net.URLClassLoader$URLHandler: java.lang.Class findClass(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        if r10 == null goto label8;

        return r10;

     label8:
        goto label7;

     label9:
        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private java.lang.Class createClass(java.util.jar.JarEntry, java.util.jar.Manifest, java.lang.String, java.lang.String)
    {
        java.net.URLClassLoader$URLJarHandler r0;
        java.util.jar.JarEntry r1;
        java.util.jar.Manifest r2;
        java.lang.String r3, r4, $r18, $r21, r31;
        byte[] r5;
        java.io.InputStream r6;
        java.lang.Package r7;
        boolean z0, $z1, $z2, $z3;
        java.util.jar.JarFile $r8;
        java.security.CodeSource $r9, r32;
        java.net.URL $r10, $r23, $r28;
        java.security.cert.Certificate[] $r11;
        int $i0;
        java.lang.Class $r12;
        java.net.URLClassLoader $r13, $r14, $r20, $r24, $r29;
        java.lang.Object[] $r15;
        java.lang.SecurityException $r16;
        java.lang.StringBuilder $r17, $r19, $r22;
        java.io.IOException $r27;

        r0 := @this: java.net.URLClassLoader$URLJarHandler;

        r1 := @parameter0: java.util.jar.JarEntry;

        r2 := @parameter1: java.util.jar.Manifest;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

     label01:
        $r8 = r0.<java.net.URLClassLoader$URLJarHandler: java.util.jar.JarFile jf>;

        r6 = virtualinvoke $r8.<java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r1);

        r5 = staticinvoke <libcore.io.Streams: byte[] readFully(java.io.InputStream)>(r6);

     label02:
        goto label04;

     label03:
        $r27 := @caughtexception;

        return null;

     label04:
        if r3 == null goto label10;

        r31 = virtualinvoke r3.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

        $r14 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader this$0>;

        r7 = staticinvoke <java.net.URLClassLoader: java.lang.Package access$300(java.net.URLClassLoader,java.lang.String)>($r14, r31);

        if r7 != null goto label06;

        if r2 == null goto label05;

        $r29 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader this$0>;

        $r28 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URL codeSourceUrl>;

        virtualinvoke $r29.<java.net.URLClassLoader: java.lang.Package definePackage(java.lang.String,java.util.jar.Manifest,java.net.URL)>(r31, r2, $r28);

        goto label10;

     label05:
        $r24 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader this$0>;

        staticinvoke <java.net.URLClassLoader: java.lang.Package access$400(java.net.URLClassLoader,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>($r24, r31, null, null, null, null, null, null, null);

        goto label10;

     label06:
        z0 = virtualinvoke r7.<java.lang.Package: boolean isSealed()>();

        if r2 == null goto label09;

        $r20 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader this$0>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = staticinvoke <java.net.URLClassLoader: boolean access$500(java.net.URLClassLoader,java.util.jar.Manifest,java.lang.String)>($r20, r2, $r21);

        if $z1 == 0 goto label09;

        $r23 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URL codeSourceUrl>;

        $z2 = virtualinvoke r7.<java.lang.Package: boolean isSealed(java.net.URL)>($r23);

        if $z2 != 0 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        z0 = $z3;

     label09:
        if z0 == 0 goto label10;

        $r16 = new java.lang.SecurityException;

        $r15 = newarray (java.lang.Object)[1];

        $r15[0] = r3;

        $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Package %s is sealed", $r15);

        specialinvoke $r16.<java.lang.SecurityException: void <init>(java.lang.String)>($r18);

        throw $r16;

     label10:
        $r9 = new java.security.CodeSource;

        $r10 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URL codeSourceUrl>;

        $r11 = virtualinvoke r1.<java.util.jar.JarEntry: java.security.cert.Certificate[] getCertificates()>();

        specialinvoke $r9.<java.security.CodeSource: void <init>(java.net.URL,java.security.cert.Certificate[])>($r10, $r11);

        r32 = $r9;

        $r13 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader this$0>;

        $i0 = lengthof r5;

        $r12 = staticinvoke <java.net.URLClassLoader: java.lang.Class access$600(java.net.URLClassLoader,java.lang.String,byte[],int,int,java.security.CodeSource)>($r13, r4, r5, 0, $i0, r32);

        return $r12;

        catch java.io.IOException from label01 to label02 with label03;
    }

    java.net.URL findResourceInOwn(java.lang.String)
    {
        java.net.URLClassLoader$URLJarHandler r0;
        java.lang.String r1, r2, $r4;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.util.jar.JarFile $r7;
        java.util.zip.ZipEntry $r8;
        java.net.URL $r9, $r10;

        r0 := @this: java.net.URLClassLoader$URLJarHandler;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<java.net.URLClassLoader$URLJarHandler: java.lang.String prefixName>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = r0.<java.net.URLClassLoader$URLJarHandler: java.util.jar.JarFile jf>;

        $r8 = virtualinvoke $r7.<java.util.jar.JarFile: java.util.zip.ZipEntry getEntry(java.lang.String)>(r2);

        if $r8 == null goto label1;

        $r9 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URL url>;

        $r10 = virtualinvoke r0.<java.net.URLClassLoader$URLJarHandler: java.net.URL targetURL(java.net.URL,java.lang.String)>($r9, r1);

        return $r10;

     label1:
        return null;
    }

    java.net.URL findResource(java.lang.String)
    {
        java.net.URLClassLoader$URLJarHandler r0;
        java.lang.String r1, r3, $r12;
        java.net.URL r2, r6, $r10, r13;
        int i0;
        java.util.ArrayList r4;
        java.util.Iterator r5;
        java.net.URLClassLoader$URLHandler r7;
        java.net.URLClassLoader$IndexFile $r8, $r9;
        boolean $z1;
        java.lang.Object $r11;

        r0 := @this: java.net.URLClassLoader$URLJarHandler;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<java.net.URLClassLoader$URLJarHandler: java.net.URL findResourceInOwn(java.lang.String)>(r1);

        if r2 == null goto label1;

        return r2;

     label1:
        $r8 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$IndexFile index>;

        if $r8 == null goto label6;

        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

        if i0 <= 0 goto label2;

        $r12 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        goto label3;

     label2:
        $r12 = r1;

     label3:
        r3 = $r12;

        $r9 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$IndexFile index>;

        r4 = virtualinvoke $r9.<java.net.URLClassLoader$IndexFile: java.util.ArrayList get(java.lang.String)>(r3);

        if r4 == null goto label6;

        $r10 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URL url>;

        virtualinvoke r4.<java.util.ArrayList: boolean remove(java.lang.Object)>($r10);

        r5 = virtualinvoke r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r11 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.net.URL) $r11;

        r7 = specialinvoke r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$URLHandler getSubHandler(java.net.URL)>(r6);

        if r7 == null goto label5;

        r13 = virtualinvoke r7.<java.net.URLClassLoader$URLHandler: java.net.URL findResource(java.lang.String)>(r1);

        if r13 == null goto label5;

        return r13;

     label5:
        goto label4;

     label6:
        return null;
    }

    private synchronized java.net.URLClassLoader$URLHandler getSubHandler(java.net.URL)
    {
        java.net.URLClassLoader$URLJarHandler r0;
        java.net.URL r1;
        java.net.URLClassLoader$URLHandler r2, r10;
        java.lang.String r3;
        java.util.Map $r4, $r7;
        java.lang.Object $r5;
        boolean $z0, $z1;
        java.net.URLClassLoader $r6, $r9;

        r0 := @this: java.net.URLClassLoader$URLJarHandler;

        r1 := @parameter0: java.net.URL;

        $r4 = r0.<java.net.URLClassLoader$URLJarHandler: java.util.Map subHandlers>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.net.URLClassLoader$URLHandler) $r5;

        if r2 == null goto label1;

        return r2;

     label1:
        r3 = virtualinvoke r1.<java.net.URL: java.lang.String getProtocol()>();

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("jar");

        if $z0 == 0 goto label2;

        $r9 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader this$0>;

        r10 = staticinvoke <java.net.URLClassLoader: java.net.URLClassLoader$URLHandler access$700(java.net.URLClassLoader,java.net.URL)>($r9, r1);

        goto label4;

     label2:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("file");

        if $z1 == 0 goto label3;

        r10 = specialinvoke r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$URLHandler createURLSubJarHandler(java.net.URL)>(r1);

        goto label4;

     label3:
        $r6 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader this$0>;

        r10 = staticinvoke <java.net.URLClassLoader: java.net.URLClassLoader$URLHandler access$800(java.net.URLClassLoader,java.net.URL)>($r6, r1);

     label4:
        if r10 == null goto label5;

        $r7 = r0.<java.net.URLClassLoader$URLJarHandler: java.util.Map subHandlers>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r10);

     label5:
        return r10;
    }

    private java.net.URLClassLoader$URLHandler createURLSubJarHandler(java.net.URL)
    {
        java.net.URLClassLoader$URLJarHandler r0, r6, $r18;
        java.net.URL r1, $r11, r20;
        java.lang.String r2, r3, $r7, $r13, $r14;
        int i0, i1;
        java.net.JarURLConnection r4, $r9;
        java.util.jar.JarFile r5;
        boolean $z0;
        java.net.URLConnection $r8, $r16;
        java.lang.StringBuilder $r10, $r12, $r15;
        java.net.URLClassLoader $r17;
        java.io.IOException $r19;

        r0 := @this: java.net.URLClassLoader$URLJarHandler;

        r1 := @parameter0: java.net.URL;

        r3 = virtualinvoke r1.<java.net.URL: java.lang.String getFile()>();

        $r7 = virtualinvoke r1.<java.net.URL: java.lang.String getFile()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean endsWith(java.lang.String)>("!/");

        if $z0 == 0 goto label1;

        r2 = "";

        goto label3;

     label1:
        i0 = virtualinvoke r3.<java.lang.String: int lastIndexOf(java.lang.String)>("!/");

        if i0 != -1 goto label2;

        return null;

     label2:
        i1 = i0 + 2;

        r2 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>(i1);

     label3:
        $r8 = virtualinvoke r1.<java.net.URL: java.net.URLConnection openConnection()>();

        $r9 = (java.net.JarURLConnection) $r8;

        r20 = virtualinvoke $r9.<java.net.JarURLConnection: java.net.URL getJarFileURL()>();

        $r11 = new java.net.URL;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke r20.<java.net.URL: java.lang.String toExternalForm()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!/");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.net.URL: void <init>(java.lang.String,java.lang.String,java.lang.String)>("jar", "", $r14);

        $r16 = virtualinvoke $r11.<java.net.URL: java.net.URLConnection openConnection()>();

        r4 = (java.net.JarURLConnection) $r16;

        r5 = virtualinvoke r4.<java.net.JarURLConnection: java.util.jar.JarFile getJarFile()>();

        $r18 = new java.net.URLClassLoader$URLJarHandler;

        $r17 = r0.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader this$0>;

        specialinvoke $r18.<java.net.URLClassLoader$URLJarHandler: void <init>(java.net.URLClassLoader,java.net.URL,java.net.URL,java.util.jar.JarFile,java.lang.String,java.net.URLClassLoader$IndexFile)>($r17, r1, r20, r5, r2, null);

        r6 = $r18;

     label4:
        return r6;

     label5:
        $r19 := @caughtexception;

        return null;

        catch java.io.IOException from label3 to label4 with label5;
    }
}
