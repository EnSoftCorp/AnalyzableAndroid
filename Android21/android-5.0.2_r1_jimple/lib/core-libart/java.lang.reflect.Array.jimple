public final class java.lang.reflect.Array extends java.lang.Object
{

    private void <init>()
    {
        java.lang.reflect.Array r0;

        r0 := @this: java.lang.reflect.Array;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.IllegalArgumentException notAnArray(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.Class $r4;
        java.lang.String $r6;

        r0 := @parameter0: java.lang.Object;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not an array: ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r1;
    }

    private static java.lang.IllegalArgumentException incompatibleType(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.Class $r4;
        java.lang.String $r6;

        r0 := @parameter0: java.lang.Object;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Array has incompatible type: ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r1;
    }

    private static java.lang.RuntimeException badArray(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Class $r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2, $r3;
        java.lang.NullPointerException $r4;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("array == null");

        throw $r4;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isArray()>();

        if $z0 != 0 goto label2;

        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.IllegalArgumentException notAnArray(java.lang.Object)>(r0);

        throw $r3;

     label2:
        $r2 = staticinvoke <java.lang.reflect.Array: java.lang.IllegalArgumentException incompatibleType(java.lang.Object)>(r0);

        throw $r2;
    }

    public static java.lang.Object get(java.lang.Object, int) throws java.lang.IllegalArgumentException, java.lang.ArrayIndexOutOfBoundsException
    {
        java.lang.Object r0, $r27;
        int i0, $i2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.IllegalArgumentException $r1;
        java.lang.NullPointerException $r2;
        java.lang.Double $r3;
        double[] $r4, $r5;
        java.lang.Float $r6;
        double $d0;
        float[] $r7, $r8;
        long[] $r9, $r10;
        float $f0;
        long $l1;
        int[] $r11, $r13;
        java.lang.Long $r12;
        short[] $r14, $r16;
        java.lang.Integer $r15;
        short $s3;
        char[] $r17, $r19;
        char $c4;
        java.lang.Short $r18;
        byte[] $r20, $r22;
        byte $b5;
        java.lang.Character $r21;
        boolean[] $r23, $r25;
        java.lang.Byte $r24;
        java.lang.Object[] $r26, $r29;
        java.lang.Boolean $r28;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $z0 = r0 instanceof java.lang.Object[];

        if $z0 == 0 goto label01;

        $r29 = (java.lang.Object[]) r0;

        $r26 = (java.lang.Object[]) $r29;

        $r27 = $r26[i0];

        return $r27;

     label01:
        $z1 = r0 instanceof boolean[];

        if $z1 == 0 goto label04;

        $r25 = (boolean[]) r0;

        $r23 = (boolean[]) $r25;

        $z9 = $r23[i0];

        if $z9 == 0 goto label02;

        $r28 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label03;

     label02:
        $r28 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label03:
        return $r28;

     label04:
        $z2 = r0 instanceof byte[];

        if $z2 == 0 goto label05;

        $r22 = (byte[]) r0;

        $r20 = (byte[]) $r22;

        $b5 = $r20[i0];

        $r24 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b5);

        return $r24;

     label05:
        $z3 = r0 instanceof char[];

        if $z3 == 0 goto label06;

        $r19 = (char[]) r0;

        $r17 = (char[]) $r19;

        $c4 = $r17[i0];

        $r21 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c4);

        return $r21;

     label06:
        $z4 = r0 instanceof short[];

        if $z4 == 0 goto label07;

        $r14 = (short[]) r0;

        $r16 = (short[]) $r14;

        $s3 = $r16[i0];

        $r18 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        return $r18;

     label07:
        $z5 = r0 instanceof int[];

        if $z5 == 0 goto label08;

        $r11 = (int[]) r0;

        $r13 = (int[]) $r11;

        $i2 = $r13[i0];

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        return $r15;

     label08:
        $z6 = r0 instanceof long[];

        if $z6 == 0 goto label09;

        $r9 = (long[]) r0;

        $r10 = (long[]) $r9;

        $l1 = $r10[i0];

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r12;

     label09:
        $z7 = r0 instanceof float[];

        if $z7 == 0 goto label10;

        $r6 = new java.lang.Float;

        $r8 = (float[]) r0;

        $r7 = (float[]) $r8;

        $f0 = $r7[i0];

        specialinvoke $r6.<java.lang.Float: void <init>(float)>($f0);

        return $r6;

     label10:
        $z8 = r0 instanceof double[];

        if $z8 == 0 goto label11;

        $r3 = new java.lang.Double;

        $r4 = (double[]) r0;

        $r5 = (double[]) $r4;

        $d0 = $r5[i0];

        specialinvoke $r3.<java.lang.Double: void <init>(double)>($d0);

        return $r3;

     label11:
        if r0 != null goto label12;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("array == null");

        throw $r2;

     label12:
        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.IllegalArgumentException notAnArray(java.lang.Object)>(r0);

        throw $r1;
    }

    public static boolean getBoolean(java.lang.Object, int) throws java.lang.IllegalArgumentException, java.lang.ArrayIndexOutOfBoundsException
    {
        java.lang.Object r0;
        int i0;
        boolean $z0, $z1;
        java.lang.RuntimeException $r1;
        boolean[] $r2, $r3;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $z0 = r0 instanceof boolean[];

        if $z0 == 0 goto label1;

        $r2 = (boolean[]) r0;

        $r3 = (boolean[]) $r2;

        $z1 = $r3[i0];

        return $z1;

     label1:
        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.RuntimeException badArray(java.lang.Object)>(r0);

        throw $r1;
    }

    public static byte getByte(java.lang.Object, int) throws java.lang.IllegalArgumentException, java.lang.ArrayIndexOutOfBoundsException
    {
        java.lang.Object r0;
        int i0;
        boolean $z0;
        java.lang.RuntimeException $r1;
        byte[] $r2, $r3;
        byte $b1;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $z0 = r0 instanceof byte[];

        if $z0 == 0 goto label1;

        $r2 = (byte[]) r0;

        $r3 = (byte[]) $r2;

        $b1 = $r3[i0];

        return $b1;

     label1:
        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.RuntimeException badArray(java.lang.Object)>(r0);

        throw $r1;
    }

    public static char getChar(java.lang.Object, int) throws java.lang.IllegalArgumentException, java.lang.ArrayIndexOutOfBoundsException
    {
        java.lang.Object r0;
        int i0;
        boolean $z0;
        java.lang.RuntimeException $r1;
        char[] $r2, $r3;
        char $c1;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $z0 = r0 instanceof char[];

        if $z0 == 0 goto label1;

        $r2 = (char[]) r0;

        $r3 = (char[]) $r2;

        $c1 = $r3[i0];

        return $c1;

     label1:
        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.RuntimeException badArray(java.lang.Object)>(r0);

        throw $r1;
    }

    public static double getDouble(java.lang.Object, int) throws java.lang.IllegalArgumentException, java.lang.ArrayIndexOutOfBoundsException
    {
        java.lang.Object r0;
        int i0, $i3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.RuntimeException $r1;
        short[] $r2, $r3;
        short $s1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        long[] $r4, $r5;
        long $l2;
        int[] $r6, $r7;
        float[] $r8, $r9;
        float $f0;
        char[] $r10, $r11;
        char $c4;
        byte[] $r12, $r13;
        double[] $r14, $r15;
        byte $b5;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $z0 = r0 instanceof double[];

        if $z0 == 0 goto label1;

        $r14 = (double[]) r0;

        $r15 = (double[]) $r14;

        $d6 = $r15[i0];

        return $d6;

     label1:
        $z1 = r0 instanceof byte[];

        if $z1 == 0 goto label2;

        $r13 = (byte[]) r0;

        $r12 = (byte[]) $r13;

        $b5 = $r12[i0];

        $d5 = (double) $b5;

        return $d5;

     label2:
        $z2 = r0 instanceof char[];

        if $z2 == 0 goto label3;

        $r11 = (char[]) r0;

        $r10 = (char[]) $r11;

        $c4 = $r10[i0];

        $d4 = (double) $c4;

        return $d4;

     label3:
        $z3 = r0 instanceof float[];

        if $z3 == 0 goto label4;

        $r9 = (float[]) r0;

        $r8 = (float[]) $r9;

        $f0 = $r8[i0];

        $d3 = (double) $f0;

        return $d3;

     label4:
        $z4 = r0 instanceof int[];

        if $z4 == 0 goto label5;

        $r7 = (int[]) r0;

        $r6 = (int[]) $r7;

        $i3 = $r6[i0];

        $d2 = (double) $i3;

        return $d2;

     label5:
        $z5 = r0 instanceof long[];

        if $z5 == 0 goto label6;

        $r4 = (long[]) r0;

        $r5 = (long[]) $r4;

        $l2 = $r5[i0];

        $d1 = (double) $l2;

        return $d1;

     label6:
        $z6 = r0 instanceof short[];

        if $z6 == 0 goto label7;

        $r2 = (short[]) r0;

        $r3 = (short[]) $r2;

        $s1 = $r3[i0];

        $d0 = (double) $s1;

        return $d0;

     label7:
        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.RuntimeException badArray(java.lang.Object)>(r0);

        throw $r1;
    }

    public static float getFloat(java.lang.Object, int) throws java.lang.IllegalArgumentException, java.lang.ArrayIndexOutOfBoundsException
    {
        java.lang.Object r0;
        int i0, $i3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.RuntimeException $r1;
        short[] $r2, $r3;
        short $s1;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        long[] $r4, $r5;
        long $l2;
        int[] $r6, $r7;
        char[] $r8, $r9;
        char $c4;
        byte[] $r10, $r11;
        byte $b5;
        float[] $r12, $r13;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $z0 = r0 instanceof float[];

        if $z0 == 0 goto label1;

        $r12 = (float[]) r0;

        $r13 = (float[]) $r12;

        $f5 = $r13[i0];

        return $f5;

     label1:
        $z1 = r0 instanceof byte[];

        if $z1 == 0 goto label2;

        $r10 = (byte[]) r0;

        $r11 = (byte[]) $r10;

        $b5 = $r11[i0];

        $f4 = (float) $b5;

        return $f4;

     label2:
        $z2 = r0 instanceof char[];

        if $z2 == 0 goto label3;

        $r8 = (char[]) r0;

        $r9 = (char[]) $r8;

        $c4 = $r9[i0];

        $f3 = (float) $c4;

        return $f3;

     label3:
        $z3 = r0 instanceof int[];

        if $z3 == 0 goto label4;

        $r6 = (int[]) r0;

        $r7 = (int[]) $r6;

        $i3 = $r7[i0];

        $f2 = (float) $i3;

        return $f2;

     label4:
        $z4 = r0 instanceof long[];

        if $z4 == 0 goto label5;

        $r4 = (long[]) r0;

        $r5 = (long[]) $r4;

        $l2 = $r5[i0];

        $f1 = (float) $l2;

        return $f1;

     label5:
        $z5 = r0 instanceof short[];

        if $z5 == 0 goto label6;

        $r2 = (short[]) r0;

        $r3 = (short[]) $r2;

        $s1 = $r3[i0];

        $f0 = (float) $s1;

        return $f0;

     label6:
        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.RuntimeException badArray(java.lang.Object)>(r0);

        throw $r1;
    }

    public static int getInt(java.lang.Object, int) throws java.lang.IllegalArgumentException, java.lang.ArrayIndexOutOfBoundsException
    {
        java.lang.Object r0;
        int i0, $i4;
        boolean $z0, $z1, $z2, $z3;
        java.lang.RuntimeException $r1;
        short[] $r2, $r3;
        short $s1;
        char[] $r4, $r5;
        char $c2;
        byte[] $r6, $r7;
        byte $b3;
        int[] $r8, $r9;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $z0 = r0 instanceof int[];

        if $z0 == 0 goto label1;

        $r9 = (int[]) r0;

        $r8 = (int[]) $r9;

        $i4 = $r8[i0];

        return $i4;

     label1:
        $z1 = r0 instanceof byte[];

        if $z1 == 0 goto label2;

        $r6 = (byte[]) r0;

        $r7 = (byte[]) $r6;

        $b3 = $r7[i0];

        return $b3;

     label2:
        $z2 = r0 instanceof char[];

        if $z2 == 0 goto label3;

        $r4 = (char[]) r0;

        $r5 = (char[]) $r4;

        $c2 = $r5[i0];

        return $c2;

     label3:
        $z3 = r0 instanceof short[];

        if $z3 == 0 goto label4;

        $r2 = (short[]) r0;

        $r3 = (short[]) $r2;

        $s1 = $r3[i0];

        return $s1;

     label4:
        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.RuntimeException badArray(java.lang.Object)>(r0);

        throw $r1;
    }

    public static int getLength(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.RuntimeException $r1;
        short[] $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        long[] $r4, $r5;
        int[] $r6, $r7;
        float[] $r8, $r9;
        double[] $r10, $r11;
        char[] $r12, $r13;
        byte[] $r14, $r15;
        java.lang.Object[] $r16, $r19;
        boolean[] $r17, $r18;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.Object[];

        if $z0 == 0 goto label1;

        $r16 = (java.lang.Object[]) r0;

        $r19 = (java.lang.Object[]) $r16;

        $i8 = lengthof $r19;

        return $i8;

     label1:
        $z1 = r0 instanceof boolean[];

        if $z1 == 0 goto label2;

        $r17 = (boolean[]) r0;

        $r18 = (boolean[]) $r17;

        $i7 = lengthof $r18;

        return $i7;

     label2:
        $z2 = r0 instanceof byte[];

        if $z2 == 0 goto label3;

        $r14 = (byte[]) r0;

        $r15 = (byte[]) $r14;

        $i6 = lengthof $r15;

        return $i6;

     label3:
        $z3 = r0 instanceof char[];

        if $z3 == 0 goto label4;

        $r13 = (char[]) r0;

        $r12 = (char[]) $r13;

        $i5 = lengthof $r12;

        return $i5;

     label4:
        $z4 = r0 instanceof double[];

        if $z4 == 0 goto label5;

        $r10 = (double[]) r0;

        $r11 = (double[]) $r10;

        $i4 = lengthof $r11;

        return $i4;

     label5:
        $z5 = r0 instanceof float[];

        if $z5 == 0 goto label6;

        $r9 = (float[]) r0;

        $r8 = (float[]) $r9;

        $i3 = lengthof $r8;

        return $i3;

     label6:
        $z6 = r0 instanceof int[];

        if $z6 == 0 goto label7;

        $r6 = (int[]) r0;

        $r7 = (int[]) $r6;

        $i2 = lengthof $r7;

        return $i2;

     label7:
        $z7 = r0 instanceof long[];

        if $z7 == 0 goto label8;

        $r4 = (long[]) r0;

        $r5 = (long[]) $r4;

        $i1 = lengthof $r5;

        return $i1;

     label8:
        $z8 = r0 instanceof short[];

        if $z8 == 0 goto label9;

        $r2 = (short[]) r0;

        $r3 = (short[]) $r2;

        $i0 = lengthof $r3;

        return $i0;

     label9:
        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.RuntimeException badArray(java.lang.Object)>(r0);

        throw $r1;
    }

    public static long getLong(java.lang.Object, int) throws java.lang.IllegalArgumentException, java.lang.ArrayIndexOutOfBoundsException
    {
        java.lang.Object r0;
        int i0, $i3;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.RuntimeException $r1;
        short[] $r2, $r3;
        short $s1;
        long $l2, $l4, $l5, $l7, $l9;
        int[] $r4, $r5;
        char[] $r6, $r7;
        char $c6;
        byte[] $r8, $r9;
        byte $b8;
        long[] $r10, $r11;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $z0 = r0 instanceof long[];

        if $z0 == 0 goto label1;

        $r11 = (long[]) r0;

        $r10 = (long[]) $r11;

        $l9 = $r10[i0];

        return $l9;

     label1:
        $z1 = r0 instanceof byte[];

        if $z1 == 0 goto label2;

        $r9 = (byte[]) r0;

        $r8 = (byte[]) $r9;

        $b8 = $r8[i0];

        $l7 = (long) $b8;

        return $l7;

     label2:
        $z2 = r0 instanceof char[];

        if $z2 == 0 goto label3;

        $r7 = (char[]) r0;

        $r6 = (char[]) $r7;

        $c6 = $r6[i0];

        $l5 = (long) $c6;

        return $l5;

     label3:
        $z3 = r0 instanceof int[];

        if $z3 == 0 goto label4;

        $r4 = (int[]) r0;

        $r5 = (int[]) $r4;

        $i3 = $r5[i0];

        $l4 = (long) $i3;

        return $l4;

     label4:
        $z4 = r0 instanceof short[];

        if $z4 == 0 goto label5;

        $r2 = (short[]) r0;

        $r3 = (short[]) $r2;

        $s1 = $r3[i0];

        $l2 = (long) $s1;

        return $l2;

     label5:
        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.RuntimeException badArray(java.lang.Object)>(r0);

        throw $r1;
    }

    public static short getShort(java.lang.Object, int) throws java.lang.IllegalArgumentException, java.lang.ArrayIndexOutOfBoundsException
    {
        java.lang.Object r0;
        int i0;
        boolean $z0, $z1;
        java.lang.RuntimeException $r1;
        byte[] $r2, $r3;
        byte $b1;
        short $s2, $s3;
        short[] $r4, $r5;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $z0 = r0 instanceof short[];

        if $z0 == 0 goto label1;

        $r4 = (short[]) r0;

        $r5 = (short[]) $r4;

        $s3 = $r5[i0];

        return $s3;

     label1:
        $z1 = r0 instanceof byte[];

        if $z1 == 0 goto label2;

        $r2 = (byte[]) r0;

        $r3 = (byte[]) $r2;

        $b1 = $r3[i0];

        $s2 = (short) $b1;

        return $s2;

     label2:
        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.RuntimeException badArray(java.lang.Object)>(r0);

        throw $r1;
    }

    public static transient java.lang.Object newInstance(java.lang.Class, int[]) throws java.lang.NegativeArraySizeException, java.lang.IllegalArgumentException
    {
        java.lang.Class r0, $r7;
        int[] r1;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r2, $r10;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        java.lang.Object $r8;
        java.lang.NullPointerException $r9;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: int[];

        $i0 = lengthof r1;

        if $i0 <= 0 goto label1;

        $i2 = lengthof r1;

        if $i2 <= 255 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad number of dimensions: ");

        $i1 = lengthof r1;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label2:
        $r7 = <java.lang.Void: java.lang.Class TYPE>;

        if r0 != $r7 goto label3;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t allocate an array of void");

        throw $r10;

     label3:
        if r0 != null goto label4;

        $r9 = new java.lang.NullPointerException;

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("componentType == null");

        throw $r9;

     label4:
        $r8 = staticinvoke <java.lang.reflect.Array: java.lang.Object createMultiArray(java.lang.Class,int[])>(r0, r1);

        return $r8;
    }

    private static native java.lang.Object createMultiArray(java.lang.Class, int[]) throws java.lang.NegativeArraySizeException;

    public static java.lang.Object newInstance(java.lang.Class, int) throws java.lang.NegativeArraySizeException
    {
        java.lang.Class r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        int i0;
        boolean $z0;
        java.lang.AssertionError $r10;
        java.lang.IllegalArgumentException $r11;
        double[] $r12;
        float[] $r13;
        short[] $r14;
        long[] $r15;
        byte[] $r16;
        boolean[] $r17;
        char[] $r18;
        int[] $r19;
        java.lang.Object $r20;

        r0 := @parameter0: java.lang.Class;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isPrimitive()>();

        if $z0 != 0 goto label01;

        $r20 = staticinvoke <java.lang.reflect.Array: java.lang.Object createObjectArray(java.lang.Class,int)>(r0, i0);

        return $r20;

     label01:
        $r1 = <java.lang.Character: java.lang.Class TYPE>;

        if r0 != $r1 goto label02;

        $r18 = newarray (char)[i0];

        return $r18;

     label02:
        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        if r0 != $r2 goto label03;

        $r19 = newarray (int)[i0];

        return $r19;

     label03:
        $r3 = <java.lang.Byte: java.lang.Class TYPE>;

        if r0 != $r3 goto label04;

        $r16 = newarray (byte)[i0];

        return $r16;

     label04:
        $r4 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r0 != $r4 goto label05;

        $r17 = newarray (boolean)[i0];

        return $r17;

     label05:
        $r5 = <java.lang.Short: java.lang.Class TYPE>;

        if r0 != $r5 goto label06;

        $r14 = newarray (short)[i0];

        return $r14;

     label06:
        $r6 = <java.lang.Long: java.lang.Class TYPE>;

        if r0 != $r6 goto label07;

        $r15 = newarray (long)[i0];

        return $r15;

     label07:
        $r7 = <java.lang.Float: java.lang.Class TYPE>;

        if r0 != $r7 goto label08;

        $r13 = newarray (float)[i0];

        return $r13;

     label08:
        $r8 = <java.lang.Double: java.lang.Class TYPE>;

        if r0 != $r8 goto label09;

        $r12 = newarray (double)[i0];

        return $r12;

     label09:
        $r9 = <java.lang.Void: java.lang.Class TYPE>;

        if r0 != $r9 goto label10;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t allocate an array of void");

        throw $r11;

     label10:
        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;
    }

    private static native java.lang.Object createObjectArray(java.lang.Class, int) throws java.lang.NegativeArraySizeException;

    public static void set(java.lang.Object, int, java.lang.Object) throws java.lang.IllegalArgumentException, java.lang.ArrayIndexOutOfBoundsException
    {
        java.lang.Object r0, r1;
        int i0, $i2;
        java.lang.Class $r2, $r13, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.lang.Double $r3;
        double $d0;
        float $f0;
        java.lang.Float $r4;
        long $l1;
        java.lang.Long $r5;
        java.lang.Integer $r6;
        short $s3;
        java.lang.Short $r7;
        char $c4;
        java.lang.Character $r8;
        byte $b5;
        java.lang.Byte $r9;
        java.lang.Boolean $r10;
        java.lang.Object[] $r11, $r14;
        java.lang.IllegalArgumentException $r12, $r16, $r17;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isArray()>();

        if $z0 != 0 goto label01;

        $r17 = staticinvoke <java.lang.reflect.Array: java.lang.IllegalArgumentException notAnArray(java.lang.Object)>(r0);

        throw $r17;

     label01:
        $z1 = r0 instanceof java.lang.Object[];

        if $z1 == 0 goto label03;

        if r1 == null goto label02;

        $r15 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r15.<java.lang.Class: java.lang.Class getComponentType()>();

        $z11 = virtualinvoke $r13.<java.lang.Class: boolean isInstance(java.lang.Object)>(r1);

        if $z11 != 0 goto label02;

        $r16 = staticinvoke <java.lang.reflect.Array: java.lang.IllegalArgumentException incompatibleType(java.lang.Object)>(r0);

        throw $r16;

     label02:
        $r11 = (java.lang.Object[]) r0;

        $r14 = (java.lang.Object[]) $r11;

        $r14[i0] = r1;

        goto label12;

     label03:
        if r1 != null goto label04;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Primitive array can\'t take null values.");

        throw $r12;

     label04:
        $z2 = r1 instanceof java.lang.Boolean;

        if $z2 == 0 goto label05;

        $r10 = (java.lang.Boolean) r1;

        $z10 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

        staticinvoke <java.lang.reflect.Array: void setBoolean(java.lang.Object,int,boolean)>(r0, i0, $z10);

        goto label12;

     label05:
        $z3 = r1 instanceof java.lang.Byte;

        if $z3 == 0 goto label06;

        $r9 = (java.lang.Byte) r1;

        $b5 = virtualinvoke $r9.<java.lang.Byte: byte byteValue()>();

        staticinvoke <java.lang.reflect.Array: void setByte(java.lang.Object,int,byte)>(r0, i0, $b5);

        goto label12;

     label06:
        $z4 = r1 instanceof java.lang.Character;

        if $z4 == 0 goto label07;

        $r8 = (java.lang.Character) r1;

        $c4 = virtualinvoke $r8.<java.lang.Character: char charValue()>();

        staticinvoke <java.lang.reflect.Array: void setChar(java.lang.Object,int,char)>(r0, i0, $c4);

        goto label12;

     label07:
        $z5 = r1 instanceof java.lang.Short;

        if $z5 == 0 goto label08;

        $r7 = (java.lang.Short) r1;

        $s3 = virtualinvoke $r7.<java.lang.Short: short shortValue()>();

        staticinvoke <java.lang.reflect.Array: void setShort(java.lang.Object,int,short)>(r0, i0, $s3);

        goto label12;

     label08:
        $z6 = r1 instanceof java.lang.Integer;

        if $z6 == 0 goto label09;

        $r6 = (java.lang.Integer) r1;

        $i2 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        staticinvoke <java.lang.reflect.Array: void setInt(java.lang.Object,int,int)>(r0, i0, $i2);

        goto label12;

     label09:
        $z7 = r1 instanceof java.lang.Long;

        if $z7 == 0 goto label10;

        $r5 = (java.lang.Long) r1;

        $l1 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

        staticinvoke <java.lang.reflect.Array: void setLong(java.lang.Object,int,long)>(r0, i0, $l1);

        goto label12;

     label10:
        $z8 = r1 instanceof java.lang.Float;

        if $z8 == 0 goto label11;

        $r4 = (java.lang.Float) r1;

        $f0 = virtualinvoke $r4.<java.lang.Float: float floatValue()>();

        staticinvoke <java.lang.reflect.Array: void setFloat(java.lang.Object,int,float)>(r0, i0, $f0);

        goto label12;

     label11:
        $z9 = r1 instanceof java.lang.Double;

        if $z9 == 0 goto label12;

        $r3 = (java.lang.Double) r1;

        $d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        staticinvoke <java.lang.reflect.Array: void setDouble(java.lang.Object,int,double)>(r0, i0, $d0);

     label12:
        return;
    }

    public static void setBoolean(java.lang.Object, int, boolean)
    {
        java.lang.Object r0;
        int i0;
        boolean z0, $z1;
        java.lang.RuntimeException $r1;
        boolean[] $r2, $r3;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $z1 = r0 instanceof boolean[];

        if $z1 == 0 goto label1;

        $r2 = (boolean[]) r0;

        $r3 = (boolean[]) $r2;

        $r3[i0] = z0;

        goto label2;

     label1:
        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.RuntimeException badArray(java.lang.Object)>(r0);

        throw $r1;

     label2:
        return;
    }

    public static void setByte(java.lang.Object, int, byte) throws java.lang.IllegalArgumentException, java.lang.ArrayIndexOutOfBoundsException
    {
        java.lang.Object r0;
        int i0;
        byte b1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.RuntimeException $r1;
        short[] $r2, $r3;
        short $s2;
        long[] $r4, $r5;
        long $l3;
        int[] $r6, $r7;
        float $f0;
        float[] $r8, $r10;
        double[] $r9, $r11;
        double $d0;
        byte[] $r12, $r13;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        b1 := @parameter2: byte;

        $z0 = r0 instanceof byte[];

        if $z0 == 0 goto label1;

        $r13 = (byte[]) r0;

        $r12 = (byte[]) $r13;

        $r12[i0] = b1;

        goto label7;

     label1:
        $z1 = r0 instanceof double[];

        if $z1 == 0 goto label2;

        $r9 = (double[]) r0;

        $r11 = (double[]) $r9;

        $d0 = (double) b1;

        $r11[i0] = $d0;

        goto label7;

     label2:
        $z2 = r0 instanceof float[];

        if $z2 == 0 goto label3;

        $r8 = (float[]) r0;

        $r10 = (float[]) $r8;

        $f0 = (float) b1;

        $r10[i0] = $f0;

        goto label7;

     label3:
        $z3 = r0 instanceof int[];

        if $z3 == 0 goto label4;

        $r7 = (int[]) r0;

        $r6 = (int[]) $r7;

        $r6[i0] = b1;

        goto label7;

     label4:
        $z4 = r0 instanceof long[];

        if $z4 == 0 goto label5;

        $r4 = (long[]) r0;

        $r5 = (long[]) $r4;

        $l3 = (long) b1;

        $r5[i0] = $l3;

        goto label7;

     label5:
        $z5 = r0 instanceof short[];

        if $z5 == 0 goto label6;

        $r2 = (short[]) r0;

        $r3 = (short[]) $r2;

        $s2 = (short) b1;

        $r3[i0] = $s2;

        goto label7;

     label6:
        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.RuntimeException badArray(java.lang.Object)>(r0);

        throw $r1;

     label7:
        return;
    }

    public static void setChar(java.lang.Object, int, char) throws java.lang.IllegalArgumentException, java.lang.ArrayIndexOutOfBoundsException
    {
        java.lang.Object r0;
        int i0;
        char c1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.RuntimeException $r1;
        long[] $r2, $r3;
        long $l2;
        int[] $r4, $r5;
        float[] $r6, $r8;
        float $f0;
        double[] $r7, $r9;
        double $d0;
        char[] $r10, $r11;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        c1 := @parameter2: char;

        $z0 = r0 instanceof char[];

        if $z0 == 0 goto label1;

        $r11 = (char[]) r0;

        $r10 = (char[]) $r11;

        $r10[i0] = c1;

        goto label6;

     label1:
        $z1 = r0 instanceof double[];

        if $z1 == 0 goto label2;

        $r7 = (double[]) r0;

        $r9 = (double[]) $r7;

        $d0 = (double) c1;

        $r9[i0] = $d0;

        goto label6;

     label2:
        $z2 = r0 instanceof float[];

        if $z2 == 0 goto label3;

        $r6 = (float[]) r0;

        $r8 = (float[]) $r6;

        $f0 = (float) c1;

        $r8[i0] = $f0;

        goto label6;

     label3:
        $z3 = r0 instanceof int[];

        if $z3 == 0 goto label4;

        $r4 = (int[]) r0;

        $r5 = (int[]) $r4;

        $r5[i0] = c1;

        goto label6;

     label4:
        $z4 = r0 instanceof long[];

        if $z4 == 0 goto label5;

        $r2 = (long[]) r0;

        $r3 = (long[]) $r2;

        $l2 = (long) c1;

        $r3[i0] = $l2;

        goto label6;

     label5:
        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.RuntimeException badArray(java.lang.Object)>(r0);

        throw $r1;

     label6:
        return;
    }

    public static void setDouble(java.lang.Object, int, double) throws java.lang.IllegalArgumentException, java.lang.ArrayIndexOutOfBoundsException
    {
        java.lang.Object r0;
        int i0;
        double d0;
        boolean $z0;
        java.lang.RuntimeException $r1;
        double[] $r2, $r3;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        d0 := @parameter2: double;

        $z0 = r0 instanceof double[];

        if $z0 == 0 goto label1;

        $r2 = (double[]) r0;

        $r3 = (double[]) $r2;

        $r3[i0] = d0;

        goto label2;

     label1:
        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.RuntimeException badArray(java.lang.Object)>(r0);

        throw $r1;

     label2:
        return;
    }

    public static void setFloat(java.lang.Object, int, float) throws java.lang.IllegalArgumentException, java.lang.ArrayIndexOutOfBoundsException
    {
        java.lang.Object r0;
        int i0;
        float f0;
        boolean $z0, $z1;
        java.lang.RuntimeException $r1;
        double[] $r2, $r3;
        double $d0;
        float[] $r4, $r5;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        f0 := @parameter2: float;

        $z0 = r0 instanceof float[];

        if $z0 == 0 goto label1;

        $r4 = (float[]) r0;

        $r5 = (float[]) $r4;

        $r5[i0] = f0;

        goto label3;

     label1:
        $z1 = r0 instanceof double[];

        if $z1 == 0 goto label2;

        $r2 = (double[]) r0;

        $r3 = (double[]) $r2;

        $d0 = (double) f0;

        $r3[i0] = $d0;

        goto label3;

     label2:
        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.RuntimeException badArray(java.lang.Object)>(r0);

        throw $r1;

     label3:
        return;
    }

    public static void setInt(java.lang.Object, int, int) throws java.lang.IllegalArgumentException, java.lang.ArrayIndexOutOfBoundsException
    {
        java.lang.Object r0;
        int i0, i1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.RuntimeException $r1;
        long[] $r2, $r3;
        long $l2;
        float[] $r4, $r5;
        float $f0;
        double[] $r6, $r8;
        double $d0;
        int[] $r7, $r9;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0 instanceof int[];

        if $z0 == 0 goto label1;

        $r7 = (int[]) r0;

        $r9 = (int[]) $r7;

        $r9[i0] = i1;

        goto label5;

     label1:
        $z1 = r0 instanceof double[];

        if $z1 == 0 goto label2;

        $r6 = (double[]) r0;

        $r8 = (double[]) $r6;

        $d0 = (double) i1;

        $r8[i0] = $d0;

        goto label5;

     label2:
        $z2 = r0 instanceof float[];

        if $z2 == 0 goto label3;

        $r4 = (float[]) r0;

        $r5 = (float[]) $r4;

        $f0 = (float) i1;

        $r5[i0] = $f0;

        goto label5;

     label3:
        $z3 = r0 instanceof long[];

        if $z3 == 0 goto label4;

        $r2 = (long[]) r0;

        $r3 = (long[]) $r2;

        $l2 = (long) i1;

        $r3[i0] = $l2;

        goto label5;

     label4:
        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.RuntimeException badArray(java.lang.Object)>(r0);

        throw $r1;

     label5:
        return;
    }

    public static void setLong(java.lang.Object, int, long) throws java.lang.IllegalArgumentException, java.lang.ArrayIndexOutOfBoundsException
    {
        java.lang.Object r0;
        int i0;
        long l1;
        boolean $z0, $z1, $z2;
        java.lang.RuntimeException $r1;
        float[] $r2, $r3;
        float $f0;
        double[] $r4, $r5;
        double $d0;
        long[] $r6, $r7;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $z0 = r0 instanceof long[];

        if $z0 == 0 goto label1;

        $r6 = (long[]) r0;

        $r7 = (long[]) $r6;

        $r7[i0] = l1;

        goto label4;

     label1:
        $z1 = r0 instanceof double[];

        if $z1 == 0 goto label2;

        $r4 = (double[]) r0;

        $r5 = (double[]) $r4;

        $d0 = (double) l1;

        $r5[i0] = $d0;

        goto label4;

     label2:
        $z2 = r0 instanceof float[];

        if $z2 == 0 goto label3;

        $r2 = (float[]) r0;

        $r3 = (float[]) $r2;

        $f0 = (float) l1;

        $r3[i0] = $f0;

        goto label4;

     label3:
        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.RuntimeException badArray(java.lang.Object)>(r0);

        throw $r1;

     label4:
        return;
    }

    public static void setShort(java.lang.Object, int, short) throws java.lang.IllegalArgumentException, java.lang.ArrayIndexOutOfBoundsException
    {
        java.lang.Object r0;
        int i0;
        short s1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.RuntimeException $r1;
        long[] $r2, $r3;
        long $l2;
        int[] $r4, $r5;
        float[] $r6, $r8;
        float $f0;
        double[] $r7, $r9;
        double $d0;
        short[] $r10, $r11;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        s1 := @parameter2: short;

        $z0 = r0 instanceof short[];

        if $z0 == 0 goto label1;

        $r11 = (short[]) r0;

        $r10 = (short[]) $r11;

        $r10[i0] = s1;

        goto label6;

     label1:
        $z1 = r0 instanceof double[];

        if $z1 == 0 goto label2;

        $r7 = (double[]) r0;

        $r9 = (double[]) $r7;

        $d0 = (double) s1;

        $r9[i0] = $d0;

        goto label6;

     label2:
        $z2 = r0 instanceof float[];

        if $z2 == 0 goto label3;

        $r6 = (float[]) r0;

        $r8 = (float[]) $r6;

        $f0 = (float) s1;

        $r8[i0] = $f0;

        goto label6;

     label3:
        $z3 = r0 instanceof int[];

        if $z3 == 0 goto label4;

        $r4 = (int[]) r0;

        $r5 = (int[]) $r4;

        $r5[i0] = s1;

        goto label6;

     label4:
        $z4 = r0 instanceof long[];

        if $z4 == 0 goto label5;

        $r2 = (long[]) r0;

        $r3 = (long[]) $r2;

        $l2 = (long) s1;

        $r3[i0] = $l2;

        goto label6;

     label5:
        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.RuntimeException badArray(java.lang.Object)>(r0);

        throw $r1;

     label6:
        return;
    }
}
