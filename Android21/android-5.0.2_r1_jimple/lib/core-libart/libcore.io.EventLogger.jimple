public final class libcore.io.EventLogger extends java.lang.Object
{
    private static volatile libcore.io.EventLogger$Reporter REPORTER;

    public void <init>()
    {
        libcore.io.EventLogger r0;

        r0 := @this: libcore.io.EventLogger;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void setReporter(libcore.io.EventLogger$Reporter)
    {
        libcore.io.EventLogger$Reporter r0;
        java.lang.NullPointerException $r1;

        r0 := @parameter0: libcore.io.EventLogger$Reporter;

        if r0 != null goto label1;

        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>("reporter == null");

        throw $r1;

     label1:
        <libcore.io.EventLogger: libcore.io.EventLogger$Reporter REPORTER> = r0;

        return;
    }

    public static libcore.io.EventLogger$Reporter getReporter()
    {
        libcore.io.EventLogger$Reporter $r0;

        $r0 = <libcore.io.EventLogger: libcore.io.EventLogger$Reporter REPORTER>;

        return $r0;
    }

    public static transient void writeEvent(int, java.lang.Object[])
    {
        int i0;
        java.lang.Object[] r0;
        libcore.io.EventLogger$Reporter $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Object[];

        $r1 = staticinvoke <libcore.io.EventLogger: libcore.io.EventLogger$Reporter getReporter()>();

        interfaceinvoke $r1.<libcore.io.EventLogger$Reporter: void report(int,java.lang.Object[])>(i0, r0);

        return;
    }

    static void <clinit>()
    {
        libcore.io.EventLogger$DefaultReporter $r0;

        $r0 = new libcore.io.EventLogger$DefaultReporter;

        specialinvoke $r0.<libcore.io.EventLogger$DefaultReporter: void <init>(libcore.io.EventLogger$1)>(null);

        <libcore.io.EventLogger: libcore.io.EventLogger$Reporter REPORTER> = $r0;

        return;
    }
}
