public class java.beans.PropertyChangeSupport extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private static final java.io.ObjectStreamField[] serialPersistentFields;
    private transient java.lang.Object sourceBean;
    private transient java.util.List listeners;

    public void <init>(java.lang.Object)
    {
        java.beans.PropertyChangeSupport r0;
        java.lang.Object r1;
        java.util.concurrent.CopyOnWriteArrayList $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: java.beans.PropertyChangeSupport;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<java.beans.PropertyChangeSupport: java.util.List listeners> = $r2;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("sourceBean == null");

        throw $r3;

     label1:
        r0.<java.beans.PropertyChangeSupport: java.lang.Object sourceBean> = r1;

        return;
    }

    public void firePropertyChange(java.lang.String, java.lang.Object, java.lang.Object)
    {
        java.beans.PropertyChangeSupport r0;
        java.lang.String r1;
        java.lang.Object r2, r3, $r5;
        java.beans.PropertyChangeEvent $r4;

        r0 := @this: java.beans.PropertyChangeSupport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r4 = new java.beans.PropertyChangeEvent;

        $r5 = r0.<java.beans.PropertyChangeSupport: java.lang.Object sourceBean>;

        specialinvoke $r4.<java.beans.PropertyChangeEvent: void <init>(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)>($r5, r1, r2, r3);

        virtualinvoke r0.<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>($r4);

        return;
    }

    public void fireIndexedPropertyChange(java.lang.String, int, java.lang.Object, java.lang.Object)
    {
        java.beans.PropertyChangeSupport r0;
        java.lang.String r1;
        int i0;
        java.lang.Object r2, r3, $r5;
        java.beans.IndexedPropertyChangeEvent $r4;

        r0 := @this: java.beans.PropertyChangeSupport;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        $r4 = new java.beans.IndexedPropertyChangeEvent;

        $r5 = r0.<java.beans.PropertyChangeSupport: java.lang.Object sourceBean>;

        specialinvoke $r4.<java.beans.IndexedPropertyChangeEvent: void <init>(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object,int)>($r5, r1, r2, r3, i0);

        virtualinvoke r0.<java.beans.PropertyChangeSupport: void firePropertyChange(java.beans.PropertyChangeEvent)>($r4);

        return;
    }

    public void removePropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeSupport r0;
        java.lang.String r1;
        java.beans.PropertyChangeListener r2, r4;
        java.util.Iterator r3;
        java.util.List $r5, $r7;
        boolean $z0, $z1;
        java.lang.Object $r6;

        r0 := @this: java.beans.PropertyChangeSupport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.beans.PropertyChangeListener;

        $r5 = r0.<java.beans.PropertyChangeSupport: java.util.List listeners>;

        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.beans.PropertyChangeListener) $r6;

        $z1 = specialinvoke r0.<java.beans.PropertyChangeSupport: boolean equals(java.lang.String,java.util.EventListener,java.util.EventListener)>(r1, r2, r4);

        if $z1 == 0 goto label2;

        $r7 = r0.<java.beans.PropertyChangeSupport: java.util.List listeners>;

        interfaceinvoke $r7.<java.util.List: boolean remove(java.lang.Object)>(r4);

        return;

     label2:
        goto label1;

     label3:
        return;
    }

    private boolean equals(java.lang.String, java.util.EventListener, java.util.EventListener)
    {
        java.beans.PropertyChangeSupport r0;
        java.lang.String r1, r5;
        java.util.EventListener r2, r3;
        java.beans.PropertyChangeListenerProxy r4, r6;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: java.beans.PropertyChangeSupport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.EventListener;

        r3 := @parameter2: java.util.EventListener;

     label1:
        $z0 = r3 instanceof java.beans.PropertyChangeListenerProxy;

        if $z0 == 0 goto label5;

        r4 = (java.beans.PropertyChangeListenerProxy) r3;

        r5 = virtualinvoke r4.<java.beans.PropertyChangeListenerProxy: java.lang.String getPropertyName()>();

        r3 = virtualinvoke r4.<java.beans.PropertyChangeListenerProxy: java.util.EventListener getListener()>();

        if r1 != null goto label3;

        $z4 = r2 instanceof java.beans.PropertyChangeListenerProxy;

        if $z4 != 0 goto label2;

        return 0;

     label2:
        r6 = (java.beans.PropertyChangeListenerProxy) r2;

        r1 = virtualinvoke r6.<java.beans.PropertyChangeListenerProxy: java.lang.String getPropertyName()>();

        r2 = virtualinvoke r6.<java.beans.PropertyChangeListenerProxy: java.util.EventListener getListener()>();

     label3:
        $z3 = staticinvoke <libcore.util.Objects: boolean equal(java.lang.Object,java.lang.Object)>(r1, r5);

        if $z3 != 0 goto label4;

        return 0;

     label4:
        r1 = null;

        goto label1;

     label5:
        if r1 != null goto label6;

        $z1 = staticinvoke <libcore.util.Objects: boolean equal(java.lang.Object,java.lang.Object)>(r2, r3);

        if $z1 == 0 goto label6;

        $z2 = 1;

        goto label7;

     label6:
        $z2 = 0;

     label7:
        return $z2;
    }

    public void addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeSupport r0;
        java.lang.String r1;
        java.beans.PropertyChangeListener r2;
        java.beans.PropertyChangeListenerProxy $r3;
        java.util.List $r4;

        r0 := @this: java.beans.PropertyChangeSupport;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.beans.PropertyChangeListener;

        if r2 == null goto label1;

        if r1 == null goto label1;

        $r4 = r0.<java.beans.PropertyChangeSupport: java.util.List listeners>;

        $r3 = new java.beans.PropertyChangeListenerProxy;

        specialinvoke $r3.<java.beans.PropertyChangeListenerProxy: void <init>(java.lang.String,java.beans.PropertyChangeListener)>(r1, r2);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r3);

     label1:
        return;
    }

    public java.beans.PropertyChangeListener[] getPropertyChangeListeners(java.lang.String)
    {
        java.beans.PropertyChangeSupport r0;
        java.lang.String r1, $r12;
        java.util.ArrayList r2, $r5;
        java.util.Iterator r3;
        java.beans.PropertyChangeListener r4;
        java.util.List $r6;
        boolean $z0, $z1, $z2;
        int $i0;
        java.beans.PropertyChangeListener[] $r7, $r9;
        java.lang.Object[] $r8;
        java.lang.Object $r10;
        java.beans.PropertyChangeListenerProxy $r11;

        r0 := @this: java.beans.PropertyChangeSupport;

        r1 := @parameter0: java.lang.String;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = $r5;

        $r6 = r0.<java.beans.PropertyChangeSupport: java.util.List listeners>;

        r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.beans.PropertyChangeListener) $r10;

        $z1 = r4 instanceof java.beans.PropertyChangeListenerProxy;

        if $z1 == 0 goto label2;

        $r11 = (java.beans.PropertyChangeListenerProxy) r4;

        $r12 = virtualinvoke $r11.<java.beans.PropertyChangeListenerProxy: java.lang.String getPropertyName()>();

        $z2 = staticinvoke <libcore.util.Objects: boolean equal(java.lang.Object,java.lang.Object)>(r1, $r12);

        if $z2 == 0 goto label2;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4);

     label2:
        goto label1;

     label3:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $r7 = newarray (java.beans.PropertyChangeListener)[$i0];

        $r8 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r9 = (java.beans.PropertyChangeListener[]) $r8;

        return $r9;
    }

    public void firePropertyChange(java.lang.String, boolean, boolean)
    {
        java.beans.PropertyChangeSupport r0;
        java.lang.String r1;
        boolean z0, z1;
        java.lang.Boolean $r2, $r3;

        r0 := @this: java.beans.PropertyChangeSupport;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        virtualinvoke r0.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>(r1, $r2, $r3);

        return;
    }

    public void fireIndexedPropertyChange(java.lang.String, int, boolean, boolean)
    {
        java.beans.PropertyChangeSupport r0;
        java.lang.String r1;
        int i0;
        boolean z0, z1;
        java.lang.Boolean $r2, $r3;

        r0 := @this: java.beans.PropertyChangeSupport;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        if z0 == z1 goto label1;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        virtualinvoke r0.<java.beans.PropertyChangeSupport: void fireIndexedPropertyChange(java.lang.String,int,java.lang.Object,java.lang.Object)>(r1, i0, $r2, $r3);

     label1:
        return;
    }

    public void firePropertyChange(java.lang.String, int, int)
    {
        java.beans.PropertyChangeSupport r0;
        java.lang.String r1;
        int i0, i1;
        java.lang.Integer $r2, $r3;

        r0 := @this: java.beans.PropertyChangeSupport;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke r0.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>(r1, $r2, $r3);

        return;
    }

    public void fireIndexedPropertyChange(java.lang.String, int, int, int)
    {
        java.beans.PropertyChangeSupport r0;
        java.lang.String r1;
        int i0, i1, i2;
        java.lang.Integer $r2, $r3;

        r0 := @this: java.beans.PropertyChangeSupport;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        if i1 == i2 goto label1;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        virtualinvoke r0.<java.beans.PropertyChangeSupport: void fireIndexedPropertyChange(java.lang.String,int,java.lang.Object,java.lang.Object)>(r1, i0, $r2, $r3);

     label1:
        return;
    }

    public boolean hasListeners(java.lang.String)
    {
        java.beans.PropertyChangeSupport r0;
        java.lang.String r1, $r7;
        java.util.Iterator r2;
        java.beans.PropertyChangeListener r3;
        java.util.List $r4;
        boolean $z0, $z1, $z2;
        java.lang.Object $r5;
        java.beans.PropertyChangeListenerProxy $r6;

        r0 := @this: java.beans.PropertyChangeSupport;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<java.beans.PropertyChangeSupport: java.util.List listeners>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.beans.PropertyChangeListener) $r5;

        $z1 = r3 instanceof java.beans.PropertyChangeListenerProxy;

        if $z1 == 0 goto label2;

        $r6 = (java.beans.PropertyChangeListenerProxy) r3;

        $r7 = virtualinvoke $r6.<java.beans.PropertyChangeListenerProxy: java.lang.String getPropertyName()>();

        $z2 = staticinvoke <libcore.util.Objects: boolean equal(java.lang.Object,java.lang.Object)>(r1, $r7);

        if $z2 == 0 goto label3;

     label2:
        return 1;

     label3:
        goto label1;

     label4:
        return 0;
    }

    public void removePropertyChangeListener(java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeSupport r0;
        java.beans.PropertyChangeListener r1, r3;
        java.util.Iterator r2;
        java.util.List $r4, $r6;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: java.beans.PropertyChangeSupport;

        r1 := @parameter0: java.beans.PropertyChangeListener;

        $r4 = r0.<java.beans.PropertyChangeSupport: java.util.List listeners>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.beans.PropertyChangeListener) $r5;

        $z1 = specialinvoke r0.<java.beans.PropertyChangeSupport: boolean equals(java.lang.String,java.util.EventListener,java.util.EventListener)>(null, r1, r3);

        if $z1 == 0 goto label2;

        $r6 = r0.<java.beans.PropertyChangeSupport: java.util.List listeners>;

        interfaceinvoke $r6.<java.util.List: boolean remove(java.lang.Object)>(r3);

        return;

     label2:
        goto label1;

     label3:
        return;
    }

    public void addPropertyChangeListener(java.beans.PropertyChangeListener)
    {
        java.beans.PropertyChangeSupport r0;
        java.beans.PropertyChangeListener r1;
        java.util.List $r2;

        r0 := @this: java.beans.PropertyChangeSupport;

        r1 := @parameter0: java.beans.PropertyChangeListener;

        if r1 == null goto label1;

        $r2 = r0.<java.beans.PropertyChangeSupport: java.util.List listeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

     label1:
        return;
    }

    public java.beans.PropertyChangeListener[] getPropertyChangeListeners()
    {
        java.beans.PropertyChangeSupport r0;
        java.beans.PropertyChangeListener[] $r1, $r4;
        java.util.List $r2;
        java.lang.Object[] $r3;

        r0 := @this: java.beans.PropertyChangeSupport;

        $r2 = r0.<java.beans.PropertyChangeSupport: java.util.List listeners>;

        $r1 = newarray (java.beans.PropertyChangeListener)[0];

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        $r4 = (java.beans.PropertyChangeListener[]) $r3;

        return $r4;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.beans.PropertyChangeSupport r0, r7, $r19;
        java.io.ObjectOutputStream r1;
        java.util.Hashtable r2, $r8;
        java.util.Iterator r3, r23;
        java.beans.PropertyChangeListener r4, r6, r24;
        java.beans.PropertyChangeListenerProxy r5;
        java.util.List $r9, $r11, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object $r10, $r12, $r13, $r15, $r18;
        java.util.EventListener $r14;
        java.lang.String $r16, $r21;
        java.io.ObjectOutputStream$PutField r22;

        r0 := @this: java.beans.PropertyChangeSupport;

        r1 := @parameter0: java.io.ObjectOutputStream;

        $r8 = new java.util.Hashtable;

        specialinvoke $r8.<java.util.Hashtable: void <init>()>();

        r2 = $r8;

        $r9 = r0.<java.beans.PropertyChangeSupport: java.util.List listeners>;

        r3 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r13 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.beans.PropertyChangeListener) $r13;

        $z4 = r4 instanceof java.beans.PropertyChangeListenerProxy;

        if $z4 == 0 goto label3;

        $z3 = r4 instanceof java.io.Serializable;

        if $z3 != 0 goto label3;

        r5 = (java.beans.PropertyChangeListenerProxy) r4;

        $r14 = virtualinvoke r5.<java.beans.PropertyChangeListenerProxy: java.util.EventListener getListener()>();

        r6 = (java.beans.PropertyChangeListener) $r14;

        $z5 = r6 instanceof java.io.Serializable;

        if $z5 == 0 goto label3;

        $r16 = virtualinvoke r5.<java.beans.PropertyChangeListenerProxy: java.lang.String getPropertyName()>();

        $r15 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r16);

        r7 = (java.beans.PropertyChangeSupport) $r15;

        if r7 != null goto label2;

        $r19 = new java.beans.PropertyChangeSupport;

        $r18 = r0.<java.beans.PropertyChangeSupport: java.lang.Object sourceBean>;

        specialinvoke $r19.<java.beans.PropertyChangeSupport: void <init>(java.lang.Object)>($r18);

        r7 = $r19;

        $r21 = virtualinvoke r5.<java.beans.PropertyChangeListenerProxy: java.lang.String getPropertyName()>();

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, r7);

     label2:
        $r17 = r7.<java.beans.PropertyChangeSupport: java.util.List listeners>;

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>(r6);

     label3:
        goto label1;

     label4:
        r22 = virtualinvoke r1.<java.io.ObjectOutputStream: java.io.ObjectOutputStream$PutField putFields()>();

        $r10 = r0.<java.beans.PropertyChangeSupport: java.lang.Object sourceBean>;

        virtualinvoke r22.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,java.lang.Object)>("source", $r10);

        virtualinvoke r22.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,java.lang.Object)>("children", r2);

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeFields()>();

        $r11 = r0.<java.beans.PropertyChangeSupport: java.util.List listeners>;

        r23 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r12 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>();

        r24 = (java.beans.PropertyChangeListener) $r12;

        $z2 = r24 instanceof java.io.Serializable;

        if $z2 == 0 goto label6;

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r24);

     label6:
        goto label5;

     label7:
        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(null);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.beans.PropertyChangeSupport r0, $r16;
        java.io.ObjectInputStream r1;
        java.io.ObjectInputStream$GetField r2;
        java.util.Map r3;
        java.util.Iterator r4, r6;
        java.util.Map$Entry r5;
        java.beans.PropertyChangeListener r7, $r12, r24;
        java.lang.Object $r8, $r10, $r11, $r15, $r17, $r19, $r23;
        java.util.concurrent.CopyOnWriteArrayList $r9;
        java.util.List $r13, $r18, $r20;
        java.util.Set $r14;
        boolean $z1, $z2;
        java.beans.PropertyChangeListenerProxy $r21;
        java.lang.String $r22;

        r0 := @this: java.beans.PropertyChangeSupport;

        r1 := @parameter0: java.io.ObjectInputStream;

        r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.io.ObjectInputStream$GetField readFields()>();

        $r8 = virtualinvoke r2.<java.io.ObjectInputStream$GetField: java.lang.Object get(java.lang.String,java.lang.Object)>("source", null);

        r0.<java.beans.PropertyChangeSupport: java.lang.Object sourceBean> = $r8;

        $r9 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r9.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<java.beans.PropertyChangeSupport: java.util.List listeners> = $r9;

        $r10 = virtualinvoke r2.<java.io.ObjectInputStream$GetField: java.lang.Object get(java.lang.String,java.lang.Object)>("children", null);

        r3 = (java.util.Map) $r10;

        if r3 == null goto label4;

        $r14 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r15;

        $r17 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r16 = (java.beans.PropertyChangeSupport) $r17;

        $r18 = $r16.<java.beans.PropertyChangeSupport: java.util.List listeners>;

        r6 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r19 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.beans.PropertyChangeListener) $r19;

        $r20 = r0.<java.beans.PropertyChangeSupport: java.util.List listeners>;

        $r21 = new java.beans.PropertyChangeListenerProxy;

        $r23 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r22 = (java.lang.String) $r23;

        specialinvoke $r21.<java.beans.PropertyChangeListenerProxy: void <init>(java.lang.String,java.beans.PropertyChangeListener)>($r22, r7);

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r21);

        goto label2;

     label3:
        goto label1;

     label4:
        $r11 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r12 = (java.beans.PropertyChangeListener) $r11;

        r24 = $r12;

        if $r12 == null goto label5;

        $r13 = r0.<java.beans.PropertyChangeSupport: java.util.List listeners>;

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r24);

        goto label4;

     label5:
        return;
    }

    public void firePropertyChange(java.beans.PropertyChangeEvent)
    {
        java.beans.PropertyChangeSupport r0;
        java.beans.PropertyChangeEvent r1;
        java.lang.String r2, $r10;
        java.lang.Object r3, r4, $r9;
        java.util.Iterator r5;
        java.beans.PropertyChangeListener r6;
        java.beans.PropertyChangeListenerProxy r7;
        java.util.List $r8;
        boolean $z0, $z1, $z2, $z3;
        java.util.EventListener $r11;

        r0 := @this: java.beans.PropertyChangeSupport;

        r1 := @parameter0: java.beans.PropertyChangeEvent;

        r2 = virtualinvoke r1.<java.beans.PropertyChangeEvent: java.lang.String getPropertyName()>();

        r3 = virtualinvoke r1.<java.beans.PropertyChangeEvent: java.lang.Object getOldValue()>();

        r4 = virtualinvoke r1.<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>();

        if r4 == null goto label1;

        if r3 == null goto label1;

        $z3 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r3);

        if $z3 == 0 goto label1;

        return;

     label1:
        $r8 = r0.<java.beans.PropertyChangeSupport: java.util.List listeners>;

        r5 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.beans.PropertyChangeListener) $r9;

     label3:
        $z1 = r6 instanceof java.beans.PropertyChangeListenerProxy;

        if $z1 == 0 goto label5;

        r7 = (java.beans.PropertyChangeListenerProxy) r6;

        $r10 = virtualinvoke r7.<java.beans.PropertyChangeListenerProxy: java.lang.String getPropertyName()>();

        $z2 = staticinvoke <libcore.util.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r10, r2);

        if $z2 != 0 goto label4;

        goto label2;

     label4:
        $r11 = virtualinvoke r7.<java.beans.PropertyChangeListenerProxy: java.util.EventListener getListener()>();

        r6 = (java.beans.PropertyChangeListener) $r11;

        goto label3;

     label5:
        interfaceinvoke r6.<java.beans.PropertyChangeListener: void propertyChange(java.beans.PropertyChangeEvent)>(r1);

        goto label2;

     label6:
        return;
    }

    static void <clinit>()
    {
        java.io.ObjectStreamField[] $r0;
        java.io.ObjectStreamField $r1, $r2, $r3;
        java.lang.Class $r4;

        <java.beans.PropertyChangeSupport: long serialVersionUID> = 6401253773779951803L;

        $r0 = newarray (java.io.ObjectStreamField)[3];

        $r1 = new java.io.ObjectStreamField;

        specialinvoke $r1.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("source", class "java/lang/Object");

        $r0[0] = $r1;

        $r2 = new java.io.ObjectStreamField;

        specialinvoke $r2.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("children", class "java/lang/Object");

        $r0[1] = $r2;

        $r3 = new java.io.ObjectStreamField;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r3.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("propertyChangeSupportSerializedDataVersion", $r4);

        $r0[2] = $r3;

        <java.beans.PropertyChangeSupport: java.io.ObjectStreamField[] serialPersistentFields> = $r0;

        return;
    }
}
