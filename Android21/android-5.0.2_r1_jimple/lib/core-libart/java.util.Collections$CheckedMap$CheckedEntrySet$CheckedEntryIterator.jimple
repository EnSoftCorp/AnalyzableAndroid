class java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntryIterator extends java.lang.Object implements java.util.Iterator
{
    java.util.Iterator i;
    java.lang.Class valueType;

    public void <init>(java.util.Iterator, java.lang.Class)
    {
        java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntryIterator r0;
        java.util.Iterator r1;
        java.lang.Class r2;

        r0 := @this: java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntryIterator;

        r1 := @parameter0: java.util.Iterator;

        r2 := @parameter1: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntryIterator: java.util.Iterator i> = r1;

        r0.<java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntryIterator: java.lang.Class valueType> = r2;

        return;
    }

    public boolean hasNext()
    {
        java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntryIterator r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntryIterator;

        $r1 = r0.<java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntryIterator: java.util.Iterator i>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public void remove()
    {
        java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntryIterator r0;
        java.util.Iterator $r1;

        r0 := @this: java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntryIterator;

        $r1 = r0.<java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntryIterator: java.util.Iterator i>;

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        return;
    }

    public java.util.Map$Entry next()
    {
        java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntryIterator r0;
        java.util.Collections$CheckedMap$CheckedEntry $r1;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.lang.Class $r4;
        java.util.Map$Entry $r5;

        r0 := @this: java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntryIterator;

        $r1 = new java.util.Collections$CheckedMap$CheckedEntry;

        $r2 = r0.<java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntryIterator: java.util.Iterator i>;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r3;

        $r4 = r0.<java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntryIterator: java.lang.Class valueType>;

        specialinvoke $r1.<java.util.Collections$CheckedMap$CheckedEntry: void <init>(java.util.Map$Entry,java.lang.Class)>($r5, $r4);

        return $r1;
    }

    public volatile java.lang.Object next()
    {
        java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntryIterator r0;
        java.util.Map$Entry $r1;

        r0 := @this: java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntryIterator;

        $r1 = virtualinvoke r0.<java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntryIterator: java.util.Map$Entry next()>();

        return $r1;
    }
}
