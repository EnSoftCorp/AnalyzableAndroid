public class java.util.PriorityQueue extends java.util.AbstractQueue implements java.io.Serializable
{
    private static final long serialVersionUID;
    private static final int DEFAULT_CAPACITY;
    private static final double DEFAULT_INIT_CAPACITY_RATIO;
    private static final int DEFAULT_CAPACITY_RATIO;
    private int size;
    private java.util.Comparator comparator;
    private transient java.lang.Object[] elements;

    public void <init>()
    {
        java.util.PriorityQueue r0;

        r0 := @this: java.util.PriorityQueue;

        specialinvoke r0.<java.util.PriorityQueue: void <init>(int)>(11);

        return;
    }

    public void <init>(int)
    {
        java.util.PriorityQueue r0;
        int i0;

        r0 := @this: java.util.PriorityQueue;

        i0 := @parameter0: int;

        specialinvoke r0.<java.util.PriorityQueue: void <init>(int,java.util.Comparator)>(i0, null);

        return;
    }

    public void <init>(int, java.util.Comparator)
    {
        java.util.PriorityQueue r0;
        int i0;
        java.util.Comparator r1;
        java.lang.Object[] $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: java.util.PriorityQueue;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Comparator;

        specialinvoke r0.<java.util.AbstractQueue: void <init>()>();

        if i0 >= 1 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("initialCapacity < 1: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        $r2 = specialinvoke r0.<java.util.PriorityQueue: java.lang.Object[] newElementArray(int)>(i0);

        r0.<java.util.PriorityQueue: java.lang.Object[] elements> = $r2;

        r0.<java.util.PriorityQueue: java.util.Comparator comparator> = r1;

        return;
    }

    public void <init>(java.util.Collection)
    {
        java.util.PriorityQueue r0, $r3;
        java.util.Collection r1;
        boolean $z0, $z1;
        java.util.SortedSet $r2;

        r0 := @this: java.util.PriorityQueue;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<java.util.AbstractQueue: void <init>()>();

        $z0 = r1 instanceof java.util.PriorityQueue;

        if $z0 == 0 goto label1;

        $r3 = (java.util.PriorityQueue) r1;

        specialinvoke r0.<java.util.PriorityQueue: void getFromPriorityQueue(java.util.PriorityQueue)>($r3);

        goto label3;

     label1:
        $z1 = r1 instanceof java.util.SortedSet;

        if $z1 == 0 goto label2;

        $r2 = (java.util.SortedSet) r1;

        specialinvoke r0.<java.util.PriorityQueue: void getFromSortedSet(java.util.SortedSet)>($r2);

        goto label3;

     label2:
        specialinvoke r0.<java.util.PriorityQueue: void initSize(java.util.Collection)>(r1);

        virtualinvoke r0.<java.util.PriorityQueue: boolean addAll(java.util.Collection)>(r1);

     label3:
        return;
    }

    public void <init>(java.util.PriorityQueue)
    {
        java.util.PriorityQueue r0, r1;

        r0 := @this: java.util.PriorityQueue;

        r1 := @parameter0: java.util.PriorityQueue;

        specialinvoke r0.<java.util.AbstractQueue: void <init>()>();

        specialinvoke r0.<java.util.PriorityQueue: void getFromPriorityQueue(java.util.PriorityQueue)>(r1);

        return;
    }

    public void <init>(java.util.SortedSet)
    {
        java.util.PriorityQueue r0;
        java.util.SortedSet r1;

        r0 := @this: java.util.PriorityQueue;

        r1 := @parameter0: java.util.SortedSet;

        specialinvoke r0.<java.util.AbstractQueue: void <init>()>();

        specialinvoke r0.<java.util.PriorityQueue: void getFromSortedSet(java.util.SortedSet)>(r1);

        return;
    }

    public java.util.Iterator iterator()
    {
        java.util.PriorityQueue r0;
        java.util.PriorityQueue$PriorityIterator $r1;

        r0 := @this: java.util.PriorityQueue;

        $r1 = new java.util.PriorityQueue$PriorityIterator;

        specialinvoke $r1.<java.util.PriorityQueue$PriorityIterator: void <init>(java.util.PriorityQueue,java.util.PriorityQueue$1)>(r0, null);

        return $r1;
    }

    public int size()
    {
        java.util.PriorityQueue r0;
        int $i0;

        r0 := @this: java.util.PriorityQueue;

        $i0 = r0.<java.util.PriorityQueue: int size>;

        return $i0;
    }

    public void clear()
    {
        java.util.PriorityQueue r0;
        java.lang.Object[] $r1;

        r0 := @this: java.util.PriorityQueue;

        $r1 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r1, null);

        r0.<java.util.PriorityQueue: int size> = 0;

        return;
    }

    public boolean offer(java.lang.Object)
    {
        java.util.PriorityQueue r0;
        java.lang.Object r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object[] $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: java.util.PriorityQueue;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("o == null");

        throw $r3;

     label1:
        $i0 = r0.<java.util.PriorityQueue: int size>;

        $i1 = $i0 + 1;

        specialinvoke r0.<java.util.PriorityQueue: void growToSize(int)>($i1);

        $r2 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        $i2 = r0.<java.util.PriorityQueue: int size>;

        $r2[$i2] = r1;

        $i3 = r0.<java.util.PriorityQueue: int size>;

        $i4 = $i3 + 1;

        r0.<java.util.PriorityQueue: int size> = $i4;

        specialinvoke r0.<java.util.PriorityQueue: void siftUp(int)>($i3);

        return 1;
    }

    public java.lang.Object poll()
    {
        java.util.PriorityQueue r0;
        java.lang.Object r1;
        boolean $z0;
        java.lang.Object[] $r2;

        r0 := @this: java.util.PriorityQueue;

        $z0 = virtualinvoke r0.<java.util.PriorityQueue: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        r1 = $r2[0];

        specialinvoke r0.<java.util.PriorityQueue: void removeAt(int)>(0);

        return r1;
    }

    public java.lang.Object peek()
    {
        java.util.PriorityQueue r0;
        boolean $z0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;

        r0 := @this: java.util.PriorityQueue;

        $z0 = virtualinvoke r0.<java.util.PriorityQueue: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        $r2 = $r1[0];

        return $r2;
    }

    public java.util.Comparator comparator()
    {
        java.util.PriorityQueue r0;
        java.util.Comparator $r1;

        r0 := @this: java.util.PriorityQueue;

        $r1 = r0.<java.util.PriorityQueue: java.util.Comparator comparator>;

        return $r1;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.PriorityQueue r0;
        java.lang.Object r1, $r3;
        int i0, $i1;
        java.lang.Object[] $r2;
        boolean $z0;

        r0 := @this: java.util.PriorityQueue;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        i0 = 0;

     label2:
        $i1 = r0.<java.util.PriorityQueue: int size>;

        if i0 >= $i1 goto label4;

        $r2 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        $r3 = $r2[i0];

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        specialinvoke r0.<java.util.PriorityQueue: void removeAt(int)>(i0);

        return 1;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        return 0;
    }

    public boolean add(java.lang.Object)
    {
        java.util.PriorityQueue r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: java.util.PriorityQueue;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<java.util.PriorityQueue: boolean offer(java.lang.Object)>(r1);

        return $z0;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.util.PriorityQueue r0;
        java.io.ObjectInputStream r1;
        int i0, i1, $i2;
        java.lang.Object[] $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: java.util.PriorityQueue;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        $r2 = specialinvoke r0.<java.util.PriorityQueue: java.lang.Object[] newElementArray(int)>(i0);

        r0.<java.util.PriorityQueue: java.lang.Object[] elements> = $r2;

        i1 = 0;

     label1:
        $i2 = r0.<java.util.PriorityQueue: int size>;

        if i1 >= $i2 goto label2;

        $r3 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        $r4 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r3[i1] = $r4;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private java.lang.Object[] newElementArray(int)
    {
        java.util.PriorityQueue r0;
        int i0;
        java.lang.Object[] $r1, $r2;

        r0 := @this: java.util.PriorityQueue;

        i0 := @parameter0: int;

        $r1 = newarray (java.lang.Object)[i0];

        $r2 = (java.lang.Object[]) $r1;

        return $r2;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.util.PriorityQueue r0;
        java.io.ObjectOutputStream r1;
        int i0, $i1, $i2;
        java.lang.Object[] $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: java.util.PriorityQueue;

        r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $r2 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        $i1 = lengthof $r2;

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i1);

        i0 = 0;

     label1:
        $i2 = r0.<java.util.PriorityQueue: int size>;

        if i0 >= $i2 goto label2;

        $r3 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        $r4 = $r3[i0];

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r4);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    private void getFromPriorityQueue(java.util.PriorityQueue)
    {
        java.util.PriorityQueue r0, r1;
        java.util.Comparator $r2;
        java.lang.Object[] $r3, $r4;
        int $i0, $i1;

        r0 := @this: java.util.PriorityQueue;

        r1 := @parameter0: java.util.PriorityQueue;

        specialinvoke r0.<java.util.PriorityQueue: void initSize(java.util.Collection)>(r1);

        $r2 = virtualinvoke r1.<java.util.PriorityQueue: java.util.Comparator comparator()>();

        r0.<java.util.PriorityQueue: java.util.Comparator comparator> = $r2;

        $r3 = r1.<java.util.PriorityQueue: java.lang.Object[] elements>;

        $r4 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        $i0 = virtualinvoke r1.<java.util.PriorityQueue: int size()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, 0, $i0);

        $i1 = virtualinvoke r1.<java.util.PriorityQueue: int size()>();

        r0.<java.util.PriorityQueue: int size> = $i1;

        return;
    }

    private void getFromSortedSet(java.util.SortedSet)
    {
        java.util.PriorityQueue r0;
        java.util.SortedSet r1;
        java.util.Iterator r2;
        java.util.Comparator $r3;
        boolean $z0;
        int $i0, $i1;
        java.lang.Object[] $r4;
        java.lang.Object $r5;

        r0 := @this: java.util.PriorityQueue;

        r1 := @parameter0: java.util.SortedSet;

        specialinvoke r0.<java.util.PriorityQueue: void initSize(java.util.Collection)>(r1);

        $r3 = interfaceinvoke r1.<java.util.SortedSet: java.util.Comparator comparator()>();

        r0.<java.util.PriorityQueue: java.util.Comparator comparator> = $r3;

        r2 = interfaceinvoke r1.<java.util.SortedSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        $i0 = r0.<java.util.PriorityQueue: int size>;

        $i1 = $i0 + 1;

        r0.<java.util.PriorityQueue: int size> = $i1;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r4[$i0] = $r5;

        goto label1;

     label2:
        return;
    }

    private void removeAt(int)
    {
        java.util.PriorityQueue r0;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object r1, $r6;
        java.lang.Object[] $r2, $r3, $r4, $r5;

        r0 := @this: java.util.PriorityQueue;

        i0 := @parameter0: int;

        $i1 = r0.<java.util.PriorityQueue: int size>;

        $i2 = $i1 - 1;

        r0.<java.util.PriorityQueue: int size> = $i2;

        $r2 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        $i3 = r0.<java.util.PriorityQueue: int size>;

        r1 = $r2[$i3];

        $r3 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        $r3[i0] = r1;

        specialinvoke r0.<java.util.PriorityQueue: void siftDown(int)>(i0);

        $r4 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        $i4 = r0.<java.util.PriorityQueue: int size>;

        $r4[$i4] = null;

        $r5 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        $r6 = $r5[i0];

        if r1 != $r6 goto label1;

        specialinvoke r0.<java.util.PriorityQueue: void siftUp(int)>(i0);

     label1:
        return;
    }

    private int compare(java.lang.Object, java.lang.Object)
    {
        java.util.PriorityQueue r0;
        java.lang.Object r1, r2;
        java.util.Comparator $r3, $r5;
        java.lang.Comparable $r4;
        int $i0, $i1;

        r0 := @this: java.util.PriorityQueue;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<java.util.PriorityQueue: java.util.Comparator comparator>;

        if $r3 == null goto label1;

        $r5 = r0.<java.util.PriorityQueue: java.util.Comparator comparator>;

        $i1 = interfaceinvoke $r5.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r1, r2);

        return $i1;

     label1:
        $r4 = (java.lang.Comparable) r1;

        $i0 = interfaceinvoke $r4.<java.lang.Comparable: int compareTo(java.lang.Object)>(r2);

        return $i0;
    }

    private void siftUp(int)
    {
        java.util.PriorityQueue r0;
        int i0, i1, $i2, $i3;
        java.lang.Object r1, r2;
        java.lang.Object[] $r3, $r4, $r5, $r6;

        r0 := @this: java.util.PriorityQueue;

        i0 := @parameter0: int;

        $r3 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        r1 = $r3[i0];

     label1:
        if i0 <= 0 goto label3;

        $i2 = i0 - 1;

        i1 = $i2 / 2;

        $r5 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        r2 = $r5[i1];

        $i3 = specialinvoke r0.<java.util.PriorityQueue: int compare(java.lang.Object,java.lang.Object)>(r2, r1);

        if $i3 > 0 goto label2;

        goto label3;

     label2:
        $r6 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        $r6[i0] = r2;

        i0 = i1;

        goto label1;

     label3:
        $r4 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        $r4[i0] = r1;

        return;
    }

    private void siftDown(int)
    {
        java.util.PriorityQueue r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.Object r1, $r5, $r7, $r11, $r12;
        java.lang.Object[] $r2, $r3, $r4, $r6, $r8, $r9, $r10;

        r0 := @this: java.util.PriorityQueue;

        i0 := @parameter0: int;

        $r2 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        r1 = $r2[i0];

     label1:
        $i2 = i0 * 2;

        $i3 = $i2 + 1;

        i1 = $i3;

        $i4 = r0.<java.util.PriorityQueue: int size>;

        if $i3 >= $i4 goto label4;

        $i6 = i1 + 1;

        $i5 = r0.<java.util.PriorityQueue: int size>;

        if $i6 >= $i5 goto label2;

        $r10 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        $i8 = i1 + 1;

        $r11 = $r10[$i8];

        $r9 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        $r12 = $r9[i1];

        $i9 = specialinvoke r0.<java.util.PriorityQueue: int compare(java.lang.Object,java.lang.Object)>($r11, $r12);

        if $i9 >= 0 goto label2;

        i1 = i1 + 1;

     label2:
        $r4 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        $r5 = $r4[i1];

        $i7 = specialinvoke r0.<java.util.PriorityQueue: int compare(java.lang.Object,java.lang.Object)>(r1, $r5);

        if $i7 > 0 goto label3;

        goto label4;

     label3:
        $r8 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        $r6 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        $r7 = $r6[i1];

        $r8[i0] = $r7;

        i0 = i1;

        goto label1;

     label4:
        $r3 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        $r3[i0] = r1;

        return;
    }

    private void initSize(java.util.Collection)
    {
        java.util.PriorityQueue r0;
        java.util.Collection r1;
        int i0, $i1;
        boolean $z0;
        double $d0, $d1, $d2;
        java.lang.Object[] $r2, $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: java.util.PriorityQueue;

        r1 := @parameter0: java.util.Collection;

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("c == null");

        throw $r4;

     label1:
        $z0 = interfaceinvoke r1.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r3 = specialinvoke r0.<java.util.PriorityQueue: java.lang.Object[] newElementArray(int)>(1);

        r0.<java.util.PriorityQueue: java.lang.Object[] elements> = $r3;

        goto label3;

     label2:
        $i1 = interfaceinvoke r1.<java.util.Collection: int size()>();

        $d0 = (double) $i1;

        $d1 = $d0 * 1.1;

        $d2 = staticinvoke <java.lang.Math: double ceil(double)>($d1);

        i0 = (int) $d2;

        $r2 = specialinvoke r0.<java.util.PriorityQueue: java.lang.Object[] newElementArray(int)>(i0);

        r0.<java.util.PriorityQueue: java.lang.Object[] elements> = $r2;

     label3:
        return;
    }

    private void growToSize(int)
    {
        java.util.PriorityQueue r0;
        int i0, $i1, $i2, $i3;
        java.lang.Object[] r1, $r2, $r3, $r4;

        r0 := @this: java.util.PriorityQueue;

        i0 := @parameter0: int;

        $r2 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        $i1 = lengthof $r2;

        if i0 <= $i1 goto label1;

        $i2 = i0 * 2;

        r1 = specialinvoke r0.<java.util.PriorityQueue: java.lang.Object[] newElementArray(int)>($i2);

        $r4 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        $r3 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        $i3 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r1, 0, $i3);

        r0.<java.util.PriorityQueue: java.lang.Object[] elements> = r1;

     label1:
        return;
    }

    static int access$100(java.util.PriorityQueue)
    {
        java.util.PriorityQueue r0;
        int $i0;

        r0 := @parameter0: java.util.PriorityQueue;

        $i0 = r0.<java.util.PriorityQueue: int size>;

        return $i0;
    }

    static java.lang.Object[] access$200(java.util.PriorityQueue)
    {
        java.util.PriorityQueue r0;
        java.lang.Object[] $r1;

        r0 := @parameter0: java.util.PriorityQueue;

        $r1 = r0.<java.util.PriorityQueue: java.lang.Object[] elements>;

        return $r1;
    }

    static void access$300(java.util.PriorityQueue, int)
    {
        java.util.PriorityQueue r0;
        int i0;

        r0 := @parameter0: java.util.PriorityQueue;

        i0 := @parameter1: int;

        specialinvoke r0.<java.util.PriorityQueue: void removeAt(int)>(i0);

        return;
    }

    public static void <clinit>()
    {
        <java.util.PriorityQueue: int DEFAULT_CAPACITY_RATIO> = 2;

        <java.util.PriorityQueue: double DEFAULT_INIT_CAPACITY_RATIO> = 1.1;

        <java.util.PriorityQueue: int DEFAULT_CAPACITY> = 11;

        <java.util.PriorityQueue: long serialVersionUID> = -7720805057305804111L;

        return;
    }
}
