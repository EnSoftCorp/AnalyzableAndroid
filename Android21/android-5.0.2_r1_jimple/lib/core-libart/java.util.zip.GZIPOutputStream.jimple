public class java.util.zip.GZIPOutputStream extends java.util.zip.DeflaterOutputStream
{
    protected java.util.zip.CRC32 crc;

    public void <init>(java.io.OutputStream) throws java.io.IOException
    {
        java.util.zip.GZIPOutputStream r0;
        java.io.OutputStream r1;

        r0 := @this: java.util.zip.GZIPOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream,int,boolean)>(r1, 512, 0);

        return;
    }

    public void <init>(java.io.OutputStream, boolean) throws java.io.IOException
    {
        java.util.zip.GZIPOutputStream r0;
        java.io.OutputStream r1;
        boolean z0;

        r0 := @this: java.util.zip.GZIPOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream,int,boolean)>(r1, 512, z0);

        return;
    }

    public void <init>(java.io.OutputStream, int) throws java.io.IOException
    {
        java.util.zip.GZIPOutputStream r0;
        java.io.OutputStream r1;
        int i0;

        r0 := @this: java.util.zip.GZIPOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        specialinvoke r0.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream,int,boolean)>(r1, i0, 0);

        return;
    }

    public void <init>(java.io.OutputStream, int, boolean) throws java.io.IOException
    {
        java.util.zip.GZIPOutputStream r0;
        java.io.OutputStream r1, $r4, $r5, $r6, $r7;
        int i0;
        boolean z0;
        java.util.zip.Deflater $r2;
        java.util.zip.CRC32 $r3;

        r0 := @this: java.util.zip.GZIPOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r2 = new java.util.zip.Deflater;

        specialinvoke $r2.<java.util.zip.Deflater: void <init>(int,boolean)>(-1, 1);

        specialinvoke r0.<java.util.zip.DeflaterOutputStream: void <init>(java.io.OutputStream,java.util.zip.Deflater,int,boolean)>(r1, $r2, i0, z0);

        $r3 = new java.util.zip.CRC32;

        specialinvoke $r3.<java.util.zip.CRC32: void <init>()>();

        r0.<java.util.zip.GZIPOutputStream: java.util.zip.CRC32 crc> = $r3;

        specialinvoke r0.<java.util.zip.GZIPOutputStream: int writeShort(int)>(35615);

        $r4 = r0.<java.util.zip.GZIPOutputStream: java.io.OutputStream out>;

        virtualinvoke $r4.<java.io.OutputStream: void write(int)>(8);

        $r5 = r0.<java.util.zip.GZIPOutputStream: java.io.OutputStream out>;

        virtualinvoke $r5.<java.io.OutputStream: void write(int)>(0);

        specialinvoke r0.<java.util.zip.GZIPOutputStream: long writeLong(long)>(0L);

        $r6 = r0.<java.util.zip.GZIPOutputStream: java.io.OutputStream out>;

        virtualinvoke $r6.<java.io.OutputStream: void write(int)>(0);

        $r7 = r0.<java.util.zip.GZIPOutputStream: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(int)>(0);

        return;
    }

    public void finish() throws java.io.IOException
    {
        java.util.zip.GZIPOutputStream r0;
        java.util.zip.CRC32 $r1, $r2;
        long $l0, $l2;

        r0 := @this: java.util.zip.GZIPOutputStream;

        specialinvoke r0.<java.util.zip.DeflaterOutputStream: void finish()>();

        $r1 = r0.<java.util.zip.GZIPOutputStream: java.util.zip.CRC32 crc>;

        $l0 = virtualinvoke $r1.<java.util.zip.CRC32: long getValue()>();

        specialinvoke r0.<java.util.zip.GZIPOutputStream: long writeLong(long)>($l0);

        $r2 = r0.<java.util.zip.GZIPOutputStream: java.util.zip.CRC32 crc>;

        $l2 = $r2.<java.util.zip.CRC32: long tbytes>;

        specialinvoke r0.<java.util.zip.GZIPOutputStream: long writeLong(long)>($l2);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        java.util.zip.GZIPOutputStream r0;
        byte[] r1;
        int i0, i1;
        java.util.zip.CRC32 $r2;

        r0 := @this: java.util.zip.GZIPOutputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.util.zip.DeflaterOutputStream: void write(byte[],int,int)>(r1, i0, i1);

        $r2 = r0.<java.util.zip.GZIPOutputStream: java.util.zip.CRC32 crc>;

        virtualinvoke $r2.<java.util.zip.CRC32: void update(byte[],int,int)>(r1, i0, i1);

        return;
    }

    private long writeLong(long) throws java.io.IOException
    {
        java.util.zip.GZIPOutputStream r0;
        long l0;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.io.OutputStream $r1, $r2, $r3, $r4;

        r0 := @this: java.util.zip.GZIPOutputStream;

        l0 := @parameter0: long;

        i1 = (int) l0;

        $r1 = r0.<java.util.zip.GZIPOutputStream: java.io.OutputStream out>;

        $i2 = i1 & 255;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>($i2);

        $r2 = r0.<java.util.zip.GZIPOutputStream: java.io.OutputStream out>;

        $i3 = i1 >> 8;

        $i4 = $i3 & 255;

        virtualinvoke $r2.<java.io.OutputStream: void write(int)>($i4);

        $r3 = r0.<java.util.zip.GZIPOutputStream: java.io.OutputStream out>;

        $i5 = i1 >> 16;

        $i6 = $i5 & 255;

        virtualinvoke $r3.<java.io.OutputStream: void write(int)>($i6);

        $r4 = r0.<java.util.zip.GZIPOutputStream: java.io.OutputStream out>;

        $i7 = i1 >> 24;

        $i8 = $i7 & 255;

        virtualinvoke $r4.<java.io.OutputStream: void write(int)>($i8);

        return l0;
    }

    private int writeShort(int) throws java.io.IOException
    {
        java.util.zip.GZIPOutputStream r0;
        int i0, $i1, $i2, $i3;
        java.io.OutputStream $r1, $r2;

        r0 := @this: java.util.zip.GZIPOutputStream;

        i0 := @parameter0: int;

        $r1 = r0.<java.util.zip.GZIPOutputStream: java.io.OutputStream out>;

        $i1 = i0 & 255;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>($i1);

        $r2 = r0.<java.util.zip.GZIPOutputStream: java.io.OutputStream out>;

        $i2 = i0 >> 8;

        $i3 = $i2 & 255;

        virtualinvoke $r2.<java.io.OutputStream: void write(int)>($i3);

        return i0;
    }
}
