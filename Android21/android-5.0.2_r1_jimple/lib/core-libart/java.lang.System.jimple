public final class java.lang.System extends java.lang.Object
{
    public static final java.io.InputStream in;
    public static final java.io.PrintStream out;
    public static final java.io.PrintStream err;
    private static final java.lang.String lineSeparator;
    private static final java.util.Properties unchangeableSystemProperties;
    private static java.util.Properties systemProperties;
    private static final java.lang.Object lock;
    private static boolean runGC;
    private static boolean justRanFinalization;
    private static final int ARRAYCOPY_SHORT_CHAR_ARRAY_THRESHOLD;
    private static final int ARRAYCOPY_SHORT_BYTE_ARRAY_THRESHOLD;
    private static final int ARRAYCOPY_SHORT_SHORT_ARRAY_THRESHOLD;
    private static final int ARRAYCOPY_SHORT_INT_ARRAY_THRESHOLD;
    private static final int ARRAYCOPY_SHORT_LONG_ARRAY_THRESHOLD;
    private static final int ARRAYCOPY_SHORT_FLOAT_ARRAY_THRESHOLD;
    private static final int ARRAYCOPY_SHORT_DOUBLE_ARRAY_THRESHOLD;
    private static final int ARRAYCOPY_SHORT_BOOLEAN_ARRAY_THRESHOLD;

    public static void setIn(java.io.InputStream)
    {
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        staticinvoke <java.lang.System: void setFieldImpl(java.lang.String,java.lang.String,java.lang.Object)>("in", "Ljava/io/InputStream;", r0);

        return;
    }

    public static void setOut(java.io.PrintStream)
    {
        java.io.PrintStream r0;

        r0 := @parameter0: java.io.PrintStream;

        staticinvoke <java.lang.System: void setFieldImpl(java.lang.String,java.lang.String,java.lang.Object)>("out", "Ljava/io/PrintStream;", r0);

        return;
    }

    public static void setErr(java.io.PrintStream)
    {
        java.io.PrintStream r0;

        r0 := @parameter0: java.io.PrintStream;

        staticinvoke <java.lang.System: void setFieldImpl(java.lang.String,java.lang.String,java.lang.Object)>("err", "Ljava/io/PrintStream;", r0);

        return;
    }

    private void <init>()
    {
        java.lang.System r0;

        r0 := @this: java.lang.System;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static native void arraycopy(java.lang.Object, int, java.lang.Object, int, int);

    public static void arraycopy(char[], int, char[], int, int)
    {
        char[] r0, r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, i17;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        java.lang.String $r14;
        char $c12, $c16;
        java.lang.NullPointerException $r15, $r16;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        r1 := @parameter2: char[];

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        if r0 != null goto label01;

        $r16 = new java.lang.NullPointerException;

        specialinvoke $r16.<java.lang.NullPointerException: void <init>(java.lang.String)>("src == null");

        throw $r16;

     label01:
        if r1 != null goto label02;

        $r15 = new java.lang.NullPointerException;

        specialinvoke $r15.<java.lang.NullPointerException: void <init>(java.lang.String)>("dst == null");

        throw $r15;

     label02:
        if i0 < 0 goto label03;

        if i1 < 0 goto label03;

        if i2 < 0 goto label03;

        $i6 = lengthof r0;

        $i8 = $i6 - i2;

        if i0 > $i8 goto label03;

        $i7 = lengthof r1;

        $i10 = $i7 - i2;

        if i1 <= $i10 goto label04;

     label03:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("src.length=");

        $i4 = lengthof r0;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" srcPos=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dst.length=");

        $i5 = lengthof r1;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dstPos=");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" length=");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r14);

        throw $r2;

     label04:
        if i2 > 32 goto label10;

        if r0 != r1 goto label07;

        if i0 >= i1 goto label07;

        $i14 = i0 + i2;

        if i1 >= $i14 goto label07;

        i3 = i2 - 1;

     label05:
        if i3 < 0 goto label06;

        $i15 = i1 + i3;

        $i13 = i0 + i3;

        $c16 = r0[$i13];

        r1[$i15] = $c16;

        i3 = i3 + -1;

        goto label05;

     label06:
        goto label11;

     label07:
        i17 = 0;

     label08:
        if i17 >= i2 goto label09;

        $i11 = i1 + i17;

        $i9 = i0 + i17;

        $c12 = r0[$i9];

        r1[$i11] = $c12;

        i17 = i17 + 1;

        goto label08;

     label09:
        goto label11;

     label10:
        staticinvoke <java.lang.System: void arraycopyCharUnchecked(char[],int,char[],int,int)>(r0, i0, r1, i1, i2);

     label11:
        return;
    }

    private static native void arraycopyCharUnchecked(char[], int, char[], int, int);

    public static void arraycopy(byte[], int, byte[], int, int)
    {
        byte[] r0, r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, i17;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        java.lang.String $r14;
        byte $b12, $b16;
        java.lang.NullPointerException $r15, $r16;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        r1 := @parameter2: byte[];

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        if r0 != null goto label01;

        $r16 = new java.lang.NullPointerException;

        specialinvoke $r16.<java.lang.NullPointerException: void <init>(java.lang.String)>("src == null");

        throw $r16;

     label01:
        if r1 != null goto label02;

        $r15 = new java.lang.NullPointerException;

        specialinvoke $r15.<java.lang.NullPointerException: void <init>(java.lang.String)>("dst == null");

        throw $r15;

     label02:
        if i0 < 0 goto label03;

        if i1 < 0 goto label03;

        if i2 < 0 goto label03;

        $i6 = lengthof r0;

        $i8 = $i6 - i2;

        if i0 > $i8 goto label03;

        $i7 = lengthof r1;

        $i10 = $i7 - i2;

        if i1 <= $i10 goto label04;

     label03:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("src.length=");

        $i4 = lengthof r0;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" srcPos=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dst.length=");

        $i5 = lengthof r1;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dstPos=");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" length=");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r14);

        throw $r2;

     label04:
        if i2 > 32 goto label10;

        if r0 != r1 goto label07;

        if i0 >= i1 goto label07;

        $i14 = i0 + i2;

        if i1 >= $i14 goto label07;

        i3 = i2 - 1;

     label05:
        if i3 < 0 goto label06;

        $i15 = i1 + i3;

        $i13 = i0 + i3;

        $b16 = r0[$i13];

        r1[$i15] = $b16;

        i3 = i3 + -1;

        goto label05;

     label06:
        goto label11;

     label07:
        i17 = 0;

     label08:
        if i17 >= i2 goto label09;

        $i11 = i1 + i17;

        $i9 = i0 + i17;

        $b12 = r0[$i9];

        r1[$i11] = $b12;

        i17 = i17 + 1;

        goto label08;

     label09:
        goto label11;

     label10:
        staticinvoke <java.lang.System: void arraycopyByteUnchecked(byte[],int,byte[],int,int)>(r0, i0, r1, i1, i2);

     label11:
        return;
    }

    private static native void arraycopyByteUnchecked(byte[], int, byte[], int, int);

    public static void arraycopy(short[], int, short[], int, int)
    {
        short[] r0, r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, i17;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        java.lang.String $r14;
        short $s12, $s16;
        java.lang.NullPointerException $r15, $r16;

        r0 := @parameter0: short[];

        i0 := @parameter1: int;

        r1 := @parameter2: short[];

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        if r0 != null goto label01;

        $r16 = new java.lang.NullPointerException;

        specialinvoke $r16.<java.lang.NullPointerException: void <init>(java.lang.String)>("src == null");

        throw $r16;

     label01:
        if r1 != null goto label02;

        $r15 = new java.lang.NullPointerException;

        specialinvoke $r15.<java.lang.NullPointerException: void <init>(java.lang.String)>("dst == null");

        throw $r15;

     label02:
        if i0 < 0 goto label03;

        if i1 < 0 goto label03;

        if i2 < 0 goto label03;

        $i6 = lengthof r0;

        $i8 = $i6 - i2;

        if i0 > $i8 goto label03;

        $i7 = lengthof r1;

        $i10 = $i7 - i2;

        if i1 <= $i10 goto label04;

     label03:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("src.length=");

        $i4 = lengthof r0;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" srcPos=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dst.length=");

        $i5 = lengthof r1;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dstPos=");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" length=");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r14);

        throw $r2;

     label04:
        if i2 > 32 goto label10;

        if r0 != r1 goto label07;

        if i0 >= i1 goto label07;

        $i14 = i0 + i2;

        if i1 >= $i14 goto label07;

        i3 = i2 - 1;

     label05:
        if i3 < 0 goto label06;

        $i15 = i1 + i3;

        $i13 = i0 + i3;

        $s16 = r0[$i13];

        r1[$i15] = $s16;

        i3 = i3 + -1;

        goto label05;

     label06:
        goto label11;

     label07:
        i17 = 0;

     label08:
        if i17 >= i2 goto label09;

        $i11 = i1 + i17;

        $i9 = i0 + i17;

        $s12 = r0[$i9];

        r1[$i11] = $s12;

        i17 = i17 + 1;

        goto label08;

     label09:
        goto label11;

     label10:
        staticinvoke <java.lang.System: void arraycopyShortUnchecked(short[],int,short[],int,int)>(r0, i0, r1, i1, i2);

     label11:
        return;
    }

    private static native void arraycopyShortUnchecked(short[], int, short[], int, int);

    public static void arraycopy(int[], int, int[], int, int)
    {
        int[] r0, r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        java.lang.String $r14;
        java.lang.NullPointerException $r15, $r16;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        r1 := @parameter2: int[];

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        if r0 != null goto label01;

        $r16 = new java.lang.NullPointerException;

        specialinvoke $r16.<java.lang.NullPointerException: void <init>(java.lang.String)>("src == null");

        throw $r16;

     label01:
        if r1 != null goto label02;

        $r15 = new java.lang.NullPointerException;

        specialinvoke $r15.<java.lang.NullPointerException: void <init>(java.lang.String)>("dst == null");

        throw $r15;

     label02:
        if i0 < 0 goto label03;

        if i1 < 0 goto label03;

        if i2 < 0 goto label03;

        $i6 = lengthof r0;

        $i8 = $i6 - i2;

        if i0 > $i8 goto label03;

        $i7 = lengthof r1;

        $i10 = $i7 - i2;

        if i1 <= $i10 goto label04;

     label03:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("src.length=");

        $i4 = lengthof r0;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" srcPos=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dst.length=");

        $i5 = lengthof r1;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dstPos=");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" length=");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r14);

        throw $r2;

     label04:
        if i2 > 32 goto label10;

        if r0 != r1 goto label07;

        if i0 >= i1 goto label07;

        $i14 = i0 + i2;

        if i1 >= $i14 goto label07;

        i3 = i2 - 1;

     label05:
        if i3 < 0 goto label06;

        $i15 = i1 + i3;

        $i13 = i0 + i3;

        $i16 = r0[$i13];

        r1[$i15] = $i16;

        i3 = i3 + -1;

        goto label05;

     label06:
        goto label11;

     label07:
        i17 = 0;

     label08:
        if i17 >= i2 goto label09;

        $i11 = i1 + i17;

        $i9 = i0 + i17;

        $i12 = r0[$i9];

        r1[$i11] = $i12;

        i17 = i17 + 1;

        goto label08;

     label09:
        goto label11;

     label10:
        staticinvoke <java.lang.System: void arraycopyIntUnchecked(int[],int,int[],int,int)>(r0, i0, r1, i1, i2);

     label11:
        return;
    }

    private static native void arraycopyIntUnchecked(int[], int, int[], int, int);

    public static void arraycopy(long[], int, long[], int, int)
    {
        long[] r0, r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, i17;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        java.lang.String $r14;
        long $l12, $l16;
        java.lang.NullPointerException $r15, $r16;

        r0 := @parameter0: long[];

        i0 := @parameter1: int;

        r1 := @parameter2: long[];

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        if r0 != null goto label01;

        $r16 = new java.lang.NullPointerException;

        specialinvoke $r16.<java.lang.NullPointerException: void <init>(java.lang.String)>("src == null");

        throw $r16;

     label01:
        if r1 != null goto label02;

        $r15 = new java.lang.NullPointerException;

        specialinvoke $r15.<java.lang.NullPointerException: void <init>(java.lang.String)>("dst == null");

        throw $r15;

     label02:
        if i0 < 0 goto label03;

        if i1 < 0 goto label03;

        if i2 < 0 goto label03;

        $i6 = lengthof r0;

        $i8 = $i6 - i2;

        if i0 > $i8 goto label03;

        $i7 = lengthof r1;

        $i10 = $i7 - i2;

        if i1 <= $i10 goto label04;

     label03:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("src.length=");

        $i4 = lengthof r0;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" srcPos=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dst.length=");

        $i5 = lengthof r1;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dstPos=");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" length=");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r14);

        throw $r2;

     label04:
        if i2 > 32 goto label10;

        if r0 != r1 goto label07;

        if i0 >= i1 goto label07;

        $i14 = i0 + i2;

        if i1 >= $i14 goto label07;

        i3 = i2 - 1;

     label05:
        if i3 < 0 goto label06;

        $i15 = i1 + i3;

        $i13 = i0 + i3;

        $l16 = r0[$i13];

        r1[$i15] = $l16;

        i3 = i3 + -1;

        goto label05;

     label06:
        goto label11;

     label07:
        i17 = 0;

     label08:
        if i17 >= i2 goto label09;

        $i11 = i1 + i17;

        $i9 = i0 + i17;

        $l12 = r0[$i9];

        r1[$i11] = $l12;

        i17 = i17 + 1;

        goto label08;

     label09:
        goto label11;

     label10:
        staticinvoke <java.lang.System: void arraycopyLongUnchecked(long[],int,long[],int,int)>(r0, i0, r1, i1, i2);

     label11:
        return;
    }

    private static native void arraycopyLongUnchecked(long[], int, long[], int, int);

    public static void arraycopy(float[], int, float[], int, int)
    {
        float[] r0, r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        java.lang.String $r14;
        float $f0, $f1;
        java.lang.NullPointerException $r15, $r16;

        r0 := @parameter0: float[];

        i0 := @parameter1: int;

        r1 := @parameter2: float[];

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        if r0 != null goto label01;

        $r16 = new java.lang.NullPointerException;

        specialinvoke $r16.<java.lang.NullPointerException: void <init>(java.lang.String)>("src == null");

        throw $r16;

     label01:
        if r1 != null goto label02;

        $r15 = new java.lang.NullPointerException;

        specialinvoke $r15.<java.lang.NullPointerException: void <init>(java.lang.String)>("dst == null");

        throw $r15;

     label02:
        if i0 < 0 goto label03;

        if i1 < 0 goto label03;

        if i2 < 0 goto label03;

        $i6 = lengthof r0;

        $i8 = $i6 - i2;

        if i0 > $i8 goto label03;

        $i7 = lengthof r1;

        $i10 = $i7 - i2;

        if i1 <= $i10 goto label04;

     label03:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("src.length=");

        $i4 = lengthof r0;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" srcPos=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dst.length=");

        $i5 = lengthof r1;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dstPos=");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" length=");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r14);

        throw $r2;

     label04:
        if i2 > 32 goto label10;

        if r0 != r1 goto label07;

        if i0 >= i1 goto label07;

        $i13 = i0 + i2;

        if i1 >= $i13 goto label07;

        i3 = i2 - 1;

     label05:
        if i3 < 0 goto label06;

        $i14 = i1 + i3;

        $i12 = i0 + i3;

        $f1 = r0[$i12];

        r1[$i14] = $f1;

        i3 = i3 + -1;

        goto label05;

     label06:
        goto label11;

     label07:
        i15 = 0;

     label08:
        if i15 >= i2 goto label09;

        $i11 = i1 + i15;

        $i9 = i0 + i15;

        $f0 = r0[$i9];

        r1[$i11] = $f0;

        i15 = i15 + 1;

        goto label08;

     label09:
        goto label11;

     label10:
        staticinvoke <java.lang.System: void arraycopyFloatUnchecked(float[],int,float[],int,int)>(r0, i0, r1, i1, i2);

     label11:
        return;
    }

    private static native void arraycopyFloatUnchecked(float[], int, float[], int, int);

    public static void arraycopy(double[], int, double[], int, int)
    {
        double[] r0, r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        java.lang.String $r14;
        double $d0, $d1;
        java.lang.NullPointerException $r15, $r16;

        r0 := @parameter0: double[];

        i0 := @parameter1: int;

        r1 := @parameter2: double[];

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        if r0 != null goto label01;

        $r16 = new java.lang.NullPointerException;

        specialinvoke $r16.<java.lang.NullPointerException: void <init>(java.lang.String)>("src == null");

        throw $r16;

     label01:
        if r1 != null goto label02;

        $r15 = new java.lang.NullPointerException;

        specialinvoke $r15.<java.lang.NullPointerException: void <init>(java.lang.String)>("dst == null");

        throw $r15;

     label02:
        if i0 < 0 goto label03;

        if i1 < 0 goto label03;

        if i2 < 0 goto label03;

        $i6 = lengthof r0;

        $i8 = $i6 - i2;

        if i0 > $i8 goto label03;

        $i7 = lengthof r1;

        $i10 = $i7 - i2;

        if i1 <= $i10 goto label04;

     label03:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("src.length=");

        $i4 = lengthof r0;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" srcPos=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dst.length=");

        $i5 = lengthof r1;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dstPos=");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" length=");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r14);

        throw $r2;

     label04:
        if i2 > 32 goto label10;

        if r0 != r1 goto label07;

        if i0 >= i1 goto label07;

        $i13 = i0 + i2;

        if i1 >= $i13 goto label07;

        i3 = i2 - 1;

     label05:
        if i3 < 0 goto label06;

        $i14 = i1 + i3;

        $i12 = i0 + i3;

        $d1 = r0[$i12];

        r1[$i14] = $d1;

        i3 = i3 + -1;

        goto label05;

     label06:
        goto label11;

     label07:
        i15 = 0;

     label08:
        if i15 >= i2 goto label09;

        $i11 = i1 + i15;

        $i9 = i0 + i15;

        $d0 = r0[$i9];

        r1[$i11] = $d0;

        i15 = i15 + 1;

        goto label08;

     label09:
        goto label11;

     label10:
        staticinvoke <java.lang.System: void arraycopyDoubleUnchecked(double[],int,double[],int,int)>(r0, i0, r1, i1, i2);

     label11:
        return;
    }

    private static native void arraycopyDoubleUnchecked(double[], int, double[], int, int);

    public static void arraycopy(boolean[], int, boolean[], int, int)
    {
        boolean[] r0, r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        java.lang.String $r14;
        boolean $z0, $z1;
        java.lang.NullPointerException $r15, $r16;

        r0 := @parameter0: boolean[];

        i0 := @parameter1: int;

        r1 := @parameter2: boolean[];

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        if r0 != null goto label01;

        $r16 = new java.lang.NullPointerException;

        specialinvoke $r16.<java.lang.NullPointerException: void <init>(java.lang.String)>("src == null");

        throw $r16;

     label01:
        if r1 != null goto label02;

        $r15 = new java.lang.NullPointerException;

        specialinvoke $r15.<java.lang.NullPointerException: void <init>(java.lang.String)>("dst == null");

        throw $r15;

     label02:
        if i0 < 0 goto label03;

        if i1 < 0 goto label03;

        if i2 < 0 goto label03;

        $i6 = lengthof r0;

        $i8 = $i6 - i2;

        if i0 > $i8 goto label03;

        $i7 = lengthof r1;

        $i10 = $i7 - i2;

        if i1 <= $i10 goto label04;

     label03:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("src.length=");

        $i4 = lengthof r0;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" srcPos=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dst.length=");

        $i5 = lengthof r1;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dstPos=");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" length=");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r14);

        throw $r2;

     label04:
        if i2 > 32 goto label10;

        if r0 != r1 goto label07;

        if i0 >= i1 goto label07;

        $i13 = i0 + i2;

        if i1 >= $i13 goto label07;

        i3 = i2 - 1;

     label05:
        if i3 < 0 goto label06;

        $i14 = i1 + i3;

        $i12 = i0 + i3;

        $z1 = r0[$i12];

        r1[$i14] = $z1;

        i3 = i3 + -1;

        goto label05;

     label06:
        goto label11;

     label07:
        i15 = 0;

     label08:
        if i15 >= i2 goto label09;

        $i11 = i1 + i15;

        $i9 = i0 + i15;

        $z0 = r0[$i9];

        r1[$i11] = $z0;

        i15 = i15 + 1;

        goto label08;

     label09:
        goto label11;

     label10:
        staticinvoke <java.lang.System: void arraycopyBooleanUnchecked(boolean[],int,boolean[],int,int)>(r0, i0, r1, i1, i2);

     label11:
        return;
    }

    private static native void arraycopyBooleanUnchecked(boolean[], int, boolean[], int, int);

    public static native long currentTimeMillis();

    public static native long nanoTime();

    public static void exit(int)
    {
        int i0;
        java.lang.Runtime $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r0.<java.lang.Runtime: void exit(int)>(i0);

        return;
    }

    public static void gc()
    {
        boolean z0;
        java.lang.Object r0, $r2;
        java.lang.Throwable r1, $r4;
        java.lang.Runtime $r3;

        $r2 = <java.lang.System: java.lang.Object lock>;

        r0 = $r2;

        entermonitor $r2;

     label1:
        z0 = <java.lang.System: boolean justRanFinalization>;

        if z0 == 0 goto label2;

        <java.lang.System: boolean justRanFinalization> = 0;

        goto label3;

     label2:
        <java.lang.System: boolean runGC> = 1;

     label3:
        exitmonitor r0;

     label4:
        goto label7;

     label5:
        $r4 := @caughtexception;

        r1 = $r4;

        exitmonitor r0;

     label6:
        throw r1;

     label7:
        if z0 == 0 goto label8;

        $r3 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r3.<java.lang.Runtime: void gc()>();

     label8:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static java.lang.String getenv(java.lang.String)
    {
        java.lang.String r0, $r2;
        libcore.io.Os $r1;
        java.lang.NullPointerException $r3;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("name == null");

        throw $r3;

     label1:
        $r1 = <libcore.io.Libcore: libcore.io.Os os>;

        $r2 = interfaceinvoke $r1.<libcore.io.Os: java.lang.String getenv(java.lang.String)>(r0);

        return $r2;
    }

    public static java.util.Map getenv()
    {
        java.util.HashMap r0, $r3;
        java.lang.String[] r1;
        int i0, i1, i2, $i3;
        java.lang.String r2, $r6, $r7;
        libcore.io.Os $r4;
        java.lang.System$SystemEnvironment $r5;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0 = $r3;

        $r4 = <libcore.io.Libcore: libcore.io.Os os>;

        r1 = interfaceinvoke $r4.<libcore.io.Os: java.lang.String[] environ()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = r1[i1];

        i2 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(61);

        if i2 == -1 goto label2;

        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        $i3 = i2 + 1;

        $r7 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3);

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r5 = new java.lang.System$SystemEnvironment;

        specialinvoke $r5.<java.lang.System$SystemEnvironment: void <init>(java.util.Map)>(r0);

        return $r5;
    }

    public static java.nio.channels.Channel inheritedChannel() throws java.io.IOException
    {
        java.nio.channels.spi.SelectorProvider $r0;
        java.nio.channels.Channel $r1;

        $r0 = staticinvoke <java.nio.channels.spi.SelectorProvider: java.nio.channels.spi.SelectorProvider provider()>();

        $r1 = virtualinvoke $r0.<java.nio.channels.spi.SelectorProvider: java.nio.channels.Channel inheritedChannel()>();

        return $r1;
    }

    public static java.util.Properties getProperties()
    {
        java.util.Properties $r0;

        $r0 = <java.lang.System: java.util.Properties systemProperties>;

        return $r0;
    }

    private static java.util.Properties initUnchangeableSystemProperties()
    {
        dalvik.system.VMRuntime r0;
        java.util.Properties r1, $r6;
        java.lang.String r2, r3, r4, $r7, $r9, $r26, $r39, $r42, $r45, $r47, $r49, $r50, $r52;
        android.system.StructPasswd r5;
        libcore.io.Os $r35, $r36, $r43;
        int $i0;
        java.lang.AssertionError $r53;
        java.lang.String[] $r55, $r56;
        android.system.ErrnoException $r57, r58;
        android.system.StructUtsname r59;

        r0 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        $r6 = new java.util.Properties;

        specialinvoke $r6.<java.util.Properties: void <init>()>();

        r1 = $r6;

        r2 = "http://www.android.com/";

        r3 = "The Android Project";

        $r7 = virtualinvoke r0.<dalvik.system.VMRuntime: java.lang.String bootClassPath()>();

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.boot.class.path", $r7);

        $r9 = virtualinvoke r0.<dalvik.system.VMRuntime: java.lang.String classPath()>();

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.class.path", $r9);

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.class.version", "50.0");

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.compiler", "");

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.ext.dirs", "");

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.version", "0");

        r4 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("JAVA_HOME");

        if r4 != null goto label1;

        r4 = "/system";

     label1:
        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.home", r4);

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.specification.name", "Dalvik Core Library");

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.specification.vendor", r3);

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.specification.version", "0.9");

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.vendor", r3);

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.vendor.url", r2);

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.vm.name", "Dalvik");

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.vm.specification.name", "Dalvik Virtual Machine Specification");

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.vm.specification.vendor", r3);

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.vm.specification.version", "0.9");

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.vm.vendor", r3);

        $r26 = virtualinvoke r0.<dalvik.system.VMRuntime: java.lang.String vmVersion()>();

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.vm.version", $r26);

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("file.separator", "/");

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("line.separator", "\n");

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("path.separator", ":");

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.runtime.name", "Android Runtime");

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.runtime.version", "0.9");

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.vm.vendor.url", r2);

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("file.encoding", "UTF-8");

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("user.language", "en");

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("user.region", "US");

     label2:
        $r36 = <libcore.io.Libcore: libcore.io.Os os>;

        $r35 = <libcore.io.Libcore: libcore.io.Os os>;

        $i0 = interfaceinvoke $r35.<libcore.io.Os: int getuid()>();

        r5 = interfaceinvoke $r36.<libcore.io.Os: android.system.StructPasswd getpwuid(int)>($i0);

        $r39 = r5.<android.system.StructPasswd: java.lang.String pw_name>;

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("user.name", $r39);

     label3:
        goto label5;

     label4:
        $r57 := @caughtexception;

        r58 = $r57;

        $r53 = new java.lang.AssertionError;

        specialinvoke $r53.<java.lang.AssertionError: void <init>(java.lang.Object)>(r58);

        throw $r53;

     label5:
        $r43 = <libcore.io.Libcore: libcore.io.Os os>;

        r59 = interfaceinvoke $r43.<libcore.io.Os: android.system.StructUtsname uname()>();

        $r42 = r59.<android.system.StructUtsname: java.lang.String machine>;

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("os.arch", $r42);

        $r47 = r59.<android.system.StructUtsname: java.lang.String sysname>;

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("os.name", $r47);

        $r45 = r59.<android.system.StructUtsname: java.lang.String release>;

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("os.version", $r45);

        $r49 = staticinvoke <libcore.icu.ICU: java.lang.String getIcuVersion()>();

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("android.icu.library.version", $r49);

        $r52 = staticinvoke <libcore.icu.ICU: java.lang.String getUnicodeVersion()>();

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("android.icu.unicode.version", $r52);

        $r50 = staticinvoke <libcore.icu.ICU: java.lang.String getCldrVersion()>();

        virtualinvoke r1.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("android.icu.cldr.version", $r50);

        $r55 = staticinvoke <java.lang.System: java.lang.String[] specialProperties()>();

        staticinvoke <java.lang.System: void parsePropertyAssignments(java.util.Properties,java.lang.String[])>(r1, $r55);

        $r56 = virtualinvoke r0.<dalvik.system.VMRuntime: java.lang.String[] properties()>();

        staticinvoke <java.lang.System: void parsePropertyAssignments(java.util.Properties,java.lang.String[])>(r1, $r56);

        return r1;

        catch android.system.ErrnoException from label2 to label3 with label4;
    }

    private static void initUnchangeableSystemProperty(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        java.util.Properties $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        staticinvoke <java.lang.System: void checkPropertyName(java.lang.String)>(r0);

        $r2 = <java.lang.System: java.util.Properties unchangeableSystemProperties>;

        virtualinvoke $r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);

        return;
    }

    private static void setDefaultChangeableProperties(java.util.Properties)
    {
        java.util.Properties r0;

        r0 := @parameter0: java.util.Properties;

        virtualinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("java.io.tmpdir", "/tmp");

        virtualinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("user.home", "");

        return;
    }

    private static java.util.Properties createSystemProperties()
    {
        java.lang.System$PropertiesWithNonOverrideableDefaults r0, $r1;
        java.util.Properties $r2;

        $r1 = new java.lang.System$PropertiesWithNonOverrideableDefaults;

        $r2 = <java.lang.System: java.util.Properties unchangeableSystemProperties>;

        specialinvoke $r1.<java.lang.System$PropertiesWithNonOverrideableDefaults: void <init>(java.util.Properties)>($r2);

        r0 = $r1;

        staticinvoke <java.lang.System: void setDefaultChangeableProperties(java.util.Properties)>(r0);

        return r0;
    }

    private static native java.lang.String[] specialProperties();

    private static void parsePropertyAssignments(java.util.Properties, java.lang.String[])
    {
        java.util.Properties r0;
        java.lang.String[] r1, r2;
        int i0, i1, i2, $i3;
        java.lang.String r3, r4, r5;

        r0 := @parameter0: java.util.Properties;

        r1 := @parameter1: java.lang.String[];

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        i2 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(61);

        r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        $i3 = i2 + 1;

        r5 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i3);

        virtualinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static java.lang.String getProperty(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(r0, null);

        return $r1;
    }

    public static java.lang.String getProperty(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r3;
        java.util.Properties $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        staticinvoke <java.lang.System: void checkPropertyName(java.lang.String)>(r0);

        $r2 = <java.lang.System: java.util.Properties systemProperties>;

        $r3 = virtualinvoke $r2.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>(r0, r1);

        return $r3;
    }

    public static java.lang.String setProperty(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r4;
        java.util.Properties $r2;
        java.lang.Object $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        staticinvoke <java.lang.System: void checkPropertyName(java.lang.String)>(r0);

        $r2 = <java.lang.System: java.util.Properties systemProperties>;

        $r3 = virtualinvoke $r2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>(r0, r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public static java.lang.String clearProperty(java.lang.String)
    {
        java.lang.String r0, $r3;
        java.util.Properties $r1;
        java.lang.Object $r2;

        r0 := @parameter0: java.lang.String;

        staticinvoke <java.lang.System: void checkPropertyName(java.lang.String)>(r0);

        $r1 = <java.lang.System: java.util.Properties systemProperties>;

        $r2 = virtualinvoke $r1.<java.util.Properties: java.lang.Object remove(java.lang.Object)>(r0);

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    private static void checkPropertyName(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;
        java.lang.NullPointerException $r2;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("name == null");

        throw $r2;

     label1:
        $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("name is empty");

        throw $r1;

     label2:
        return;
    }

    public static java.io.Console console()
    {
        java.io.Console $r0;

        $r0 = staticinvoke <java.io.Console: java.io.Console getConsole()>();

        return $r0;
    }

    public static java.lang.SecurityManager getSecurityManager()
    {
        return null;
    }

    public static native int identityHashCode(java.lang.Object);

    public static java.lang.String lineSeparator()
    {
        java.lang.String $r0;

        $r0 = <java.lang.System: java.lang.String lineSeparator>;

        return $r0;
    }

    public static void load(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Runtime $r1;
        java.lang.ClassLoader $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r2 = staticinvoke <dalvik.system.VMStack: java.lang.ClassLoader getCallingClassLoader()>();

        virtualinvoke $r1.<java.lang.Runtime: void load(java.lang.String,java.lang.ClassLoader)>(r0, $r2);

        return;
    }

    public static void loadLibrary(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Runtime $r1;
        java.lang.ClassLoader $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r2 = staticinvoke <dalvik.system.VMStack: java.lang.ClassLoader getCallingClassLoader()>();

        virtualinvoke $r1.<java.lang.Runtime: void loadLibrary(java.lang.String,java.lang.ClassLoader)>(r0, $r2);

        return;
    }

    public static void logE(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <java.lang.System: void log(char,java.lang.String,java.lang.Throwable)>(69, r0, null);

        return;
    }

    public static void logE(java.lang.String, java.lang.Throwable)
    {
        java.lang.String r0;
        java.lang.Throwable r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Throwable;

        staticinvoke <java.lang.System: void log(char,java.lang.String,java.lang.Throwable)>(69, r0, r1);

        return;
    }

    public static void logI(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <java.lang.System: void log(char,java.lang.String,java.lang.Throwable)>(73, r0, null);

        return;
    }

    public static void logI(java.lang.String, java.lang.Throwable)
    {
        java.lang.String r0;
        java.lang.Throwable r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Throwable;

        staticinvoke <java.lang.System: void log(char,java.lang.String,java.lang.Throwable)>(73, r0, r1);

        return;
    }

    public static void logW(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <java.lang.System: void log(char,java.lang.String,java.lang.Throwable)>(87, r0, null);

        return;
    }

    public static void logW(java.lang.String, java.lang.Throwable)
    {
        java.lang.String r0;
        java.lang.Throwable r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Throwable;

        staticinvoke <java.lang.System: void log(char,java.lang.String,java.lang.Throwable)>(87, r0, r1);

        return;
    }

    private static native void log(char, java.lang.String, java.lang.Throwable);

    public static void runFinalization()
    {
        boolean z0;
        java.lang.Object r0, $r3, $r5, r9;
        java.lang.Throwable r1, r2, $r7, $r8;
        java.lang.Runtime $r4, $r6;

        $r3 = <java.lang.System: java.lang.Object lock>;

        r0 = $r3;

        entermonitor $r3;

     label01:
        z0 = <java.lang.System: boolean runGC>;

        <java.lang.System: boolean runGC> = 0;

        exitmonitor r0;

     label02:
        goto label05;

     label03:
        $r7 := @caughtexception;

        r1 = $r7;

        exitmonitor r0;

     label04:
        throw r1;

     label05:
        if z0 == 0 goto label06;

        $r6 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r6.<java.lang.Runtime: void gc()>();

     label06:
        $r4 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r4.<java.lang.Runtime: void runFinalization()>();

        $r5 = <java.lang.System: java.lang.Object lock>;

        r9 = $r5;

        entermonitor $r5;

     label07:
        <java.lang.System: boolean justRanFinalization> = 1;

        exitmonitor r9;

     label08:
        goto label11;

     label09:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r9;

     label10:
        throw r2;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static void runFinalizersOnExit(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        staticinvoke <java.lang.Runtime: void runFinalizersOnExit(boolean)>(z0);

        return;
    }

    public static void setProperties(java.util.Properties)
    {
        java.util.Properties r0, $r3;
        java.lang.System$PropertiesWithNonOverrideableDefaults r1, $r2;

        r0 := @parameter0: java.util.Properties;

        $r2 = new java.lang.System$PropertiesWithNonOverrideableDefaults;

        $r3 = <java.lang.System: java.util.Properties unchangeableSystemProperties>;

        specialinvoke $r2.<java.lang.System$PropertiesWithNonOverrideableDefaults: void <init>(java.util.Properties)>($r3);

        r1 = $r2;

        if r0 == null goto label1;

        virtualinvoke r1.<java.lang.System$PropertiesWithNonOverrideableDefaults: void putAll(java.util.Map)>(r0);

        goto label2;

     label1:
        staticinvoke <java.lang.System: void setDefaultChangeableProperties(java.util.Properties)>(r1);

     label2:
        <java.lang.System: java.util.Properties systemProperties> = r1;

        return;
    }

    public static void setSecurityManager(java.lang.SecurityManager)
    {
        java.lang.SecurityManager r0;
        java.lang.SecurityException $r1;

        r0 := @parameter0: java.lang.SecurityManager;

        if r0 == null goto label1;

        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>()>();

        throw $r1;

     label1:
        return;
    }

    public static native java.lang.String mapLibraryName(java.lang.String);

    private static native void setFieldImpl(java.lang.String, java.lang.String, java.lang.Object);

    static void <clinit>()
    {
        java.lang.Object $r0;
        java.io.PrintStream $r1, $r4;
        java.io.FileOutputStream $r2, $r5;
        java.io.FileDescriptor $r3, $r6, $r9;
        java.io.BufferedInputStream $r7;
        java.io.FileInputStream $r8;
        java.util.Properties $r10, $r11;
        java.lang.String $r12;

        <java.lang.System: int ARRAYCOPY_SHORT_BOOLEAN_ARRAY_THRESHOLD> = 32;

        <java.lang.System: int ARRAYCOPY_SHORT_DOUBLE_ARRAY_THRESHOLD> = 32;

        <java.lang.System: int ARRAYCOPY_SHORT_FLOAT_ARRAY_THRESHOLD> = 32;

        <java.lang.System: int ARRAYCOPY_SHORT_LONG_ARRAY_THRESHOLD> = 32;

        <java.lang.System: int ARRAYCOPY_SHORT_INT_ARRAY_THRESHOLD> = 32;

        <java.lang.System: int ARRAYCOPY_SHORT_SHORT_ARRAY_THRESHOLD> = 32;

        <java.lang.System: int ARRAYCOPY_SHORT_BYTE_ARRAY_THRESHOLD> = 32;

        <java.lang.System: int ARRAYCOPY_SHORT_CHAR_ARRAY_THRESHOLD> = 32;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <java.lang.System: java.lang.Object lock> = $r0;

        $r1 = new java.io.PrintStream;

        $r2 = new java.io.FileOutputStream;

        $r3 = <java.io.FileDescriptor: java.io.FileDescriptor err>;

        specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r3);

        specialinvoke $r1.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r2);

        <java.lang.System: java.io.PrintStream err> = $r1;

        $r4 = new java.io.PrintStream;

        $r5 = new java.io.FileOutputStream;

        $r6 = <java.io.FileDescriptor: java.io.FileDescriptor out>;

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r6);

        specialinvoke $r4.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r5);

        <java.lang.System: java.io.PrintStream out> = $r4;

        $r7 = new java.io.BufferedInputStream;

        $r8 = new java.io.FileInputStream;

        $r9 = <java.io.FileDescriptor: java.io.FileDescriptor in>;

        specialinvoke $r8.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>($r9);

        specialinvoke $r7.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r8);

        <java.lang.System: java.io.InputStream in> = $r7;

        $r10 = staticinvoke <java.lang.System: java.util.Properties initUnchangeableSystemProperties()>();

        <java.lang.System: java.util.Properties unchangeableSystemProperties> = $r10;

        $r11 = staticinvoke <java.lang.System: java.util.Properties createSystemProperties()>();

        <java.lang.System: java.util.Properties systemProperties> = $r11;

        $r12 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        <java.lang.System: java.lang.String lineSeparator> = $r12;

        return;
    }
}
