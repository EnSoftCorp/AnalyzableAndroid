public class java.security.cert.X509CertSelector extends java.lang.Object implements java.security.cert.CertSelector
{
    private java.security.cert.X509Certificate certificateEquals;
    private java.math.BigInteger serialNumber;
    private javax.security.auth.x500.X500Principal issuer;
    private javax.security.auth.x500.X500Principal subject;
    private byte[] subjectKeyIdentifier;
    private byte[] authorityKeyIdentifier;
    private java.util.Date certificateValid;
    private java.lang.String subjectPublicKeyAlgID;
    private java.util.Date privateKeyValid;
    private byte[] subjectPublicKey;
    private boolean[] keyUsage;
    private java.util.Set extendedKeyUsage;
    private boolean matchAllNames;
    private int pathLen;
    private java.util.List[] subjectAltNames;
    private org.apache.harmony.security.x509.NameConstraints nameConstraints;
    private java.util.Set policies;
    private java.util.ArrayList pathToNames;
    private java.security.PublicKey subjectPublicKeyImpl;
    private java.lang.String issuerName;
    private byte[] issuerBytes;

    public void <init>()
    {
        java.security.cert.X509CertSelector r0;

        r0 := @this: java.security.cert.X509CertSelector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.security.cert.X509CertSelector: boolean matchAllNames> = 1;

        r0.<java.security.cert.X509CertSelector: int pathLen> = -1;

        return;
    }

    public void setCertificate(java.security.cert.X509Certificate)
    {
        java.security.cert.X509CertSelector r0;
        java.security.cert.X509Certificate r1;

        r0 := @this: java.security.cert.X509CertSelector;

        r1 := @parameter0: java.security.cert.X509Certificate;

        r0.<java.security.cert.X509CertSelector: java.security.cert.X509Certificate certificateEquals> = r1;

        return;
    }

    public java.security.cert.X509Certificate getCertificate()
    {
        java.security.cert.X509CertSelector r0;
        java.security.cert.X509Certificate $r1;

        r0 := @this: java.security.cert.X509CertSelector;

        $r1 = r0.<java.security.cert.X509CertSelector: java.security.cert.X509Certificate certificateEquals>;

        return $r1;
    }

    public void setSerialNumber(java.math.BigInteger)
    {
        java.security.cert.X509CertSelector r0;
        java.math.BigInteger r1;

        r0 := @this: java.security.cert.X509CertSelector;

        r1 := @parameter0: java.math.BigInteger;

        r0.<java.security.cert.X509CertSelector: java.math.BigInteger serialNumber> = r1;

        return;
    }

    public java.math.BigInteger getSerialNumber()
    {
        java.security.cert.X509CertSelector r0;
        java.math.BigInteger $r1;

        r0 := @this: java.security.cert.X509CertSelector;

        $r1 = r0.<java.security.cert.X509CertSelector: java.math.BigInteger serialNumber>;

        return $r1;
    }

    public void setIssuer(javax.security.auth.x500.X500Principal)
    {
        java.security.cert.X509CertSelector r0;
        javax.security.auth.x500.X500Principal r1;

        r0 := @this: java.security.cert.X509CertSelector;

        r1 := @parameter0: javax.security.auth.x500.X500Principal;

        r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal issuer> = r1;

        r0.<java.security.cert.X509CertSelector: java.lang.String issuerName> = null;

        r0.<java.security.cert.X509CertSelector: byte[] issuerBytes> = null;

        return;
    }

    public javax.security.auth.x500.X500Principal getIssuer()
    {
        java.security.cert.X509CertSelector r0;
        javax.security.auth.x500.X500Principal $r1;

        r0 := @this: java.security.cert.X509CertSelector;

        $r1 = r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal issuer>;

        return $r1;
    }

    public void setIssuer(java.lang.String) throws java.io.IOException
    {
        java.security.cert.X509CertSelector r0;
        java.lang.String r1, $r6;
        java.lang.IllegalArgumentException r2, $r4;
        javax.security.auth.x500.X500Principal $r3;
        java.io.IOException $r5;

        r0 := @this: java.security.cert.X509CertSelector;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal issuer> = null;

        r0.<java.security.cert.X509CertSelector: java.lang.String issuerName> = null;

        r0.<java.security.cert.X509CertSelector: byte[] issuerBytes> = null;

        return;

     label1:
        $r3 = new javax.security.auth.x500.X500Principal;

        specialinvoke $r3.<javax.security.auth.x500.X500Principal: void <init>(java.lang.String)>(r1);

        r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal issuer> = $r3;

        r0.<java.security.cert.X509CertSelector: java.lang.String issuerName> = r1;

        r0.<java.security.cert.X509CertSelector: byte[] issuerBytes> = null;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.io.IOException;

        $r6 = virtualinvoke r2.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label4:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public java.lang.String getIssuerAsString()
    {
        java.security.cert.X509CertSelector r0;
        javax.security.auth.x500.X500Principal $r1, $r4;
        java.lang.String $r2, $r3, $r5;

        r0 := @this: java.security.cert.X509CertSelector;

        $r1 = r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal issuer>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<java.security.cert.X509CertSelector: java.lang.String issuerName>;

        if $r2 != null goto label2;

        $r4 = r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal issuer>;

        $r5 = virtualinvoke $r4.<javax.security.auth.x500.X500Principal: java.lang.String getName()>();

        r0.<java.security.cert.X509CertSelector: java.lang.String issuerName> = $r5;

     label2:
        $r3 = r0.<java.security.cert.X509CertSelector: java.lang.String issuerName>;

        return $r3;
    }

    public void setIssuer(byte[]) throws java.io.IOException
    {
        java.security.cert.X509CertSelector r0;
        byte[] r1, $r4, $r5;
        java.lang.IllegalArgumentException r2, $r6;
        javax.security.auth.x500.X500Principal $r3;
        int $i0, $i1;
        java.io.IOException $r7;
        java.lang.String $r8;

        r0 := @this: java.security.cert.X509CertSelector;

        r1 := @parameter0: byte[];

        if r1 != null goto label1;

        r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal issuer> = null;

        return;

     label1:
        $r3 = new javax.security.auth.x500.X500Principal;

        specialinvoke $r3.<javax.security.auth.x500.X500Principal: void <init>(byte[])>(r1);

        r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal issuer> = $r3;

        r0.<java.security.cert.X509CertSelector: java.lang.String issuerName> = null;

        $i0 = lengthof r1;

        $r4 = newarray (byte)[$i0];

        r0.<java.security.cert.X509CertSelector: byte[] issuerBytes> = $r4;

        $r5 = r0.<java.security.cert.X509CertSelector: byte[] issuerBytes>;

        $i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, 0, $r5, 0, $i1);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.io.IOException;

        $r8 = virtualinvoke r2.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label4:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public byte[] getIssuerAsBytes() throws java.io.IOException
    {
        java.security.cert.X509CertSelector r0;
        byte[] r1, $r3, $r4, $r5, $r6, $r8;
        javax.security.auth.x500.X500Principal $r2, $r7;
        int $i0, $i1;

        r0 := @this: java.security.cert.X509CertSelector;

        $r2 = r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal issuer>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = r0.<java.security.cert.X509CertSelector: byte[] issuerBytes>;

        if $r3 != null goto label2;

        $r7 = r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal issuer>;

        $r8 = virtualinvoke $r7.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        r0.<java.security.cert.X509CertSelector: byte[] issuerBytes> = $r8;

     label2:
        $r4 = r0.<java.security.cert.X509CertSelector: byte[] issuerBytes>;

        $i0 = lengthof $r4;

        r1 = newarray (byte)[$i0];

        $r6 = r0.<java.security.cert.X509CertSelector: byte[] issuerBytes>;

        $r5 = r0.<java.security.cert.X509CertSelector: byte[] issuerBytes>;

        $i1 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r6, 0, r1, 0, $i1);

        return r1;
    }

    public void setSubject(javax.security.auth.x500.X500Principal)
    {
        java.security.cert.X509CertSelector r0;
        javax.security.auth.x500.X500Principal r1;

        r0 := @this: java.security.cert.X509CertSelector;

        r1 := @parameter0: javax.security.auth.x500.X500Principal;

        r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal subject> = r1;

        return;
    }

    public javax.security.auth.x500.X500Principal getSubject()
    {
        java.security.cert.X509CertSelector r0;
        javax.security.auth.x500.X500Principal $r1;

        r0 := @this: java.security.cert.X509CertSelector;

        $r1 = r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal subject>;

        return $r1;
    }

    public void setSubject(java.lang.String) throws java.io.IOException
    {
        java.security.cert.X509CertSelector r0;
        java.lang.String r1, $r6;
        java.lang.IllegalArgumentException r2, $r4;
        javax.security.auth.x500.X500Principal $r3;
        java.io.IOException $r5;

        r0 := @this: java.security.cert.X509CertSelector;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal subject> = null;

        return;

     label1:
        $r3 = new javax.security.auth.x500.X500Principal;

        specialinvoke $r3.<javax.security.auth.x500.X500Principal: void <init>(java.lang.String)>(r1);

        r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal subject> = $r3;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.io.IOException;

        $r6 = virtualinvoke r2.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label4:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public java.lang.String getSubjectAsString()
    {
        java.security.cert.X509CertSelector r0;
        javax.security.auth.x500.X500Principal $r1, $r2;
        java.lang.String $r3;

        r0 := @this: java.security.cert.X509CertSelector;

        $r1 = r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal subject>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal subject>;

        $r3 = virtualinvoke $r2.<javax.security.auth.x500.X500Principal: java.lang.String getName()>();

        return $r3;
    }

    public void setSubject(byte[]) throws java.io.IOException
    {
        java.security.cert.X509CertSelector r0;
        byte[] r1;
        java.lang.IllegalArgumentException r2, $r4;
        javax.security.auth.x500.X500Principal $r3;
        java.io.IOException $r5;
        java.lang.String $r6;

        r0 := @this: java.security.cert.X509CertSelector;

        r1 := @parameter0: byte[];

        if r1 != null goto label1;

        r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal subject> = null;

        return;

     label1:
        $r3 = new javax.security.auth.x500.X500Principal;

        specialinvoke $r3.<javax.security.auth.x500.X500Principal: void <init>(byte[])>(r1);

        r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal subject> = $r3;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.io.IOException;

        $r6 = virtualinvoke r2.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label4:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public byte[] getSubjectAsBytes() throws java.io.IOException
    {
        java.security.cert.X509CertSelector r0;
        javax.security.auth.x500.X500Principal $r1, $r2;
        byte[] $r3;

        r0 := @this: java.security.cert.X509CertSelector;

        $r1 = r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal subject>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal subject>;

        $r3 = virtualinvoke $r2.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        return $r3;
    }

    public void setSubjectKeyIdentifier(byte[])
    {
        java.security.cert.X509CertSelector r0;
        byte[] r1, $r2, $r3;
        int $i0, $i1;

        r0 := @this: java.security.cert.X509CertSelector;

        r1 := @parameter0: byte[];

        if r1 != null goto label1;

        r0.<java.security.cert.X509CertSelector: byte[] subjectKeyIdentifier> = null;

        return;

     label1:
        $i0 = lengthof r1;

        $r2 = newarray (byte)[$i0];

        r0.<java.security.cert.X509CertSelector: byte[] subjectKeyIdentifier> = $r2;

        $r3 = r0.<java.security.cert.X509CertSelector: byte[] subjectKeyIdentifier>;

        $i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, 0, $r3, 0, $i1);

        return;
    }

    public byte[] getSubjectKeyIdentifier()
    {
        java.security.cert.X509CertSelector r0;
        byte[] r1, $r2, $r3, $r4;
        int $i0, $i1;

        r0 := @this: java.security.cert.X509CertSelector;

        $r2 = r0.<java.security.cert.X509CertSelector: byte[] subjectKeyIdentifier>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = r0.<java.security.cert.X509CertSelector: byte[] subjectKeyIdentifier>;

        $i0 = lengthof $r3;

        r1 = newarray (byte)[$i0];

        $r4 = r0.<java.security.cert.X509CertSelector: byte[] subjectKeyIdentifier>;

        $i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r4, 0, r1, 0, $i1);

        return r1;
    }

    public void setAuthorityKeyIdentifier(byte[])
    {
        java.security.cert.X509CertSelector r0;
        byte[] r1, $r2, $r3;
        int $i0, $i1;

        r0 := @this: java.security.cert.X509CertSelector;

        r1 := @parameter0: byte[];

        if r1 != null goto label1;

        r0.<java.security.cert.X509CertSelector: byte[] authorityKeyIdentifier> = null;

        return;

     label1:
        $i0 = lengthof r1;

        $r2 = newarray (byte)[$i0];

        r0.<java.security.cert.X509CertSelector: byte[] authorityKeyIdentifier> = $r2;

        $r3 = r0.<java.security.cert.X509CertSelector: byte[] authorityKeyIdentifier>;

        $i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, 0, $r3, 0, $i1);

        return;
    }

    public byte[] getAuthorityKeyIdentifier()
    {
        java.security.cert.X509CertSelector r0;
        byte[] r1, $r2, $r3, $r4;
        int $i0, $i1;

        r0 := @this: java.security.cert.X509CertSelector;

        $r2 = r0.<java.security.cert.X509CertSelector: byte[] authorityKeyIdentifier>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = r0.<java.security.cert.X509CertSelector: byte[] authorityKeyIdentifier>;

        $i0 = lengthof $r3;

        r1 = newarray (byte)[$i0];

        $r4 = r0.<java.security.cert.X509CertSelector: byte[] authorityKeyIdentifier>;

        $i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r4, 0, r1, 0, $i1);

        return r1;
    }

    public void setCertificateValid(java.util.Date)
    {
        java.security.cert.X509CertSelector r0;
        java.util.Date r1, $r3;
        java.lang.Object $r2;

        r0 := @this: java.security.cert.X509CertSelector;

        r1 := @parameter0: java.util.Date;

        if r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<java.util.Date: java.lang.Object clone()>();

        $r3 = (java.util.Date) $r2;

     label2:
        r0.<java.security.cert.X509CertSelector: java.util.Date certificateValid> = $r3;

        return;
    }

    public java.util.Date getCertificateValid()
    {
        java.security.cert.X509CertSelector r0;
        java.util.Date $r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: java.security.cert.X509CertSelector;

        $r1 = r0.<java.security.cert.X509CertSelector: java.util.Date certificateValid>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<java.security.cert.X509CertSelector: java.util.Date certificateValid>;

        $r3 = virtualinvoke $r2.<java.util.Date: java.lang.Object clone()>();

        $r4 = (java.util.Date) $r3;

     label2:
        return $r4;
    }

    public void setPrivateKeyValid(java.util.Date)
    {
        java.security.cert.X509CertSelector r0;
        java.util.Date r1, $r3;
        java.lang.Object $r2;

        r0 := @this: java.security.cert.X509CertSelector;

        r1 := @parameter0: java.util.Date;

        if r1 != null goto label1;

        r0.<java.security.cert.X509CertSelector: java.util.Date privateKeyValid> = null;

        return;

     label1:
        $r2 = virtualinvoke r1.<java.util.Date: java.lang.Object clone()>();

        $r3 = (java.util.Date) $r2;

        r0.<java.security.cert.X509CertSelector: java.util.Date privateKeyValid> = $r3;

        return;
    }

    public java.util.Date getPrivateKeyValid()
    {
        java.security.cert.X509CertSelector r0;
        java.util.Date $r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: java.security.cert.X509CertSelector;

        $r1 = r0.<java.security.cert.X509CertSelector: java.util.Date privateKeyValid>;

        if $r1 == null goto label1;

        $r2 = r0.<java.security.cert.X509CertSelector: java.util.Date privateKeyValid>;

        $r3 = virtualinvoke $r2.<java.util.Date: java.lang.Object clone()>();

        $r4 = (java.util.Date) $r3;

        return $r4;

     label1:
        return null;
    }

    private void checkOID(java.lang.String) throws java.io.IOException
    {
        java.security.cert.X509CertSelector r0;
        java.lang.String r1, $r2, $r7, $r8, $r14, $r20, $r25;
        byte b0;
        int i1, i2, i3, i4, i5;
        java.io.IOException $r3, $r10, $r16, $r22;
        java.lang.StringBuilder $r4, $r5, $r6, $r9, $r11, $r12, $r15, $r17, $r18, $r21, $r23, $r24;
        java.lang.NumberFormatException $r13;
        java.lang.IndexOutOfBoundsException $r19;

        r0 := @this: java.security.cert.X509CertSelector;

        r1 := @parameter0: java.lang.String;

        b0 = 0;

        i1 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(46, b0);

     label1:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(b0, i1);

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        i3 = i1 + 1;

        if i2 < 0 goto label2;

        if i2 <= 2 goto label3;

     label2:
        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad OID: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label3:
        i4 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(46, i3);

        $r8 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i3, i4);

        i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        if i5 < 0 goto label4;

        if i5 <= 39 goto label5;

     label4:
        $r10 = new java.io.IOException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad OID: ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw $r10;

     label5:
        goto label8;

     label6:
        $r19 := @caughtexception;

        $r22 = new java.io.IOException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad OID: ");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.io.IOException: void <init>(java.lang.String)>($r25);

        throw $r22;

     label7:
        $r13 := @caughtexception;

        $r16 = new java.io.IOException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad OID: ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.io.IOException: void <init>(java.lang.String)>($r20);

        throw $r16;

     label8:
        return;

        catch java.lang.IndexOutOfBoundsException from label1 to label5 with label6;
        catch java.lang.NumberFormatException from label1 to label5 with label7;
    }

    public void setSubjectPublicKeyAlgID(java.lang.String) throws java.io.IOException
    {
        java.security.cert.X509CertSelector r0;
        java.lang.String r1;

        r0 := @this: java.security.cert.X509CertSelector;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        r0.<java.security.cert.X509CertSelector: java.lang.String subjectPublicKeyAlgID> = null;

        return;

     label1:
        specialinvoke r0.<java.security.cert.X509CertSelector: void checkOID(java.lang.String)>(r1);

        r0.<java.security.cert.X509CertSelector: java.lang.String subjectPublicKeyAlgID> = r1;

        return;
    }

    public java.lang.String getSubjectPublicKeyAlgID()
    {
        java.security.cert.X509CertSelector r0;
        java.lang.String $r1;

        r0 := @this: java.security.cert.X509CertSelector;

        $r1 = r0.<java.security.cert.X509CertSelector: java.lang.String subjectPublicKeyAlgID>;

        return $r1;
    }

    public void setSubjectPublicKey(java.security.PublicKey)
    {
        java.security.cert.X509CertSelector r0;
        java.security.PublicKey r1;
        byte[] $r2;

        r0 := @this: java.security.cert.X509CertSelector;

        r1 := @parameter0: java.security.PublicKey;

        if r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = interfaceinvoke r1.<java.security.PublicKey: byte[] getEncoded()>();

     label2:
        r0.<java.security.cert.X509CertSelector: byte[] subjectPublicKey> = $r2;

        r0.<java.security.cert.X509CertSelector: java.security.PublicKey subjectPublicKeyImpl> = r1;

        return;
    }

    public void setSubjectPublicKey(byte[]) throws java.io.IOException
    {
        java.security.cert.X509CertSelector r0;
        byte[] r1, $r2, $r3;
        int $i0, $i1;
        org.apache.harmony.security.asn1.ASN1Sequence $r4;
        java.lang.Object $r5;
        org.apache.harmony.security.x509.SubjectPublicKeyInfo $r6;
        java.security.PublicKey $r7;

        r0 := @this: java.security.cert.X509CertSelector;

        r1 := @parameter0: byte[];

        if r1 != null goto label1;

        r0.<java.security.cert.X509CertSelector: byte[] subjectPublicKey> = null;

        r0.<java.security.cert.X509CertSelector: java.security.PublicKey subjectPublicKeyImpl> = null;

        return;

     label1:
        $i0 = lengthof r1;

        $r2 = newarray (byte)[$i0];

        r0.<java.security.cert.X509CertSelector: byte[] subjectPublicKey> = $r2;

        $r3 = r0.<java.security.cert.X509CertSelector: byte[] subjectPublicKey>;

        $i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, 0, $r3, 0, $i1);

        $r4 = <org.apache.harmony.security.x509.SubjectPublicKeyInfo: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r5 = virtualinvoke $r4.<org.apache.harmony.security.asn1.ASN1Sequence: java.lang.Object decode(byte[])>(r1);

        $r6 = (org.apache.harmony.security.x509.SubjectPublicKeyInfo) $r5;

        $r7 = virtualinvoke $r6.<org.apache.harmony.security.x509.SubjectPublicKeyInfo: java.security.PublicKey getPublicKey()>();

        r0.<java.security.cert.X509CertSelector: java.security.PublicKey subjectPublicKeyImpl> = $r7;

        return;
    }

    public java.security.PublicKey getSubjectPublicKey()
    {
        java.security.cert.X509CertSelector r0;
        java.security.PublicKey $r1;

        r0 := @this: java.security.cert.X509CertSelector;

        $r1 = r0.<java.security.cert.X509CertSelector: java.security.PublicKey subjectPublicKeyImpl>;

        return $r1;
    }

    public void setKeyUsage(boolean[])
    {
        java.security.cert.X509CertSelector r0;
        boolean[] r1, $r2, $r3;
        int $i0, $i1;

        r0 := @this: java.security.cert.X509CertSelector;

        r1 := @parameter0: boolean[];

        if r1 != null goto label1;

        r0.<java.security.cert.X509CertSelector: boolean[] keyUsage> = null;

        return;

     label1:
        $i0 = lengthof r1;

        $r2 = newarray (boolean)[$i0];

        r0.<java.security.cert.X509CertSelector: boolean[] keyUsage> = $r2;

        $r3 = r0.<java.security.cert.X509CertSelector: boolean[] keyUsage>;

        $i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(boolean[],int,boolean[],int,int)>(r1, 0, $r3, 0, $i1);

        return;
    }

    public boolean[] getKeyUsage()
    {
        java.security.cert.X509CertSelector r0;
        boolean[] r1, $r2, $r3, $r4, $r5;
        int $i0, $i1;

        r0 := @this: java.security.cert.X509CertSelector;

        $r2 = r0.<java.security.cert.X509CertSelector: boolean[] keyUsage>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = r0.<java.security.cert.X509CertSelector: boolean[] keyUsage>;

        $i0 = lengthof $r3;

        r1 = newarray (boolean)[$i0];

        $r5 = r0.<java.security.cert.X509CertSelector: boolean[] keyUsage>;

        $r4 = r0.<java.security.cert.X509CertSelector: boolean[] keyUsage>;

        $i1 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(boolean[],int,boolean[],int,int)>($r5, 0, r1, 0, $i1);

        return r1;
    }

    public void setExtendedKeyUsage(java.util.Set) throws java.io.IOException
    {
        java.security.cert.X509CertSelector r0;
        java.util.Set r1, $r6;
        java.util.HashSet r2, $r5;
        java.util.Iterator r3;
        java.lang.String r4;
        int $i0;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @this: java.security.cert.X509CertSelector;

        r1 := @parameter0: java.util.Set;

        r0.<java.security.cert.X509CertSelector: java.util.Set extendedKeyUsage> = null;

        if r1 == null goto label1;

        $i0 = interfaceinvoke r1.<java.util.Set: int size()>();

        if $i0 != 0 goto label2;

     label1:
        return;

     label2:
        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r2 = $r5;

        r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r7;

        specialinvoke r0.<java.security.cert.X509CertSelector: void checkOID(java.lang.String)>(r4);

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r4);

        goto label3;

     label4:
        $r6 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(r2);

        r0.<java.security.cert.X509CertSelector: java.util.Set extendedKeyUsage> = $r6;

        return;
    }

    public java.util.Set getExtendedKeyUsage()
    {
        java.security.cert.X509CertSelector r0;
        java.util.Set $r1;

        r0 := @this: java.security.cert.X509CertSelector;

        $r1 = r0.<java.security.cert.X509CertSelector: java.util.Set extendedKeyUsage>;

        return $r1;
    }

    public void setMatchAllSubjectAltNames(boolean)
    {
        java.security.cert.X509CertSelector r0;
        boolean z0;

        r0 := @this: java.security.cert.X509CertSelector;

        z0 := @parameter0: boolean;

        r0.<java.security.cert.X509CertSelector: boolean matchAllNames> = z0;

        return;
    }

    public boolean getMatchAllSubjectAltNames()
    {
        java.security.cert.X509CertSelector r0;
        boolean $z0;

        r0 := @this: java.security.cert.X509CertSelector;

        $z0 = r0.<java.security.cert.X509CertSelector: boolean matchAllNames>;

        return $z0;
    }

    public void setSubjectAlternativeNames(java.util.Collection) throws java.io.IOException
    {
        java.security.cert.X509CertSelector r0;
        java.util.Collection r1;
        java.util.Iterator r2;
        java.util.List r3;
        int i0, $i1;
        java.lang.Object r4, $r5, $r6;
        boolean $z0, $z1, $z2;
        java.lang.Integer $r7;
        byte[] $r8, $r11;
        java.io.IOException $r9;
        java.lang.String $r10;

        r0 := @this: java.security.cert.X509CertSelector;

        r1 := @parameter0: java.util.Collection;

        r0.<java.security.cert.X509CertSelector: java.util.List[] subjectAltNames> = null;

        if r1 == null goto label1;

        $i1 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if $i1 != 0 goto label2;

     label1:
        return;

     label2:
        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.List) $r5;

        $r6 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (java.lang.Integer) $r6;

        i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        r4 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(1);

        $z1 = r4 instanceof java.lang.String;

        if $z1 == 0 goto label4;

        $r10 = (java.lang.String) r4;

        virtualinvoke r0.<java.security.cert.X509CertSelector: void addSubjectAlternativeName(int,java.lang.String)>(i0, $r10);

        goto label6;

     label4:
        $z2 = r4 instanceof byte[];

        if $z2 == 0 goto label5;

        $r8 = (byte[]) r4;

        $r11 = (byte[]) $r8;

        virtualinvoke r0.<java.security.cert.X509CertSelector: void addSubjectAlternativeName(int,byte[])>(i0, $r11);

        goto label6;

     label5:
        $r9 = new java.io.IOException;

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>("name neither a String nor a byte[]");

        throw $r9;

     label6:
        goto label3;

     label7:
        return;
    }

    public void addSubjectAlternativeName(int, java.lang.String) throws java.io.IOException
    {
        java.security.cert.X509CertSelector r0;
        int i0;
        java.lang.String r1;
        org.apache.harmony.security.x509.GeneralName r2, $r3;
        java.util.List[] $r4, $r5, $r7, $r10;
        java.util.List $r6, $r8;
        java.util.ArrayList $r9;
        java.util.ArrayList[] $r11;

        r0 := @this: java.security.cert.X509CertSelector;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = new org.apache.harmony.security.x509.GeneralName;

        specialinvoke $r3.<org.apache.harmony.security.x509.GeneralName: void <init>(int,java.lang.String)>(i0, r1);

        r2 = $r3;

        $r4 = r0.<java.security.cert.X509CertSelector: java.util.List[] subjectAltNames>;

        if $r4 != null goto label1;

        $r11 = newarray (java.util.ArrayList)[9];

        r0.<java.security.cert.X509CertSelector: java.util.List[] subjectAltNames> = $r11;

     label1:
        $r5 = r0.<java.security.cert.X509CertSelector: java.util.List[] subjectAltNames>;

        $r6 = $r5[i0];

        if $r6 != null goto label2;

        $r10 = r0.<java.security.cert.X509CertSelector: java.util.List[] subjectAltNames>;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        $r10[i0] = $r9;

     label2:
        $r7 = r0.<java.security.cert.X509CertSelector: java.util.List[] subjectAltNames>;

        $r8 = $r7[i0];

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    public void addSubjectAlternativeName(int, byte[]) throws java.io.IOException
    {
        java.security.cert.X509CertSelector r0;
        int i0;
        byte[] r1;
        org.apache.harmony.security.x509.GeneralName r2, $r3;
        java.util.List[] $r4, $r5, $r7, $r10;
        java.util.List $r6, $r8;
        java.util.ArrayList $r9;
        java.util.ArrayList[] $r11;

        r0 := @this: java.security.cert.X509CertSelector;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        $r3 = new org.apache.harmony.security.x509.GeneralName;

        specialinvoke $r3.<org.apache.harmony.security.x509.GeneralName: void <init>(int,byte[])>(i0, r1);

        r2 = $r3;

        $r4 = r0.<java.security.cert.X509CertSelector: java.util.List[] subjectAltNames>;

        if $r4 != null goto label1;

        $r11 = newarray (java.util.ArrayList)[9];

        r0.<java.security.cert.X509CertSelector: java.util.List[] subjectAltNames> = $r11;

     label1:
        $r5 = r0.<java.security.cert.X509CertSelector: java.util.List[] subjectAltNames>;

        $r6 = $r5[i0];

        if $r6 != null goto label2;

        $r10 = r0.<java.security.cert.X509CertSelector: java.util.List[] subjectAltNames>;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        $r10[i0] = $r9;

     label2:
        $r7 = r0.<java.security.cert.X509CertSelector: java.util.List[] subjectAltNames>;

        $r8 = $r7[i0];

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    public java.util.Collection getSubjectAlternativeNames()
    {
        java.security.cert.X509CertSelector r0;
        java.util.ArrayList r1, r2, $r4, $r9;
        int i0, i1, $i2;
        java.util.List[] $r3, $r5, $r7, $r11;
        java.util.List $r6, $r8, $r13;
        java.lang.Integer $r10;
        java.lang.Object $r12;

        r0 := @this: java.security.cert.X509CertSelector;

        $r3 = r0.<java.security.cert.X509CertSelector: java.util.List[] subjectAltNames>;

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        i0 = 0;

     label2:
        if i0 >= 9 goto label5;

        $r5 = r0.<java.security.cert.X509CertSelector: java.util.List[] subjectAltNames>;

        $r6 = $r5[i0];

        if $r6 == null goto label4;

        i1 = 0;

     label3:
        $r7 = r0.<java.security.cert.X509CertSelector: java.util.List[] subjectAltNames>;

        $r8 = $r7[i0];

        $i2 = interfaceinvoke $r8.<java.util.List: int size()>();

        if i1 >= $i2 goto label4;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>(2);

        r2 = $r9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r11 = r0.<java.security.cert.X509CertSelector: java.util.List[] subjectAltNames>;

        $r13 = $r11[i0];

        $r12 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i1);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r12);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        i1 = i1 + 1;

        goto label3;

     label4:
        i0 = i0 + 1;

        goto label2;

     label5:
        return r1;
    }

    public void setNameConstraints(byte[]) throws java.io.IOException
    {
        java.security.cert.X509CertSelector r0;
        byte[] r1;
        org.apache.harmony.security.asn1.ASN1Sequence $r2;
        java.lang.Object $r3;
        org.apache.harmony.security.x509.NameConstraints $r4;

        r0 := @this: java.security.cert.X509CertSelector;

        r1 := @parameter0: byte[];

        if r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = <org.apache.harmony.security.x509.NameConstraints: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r3 = virtualinvoke $r2.<org.apache.harmony.security.asn1.ASN1Sequence: java.lang.Object decode(byte[])>(r1);

        $r4 = (org.apache.harmony.security.x509.NameConstraints) $r3;

     label2:
        r0.<java.security.cert.X509CertSelector: org.apache.harmony.security.x509.NameConstraints nameConstraints> = $r4;

        return;
    }

    public byte[] getNameConstraints()
    {
        java.security.cert.X509CertSelector r0;
        org.apache.harmony.security.x509.NameConstraints $r1, $r2;
        byte[] $r3;

        r0 := @this: java.security.cert.X509CertSelector;

        $r1 = r0.<java.security.cert.X509CertSelector: org.apache.harmony.security.x509.NameConstraints nameConstraints>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<java.security.cert.X509CertSelector: org.apache.harmony.security.x509.NameConstraints nameConstraints>;

        $r3 = virtualinvoke $r2.<org.apache.harmony.security.x509.NameConstraints: byte[] getEncoded()>();

     label2:
        return $r3;
    }

    public void setBasicConstraints(int)
    {
        java.security.cert.X509CertSelector r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: java.security.cert.X509CertSelector;

        i0 := @parameter0: int;

        if i0 >= -2 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("pathLen < -2");

        throw $r1;

     label1:
        r0.<java.security.cert.X509CertSelector: int pathLen> = i0;

        return;
    }

    public int getBasicConstraints()
    {
        java.security.cert.X509CertSelector r0;
        int $i0;

        r0 := @this: java.security.cert.X509CertSelector;

        $i0 = r0.<java.security.cert.X509CertSelector: int pathLen>;

        return $i0;
    }

    public void setPolicy(java.util.Set) throws java.io.IOException
    {
        java.security.cert.X509CertSelector r0;
        java.util.Set r1, $r6;
        java.util.HashSet r2, $r5;
        java.util.Iterator r3;
        java.lang.String r4;
        int $i0;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @this: java.security.cert.X509CertSelector;

        r1 := @parameter0: java.util.Set;

        if r1 != null goto label1;

        r0.<java.security.cert.X509CertSelector: java.util.Set policies> = null;

        return;

     label1:
        $r5 = new java.util.HashSet;

        $i0 = interfaceinvoke r1.<java.util.Set: int size()>();

        specialinvoke $r5.<java.util.HashSet: void <init>(int)>($i0);

        r2 = $r5;

        r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r7;

        specialinvoke r0.<java.security.cert.X509CertSelector: void checkOID(java.lang.String)>(r4);

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r4);

        goto label2;

     label3:
        $r6 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(r2);

        r0.<java.security.cert.X509CertSelector: java.util.Set policies> = $r6;

        return;
    }

    public java.util.Set getPolicy()
    {
        java.security.cert.X509CertSelector r0;
        java.util.Set $r1;

        r0 := @this: java.security.cert.X509CertSelector;

        $r1 = r0.<java.security.cert.X509CertSelector: java.util.Set policies>;

        return $r1;
    }

    public void addPathToName(int, java.lang.String) throws java.io.IOException
    {
        java.security.cert.X509CertSelector r0;
        int i0;
        java.lang.String r1;
        org.apache.harmony.security.x509.GeneralName r2, $r3;
        java.util.ArrayList $r4, $r5, $r6;

        r0 := @this: java.security.cert.X509CertSelector;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = new org.apache.harmony.security.x509.GeneralName;

        specialinvoke $r3.<org.apache.harmony.security.x509.GeneralName: void <init>(int,java.lang.String)>(i0, r1);

        r2 = $r3;

        $r4 = r0.<java.security.cert.X509CertSelector: java.util.ArrayList pathToNames>;

        if $r4 != null goto label1;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<java.security.cert.X509CertSelector: java.util.ArrayList pathToNames> = $r6;

     label1:
        $r5 = r0.<java.security.cert.X509CertSelector: java.util.ArrayList pathToNames>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        return;
    }

    public void setPathToNames(java.util.Collection) throws java.io.IOException
    {
        java.security.cert.X509CertSelector r0;
        java.util.Collection r1;
        java.util.Iterator r2;
        java.util.List r3;
        int i0, $i1;
        java.lang.Object r4, $r5, $r6;
        boolean $z0, $z1, $z2;
        java.lang.Integer $r7;
        byte[] $r8, $r11;
        java.io.IOException $r9;
        java.lang.String $r10;

        r0 := @this: java.security.cert.X509CertSelector;

        r1 := @parameter0: java.util.Collection;

        r0.<java.security.cert.X509CertSelector: java.util.ArrayList pathToNames> = null;

        if r1 == null goto label1;

        $i1 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if $i1 != 0 goto label2;

     label1:
        return;

     label2:
        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.List) $r5;

        $r6 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (java.lang.Integer) $r6;

        i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        r4 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(1);

        $z1 = r4 instanceof java.lang.String;

        if $z1 == 0 goto label4;

        $r10 = (java.lang.String) r4;

        virtualinvoke r0.<java.security.cert.X509CertSelector: void addPathToName(int,java.lang.String)>(i0, $r10);

        goto label6;

     label4:
        $z2 = r4 instanceof byte[];

        if $z2 == 0 goto label5;

        $r8 = (byte[]) r4;

        $r11 = (byte[]) $r8;

        virtualinvoke r0.<java.security.cert.X509CertSelector: void addPathToName(int,byte[])>(i0, $r11);

        goto label6;

     label5:
        $r9 = new java.io.IOException;

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>("name neither a String nor a byte[]");

        throw $r9;

     label6:
        goto label3;

     label7:
        return;
    }

    public void addPathToName(int, byte[]) throws java.io.IOException
    {
        java.security.cert.X509CertSelector r0;
        int i0;
        byte[] r1;
        org.apache.harmony.security.x509.GeneralName r2, $r3;
        java.util.ArrayList $r4, $r5, $r6;

        r0 := @this: java.security.cert.X509CertSelector;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        $r3 = new org.apache.harmony.security.x509.GeneralName;

        specialinvoke $r3.<org.apache.harmony.security.x509.GeneralName: void <init>(int,byte[])>(i0, r1);

        r2 = $r3;

        $r4 = r0.<java.security.cert.X509CertSelector: java.util.ArrayList pathToNames>;

        if $r4 != null goto label1;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<java.security.cert.X509CertSelector: java.util.ArrayList pathToNames> = $r6;

     label1:
        $r5 = r0.<java.security.cert.X509CertSelector: java.util.ArrayList pathToNames>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        return;
    }

    public java.util.Collection getPathToNames()
    {
        java.security.cert.X509CertSelector r0;
        java.util.ArrayList r1, $r4, $r5, $r6;
        java.util.Iterator r2;
        org.apache.harmony.security.x509.GeneralName r3;
        boolean $z0;
        java.lang.Object $r7;
        java.util.List $r8;

        r0 := @this: java.security.cert.X509CertSelector;

        $r4 = r0.<java.security.cert.X509CertSelector: java.util.ArrayList pathToNames>;

        if $r4 != null goto label1;

        return null;

     label1:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r1 = $r5;

        $r6 = r0.<java.security.cert.X509CertSelector: java.util.ArrayList pathToNames>;

        r2 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.harmony.security.x509.GeneralName) $r7;

        $r8 = virtualinvoke r3.<org.apache.harmony.security.x509.GeneralName: java.util.List getAsList()>();

        interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r8);

        goto label2;

     label3:
        return r1;
    }

    public java.lang.String toString()
    {
        java.security.cert.X509CertSelector r0;
        java.lang.StringBuilder r1, $r5, $r18, $r21, $r31, $r37, $r43, $r46, $r57, $r58, $r61, $r63, $r68, $r71, $r75, $r81, $r83, $r84, $r89;
        java.lang.String[] r2, $r53;
        int i0, $i2, i3;
        java.util.Iterator r3, r91;
        org.apache.harmony.security.x509.GeneralName r4, r92;
        java.security.cert.X509Certificate $r7, $r86;
        java.math.BigInteger $r8, $r80;
        javax.security.auth.x500.X500Principal $r9, $r10, $r79, $r82;
        byte[] $r11, $r12, $r17, $r54, $r70, $r74;
        java.util.Date $r13, $r14, $r64, $r66;
        java.lang.String $r15, $r29, $r32, $r35, $r45, $r49, $r55, $r59, $r69, $r73, $r77;
        boolean[] $r16, $r51;
        java.util.Set $r19, $r24, $r34, $r50;
        boolean $z0, $z1, $z2, $z3;
        java.util.List[] $r22, $r39;
        org.apache.harmony.security.x509.NameConstraints $r25;
        java.util.ArrayList $r27, $r28;
        java.lang.Object $r33, $r42;
        java.util.List r90;

        r0 := @this: java.security.cert.X509CertSelector;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        r1 = $r5;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("X509CertSelector: \n[");

        $r7 = r0.<java.security.cert.X509CertSelector: java.security.cert.X509Certificate certificateEquals>;

        if $r7 == null goto label01;

        $r89 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  certificateEquals: ");

        $r86 = r0.<java.security.cert.X509CertSelector: java.security.cert.X509Certificate certificateEquals>;

        virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r86);

     label01:
        $r8 = r0.<java.security.cert.X509CertSelector: java.math.BigInteger serialNumber>;

        if $r8 == null goto label02;

        $r81 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  serialNumber: ");

        $r80 = r0.<java.security.cert.X509CertSelector: java.math.BigInteger serialNumber>;

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r80);

     label02:
        $r9 = r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal issuer>;

        if $r9 == null goto label03;

        $r84 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  issuer: ");

        $r79 = r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal issuer>;

        virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r79);

     label03:
        $r10 = r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal subject>;

        if $r10 == null goto label04;

        $r83 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  subject: ");

        $r82 = r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal subject>;

        virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r82);

     label04:
        $r11 = r0.<java.security.cert.X509CertSelector: byte[] subjectKeyIdentifier>;

        if $r11 == null goto label05;

        $r71 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  subjectKeyIdentifier: ");

        $r70 = r0.<java.security.cert.X509CertSelector: byte[] subjectKeyIdentifier>;

        $r73 = staticinvoke <org.apache.harmony.security.utils.Array: java.lang.String getBytesAsString(byte[])>($r70);

        virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

     label05:
        $r12 = r0.<java.security.cert.X509CertSelector: byte[] authorityKeyIdentifier>;

        if $r12 == null goto label06;

        $r75 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  authorityKeyIdentifier: ");

        $r74 = r0.<java.security.cert.X509CertSelector: byte[] authorityKeyIdentifier>;

        $r77 = staticinvoke <org.apache.harmony.security.utils.Array: java.lang.String getBytesAsString(byte[])>($r74);

        virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

     label06:
        $r13 = r0.<java.security.cert.X509CertSelector: java.util.Date certificateValid>;

        if $r13 == null goto label07;

        $r63 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  certificateValid: ");

        $r64 = r0.<java.security.cert.X509CertSelector: java.util.Date certificateValid>;

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r64);

     label07:
        $r15 = r0.<java.security.cert.X509CertSelector: java.lang.String subjectPublicKeyAlgID>;

        if $r15 == null goto label08;

        $r68 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  subjectPublicKeyAlgID: ");

        $r69 = r0.<java.security.cert.X509CertSelector: java.lang.String subjectPublicKeyAlgID>;

        virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

     label08:
        $r14 = r0.<java.security.cert.X509CertSelector: java.util.Date privateKeyValid>;

        if $r14 == null goto label09;

        $r57 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  privateKeyValid: ");

        $r66 = r0.<java.security.cert.X509CertSelector: java.util.Date privateKeyValid>;

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r66);

     label09:
        $r17 = r0.<java.security.cert.X509CertSelector: byte[] subjectPublicKey>;

        if $r17 == null goto label10;

        $r61 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  subjectPublicKey: ");

        $r54 = r0.<java.security.cert.X509CertSelector: byte[] subjectPublicKey>;

        $r55 = staticinvoke <org.apache.harmony.security.utils.Array: java.lang.String getBytesAsString(byte[])>($r54);

        virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

     label10:
        $r16 = r0.<java.security.cert.X509CertSelector: boolean[] keyUsage>;

        if $r16 == null goto label14;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  keyUsage: \n  [");

        $r53 = newarray (java.lang.String)[9];

        $r53[0] = "digitalSignature";

        $r53[1] = "nonRepudiation";

        $r53[2] = "keyEncipherment";

        $r53[3] = "dataEncipherment";

        $r53[4] = "keyAgreement";

        $r53[5] = "keyCertSign";

        $r53[6] = "cRLSign";

        $r53[7] = "encipherOnly";

        $r53[8] = "decipherOnly";

        r2 = $r53;

        i0 = 0;

     label11:
        if i0 >= 9 goto label13;

        $r51 = r0.<java.security.cert.X509CertSelector: boolean[] keyUsage>;

        $z3 = $r51[i0];

        if $z3 == 0 goto label12;

        $r58 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n    ");

        $r59 = r2[i0];

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

     label12:
        i0 = i0 + 1;

        goto label11;

     label13:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  ]");

     label14:
        $r19 = r0.<java.security.cert.X509CertSelector: java.util.Set extendedKeyUsage>;

        if $r19 == null goto label15;

        $r43 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  extendedKeyUsage: ");

        $r50 = r0.<java.security.cert.X509CertSelector: java.util.Set extendedKeyUsage>;

        $r49 = virtualinvoke $r50.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

     label15:
        $r18 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  matchAllNames: ");

        $z0 = r0.<java.security.cert.X509CertSelector: boolean matchAllNames>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r21 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  pathLen: ");

        $i2 = r0.<java.security.cert.X509CertSelector: int pathLen>;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r22 = r0.<java.security.cert.X509CertSelector: java.util.List[] subjectAltNames>;

        if $r22 == null goto label20;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  subjectAltNames:  \n  [");

        i3 = 0;

     label16:
        if i3 >= 9 goto label19;

        $r39 = r0.<java.security.cert.X509CertSelector: java.util.List[] subjectAltNames>;

        r90 = $r39[i3];

        if r90 == null goto label18;

        interfaceinvoke r90.<java.util.List: int size()>();

        r3 = interfaceinvoke r90.<java.util.List: java.util.Iterator iterator()>();

     label17:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label18;

        $r42 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.harmony.security.x509.GeneralName) $r42;

        $r46 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n    ");

        $r45 = virtualinvoke r4.<org.apache.harmony.security.x509.GeneralName: java.lang.String toString()>();

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        goto label17;

     label18:
        i3 = i3 + 1;

        goto label16;

     label19:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  ]");

     label20:
        $r25 = r0.<java.security.cert.X509CertSelector: org.apache.harmony.security.x509.NameConstraints nameConstraints>;

        if $r25 == null goto label21;

     label21:
        $r24 = r0.<java.security.cert.X509CertSelector: java.util.Set policies>;

        if $r24 == null goto label22;

        $r37 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  policies: ");

        $r34 = r0.<java.security.cert.X509CertSelector: java.util.Set policies>;

        $r35 = virtualinvoke $r34.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

     label22:
        $r27 = r0.<java.security.cert.X509CertSelector: java.util.ArrayList pathToNames>;

        if $r27 == null goto label24;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  pathToNames:  \n  [");

        $r28 = r0.<java.security.cert.X509CertSelector: java.util.ArrayList pathToNames>;

        r91 = virtualinvoke $r28.<java.util.ArrayList: java.util.Iterator iterator()>();

     label23:
        $z1 = interfaceinvoke r91.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label24;

        $r33 = interfaceinvoke r91.<java.util.Iterator: java.lang.Object next()>();

        r92 = (org.apache.harmony.security.x509.GeneralName) $r33;

        $r31 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n    ");

        $r32 = virtualinvoke r92.<org.apache.harmony.security.x509.GeneralName: java.lang.String toString()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        goto label23;

     label24:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n]");

        $r29 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r29;
    }

    private byte[] getExtensionValue(java.security.cert.X509Certificate, java.lang.String)
    {
        java.security.cert.X509CertSelector r0;
        java.security.cert.X509Certificate r1;
        java.lang.String r2;
        byte[] r3, $r6, $r7;
        org.apache.harmony.security.asn1.ASN1OctetString $r4;
        java.lang.Object $r5;
        java.io.IOException $r8;

        r0 := @this: java.security.cert.X509CertSelector;

        r1 := @parameter0: java.security.cert.X509Certificate;

        r2 := @parameter1: java.lang.String;

     label1:
        r3 = virtualinvoke r1.<java.security.cert.X509Certificate: byte[] getExtensionValue(java.lang.String)>(r2);

        if r3 != null goto label3;

     label2:
        return null;

     label3:
        $r4 = staticinvoke <org.apache.harmony.security.asn1.ASN1OctetString: org.apache.harmony.security.asn1.ASN1OctetString getInstance()>();

        $r5 = virtualinvoke $r4.<org.apache.harmony.security.asn1.ASN1OctetString: java.lang.Object decode(byte[])>(r3);

        $r6 = (byte[]) $r5;

        $r7 = (byte[]) $r6;

     label4:
        return $r7;

     label5:
        $r8 := @caughtexception;

        return null;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    public boolean match(java.security.cert.Certificate)
    {
        java.security.cert.X509CertSelector r0;
        java.security.cert.Certificate r1;
        java.security.cert.X509Certificate r2, $r8, $r77;
        org.apache.harmony.security.x509.PrivateKeyUsagePeriod r4;
        java.util.Date r5, r6, $r13, $r16, $r67, $r68, $r76;
        org.apache.harmony.security.x509.GeneralName r7, $r42;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i19, i20, i21, i22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21;
        java.math.BigInteger $r9, $r87, $r88;
        javax.security.auth.x500.X500Principal $r10, $r11, $r71, $r84, $r85, $r86;
        byte[] $r12, $r14, $r18, $r59, $r60, $r72, $r73, $r74, $r75, r92, r94, r100, r105, r110;
        java.lang.String $r15, $r34, $r62, $r63;
        boolean[] $r17, $r38, $r39, $r40, $r43, $r47, $r52, $r54, $r55, $r56, $r57, r97;
        java.util.Set $r19, $r23, $r27, $r32, $r53;
        org.apache.harmony.security.x509.NameConstraints $r20, $r33, r111;
        java.util.List[] $r21, $r44, $r48, $r50;
        java.util.ArrayList $r22, $r25;
        org.apache.harmony.security.asn1.ASN1Sequence $r24, $r65, $r70;
        java.lang.Object $r26, $r30, $r31, $r36, $r41, $r46, $r66, $r69;
        org.apache.harmony.security.x509.CertificatePolicies $r28;
        org.apache.harmony.security.asn1.ASN1Type $r29, $r37;
        org.apache.harmony.security.x509.GeneralNames $r35;
        java.util.List $r45, $r49, $r51, r98, r101, r106;
        java.security.PublicKey $r58, $r61;
        org.apache.harmony.security.x509.SubjectPublicKeyInfo $r64;
        java.security.cert.CertificateExpiredException $r78;
        java.io.IOException $r79, $r80, $r81, $r83, $r90, r96, r104;
        java.security.cert.CertificateParsingException $r82;
        java.security.cert.CertificateNotYetValidException $r89;
        org.apache.harmony.security.x509.AlgorithmIdentifier r95;
        boolean[][] r102;
        java.util.Iterator r103, r107;
        org.apache.harmony.security.x509.PolicyInformation r108;

        r0 := @this: java.security.cert.X509CertSelector;

        r1 := @parameter0: java.security.cert.Certificate;

        $z0 = r1 instanceof java.security.cert.X509Certificate;

        if $z0 != 0 goto label01;

        return 0;

     label01:
        r2 = (java.security.cert.X509Certificate) r1;

        $r8 = r0.<java.security.cert.X509CertSelector: java.security.cert.X509Certificate certificateEquals>;

        if $r8 == null goto label02;

        $r77 = r0.<java.security.cert.X509CertSelector: java.security.cert.X509Certificate certificateEquals>;

        $z18 = virtualinvoke $r77.<java.security.cert.X509Certificate: boolean equals(java.lang.Object)>(r2);

        if $z18 != 0 goto label02;

        return 0;

     label02:
        $r9 = r0.<java.security.cert.X509CertSelector: java.math.BigInteger serialNumber>;

        if $r9 == null goto label03;

        $r87 = r0.<java.security.cert.X509CertSelector: java.math.BigInteger serialNumber>;

        $r88 = virtualinvoke r2.<java.security.cert.X509Certificate: java.math.BigInteger getSerialNumber()>();

        $z21 = virtualinvoke $r87.<java.math.BigInteger: boolean equals(java.lang.Object)>($r88);

        if $z21 != 0 goto label03;

        return 0;

     label03:
        $r10 = r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal issuer>;

        if $r10 == null goto label04;

        $r86 = r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal issuer>;

        $r85 = virtualinvoke r2.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $z20 = virtualinvoke $r86.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r85);

        if $z20 != 0 goto label04;

        return 0;

     label04:
        $r11 = r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal subject>;

        if $r11 == null goto label05;

        $r71 = r0.<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal subject>;

        $r84 = virtualinvoke r2.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        $z19 = virtualinvoke $r71.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r84);

        if $z19 != 0 goto label05;

        return 0;

     label05:
        $r12 = r0.<java.security.cert.X509CertSelector: byte[] subjectKeyIdentifier>;

        if $r12 == null goto label06;

        $r73 = r0.<java.security.cert.X509CertSelector: byte[] subjectKeyIdentifier>;

        $r72 = specialinvoke r0.<java.security.cert.X509CertSelector: byte[] getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>(r2, "2.5.29.14");

        $z16 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r73, $r72);

        if $z16 != 0 goto label06;

        return 0;

     label06:
        $r14 = r0.<java.security.cert.X509CertSelector: byte[] authorityKeyIdentifier>;

        if $r14 == null goto label07;

        $r75 = r0.<java.security.cert.X509CertSelector: byte[] authorityKeyIdentifier>;

        $r74 = specialinvoke r0.<java.security.cert.X509CertSelector: byte[] getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>(r2, "2.5.29.35");

        $z17 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r75, $r74);

        if $z17 != 0 goto label07;

        return 0;

     label07:
        $r13 = r0.<java.security.cert.X509CertSelector: java.util.Date certificateValid>;

        if $r13 == null goto label12;

     label08:
        $r76 = r0.<java.security.cert.X509CertSelector: java.util.Date certificateValid>;

        virtualinvoke r2.<java.security.cert.X509Certificate: void checkValidity(java.util.Date)>($r76);

     label09:
        goto label12;

     label10:
        $r78 := @caughtexception;

        return 0;

     label11:
        $r89 := @caughtexception;

        return 0;

     label12:
        $r16 = r0.<java.security.cert.X509CertSelector: java.util.Date privateKeyValid>;

        if $r16 == null goto label23;

     label13:
        r92 = specialinvoke r0.<java.security.cert.X509CertSelector: byte[] getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>(r2, "2.5.29.16");

        if r92 != null goto label15;

     label14:
        return 0;

     label15:
        $r70 = <org.apache.harmony.security.x509.PrivateKeyUsagePeriod: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r69 = virtualinvoke $r70.<org.apache.harmony.security.asn1.ASN1Sequence: java.lang.Object decode(byte[])>(r92);

        r4 = (org.apache.harmony.security.x509.PrivateKeyUsagePeriod) $r69;

        r5 = virtualinvoke r4.<org.apache.harmony.security.x509.PrivateKeyUsagePeriod: java.util.Date getNotBefore()>();

        r6 = virtualinvoke r4.<org.apache.harmony.security.x509.PrivateKeyUsagePeriod: java.util.Date getNotAfter()>();

        if r5 != null goto label17;

        if r6 != null goto label17;

     label16:
        return 0;

     label17:
        if r5 == null goto label19;

        $r67 = r0.<java.security.cert.X509CertSelector: java.util.Date privateKeyValid>;

        $i15 = virtualinvoke r5.<java.util.Date: int compareTo(java.util.Date)>($r67);

        if $i15 <= 0 goto label19;

     label18:
        return 0;

     label19:
        if r6 == null goto label21;

        $r68 = r0.<java.security.cert.X509CertSelector: java.util.Date privateKeyValid>;

        $i16 = virtualinvoke r6.<java.util.Date: int compareTo(java.util.Date)>($r68);

        if $i16 >= 0 goto label21;

     label20:
        return 0;

     label21:
        goto label23;

     label22:
        $r81 := @caughtexception;

        return 0;

     label23:
        $r15 = r0.<java.security.cert.X509CertSelector: java.lang.String subjectPublicKeyAlgID>;

        if $r15 == null goto label28;

     label24:
        $r58 = virtualinvoke r2.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        r94 = interfaceinvoke $r58.<java.security.PublicKey: byte[] getEncoded()>();

        $r65 = <org.apache.harmony.security.x509.SubjectPublicKeyInfo: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r66 = virtualinvoke $r65.<org.apache.harmony.security.asn1.ASN1Sequence: java.lang.Object decode(byte[])>(r94);

        $r64 = (org.apache.harmony.security.x509.SubjectPublicKeyInfo) $r66;

        r95 = virtualinvoke $r64.<org.apache.harmony.security.x509.SubjectPublicKeyInfo: org.apache.harmony.security.x509.AlgorithmIdentifier getAlgorithmIdentifier()>();

        $r62 = r0.<java.security.cert.X509CertSelector: java.lang.String subjectPublicKeyAlgID>;

        $r63 = virtualinvoke r95.<org.apache.harmony.security.x509.AlgorithmIdentifier: java.lang.String getAlgorithm()>();

        $z15 = virtualinvoke $r62.<java.lang.String: boolean equals(java.lang.Object)>($r63);

        if $z15 != 0 goto label26;

     label25:
        return 0;

     label26:
        goto label28;

     label27:
        $r90 := @caughtexception;

        r96 = $r90;

        virtualinvoke r96.<java.io.IOException: void printStackTrace()>();

        return 0;

     label28:
        $r18 = r0.<java.security.cert.X509CertSelector: byte[] subjectPublicKey>;

        if $r18 == null goto label29;

        $r60 = r0.<java.security.cert.X509CertSelector: byte[] subjectPublicKey>;

        $r61 = virtualinvoke r2.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        $r59 = interfaceinvoke $r61.<java.security.PublicKey: byte[] getEncoded()>();

        $z13 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r60, $r59);

        if $z13 != 0 goto label29;

        return 0;

     label29:
        $r17 = r0.<java.security.cert.X509CertSelector: boolean[] keyUsage>;

        if $r17 == null goto label36;

        r97 = virtualinvoke r2.<java.security.cert.X509Certificate: boolean[] getKeyUsage()>();

        if r97 == null goto label36;

        i17 = 0;

        $i12 = lengthof r97;

        $r52 = r0.<java.security.cert.X509CertSelector: boolean[] keyUsage>;

        $i9 = lengthof $r52;

        if $i12 >= $i9 goto label30;

        $i14 = lengthof r97;

        goto label31;

     label30:
        $r56 = r0.<java.security.cert.X509CertSelector: boolean[] keyUsage>;

        $i14 = lengthof $r56;

     label31:
        i18 = $i14;

     label32:
        if i17 >= i18 goto label34;

        $r55 = r0.<java.security.cert.X509CertSelector: boolean[] keyUsage>;

        $z12 = $r55[i17];

        if $z12 == 0 goto label33;

        $z14 = r97[i17];

        if $z14 != 0 goto label33;

        return 0;

     label33:
        i17 = i17 + 1;

        goto label32;

     label34:
        $r57 = r0.<java.security.cert.X509CertSelector: boolean[] keyUsage>;

        $i13 = lengthof $r57;

        if i17 >= $i13 goto label36;

        $r54 = r0.<java.security.cert.X509CertSelector: boolean[] keyUsage>;

        $z11 = $r54[i17];

        if $z11 == 0 goto label35;

        return 0;

     label35:
        i17 = i17 + 1;

        goto label34;

     label36:
        $r19 = r0.<java.security.cert.X509CertSelector: java.util.Set extendedKeyUsage>;

        if $r19 == null goto label41;

     label37:
        r98 = virtualinvoke r2.<java.security.cert.X509Certificate: java.util.List getExtendedKeyUsage()>();

        if r98 == null goto label39;

        $r53 = r0.<java.security.cert.X509CertSelector: java.util.Set extendedKeyUsage>;

        $z10 = interfaceinvoke r98.<java.util.List: boolean containsAll(java.util.Collection)>($r53);

        if $z10 != 0 goto label39;

     label38:
        return 0;

     label39:
        goto label41;

     label40:
        $r82 := @caughtexception;

        return 0;

     label41:
        $i2 = r0.<java.security.cert.X509CertSelector: int pathLen>;

        if $i2 == -1 goto label43;

        i19 = virtualinvoke r2.<java.security.cert.X509Certificate: int getBasicConstraints()>();

        $i8 = r0.<java.security.cert.X509CertSelector: int pathLen>;

        if $i8 >= 0 goto label42;

        if i19 < 0 goto label42;

        return 0;

     label42:
        $i11 = r0.<java.security.cert.X509CertSelector: int pathLen>;

        if $i11 <= 0 goto label43;

        $i10 = r0.<java.security.cert.X509CertSelector: int pathLen>;

        if $i10 <= i19 goto label43;

        return 0;

     label43:
        $r21 = r0.<java.security.cert.X509CertSelector: java.util.List[] subjectAltNames>;

        if $r21 == null goto label69;

     label44:
        r100 = specialinvoke r0.<java.security.cert.X509CertSelector: byte[] getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>(r2, "2.5.29.17");

        if r100 != null goto label46;

     label45:
        return 0;

     label46:
        $r37 = <org.apache.harmony.security.x509.GeneralNames: org.apache.harmony.security.asn1.ASN1Type ASN1>;

        $r36 = virtualinvoke $r37.<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(byte[])>(r100);

        $r35 = (org.apache.harmony.security.x509.GeneralNames) $r36;

        r101 = virtualinvoke $r35.<org.apache.harmony.security.x509.GeneralNames: java.util.List getNames()>();

        if r101 == null goto label47;

        $i4 = interfaceinvoke r101.<java.util.List: int size()>();

        if $i4 != 0 goto label48;

     label47:
        return 0;

     label48:
        r102 = newarray (boolean[])[9];

        i20 = 0;

     label49:
        if i20 >= 9 goto label52;

        $r48 = r0.<java.security.cert.X509CertSelector: java.util.List[] subjectAltNames>;

        $r49 = $r48[i20];

        if $r49 != null goto label50;

        $r47 = <libcore.util.EmptyArray: boolean[] BOOLEAN>;

        goto label51;

     label50:
        $r50 = r0.<java.security.cert.X509CertSelector: java.util.List[] subjectAltNames>;

        $r51 = $r50[i20];

        $i7 = interfaceinvoke $r51.<java.util.List: int size()>();

        $r47 = newarray (boolean)[$i7];

     label51:
        r102[i20] = $r47;

        i20 = i20 + 1;

        goto label49;

     label52:
        r103 = interfaceinvoke r101.<java.util.List: java.util.Iterator iterator()>();

     label53:
        $z5 = interfaceinvoke r103.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label59;

        $r41 = interfaceinvoke r103.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.harmony.security.x509.GeneralName) $r41;

        i0 = virtualinvoke r7.<org.apache.harmony.security.x509.GeneralName: int getTag()>();

        i1 = 0;

     label54:
        $r40 = r102[i0];

        $i6 = lengthof $r40;

        if i1 >= $i6 goto label58;

        $r44 = r0.<java.security.cert.X509CertSelector: java.util.List[] subjectAltNames>;

        $r45 = $r44[i0];

        $r46 = interfaceinvoke $r45.<java.util.List: java.lang.Object get(int)>(i1);

        $r42 = (org.apache.harmony.security.x509.GeneralName) $r46;

        $z8 = virtualinvoke $r42.<org.apache.harmony.security.x509.GeneralName: boolean equals(java.lang.Object)>(r7);

        if $z8 == 0 goto label57;

        $z9 = r0.<java.security.cert.X509CertSelector: boolean matchAllNames>;

        if $z9 != 0 goto label56;

     label55:
        goto label69;

     label56:
        $r43 = r102[i0];

        $r43[i1] = 1;

     label57:
        i1 = i1 + 1;

        goto label54;

     label58:
        goto label53;

     label59:
        $z6 = r0.<java.security.cert.X509CertSelector: boolean matchAllNames>;

        if $z6 != 0 goto label61;

     label60:
        return 0;

     label61:
        i21 = 0;

     label62:
        if i21 >= 9 goto label67;

        i22 = 0;

     label63:
        $r39 = r102[i21];

        $i5 = lengthof $r39;

        if i22 >= $i5 goto label66;

        $r38 = r102[i21];

        $z7 = $r38[i22];

        if $z7 != 0 goto label65;

     label64:
        return 0;

     label65:
        i22 = i22 + 1;

        goto label63;

     label66:
        i21 = i21 + 1;

        goto label62;

     label67:
        goto label69;

     label68:
        $r83 := @caughtexception;

        r104 = $r83;

        virtualinvoke r104.<java.io.IOException: void printStackTrace()>();

        return 0;

     label69:
        $r20 = r0.<java.security.cert.X509CertSelector: org.apache.harmony.security.x509.NameConstraints nameConstraints>;

        if $r20 == null goto label70;

        $r33 = r0.<java.security.cert.X509CertSelector: org.apache.harmony.security.x509.NameConstraints nameConstraints>;

        $z3 = virtualinvoke $r33.<org.apache.harmony.security.x509.NameConstraints: boolean isAcceptable(java.security.cert.X509Certificate)>(r2);

        if $z3 != 0 goto label70;

        return 0;

     label70:
        $r23 = r0.<java.security.cert.X509CertSelector: java.util.Set policies>;

        if $r23 == null goto label78;

        r105 = specialinvoke r0.<java.security.cert.X509CertSelector: byte[] getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>(r2, "2.5.29.32");

        if r105 != null goto label71;

        return 0;

     label71:
        $r27 = r0.<java.security.cert.X509CertSelector: java.util.Set policies>;

        $i3 = interfaceinvoke $r27.<java.util.Set: int size()>();

        if $i3 != 0 goto label72;

        return 1;

     label72:
        $r29 = <org.apache.harmony.security.x509.CertificatePolicies: org.apache.harmony.security.asn1.ASN1Type ASN1>;

        $r30 = virtualinvoke $r29.<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(byte[])>(r105);

        $r28 = (org.apache.harmony.security.x509.CertificatePolicies) $r30;

        r106 = virtualinvoke $r28.<org.apache.harmony.security.x509.CertificatePolicies: java.util.List getPolicyInformations()>();

        r107 = interfaceinvoke r106.<java.util.List: java.util.Iterator iterator()>();

     label73:
        $z2 = interfaceinvoke r107.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label76;

        $r31 = interfaceinvoke r107.<java.util.Iterator: java.lang.Object next()>();

        r108 = (org.apache.harmony.security.x509.PolicyInformation) $r31;

        $r32 = r0.<java.security.cert.X509CertSelector: java.util.Set policies>;

        $r34 = virtualinvoke r108.<org.apache.harmony.security.x509.PolicyInformation: java.lang.String getPolicyIdentifier()>();

        $z4 = interfaceinvoke $r32.<java.util.Set: boolean contains(java.lang.Object)>($r34);

        if $z4 == 0 goto label75;

     label74:
        goto label78;

     label75:
        goto label73;

     label76:
        return 0;

     label77:
        $r80 := @caughtexception;

        return 0;

     label78:
        $r22 = r0.<java.security.cert.X509CertSelector: java.util.ArrayList pathToNames>;

        if $r22 == null goto label83;

        r110 = specialinvoke r0.<java.security.cert.X509CertSelector: byte[] getExtensionValue(java.security.cert.X509Certificate,java.lang.String)>(r2, "2.5.29.30");

        if r110 == null goto label83;

     label79:
        $r24 = <org.apache.harmony.security.x509.NameConstraints: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r26 = virtualinvoke $r24.<org.apache.harmony.security.asn1.ASN1Sequence: java.lang.Object decode(byte[])>(r110);

        r111 = (org.apache.harmony.security.x509.NameConstraints) $r26;

     label80:
        goto label82;

     label81:
        $r79 := @caughtexception;

        return 0;

     label82:
        $r25 = r0.<java.security.cert.X509CertSelector: java.util.ArrayList pathToNames>;

        $z1 = virtualinvoke r111.<org.apache.harmony.security.x509.NameConstraints: boolean isAcceptable(java.util.List)>($r25);

        if $z1 != 0 goto label83;

        return 0;

     label83:
        return 1;

        catch java.security.cert.CertificateExpiredException from label08 to label09 with label10;
        catch java.security.cert.CertificateNotYetValidException from label08 to label09 with label11;
        catch java.io.IOException from label13 to label14 with label22;
        catch java.io.IOException from label15 to label16 with label22;
        catch java.io.IOException from label17 to label18 with label22;
        catch java.io.IOException from label19 to label20 with label22;
        catch java.io.IOException from label24 to label25 with label27;
        catch java.security.cert.CertificateParsingException from label37 to label38 with label40;
        catch java.io.IOException from label44 to label45 with label68;
        catch java.io.IOException from label46 to label47 with label68;
        catch java.io.IOException from label48 to label55 with label68;
        catch java.io.IOException from label56 to label60 with label68;
        catch java.io.IOException from label61 to label64 with label68;
        catch java.io.IOException from label65 to label67 with label68;
        catch java.io.IOException from label72 to label74 with label77;
        catch java.io.IOException from label75 to label76 with label77;
        catch java.io.IOException from label79 to label80 with label81;
    }

    public java.lang.Object clone()
    {
        java.security.cert.X509CertSelector r0, r1;
        java.lang.Object $r3;
        byte[] $r4, $r5, $r6, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r45;
        boolean[] $r7, $r24, $r26, $r27, $r28, $r29;
        java.util.Set $r8, $r10, $r12, $r14;
        java.util.HashSet $r9, $r13;
        java.util.List[] $r11, $r18, $r23, $r25;
        java.util.ArrayList $r15, $r16, $r17, $r20;
        java.util.ArrayList[] $r19;
        java.util.List $r21, $r22;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        java.lang.CloneNotSupportedException $r44;

        r0 := @this: java.security.cert.X509CertSelector;

     label01:
        $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r1 = (java.security.cert.X509CertSelector) $r3;

     label02:
        goto label04;

     label03:
        $r44 := @caughtexception;

        return null;

     label04:
        $r4 = r0.<java.security.cert.X509CertSelector: byte[] subjectKeyIdentifier>;

        if $r4 == null goto label05;

        $r38 = r0.<java.security.cert.X509CertSelector: byte[] subjectKeyIdentifier>;

        $i6 = lengthof $r38;

        $r43 = newarray (byte)[$i6];

        r1.<java.security.cert.X509CertSelector: byte[] subjectKeyIdentifier> = $r43;

        $r45 = r0.<java.security.cert.X509CertSelector: byte[] subjectKeyIdentifier>;

        $r41 = r1.<java.security.cert.X509CertSelector: byte[] subjectKeyIdentifier>;

        $r42 = r0.<java.security.cert.X509CertSelector: byte[] subjectKeyIdentifier>;

        $i7 = lengthof $r42;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r45, 0, $r41, 0, $i7);

     label05:
        $r5 = r0.<java.security.cert.X509CertSelector: byte[] authorityKeyIdentifier>;

        if $r5 == null goto label06;

        $r34 = r0.<java.security.cert.X509CertSelector: byte[] authorityKeyIdentifier>;

        $i5 = lengthof $r34;

        $r37 = newarray (byte)[$i5];

        r1.<java.security.cert.X509CertSelector: byte[] authorityKeyIdentifier> = $r37;

        $r40 = r0.<java.security.cert.X509CertSelector: byte[] authorityKeyIdentifier>;

        $r39 = r1.<java.security.cert.X509CertSelector: byte[] authorityKeyIdentifier>;

        $r36 = r0.<java.security.cert.X509CertSelector: byte[] authorityKeyIdentifier>;

        $i4 = lengthof $r36;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r40, 0, $r39, 0, $i4);

     label06:
        $r6 = r0.<java.security.cert.X509CertSelector: byte[] subjectPublicKey>;

        if $r6 == null goto label07;

        $r32 = r0.<java.security.cert.X509CertSelector: byte[] subjectPublicKey>;

        $i2 = lengthof $r32;

        $r30 = newarray (byte)[$i2];

        r1.<java.security.cert.X509CertSelector: byte[] subjectPublicKey> = $r30;

        $r33 = r0.<java.security.cert.X509CertSelector: byte[] subjectPublicKey>;

        $r35 = r1.<java.security.cert.X509CertSelector: byte[] subjectPublicKey>;

        $r31 = r0.<java.security.cert.X509CertSelector: byte[] subjectPublicKey>;

        $i3 = lengthof $r31;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r33, 0, $r35, 0, $i3);

     label07:
        $r7 = r0.<java.security.cert.X509CertSelector: boolean[] keyUsage>;

        if $r7 == null goto label08;

        $r24 = r0.<java.security.cert.X509CertSelector: boolean[] keyUsage>;

        $i0 = lengthof $r24;

        $r26 = newarray (boolean)[$i0];

        r1.<java.security.cert.X509CertSelector: boolean[] keyUsage> = $r26;

        $r28 = r0.<java.security.cert.X509CertSelector: boolean[] keyUsage>;

        $r29 = r1.<java.security.cert.X509CertSelector: boolean[] keyUsage>;

        $r27 = r0.<java.security.cert.X509CertSelector: boolean[] keyUsage>;

        $i1 = lengthof $r27;

        staticinvoke <java.lang.System: void arraycopy(boolean[],int,boolean[],int,int)>($r28, 0, $r29, 0, $i1);

     label08:
        $r8 = r0.<java.security.cert.X509CertSelector: java.util.Set extendedKeyUsage>;

        if $r8 != null goto label09;

        $r9 = null;

        goto label10;

     label09:
        $r9 = new java.util.HashSet;

        $r10 = r0.<java.security.cert.X509CertSelector: java.util.Set extendedKeyUsage>;

        specialinvoke $r9.<java.util.HashSet: void <init>(java.util.Collection)>($r10);

     label10:
        r1.<java.security.cert.X509CertSelector: java.util.Set extendedKeyUsage> = $r9;

        $r11 = r0.<java.security.cert.X509CertSelector: java.util.List[] subjectAltNames>;

        if $r11 == null goto label13;

        $r19 = newarray (java.util.ArrayList)[9];

        r1.<java.security.cert.X509CertSelector: java.util.List[] subjectAltNames> = $r19;

        i8 = 0;

     label11:
        if i8 >= 9 goto label13;

        $r18 = r0.<java.security.cert.X509CertSelector: java.util.List[] subjectAltNames>;

        $r21 = $r18[i8];

        if $r21 == null goto label12;

        $r25 = r1.<java.security.cert.X509CertSelector: java.util.List[] subjectAltNames>;

        $r20 = new java.util.ArrayList;

        $r23 = r0.<java.security.cert.X509CertSelector: java.util.List[] subjectAltNames>;

        $r22 = $r23[i8];

        specialinvoke $r20.<java.util.ArrayList: void <init>(java.util.Collection)>($r22);

        $r25[i8] = $r20;

     label12:
        i8 = i8 + 1;

        goto label11;

     label13:
        $r12 = r0.<java.security.cert.X509CertSelector: java.util.Set policies>;

        if $r12 != null goto label14;

        $r13 = null;

        goto label15;

     label14:
        $r13 = new java.util.HashSet;

        $r14 = r0.<java.security.cert.X509CertSelector: java.util.Set policies>;

        specialinvoke $r13.<java.util.HashSet: void <init>(java.util.Collection)>($r14);

     label15:
        r1.<java.security.cert.X509CertSelector: java.util.Set policies> = $r13;

        $r15 = r0.<java.security.cert.X509CertSelector: java.util.ArrayList pathToNames>;

        if $r15 != null goto label16;

        $r17 = null;

        goto label17;

     label16:
        $r17 = new java.util.ArrayList;

        $r16 = r0.<java.security.cert.X509CertSelector: java.util.ArrayList pathToNames>;

        specialinvoke $r17.<java.util.ArrayList: void <init>(java.util.Collection)>($r16);

     label17:
        r1.<java.security.cert.X509CertSelector: java.util.ArrayList pathToNames> = $r17;

        return r1;

        catch java.lang.CloneNotSupportedException from label01 to label02 with label03;
    }
}
