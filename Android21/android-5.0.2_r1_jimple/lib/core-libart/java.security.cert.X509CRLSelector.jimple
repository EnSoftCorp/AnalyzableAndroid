public class java.security.cert.X509CRLSelector extends java.lang.Object implements java.security.cert.CRLSelector
{
    private java.util.ArrayList issuerNames;
    private java.util.ArrayList issuerPrincipals;
    private java.math.BigInteger minCRL;
    private java.math.BigInteger maxCRL;
    private long dateAndTime;
    private java.security.cert.X509Certificate certificateChecking;

    public void <init>()
    {
        java.security.cert.X509CRLSelector r0;

        r0 := @this: java.security.cert.X509CRLSelector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.security.cert.X509CRLSelector: long dateAndTime> = -1L;

        return;
    }

    public void setIssuers(java.util.Collection)
    {
        java.security.cert.X509CRLSelector r0;
        java.util.Collection r1;
        java.util.Iterator r2;
        javax.security.auth.x500.X500Principal r3;
        java.util.ArrayList $r4, $r5, $r7;
        int $i0;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.String $r8;

        r0 := @this: java.security.cert.X509CRLSelector;

        r1 := @parameter0: java.util.Collection;

        if r1 != null goto label1;

        r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames> = null;

        r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerPrincipals> = null;

        return;

     label1:
        $r4 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerPrincipals> = $r5;

        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (javax.security.auth.x500.X500Principal) $r6;

        $r7 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        $r8 = virtualinvoke r3.<javax.security.auth.x500.X500Principal: java.lang.String getName(java.lang.String)>("CANONICAL");

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        goto label2;

     label3:
        return;
    }

    public void setIssuerNames(java.util.Collection) throws java.io.IOException
    {
        java.security.cert.X509CRLSelector r0;
        java.util.Collection r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        int $i0, $i1;
        java.util.ArrayList $r4, $r10, $r12;
        boolean $z0, $z1, $z2;
        java.io.IOException $r5;
        org.apache.harmony.security.x501.Name $r6, $r11;
        byte[] $r7, $r8;
        java.lang.String $r9, $r13, $r14;

        r0 := @this: java.security.cert.X509CRLSelector;

        r1 := @parameter0: java.util.Collection;

        if r1 != null goto label1;

        r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames> = null;

        r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerPrincipals> = null;

        return;

     label1:
        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if $i0 != 0 goto label2;

        return;

     label2:
        $r4 = new java.util.ArrayList;

        $i1 = interfaceinvoke r1.<java.util.Collection: int size()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i1);

        r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames> = $r4;

        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $z1 = r3 instanceof java.lang.String;

        if $z1 == 0 goto label4;

        $r12 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        $r11 = new org.apache.harmony.security.x501.Name;

        $r13 = (java.lang.String) r3;

        specialinvoke $r11.<org.apache.harmony.security.x501.Name: void <init>(java.lang.String)>($r13);

        $r14 = virtualinvoke $r11.<org.apache.harmony.security.x501.Name: java.lang.String getName(java.lang.String)>("CANONICAL");

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

        goto label6;

     label4:
        $z2 = r3 instanceof byte[];

        if $z2 == 0 goto label5;

        $r10 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        $r6 = new org.apache.harmony.security.x501.Name;

        $r7 = (byte[]) r3;

        $r8 = (byte[]) $r7;

        specialinvoke $r6.<org.apache.harmony.security.x501.Name: void <init>(byte[])>($r8);

        $r9 = virtualinvoke $r6.<org.apache.harmony.security.x501.Name: java.lang.String getName(java.lang.String)>("CANONICAL");

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        goto label6;

     label5:
        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("name neither a String nor a byte[]");

        throw $r5;

     label6:
        goto label3;

     label7:
        return;
    }

    public void addIssuer(javax.security.auth.x500.X500Principal)
    {
        java.security.cert.X509CRLSelector r0;
        javax.security.auth.x500.X500Principal r1, $r10;
        java.lang.String r2, $r13;
        int i0, i1, $i2, $i3;
        java.util.ArrayList $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r12, $r14, $r15, $r16, $r17;
        boolean $z0;
        java.lang.Object $r11;
        java.lang.NullPointerException $r18;

        r0 := @this: java.security.cert.X509CRLSelector;

        r1 := @parameter0: javax.security.auth.x500.X500Principal;

        if r1 != null goto label1;

        $r18 = new java.lang.NullPointerException;

        specialinvoke $r18.<java.lang.NullPointerException: void <init>(java.lang.String)>("issuer == null");

        throw $r18;

     label1:
        $r3 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        if $r3 != null goto label2;

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames> = $r17;

     label2:
        r2 = virtualinvoke r1.<javax.security.auth.x500.X500Principal: java.lang.String getName(java.lang.String)>("CANONICAL");

        $r4 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean contains(java.lang.Object)>(r2);

        if $z0 != 0 goto label3;

        $r16 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label3:
        $r5 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerPrincipals>;

        if $r5 != null goto label4;

        $r15 = new java.util.ArrayList;

        $r14 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        $i3 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

        specialinvoke $r15.<java.util.ArrayList: void <init>(int)>($i3);

        r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerPrincipals> = $r15;

     label4:
        $r6 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        $i2 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i0 = $i2 - 1;

        $r7 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerPrincipals>;

        i1 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

     label5:
        if i1 >= i0 goto label6;

        $r12 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerPrincipals>;

        $r10 = new javax.security.auth.x500.X500Principal;

        $r9 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        $r11 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r13 = (java.lang.String) $r11;

        specialinvoke $r10.<javax.security.auth.x500.X500Principal: void <init>(java.lang.String)>($r13);

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        i1 = i1 + 1;

        goto label5;

     label6:
        $r8 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerPrincipals>;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addIssuerName(java.lang.String) throws java.io.IOException
    {
        java.security.cert.X509CRLSelector r0;
        java.lang.String r1, r2;
        java.util.ArrayList $r3, $r5, $r6, $r7;
        org.apache.harmony.security.x501.Name $r4;
        boolean $z0;

        r0 := @this: java.security.cert.X509CRLSelector;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        if $r3 != null goto label1;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames> = $r7;

     label1:
        if r1 != null goto label2;

        r1 = "";

     label2:
        $r4 = new org.apache.harmony.security.x501.Name;

        specialinvoke $r4.<org.apache.harmony.security.x501.Name: void <init>(java.lang.String)>(r1);

        r2 = virtualinvoke $r4.<org.apache.harmony.security.x501.Name: java.lang.String getName(java.lang.String)>("CANONICAL");

        $r5 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        $z0 = virtualinvoke $r5.<java.util.ArrayList: boolean contains(java.lang.Object)>(r2);

        if $z0 != 0 goto label3;

        $r6 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label3:
        return;
    }

    public void addIssuerName(byte[]) throws java.io.IOException
    {
        java.security.cert.X509CRLSelector r0;
        byte[] r1;
        java.lang.String r2;
        java.util.ArrayList $r3, $r5, $r6, $r7;
        org.apache.harmony.security.x501.Name $r4;
        boolean $z0;
        java.lang.NullPointerException $r8;

        r0 := @this: java.security.cert.X509CRLSelector;

        r1 := @parameter0: byte[];

        if r1 != null goto label1;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("iss_name == null");

        throw $r8;

     label1:
        $r3 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        if $r3 != null goto label2;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames> = $r7;

     label2:
        $r4 = new org.apache.harmony.security.x501.Name;

        specialinvoke $r4.<org.apache.harmony.security.x501.Name: void <init>(byte[])>(r1);

        r2 = virtualinvoke $r4.<org.apache.harmony.security.x501.Name: java.lang.String getName(java.lang.String)>("CANONICAL");

        $r5 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        $z0 = virtualinvoke $r5.<java.util.ArrayList: boolean contains(java.lang.Object)>(r2);

        if $z0 != 0 goto label3;

        $r6 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label3:
        return;
    }

    public void setMinCRLNumber(java.math.BigInteger)
    {
        java.security.cert.X509CRLSelector r0;
        java.math.BigInteger r1;

        r0 := @this: java.security.cert.X509CRLSelector;

        r1 := @parameter0: java.math.BigInteger;

        r0.<java.security.cert.X509CRLSelector: java.math.BigInteger minCRL> = r1;

        return;
    }

    public void setMaxCRLNumber(java.math.BigInteger)
    {
        java.security.cert.X509CRLSelector r0;
        java.math.BigInteger r1;

        r0 := @this: java.security.cert.X509CRLSelector;

        r1 := @parameter0: java.math.BigInteger;

        r0.<java.security.cert.X509CRLSelector: java.math.BigInteger maxCRL> = r1;

        return;
    }

    public void setDateAndTime(java.util.Date)
    {
        java.security.cert.X509CRLSelector r0;
        java.util.Date r1;
        long $l0;

        r0 := @this: java.security.cert.X509CRLSelector;

        r1 := @parameter0: java.util.Date;

        if r1 != null goto label1;

        r0.<java.security.cert.X509CRLSelector: long dateAndTime> = -1L;

        return;

     label1:
        $l0 = virtualinvoke r1.<java.util.Date: long getTime()>();

        r0.<java.security.cert.X509CRLSelector: long dateAndTime> = $l0;

        return;
    }

    public void setCertificateChecking(java.security.cert.X509Certificate)
    {
        java.security.cert.X509CRLSelector r0;
        java.security.cert.X509Certificate r1;

        r0 := @this: java.security.cert.X509CRLSelector;

        r1 := @parameter0: java.security.cert.X509Certificate;

        r0.<java.security.cert.X509CRLSelector: java.security.cert.X509Certificate certificateChecking> = r1;

        return;
    }

    public java.util.Collection getIssuers()
    {
        java.security.cert.X509CRLSelector r0;
        int i0, i1, $i2;
        java.util.ArrayList $r1, $r2, $r3, $r4, $r5, $r8, $r9, $r12, $r13;
        java.util.Collection $r6;
        javax.security.auth.x500.X500Principal $r7;
        java.lang.Object $r10;
        java.lang.String $r11;

        r0 := @this: java.security.cert.X509CRLSelector;

        $r1 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerPrincipals>;

        if $r2 != null goto label2;

        $r12 = new java.util.ArrayList;

        $r13 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        $i2 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        specialinvoke $r12.<java.util.ArrayList: void <init>(int)>($i2);

        r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerPrincipals> = $r12;

     label2:
        $r3 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $r4 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerPrincipals>;

        i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

     label3:
        if i1 >= i0 goto label4;

        $r9 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerPrincipals>;

        $r7 = new javax.security.auth.x500.X500Principal;

        $r8 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        $r10 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r11 = (java.lang.String) $r10;

        specialinvoke $r7.<javax.security.auth.x500.X500Principal: void <init>(java.lang.String)>($r11);

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        i1 = i1 + 1;

        goto label3;

     label4:
        $r5 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerPrincipals>;

        $r6 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r5);

        return $r6;
    }

    public java.util.Collection getIssuerNames()
    {
        java.security.cert.X509CRLSelector r0;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        java.util.Collection $r4;

        r0 := @this: java.security.cert.X509CRLSelector;

        $r1 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object clone()>();

        $r4 = (java.util.Collection) $r3;

        return $r4;
    }

    public java.math.BigInteger getMinCRL()
    {
        java.security.cert.X509CRLSelector r0;
        java.math.BigInteger $r1;

        r0 := @this: java.security.cert.X509CRLSelector;

        $r1 = r0.<java.security.cert.X509CRLSelector: java.math.BigInteger minCRL>;

        return $r1;
    }

    public java.math.BigInteger getMaxCRL()
    {
        java.security.cert.X509CRLSelector r0;
        java.math.BigInteger $r1;

        r0 := @this: java.security.cert.X509CRLSelector;

        $r1 = r0.<java.security.cert.X509CRLSelector: java.math.BigInteger maxCRL>;

        return $r1;
    }

    public java.util.Date getDateAndTime()
    {
        java.security.cert.X509CRLSelector r0;
        long $l0, $l2;
        byte $b1;
        java.util.Date $r1;

        r0 := @this: java.security.cert.X509CRLSelector;

        $l0 = r0.<java.security.cert.X509CRLSelector: long dateAndTime>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label1;

        return null;

     label1:
        $r1 = new java.util.Date;

        $l2 = r0.<java.security.cert.X509CRLSelector: long dateAndTime>;

        specialinvoke $r1.<java.util.Date: void <init>(long)>($l2);

        return $r1;
    }

    public java.security.cert.X509Certificate getCertificateChecking()
    {
        java.security.cert.X509CRLSelector r0;
        java.security.cert.X509Certificate $r1;

        r0 := @this: java.security.cert.X509CRLSelector;

        $r1 = r0.<java.security.cert.X509CRLSelector: java.security.cert.X509Certificate certificateChecking>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.security.cert.X509CRLSelector r0;
        java.lang.StringBuilder r1, $r2, $r10, $r11, $r12, $r16, $r17, $r20, $r21, $r24, $r26, $r27, $r30, $r33, $r36, $r40, $r44;
        int i0, i1;
        java.util.ArrayList $r4, $r37, $r41;
        java.math.BigInteger $r5, $r6, $r23, $r28;
        long $l2, $l4;
        byte $b3;
        java.security.cert.X509Certificate $r7, $r13;
        java.lang.String $r9, $r15, $r19, $r25, $r34, $r39, $r43;
        java.util.Date $r18;
        java.lang.Object $r38;

        r0 := @this: java.security.cert.X509CRLSelector;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("X509CRLSelector:\n[");

        $r4 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        if $r4 == null goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  IssuerNames:\n  [");

        $r37 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        i0 = virtualinvoke $r37.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n    ");

        $r41 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        $r38 = virtualinvoke $r41.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r39 = (java.lang.String) $r38;

        $r44 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  ]");

     label3:
        $r5 = r0.<java.security.cert.X509CRLSelector: java.math.BigInteger minCRL>;

        if $r5 == null goto label4;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  minCRL: ");

        $r28 = r0.<java.security.cert.X509CRLSelector: java.math.BigInteger minCRL>;

        $r33 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

     label4:
        $r6 = r0.<java.security.cert.X509CRLSelector: java.math.BigInteger maxCRL>;

        if $r6 == null goto label5;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  maxCRL: ");

        $r23 = r0.<java.security.cert.X509CRLSelector: java.math.BigInteger maxCRL>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

     label5:
        $l2 = r0.<java.security.cert.X509CRLSelector: long dateAndTime>;

        $b3 = $l2 cmp -1L;

        if $b3 == 0 goto label6;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  dateAndTime: ");

        $r18 = new java.util.Date;

        $l4 = r0.<java.security.cert.X509CRLSelector: long dateAndTime>;

        specialinvoke $r18.<java.util.Date: void <init>(long)>($l4);

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

     label6:
        $r7 = r0.<java.security.cert.X509CRLSelector: java.security.cert.X509Certificate certificateChecking>;

        if $r7 == null goto label7;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  certificateChecking: ");

        $r13 = r0.<java.security.cert.X509CRLSelector: java.security.cert.X509Certificate certificateChecking>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

     label7:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n]");

        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public boolean match(java.security.cert.CRL)
    {
        java.security.cert.X509CRLSelector r0;
        java.security.cert.CRL r1;
        java.security.cert.X509CRL r2;
        byte[] r3, $r9, $r13, $r15, r24;
        java.math.BigInteger r4, $r6, $r10, $r14, $r16, $r17, $r18, $r21;
        boolean $z0, $z1;
        java.util.ArrayList $r5, $r19;
        org.apache.harmony.security.asn1.ASN1OctetString $r7;
        java.lang.Object $r8, $r12;
        org.apache.harmony.security.asn1.ASN1Integer $r11;
        long $l0, $l2, $l4, $l5, $l6;
        byte $b1, $b3, $b7;
        int $i8, $i9;
        javax.security.auth.x500.X500Principal $r20;
        java.io.IOException $r22;
        java.lang.String $r23;
        java.util.Date r26, r27;

        r0 := @this: java.security.cert.X509CRLSelector;

        r1 := @parameter0: java.security.cert.CRL;

        $z0 = r1 instanceof java.security.cert.X509CRL;

        if $z0 != 0 goto label01;

        return 0;

     label01:
        r2 = (java.security.cert.X509CRL) r1;

        $r5 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        if $r5 == null goto label02;

        $r19 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        $r20 = virtualinvoke r2.<java.security.cert.X509CRL: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r23 = virtualinvoke $r20.<javax.security.auth.x500.X500Principal: java.lang.String getName(java.lang.String)>("CANONICAL");

        $z1 = virtualinvoke $r19.<java.util.ArrayList: boolean contains(java.lang.Object)>($r23);

        if $z1 != 0 goto label02;

        return 0;

     label02:
        $r6 = r0.<java.security.cert.X509CRLSelector: java.math.BigInteger minCRL>;

        if $r6 != null goto label03;

        $r21 = r0.<java.security.cert.X509CRLSelector: java.math.BigInteger maxCRL>;

        if $r21 == null goto label09;

     label03:
        r3 = virtualinvoke r2.<java.security.cert.X509CRL: byte[] getExtensionValue(java.lang.String)>("2.5.29.20");

        $r7 = staticinvoke <org.apache.harmony.security.asn1.ASN1OctetString: org.apache.harmony.security.asn1.ASN1OctetString getInstance()>();

        $r8 = virtualinvoke $r7.<org.apache.harmony.security.asn1.ASN1OctetString: java.lang.Object decode(byte[])>(r3);

        $r9 = (byte[]) $r8;

        r24 = (byte[]) $r9;

        $r10 = new java.math.BigInteger;

        $r11 = staticinvoke <org.apache.harmony.security.asn1.ASN1Integer: org.apache.harmony.security.asn1.ASN1Integer getInstance()>();

        $r12 = virtualinvoke $r11.<org.apache.harmony.security.asn1.ASN1Integer: java.lang.Object decode(byte[])>(r24);

        $r13 = (byte[]) $r12;

        $r15 = (byte[]) $r13;

        specialinvoke $r10.<java.math.BigInteger: void <init>(byte[])>($r15);

        r4 = $r10;

        $r14 = r0.<java.security.cert.X509CRLSelector: java.math.BigInteger minCRL>;

        if $r14 == null goto label05;

        $r18 = r0.<java.security.cert.X509CRLSelector: java.math.BigInteger minCRL>;

        $i9 = virtualinvoke r4.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r18);

        if $i9 >= 0 goto label05;

     label04:
        return 0;

     label05:
        $r16 = r0.<java.security.cert.X509CRLSelector: java.math.BigInteger maxCRL>;

        if $r16 == null goto label07;

        $r17 = r0.<java.security.cert.X509CRLSelector: java.math.BigInteger maxCRL>;

        $i8 = virtualinvoke r4.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r17);

        if $i8 <= 0 goto label07;

     label06:
        return 0;

     label07:
        goto label09;

     label08:
        $r22 := @caughtexception;

        return 0;

     label09:
        $l0 = r0.<java.security.cert.X509CRLSelector: long dateAndTime>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label13;

        r26 = virtualinvoke r2.<java.security.cert.X509CRL: java.util.Date getThisUpdate()>();

        r27 = virtualinvoke r2.<java.security.cert.X509CRL: java.util.Date getNextUpdate()>();

        if r26 == null goto label10;

        if r27 != null goto label11;

     label10:
        return 0;

     label11:
        $l2 = r0.<java.security.cert.X509CRLSelector: long dateAndTime>;

        $l4 = virtualinvoke r26.<java.util.Date: long getTime()>();

        $b3 = $l2 cmp $l4;

        if $b3 < 0 goto label12;

        $l6 = r0.<java.security.cert.X509CRLSelector: long dateAndTime>;

        $l5 = virtualinvoke r27.<java.util.Date: long getTime()>();

        $b7 = $l6 cmp $l5;

        if $b7 <= 0 goto label13;

     label12:
        return 0;

     label13:
        return 1;

        catch java.io.IOException from label03 to label04 with label08;
        catch java.io.IOException from label05 to label06 with label08;
    }

    public java.lang.Object clone()
    {
        java.security.cert.X509CRLSelector r0, r1;
        java.lang.Object $r3;
        java.util.ArrayList $r4, $r5, $r6;
        java.lang.CloneNotSupportedException $r7;

        r0 := @this: java.security.cert.X509CRLSelector;

     label1:
        $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r1 = (java.security.cert.X509CRLSelector) $r3;

        $r4 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        if $r4 == null goto label2;

        $r5 = new java.util.ArrayList;

        $r6 = r0.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames>;

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        r1.<java.security.cert.X509CRLSelector: java.util.ArrayList issuerNames> = $r5;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r1 = null;

     label4:
        return r1;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }
}
