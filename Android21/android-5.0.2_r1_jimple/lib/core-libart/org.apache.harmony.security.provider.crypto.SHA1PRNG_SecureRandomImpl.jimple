public class org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl extends java.security.SecureRandomSpi implements java.io.Serializable
{
    private static final long serialVersionUID;
    private static java.io.FileInputStream devURandom;
    private static final int[] END_FLAGS;
    private static final int[] RIGHT1;
    private static final int[] RIGHT2;
    private static final int[] LEFT;
    private static final int[] MASK;
    private static final int HASHBYTES_TO_USE;
    private static final int FRAME_LENGTH;
    private static final int COUNTER_BASE;
    private static final int HASHCOPY_OFFSET;
    private static final int EXTRAFRAME_OFFSET;
    private static final int FRAME_OFFSET;
    private static final int MAX_BYTES;
    private static final int UNDEFINED;
    private static final int SET_SEED;
    private static final int NEXT_BYTES;
    private static org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl myRandom;
    private transient int[] seed;
    private transient long seedLength;
    private transient int[] copies;
    private transient byte[] nextBytes;
    private transient int nextBIndex;
    private transient long counter;
    private transient int state;

    public void <init>()
    {
        org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl r0;
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        byte[] $r8;

        r0 := @this: org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl;

        specialinvoke r0.<java.security.SecureRandomSpi: void <init>()>();

        $r1 = newarray (int)[87];

        r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed> = $r1;

        $r2 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $r2[82] = 1732584193;

        $r3 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $r3[83] = -271733879;

        $r4 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $r4[84] = -1732584194;

        $r5 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $r5[85] = 271733878;

        $r6 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $r6[86] = -1009589776;

        r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long seedLength> = 0L;

        $r7 = newarray (int)[37];

        r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies> = $r7;

        $r8 = newarray (byte)[20];

        r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: byte[] nextBytes> = $r8;

        r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex> = 20;

        r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long counter> = 0L;

        r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int state> = 0;

        return;
    }

    private void updateSeed(byte[])
    {
        org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl r0;
        byte[] r1;
        int $i0, $i1, $i2;
        int[] $r2;
        long $l3, $l4, $l5;

        r0 := @this: org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl;

        r1 := @parameter0: byte[];

        $r2 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i0 = lengthof r1;

        $i1 = $i0 - 1;

        staticinvoke <org.apache.harmony.security.provider.crypto.SHA1Impl: void updateHash(int[],byte[],int,int)>($r2, r1, 0, $i1);

        $l4 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long seedLength>;

        $i2 = lengthof r1;

        $l3 = (long) $i2;

        $l5 = $l4 + $l3;

        r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long seedLength> = $l5;

        return;
    }

    protected synchronized void engineSetSeed(byte[])
    {
        org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl r0;
        byte[] r1;
        int $i0, $i1;
        int[] $r2, $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl;

        r1 := @parameter0: byte[];

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("seed == null");

        throw $r4;

     label1:
        $i0 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int state>;

        if $i0 != 2 goto label2;

        $r3 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies>;

        $r2 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r3, 0, $r2, 82, 5);

     label2:
        r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int state> = 1;

        $i1 = lengthof r1;

        if $i1 == 0 goto label3;

        specialinvoke r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: void updateSeed(byte[])>(r1);

     label3:
        return;
    }

    protected synchronized byte[] engineGenerateSeed(int)
    {
        org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl r0, $r2, $r3, $r4, $r5;
        int i0;
        byte[] r1, $r6, $r7;
        java.lang.NegativeArraySizeException $r8;
        java.lang.String $r9;

        r0 := @this: org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r8 = new java.lang.NegativeArraySizeException;

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        specialinvoke $r8.<java.lang.NegativeArraySizeException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label1:
        if i0 != 0 goto label2;

        $r7 = <libcore.util.EmptyArray: byte[] BYTE>;

        return $r7;

     label2:
        $r2 = <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl myRandom>;

        if $r2 != null goto label3;

        $r4 = new org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl;

        specialinvoke $r4.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: void <init>()>();

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl myRandom> = $r4;

        $r5 = <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl myRandom>;

        $r6 = staticinvoke <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: byte[] getRandomBytes(int)>(20);

        virtualinvoke $r5.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: void engineSetSeed(byte[])>($r6);

     label3:
        r1 = newarray (byte)[i0];

        $r3 = <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl myRandom>;

        virtualinvoke $r3.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: void engineNextBytes(byte[])>(r1);

        return r1;
    }

    protected synchronized void engineNextBytes(byte[])
    {
        org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl r0;
        byte[] r1, $r16, $r17, $r19, $r20, $r26, $r36, $r44;
        int i0, i1, i3, i4, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i25, $i27, $i28, $i29, $i32, $i34, $i35, $i36, $i38, $i39, $i43, $i44, $i46, $i47, $i48, $i49, $i51, $i52, $i53, $i55, $i57, $i58, $i59, $i60, $i61, $i63, $i65, $i68, $i69, $i70, $i71, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i82, $i85, $i86, $i88, $i89, $i90, $i93, $i94, $i95, $i96, $i97, i98, i99, i100;
        long l2, $l22, $l23, $l24, $l26, $l30, $l31, $l33, $l37, $l40, $l41, $l42, $l45, $l50, $l66, $l67, $l72, $l73, $l81, $l83, $l84, $l87, $l91, $l92;
        int[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r18, $r21, $r22, $r23, $r24, $r25, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r45, $r46, $r47, $r48;
        byte $b54, $b56, $b62, $b64;
        java.lang.NullPointerException $r49;

        r0 := @this: org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl;

        r1 := @parameter0: byte[];

        if r1 != null goto label01;

        $r49 = new java.lang.NullPointerException;

        specialinvoke $r49.<java.lang.NullPointerException: void <init>(java.lang.String)>("bytes == null");

        throw $r49;

     label01:
        $r2 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i8 = $r2[81];

        if $i8 != 0 goto label02;

        $i97 = 0;

        goto label03;

     label02:
        $r3 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i9 = $r3[81];

        $i10 = $i9 + 7;

        $i97 = $i10 >> 2;

     label03:
        i4 = $i97;

        $i12 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int state>;

        if $i12 != 0 goto label06;

        $r44 = staticinvoke <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: byte[] getRandomBytes(int)>(20);

        specialinvoke r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: void updateSeed(byte[])>($r44);

        r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex> = 20;

        $r43 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i88 = $r43[81];

        if $i88 != 0 goto label04;

        $i96 = 0;

        goto label05;

     label04:
        $r45 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i94 = $r45[81];

        $i95 = $i94 + 7;

        $i96 = $i95 >> 2;

     label05:
        i4 = $i96;

        goto label11;

     label06:
        $i11 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int state>;

        if $i11 != 1 goto label11;

        $r39 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $r40 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies>;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r39, 82, $r40, 0, 5);

        i0 = i4 + 3;

     label07:
        if i0 >= 18 goto label08;

        $r41 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $r41[i0] = 0;

        i0 = i0 + 1;

        goto label07;

     label08:
        $l84 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long seedLength>;

        $l83 = $l84 << 3;

        l2 = $l83 + 64L;

        $r38 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i82 = $r38[81];

        if $i82 >= 48 goto label09;

        $r48 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $l92 = l2 >>> 32;

        $i93 = (int) $l92;

        $r48[14] = $i93;

        $r42 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $l87 = l2 & -1L;

        $i86 = (int) $l87;

        $r42[15] = $i86;

        goto label10;

     label09:
        $r46 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies>;

        $l81 = l2 >>> 32;

        $i89 = (int) $l81;

        $r46[19] = $i89;

        $r47 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies>;

        $l91 = l2 & -1L;

        $i90 = (int) $l91;

        $r47[20] = $i90;

     label10:
        r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex> = 20;

     label11:
        r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int state> = 2;

        $i14 = lengthof r1;

        if $i14 != 0 goto label12;

        return;

     label12:
        i3 = 0;

        $i13 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex>;

        $i18 = 20 - $i13;

        $i16 = lengthof r1;

        $i15 = $i16 - i3;

        if $i18 >= $i15 goto label13;

        $i75 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex>;

        $i85 = 20 - $i75;

        goto label14;

     label13:
        $i17 = lengthof r1;

        $i85 = $i17 - i3;

     label14:
        i1 = $i85;

        if i1 <= 0 goto label15;

        $r36 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: byte[] nextBytes>;

        $i78 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r36, $i78, r1, i3, i1);

        $i77 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex>;

        $i76 = $i77 + i1;

        r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex> = $i76;

        i3 = i3 + i1;

     label15:
        $i19 = lengthof r1;

        if i3 < $i19 goto label16;

        return;

     label16:
        $r4 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i20 = $r4[81];

        i98 = $i20 & 3;

     label17:
        if i98 != 0 goto label18;

        $r35 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $l66 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long counter>;

        $l67 = $l66 >>> 32;

        $i74 = (int) $l67;

        $r35[i4] = $i74;

        $r33 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i71 = i4 + 1;

        $l72 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long counter>;

        $l73 = $l72 & -1L;

        $i70 = (int) $l73;

        $r33[$i71] = $i70;

        $r37 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i79 = i4 + 2;

        $r34 = <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] END_FLAGS>;

        $i80 = $r34[0];

        $r37[$i79] = $i80;

        goto label19;

     label18:
        $r5 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i29 = $r5[i4];

        $l22 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long counter>;

        $r6 = <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] RIGHT1>;

        $i21 = $r6[i98];

        $l23 = $l22 >>> $i21;

        $r7 = <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] MASK>;

        $i25 = $r7[i98];

        $l26 = (long) $i25;

        $l24 = $l23 & $l26;

        $i28 = (int) $l24;

        $i27 = $i29 | $i28;

        $r5[i4] = $i27;

        $r9 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i35 = i4 + 1;

        $l33 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long counter>;

        $r8 = <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] RIGHT2>;

        $i32 = $r8[i98];

        $l30 = $l33 >>> $i32;

        $l31 = $l30 & -1L;

        $i34 = (int) $l31;

        $r9[$i35] = $i34;

        $r13 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i44 = i4 + 2;

        $l37 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long counter>;

        $r10 = <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] LEFT>;

        $i38 = $r10[i98];

        $l41 = $l37 << $i38;

        $r11 = <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] END_FLAGS>;

        $i36 = $r11[i98];

        $l42 = (long) $i36;

        $l40 = $l41 | $l42;

        $i39 = (int) $l40;

        $r13[$i44] = $i39;

     label19:
        $r12 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i43 = $r12[81];

        if $i43 <= 48 goto label20;

        $r30 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies>;

        $r32 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i69 = $r32[16];

        $r30[5] = $i69;

        $r29 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies>;

        $r31 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i68 = $r31[17];

        $r29[6] = $i68;

     label20:
        $r15 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        staticinvoke <org.apache.harmony.security.provider.crypto.SHA1Impl: void computeHash(int[])>($r15);

        $r14 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i46 = $r14[81];

        if $i46 <= 48 goto label21;

        $r28 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $r25 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies>;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r28, 0, $r25, 21, 16);

        $r22 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies>;

        $r27 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r22, 5, $r27, 0, 16);

        $r21 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        staticinvoke <org.apache.harmony.security.provider.crypto.SHA1Impl: void computeHash(int[])>($r21);

        $r23 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies>;

        $r24 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r23, 21, $r24, 0, 16);

     label21:
        $l45 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long counter>;

        $l50 = $l45 + 1L;

        r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long counter> = $l50;

        i6 = 0;

        i99 = 0;

     label22:
        if i99 >= 5 goto label23;

        $r18 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i58 = 82 + i99;

        i7 = $r18[$i58];

        $r17 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: byte[] nextBytes>;

        $i59 = i7 >>> 24;

        $b54 = (byte) $i59;

        $r17[i6] = $b54;

        $r20 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: byte[] nextBytes>;

        $i63 = i6 + 1;

        $i55 = i7 >>> 16;

        $b56 = (byte) $i55;

        $r20[$i63] = $b56;

        $r19 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: byte[] nextBytes>;

        $i60 = i6 + 2;

        $i65 = i7 >>> 8;

        $b64 = (byte) $i65;

        $r19[$i60] = $b64;

        $r26 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: byte[] nextBytes>;

        $i61 = i6 + 3;

        $b62 = (byte) i7;

        $r26[$i61] = $b62;

        i6 = i6 + 4;

        i99 = i99 + 1;

        goto label22;

     label23:
        r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex> = 0;

        $i51 = lengthof r1;

        $i52 = $i51 - i3;

        if 20 >= $i52 goto label24;

        $i57 = 20;

        goto label25;

     label24:
        $i53 = lengthof r1;

        $i57 = $i53 - i3;

     label25:
        i100 = $i57;

        if i100 <= 0 goto label26;

        $r16 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: byte[] nextBytes>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r16, 0, r1, i3, i100);

        i3 = i3 + i100;

        $i48 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex>;

        $i49 = $i48 + i100;

        r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex> = $i49;

     label26:
        $i47 = lengthof r1;

        if i3 < $i47 goto label27;

        goto label28;

     label27:
        goto label17;

     label28:
        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl r0;
        java.io.ObjectOutputStream r1;
        int i0, i1, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24, i25, i26;
        long $l2, $l3;
        int[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r15, r16;
        byte[] $r13;

        r0 := @this: org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl;

        r1 := @parameter0: java.io.ObjectOutputStream;

        $l2 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long seedLength>;

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeLong(long)>($l2);

        $l3 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long counter>;

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeLong(long)>($l3);

        $i4 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int state>;

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i4);

        $r2 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i5 = $r2[81];

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i5);

        $r3 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i6 = $r3[81];

        $i7 = $i6 + 3;

        i0 = $i7 >> 2;

        $i8 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int state>;

        if $i8 == 2 goto label1;

        $i21 = 5 + i0;

        r16 = newarray (int)[$i21];

        $r14 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r14, 0, r16, 0, i0);

        $r15 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r15, 82, r16, i0, 5);

        goto label4;

     label1:
        i1 = 0;

        $r4 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i10 = $r4[81];

        if $i10 >= 48 goto label2;

        $i20 = 26 + i0;

        r16 = newarray (int)[$i20];

        goto label3;

     label2:
        $i9 = 42 + i0;

        r16 = newarray (int)[$i9];

        $r5 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i11 = $r5[16];

        r16[0] = $i11;

        $r6 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i12 = $r6[17];

        r16[1] = $i12;

        $r7 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i13 = $r7[30];

        r16[2] = $i13;

        $r8 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i14 = $r8[31];

        r16[3] = $i14;

        i1 = 4;

     label3:
        $r9 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r9, 0, r16, i1, 16);

        i23 = i1 + 16;

        $r11 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies>;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r11, 21, r16, i23, i0);

        i24 = i23 + i0;

        $r12 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies>;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r12, 0, r16, i24, 5);

        i25 = i24 + 5;

        $r10 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r10, 82, r16, i25, 5);

     label4:
        i26 = 0;

     label5:
        $i15 = lengthof r16;

        if i26 >= $i15 goto label6;

        $i22 = r16[i26];

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i22);

        i26 = i26 + 1;

        goto label5;

     label6:
        $i18 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex>;

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i18);

        $r13 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: byte[] nextBytes>;

        $i17 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex>;

        $i19 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex>;

        $i16 = 20 - $i19;

        virtualinvoke r1.<java.io.ObjectOutputStream: void write(byte[],int,int)>($r13, $i17, $i16);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl r0;
        java.io.ObjectInputStream r1;
        int i0, i1, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i27, i28, i29, i30, i31;
        int[] $r2, $r3, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        byte[] $r4, $r8;
        long $l2, $l3;

        r0 := @this: org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl;

        r1 := @parameter0: java.io.ObjectInputStream;

        $r2 = newarray (int)[87];

        r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed> = $r2;

        $r3 = newarray (int)[37];

        r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies> = $r3;

        $r4 = newarray (byte)[20];

        r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: byte[] nextBytes> = $r4;

        $l2 = virtualinvoke r1.<java.io.ObjectInputStream: long readLong()>();

        r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long seedLength> = $l2;

        $l3 = virtualinvoke r1.<java.io.ObjectInputStream: long readLong()>();

        r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long counter> = $l3;

        $i4 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int state> = $i4;

        $r5 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i5 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        $r5[81] = $i5;

        $r6 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i6 = $r6[81];

        $i7 = $i6 + 3;

        i0 = $i7 >> 2;

        $i8 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int state>;

        if $i8 == 2 goto label05;

        i1 = 0;

     label01:
        if i1 >= i0 goto label02;

        $r18 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i25 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        $r18[i1] = $i25;

        i1 = i1 + 1;

        goto label01;

     label02:
        i27 = 0;

     label03:
        if i27 >= 5 goto label04;

        $r17 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i23 = 82 + i27;

        $i26 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        $r17[$i23] = $i26;

        i27 = i27 + 1;

        goto label03;

     label04:
        goto label14;

     label05:
        $r7 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i10 = $r7[81];

        if $i10 < 48 goto label06;

        $r12 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i21 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        $r12[16] = $i21;

        $r14 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i20 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        $r14[17] = $i20;

        $r16 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i22 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        $r16[30] = $i22;

        $r15 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i24 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        $r15[31] = $i24;

     label06:
        i28 = 0;

     label07:
        if i28 >= 16 goto label08;

        $r13 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i19 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        $r13[i28] = $i19;

        i28 = i28 + 1;

        goto label07;

     label08:
        i29 = 0;

     label09:
        if i29 >= i0 goto label10;

        $r11 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies>;

        $i18 = 21 + i29;

        $i17 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        $r11[$i18] = $i17;

        i29 = i29 + 1;

        goto label09;

     label10:
        i30 = 0;

     label11:
        if i30 >= 5 goto label12;

        $r10 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] copies>;

        $i16 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        $r10[i30] = $i16;

        i30 = i30 + 1;

        goto label11;

     label12:
        i31 = 0;

     label13:
        if i31 >= 5 goto label14;

        $r9 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] seed>;

        $i14 = 82 + i31;

        $i15 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        $r9[$i14] = $i15;

        i31 = i31 + 1;

        goto label13;

     label14:
        $i9 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex> = $i9;

        $r8 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: byte[] nextBytes>;

        $i13 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex>;

        $i12 = r0.<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int nextBIndex>;

        $i11 = 20 - $i12;

        staticinvoke <libcore.io.Streams: void readFully(java.io.InputStream,byte[],int,int)>(r1, $r8, $i13, $i11);

        return;
    }

    private static byte[] getRandomBytes(int)
    {
        int i0;
        dalvik.system.BlockGuard$Policy r0, $r4;
        byte[] r1, r2;
        java.lang.Throwable r3, $r11;
        java.io.FileInputStream $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r14, $r15, $r16, $r17;
        java.lang.String $r10, $r18;
        java.lang.Exception $r12, r19;
        java.security.ProviderException $r13;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too few bytes requested: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label1:
        r0 = staticinvoke <dalvik.system.BlockGuard: dalvik.system.BlockGuard$Policy getThreadPolicy()>();

     label2:
        $r4 = <dalvik.system.BlockGuard: dalvik.system.BlockGuard$Policy LAX_POLICY>;

        staticinvoke <dalvik.system.BlockGuard: void setThreadPolicy(dalvik.system.BlockGuard$Policy)>($r4);

        r1 = newarray (byte)[i0];

        $r5 = <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: java.io.FileInputStream devURandom>;

        staticinvoke <libcore.io.Streams: void readFully(java.io.InputStream,byte[],int,int)>($r5, r1, 0, i0);

        r2 = r1;

     label3:
        staticinvoke <dalvik.system.BlockGuard: void setThreadPolicy(dalvik.system.BlockGuard$Policy)>(r0);

        return r2;

     label4:
        $r12 := @caughtexception;

        r19 = $r12;

        $r13 = new java.security.ProviderException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t read ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" random bytes");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.security.ProviderException: void <init>(java.lang.String,java.lang.Throwable)>($r18, r19);

        throw $r13;

     label5:
        $r11 := @caughtexception;

        r3 = $r11;

     label6:
        staticinvoke <dalvik.system.BlockGuard: void setThreadPolicy(dalvik.system.BlockGuard$Policy)>(r0);

        throw r3;

        catch java.lang.Exception from label2 to label3 with label4;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
    }

    static void <clinit>()
    {
        java.io.IOException r0, $r8;
        java.io.FileInputStream $r1;
        java.io.File $r2;
        int[] $r3, $r4, $r5, $r6, $r7;
        java.lang.RuntimeException $r9;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int NEXT_BYTES> = 2;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int SET_SEED> = 1;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int UNDEFINED> = 0;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int MAX_BYTES> = 48;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int FRAME_OFFSET> = 21;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int EXTRAFRAME_OFFSET> = 5;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int HASHCOPY_OFFSET> = 0;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int COUNTER_BASE> = 0;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int FRAME_LENGTH> = 16;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int HASHBYTES_TO_USE> = 20;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: long serialVersionUID> = 283736797212159675L;

     label1:
        $r1 = new java.io.FileInputStream;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>("/dev/urandom");

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: java.io.FileInputStream devURandom> = $r1;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r0 = $r8;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r0);

        throw $r9;

     label4:
        $r3 = newarray (int)[4];

        $r3[0] = -2147483648;

        $r3[1] = 8388608;

        $r3[2] = 32768;

        $r3[3] = 128;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] END_FLAGS> = $r3;

        $r4 = newarray (int)[4];

        $r4[0] = 0;

        $r4[1] = 40;

        $r4[2] = 48;

        $r4[3] = 56;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] RIGHT1> = $r4;

        $r5 = newarray (int)[4];

        $r5[0] = 0;

        $r5[1] = 8;

        $r5[2] = 16;

        $r5[3] = 24;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] RIGHT2> = $r5;

        $r6 = newarray (int)[4];

        $r6[0] = 0;

        $r6[1] = 24;

        $r6[2] = 16;

        $r6[3] = 8;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] LEFT> = $r6;

        $r7 = newarray (int)[4];

        $r7[0] = -1;

        $r7[1] = 16777215;

        $r7[2] = 65535;

        $r7[3] = 255;

        <org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: int[] MASK> = $r7;

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
