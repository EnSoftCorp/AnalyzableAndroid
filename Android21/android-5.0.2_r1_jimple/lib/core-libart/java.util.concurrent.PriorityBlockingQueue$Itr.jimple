final class java.util.concurrent.PriorityBlockingQueue$Itr extends java.lang.Object implements java.util.Iterator
{
    final java.lang.Object[] array;
    int cursor;
    int lastRet;
    final java.util.concurrent.PriorityBlockingQueue this$0;

    void <init>(java.util.concurrent.PriorityBlockingQueue, java.lang.Object[])
    {
        java.util.concurrent.PriorityBlockingQueue$Itr r0;
        java.util.concurrent.PriorityBlockingQueue r1;
        java.lang.Object[] r2;

        r0 := @this: java.util.concurrent.PriorityBlockingQueue$Itr;

        r1 := @parameter0: java.util.concurrent.PriorityBlockingQueue;

        r2 := @parameter1: java.lang.Object[];

        r0.<java.util.concurrent.PriorityBlockingQueue$Itr: java.util.concurrent.PriorityBlockingQueue this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.util.concurrent.PriorityBlockingQueue$Itr: int lastRet> = -1;

        r0.<java.util.concurrent.PriorityBlockingQueue$Itr: java.lang.Object[] array> = r2;

        return;
    }

    public boolean hasNext()
    {
        java.util.concurrent.PriorityBlockingQueue$Itr r0;
        java.lang.Object[] $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: java.util.concurrent.PriorityBlockingQueue$Itr;

        $i1 = r0.<java.util.concurrent.PriorityBlockingQueue$Itr: int cursor>;

        $r1 = r0.<java.util.concurrent.PriorityBlockingQueue$Itr: java.lang.Object[] array>;

        $i0 = lengthof $r1;

        if $i1 >= $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object next()
    {
        java.util.concurrent.PriorityBlockingQueue$Itr r0;
        java.lang.Object[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r3;
        java.util.NoSuchElementException $r4;

        r0 := @this: java.util.concurrent.PriorityBlockingQueue$Itr;

        $i1 = r0.<java.util.concurrent.PriorityBlockingQueue$Itr: int cursor>;

        $r1 = r0.<java.util.concurrent.PriorityBlockingQueue$Itr: java.lang.Object[] array>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();

        throw $r4;

     label1:
        $i2 = r0.<java.util.concurrent.PriorityBlockingQueue$Itr: int cursor>;

        r0.<java.util.concurrent.PriorityBlockingQueue$Itr: int lastRet> = $i2;

        $r2 = r0.<java.util.concurrent.PriorityBlockingQueue$Itr: java.lang.Object[] array>;

        $i3 = r0.<java.util.concurrent.PriorityBlockingQueue$Itr: int cursor>;

        $i4 = $i3 + 1;

        r0.<java.util.concurrent.PriorityBlockingQueue$Itr: int cursor> = $i4;

        $r3 = $r2[$i3];

        return $r3;
    }

    public void remove()
    {
        java.util.concurrent.PriorityBlockingQueue$Itr r0;
        int $i0, $i1;
        java.lang.Object[] $r1;
        java.lang.Object $r2;
        java.util.concurrent.PriorityBlockingQueue $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: java.util.concurrent.PriorityBlockingQueue$Itr;

        $i0 = r0.<java.util.concurrent.PriorityBlockingQueue$Itr: int lastRet>;

        if $i0 >= 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        throw $r4;

     label1:
        $r3 = r0.<java.util.concurrent.PriorityBlockingQueue$Itr: java.util.concurrent.PriorityBlockingQueue this$0>;

        $r1 = r0.<java.util.concurrent.PriorityBlockingQueue$Itr: java.lang.Object[] array>;

        $i1 = r0.<java.util.concurrent.PriorityBlockingQueue$Itr: int lastRet>;

        $r2 = $r1[$i1];

        virtualinvoke $r3.<java.util.concurrent.PriorityBlockingQueue: void removeEQ(java.lang.Object)>($r2);

        r0.<java.util.concurrent.PriorityBlockingQueue$Itr: int lastRet> = -1;

        return;
    }
}
