final class java.util.concurrent.Executors$RunnableAdapter extends java.lang.Object implements java.util.concurrent.Callable
{
    final java.lang.Runnable task;
    final java.lang.Object result;

    void <init>(java.lang.Runnable, java.lang.Object)
    {
        java.util.concurrent.Executors$RunnableAdapter r0;
        java.lang.Runnable r1;
        java.lang.Object r2;

        r0 := @this: java.util.concurrent.Executors$RunnableAdapter;

        r1 := @parameter0: java.lang.Runnable;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.util.concurrent.Executors$RunnableAdapter: java.lang.Runnable task> = r1;

        r0.<java.util.concurrent.Executors$RunnableAdapter: java.lang.Object result> = r2;

        return;
    }

    public java.lang.Object call()
    {
        java.util.concurrent.Executors$RunnableAdapter r0;
        java.lang.Runnable $r1;
        java.lang.Object $r2;

        r0 := @this: java.util.concurrent.Executors$RunnableAdapter;

        $r1 = r0.<java.util.concurrent.Executors$RunnableAdapter: java.lang.Runnable task>;

        interfaceinvoke $r1.<java.lang.Runnable: void run()>();

        $r2 = r0.<java.util.concurrent.Executors$RunnableAdapter: java.lang.Object result>;

        return $r2;
    }
}
