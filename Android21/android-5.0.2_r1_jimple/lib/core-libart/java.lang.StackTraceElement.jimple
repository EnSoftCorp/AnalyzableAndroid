public final class java.lang.StackTraceElement extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private static final int NATIVE_LINE_NUMBER;
    java.lang.String declaringClass;
    java.lang.String methodName;
    java.lang.String fileName;
    int lineNumber;

    public void <init>(java.lang.String, java.lang.String, java.lang.String, int)
    {
        java.lang.StackTraceElement r0;
        java.lang.String r1, r2, r3;
        int i0;
        java.lang.NullPointerException $r4, $r5;

        r0 := @this: java.lang.StackTraceElement;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("cls == null");

        throw $r5;

     label1:
        if r2 != null goto label2;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("method == null");

        throw $r4;

     label2:
        r0.<java.lang.StackTraceElement: java.lang.String declaringClass> = r1;

        r0.<java.lang.StackTraceElement: java.lang.String methodName> = r2;

        r0.<java.lang.StackTraceElement: java.lang.String fileName> = r3;

        r0.<java.lang.StackTraceElement: int lineNumber> = i0;

        return;
    }

    private void <init>()
    {
        java.lang.StackTraceElement r0;

        r0 := @this: java.lang.StackTraceElement;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.StackTraceElement r0, r2;
        java.lang.Object r1;
        java.lang.String r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1;

        r0 := @this: java.lang.StackTraceElement;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof java.lang.StackTraceElement;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (java.lang.StackTraceElement) r1;

        $r4 = r0.<java.lang.StackTraceElement: java.lang.String methodName>;

        if $r4 == null goto label2;

        $r5 = r2.<java.lang.StackTraceElement: java.lang.String methodName>;

        if $r5 != null goto label3;

     label2:
        return 0;

     label3:
        $r6 = virtualinvoke r0.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r7 = virtualinvoke r2.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        $r8 = virtualinvoke r0.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        $r9 = virtualinvoke r2.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 != 0 goto label5;

        return 0;

     label5:
        r3 = virtualinvoke r0.<java.lang.StackTraceElement: java.lang.String getFileName()>();

        if r3 != null goto label6;

        $r11 = virtualinvoke r2.<java.lang.StackTraceElement: java.lang.String getFileName()>();

        if $r11 == null goto label7;

        return 0;

     label6:
        $r10 = virtualinvoke r2.<java.lang.StackTraceElement: java.lang.String getFileName()>();

        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z3 != 0 goto label7;

        return 0;

     label7:
        $i1 = virtualinvoke r0.<java.lang.StackTraceElement: int getLineNumber()>();

        $i0 = virtualinvoke r2.<java.lang.StackTraceElement: int getLineNumber()>();

        if $i1 == $i0 goto label8;

        return 0;

     label8:
        return 1;
    }

    public java.lang.String getClassName()
    {
        java.lang.StackTraceElement r0;
        java.lang.String $r1, $r2;

        r0 := @this: java.lang.StackTraceElement;

        $r1 = r0.<java.lang.StackTraceElement: java.lang.String declaringClass>;

        if $r1 != null goto label1;

        $r2 = "<unknown class>";

        goto label2;

     label1:
        $r2 = r0.<java.lang.StackTraceElement: java.lang.String declaringClass>;

     label2:
        return $r2;
    }

    public java.lang.String getFileName()
    {
        java.lang.StackTraceElement r0;
        java.lang.String $r1;

        r0 := @this: java.lang.StackTraceElement;

        $r1 = r0.<java.lang.StackTraceElement: java.lang.String fileName>;

        return $r1;
    }

    public int getLineNumber()
    {
        java.lang.StackTraceElement r0;
        int $i0;

        r0 := @this: java.lang.StackTraceElement;

        $i0 = r0.<java.lang.StackTraceElement: int lineNumber>;

        return $i0;
    }

    public java.lang.String getMethodName()
    {
        java.lang.StackTraceElement r0;
        java.lang.String $r1, $r2;

        r0 := @this: java.lang.StackTraceElement;

        $r1 = r0.<java.lang.StackTraceElement: java.lang.String methodName>;

        if $r1 != null goto label1;

        $r2 = "<unknown method>";

        goto label2;

     label1:
        $r2 = r0.<java.lang.StackTraceElement: java.lang.String methodName>;

     label2:
        return $r2;
    }

    public int hashCode()
    {
        java.lang.StackTraceElement r0;
        java.lang.String $r1, $r2, $r3;
        int $i0, $i1, $i2;

        r0 := @this: java.lang.StackTraceElement;

        $r1 = r0.<java.lang.StackTraceElement: java.lang.String methodName>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<java.lang.StackTraceElement: java.lang.String methodName>;

        $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $r3 = r0.<java.lang.StackTraceElement: java.lang.String declaringClass>;

        $i1 = virtualinvoke $r3.<java.lang.String: int hashCode()>();

        $i2 = $i0 ^ $i1;

        return $i2;
    }

    public boolean isNativeMethod()
    {
        java.lang.StackTraceElement r0;
        int $i0;
        boolean $z0;

        r0 := @this: java.lang.StackTraceElement;

        $i0 = r0.<java.lang.StackTraceElement: int lineNumber>;

        if $i0 != -2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String toString()
    {
        java.lang.StackTraceElement r0;
        java.lang.StringBuilder r1, $r3;
        java.lang.String r2, $r4, $r7, $r13;
        int i0;
        boolean $z0;

        r0 := @this: java.lang.StackTraceElement;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(80);

        r1 = $r3;

        $r4 = virtualinvoke r0.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r7 = virtualinvoke r0.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $z0 = virtualinvoke r0.<java.lang.StackTraceElement: boolean isNativeMethod()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(Native Method)");

        goto label4;

     label1:
        r2 = virtualinvoke r0.<java.lang.StackTraceElement: java.lang.String getFileName()>();

        if r2 != null goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(Unknown Source)");

        goto label4;

     label2:
        i0 = virtualinvoke r0.<java.lang.StackTraceElement: int getLineNumber()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        if i0 < 0 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

     label4:
        $r13 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public static void <clinit>()
    {
        <java.lang.StackTraceElement: int NATIVE_LINE_NUMBER> = -2;

        <java.lang.StackTraceElement: long serialVersionUID> = 6992337162326171013L;

        return;
    }
}
