public abstract class java.text.Collator extends java.lang.Object implements java.util.Comparator, java.lang.Cloneable
{
    public static final int NO_DECOMPOSITION;
    public static final int CANONICAL_DECOMPOSITION;
    public static final int FULL_DECOMPOSITION;
    public static final int PRIMARY;
    public static final int SECONDARY;
    public static final int TERTIARY;
    public static final int IDENTICAL;
    libcore.icu.RuleBasedCollatorICU icuColl;

    void <init>(libcore.icu.RuleBasedCollatorICU)
    {
        java.text.Collator r0;
        libcore.icu.RuleBasedCollatorICU r1;

        r0 := @this: java.text.Collator;

        r1 := @parameter0: libcore.icu.RuleBasedCollatorICU;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.text.Collator: libcore.icu.RuleBasedCollatorICU icuColl> = r1;

        return;
    }

    protected void <init>()
    {
        java.text.Collator r0;
        libcore.icu.RuleBasedCollatorICU $r1;
        java.util.Locale $r2;

        r0 := @this: java.text.Collator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new libcore.icu.RuleBasedCollatorICU;

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke $r1.<libcore.icu.RuleBasedCollatorICU: void <init>(java.util.Locale)>($r2);

        r0.<java.text.Collator: libcore.icu.RuleBasedCollatorICU icuColl> = $r1;

        return;
    }

    public java.lang.Object clone()
    {
        java.text.Collator r0, r1;
        java.lang.Object $r2, $r4;
        libcore.icu.RuleBasedCollatorICU $r3, $r5;
        java.lang.CloneNotSupportedException $r6, r8;
        java.lang.AssertionError $r7;

        r0 := @this: java.text.Collator;

     label1:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r1 = (java.text.Collator) $r2;

        $r3 = r0.<java.text.Collator: libcore.icu.RuleBasedCollatorICU icuColl>;

        $r4 = virtualinvoke $r3.<libcore.icu.RuleBasedCollatorICU: java.lang.Object clone()>();

        $r5 = (libcore.icu.RuleBasedCollatorICU) $r4;

        r1.<java.text.Collator: libcore.icu.RuleBasedCollatorICU icuColl> = $r5;

     label2:
        return r1;

     label3:
        $r6 := @caughtexception;

        r8 = $r6;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>(r8);

        throw $r7;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public int compare(java.lang.Object, java.lang.Object)
    {
        java.text.Collator r0;
        java.lang.Object r1, r2;
        java.lang.String $r3, $r4;
        int $i0;

        r0 := @this: java.text.Collator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.String) r1;

        $r3 = (java.lang.String) r2;

        $i0 = virtualinvoke r0.<java.text.Collator: int compare(java.lang.String,java.lang.String)>($r4, $r3);

        return $i0;
    }

    public abstract int compare(java.lang.String, java.lang.String);

    public boolean equals(java.lang.Object)
    {
        java.text.Collator r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        libcore.icu.RuleBasedCollatorICU $r3, $r4, $r5, $r6;

        r0 := @this: java.text.Collator;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof java.text.Collator;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (java.text.Collator) r1;

        $r3 = r0.<java.text.Collator: libcore.icu.RuleBasedCollatorICU icuColl>;

        if $r3 != null goto label3;

        $r6 = r2.<java.text.Collator: libcore.icu.RuleBasedCollatorICU icuColl>;

        if $r6 != null goto label2;

        $z1 = 1;

        goto label4;

     label2:
        $z1 = 0;

        goto label4;

     label3:
        $r5 = r0.<java.text.Collator: libcore.icu.RuleBasedCollatorICU icuColl>;

        $r4 = r2.<java.text.Collator: libcore.icu.RuleBasedCollatorICU icuColl>;

        $z1 = virtualinvoke $r5.<libcore.icu.RuleBasedCollatorICU: boolean equals(java.lang.Object)>($r4);

     label4:
        return $z1;
    }

    public boolean equals(java.lang.String, java.lang.String)
    {
        java.text.Collator r0;
        java.lang.String r1, r2;
        int $i0;
        boolean $z0;

        r0 := @this: java.text.Collator;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<java.text.Collator: int compare(java.lang.String,java.lang.String)>(r1, r2);

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static java.util.Locale[] getAvailableLocales()
    {
        java.util.Locale[] $r0;

        $r0 = staticinvoke <libcore.icu.ICU: java.util.Locale[] getAvailableCollatorLocales()>();

        return $r0;
    }

    public abstract java.text.CollationKey getCollationKey(java.lang.String);

    public int getDecomposition()
    {
        java.text.Collator r0;
        libcore.icu.RuleBasedCollatorICU $r1;
        int $i0, $i1;

        r0 := @this: java.text.Collator;

        $r1 = r0.<java.text.Collator: libcore.icu.RuleBasedCollatorICU icuColl>;

        $i0 = virtualinvoke $r1.<libcore.icu.RuleBasedCollatorICU: int getDecomposition()>();

        $i1 = specialinvoke r0.<java.text.Collator: int decompositionMode_ICU_Java(int)>($i0);

        return $i1;
    }

    public static java.text.Collator getInstance()
    {
        java.util.Locale $r0;
        java.text.Collator $r1;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <java.text.Collator: java.text.Collator getInstance(java.util.Locale)>($r0);

        return $r1;
    }

    public static java.text.Collator getInstance(java.util.Locale)
    {
        java.util.Locale r0;
        java.text.RuleBasedCollator $r1;
        libcore.icu.RuleBasedCollatorICU $r2;
        java.lang.NullPointerException $r3;

        r0 := @parameter0: java.util.Locale;

        if r0 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("locale == null");

        throw $r3;

     label1:
        $r1 = new java.text.RuleBasedCollator;

        $r2 = new libcore.icu.RuleBasedCollatorICU;

        specialinvoke $r2.<libcore.icu.RuleBasedCollatorICU: void <init>(java.util.Locale)>(r0);

        specialinvoke $r1.<java.text.RuleBasedCollator: void <init>(libcore.icu.RuleBasedCollatorICU)>($r2);

        return $r1;
    }

    public int getStrength()
    {
        java.text.Collator r0;
        libcore.icu.RuleBasedCollatorICU $r1;
        int $i0, $i1;

        r0 := @this: java.text.Collator;

        $r1 = r0.<java.text.Collator: libcore.icu.RuleBasedCollatorICU icuColl>;

        $i0 = virtualinvoke $r1.<libcore.icu.RuleBasedCollatorICU: int getStrength()>();

        $i1 = specialinvoke r0.<java.text.Collator: int strength_ICU_Java(int)>($i0);

        return $i1;
    }

    public abstract int hashCode();

    public void setDecomposition(int)
    {
        java.text.Collator r0;
        int i0, $i1;
        libcore.icu.RuleBasedCollatorICU $r1;

        r0 := @this: java.text.Collator;

        i0 := @parameter0: int;

        $r1 = r0.<java.text.Collator: libcore.icu.RuleBasedCollatorICU icuColl>;

        $i1 = specialinvoke r0.<java.text.Collator: int decompositionMode_Java_ICU(int)>(i0);

        virtualinvoke $r1.<libcore.icu.RuleBasedCollatorICU: void setDecomposition(int)>($i1);

        return;
    }

    public void setStrength(int)
    {
        java.text.Collator r0;
        int i0, $i1;
        libcore.icu.RuleBasedCollatorICU $r1;

        r0 := @this: java.text.Collator;

        i0 := @parameter0: int;

        $r1 = r0.<java.text.Collator: libcore.icu.RuleBasedCollatorICU icuColl>;

        $i1 = specialinvoke r0.<java.text.Collator: int strength_Java_ICU(int)>(i0);

        virtualinvoke $r1.<libcore.icu.RuleBasedCollatorICU: void setStrength(int)>($i1);

        return;
    }

    private int decompositionMode_Java_ICU(int)
    {
        java.text.Collator r0;
        int i0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: java.text.Collator;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label1;
            default: goto label3;
        };

     label1:
        return 17;

     label2:
        return 16;

     label3:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad mode: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;
    }

    private int decompositionMode_ICU_Java(int)
    {
        java.text.Collator r0;
        int i0, i1;

        r0 := @this: java.text.Collator;

        i0 := @parameter0: int;

        i1 = i0;

        lookupswitch(i0)
        {
            case 16: goto label1;
            case 17: goto label2;
            default: goto label3;
        };

     label1:
        i1 = 0;

        goto label3;

     label2:
        i1 = 1;

     label3:
        return i1;
    }

    private int strength_Java_ICU(int)
    {
        java.text.Collator r0;
        int i0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: java.text.Collator;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label1:
        return 0;

     label2:
        return 1;

     label3:
        return 2;

     label4:
        return 15;

     label5:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad strength: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;
    }

    private int strength_ICU_Java(int)
    {
        java.text.Collator r0;
        int i0, i1;

        r0 := @this: java.text.Collator;

        i0 := @parameter0: int;

        i1 = i0;

        lookupswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 15: goto label4;
            default: goto label5;
        };

     label1:
        i1 = 0;

        goto label5;

     label2:
        i1 = 1;

        goto label5;

     label3:
        i1 = 2;

        goto label5;

     label4:
        i1 = 3;

     label5:
        return i1;
    }

    public static void <clinit>()
    {
        <java.text.Collator: int IDENTICAL> = 3;

        <java.text.Collator: int TERTIARY> = 2;

        <java.text.Collator: int SECONDARY> = 1;

        <java.text.Collator: int PRIMARY> = 0;

        <java.text.Collator: int FULL_DECOMPOSITION> = 2;

        <java.text.Collator: int CANONICAL_DECOMPOSITION> = 1;

        <java.text.Collator: int NO_DECOMPOSITION> = 0;

        return;
    }
}
