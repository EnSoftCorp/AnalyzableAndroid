public class libcore.io.DeleteOnExit extends java.lang.Thread
{
    private static libcore.io.DeleteOnExit instance;
    private final java.util.ArrayList files;

    public static synchronized libcore.io.DeleteOnExit getInstance()
    {
        libcore.io.DeleteOnExit $r0, $r1, $r2, $r4;
        java.lang.Runtime $r3;

        $r0 = <libcore.io.DeleteOnExit: libcore.io.DeleteOnExit instance>;

        if $r0 != null goto label1;

        $r2 = new libcore.io.DeleteOnExit;

        specialinvoke $r2.<libcore.io.DeleteOnExit: void <init>()>();

        <libcore.io.DeleteOnExit: libcore.io.DeleteOnExit instance> = $r2;

        $r3 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r4 = <libcore.io.DeleteOnExit: libcore.io.DeleteOnExit instance>;

        virtualinvoke $r3.<java.lang.Runtime: void addShutdownHook(java.lang.Thread)>($r4);

     label1:
        $r1 = <libcore.io.DeleteOnExit: libcore.io.DeleteOnExit instance>;

        return $r1;
    }

    private void <init>()
    {
        libcore.io.DeleteOnExit r0;
        java.util.ArrayList $r1;

        r0 := @this: libcore.io.DeleteOnExit;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<libcore.io.DeleteOnExit: java.util.ArrayList files> = $r1;

        return;
    }

    public void addFile(java.lang.String)
    {
        libcore.io.DeleteOnExit r0;
        java.lang.String r1;
        java.util.ArrayList r2, $r4, $r5, $r6;
        java.lang.Throwable r3, $r7;
        boolean $z0;

        r0 := @this: libcore.io.DeleteOnExit;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<libcore.io.DeleteOnExit: java.util.ArrayList files>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<libcore.io.DeleteOnExit: java.util.ArrayList files>;

        $z0 = virtualinvoke $r5.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        $r6 = r0.<libcore.io.DeleteOnExit: java.util.ArrayList files>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void run()
    {
        libcore.io.DeleteOnExit r0;
        int i0, $i1;
        java.util.ArrayList $r1, $r2, $r4;
        java.io.File $r3;
        java.lang.Object $r5;
        java.lang.String $r6;

        r0 := @this: libcore.io.DeleteOnExit;

        $r1 = r0.<libcore.io.DeleteOnExit: java.util.ArrayList files>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r1);

        $r2 = r0.<libcore.io.DeleteOnExit: java.util.ArrayList files>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label2;

        $r3 = new java.io.File;

        $r4 = r0.<libcore.io.DeleteOnExit: java.util.ArrayList files>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r6 = (java.lang.String) $r5;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r6);

        virtualinvoke $r3.<java.io.File: boolean delete()>();

        i0 = i0 + -1;

        goto label1;

     label2:
        return;
    }
}
