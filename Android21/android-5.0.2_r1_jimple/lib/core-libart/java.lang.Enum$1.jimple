final class java.lang.Enum$1 extends libcore.util.BasicLruCache
{

    void <init>(int)
    {
        java.lang.Enum$1 r0;
        int i0;

        r0 := @this: java.lang.Enum$1;

        i0 := @parameter0: int;

        specialinvoke r0.<libcore.util.BasicLruCache: void <init>(int)>(i0);

        return;
    }

    protected java.lang.Object[] create(java.lang.Class)
    {
        java.lang.Enum$1 r0;
        java.lang.Class r1;
        java.lang.reflect.Method r2;
        boolean $z0;
        java.lang.Class[] $r3;
        java.lang.Object[] $r4, $r5, $r7, $r8;
        java.lang.Object $r6;
        java.lang.NoSuchMethodException $r9, r15;
        java.lang.AssertionError $r10, $r12, $r14;
        java.lang.IllegalAccessException $r11, r16;
        java.lang.reflect.InvocationTargetException $r13, r17;

        r0 := @this: java.lang.Enum$1;

        r1 := @parameter0: java.lang.Class;

        $z0 = virtualinvoke r1.<java.lang.Class: boolean isEnum()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = <libcore.util.EmptyArray: java.lang.Class[] CLASS>;

        r2 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("values", $r3);

        virtualinvoke r2.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        $r5 = (java.lang.Object[]) null;

        $r4 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r5, $r4);

        $r7 = (java.lang.Object[]) $r6;

        $r8 = (java.lang.Object[]) $r7;

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

        r15 = $r9;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.String,java.lang.Throwable)>("impossible", r15);

        throw $r10;

     label4:
        $r11 := @caughtexception;

        r16 = $r11;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>(java.lang.String,java.lang.Throwable)>("impossible", r16);

        throw $r12;

     label5:
        $r13 := @caughtexception;

        r17 = $r13;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>(java.lang.String,java.lang.Throwable)>("impossible", r17);

        throw $r14;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
    }

    protected volatile java.lang.Object create(java.lang.Object)
    {
        java.lang.Enum$1 r0;
        java.lang.Object r1;
        java.lang.Class $r2;
        java.lang.Object[] $r3;

        r0 := @this: java.lang.Enum$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Class) r1;

        $r3 = virtualinvoke r0.<java.lang.Enum$1: java.lang.Object[] create(java.lang.Class)>($r2);

        return $r3;
    }
}
