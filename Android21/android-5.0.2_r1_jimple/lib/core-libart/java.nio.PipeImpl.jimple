final class java.nio.PipeImpl extends java.nio.channels.Pipe
{
    private final java.nio.PipeImpl$PipeSinkChannel sink;
    private final java.nio.PipeImpl$PipeSourceChannel source;

    public void <init>(java.nio.channels.spi.SelectorProvider) throws java.io.IOException
    {
        java.nio.PipeImpl r0;
        java.nio.channels.spi.SelectorProvider r1;
        java.io.FileDescriptor r2, r3, $r4, $r5;
        int $i0, $i1;
        libcore.io.Os $r6;
        java.nio.PipeImpl$PipeSinkChannel $r7;
        java.nio.PipeImpl$PipeSourceChannel $r8;
        android.system.ErrnoException $r9, r11;
        java.io.IOException $r10;

        r0 := @this: java.nio.PipeImpl;

        r1 := @parameter0: java.nio.channels.spi.SelectorProvider;

        specialinvoke r0.<java.nio.channels.Pipe: void <init>()>();

     label1:
        $r4 = new java.io.FileDescriptor;

        specialinvoke $r4.<java.io.FileDescriptor: void <init>()>();

        r2 = $r4;

        $r5 = new java.io.FileDescriptor;

        specialinvoke $r5.<java.io.FileDescriptor: void <init>()>();

        r3 = $r5;

        $r6 = <libcore.io.Libcore: libcore.io.Os os>;

        $i1 = <android.system.OsConstants: int AF_UNIX>;

        $i0 = <android.system.OsConstants: int SOCK_STREAM>;

        interfaceinvoke $r6.<libcore.io.Os: void socketpair(int,int,int,java.io.FileDescriptor,java.io.FileDescriptor)>($i1, $i0, 0, r2, r3);

        $r7 = new java.nio.PipeImpl$PipeSinkChannel;

        specialinvoke $r7.<java.nio.PipeImpl$PipeSinkChannel: void <init>(java.nio.PipeImpl,java.nio.channels.spi.SelectorProvider,java.io.FileDescriptor,java.nio.PipeImpl$1)>(r0, r1, r2, null);

        r0.<java.nio.PipeImpl: java.nio.PipeImpl$PipeSinkChannel sink> = $r7;

        $r8 = new java.nio.PipeImpl$PipeSourceChannel;

        specialinvoke $r8.<java.nio.PipeImpl$PipeSourceChannel: void <init>(java.nio.PipeImpl,java.nio.channels.spi.SelectorProvider,java.io.FileDescriptor,java.nio.PipeImpl$1)>(r0, r1, r3, null);

        r0.<java.nio.PipeImpl: java.nio.PipeImpl$PipeSourceChannel source> = $r8;

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        r11 = $r9;

        $r10 = virtualinvoke r11.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r10;

     label4:
        return;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public java.nio.channels.Pipe$SinkChannel sink()
    {
        java.nio.PipeImpl r0;
        java.nio.PipeImpl$PipeSinkChannel $r1;

        r0 := @this: java.nio.PipeImpl;

        $r1 = r0.<java.nio.PipeImpl: java.nio.PipeImpl$PipeSinkChannel sink>;

        return $r1;
    }

    public java.nio.channels.Pipe$SourceChannel source()
    {
        java.nio.PipeImpl r0;
        java.nio.PipeImpl$PipeSourceChannel $r1;

        r0 := @this: java.nio.PipeImpl;

        $r1 = r0.<java.nio.PipeImpl: java.nio.PipeImpl$PipeSourceChannel source>;

        return $r1;
    }
}
