class java.math.Conversion extends java.lang.Object
{
    static final int[] digitFitInInt;
    static final int[] bigRadices;

    private void <init>()
    {
        java.math.Conversion r0;

        r0 := @this: java.math.Conversion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.String bigInteger2String(java.math.BigInteger, int)
    {
        java.math.BigInteger r0, $r5;
        int i0, i1, i2, i3, i5, i6, i7, i8, i9, i10, i11, i12, i13, $i14, $i16, $i17, $i18, $i20, $i21, $i22, $i23, $i24, $i25, $i27, $i28, $i29, i31, i32, i33, i34;
        int[] r1, r3, $r7, $r8;
        long l4, $l30;
        char[] r2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, d7;
        java.lang.String $r4, $r6, $r9;
        char $c15, $c19, $c26;
        boolean $z0;

        r0 := @parameter0: java.math.BigInteger;

        i0 := @parameter1: int;

        virtualinvoke r0.<java.math.BigInteger: void prepareJavaRepresentation()>();

        i1 = r0.<java.math.BigInteger: int sign>;

        i2 = r0.<java.math.BigInteger: int numberLength>;

        r1 = r0.<java.math.BigInteger: int[] digits>;

        if i1 != 0 goto label01;

        return "0";

     label01:
        if i2 != 1 goto label03;

        $i27 = i2 - 1;

        i3 = r1[$i27];

        $l30 = (long) i3;

        l4 = $l30 & 4294967295L;

        if i1 >= 0 goto label02;

        l4 = neg l4;

     label02:
        $r9 = staticinvoke <java.lang.Long: java.lang.String toString(long,int)>(l4, i0);

        return $r9;

     label03:
        if i0 == 10 goto label04;

        if i0 < 2 goto label04;

        if i0 <= 36 goto label05;

     label04:
        $r4 = virtualinvoke r0.<java.math.BigInteger: java.lang.String toString()>();

        return $r4;

     label05:
        $d0 = (double) i0;

        $d2 = staticinvoke <java.lang.Math: double log(double)>($d0);

        $d1 = staticinvoke <java.lang.Math: double log(double)>(2.0);

        d7 = $d2 / $d1;

        $r5 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger abs()>();

        $i14 = virtualinvoke $r5.<java.math.BigInteger: int bitLength()>();

        $d4 = (double) $i14;

        $d6 = $d4 / d7;

        if i1 >= 0 goto label06;

        $z0 = 1;

        goto label07;

     label06:
        $z0 = 0;

     label07:
        $d3 = (double) $z0;

        $d5 = $d6 + $d3;

        $i16 = (int) $d5;

        i5 = $i16 + 1;

        r2 = newarray (char)[i5];

        i6 = i5;

        if i0 == 16 goto label17;

        r3 = newarray (int)[i2];

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r1, 0, r3, 0, i2);

        i8 = i2;

        $r8 = <java.math.Conversion: int[] digitFitInInt>;

        i9 = $r8[i0];

        $r7 = <java.math.Conversion: int[] bigRadices>;

        $i22 = i0 - 2;

        i11 = $r7[$i22];

     label08:
        i7 = staticinvoke <java.math.Division: int divideArrayByInt(int[],int[],int,int)>(r3, r3, i8, i11);

        i13 = i6;

     label09:
        i6 = i6 + -1;

        $i25 = i7 % i0;

        $c26 = staticinvoke <java.lang.Character: char forDigit(int,int)>($i25, i0);

        r2[i6] = $c26;

        $i23 = i7 / i0;

        i7 = $i23;

        if $i23 == 0 goto label10;

        if i6 != 0 goto label09;

     label10:
        $i24 = i9 - i13;

        i12 = $i24 + i6;

        i10 = 0;

     label11:
        if i10 >= i12 goto label12;

        if i6 <= 0 goto label12;

        i6 = i6 + -1;

        r2[i6] = 48;

        i10 = i10 + 1;

        goto label11;

     label12:
        i31 = i8 - 1;

     label13:
        if i31 <= 0 goto label14;

        $i29 = r3[i31];

        if $i29 != 0 goto label14;

        i31 = i31 + -1;

        goto label13;

     label14:
        i8 = i31 + 1;

        if i8 != 1 goto label15;

        $i28 = r3[0];

        if $i28 != 0 goto label15;

        goto label16;

     label15:
        goto label08;

     label16:
        goto label21;

     label17:
        i32 = 0;

     label18:
        if i32 >= i2 goto label21;

        i33 = 0;

     label19:
        if i33 >= 8 goto label20;

        if i6 <= 0 goto label20;

        $i21 = r1[i32];

        $i20 = i33 << 2;

        $i18 = $i21 >> $i20;

        i34 = $i18 & 15;

        i6 = i6 + -1;

        $c19 = staticinvoke <java.lang.Character: char forDigit(int,int)>(i34, 16);

        r2[i6] = $c19;

        i33 = i33 + 1;

        goto label19;

     label20:
        i32 = i32 + 1;

        goto label18;

     label21:
        $c15 = r2[i6];

        if $c15 != 48 goto label22;

        i6 = i6 + 1;

        goto label21;

     label22:
        if i1 != -1 goto label23;

        i6 = i6 + -1;

        r2[i6] = 45;

     label23:
        $r6 = new java.lang.String;

        $i17 = i5 - i6;

        specialinvoke $r6.<java.lang.String: void <init>(char[],int,int)>(r2, i6, $i17);

        return $r6;
    }

    static java.lang.String toDecimalScaledString(java.math.BigInteger, int)
    {
        java.math.BigInteger r0;
        int i0, i1, i2, i3, i4, i6, i8, i10, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i23, $i24, $i25, $i26, $i27, $i28, $i30, $i31, $i32, $i33, $i34, $i36, $i37, $i38, $i39, $i43, $i44, $i45, $i46, $i48, $i50, $i51, $i57, $i58, i59, i60, i61, i63, i64, i65, i66, i67, i68, i69, i70, i71, i72, i73, i74, i75;
        int[] r1, r23;
        char[] r2;
        java.lang.StringBuilder r3, $r4, $r18, r24;
        long l5, l7, l9, l11, $l40, $l41, $l42, $l49, $l54, $l55, $l56, l62;
        char $c18, $c22, $c29, $c35, $c47, $c52;
        java.lang.String $r7, $r9, $r15, $r16, $r17, $r21;
        boolean $z0, z1;
        byte $b53;

        r0 := @parameter0: java.math.BigInteger;

        i0 := @parameter1: int;

        virtualinvoke r0.<java.math.BigInteger: void prepareJavaRepresentation()>();

        i1 = r0.<java.math.BigInteger: int sign>;

        i2 = r0.<java.math.BigInteger: int numberLength>;

        r1 = r0.<java.math.BigInteger: int[] digits>;

        if i1 != 0 goto label11;

        tableswitch(i0)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            default: goto label08;
        };

     label01:
        return "0";

     label02:
        return "0.0";

     label03:
        return "0.00";

     label04:
        return "0.000";

     label05:
        return "0.0000";

     label06:
        return "0.00000";

     label07:
        return "0.000000";

     label08:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        r3 = $r18;

        if i0 >= 0 goto label09;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0E+");

        goto label10;

     label09:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0E");

     label10:
        $i58 = neg i0;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i58);

        $r21 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r21;

     label11:
        $i12 = i2 * 10;

        $i14 = $i12 + 1;

        i3 = $i14 + 7;

        $i13 = i3 + 1;

        r2 = newarray (char)[$i13];

        i4 = i3;

        if i2 != 1 goto label16;

        i59 = r1[0];

        if i59 >= 0 goto label13;

        $l54 = (long) i59;

        l5 = $l54 & 4294967295L;

     label12:
        l7 = l5;

        l5 = l5 / 10L;

        i4 = i4 + -1;

        $l55 = l5 * 10L;

        $l56 = l7 - $l55;

        $i57 = (int) $l56;

        $i51 = 48 + $i57;

        $c52 = (char) $i51;

        r2[i4] = $c52;

        $b53 = l5 cmp 0L;

        if $b53 != 0 goto label12;

        goto label15;

     label13:
        i60 = i59;

     label14:
        i6 = i60;

        i60 = i60 / 10;

        i4 = i4 + -1;

        $i44 = i60 * 10;

        $i45 = i6 - $i44;

        $i46 = 48 + $i45;

        $c47 = (char) $i46;

        r2[i4] = $c47;

        if i60 != 0 goto label14;

     label15:
        goto label28;

     label16:
        r23 = newarray (int)[i2];

        i61 = i2;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r1, 0, r23, 0, i61);

     label17:
        l62 = 0L;

        i8 = i61 - 1;

     label18:
        if i8 < 0 goto label19;

        $l40 = l62 << 32;

        $i43 = r23[i8];

        $l42 = (long) $i43;

        $l41 = $l42 & 4294967295L;

        l9 = $l40 + $l41;

        l11 = staticinvoke <java.math.Conversion: long divideLongByBillion(long)>(l9);

        $i48 = (int) l11;

        r23[i8] = $i48;

        $l49 = l11 >> 32;

        $i50 = (int) $l49;

        l62 = (long) $i50;

        i8 = i8 + -1;

        goto label18;

     label19:
        i63 = (int) l62;

        i64 = i4;

     label20:
        i4 = i4 + -1;

        $i16 = i63 % 10;

        $i15 = 48 + $i16;

        $c18 = (char) $i15;

        r2[i4] = $c18;

        $i17 = i63 / 10;

        i63 = $i17;

        if $i17 == 0 goto label21;

        if i4 != 0 goto label20;

     label21:
        $i20 = 9 - i64;

        i10 = $i20 + i4;

        i65 = 0;

     label22:
        if i65 >= i10 goto label23;

        if i4 <= 0 goto label23;

        i4 = i4 + -1;

        r2[i4] = 48;

        i65 = i65 + 1;

        goto label22;

     label23:
        i66 = i61 - 1;

     label24:
        $i19 = r23[i66];

        if $i19 != 0 goto label26;

        if i66 != 0 goto label25;

        goto label27;

     label25:
        i66 = i66 + -1;

        goto label24;

     label26:
        i61 = i66 + 1;

        goto label17;

     label27:
        $c22 = r2[i4];

        if $c22 != 48 goto label28;

        i4 = i4 + 1;

        goto label27;

     label28:
        if i1 >= 0 goto label29;

        $z0 = 1;

        goto label30;

     label29:
        $z0 = 0;

     label30:
        z1 = $z0;

        $i21 = i3 - i4;

        $i23 = $i21 - i0;

        i67 = $i23 - 1;

        if i0 != 0 goto label32;

        if z1 == 0 goto label31;

        i4 = i4 + -1;

        r2[i4] = 45;

     label31:
        $r17 = new java.lang.String;

        $i38 = i3 - i4;

        specialinvoke $r17.<java.lang.String: void <init>(char[],int,int)>(r2, i4, $i38);

        return $r17;

     label32:
        if i0 <= 0 goto label40;

        if i67 < -6 goto label40;

        if i67 < 0 goto label36;

        i68 = i4 + i67;

        i69 = i3 - 1;

     label33:
        if i69 < i68 goto label34;

        $i39 = i69 + 1;

        $c35 = r2[i69];

        r2[$i39] = $c35;

        i69 = i69 + -1;

        goto label33;

     label34:
        i70 = i68 + 1;

        r2[i70] = 46;

        if z1 == 0 goto label35;

        i4 = i4 + -1;

        r2[i4] = 45;

     label35:
        $r16 = new java.lang.String;

        $i37 = i3 - i4;

        $i36 = $i37 + 1;

        specialinvoke $r16.<java.lang.String: void <init>(char[],int,int)>(r2, i4, $i36);

        return $r16;

     label36:
        i71 = 2;

     label37:
        $i34 = neg i67;

        $i33 = $i34 + 1;

        if i71 >= $i33 goto label38;

        i4 = i4 + -1;

        r2[i4] = 48;

        i71 = i71 + 1;

        goto label37;

     label38:
        i72 = i4 + -1;

        r2[i72] = 46;

        i73 = i72 + -1;

        r2[i73] = 48;

        if z1 == 0 goto label39;

        i73 = i73 + -1;

        r2[i73] = 45;

     label39:
        $r15 = new java.lang.String;

        $i32 = i3 - i73;

        specialinvoke $r15.<java.lang.String: void <init>(char[],int,int)>(r2, i73, $i32);

        return $r15;

     label40:
        i74 = i4 + 1;

        i75 = i3;

        $r4 = new java.lang.StringBuilder;

        $i25 = 16 + i75;

        $i24 = $i25 - i74;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i24);

        r24 = $r4;

        if z1 == 0 goto label41;

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

     label41:
        $i26 = i75 - i74;

        if $i26 < 1 goto label42;

        $c29 = r2[i4];

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c29);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $i31 = i4 + 1;

        $i28 = i3 - i4;

        $i30 = $i28 - 1;

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r2, $i31, $i30);

        goto label43;

     label42:
        $i27 = i3 - i4;

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r2, i4, $i27);

     label43:
        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(69);

        if i67 <= 0 goto label44;

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(43);

     label44:
        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i67);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r7 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    static java.lang.String toDecimalScaledString(long, int)
    {
        long l0, l4, $l9, $l11, $l12, $l15, $l17, $l18, $l19, $l20, $l30, $l31, $l36, l44, l45;
        int i1, i3, i5, i6, $i10, $i14, $i21, $i22, $i23, $i25, $i26, $i28, $i29, $i34, $i37, $i38, $i39, $i40, $i41, $i43, i46, i47, i48, i49, i50;
        byte b2, $b7, $b8, $b16, $b24, $b32, $b33, $b35, b51;
        char[] r0;
        boolean z0, $z1;
        java.lang.StringBuilder r1, r2, $r3, $r20;
        char $c13, $c27, $c42;
        java.lang.String $r6, $r8, $r14, $r15, $r16, $r18, $r22;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $b7 = l0 cmp 0L;

        if $b7 >= 0 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        z0 = $z1;

        if z0 == 0 goto label03;

        l0 = neg l0;

     label03:
        $b8 = l0 cmp 0L;

        if $b8 != 0 goto label16;

        tableswitch(i1)
        {
            case 0: goto label04;
            case 1: goto label05;
            case 2: goto label06;
            case 3: goto label07;
            case 4: goto label08;
            case 5: goto label09;
            case 6: goto label10;
            default: goto label11;
        };

     label04:
        return "0";

     label05:
        return "0.0";

     label06:
        return "0.00";

     label07:
        return "0.000";

     label08:
        return "0.0000";

     label09:
        return "0.00000";

     label10:
        return "0.000000";

     label11:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        r1 = $r20;

        if i1 >= 0 goto label12;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0E+");

        goto label13;

     label12:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0E");

     label13:
        if i1 != -2147483648 goto label14;

        $r22 = "2147483648";

        goto label15;

     label14:
        $i43 = neg i1;

        $r22 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i43);

     label15:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r18 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;

     label16:
        b2 = 18;

        $i10 = b2 + 1;

        r0 = newarray (char)[$i10];

        i3 = b2;

        l44 = l0;

     label17:
        l4 = l44;

        l44 = l44 / 10L;

        i3 = i3 + -1;

        $l9 = l44 * 10L;

        $l12 = l4 - $l9;

        $l11 = 48L + $l12;

        $i14 = (int) $l11;

        $c13 = (char) $i14;

        r0[i3] = $c13;

        $b16 = l44 cmp 0L;

        if $b16 != 0 goto label17;

        $l18 = (long) b2;

        $l15 = (long) i3;

        $l20 = $l18 - $l15;

        $l17 = (long) i1;

        $l19 = $l20 - $l17;

        l45 = $l19 - 1L;

        if i1 != 0 goto label19;

        if z0 == 0 goto label18;

        i3 = i3 + -1;

        r0[i3] = 45;

     label18:
        $r16 = new java.lang.String;

        $i40 = b2 - i3;

        specialinvoke $r16.<java.lang.String: void <init>(char[],int,int)>(r0, i3, $i40);

        return $r16;

     label19:
        if i1 <= 0 goto label27;

        $b33 = l45 cmp -6L;

        if $b33 < 0 goto label27;

        $b32 = l45 cmp 0L;

        if $b32 < 0 goto label23;

        $i39 = (int) l45;

        i5 = i3 + $i39;

        i6 = b2 - 1;

     label20:
        if i6 < i5 goto label21;

        $i41 = i6 + 1;

        $c42 = r0[i6];

        r0[$i41] = $c42;

        i6 = i6 + -1;

        goto label20;

     label21:
        i46 = i5 + 1;

        r0[i46] = 46;

        if z0 == 0 goto label22;

        i3 = i3 + -1;

        r0[i3] = 45;

     label22:
        $r15 = new java.lang.String;

        $i38 = b2 - i3;

        $i37 = $i38 + 1;

        specialinvoke $r15.<java.lang.String: void <init>(char[],int,int)>(r0, i3, $i37);

        return $r15;

     label23:
        i47 = 2;

     label24:
        $l36 = (long) i47;

        $l31 = neg l45;

        $l30 = $l31 + 1L;

        $b35 = $l36 cmp $l30;

        if $b35 >= 0 goto label25;

        i3 = i3 + -1;

        r0[i3] = 48;

        i47 = i47 + 1;

        goto label24;

     label25:
        i48 = i3 + -1;

        r0[i48] = 46;

        i49 = i48 + -1;

        r0[i49] = 48;

        if z0 == 0 goto label26;

        i49 = i49 + -1;

        r0[i49] = 45;

     label26:
        $r14 = new java.lang.String;

        $i34 = b2 - i49;

        specialinvoke $r14.<java.lang.String: void <init>(char[],int,int)>(r0, i49, $i34);

        return $r14;

     label27:
        i50 = i3 + 1;

        b51 = b2;

        $r3 = new java.lang.StringBuilder;

        $i21 = 16 + b51;

        $i23 = $i21 - i50;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i23);

        r2 = $r3;

        if z0 == 0 goto label28;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

     label28:
        $i22 = b51 - i50;

        if $i22 < 1 goto label29;

        $c27 = r0[i3];

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c27);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $i29 = i3 + 1;

        $i26 = b2 - i3;

        $i28 = $i26 - 1;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r0, $i29, $i28);

        goto label30;

     label29:
        $i25 = b2 - i3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r0, i3, $i25);

     label30:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(69);

        $b24 = l45 cmp 0L;

        if $b24 <= 0 goto label31;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(43);

     label31:
        $r8 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l45);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    static long divideLongByBillion(long)
    {
        long l0, l1, l2, l3, l4, $l6, $l7, $l8, $l9, $l10, l11, l12;
        byte $b5;

        l0 := @parameter0: long;

        $b5 = l0 cmp 0L;

        if $b5 < 0 goto label1;

        l3 = 1000000000L;

        l1 = l0 / l3;

        l2 = l0 % l3;

        goto label2;

     label1:
        l11 = l0 >>> 1;

        l4 = 500000000L;

        l1 = l11 / l4;

        l12 = l11 % l4;

        $l7 = l12 << 1;

        $l6 = l0 & 1L;

        l2 = $l7 + $l6;

     label2:
        $l9 = l2 << 32;

        $l8 = l1 & 4294967295L;

        $l10 = $l9 | $l8;

        return $l10;
    }

    static double bigInteger2Double(java.math.BigInteger)
    {
        java.math.BigInteger r0, $r1, $r2, $r3;
        int i0, i2, $i7, $i9, $i10, $i11, $i14, $i23, $i25, $i26, $i27;
        long l1, l3, l4, l5, l6, $l8, $l12, $l16, $l17, $l18, $l20, $l21, l28, l29;
        double $d0, $d1, $d2, $d3, $d4;
        byte $b13, $b15, $b19, $b22, $b24;
        int[] $r4, $r5;
        boolean $z0;

        r0 := @parameter0: java.math.BigInteger;

        virtualinvoke r0.<java.math.BigInteger: void prepareJavaRepresentation()>();

        $i7 = r0.<java.math.BigInteger: int numberLength>;

        if $i7 < 2 goto label01;

        $i10 = r0.<java.math.BigInteger: int numberLength>;

        if $i10 != 2 goto label02;

        $r5 = r0.<java.math.BigInteger: int[] digits>;

        $i27 = $r5[1];

        if $i27 <= 0 goto label02;

     label01:
        $l8 = virtualinvoke r0.<java.math.BigInteger: long longValue()>();

        $d0 = (double) $l8;

        return $d0;

     label02:
        $i9 = r0.<java.math.BigInteger: int numberLength>;

        if $i9 <= 32 goto label05;

        $i25 = r0.<java.math.BigInteger: int sign>;

        if $i25 <= 0 goto label03;

        $d4 = #Infinity;

        goto label04;

     label03:
        $d4 = #-Infinity;

     label04:
        return $d4;

     label05:
        $r1 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger abs()>();

        i0 = virtualinvoke $r1.<java.math.BigInteger: int bitLength()>();

        $i11 = i0 - 1;

        l1 = (long) $i11;

        i2 = i0 - 54;

        $r2 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger abs()>();

        $r3 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger shiftRight(int)>(i2);

        l3 = virtualinvoke $r3.<java.math.BigInteger: long longValue()>();

        l4 = l3 & 9007199254740991L;

        $b13 = l1 cmp 1023L;

        if $b13 != 0 goto label11;

        $b24 = l4 cmp 9007199254740991L;

        if $b24 != 0 goto label08;

        $i26 = r0.<java.math.BigInteger: int sign>;

        if $i26 <= 0 goto label06;

        $d2 = #Infinity;

        goto label07;

     label06:
        $d2 = #-Infinity;

     label07:
        return $d2;

     label08:
        $b22 = l4 cmp 9007199254740990L;

        if $b22 != 0 goto label11;

        $i23 = r0.<java.math.BigInteger: int sign>;

        if $i23 <= 0 goto label09;

        $d3 = 1.7976931348623157E308;

        goto label10;

     label09:
        $d3 = -1.7976931348623157E308;

     label10:
        return $d3;

     label11:
        $l12 = l4 & 1L;

        $b15 = $l12 cmp 1L;

        if $b15 != 0 goto label13;

        $l21 = l4 & 2L;

        $b19 = $l21 cmp 2L;

        if $b19 == 0 goto label12;

        $r4 = r0.<java.math.BigInteger: int[] digits>;

        $z0 = staticinvoke <java.math.BitLevel: boolean nonZeroDroppedBits(int,int[])>(i2, $r4);

        if $z0 == 0 goto label13;

     label12:
        l4 = l4 + 2L;

     label13:
        l28 = l4 >> 1;

        $i14 = r0.<java.math.BigInteger: int sign>;

        if $i14 >= 0 goto label14;

        $l20 = -9223372036854775808L;

        goto label15;

     label14:
        $l20 = 0L;

     label15:
        l5 = $l20;

        $l17 = 1023L + l1;

        $l16 = $l17 << 52;

        l29 = $l16 & 9218868437227405312L;

        $l18 = l5 | l29;

        l6 = $l18 | l28;

        $d1 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>(l6);

        return $d1;
    }

    static void <clinit>()
    {
        int[] $r0, $r1;

        $r0 = newarray (int)[37];

        $r0[0] = -1;

        $r0[1] = -1;

        $r0[2] = 31;

        $r0[3] = 19;

        $r0[4] = 15;

        $r0[5] = 13;

        $r0[6] = 11;

        $r0[7] = 11;

        $r0[8] = 10;

        $r0[9] = 9;

        $r0[10] = 9;

        $r0[11] = 8;

        $r0[12] = 8;

        $r0[13] = 8;

        $r0[14] = 8;

        $r0[15] = 7;

        $r0[16] = 7;

        $r0[17] = 7;

        $r0[18] = 7;

        $r0[19] = 7;

        $r0[20] = 7;

        $r0[21] = 7;

        $r0[22] = 6;

        $r0[23] = 6;

        $r0[24] = 6;

        $r0[25] = 6;

        $r0[26] = 6;

        $r0[27] = 6;

        $r0[28] = 6;

        $r0[29] = 6;

        $r0[30] = 6;

        $r0[31] = 6;

        $r0[32] = 6;

        $r0[33] = 6;

        $r0[34] = 6;

        $r0[35] = 6;

        $r0[36] = 5;

        <java.math.Conversion: int[] digitFitInInt> = $r0;

        $r1 = newarray (int)[35];

        $r1[0] = -2147483648;

        $r1[1] = 1162261467;

        $r1[2] = 1073741824;

        $r1[3] = 1220703125;

        $r1[4] = 362797056;

        $r1[5] = 1977326743;

        $r1[6] = 1073741824;

        $r1[7] = 387420489;

        $r1[8] = 1000000000;

        $r1[9] = 214358881;

        $r1[10] = 429981696;

        $r1[11] = 815730721;

        $r1[12] = 1475789056;

        $r1[13] = 170859375;

        $r1[14] = 268435456;

        $r1[15] = 410338673;

        $r1[16] = 612220032;

        $r1[17] = 893871739;

        $r1[18] = 1280000000;

        $r1[19] = 1801088541;

        $r1[20] = 113379904;

        $r1[21] = 148035889;

        $r1[22] = 191102976;

        $r1[23] = 244140625;

        $r1[24] = 308915776;

        $r1[25] = 387420489;

        $r1[26] = 481890304;

        $r1[27] = 594823321;

        $r1[28] = 729000000;

        $r1[29] = 887503681;

        $r1[30] = 1073741824;

        $r1[31] = 1291467969;

        $r1[32] = 1544804416;

        $r1[33] = 1838265625;

        $r1[34] = 60466176;

        <java.math.Conversion: int[] bigRadices> = $r1;

        return;
    }
}
