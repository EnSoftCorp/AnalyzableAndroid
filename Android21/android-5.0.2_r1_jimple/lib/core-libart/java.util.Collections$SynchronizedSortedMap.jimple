class java.util.Collections$SynchronizedSortedMap extends java.util.Collections$SynchronizedMap implements java.util.SortedMap
{
    private static final long serialVersionUID;
    private final java.util.SortedMap sm;

    void <init>(java.util.SortedMap)
    {
        java.util.Collections$SynchronizedSortedMap r0;
        java.util.SortedMap r1;

        r0 := @this: java.util.Collections$SynchronizedSortedMap;

        r1 := @parameter0: java.util.SortedMap;

        specialinvoke r0.<java.util.Collections$SynchronizedMap: void <init>(java.util.Map)>(r1);

        r0.<java.util.Collections$SynchronizedSortedMap: java.util.SortedMap sm> = r1;

        return;
    }

    void <init>(java.util.SortedMap, java.lang.Object)
    {
        java.util.Collections$SynchronizedSortedMap r0;
        java.util.SortedMap r1;
        java.lang.Object r2;

        r0 := @this: java.util.Collections$SynchronizedSortedMap;

        r1 := @parameter0: java.util.SortedMap;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.util.Collections$SynchronizedMap: void <init>(java.util.Map,java.lang.Object)>(r1, r2);

        r0.<java.util.Collections$SynchronizedSortedMap: java.util.SortedMap sm> = r1;

        return;
    }

    public java.util.Comparator comparator()
    {
        java.util.Collections$SynchronizedSortedMap r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        java.util.SortedMap $r4;
        java.util.Comparator $r5;

        r0 := @this: java.util.Collections$SynchronizedSortedMap;

        $r3 = r0.<java.util.Collections$SynchronizedSortedMap: java.lang.Object mutex>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<java.util.Collections$SynchronizedSortedMap: java.util.SortedMap sm>;

        $r5 = interfaceinvoke $r4.<java.util.SortedMap: java.util.Comparator comparator()>();

        exitmonitor r1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Object firstKey()
    {
        java.util.Collections$SynchronizedSortedMap r0;
        java.lang.Object r1, $r3, $r5;
        java.lang.Throwable r2, $r6;
        java.util.SortedMap $r4;

        r0 := @this: java.util.Collections$SynchronizedSortedMap;

        $r3 = r0.<java.util.Collections$SynchronizedSortedMap: java.lang.Object mutex>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<java.util.Collections$SynchronizedSortedMap: java.util.SortedMap sm>;

        $r5 = interfaceinvoke $r4.<java.util.SortedMap: java.lang.Object firstKey()>();

        exitmonitor r1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.SortedMap headMap(java.lang.Object)
    {
        java.util.Collections$SynchronizedSortedMap r0, $r5;
        java.lang.Object r1, r2, $r4, $r8;
        java.lang.Throwable r3, $r9;
        java.util.SortedMap $r6, $r7;

        r0 := @this: java.util.Collections$SynchronizedSortedMap;

        r1 := @parameter0: java.lang.Object;

        $r4 = r0.<java.util.Collections$SynchronizedSortedMap: java.lang.Object mutex>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = new java.util.Collections$SynchronizedSortedMap;

        $r6 = r0.<java.util.Collections$SynchronizedSortedMap: java.util.SortedMap sm>;

        $r7 = interfaceinvoke $r6.<java.util.SortedMap: java.util.SortedMap headMap(java.lang.Object)>(r1);

        $r8 = r0.<java.util.Collections$SynchronizedSortedMap: java.lang.Object mutex>;

        specialinvoke $r5.<java.util.Collections$SynchronizedSortedMap: void <init>(java.util.SortedMap,java.lang.Object)>($r7, $r8);

        exitmonitor r2;

     label2:
        return $r5;

     label3:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Object lastKey()
    {
        java.util.Collections$SynchronizedSortedMap r0;
        java.lang.Object r1, $r3, $r5;
        java.lang.Throwable r2, $r6;
        java.util.SortedMap $r4;

        r0 := @this: java.util.Collections$SynchronizedSortedMap;

        $r3 = r0.<java.util.Collections$SynchronizedSortedMap: java.lang.Object mutex>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<java.util.Collections$SynchronizedSortedMap: java.util.SortedMap sm>;

        $r5 = interfaceinvoke $r4.<java.util.SortedMap: java.lang.Object lastKey()>();

        exitmonitor r1;

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.SortedMap subMap(java.lang.Object, java.lang.Object)
    {
        java.util.Collections$SynchronizedSortedMap r0, $r6;
        java.lang.Object r1, r2, r3, $r5, $r9;
        java.lang.Throwable r4, $r10;
        java.util.SortedMap $r7, $r8;

        r0 := @this: java.util.Collections$SynchronizedSortedMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r5 = r0.<java.util.Collections$SynchronizedSortedMap: java.lang.Object mutex>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = new java.util.Collections$SynchronizedSortedMap;

        $r7 = r0.<java.util.Collections$SynchronizedSortedMap: java.util.SortedMap sm>;

        $r8 = interfaceinvoke $r7.<java.util.SortedMap: java.util.SortedMap subMap(java.lang.Object,java.lang.Object)>(r1, r2);

        $r9 = r0.<java.util.Collections$SynchronizedSortedMap: java.lang.Object mutex>;

        specialinvoke $r6.<java.util.Collections$SynchronizedSortedMap: void <init>(java.util.SortedMap,java.lang.Object)>($r8, $r9);

        exitmonitor r3;

     label2:
        return $r6;

     label3:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r3;

     label4:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.SortedMap tailMap(java.lang.Object)
    {
        java.util.Collections$SynchronizedSortedMap r0, $r5;
        java.lang.Object r1, r2, $r4, $r8;
        java.lang.Throwable r3, $r9;
        java.util.SortedMap $r6, $r7;

        r0 := @this: java.util.Collections$SynchronizedSortedMap;

        r1 := @parameter0: java.lang.Object;

        $r4 = r0.<java.util.Collections$SynchronizedSortedMap: java.lang.Object mutex>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = new java.util.Collections$SynchronizedSortedMap;

        $r6 = r0.<java.util.Collections$SynchronizedSortedMap: java.util.SortedMap sm>;

        $r7 = interfaceinvoke $r6.<java.util.SortedMap: java.util.SortedMap tailMap(java.lang.Object)>(r1);

        $r8 = r0.<java.util.Collections$SynchronizedSortedMap: java.lang.Object mutex>;

        specialinvoke $r5.<java.util.Collections$SynchronizedSortedMap: void <init>(java.util.SortedMap,java.lang.Object)>($r7, $r8);

        exitmonitor r2;

     label2:
        return $r5;

     label3:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.util.Collections$SynchronizedSortedMap r0;
        java.io.ObjectOutputStream r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: java.util.Collections$SynchronizedSortedMap;

        r1 := @parameter0: java.io.ObjectOutputStream;

        $r4 = r0.<java.util.Collections$SynchronizedSortedMap: java.lang.Object mutex>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void <clinit>()
    {
        <java.util.Collections$SynchronizedSortedMap: long serialVersionUID> = -8798146769416483793L;

        return;
    }
}
