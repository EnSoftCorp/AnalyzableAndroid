class libcore.io.StrictLineReader$1 extends java.io.ByteArrayOutputStream
{
    final libcore.io.StrictLineReader this$0;

    void <init>(libcore.io.StrictLineReader, int)
    {
        libcore.io.StrictLineReader$1 r0;
        libcore.io.StrictLineReader r1;
        int i0;

        r0 := @this: libcore.io.StrictLineReader$1;

        r1 := @parameter0: libcore.io.StrictLineReader;

        i0 := @parameter1: int;

        r0.<libcore.io.StrictLineReader$1: libcore.io.StrictLineReader this$0> = r1;

        specialinvoke r0.<java.io.ByteArrayOutputStream: void <init>(int)>(i0);

        return;
    }

    public java.lang.String toString()
    {
        libcore.io.StrictLineReader$1 r0;
        int i0, $i1, $i2, $i3, $i5, $i6;
        java.lang.String $r1;
        libcore.io.StrictLineReader $r2;
        byte[] $r3, $r5;
        java.nio.charset.Charset $r4;
        byte $b4;

        r0 := @this: libcore.io.StrictLineReader$1;

        $i1 = r0.<libcore.io.StrictLineReader$1: int count>;

        if $i1 <= 0 goto label1;

        $r5 = r0.<libcore.io.StrictLineReader$1: byte[] buf>;

        $i2 = r0.<libcore.io.StrictLineReader$1: int count>;

        $i3 = $i2 - 1;

        $b4 = $r5[$i3];

        if $b4 != 13 goto label1;

        $i5 = r0.<libcore.io.StrictLineReader$1: int count>;

        $i6 = $i5 - 1;

        goto label2;

     label1:
        $i6 = r0.<libcore.io.StrictLineReader$1: int count>;

     label2:
        i0 = $i6;

        $r1 = new java.lang.String;

        $r3 = r0.<libcore.io.StrictLineReader$1: byte[] buf>;

        $r2 = r0.<libcore.io.StrictLineReader$1: libcore.io.StrictLineReader this$0>;

        $r4 = staticinvoke <libcore.io.StrictLineReader: java.nio.charset.Charset access$000(libcore.io.StrictLineReader)>($r2);

        specialinvoke $r1.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r3, 0, i0, $r4);

        return $r1;
    }
}
