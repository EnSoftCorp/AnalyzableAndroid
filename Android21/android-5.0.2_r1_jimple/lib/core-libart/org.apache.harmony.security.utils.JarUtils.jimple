public class org.apache.harmony.security.utils.JarUtils extends java.lang.Object
{
    private static final int[] MESSAGE_DIGEST_OID;

    public void <init>()
    {
        org.apache.harmony.security.utils.JarUtils r0;

        r0 := @this: org.apache.harmony.security.utils.JarUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.security.cert.Certificate[] verifySignature(java.io.InputStream, java.io.InputStream) throws java.io.IOException, java.security.GeneralSecurityException
    {
        java.io.InputStream r0, r1;
        org.apache.harmony.security.asn1.BerInputStream r2, $r19;
        org.apache.harmony.security.pkcs7.ContentInfo r3;
        org.apache.harmony.security.pkcs7.SignedData r4;
        java.util.List r5, r67, r77;
        java.security.cert.X509Certificate[] r6, $r27;
        java.security.cert.CertificateFactory r7;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        java.util.Iterator r8, r18, $r43;
        org.apache.harmony.security.x509.Certificate r9;
        byte[] r10, r16, $r26, $r29, $r39, r78, r80;
        java.io.ByteArrayInputStream r11, $r64;
        java.lang.String r12, r13, r14, r71, r72, r73, r74, r75, r76;
        java.security.Signature r15;
        org.apache.harmony.security.x501.AttributeTypeAndValue r17;
        java.util.Collection r20;
        java.lang.Object $r21, $r23, $r36, $r44, $r53;
        org.apache.harmony.security.asn1.ASN1Sequence $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.security.cert.X509Certificate $r24, $r25, $r28, $r55, $r56, $r60;
        java.lang.SecurityException $r30, $r31, $r35, $r40, $r41, $r50;
        int[] $r32, $r38;
        org.apache.harmony.security.x501.AttributeValue $r33;
        org.apache.harmony.security.asn1.ASN1OctetString $r34;
        org.apache.harmony.security.utils.ObjectIdentifier $r37;
        java.lang.StringBuilder $r42, $r45, $r46, $r47, $r48, $r49, $r51, $r52;
        java.math.BigInteger $r54, r70;
        java.security.Principal $r57;
        java.security.NoSuchAlgorithmException $r58, $r59, $r65, $r66;
        java.io.IOException $r61;
        org.apache.harmony.security.utils.JarUtils$VerbatimX509Certificate $r62;
        java.security.cert.Certificate $r63;
        org.apache.harmony.security.pkcs7.SignerInfo r68;
        javax.security.auth.x500.X500Principal r69;
        java.security.MessageDigest r79;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.io.InputStream;

        $r19 = new org.apache.harmony.security.asn1.BerInputStream;

        specialinvoke $r19.<org.apache.harmony.security.asn1.BerInputStream: void <init>(java.io.InputStream)>(r1);

        r2 = $r19;

        $r22 = <org.apache.harmony.security.pkcs7.ContentInfo: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r21 = virtualinvoke $r22.<org.apache.harmony.security.asn1.ASN1Sequence: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)>(r2);

        r3 = (org.apache.harmony.security.pkcs7.ContentInfo) $r21;

        r4 = virtualinvoke r3.<org.apache.harmony.security.pkcs7.ContentInfo: org.apache.harmony.security.pkcs7.SignedData getSignedData()>();

        if r4 != null goto label01;

        $r61 = new java.io.IOException;

        specialinvoke $r61.<java.io.IOException: void <init>(java.lang.String)>("No SignedData found");

        throw $r61;

     label01:
        r5 = virtualinvoke r4.<org.apache.harmony.security.pkcs7.SignedData: java.util.List getCertificates()>();

        $z0 = interfaceinvoke r5.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label02;

        return null;

     label02:
        $i2 = interfaceinvoke r5.<java.util.Collection: int size()>();

        r6 = newarray (java.security.cert.X509Certificate)[$i2];

        r7 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        i0 = 0;

        r8 = interfaceinvoke r5.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        $r53 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.harmony.security.x509.Certificate) $r53;

        r10 = virtualinvoke r9.<org.apache.harmony.security.x509.Certificate: byte[] getEncoded()>();

        $r64 = new java.io.ByteArrayInputStream;

        specialinvoke $r64.<java.io.ByteArrayInputStream: void <init>(byte[])>(r10);

        r11 = $r64;

        $i7 = i0;

        i0 = i0 + 1;

        $r62 = new org.apache.harmony.security.utils.JarUtils$VerbatimX509Certificate;

        $r63 = virtualinvoke r7.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>(r11);

        $r60 = (java.security.cert.X509Certificate) $r63;

        specialinvoke $r62.<org.apache.harmony.security.utils.JarUtils$VerbatimX509Certificate: void <init>(java.security.cert.X509Certificate,byte[])>($r60, r10);

        r6[$i7] = $r62;

        goto label03;

     label04:
        r67 = virtualinvoke r4.<org.apache.harmony.security.pkcs7.SignedData: java.util.List getSignerInfos()>();

        $z2 = interfaceinvoke r67.<java.util.List: boolean isEmpty()>();

        if $z2 != 0 goto label05;

        $r23 = interfaceinvoke r67.<java.util.List: java.lang.Object get(int)>(0);

        r68 = (org.apache.harmony.security.pkcs7.SignerInfo) $r23;

        goto label06;

     label05:
        return null;

     label06:
        r69 = virtualinvoke r68.<org.apache.harmony.security.pkcs7.SignerInfo: javax.security.auth.x500.X500Principal getIssuer()>();

        r70 = virtualinvoke r68.<org.apache.harmony.security.pkcs7.SignerInfo: java.math.BigInteger getSerialNumber()>();

        i1 = 0;

        i8 = 0;

     label07:
        $i3 = lengthof r6;

        if i8 >= $i3 goto label09;

        $r56 = r6[i8];

        $r57 = virtualinvoke $r56.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();

        $z9 = virtualinvoke r69.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r57);

        if $z9 == 0 goto label08;

        $r55 = r6[i8];

        $r54 = virtualinvoke $r55.<java.security.cert.X509Certificate: java.math.BigInteger getSerialNumber()>();

        $z8 = virtualinvoke r70.<java.math.BigInteger: boolean equals(java.lang.Object)>($r54);

        if $z8 == 0 goto label08;

        i1 = i8;

        goto label09;

     label08:
        i8 = i8 + 1;

        goto label07;

     label09:
        $i4 = lengthof r6;

        if i8 != $i4 goto label10;

        return null;

     label10:
        $r24 = r6[i1];

        $z3 = virtualinvoke $r24.<java.security.cert.X509Certificate: boolean hasUnsupportedCriticalExtension()>();

        if $z3 == 0 goto label11;

        $r50 = new java.lang.SecurityException;

        specialinvoke $r50.<java.lang.SecurityException: void <init>(java.lang.String)>("Can not recognize a critical extension");

        throw $r50;

     label11:
        r12 = virtualinvoke r68.<org.apache.harmony.security.pkcs7.SignerInfo: java.lang.String getDigestAlgorithm()>();

        r13 = virtualinvoke r68.<org.apache.harmony.security.pkcs7.SignerInfo: java.lang.String getDigestAlgorithmName()>();

        r14 = virtualinvoke r68.<org.apache.harmony.security.pkcs7.SignerInfo: java.lang.String getDigestEncryptionAlgorithm()>();

        r15 = null;

        if r14 == null goto label19;

        r71 = r14;

     label12:
        r15 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(r71);

     label13:
        goto label15;

     label14:
        $r58 := @caughtexception;

     label15:
        r72 = virtualinvoke r68.<org.apache.harmony.security.pkcs7.SignerInfo: java.lang.String getDigestEncryptionAlgorithmName()>();

        if r15 != null goto label19;

        if r72 == null goto label19;

        r73 = r72;

     label16:
        r15 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(r73);

     label17:
        goto label19;

     label18:
        $r66 := @caughtexception;

     label19:
        if r15 != null goto label27;

        if r12 == null goto label27;

        if r14 == null goto label27;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("with");

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        r74 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

     label20:
        r15 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(r74);

     label21:
        goto label23;

     label22:
        $r65 := @caughtexception;

     label23:
        if r15 != null goto label27;

        r75 = virtualinvoke r68.<org.apache.harmony.security.pkcs7.SignerInfo: java.lang.String getDigestEncryptionAlgorithmName()>();

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r52 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("with");

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r75);

        r76 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

     label24:
        r15 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(r76);

     label25:
        goto label27;

     label26:
        $r59 := @caughtexception;

     label27:
        if r15 != null goto label28;

        return null;

     label28:
        $r25 = r6[i1];

        virtualinvoke r15.<java.security.Signature: void initVerify(java.security.cert.Certificate)>($r25);

        r77 = virtualinvoke r68.<org.apache.harmony.security.pkcs7.SignerInfo: java.util.List getAuthenticatedAttributes()>();

        $i5 = virtualinvoke r0.<java.io.InputStream: int available()>();

        r78 = newarray (byte)[$i5];

        virtualinvoke r0.<java.io.InputStream: int read(byte[])>(r78);

        if r77 != null goto label29;

        virtualinvoke r15.<java.security.Signature: void update(byte[])>(r78);

        goto label39;

     label29:
        $r26 = virtualinvoke r68.<org.apache.harmony.security.pkcs7.SignerInfo: byte[] getEncodedAuthenticatedAttributes()>();

        virtualinvoke r15.<java.security.Signature: void update(byte[])>($r26);

        r16 = null;

        r18 = interfaceinvoke r77.<java.util.List: java.util.Iterator iterator()>();

     label30:
        $z5 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label34;

        $r36 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r17 = (org.apache.harmony.security.x501.AttributeTypeAndValue) $r36;

        $r37 = virtualinvoke r17.<org.apache.harmony.security.x501.AttributeTypeAndValue: org.apache.harmony.security.utils.ObjectIdentifier getType()>();

        $r38 = virtualinvoke $r37.<org.apache.harmony.security.utils.ObjectIdentifier: int[] getOid()>();

        $r32 = <org.apache.harmony.security.utils.JarUtils: int[] MESSAGE_DIGEST_OID>;

        $z7 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r38, $r32);

        if $z7 == 0 goto label33;

        if r16 == null goto label31;

        $r41 = new java.lang.SecurityException;

        specialinvoke $r41.<java.lang.SecurityException: void <init>(java.lang.String)>("Too many MessageDigest attributes");

        throw $r41;

     label31:
        $r33 = virtualinvoke r17.<org.apache.harmony.security.x501.AttributeTypeAndValue: org.apache.harmony.security.x501.AttributeValue getValue()>();

        $r34 = staticinvoke <org.apache.harmony.security.asn1.ASN1OctetString: org.apache.harmony.security.asn1.ASN1OctetString getInstance()>();

        r20 = virtualinvoke $r33.<org.apache.harmony.security.x501.AttributeValue: java.util.Collection getValues(org.apache.harmony.security.asn1.ASN1Type)>($r34);

        $i6 = interfaceinvoke r20.<java.util.Collection: int size()>();

        if $i6 == 1 goto label32;

        $r40 = new java.lang.SecurityException;

        specialinvoke $r40.<java.lang.SecurityException: void <init>(java.lang.String)>("Too many values for MessageDigest attribute");

        throw $r40;

     label32:
        $r43 = interfaceinvoke r20.<java.util.Collection: java.util.Iterator iterator()>();

        $r44 = interfaceinvoke $r43.<java.util.Iterator: java.lang.Object next()>();

        $r39 = (byte[]) $r44;

        r16 = (byte[]) $r39;

     label33:
        goto label30;

     label34:
        if r16 != null goto label35;

        $r35 = new java.lang.SecurityException;

        specialinvoke $r35.<java.lang.SecurityException: void <init>(java.lang.String)>("Missing MessageDigest in Authenticated Attributes");

        throw $r35;

     label35:
        r79 = null;

        if r12 == null goto label36;

        r79 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r12);

     label36:
        if r79 != null goto label37;

        if r13 == null goto label37;

        r79 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r13);

     label37:
        if r79 != null goto label38;

        return null;

     label38:
        r80 = virtualinvoke r79.<java.security.MessageDigest: byte[] digest(byte[])>(r78);

        $z4 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r16, r80);

        if $z4 != 0 goto label39;

        $r30 = new java.lang.SecurityException;

        specialinvoke $r30.<java.lang.SecurityException: void <init>(java.lang.String)>("Incorrect MD");

        throw $r30;

     label39:
        $r29 = virtualinvoke r68.<org.apache.harmony.security.pkcs7.SignerInfo: byte[] getEncryptedDigest()>();

        $z6 = virtualinvoke r15.<java.security.Signature: boolean verify(byte[])>($r29);

        if $z6 != 0 goto label40;

        $r31 = new java.lang.SecurityException;

        specialinvoke $r31.<java.lang.SecurityException: void <init>(java.lang.String)>("Incorrect signature");

        throw $r31;

     label40:
        $r28 = r6[i1];

        $r27 = staticinvoke <org.apache.harmony.security.utils.JarUtils: java.security.cert.X509Certificate[] createChain(java.security.cert.X509Certificate,java.security.cert.X509Certificate[])>($r28, r6);

        return $r27;

        catch java.security.NoSuchAlgorithmException from label12 to label13 with label14;
        catch java.security.NoSuchAlgorithmException from label16 to label17 with label18;
        catch java.security.NoSuchAlgorithmException from label20 to label21 with label22;
        catch java.security.NoSuchAlgorithmException from label24 to label25 with label26;
    }

    private static java.security.cert.X509Certificate[] createChain(java.security.cert.X509Certificate, java.security.cert.X509Certificate[])
    {
        java.security.cert.X509Certificate r0, r4;
        java.security.cert.X509Certificate[] r1, $r8, $r9, $r11;
        java.security.Principal r2, $r5, $r7;
        java.util.ArrayList r3, $r6;
        int i0, $i1, $i2;
        boolean $z0, $z2;
        java.lang.Object[] $r10;

        r0 := @parameter0: java.security.cert.X509Certificate;

        r1 := @parameter1: java.security.cert.X509Certificate[];

        r2 = virtualinvoke r0.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();

        $r5 = virtualinvoke r0.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $z0 = interfaceinvoke $r5.<java.security.Principal: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        $r11 = newarray (java.security.cert.X509Certificate)[1];

        $r11[0] = r0;

        return $r11;

     label1:
        $r6 = new java.util.ArrayList;

        $i1 = lengthof r1;

        $i2 = $i1 + 1;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i2);

        r3 = $r6;

        virtualinvoke r3.<java.util.ArrayList: void add(int,java.lang.Object)>(0, r0);

        i0 = 1;

     label2:
        r4 = staticinvoke <org.apache.harmony.security.utils.JarUtils: java.security.cert.X509Certificate findCert(java.security.Principal,java.security.cert.X509Certificate[])>(r2, r1);

        if r4 != null goto label3;

        goto label4;

     label3:
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        i0 = i0 + 1;

        r2 = virtualinvoke r4.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();

        $r7 = virtualinvoke r4.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $z2 = interfaceinvoke $r7.<java.security.Principal: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label2;

        goto label4;

     label4:
        $r8 = newarray (java.security.cert.X509Certificate)[i0];

        $r10 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        $r9 = (java.security.cert.X509Certificate[]) $r10;

        return $r9;
    }

    private static java.security.cert.X509Certificate findCert(java.security.Principal, java.security.cert.X509Certificate[])
    {
        java.security.Principal r0, $r3;
        java.security.cert.X509Certificate[] r1;
        int i0, $i1;
        java.security.cert.X509Certificate $r2, $r4;
        boolean $z0;

        r0 := @parameter0: java.security.Principal;

        r1 := @parameter1: java.security.cert.X509Certificate[];

        i0 = 0;

     label1:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label3;

        $r2 = r1[i0];

        $r3 = virtualinvoke $r2.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $z0 = interfaceinvoke r0.<java.security.Principal: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r4 = r1[i0];

        return $r4;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return null;
    }

    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[7];

        $r0[0] = 1;

        $r0[1] = 2;

        $r0[2] = 840;

        $r0[3] = 113549;

        $r0[4] = 1;

        $r0[5] = 9;

        $r0[6] = 4;

        <org.apache.harmony.security.utils.JarUtils: int[] MESSAGE_DIGEST_OID> = $r0;

        return;
    }
}
