final class java.lang.DexCache extends java.lang.Object
{
    private volatile com.android.dex.Dex dex;
    java.lang.String location;
    java.lang.reflect.ArtField[] resolvedFields;
    java.lang.reflect.ArtMethod[] resolvedMethods;
    java.lang.Class[] resolvedTypes;
    java.lang.String[] strings;
    private long dexFile;

    private void <init>()
    {
        java.lang.DexCache r0;

        r0 := @this: java.lang.DexCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    com.android.dex.Dex getDex()
    {
        java.lang.DexCache r0, r2;
        com.android.dex.Dex r1, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: java.lang.DexCache;

        r1 = r0.<java.lang.DexCache: com.android.dex.Dex dex>;

        if r1 != null goto label6;

        r2 = r0;

        entermonitor r0;

     label1:
        r1 = r0.<java.lang.DexCache: com.android.dex.Dex dex>;

        if r1 != null goto label2;

        $r5 = specialinvoke r0.<java.lang.DexCache: com.android.dex.Dex getDexNative()>();

        r1 = $r5;

        r0.<java.lang.DexCache: com.android.dex.Dex dex> = $r5;

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return r1;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private native com.android.dex.Dex getDexNative();
}
