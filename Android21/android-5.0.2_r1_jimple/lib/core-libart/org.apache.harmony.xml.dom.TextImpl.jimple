public class org.apache.harmony.xml.dom.TextImpl extends org.apache.harmony.xml.dom.CharacterDataImpl implements org.w3c.dom.Text
{

    public void <init>(org.apache.harmony.xml.dom.DocumentImpl, java.lang.String)
    {
        org.apache.harmony.xml.dom.TextImpl r0;
        org.apache.harmony.xml.dom.DocumentImpl r1;
        java.lang.String r2;

        r0 := @this: org.apache.harmony.xml.dom.TextImpl;

        r1 := @parameter0: org.apache.harmony.xml.dom.DocumentImpl;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.harmony.xml.dom.CharacterDataImpl: void <init>(org.apache.harmony.xml.dom.DocumentImpl,java.lang.String)>(r1, r2);

        return;
    }

    public java.lang.String getNodeName()
    {
        org.apache.harmony.xml.dom.TextImpl r0;

        r0 := @this: org.apache.harmony.xml.dom.TextImpl;

        return "#text";
    }

    public short getNodeType()
    {
        org.apache.harmony.xml.dom.TextImpl r0;

        r0 := @this: org.apache.harmony.xml.dom.TextImpl;

        return 3;
    }

    public final org.w3c.dom.Text splitText(int) throws org.w3c.dom.DOMException
    {
        org.apache.harmony.xml.dom.TextImpl r0, r1;
        int i0, $i1, $i2;
        org.w3c.dom.Node r2, $r5, $r7;
        org.apache.harmony.xml.dom.DocumentImpl $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.harmony.xml.dom.TextImpl;

        i0 := @parameter0: int;

        $r3 = r0.<org.apache.harmony.xml.dom.TextImpl: org.apache.harmony.xml.dom.DocumentImpl document>;

        $i1 = virtualinvoke r0.<org.apache.harmony.xml.dom.TextImpl: int getLength()>();

        $i2 = $i1 - i0;

        $r4 = virtualinvoke r0.<org.apache.harmony.xml.dom.TextImpl: java.lang.String substringData(int,int)>(i0, $i2);

        r1 = virtualinvoke $r3.<org.apache.harmony.xml.dom.DocumentImpl: org.apache.harmony.xml.dom.TextImpl createTextNode(java.lang.String)>($r4);

        virtualinvoke r0.<org.apache.harmony.xml.dom.TextImpl: void deleteData(int,int)>(0, i0);

        r2 = virtualinvoke r0.<org.apache.harmony.xml.dom.TextImpl: org.w3c.dom.Node getNextSibling()>();

        if r2 != null goto label1;

        $r7 = virtualinvoke r0.<org.apache.harmony.xml.dom.TextImpl: org.w3c.dom.Node getParentNode()>();

        interfaceinvoke $r7.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r1);

        goto label2;

     label1:
        $r5 = virtualinvoke r0.<org.apache.harmony.xml.dom.TextImpl: org.w3c.dom.Node getParentNode()>();

        interfaceinvoke $r5.<org.w3c.dom.Node: org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)>(r1, r2);

     label2:
        return r0;
    }

    public final boolean isElementContentWhitespace()
    {
        org.apache.harmony.xml.dom.TextImpl r0;

        r0 := @this: org.apache.harmony.xml.dom.TextImpl;

        return 0;
    }

    public final java.lang.String getWholeText()
    {
        org.apache.harmony.xml.dom.TextImpl r0, r2;
        java.lang.StringBuilder r1, $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.harmony.xml.dom.TextImpl;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r1 = $r3;

        r2 = specialinvoke r0.<org.apache.harmony.xml.dom.TextImpl: org.apache.harmony.xml.dom.TextImpl firstTextNodeInCurrentRun()>();

     label1:
        if r2 == null goto label2;

        virtualinvoke r2.<org.apache.harmony.xml.dom.TextImpl: void appendDataTo(java.lang.StringBuilder)>(r1);

        r2 = specialinvoke r2.<org.apache.harmony.xml.dom.TextImpl: org.apache.harmony.xml.dom.TextImpl nextTextNode()>();

        goto label1;

     label2:
        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public final org.w3c.dom.Text replaceWholeText(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.harmony.xml.dom.TextImpl r0, r3, r4, r5;
        java.lang.String r1;
        org.w3c.dom.Node r2;
        int $i0;

        r0 := @this: org.apache.harmony.xml.dom.TextImpl;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.apache.harmony.xml.dom.TextImpl: org.w3c.dom.Node getParentNode()>();

        r3 = null;

        r4 = specialinvoke r0.<org.apache.harmony.xml.dom.TextImpl: org.apache.harmony.xml.dom.TextImpl firstTextNodeInCurrentRun()>();

     label1:
        if r4 == null goto label3;

        if r4 != r0 goto label2;

        if r1 == null goto label2;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        virtualinvoke r0.<org.apache.harmony.xml.dom.TextImpl: void setData(java.lang.String)>(r1);

        r3 = r0;

        r4 = specialinvoke r4.<org.apache.harmony.xml.dom.TextImpl: org.apache.harmony.xml.dom.TextImpl nextTextNode()>();

        goto label1;

     label2:
        r5 = r4;

        r4 = specialinvoke r4.<org.apache.harmony.xml.dom.TextImpl: org.apache.harmony.xml.dom.TextImpl nextTextNode()>();

        interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>(r5);

        goto label1;

     label3:
        return r3;
    }

    private org.apache.harmony.xml.dom.TextImpl firstTextNodeInCurrentRun()
    {
        org.apache.harmony.xml.dom.TextImpl r0, r1;
        org.w3c.dom.Node r2;
        short s0;

        r0 := @this: org.apache.harmony.xml.dom.TextImpl;

        r1 = r0;

        r2 = virtualinvoke r0.<org.apache.harmony.xml.dom.TextImpl: org.w3c.dom.Node getPreviousSibling()>();

     label1:
        if r2 == null goto label3;

        s0 = interfaceinvoke r2.<org.w3c.dom.Node: short getNodeType()>();

        if s0 == 3 goto label2;

        if s0 != 4 goto label3;

     label2:
        r1 = (org.apache.harmony.xml.dom.TextImpl) r2;

        r2 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>();

        goto label1;

     label3:
        return r1;
    }

    private org.apache.harmony.xml.dom.TextImpl nextTextNode()
    {
        org.apache.harmony.xml.dom.TextImpl r0, $r2;
        org.w3c.dom.Node r1;
        short s0;

        r0 := @this: org.apache.harmony.xml.dom.TextImpl;

        r1 = virtualinvoke r0.<org.apache.harmony.xml.dom.TextImpl: org.w3c.dom.Node getNextSibling()>();

        if r1 != null goto label1;

        return null;

     label1:
        s0 = interfaceinvoke r1.<org.w3c.dom.Node: short getNodeType()>();

        if s0 == 3 goto label2;

        if s0 != 4 goto label3;

     label2:
        $r2 = (org.apache.harmony.xml.dom.TextImpl) r1;

        goto label4;

     label3:
        $r2 = null;

     label4:
        return $r2;
    }

    public final org.apache.harmony.xml.dom.TextImpl minimize()
    {
        org.apache.harmony.xml.dom.TextImpl r0, r2;
        org.w3c.dom.Node r1;
        int $i0;
        short $s1;
        java.lang.StringBuffer $r3, $r4;
        org.apache.harmony.xml.dom.InnerNodeImpl $r6, $r8;

        r0 := @this: org.apache.harmony.xml.dom.TextImpl;

        $i0 = virtualinvoke r0.<org.apache.harmony.xml.dom.TextImpl: int getLength()>();

        if $i0 != 0 goto label1;

        $r8 = r0.<org.apache.harmony.xml.dom.TextImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent>;

        virtualinvoke $r8.<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>(r0);

        return null;

     label1:
        r1 = virtualinvoke r0.<org.apache.harmony.xml.dom.TextImpl: org.w3c.dom.Node getPreviousSibling()>();

        if r1 == null goto label2;

        $s1 = interfaceinvoke r1.<org.w3c.dom.Node: short getNodeType()>();

        if $s1 == 3 goto label3;

     label2:
        return r0;

     label3:
        r2 = (org.apache.harmony.xml.dom.TextImpl) r1;

        $r4 = r2.<org.apache.harmony.xml.dom.TextImpl: java.lang.StringBuffer buffer>;

        $r3 = r0.<org.apache.harmony.xml.dom.TextImpl: java.lang.StringBuffer buffer>;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>($r3);

        $r6 = r0.<org.apache.harmony.xml.dom.TextImpl: org.apache.harmony.xml.dom.InnerNodeImpl parent>;

        virtualinvoke $r6.<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>(r0);

        return r2;
    }
}
