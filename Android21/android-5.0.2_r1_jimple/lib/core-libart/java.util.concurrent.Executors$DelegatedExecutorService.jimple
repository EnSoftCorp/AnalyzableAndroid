class java.util.concurrent.Executors$DelegatedExecutorService extends java.util.concurrent.AbstractExecutorService
{
    private final java.util.concurrent.ExecutorService e;

    void <init>(java.util.concurrent.ExecutorService)
    {
        java.util.concurrent.Executors$DelegatedExecutorService r0;
        java.util.concurrent.ExecutorService r1;

        r0 := @this: java.util.concurrent.Executors$DelegatedExecutorService;

        r1 := @parameter0: java.util.concurrent.ExecutorService;

        specialinvoke r0.<java.util.concurrent.AbstractExecutorService: void <init>()>();

        r0.<java.util.concurrent.Executors$DelegatedExecutorService: java.util.concurrent.ExecutorService e> = r1;

        return;
    }

    public void execute(java.lang.Runnable)
    {
        java.util.concurrent.Executors$DelegatedExecutorService r0;
        java.lang.Runnable r1;
        java.util.concurrent.ExecutorService $r2;

        r0 := @this: java.util.concurrent.Executors$DelegatedExecutorService;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<java.util.concurrent.Executors$DelegatedExecutorService: java.util.concurrent.ExecutorService e>;

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>(r1);

        return;
    }

    public void shutdown()
    {
        java.util.concurrent.Executors$DelegatedExecutorService r0;
        java.util.concurrent.ExecutorService $r1;

        r0 := @this: java.util.concurrent.Executors$DelegatedExecutorService;

        $r1 = r0.<java.util.concurrent.Executors$DelegatedExecutorService: java.util.concurrent.ExecutorService e>;

        interfaceinvoke $r1.<java.util.concurrent.ExecutorService: void shutdown()>();

        return;
    }

    public java.util.List shutdownNow()
    {
        java.util.concurrent.Executors$DelegatedExecutorService r0;
        java.util.concurrent.ExecutorService $r1;
        java.util.List $r2;

        r0 := @this: java.util.concurrent.Executors$DelegatedExecutorService;

        $r1 = r0.<java.util.concurrent.Executors$DelegatedExecutorService: java.util.concurrent.ExecutorService e>;

        $r2 = interfaceinvoke $r1.<java.util.concurrent.ExecutorService: java.util.List shutdownNow()>();

        return $r2;
    }

    public boolean isShutdown()
    {
        java.util.concurrent.Executors$DelegatedExecutorService r0;
        java.util.concurrent.ExecutorService $r1;
        boolean $z0;

        r0 := @this: java.util.concurrent.Executors$DelegatedExecutorService;

        $r1 = r0.<java.util.concurrent.Executors$DelegatedExecutorService: java.util.concurrent.ExecutorService e>;

        $z0 = interfaceinvoke $r1.<java.util.concurrent.ExecutorService: boolean isShutdown()>();

        return $z0;
    }

    public boolean isTerminated()
    {
        java.util.concurrent.Executors$DelegatedExecutorService r0;
        java.util.concurrent.ExecutorService $r1;
        boolean $z0;

        r0 := @this: java.util.concurrent.Executors$DelegatedExecutorService;

        $r1 = r0.<java.util.concurrent.Executors$DelegatedExecutorService: java.util.concurrent.ExecutorService e>;

        $z0 = interfaceinvoke $r1.<java.util.concurrent.ExecutorService: boolean isTerminated()>();

        return $z0;
    }

    public boolean awaitTermination(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        java.util.concurrent.Executors$DelegatedExecutorService r0;
        long l0;
        java.util.concurrent.TimeUnit r1;
        java.util.concurrent.ExecutorService $r2;
        boolean $z0;

        r0 := @this: java.util.concurrent.Executors$DelegatedExecutorService;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = r0.<java.util.concurrent.Executors$DelegatedExecutorService: java.util.concurrent.ExecutorService e>;

        $z0 = interfaceinvoke $r2.<java.util.concurrent.ExecutorService: boolean awaitTermination(long,java.util.concurrent.TimeUnit)>(l0, r1);

        return $z0;
    }

    public java.util.concurrent.Future submit(java.lang.Runnable)
    {
        java.util.concurrent.Executors$DelegatedExecutorService r0;
        java.lang.Runnable r1;
        java.util.concurrent.ExecutorService $r2;
        java.util.concurrent.Future $r3;

        r0 := @this: java.util.concurrent.Executors$DelegatedExecutorService;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<java.util.concurrent.Executors$DelegatedExecutorService: java.util.concurrent.ExecutorService e>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>(r1);

        return $r3;
    }

    public java.util.concurrent.Future submit(java.util.concurrent.Callable)
    {
        java.util.concurrent.Executors$DelegatedExecutorService r0;
        java.util.concurrent.Callable r1;
        java.util.concurrent.ExecutorService $r2;
        java.util.concurrent.Future $r3;

        r0 := @this: java.util.concurrent.Executors$DelegatedExecutorService;

        r1 := @parameter0: java.util.concurrent.Callable;

        $r2 = r0.<java.util.concurrent.Executors$DelegatedExecutorService: java.util.concurrent.ExecutorService e>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>(r1);

        return $r3;
    }

    public java.util.concurrent.Future submit(java.lang.Runnable, java.lang.Object)
    {
        java.util.concurrent.Executors$DelegatedExecutorService r0;
        java.lang.Runnable r1;
        java.lang.Object r2;
        java.util.concurrent.ExecutorService $r3;
        java.util.concurrent.Future $r4;

        r0 := @this: java.util.concurrent.Executors$DelegatedExecutorService;

        r1 := @parameter0: java.lang.Runnable;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<java.util.concurrent.Executors$DelegatedExecutorService: java.util.concurrent.ExecutorService e>;

        $r4 = interfaceinvoke $r3.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object)>(r1, r2);

        return $r4;
    }

    public java.util.List invokeAll(java.util.Collection) throws java.lang.InterruptedException
    {
        java.util.concurrent.Executors$DelegatedExecutorService r0;
        java.util.Collection r1;
        java.util.concurrent.ExecutorService $r2;
        java.util.List $r3;

        r0 := @this: java.util.concurrent.Executors$DelegatedExecutorService;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<java.util.concurrent.Executors$DelegatedExecutorService: java.util.concurrent.ExecutorService e>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.ExecutorService: java.util.List invokeAll(java.util.Collection)>(r1);

        return $r3;
    }

    public java.util.List invokeAll(java.util.Collection, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        java.util.concurrent.Executors$DelegatedExecutorService r0;
        java.util.Collection r1;
        long l0;
        java.util.concurrent.TimeUnit r2;
        java.util.concurrent.ExecutorService $r3;
        java.util.List $r4;

        r0 := @this: java.util.concurrent.Executors$DelegatedExecutorService;

        r1 := @parameter0: java.util.Collection;

        l0 := @parameter1: long;

        r2 := @parameter2: java.util.concurrent.TimeUnit;

        $r3 = r0.<java.util.concurrent.Executors$DelegatedExecutorService: java.util.concurrent.ExecutorService e>;

        $r4 = interfaceinvoke $r3.<java.util.concurrent.ExecutorService: java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)>(r1, l0, r2);

        return $r4;
    }

    public java.lang.Object invokeAny(java.util.Collection) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
    {
        java.util.concurrent.Executors$DelegatedExecutorService r0;
        java.util.Collection r1;
        java.util.concurrent.ExecutorService $r2;
        java.lang.Object $r3;

        r0 := @this: java.util.concurrent.Executors$DelegatedExecutorService;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<java.util.concurrent.Executors$DelegatedExecutorService: java.util.concurrent.ExecutorService e>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.ExecutorService: java.lang.Object invokeAny(java.util.Collection)>(r1);

        return $r3;
    }

    public java.lang.Object invokeAny(java.util.Collection, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException
    {
        java.util.concurrent.Executors$DelegatedExecutorService r0;
        java.util.Collection r1;
        long l0;
        java.util.concurrent.TimeUnit r2;
        java.util.concurrent.ExecutorService $r3;
        java.lang.Object $r4;

        r0 := @this: java.util.concurrent.Executors$DelegatedExecutorService;

        r1 := @parameter0: java.util.Collection;

        l0 := @parameter1: long;

        r2 := @parameter2: java.util.concurrent.TimeUnit;

        $r3 = r0.<java.util.concurrent.Executors$DelegatedExecutorService: java.util.concurrent.ExecutorService e>;

        $r4 = interfaceinvoke $r3.<java.util.concurrent.ExecutorService: java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit)>(r1, l0, r2);

        return $r4;
    }
}
