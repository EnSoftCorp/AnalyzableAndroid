public abstract class org.apache.harmony.security.asn1.ASN1Constructed extends org.apache.harmony.security.asn1.ASN1Type
{

    protected void <init>(int)
    {
        org.apache.harmony.security.asn1.ASN1Constructed r0;
        int i0;

        r0 := @this: org.apache.harmony.security.asn1.ASN1Constructed;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.harmony.security.asn1.ASN1Type: void <init>(int,int)>(0, i0);

        return;
    }

    protected void <init>(int, int)
    {
        org.apache.harmony.security.asn1.ASN1Constructed r0;
        int i0, i1;

        r0 := @this: org.apache.harmony.security.asn1.ASN1Constructed;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<org.apache.harmony.security.asn1.ASN1Type: void <init>(int,int)>(i0, i1);

        return;
    }

    public final boolean checkTag(int)
    {
        org.apache.harmony.security.asn1.ASN1Constructed r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.harmony.security.asn1.ASN1Constructed;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.harmony.security.asn1.ASN1Constructed: int constrId>;

        if $i1 != i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void encodeASN(org.apache.harmony.security.asn1.BerOutputStream)
    {
        org.apache.harmony.security.asn1.ASN1Constructed r0;
        org.apache.harmony.security.asn1.BerOutputStream r1;
        int $i0;

        r0 := @this: org.apache.harmony.security.asn1.ASN1Constructed;

        r1 := @parameter0: org.apache.harmony.security.asn1.BerOutputStream;

        $i0 = r0.<org.apache.harmony.security.asn1.ASN1Constructed: int constrId>;

        virtualinvoke r1.<org.apache.harmony.security.asn1.BerOutputStream: void encodeTag(int)>($i0);

        virtualinvoke r0.<org.apache.harmony.security.asn1.ASN1Constructed: void encodeContent(org.apache.harmony.security.asn1.BerOutputStream)>(r1);

        return;
    }
}
