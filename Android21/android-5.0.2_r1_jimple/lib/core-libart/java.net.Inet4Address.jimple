public final class java.net.Inet4Address extends java.net.InetAddress
{
    private static final long serialVersionUID;
    public static final java.net.InetAddress ANY;
    public static final java.net.InetAddress ALL;
    public static final java.net.InetAddress LOOPBACK;

    void <init>(byte[], java.lang.String)
    {
        java.net.Inet4Address r0;
        byte[] r1;
        java.lang.String r2;
        int $i0;

        r0 := @this: java.net.Inet4Address;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.String;

        $i0 = <android.system.OsConstants: int AF_INET>;

        specialinvoke r0.<java.net.InetAddress: void <init>(int,byte[],java.lang.String)>($i0, r1, r2);

        return;
    }

    public boolean isAnyLocalAddress()
    {
        java.net.Inet4Address r0;
        byte[] $r1, $r2, $r3, $r4;
        byte $b0, $b1, $b2, $b3;
        boolean $z0;

        r0 := @this: java.net.Inet4Address;

        $r1 = r0.<java.net.Inet4Address: byte[] ipaddress>;

        $b0 = $r1[0];

        if $b0 != 0 goto label1;

        $r2 = r0.<java.net.Inet4Address: byte[] ipaddress>;

        $b1 = $r2[1];

        if $b1 != 0 goto label1;

        $r3 = r0.<java.net.Inet4Address: byte[] ipaddress>;

        $b2 = $r3[2];

        if $b2 != 0 goto label1;

        $r4 = r0.<java.net.Inet4Address: byte[] ipaddress>;

        $b3 = $r4[3];

        if $b3 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isLinkLocalAddress()
    {
        java.net.Inet4Address r0;
        byte[] $r1, $r2;
        byte $b0, $b2;
        short $s1, $s3;
        boolean $z0;

        r0 := @this: java.net.Inet4Address;

        $r1 = r0.<java.net.Inet4Address: byte[] ipaddress>;

        $b0 = $r1[0];

        $s1 = $b0 & 255;

        if $s1 != 169 goto label1;

        $r2 = r0.<java.net.Inet4Address: byte[] ipaddress>;

        $b2 = $r2[1];

        $s3 = $b2 & 255;

        if $s3 != 254 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isLoopbackAddress()
    {
        java.net.Inet4Address r0;
        byte[] $r1;
        byte $b0;
        short $s1;
        boolean $z0;

        r0 := @this: java.net.Inet4Address;

        $r1 = r0.<java.net.Inet4Address: byte[] ipaddress>;

        $b0 = $r1[0];

        $s1 = $b0 & 255;

        if $s1 != 127 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isMCGlobal()
    {
        java.net.Inet4Address r0;
        int i0, $i1, $i2;
        boolean $z0;
        java.nio.ByteOrder $r1;
        byte[] $r2;

        r0 := @this: java.net.Inet4Address;

        $z0 = virtualinvoke r0.<java.net.Inet4Address: boolean isMulticastAddress()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<java.net.Inet4Address: byte[] ipaddress>;

        $r1 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        i0 = staticinvoke <libcore.io.Memory: int peekInt(byte[],int,java.nio.ByteOrder)>($r2, 0, $r1);

        $i1 = i0 >>> 8;

        if $i1 >= 14680065 goto label2;

        return 0;

     label2:
        $i2 = i0 >>> 24;

        if $i2 <= 238 goto label3;

        return 0;

     label3:
        return 1;
    }

    public boolean isMCLinkLocal()
    {
        java.net.Inet4Address r0;
        byte[] $r1, $r2, $r3;
        byte $b0, $b2, $b3;
        short $s1;
        boolean $z0;

        r0 := @this: java.net.Inet4Address;

        $r1 = r0.<java.net.Inet4Address: byte[] ipaddress>;

        $b0 = $r1[0];

        $s1 = $b0 & 255;

        if $s1 != 224 goto label1;

        $r2 = r0.<java.net.Inet4Address: byte[] ipaddress>;

        $b2 = $r2[1];

        if $b2 != 0 goto label1;

        $r3 = r0.<java.net.Inet4Address: byte[] ipaddress>;

        $b3 = $r3[2];

        if $b3 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isMCNodeLocal()
    {
        java.net.Inet4Address r0;

        r0 := @this: java.net.Inet4Address;

        return 0;
    }

    public boolean isMCOrgLocal()
    {
        java.net.Inet4Address r0;
        byte[] $r1, $r2;
        byte $b0, $b2;
        short $s1, $s3;
        boolean $z0;

        r0 := @this: java.net.Inet4Address;

        $r1 = r0.<java.net.Inet4Address: byte[] ipaddress>;

        $b0 = $r1[0];

        $s1 = $b0 & 255;

        if $s1 != 239 goto label1;

        $r2 = r0.<java.net.Inet4Address: byte[] ipaddress>;

        $b2 = $r2[1];

        $s3 = $b2 & 252;

        if $s3 != 192 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isMCSiteLocal()
    {
        java.net.Inet4Address r0;
        byte[] $r1, $r2;
        byte $b0, $b2;
        short $s1, $s3;
        boolean $z0;

        r0 := @this: java.net.Inet4Address;

        $r1 = r0.<java.net.Inet4Address: byte[] ipaddress>;

        $b0 = $r1[0];

        $s1 = $b0 & 255;

        if $s1 != 239 goto label1;

        $r2 = r0.<java.net.Inet4Address: byte[] ipaddress>;

        $b2 = $r2[1];

        $s3 = $b2 & 255;

        if $s3 != 255 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isMulticastAddress()
    {
        java.net.Inet4Address r0;
        byte[] $r1;
        byte $b0;
        short $s1;
        boolean $z0;

        r0 := @this: java.net.Inet4Address;

        $r1 = r0.<java.net.Inet4Address: byte[] ipaddress>;

        $b0 = $r1[0];

        $s1 = $b0 & 240;

        if $s1 != 224 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isSiteLocalAddress()
    {
        java.net.Inet4Address r0;
        byte[] $r1, $r2, $r3, $r4, $r5;
        byte $b0, $b2, $b4, $b6, $b8;
        short $s1, $s3, $s5, $s7, $s9;

        r0 := @this: java.net.Inet4Address;

        $r1 = r0.<java.net.Inet4Address: byte[] ipaddress>;

        $b0 = $r1[0];

        $s1 = $b0 & 255;

        if $s1 != 10 goto label1;

        return 1;

     label1:
        $r2 = r0.<java.net.Inet4Address: byte[] ipaddress>;

        $b2 = $r2[0];

        $s3 = $b2 & 255;

        if $s3 != 172 goto label2;

        $r5 = r0.<java.net.Inet4Address: byte[] ipaddress>;

        $b8 = $r5[1];

        $s9 = $b8 & 240;

        if $s9 != 16 goto label2;

        return 1;

     label2:
        $r3 = r0.<java.net.Inet4Address: byte[] ipaddress>;

        $b4 = $r3[0];

        $s5 = $b4 & 255;

        if $s5 != 192 goto label3;

        $r4 = r0.<java.net.Inet4Address: byte[] ipaddress>;

        $b6 = $r4[1];

        $s7 = $b6 & 255;

        if $s7 != 168 goto label3;

        return 1;

     label3:
        return 0;
    }

    private java.lang.Object writeReplace() throws java.io.ObjectStreamException
    {
        java.net.Inet4Address r0, $r1;
        java.lang.String $r2;
        byte[] $r3;

        r0 := @this: java.net.Inet4Address;

        $r1 = new java.net.Inet4Address;

        $r3 = r0.<java.net.Inet4Address: byte[] ipaddress>;

        $r2 = r0.<java.net.Inet4Address: java.lang.String hostName>;

        specialinvoke $r1.<java.net.Inet4Address: void <init>(byte[],java.lang.String)>($r3, $r2);

        return $r1;
    }

    static void <clinit>()
    {
        java.net.Inet4Address $r0, $r2, $r4;
        byte[] $r1, $r3, $r5;

        <java.net.Inet4Address: long serialVersionUID> = 3286316764910316507L;

        $r0 = new java.net.Inet4Address;

        $r1 = newarray (byte)[4];

        $r1[0] = 0;

        $r1[1] = 0;

        $r1[2] = 0;

        $r1[3] = 0;

        specialinvoke $r0.<java.net.Inet4Address: void <init>(byte[],java.lang.String)>($r1, null);

        <java.net.Inet4Address: java.net.InetAddress ANY> = $r0;

        $r2 = new java.net.Inet4Address;

        $r3 = newarray (byte)[4];

        $r3[0] = -1;

        $r3[1] = -1;

        $r3[2] = -1;

        $r3[3] = -1;

        specialinvoke $r2.<java.net.Inet4Address: void <init>(byte[],java.lang.String)>($r3, null);

        <java.net.Inet4Address: java.net.InetAddress ALL> = $r2;

        $r4 = new java.net.Inet4Address;

        $r5 = newarray (byte)[4];

        $r5[0] = 127;

        $r5[1] = 0;

        $r5[2] = 0;

        $r5[3] = 1;

        specialinvoke $r4.<java.net.Inet4Address: void <init>(byte[],java.lang.String)>($r5, "localhost");

        <java.net.Inet4Address: java.net.InetAddress LOOPBACK> = $r4;

        return;
    }
}
