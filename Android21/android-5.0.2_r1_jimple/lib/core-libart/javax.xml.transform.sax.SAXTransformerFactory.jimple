public abstract class javax.xml.transform.sax.SAXTransformerFactory extends javax.xml.transform.TransformerFactory
{
    public static final java.lang.String FEATURE;
    public static final java.lang.String FEATURE_XMLFILTER;

    protected void <init>()
    {
        javax.xml.transform.sax.SAXTransformerFactory r0;

        r0 := @this: javax.xml.transform.sax.SAXTransformerFactory;

        specialinvoke r0.<javax.xml.transform.TransformerFactory: void <init>()>();

        return;
    }

    public abstract javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Source) throws javax.xml.transform.TransformerConfigurationException;

    public abstract javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Templates) throws javax.xml.transform.TransformerConfigurationException;

    public abstract javax.xml.transform.sax.TransformerHandler newTransformerHandler() throws javax.xml.transform.TransformerConfigurationException;

    public abstract javax.xml.transform.sax.TemplatesHandler newTemplatesHandler() throws javax.xml.transform.TransformerConfigurationException;

    public abstract org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Source) throws javax.xml.transform.TransformerConfigurationException;

    public abstract org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates) throws javax.xml.transform.TransformerConfigurationException;

    public static void <clinit>()
    {
        <javax.xml.transform.sax.SAXTransformerFactory: java.lang.String FEATURE_XMLFILTER> = "http://javax.xml.transform.sax.SAXTransformerFactory/feature/xmlfilter";

        <javax.xml.transform.sax.SAXTransformerFactory: java.lang.String FEATURE> = "http://javax.xml.transform.sax.SAXTransformerFactory/feature";

        return;
    }
}
