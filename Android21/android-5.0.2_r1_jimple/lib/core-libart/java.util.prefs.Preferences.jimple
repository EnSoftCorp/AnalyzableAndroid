public abstract class java.util.prefs.Preferences extends java.lang.Object
{
    public static final int MAX_KEY_LENGTH;
    public static final int MAX_NAME_LENGTH;
    public static final int MAX_VALUE_LENGTH;
    private static volatile java.util.prefs.PreferencesFactory factory;

    public static java.util.prefs.PreferencesFactory setPreferencesFactory(java.util.prefs.PreferencesFactory)
    {
        java.util.prefs.PreferencesFactory r0, r1;

        r0 := @parameter0: java.util.prefs.PreferencesFactory;

        r1 = <java.util.prefs.Preferences: java.util.prefs.PreferencesFactory factory>;

        <java.util.prefs.Preferences: java.util.prefs.PreferencesFactory factory> = r0;

        return r1;
    }

    private static java.util.prefs.PreferencesFactory findPreferencesFactory()
    {
        java.util.prefs.PreferencesFactory r0, r2;
        java.util.Iterator r1;
        java.lang.Object $r3, $r6;
        java.util.ServiceLoader $r4;
        boolean $z0;
        java.util.prefs.FilePreferencesFactoryImpl $r5;

        $r3 = staticinvoke <java.util.ServiceLoader: java.lang.Object loadFromSystemProperty(java.lang.Class)>(class "java/util/prefs/PreferencesFactory");

        r0 = (java.util.prefs.PreferencesFactory) $r3;

        if r0 == null goto label1;

        return r0;

     label1:
        $r4 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class)>(class "java/util/prefs/PreferencesFactory");

        r1 = virtualinvoke $r4.<java.util.ServiceLoader: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.prefs.PreferencesFactory) $r6;

        return r2;

     label2:
        $r5 = new java.util.prefs.FilePreferencesFactoryImpl;

        specialinvoke $r5.<java.util.prefs.FilePreferencesFactoryImpl: void <init>()>();

        return $r5;
    }

    protected void <init>()
    {
        java.util.prefs.Preferences r0;

        r0 := @this: java.util.prefs.Preferences;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract java.lang.String absolutePath();

    public abstract java.lang.String[] childrenNames() throws java.util.prefs.BackingStoreException;

    public abstract void clear() throws java.util.prefs.BackingStoreException;

    public abstract void exportNode(java.io.OutputStream) throws java.io.IOException, java.util.prefs.BackingStoreException;

    public abstract void exportSubtree(java.io.OutputStream) throws java.io.IOException, java.util.prefs.BackingStoreException;

    public abstract void flush() throws java.util.prefs.BackingStoreException;

    public abstract java.lang.String get(java.lang.String, java.lang.String);

    public abstract boolean getBoolean(java.lang.String, boolean);

    public abstract byte[] getByteArray(java.lang.String, byte[]);

    public abstract double getDouble(java.lang.String, double);

    public abstract float getFloat(java.lang.String, float);

    public abstract int getInt(java.lang.String, int);

    public abstract long getLong(java.lang.String, long);

    public static void importPreferences(java.io.InputStream) throws java.util.prefs.InvalidPreferencesFormatException, java.io.IOException
    {
        java.io.InputStream r0;
        java.net.MalformedURLException $r1;

        r0 := @parameter0: java.io.InputStream;

        if r0 != null goto label1;

        $r1 = new java.net.MalformedURLException;

        specialinvoke $r1.<java.net.MalformedURLException: void <init>(java.lang.String)>("Inputstream cannot be null");

        throw $r1;

     label1:
        staticinvoke <java.util.prefs.XMLParser: void importPrefs(java.io.InputStream)>(r0);

        return;
    }

    public abstract boolean isUserNode();

    public abstract java.lang.String[] keys() throws java.util.prefs.BackingStoreException;

    public abstract java.lang.String name();

    public abstract java.util.prefs.Preferences node(java.lang.String);

    public abstract boolean nodeExists(java.lang.String) throws java.util.prefs.BackingStoreException;

    public abstract java.util.prefs.Preferences parent();

    public abstract void put(java.lang.String, java.lang.String);

    public abstract void putBoolean(java.lang.String, boolean);

    public abstract void putByteArray(java.lang.String, byte[]);

    public abstract void putDouble(java.lang.String, double);

    public abstract void putFloat(java.lang.String, float);

    public abstract void putInt(java.lang.String, int);

    public abstract void putLong(java.lang.String, long);

    public abstract void remove(java.lang.String);

    public abstract void removeNode() throws java.util.prefs.BackingStoreException;

    public abstract void addNodeChangeListener(java.util.prefs.NodeChangeListener);

    public abstract void addPreferenceChangeListener(java.util.prefs.PreferenceChangeListener);

    public abstract void removeNodeChangeListener(java.util.prefs.NodeChangeListener);

    public abstract void removePreferenceChangeListener(java.util.prefs.PreferenceChangeListener);

    public abstract void sync() throws java.util.prefs.BackingStoreException;

    public static java.util.prefs.Preferences systemNodeForPackage(java.lang.Class)
    {
        java.lang.Class r0;
        java.util.prefs.PreferencesFactory $r1;
        java.util.prefs.Preferences $r2, $r4;
        java.lang.String $r3;

        r0 := @parameter0: java.lang.Class;

        $r1 = <java.util.prefs.Preferences: java.util.prefs.PreferencesFactory factory>;

        $r2 = interfaceinvoke $r1.<java.util.prefs.PreferencesFactory: java.util.prefs.Preferences systemRoot()>();

        $r3 = staticinvoke <java.util.prefs.Preferences: java.lang.String getNodeName(java.lang.Class)>(r0);

        $r4 = virtualinvoke $r2.<java.util.prefs.Preferences: java.util.prefs.Preferences node(java.lang.String)>($r3);

        return $r4;
    }

    public static java.util.prefs.Preferences systemRoot()
    {
        java.util.prefs.PreferencesFactory $r0;
        java.util.prefs.Preferences $r1;

        $r0 = <java.util.prefs.Preferences: java.util.prefs.PreferencesFactory factory>;

        $r1 = interfaceinvoke $r0.<java.util.prefs.PreferencesFactory: java.util.prefs.Preferences systemRoot()>();

        return $r1;
    }

    public static java.util.prefs.Preferences userNodeForPackage(java.lang.Class)
    {
        java.lang.Class r0;
        java.util.prefs.PreferencesFactory $r1;
        java.util.prefs.Preferences $r2, $r4;
        java.lang.String $r3;

        r0 := @parameter0: java.lang.Class;

        $r1 = <java.util.prefs.Preferences: java.util.prefs.PreferencesFactory factory>;

        $r2 = interfaceinvoke $r1.<java.util.prefs.PreferencesFactory: java.util.prefs.Preferences userRoot()>();

        $r3 = staticinvoke <java.util.prefs.Preferences: java.lang.String getNodeName(java.lang.Class)>(r0);

        $r4 = virtualinvoke $r2.<java.util.prefs.Preferences: java.util.prefs.Preferences node(java.lang.String)>($r3);

        return $r4;
    }

    private static java.lang.String getNodeName(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.Package r1;
        java.lang.StringBuilder $r2, $r3, $r6;
        java.lang.String $r4, $r5, $r7;

        r0 := @parameter0: java.lang.Class;

        r1 = virtualinvoke r0.<java.lang.Class: java.lang.Package getPackage()>();

        if r1 != null goto label1;

        return "/<unnamed>";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r4 = virtualinvoke r1.<java.lang.Package: java.lang.String getName()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public static java.util.prefs.Preferences userRoot()
    {
        java.util.prefs.PreferencesFactory $r0;
        java.util.prefs.Preferences $r1;

        $r0 = <java.util.prefs.Preferences: java.util.prefs.PreferencesFactory factory>;

        $r1 = interfaceinvoke $r0.<java.util.prefs.PreferencesFactory: java.util.prefs.Preferences userRoot()>();

        return $r1;
    }

    public abstract java.lang.String toString();

    static void <clinit>()
    {
        java.util.prefs.PreferencesFactory $r0;

        <java.util.prefs.Preferences: int MAX_VALUE_LENGTH> = 8192;

        <java.util.prefs.Preferences: int MAX_NAME_LENGTH> = 80;

        <java.util.prefs.Preferences: int MAX_KEY_LENGTH> = 80;

        $r0 = staticinvoke <java.util.prefs.Preferences: java.util.prefs.PreferencesFactory findPreferencesFactory()>();

        <java.util.prefs.Preferences: java.util.prefs.PreferencesFactory factory> = $r0;

        return;
    }
}
