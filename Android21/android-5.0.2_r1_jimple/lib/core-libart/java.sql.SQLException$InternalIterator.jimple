class java.sql.SQLException$InternalIterator extends java.lang.Object implements java.util.Iterator
{
    private java.sql.SQLException current;

    void <init>(java.sql.SQLException)
    {
        java.sql.SQLException$InternalIterator r0;
        java.sql.SQLException r1;

        r0 := @this: java.sql.SQLException$InternalIterator;

        r1 := @parameter0: java.sql.SQLException;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.sql.SQLException$InternalIterator: java.sql.SQLException current> = r1;

        return;
    }

    public boolean hasNext()
    {
        java.sql.SQLException$InternalIterator r0;
        java.sql.SQLException $r1;
        boolean $z0;

        r0 := @this: java.sql.SQLException$InternalIterator;

        $r1 = r0.<java.sql.SQLException$InternalIterator: java.sql.SQLException current>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Throwable next()
    {
        java.sql.SQLException$InternalIterator r0;
        java.sql.SQLException r1, $r2, $r3, $r4;
        java.util.NoSuchElementException $r5;

        r0 := @this: java.sql.SQLException$InternalIterator;

        $r2 = r0.<java.sql.SQLException$InternalIterator: java.sql.SQLException current>;

        if $r2 != null goto label1;

        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        throw $r5;

     label1:
        r1 = r0.<java.sql.SQLException$InternalIterator: java.sql.SQLException current>;

        $r3 = r0.<java.sql.SQLException$InternalIterator: java.sql.SQLException current>;

        $r4 = staticinvoke <java.sql.SQLException: java.sql.SQLException access$000(java.sql.SQLException)>($r3);

        r0.<java.sql.SQLException$InternalIterator: java.sql.SQLException current> = $r4;

        return r1;
    }

    public void remove()
    {
        java.sql.SQLException$InternalIterator r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: java.sql.SQLException$InternalIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public volatile java.lang.Object next()
    {
        java.sql.SQLException$InternalIterator r0;
        java.lang.Throwable $r1;

        r0 := @this: java.sql.SQLException$InternalIterator;

        $r1 = virtualinvoke r0.<java.sql.SQLException$InternalIterator: java.lang.Throwable next()>();

        return $r1;
    }
}
