final class javax.xml.datatype.FactoryFinder extends java.lang.Object
{
    private static final java.lang.String CLASS_NAME;
    private static boolean debug;
    private static java.util.Properties cacheProps;
    private static boolean firstTime;
    private static final int DEFAULT_LINE_LENGTH;

    private void <init>()
    {
        javax.xml.datatype.FactoryFinder r0;

        r0 := @this: javax.xml.datatype.FactoryFinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void debugPrintln(java.lang.String)
    {
        java.lang.String r0, $r5;
        boolean $z0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.io.PrintStream $r2;

        r0 := @parameter0: java.lang.String;

        $z0 = <javax.xml.datatype.FactoryFinder: boolean debug>;

        if $z0 == 0 goto label1;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("javax.xml.datatype.FactoryFinder:");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r5);

     label1:
        return;
    }

    private static java.lang.ClassLoader findClassLoader() throws javax.xml.datatype.FactoryFinder$ConfigurationError
    {
        java.lang.ClassLoader r0;
        java.lang.Thread $r1;
        boolean $z0, $z1;
        java.lang.Class $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r9;
        java.lang.String $r6, $r10;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r0 = virtualinvoke $r1.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $z0 = <javax.xml.datatype.FactoryFinder: boolean debug>;

        if $z0 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using context class loader: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.datatype.FactoryFinder: void debugPrintln(java.lang.String)>($r10);

     label1:
        if r0 != null goto label2;

        $r2 = class "javax/xml/datatype/FactoryFinder";

        r0 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $z1 = <javax.xml.datatype.FactoryFinder: boolean debug>;

        if $z1 == 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using the class loader of FactoryFinder: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.datatype.FactoryFinder: void debugPrintln(java.lang.String)>($r6);

     label2:
        return r0;
    }

    static java.lang.Object newInstance(java.lang.String, java.lang.ClassLoader) throws javax.xml.datatype.FactoryFinder$ConfigurationError
    {
        java.lang.String r0, $r8, $r10, $r17, $r25;
        java.lang.ClassLoader r1;
        java.lang.Class r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9, $r13, $r14, $r15, $r16, $r18, $r21, $r22, $r23, $r24;
        java.lang.Exception $r11, r27;
        javax.xml.datatype.FactoryFinder$ConfigurationError $r12, $r19;
        java.lang.ClassNotFoundException $r20, r26;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.ClassLoader;

     label1:
        if r1 != null goto label2;

        r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        goto label3;

     label2:
        r2 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0);

     label3:
        $z0 = <javax.xml.datatype.FactoryFinder: boolean debug>;

        if $z0 == 0 goto label4;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loaded ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r8 = staticinvoke <javax.xml.datatype.FactoryFinder: java.lang.String which(java.lang.Class)>(r2);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.datatype.FactoryFinder: void debugPrintln(java.lang.String)>($r10);

     label4:
        $r3 = virtualinvoke r2.<java.lang.Class: java.lang.Object newInstance()>();

     label5:
        return $r3;

     label6:
        $r20 := @caughtexception;

        r26 = $r20;

        $r19 = new javax.xml.datatype.FactoryFinder$ConfigurationError;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider ");

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<javax.xml.datatype.FactoryFinder$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r25, r26);

        throw $r19;

     label7:
        $r11 := @caughtexception;

        r27 = $r11;

        $r12 = new javax.xml.datatype.FactoryFinder$ConfigurationError;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be instantiated: ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r27);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<javax.xml.datatype.FactoryFinder$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r17, r27);

        throw $r12;

        catch java.lang.ClassNotFoundException from label1 to label5 with label6;
        catch java.lang.Exception from label1 to label5 with label7;
    }

    static java.lang.Object find(java.lang.String, java.lang.String) throws javax.xml.datatype.FactoryFinder$ConfigurationError
    {
        java.lang.String r0, r1, r3, r4, r5, $r11, $r15, $r24, $r26, $r34, $r43, $r50, r52;
        java.lang.ClassLoader r2;
        java.util.Properties r6, $r17, $r35, $r41;
        java.io.File r7, $r37;
        java.lang.Throwable r8, $r51;
        java.lang.StringBuilder $r9, $r10, $r12, $r13, $r14, $r16, $r18, $r20, $r21, $r22, $r23, $r28, $r29, $r30, $r31, $r32, $r33, $r38, $r39, $r40, $r44, $r45, $r46, $r47, $r49;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Object $r19, $r27, $r42, r54;
        javax.xml.datatype.FactoryFinder$ConfigurationError $r25;
        java.io.FileInputStream $r36;
        int $i0;
        java.lang.Exception $r48, r53;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <javax.xml.datatype.FactoryFinder: java.lang.ClassLoader findClassLoader()>();

        r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r0);

        if r3 == null goto label02;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label02;

        $z6 = <javax.xml.datatype.FactoryFinder: boolean debug>;

        if $z6 == 0 goto label01;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found ");

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in the system property ");

        $r49 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.datatype.FactoryFinder: void debugPrintln(java.lang.String)>($r50);

     label01:
        $r42 = staticinvoke <javax.xml.datatype.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader)>(r3, r2);

        return $r42;

     label02:
        r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.home");

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r11 = <java.io.File: java.lang.String separator>;

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lib");

        $r15 = <java.io.File: java.lang.String separator>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("jaxp.properties");

        r5 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = <javax.xml.datatype.FactoryFinder: boolean firstTime>;

        if $z0 == 0 goto label09;

        $r35 = <javax.xml.datatype.FactoryFinder: java.util.Properties cacheProps>;

        r6 = $r35;

        entermonitor $r35;

     label03:
        $z3 = <javax.xml.datatype.FactoryFinder: boolean firstTime>;

        if $z3 == 0 goto label05;

        $r37 = new java.io.File;

        specialinvoke $r37.<java.io.File: void <init>(java.lang.String)>(r5);

        r7 = $r37;

        <javax.xml.datatype.FactoryFinder: boolean firstTime> = 0;

        $z5 = virtualinvoke r7.<java.io.File: boolean exists()>();

        if $z5 == 0 goto label05;

        $z4 = <javax.xml.datatype.FactoryFinder: boolean debug>;

        if $z4 == 0 goto label04;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Read properties file ");

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r43 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.datatype.FactoryFinder: void debugPrintln(java.lang.String)>($r43);

     label04:
        $r41 = <javax.xml.datatype.FactoryFinder: java.util.Properties cacheProps>;

        $r36 = new java.io.FileInputStream;

        specialinvoke $r36.<java.io.FileInputStream: void <init>(java.io.File)>(r7);

        virtualinvoke $r41.<java.util.Properties: void load(java.io.InputStream)>($r36);

     label05:
        exitmonitor r6;

     label06:
        goto label09;

     label07:
        $r51 := @caughtexception;

        r8 = $r51;

        exitmonitor r6;

     label08:
        throw r8;

     label09:
        $r17 = <javax.xml.datatype.FactoryFinder: java.util.Properties cacheProps>;

        r52 = virtualinvoke $r17.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r0);

        $z1 = <javax.xml.datatype.FactoryFinder: boolean debug>;

        if $z1 == 0 goto label10;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found ");

        $r30 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in $java.home/jaxp.properties");

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.datatype.FactoryFinder: void debugPrintln(java.lang.String)>($r34);

     label10:
        if r52 == null goto label12;

        $r27 = staticinvoke <javax.xml.datatype.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader)>(r52, r2);

     label11:
        return $r27;

     label12:
        goto label14;

     label13:
        $r48 := @caughtexception;

        r53 = $r48;

        $z7 = <javax.xml.datatype.FactoryFinder: boolean debug>;

        if $z7 == 0 goto label14;

        virtualinvoke r53.<java.lang.Exception: void printStackTrace()>();

     label14:
        r54 = staticinvoke <javax.xml.datatype.FactoryFinder: java.lang.Object findJarServiceProvider(java.lang.String)>(r0);

        if r54 == null goto label15;

        return r54;

     label15:
        if r1 != null goto label16;

        $r25 = new javax.xml.datatype.FactoryFinder$ConfigurationError;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider for ");

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be found");

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<javax.xml.datatype.FactoryFinder$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r26, null);

        throw $r25;

     label16:
        $z2 = <javax.xml.datatype.FactoryFinder: boolean debug>;

        if $z2 == 0 goto label17;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loaded from fallback value: ");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.datatype.FactoryFinder: void debugPrintln(java.lang.String)>($r24);

     label17:
        $r19 = staticinvoke <javax.xml.datatype.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader)>(r1, r2);

        return $r19;

        catch java.lang.Throwable from label03 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Exception from label02 to label11 with label13;
    }

    private static java.lang.Object findJarServiceProvider(java.lang.String) throws javax.xml.datatype.FactoryFinder$ConfigurationError
    {
        java.lang.String r0, r1, $r12, $r18, $r23, r30;
        java.io.InputStream r2;
        java.lang.ClassLoader r3;
        java.io.BufferedReader r4, $r11, $r26;
        java.lang.Throwable r5, $r29;
        java.lang.StringBuilder $r6, $r7, $r8, $r13, $r15, $r16, $r17, $r19, $r20, $r21, $r22;
        java.lang.Thread $r9;
        boolean $z0, $z1, $z2;
        java.io.InputStreamReader $r10, $r28;
        java.lang.Object $r14;
        java.lang.Class $r24;
        java.io.UnsupportedEncodingException $r25;
        java.io.IOException $r27;

        r0 := @parameter0: java.lang.String;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("META-INF/services/");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r2 = null;

        $r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r3 = virtualinvoke $r9.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        if r3 == null goto label01;

        r2 = virtualinvoke r3.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r1);

     label01:
        if r2 != null goto label02;

        $r24 = class "javax/xml/datatype/FactoryFinder";

        r3 = virtualinvoke $r24.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r2 = virtualinvoke r3.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r1);

     label02:
        if r2 != null goto label03;

        return null;

     label03:
        $z0 = <javax.xml.datatype.FactoryFinder: boolean debug>;

        if $z0 == 0 goto label04;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found jar resource=");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using ClassLoader: ");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.datatype.FactoryFinder: void debugPrintln(java.lang.String)>($r23);

     label04:
        $r11 = new java.io.BufferedReader;

        $r10 = new java.io.InputStreamReader;

        specialinvoke $r10.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r2, "UTF-8");

        specialinvoke $r11.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r10, 80);

        r4 = $r11;

     label05:
        goto label07;

     label06:
        $r25 := @caughtexception;

        $r26 = new java.io.BufferedReader;

        $r28 = new java.io.InputStreamReader;

        specialinvoke $r28.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r2);

        specialinvoke $r26.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r28, 80);

        r4 = $r26;

     label07:
        r30 = virtualinvoke r4.<java.io.BufferedReader: java.lang.String readLine()>();

     label08:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        goto label13;

     label09:
        $r27 := @caughtexception;

     label10:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        return null;

     label11:
        $r29 := @caughtexception;

        r5 = $r29;

     label12:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        throw r5;

     label13:
        if r30 == null goto label15;

        $r12 = "";

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r30);

        if $z2 != 0 goto label15;

        $z1 = <javax.xml.datatype.FactoryFinder: boolean debug>;

        if $z1 == 0 goto label14;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found in resource, value=");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.datatype.FactoryFinder: void debugPrintln(java.lang.String)>($r18);

     label14:
        $r14 = staticinvoke <javax.xml.datatype.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader)>(r30, r3);

        return $r14;

     label15:
        return null;

        catch java.io.UnsupportedEncodingException from label04 to label05 with label06;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    private static java.lang.String which(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.String r1, $r5, $r6, $r9;
        java.lang.ClassLoader r2;
        java.net.URL r3;
        java.lang.StringBuilder $r4, $r7, $r8;
        java.lang.Throwable $r10, r15;
        boolean $z0;
        java.lang.ThreadDeath $r11, r14;
        java.lang.VirtualMachineError $r12, r13;

        r0 := @parameter0: java.lang.Class;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".class");

        r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r2 = virtualinvoke r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        if r2 == null goto label2;

        r3 = virtualinvoke r2.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>(r1);

        goto label3;

     label2:
        r3 = staticinvoke <java.lang.ClassLoader: java.net.URL getSystemResource(java.lang.String)>(r1);

     label3:
        if r3 == null goto label5;

        $r9 = virtualinvoke r3.<java.net.URL: java.lang.String toString()>();

     label4:
        return $r9;

     label5:
        goto label9;

     label6:
        $r12 := @caughtexception;

        r13 = $r12;

        throw r13;

     label7:
        $r11 := @caughtexception;

        r14 = $r11;

        throw r14;

     label8:
        $r10 := @caughtexception;

        r15 = $r10;

        $z0 = <javax.xml.datatype.FactoryFinder: boolean debug>;

        if $z0 == 0 goto label9;

        virtualinvoke r15.<java.lang.Throwable: void printStackTrace()>();

     label9:
        return "unknown location";

        catch java.lang.VirtualMachineError from label1 to label4 with label6;
        catch java.lang.ThreadDeath from label1 to label4 with label7;
        catch java.lang.Throwable from label1 to label4 with label8;
    }

    static void <clinit>()
    {
        java.lang.String r0, $r2;
        java.util.Properties $r1;
        boolean $z0, $z1;

        <javax.xml.datatype.FactoryFinder: int DEFAULT_LINE_LENGTH> = 80;

        <javax.xml.datatype.FactoryFinder: java.lang.String CLASS_NAME> = "javax.xml.datatype.FactoryFinder";

        <javax.xml.datatype.FactoryFinder: boolean debug> = 0;

        $r1 = new java.util.Properties;

        specialinvoke $r1.<java.util.Properties: void <init>()>();

        <javax.xml.datatype.FactoryFinder: java.util.Properties cacheProps> = $r1;

        <javax.xml.datatype.FactoryFinder: boolean firstTime> = 1;

        r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("jaxp.debug");

        if r0 == null goto label1;

        $r2 = "false";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <javax.xml.datatype.FactoryFinder: boolean debug> = $z1;

        return;
    }
}
