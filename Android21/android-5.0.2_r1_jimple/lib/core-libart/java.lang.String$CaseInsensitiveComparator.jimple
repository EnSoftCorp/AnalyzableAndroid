final class java.lang.String$CaseInsensitiveComparator extends java.lang.Object implements java.util.Comparator, java.io.Serializable
{
    private static final long serialVersionUID;

    private void <init>()
    {
        java.lang.String$CaseInsensitiveComparator r0;

        r0 := @this: java.lang.String$CaseInsensitiveComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(java.lang.String, java.lang.String)
    {
        java.lang.String$CaseInsensitiveComparator r0;
        java.lang.String r1, r2;
        int $i0;

        r0 := @this: java.lang.String$CaseInsensitiveComparator;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int compareToIgnoreCase(java.lang.String)>(r2);

        return $i0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        java.lang.String$CaseInsensitiveComparator r0;
        java.lang.Object r1, r2;
        java.lang.String $r3, $r4;
        int $i0;

        r0 := @this: java.lang.String$CaseInsensitiveComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.String) r1;

        $r3 = (java.lang.String) r2;

        $i0 = virtualinvoke r0.<java.lang.String$CaseInsensitiveComparator: int compare(java.lang.String,java.lang.String)>($r4, $r3);

        return $i0;
    }

    void <init>(java.lang.String$1)
    {
        java.lang.String$CaseInsensitiveComparator r0;
        java.lang.String$1 r1;

        r0 := @this: java.lang.String$CaseInsensitiveComparator;

        r1 := @parameter0: java.lang.String$1;

        specialinvoke r0.<java.lang.String$CaseInsensitiveComparator: void <init>()>();

        return;
    }

    public static void <clinit>()
    {
        <java.lang.String$CaseInsensitiveComparator: long serialVersionUID> = 8575799808933029326L;

        return;
    }
}
