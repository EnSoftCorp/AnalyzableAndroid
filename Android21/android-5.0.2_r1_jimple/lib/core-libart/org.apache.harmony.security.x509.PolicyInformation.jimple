public final class org.apache.harmony.security.x509.PolicyInformation extends java.lang.Object
{
    private final java.lang.String policyIdentifier;
    private byte[] encoding;
    public static final org.apache.harmony.security.asn1.ASN1Sequence ASN1;

    public void <init>(java.lang.String)
    {
        org.apache.harmony.security.x509.PolicyInformation r0;
        java.lang.String r1;

        r0 := @this: org.apache.harmony.security.x509.PolicyInformation;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.harmony.security.x509.PolicyInformation: java.lang.String policyIdentifier> = r1;

        return;
    }

    public java.lang.String getPolicyIdentifier()
    {
        org.apache.harmony.security.x509.PolicyInformation r0;
        java.lang.String $r1;

        r0 := @this: org.apache.harmony.security.x509.PolicyInformation;

        $r1 = r0.<org.apache.harmony.security.x509.PolicyInformation: java.lang.String policyIdentifier>;

        return $r1;
    }

    public byte[] getEncoded()
    {
        org.apache.harmony.security.x509.PolicyInformation r0;
        byte[] $r1, $r2, $r4;
        org.apache.harmony.security.asn1.ASN1Sequence $r3;

        r0 := @this: org.apache.harmony.security.x509.PolicyInformation;

        $r1 = r0.<org.apache.harmony.security.x509.PolicyInformation: byte[] encoding>;

        if $r1 != null goto label1;

        $r3 = <org.apache.harmony.security.x509.PolicyInformation: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r4 = virtualinvoke $r3.<org.apache.harmony.security.asn1.ASN1Sequence: byte[] encode(java.lang.Object)>(r0);

        r0.<org.apache.harmony.security.x509.PolicyInformation: byte[] encoding> = $r4;

     label1:
        $r2 = r0.<org.apache.harmony.security.x509.PolicyInformation: byte[] encoding>;

        return $r2;
    }

    public void dumpValue(java.lang.StringBuilder)
    {
        org.apache.harmony.security.x509.PolicyInformation r0;
        java.lang.StringBuilder r1, $r2, $r4;
        java.lang.String $r3;

        r0 := @this: org.apache.harmony.security.x509.PolicyInformation;

        r1 := @parameter0: java.lang.StringBuilder;

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Policy Identifier [");

        $r3 = r0.<org.apache.harmony.security.x509.PolicyInformation: java.lang.String policyIdentifier>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        return;
    }

    static java.lang.String access$000(org.apache.harmony.security.x509.PolicyInformation)
    {
        org.apache.harmony.security.x509.PolicyInformation r0;
        java.lang.String $r1;

        r0 := @parameter0: org.apache.harmony.security.x509.PolicyInformation;

        $r1 = r0.<org.apache.harmony.security.x509.PolicyInformation: java.lang.String policyIdentifier>;

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.harmony.security.x509.PolicyInformation$1 $r0;
        org.apache.harmony.security.asn1.ASN1Type[] $r1;
        org.apache.harmony.security.asn1.ASN1Oid $r2;
        org.apache.harmony.security.asn1.ASN1Any $r3;

        $r0 = new org.apache.harmony.security.x509.PolicyInformation$1;

        $r1 = newarray (org.apache.harmony.security.asn1.ASN1Type)[2];

        $r2 = staticinvoke <org.apache.harmony.security.asn1.ASN1Oid: org.apache.harmony.security.asn1.ASN1Oid getInstance()>();

        $r1[0] = $r2;

        $r3 = staticinvoke <org.apache.harmony.security.asn1.ASN1Any: org.apache.harmony.security.asn1.ASN1Any getInstance()>();

        $r1[1] = $r3;

        specialinvoke $r0.<org.apache.harmony.security.x509.PolicyInformation$1: void <init>(org.apache.harmony.security.asn1.ASN1Type[])>($r1);

        <org.apache.harmony.security.x509.PolicyInformation: org.apache.harmony.security.asn1.ASN1Sequence ASN1> = $r0;

        return;
    }
}
