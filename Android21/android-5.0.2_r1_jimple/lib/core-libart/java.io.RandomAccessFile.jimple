public class java.io.RandomAccessFile extends java.lang.Object implements java.io.DataInput, java.io.DataOutput, java.io.Closeable
{
    private java.io.FileDescriptor fd;
    private boolean syncMetadata;
    private java.nio.channels.FileChannel channel;
    private int mode;
    private final dalvik.system.CloseGuard guard;
    private final byte[] scratch;

    public void <init>(java.io.File, java.lang.String) throws java.io.FileNotFoundException
    {
        java.io.RandomAccessFile r0;
        java.io.File r1;
        java.lang.String r2, $r6, $r13;
        int i0, $i1, $i2, $i3;
        dalvik.system.CloseGuard $r4, $r9;
        byte[] $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.io.FileDescriptor $r7, $r8;
        java.lang.IllegalArgumentException $r10;
        java.lang.StringBuilder $r11, $r12, $r14;
        java.io.IOException $r15;

        r0 := @this: java.io.RandomAccessFile;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.io.RandomAccessFile: boolean syncMetadata> = 0;

        $r4 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<java.io.RandomAccessFile: dalvik.system.CloseGuard guard> = $r4;

        $r5 = newarray (byte)[8];

        r0.<java.io.RandomAccessFile: byte[] scratch> = $r5;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("r");

        if $z0 == 0 goto label1;

        i0 = <android.system.OsConstants: int O_RDONLY>;

        goto label5;

     label1:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("rw");

        if $z1 != 0 goto label2;

        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("rws");

        if $z5 != 0 goto label2;

        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("rwd");

        if $z6 == 0 goto label4;

     label2:
        $i2 = <android.system.OsConstants: int O_RDWR>;

        $i1 = <android.system.OsConstants: int O_CREAT>;

        i0 = $i2 | $i1;

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("rws");

        if $z2 == 0 goto label3;

        r0.<java.io.RandomAccessFile: boolean syncMetadata> = 1;

        goto label5;

     label3:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("rwd");

        if $z3 == 0 goto label5;

        $i3 = <android.system.OsConstants: int O_SYNC>;

        i0 = i0 | $i3;

        goto label5;

     label4:
        $r10 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid mode: ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r10;

     label5:
        r0.<java.io.RandomAccessFile: int mode> = i0;

        $r6 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $r7 = staticinvoke <libcore.io.IoBridge: java.io.FileDescriptor open(java.lang.String,int)>($r6, i0);

        r0.<java.io.RandomAccessFile: java.io.FileDescriptor fd> = $r7;

        $z4 = r0.<java.io.RandomAccessFile: boolean syncMetadata>;

        if $z4 == 0 goto label9;

     label6:
        $r8 = r0.<java.io.RandomAccessFile: java.io.FileDescriptor fd>;

        virtualinvoke $r8.<java.io.FileDescriptor: void sync()>();

     label7:
        goto label9;

     label8:
        $r15 := @caughtexception;

     label9:
        $r9 = r0.<java.io.RandomAccessFile: dalvik.system.CloseGuard guard>;

        virtualinvoke $r9.<dalvik.system.CloseGuard: void open(java.lang.String)>("close");

        return;

        catch java.io.IOException from label6 to label7 with label8;
    }

    public void <init>(java.lang.String, java.lang.String) throws java.io.FileNotFoundException
    {
        java.io.RandomAccessFile r0;
        java.lang.String r1, r2;
        java.io.File $r3;

        r0 := @this: java.io.RandomAccessFile;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>(r1);

        specialinvoke r0.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r3, r2);

        return;
    }

    public void close() throws java.io.IOException
    {
        java.io.RandomAccessFile r0, r1;
        java.lang.Throwable r2, $r9;
        dalvik.system.CloseGuard $r3;
        java.nio.channels.FileChannel $r5, $r7, $r8;
        java.io.FileDescriptor $r6;
        boolean $z0;

        r0 := @this: java.io.RandomAccessFile;

        $r3 = r0.<java.io.RandomAccessFile: dalvik.system.CloseGuard guard>;

        virtualinvoke $r3.<dalvik.system.CloseGuard: void close()>();

        r1 = r0;

        entermonitor r0;

     label1:
        $r5 = r0.<java.io.RandomAccessFile: java.nio.channels.FileChannel channel>;

        if $r5 == null goto label2;

        $r7 = r0.<java.io.RandomAccessFile: java.nio.channels.FileChannel channel>;

        $z0 = virtualinvoke $r7.<java.nio.channels.FileChannel: boolean isOpen()>();

        if $z0 == 0 goto label2;

        $r8 = r0.<java.io.RandomAccessFile: java.nio.channels.FileChannel channel>;

        virtualinvoke $r8.<java.nio.channels.FileChannel: void close()>();

        r0.<java.io.RandomAccessFile: java.nio.channels.FileChannel channel> = null;

     label2:
        $r6 = r0.<java.io.RandomAccessFile: java.io.FileDescriptor fd>;

        staticinvoke <libcore.io.IoBridge: void closeAndSignalBlockedThreads(java.io.FileDescriptor)>($r6);

        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected void finalize() throws java.lang.Throwable
    {
        java.io.RandomAccessFile r0;
        java.lang.Throwable r1, $r4;
        dalvik.system.CloseGuard $r2, $r3;

        r0 := @this: java.io.RandomAccessFile;

     label1:
        $r2 = r0.<java.io.RandomAccessFile: dalvik.system.CloseGuard guard>;

        if $r2 == null goto label2;

        $r3 = r0.<java.io.RandomAccessFile: dalvik.system.CloseGuard guard>;

        virtualinvoke $r3.<dalvik.system.CloseGuard: void warnIfOpen()>();

     label2:
        virtualinvoke r0.<java.io.RandomAccessFile: void close()>();

     label3:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        goto label6;

     label4:
        $r4 := @caughtexception;

        r1 = $r4;

     label5:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public final synchronized java.nio.channels.FileChannel getChannel()
    {
        java.io.RandomAccessFile r0;
        java.nio.channels.FileChannel $r1, $r2, $r4;
        int $i0;
        java.io.FileDescriptor $r3;

        r0 := @this: java.io.RandomAccessFile;

        $r1 = r0.<java.io.RandomAccessFile: java.nio.channels.FileChannel channel>;

        if $r1 != null goto label1;

        $r3 = r0.<java.io.RandomAccessFile: java.io.FileDescriptor fd>;

        $i0 = r0.<java.io.RandomAccessFile: int mode>;

        $r4 = staticinvoke <java.nio.NioUtils: java.nio.channels.FileChannel newFileChannel(java.io.Closeable,java.io.FileDescriptor,int)>(r0, $r3, $i0);

        r0.<java.io.RandomAccessFile: java.nio.channels.FileChannel channel> = $r4;

     label1:
        $r2 = r0.<java.io.RandomAccessFile: java.nio.channels.FileChannel channel>;

        return $r2;
    }

    public final java.io.FileDescriptor getFD() throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        java.io.FileDescriptor $r1;

        r0 := @this: java.io.RandomAccessFile;

        $r1 = r0.<java.io.RandomAccessFile: java.io.FileDescriptor fd>;

        return $r1;
    }

    public long getFilePointer() throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        android.system.ErrnoException r1, $r4;
        int $i0;
        java.io.FileDescriptor $r2;
        libcore.io.Os $r3;
        long $l1;
        java.io.IOException $r5;

        r0 := @this: java.io.RandomAccessFile;

     label1:
        $r3 = <libcore.io.Libcore: libcore.io.Os os>;

        $r2 = r0.<java.io.RandomAccessFile: java.io.FileDescriptor fd>;

        $i0 = <android.system.OsConstants: int SEEK_CUR>;

        $l1 = interfaceinvoke $r3.<libcore.io.Os: long lseek(java.io.FileDescriptor,long,int)>($r2, 0L, $i0);

     label2:
        return $l1;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = virtualinvoke r1.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r5;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public long length() throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        android.system.ErrnoException r1, $r5;
        java.io.FileDescriptor $r2;
        libcore.io.Os $r3;
        android.system.StructStat $r4;
        long $l0;
        java.io.IOException $r6;

        r0 := @this: java.io.RandomAccessFile;

     label1:
        $r3 = <libcore.io.Libcore: libcore.io.Os os>;

        $r2 = r0.<java.io.RandomAccessFile: java.io.FileDescriptor fd>;

        $r4 = interfaceinvoke $r3.<libcore.io.Os: android.system.StructStat fstat(java.io.FileDescriptor)>($r2);

        $l0 = $r4.<android.system.StructStat: long st_size>;

     label2:
        return $l0;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        $r6 = virtualinvoke r1.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r6;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public int read() throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        byte[] $r1, $r2;
        int $i0;
        byte $b1;
        short $s2;

        r0 := @this: java.io.RandomAccessFile;

        $r1 = r0.<java.io.RandomAccessFile: byte[] scratch>;

        $i0 = virtualinvoke r0.<java.io.RandomAccessFile: int read(byte[],int,int)>($r1, 0, 1);

        if $i0 == -1 goto label1;

        $r2 = r0.<java.io.RandomAccessFile: byte[] scratch>;

        $b1 = $r2[0];

        $s2 = $b1 & 255;

        goto label2;

     label1:
        $s2 = -1;

     label2:
        return $s2;
    }

    public int read(byte[]) throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        byte[] r1;
        int $i0, $i1;

        r0 := @this: java.io.RandomAccessFile;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        $i1 = virtualinvoke r0.<java.io.RandomAccessFile: int read(byte[],int,int)>(r1, 0, $i0);

        return $i1;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        byte[] r1;
        int i0, i1, $i2;
        java.io.FileDescriptor $r2;

        r0 := @this: java.io.RandomAccessFile;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<java.io.RandomAccessFile: java.io.FileDescriptor fd>;

        $i2 = staticinvoke <libcore.io.IoBridge: int read(java.io.FileDescriptor,byte[],int,int)>($r2, r1, i0, i1);

        return $i2;
    }

    public final boolean readBoolean() throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        int i0;
        boolean $z0;
        java.io.EOFException $r1;

        r0 := @this: java.io.RandomAccessFile;

        i0 = virtualinvoke r0.<java.io.RandomAccessFile: int read()>();

        if i0 >= 0 goto label1;

        $r1 = new java.io.EOFException;

        specialinvoke $r1.<java.io.EOFException: void <init>()>();

        throw $r1;

     label1:
        if i0 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public final byte readByte() throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        int i0;
        byte $b1;
        java.io.EOFException $r1;

        r0 := @this: java.io.RandomAccessFile;

        i0 = virtualinvoke r0.<java.io.RandomAccessFile: int read()>();

        if i0 >= 0 goto label1;

        $r1 = new java.io.EOFException;

        specialinvoke $r1.<java.io.EOFException: void <init>()>();

        throw $r1;

     label1:
        $b1 = (byte) i0;

        return $b1;
    }

    public final char readChar() throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        short $s0;
        char $c1;

        r0 := @this: java.io.RandomAccessFile;

        $s0 = virtualinvoke r0.<java.io.RandomAccessFile: short readShort()>();

        $c1 = (char) $s0;

        return $c1;
    }

    public final double readDouble() throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        long $l0;
        double $d0;

        r0 := @this: java.io.RandomAccessFile;

        $l0 = virtualinvoke r0.<java.io.RandomAccessFile: long readLong()>();

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l0);

        return $d0;
    }

    public final float readFloat() throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        int $i0;
        float $f0;

        r0 := @this: java.io.RandomAccessFile;

        $i0 = virtualinvoke r0.<java.io.RandomAccessFile: int readInt()>();

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i0);

        return $f0;
    }

    public final void readFully(byte[]) throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        byte[] r1;
        int $i0;

        r0 := @this: java.io.RandomAccessFile;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<java.io.RandomAccessFile: void readFully(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public final void readFully(byte[], int, int) throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        byte[] r1;
        int i0, i1, i2, $i3;
        java.io.EOFException $r2;

        r0 := @this: java.io.RandomAccessFile;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = lengthof r1;

        staticinvoke <java.util.Arrays: void checkOffsetAndCount(int,int,int)>($i3, i0, i1);

     label1:
        if i1 <= 0 goto label3;

        i2 = virtualinvoke r0.<java.io.RandomAccessFile: int read(byte[],int,int)>(r1, i0, i1);

        if i2 >= 0 goto label2;

        $r2 = new java.io.EOFException;

        specialinvoke $r2.<java.io.EOFException: void <init>()>();

        throw $r2;

     label2:
        i0 = i0 + i2;

        i1 = i1 - i2;

        goto label1;

     label3:
        return;
    }

    public final int readInt() throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        byte[] $r1, $r3;
        java.nio.ByteOrder $r2;
        int $i0;

        r0 := @this: java.io.RandomAccessFile;

        $r1 = r0.<java.io.RandomAccessFile: byte[] scratch>;

        virtualinvoke r0.<java.io.RandomAccessFile: void readFully(byte[],int,int)>($r1, 0, 4);

        $r3 = r0.<java.io.RandomAccessFile: byte[] scratch>;

        $r2 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        $i0 = staticinvoke <libcore.io.Memory: int peekInt(byte[],int,java.nio.ByteOrder)>($r3, 0, $r2);

        return $i0;
    }

    public final java.lang.String readLine() throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        java.lang.StringBuilder r1, $r2;
        boolean z0;
        long l0;
        int i1, $i2;
        java.lang.String $r3, $r4, $r5, $r7;
        char $c3;

        r0 := @this: java.io.RandomAccessFile;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(80);

        r1 = $r2;

        z0 = 0;

        l0 = 0L;

     label01:
        i1 = virtualinvoke r0.<java.io.RandomAccessFile: int read()>();

        lookupswitch(i1)
        {
            case -1: goto label02;
            case 10: goto label07;
            case 13: goto label05;
            default: goto label08;
        };

     label02:
        $i2 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        if $i2 == 0 goto label03;

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label04;

     label03:
        $r5 = null;

     label04:
        return $r5;

     label05:
        if z0 == 0 goto label06;

        virtualinvoke r0.<java.io.RandomAccessFile: void seek(long)>(l0);

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label06:
        z0 = 1;

        l0 = virtualinvoke r0.<java.io.RandomAccessFile: long getFilePointer()>();

        goto label10;

     label07:
        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label08:
        if z0 == 0 goto label09;

        virtualinvoke r0.<java.io.RandomAccessFile: void seek(long)>(l0);

        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;

     label09:
        $c3 = (char) i1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

     label10:
        goto label01;
    }

    public final long readLong() throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        byte[] $r1, $r3;
        java.nio.ByteOrder $r2;
        long $l0;

        r0 := @this: java.io.RandomAccessFile;

        $r1 = r0.<java.io.RandomAccessFile: byte[] scratch>;

        virtualinvoke r0.<java.io.RandomAccessFile: void readFully(byte[],int,int)>($r1, 0, 8);

        $r3 = r0.<java.io.RandomAccessFile: byte[] scratch>;

        $r2 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        $l0 = staticinvoke <libcore.io.Memory: long peekLong(byte[],int,java.nio.ByteOrder)>($r3, 0, $r2);

        return $l0;
    }

    public final short readShort() throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        byte[] $r1, $r3;
        java.nio.ByteOrder $r2;
        short $s0;

        r0 := @this: java.io.RandomAccessFile;

        $r1 = r0.<java.io.RandomAccessFile: byte[] scratch>;

        virtualinvoke r0.<java.io.RandomAccessFile: void readFully(byte[],int,int)>($r1, 0, 2);

        $r3 = r0.<java.io.RandomAccessFile: byte[] scratch>;

        $r2 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        $s0 = staticinvoke <libcore.io.Memory: short peekShort(byte[],int,java.nio.ByteOrder)>($r3, 0, $r2);

        return $s0;
    }

    public final int readUnsignedByte() throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        int i0;
        java.io.EOFException $r1;

        r0 := @this: java.io.RandomAccessFile;

        i0 = virtualinvoke r0.<java.io.RandomAccessFile: int read()>();

        if i0 >= 0 goto label1;

        $r1 = new java.io.EOFException;

        specialinvoke $r1.<java.io.EOFException: void <init>()>();

        throw $r1;

     label1:
        return i0;
    }

    public final int readUnsignedShort() throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        short $s0;
        int $i1;

        r0 := @this: java.io.RandomAccessFile;

        $s0 = virtualinvoke r0.<java.io.RandomAccessFile: short readShort()>();

        $i1 = $s0 & 65535;

        return $i1;
    }

    public final java.lang.String readUTF() throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        int i0, $i1, $i2, $i3;
        byte[] r1;
        char[] $r2;
        java.lang.String $r3;
        java.io.EOFException $r4;

        r0 := @this: java.io.RandomAccessFile;

        i0 = virtualinvoke r0.<java.io.RandomAccessFile: int readUnsignedShort()>();

        if i0 != 0 goto label1;

        return "";

     label1:
        r1 = newarray (byte)[i0];

        $i1 = lengthof r1;

        $i2 = virtualinvoke r0.<java.io.RandomAccessFile: int read(byte[],int,int)>(r1, 0, $i1);

        $i3 = lengthof r1;

        if $i2 == $i3 goto label2;

        $r4 = new java.io.EOFException;

        specialinvoke $r4.<java.io.EOFException: void <init>()>();

        throw $r4;

     label2:
        $r2 = newarray (char)[i0];

        $r3 = staticinvoke <java.nio.charset.ModifiedUtf8: java.lang.String decode(byte[],char[],int,int)>(r1, $r2, 0, i0);

        return $r3;
    }

    public void seek(long) throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        long l0;
        android.system.ErrnoException r1, $r9;
        byte $b1;
        int $i2;
        java.io.FileDescriptor $r2;
        libcore.io.Os $r3;
        java.io.IOException $r4, $r10;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: java.io.RandomAccessFile;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 >= 0 goto label1;

        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("offset < 0: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        $r3 = <libcore.io.Libcore: libcore.io.Os os>;

        $r2 = r0.<java.io.RandomAccessFile: java.io.FileDescriptor fd>;

        $i2 = <android.system.OsConstants: int SEEK_SET>;

        interfaceinvoke $r3.<libcore.io.Os: long lseek(java.io.FileDescriptor,long,int)>($r2, l0, $i2);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        r1 = $r9;

        $r10 = virtualinvoke r1.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r10;

     label4:
        return;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public void setLength(long) throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        long l0, l3;
        android.system.ErrnoException r1, $r6;
        byte $b1, $b2;
        java.io.FileDescriptor $r2, $r4;
        libcore.io.Os $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r5;
        java.io.IOException $r7;

        r0 := @this: java.io.RandomAccessFile;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 >= 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("newLength < 0");

        throw $r5;

     label1:
        $r3 = <libcore.io.Libcore: libcore.io.Os os>;

        $r2 = r0.<java.io.RandomAccessFile: java.io.FileDescriptor fd>;

        interfaceinvoke $r3.<libcore.io.Os: void ftruncate(java.io.FileDescriptor,long)>($r2, l0);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r1 = $r6;

        $r7 = virtualinvoke r1.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r7;

     label4:
        l3 = virtualinvoke r0.<java.io.RandomAccessFile: long getFilePointer()>();

        $b2 = l3 cmp l0;

        if $b2 <= 0 goto label5;

        virtualinvoke r0.<java.io.RandomAccessFile: void seek(long)>(l0);

     label5:
        $z0 = r0.<java.io.RandomAccessFile: boolean syncMetadata>;

        if $z0 == 0 goto label6;

        $r4 = r0.<java.io.RandomAccessFile: java.io.FileDescriptor fd>;

        virtualinvoke $r4.<java.io.FileDescriptor: void sync()>();

     label6:
        return;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public int skipBytes(int) throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        int i0, i3;
        long l1, l2, $l4, $l5, $l7, $l8, $l9;
        byte $b6;

        r0 := @this: java.io.RandomAccessFile;

        i0 := @parameter0: int;

        if i0 <= 0 goto label3;

        l1 = virtualinvoke r0.<java.io.RandomAccessFile: long getFilePointer()>();

        l2 = virtualinvoke r0.<java.io.RandomAccessFile: long length()>();

        $l4 = (long) i0;

        $l5 = l1 + $l4;

        $b6 = $l5 cmp l2;

        if $b6 <= 0 goto label1;

        $l7 = l2 - l1;

        goto label2;

     label1:
        $l7 = (long) i0;

     label2:
        i3 = (int) $l7;

        $l8 = (long) i3;

        $l9 = l1 + $l8;

        virtualinvoke r0.<java.io.RandomAccessFile: void seek(long)>($l9);

        return i3;

     label3:
        return 0;
    }

    public void write(byte[]) throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        byte[] r1;
        int $i0;

        r0 := @this: java.io.RandomAccessFile;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<java.io.RandomAccessFile: void write(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        byte[] r1;
        int i0, i1;
        java.io.FileDescriptor $r2, $r3;
        boolean $z0;

        r0 := @this: java.io.RandomAccessFile;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<java.io.RandomAccessFile: java.io.FileDescriptor fd>;

        staticinvoke <libcore.io.IoBridge: void write(java.io.FileDescriptor,byte[],int,int)>($r2, r1, i0, i1);

        $z0 = r0.<java.io.RandomAccessFile: boolean syncMetadata>;

        if $z0 == 0 goto label1;

        $r3 = r0.<java.io.RandomAccessFile: java.io.FileDescriptor fd>;

        virtualinvoke $r3.<java.io.FileDescriptor: void sync()>();

     label1:
        return;
    }

    public void write(int) throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        int i0, $i1;
        byte $b2;
        byte[] $r1, $r2;

        r0 := @this: java.io.RandomAccessFile;

        i0 := @parameter0: int;

        $r1 = r0.<java.io.RandomAccessFile: byte[] scratch>;

        $i1 = i0 & 255;

        $b2 = (byte) $i1;

        $r1[0] = $b2;

        $r2 = r0.<java.io.RandomAccessFile: byte[] scratch>;

        virtualinvoke r0.<java.io.RandomAccessFile: void write(byte[],int,int)>($r2, 0, 1);

        return;
    }

    public final void writeBoolean(boolean) throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        boolean z0;
        byte $b0;

        r0 := @this: java.io.RandomAccessFile;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke r0.<java.io.RandomAccessFile: void write(int)>($b0);

        return;
    }

    public final void writeByte(int) throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        int i0, $i1;

        r0 := @this: java.io.RandomAccessFile;

        i0 := @parameter0: int;

        $i1 = i0 & 255;

        virtualinvoke r0.<java.io.RandomAccessFile: void write(int)>($i1);

        return;
    }

    public final void writeBytes(java.lang.String) throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        java.lang.String r1;
        byte[] r2;
        int i0, $i1, $i2;
        char $c3, $c4;
        byte $b5;

        r0 := @this: java.io.RandomAccessFile;

        r1 := @parameter0: java.lang.String;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        r2 = newarray (byte)[$i1];

        i0 = 0;

     label1:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 >= $i2 goto label2;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        $c4 = $c3 & 255;

        $b5 = (byte) $c4;

        r2[i0] = $b5;

        i0 = i0 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<java.io.RandomAccessFile: void write(byte[])>(r2);

        return;
    }

    public final void writeChar(int) throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        int i0;

        r0 := @this: java.io.RandomAccessFile;

        i0 := @parameter0: int;

        virtualinvoke r0.<java.io.RandomAccessFile: void writeShort(int)>(i0);

        return;
    }

    public final void writeChars(java.lang.String) throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        java.lang.String r1;
        byte[] $r2;

        r0 := @this: java.io.RandomAccessFile;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-16BE");

        virtualinvoke r0.<java.io.RandomAccessFile: void write(byte[])>($r2);

        return;
    }

    public final void writeDouble(double) throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        double d0;
        long $l0;

        r0 := @this: java.io.RandomAccessFile;

        d0 := @parameter0: double;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

        virtualinvoke r0.<java.io.RandomAccessFile: void writeLong(long)>($l0);

        return;
    }

    public final void writeFloat(float) throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        float f0;
        int $i0;

        r0 := @this: java.io.RandomAccessFile;

        f0 := @parameter0: float;

        $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        virtualinvoke r0.<java.io.RandomAccessFile: void writeInt(int)>($i0);

        return;
    }

    public final void writeInt(int) throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        int i0;
        java.nio.ByteOrder $r1;
        byte[] $r2, $r3;

        r0 := @this: java.io.RandomAccessFile;

        i0 := @parameter0: int;

        $r2 = r0.<java.io.RandomAccessFile: byte[] scratch>;

        $r1 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        staticinvoke <libcore.io.Memory: void pokeInt(byte[],int,int,java.nio.ByteOrder)>($r2, 0, i0, $r1);

        $r3 = r0.<java.io.RandomAccessFile: byte[] scratch>;

        virtualinvoke r0.<java.io.RandomAccessFile: void write(byte[],int,int)>($r3, 0, 4);

        return;
    }

    public final void writeLong(long) throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        long l0;
        java.nio.ByteOrder $r1;
        byte[] $r2, $r3;

        r0 := @this: java.io.RandomAccessFile;

        l0 := @parameter0: long;

        $r2 = r0.<java.io.RandomAccessFile: byte[] scratch>;

        $r1 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        staticinvoke <libcore.io.Memory: void pokeLong(byte[],int,long,java.nio.ByteOrder)>($r2, 0, l0, $r1);

        $r3 = r0.<java.io.RandomAccessFile: byte[] scratch>;

        virtualinvoke r0.<java.io.RandomAccessFile: void write(byte[],int,int)>($r3, 0, 8);

        return;
    }

    public final void writeShort(int) throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        int i0;
        java.nio.ByteOrder $r1;
        short $s1;
        byte[] $r2, $r3;

        r0 := @this: java.io.RandomAccessFile;

        i0 := @parameter0: int;

        $r2 = r0.<java.io.RandomAccessFile: byte[] scratch>;

        $s1 = (short) i0;

        $r1 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        staticinvoke <libcore.io.Memory: void pokeShort(byte[],int,short,java.nio.ByteOrder)>($r2, 0, $s1, $r1);

        $r3 = r0.<java.io.RandomAccessFile: byte[] scratch>;

        virtualinvoke r0.<java.io.RandomAccessFile: void write(byte[],int,int)>($r3, 0, 2);

        return;
    }

    public final void writeUTF(java.lang.String) throws java.io.IOException
    {
        java.io.RandomAccessFile r0;
        java.lang.String r1;
        byte[] $r2;

        r0 := @this: java.io.RandomAccessFile;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.nio.charset.ModifiedUtf8: byte[] encode(java.lang.String)>(r1);

        virtualinvoke r0.<java.io.RandomAccessFile: void write(byte[])>($r2);

        return;
    }
}
