public class java.security.cert.CertPathBuilder extends java.lang.Object
{
    private static final java.lang.String SERVICE;
    private static final org.apache.harmony.security.fortress.Engine ENGINE;
    private static final java.lang.String PROPERTY_NAME;
    private static final java.lang.String DEFAULT_PROPERTY;
    private final java.security.Provider provider;
    private final java.security.cert.CertPathBuilderSpi spiImpl;
    private final java.lang.String algorithm;

    protected void <init>(java.security.cert.CertPathBuilderSpi, java.security.Provider, java.lang.String)
    {
        java.security.cert.CertPathBuilder r0;
        java.security.cert.CertPathBuilderSpi r1;
        java.security.Provider r2;
        java.lang.String r3;

        r0 := @this: java.security.cert.CertPathBuilder;

        r1 := @parameter0: java.security.cert.CertPathBuilderSpi;

        r2 := @parameter1: java.security.Provider;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.security.cert.CertPathBuilder: java.security.Provider provider> = r2;

        r0.<java.security.cert.CertPathBuilder: java.lang.String algorithm> = r3;

        r0.<java.security.cert.CertPathBuilder: java.security.cert.CertPathBuilderSpi spiImpl> = r1;

        return;
    }

    public final java.lang.String getAlgorithm()
    {
        java.security.cert.CertPathBuilder r0;
        java.lang.String $r1;

        r0 := @this: java.security.cert.CertPathBuilder;

        $r1 = r0.<java.security.cert.CertPathBuilder: java.lang.String algorithm>;

        return $r1;
    }

    public final java.security.Provider getProvider()
    {
        java.security.cert.CertPathBuilder r0;
        java.security.Provider $r1;

        r0 := @this: java.security.cert.CertPathBuilder;

        $r1 = r0.<java.security.cert.CertPathBuilder: java.security.Provider provider>;

        return $r1;
    }

    public static java.security.cert.CertPathBuilder getInstance(java.lang.String) throws java.security.NoSuchAlgorithmException
    {
        java.lang.String r0;
        org.apache.harmony.security.fortress.Engine$SpiAndProvider r1;
        org.apache.harmony.security.fortress.Engine $r2;
        java.security.cert.CertPathBuilder $r3;
        java.lang.Object $r4;
        java.security.Provider $r5;
        java.security.cert.CertPathBuilderSpi $r6;
        java.lang.NullPointerException $r7;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("algorithm == null");

        throw $r7;

     label1:
        $r2 = <java.security.cert.CertPathBuilder: org.apache.harmony.security.fortress.Engine ENGINE>;

        r1 = virtualinvoke $r2.<org.apache.harmony.security.fortress.Engine: org.apache.harmony.security.fortress.Engine$SpiAndProvider getInstance(java.lang.String,java.lang.Object)>(r0, null);

        $r3 = new java.security.cert.CertPathBuilder;

        $r4 = r1.<org.apache.harmony.security.fortress.Engine$SpiAndProvider: java.lang.Object spi>;

        $r6 = (java.security.cert.CertPathBuilderSpi) $r4;

        $r5 = r1.<org.apache.harmony.security.fortress.Engine$SpiAndProvider: java.security.Provider provider>;

        specialinvoke $r3.<java.security.cert.CertPathBuilder: void <init>(java.security.cert.CertPathBuilderSpi,java.security.Provider,java.lang.String)>($r6, $r5, r0);

        return $r3;
    }

    public static java.security.cert.CertPathBuilder getInstance(java.lang.String, java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException
    {
        java.lang.String r0, r1;
        java.security.Provider r2;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;
        java.security.cert.CertPathBuilder $r4;
        java.security.NoSuchProviderException $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("provider == null || provider.isEmpty()");

        throw $r3;

     label2:
        r2 = staticinvoke <java.security.Security: java.security.Provider getProvider(java.lang.String)>(r1);

        if r2 != null goto label3;

        $r5 = new java.security.NoSuchProviderException;

        specialinvoke $r5.<java.security.NoSuchProviderException: void <init>(java.lang.String)>(r1);

        throw $r5;

     label3:
        $r4 = staticinvoke <java.security.cert.CertPathBuilder: java.security.cert.CertPathBuilder getInstance(java.lang.String,java.security.Provider)>(r0, r2);

        return $r4;
    }

    public static java.security.cert.CertPathBuilder getInstance(java.lang.String, java.security.Provider) throws java.security.NoSuchAlgorithmException
    {
        java.lang.String r0;
        java.security.Provider r1;
        java.lang.Object r2;
        org.apache.harmony.security.fortress.Engine $r3;
        java.security.cert.CertPathBuilder $r4;
        java.security.cert.CertPathBuilderSpi $r5;
        java.lang.NullPointerException $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.security.Provider;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("provider == null");

        throw $r7;

     label1:
        if r0 != null goto label2;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("algorithm == null");

        throw $r6;

     label2:
        $r3 = <java.security.cert.CertPathBuilder: org.apache.harmony.security.fortress.Engine ENGINE>;

        r2 = virtualinvoke $r3.<org.apache.harmony.security.fortress.Engine: java.lang.Object getInstance(java.lang.String,java.security.Provider,java.lang.Object)>(r0, r1, null);

        $r4 = new java.security.cert.CertPathBuilder;

        $r5 = (java.security.cert.CertPathBuilderSpi) r2;

        specialinvoke $r4.<java.security.cert.CertPathBuilder: void <init>(java.security.cert.CertPathBuilderSpi,java.security.Provider,java.lang.String)>($r5, r1, r0);

        return $r4;
    }

    public final java.security.cert.CertPathBuilderResult build(java.security.cert.CertPathParameters) throws java.security.cert.CertPathBuilderException, java.security.InvalidAlgorithmParameterException
    {
        java.security.cert.CertPathBuilder r0;
        java.security.cert.CertPathParameters r1;
        java.security.cert.CertPathBuilderSpi $r2;
        java.security.cert.CertPathBuilderResult $r3;

        r0 := @this: java.security.cert.CertPathBuilder;

        r1 := @parameter0: java.security.cert.CertPathParameters;

        $r2 = r0.<java.security.cert.CertPathBuilder: java.security.cert.CertPathBuilderSpi spiImpl>;

        $r3 = virtualinvoke $r2.<java.security.cert.CertPathBuilderSpi: java.security.cert.CertPathBuilderResult engineBuild(java.security.cert.CertPathParameters)>(r1);

        return $r3;
    }

    public static final java.lang.String getDefaultType()
    {
        java.lang.String r0, $r1;

        r0 = staticinvoke <java.security.Security: java.lang.String getProperty(java.lang.String)>("certpathbuilder.type");

        if r0 == null goto label1;

        $r1 = r0;

        goto label2;

     label1:
        $r1 = "PKIX";

     label2:
        return $r1;
    }

    static void <clinit>()
    {
        org.apache.harmony.security.fortress.Engine $r0;

        <java.security.cert.CertPathBuilder: java.lang.String DEFAULT_PROPERTY> = "PKIX";

        <java.security.cert.CertPathBuilder: java.lang.String PROPERTY_NAME> = "certpathbuilder.type";

        <java.security.cert.CertPathBuilder: java.lang.String SERVICE> = "CertPathBuilder";

        $r0 = new org.apache.harmony.security.fortress.Engine;

        specialinvoke $r0.<org.apache.harmony.security.fortress.Engine: void <init>(java.lang.String)>("CertPathBuilder");

        <java.security.cert.CertPathBuilder: org.apache.harmony.security.fortress.Engine ENGINE> = $r0;

        return;
    }
}
