public class java.util.SimpleTimeZone extends java.util.TimeZone
{
    private static final long serialVersionUID;
    private int rawOffset;
    private int startYear;
    private int startMonth;
    private int startDay;
    private int startDayOfWeek;
    private int startTime;
    private int endMonth;
    private int endDay;
    private int endDayOfWeek;
    private int endTime;
    private int startMode;
    private int endMode;
    private static final int DOM_MODE;
    private static final int DOW_IN_MONTH_MODE;
    private static final int DOW_GE_DOM_MODE;
    private static final int DOW_LE_DOM_MODE;
    public static final int UTC_TIME;
    public static final int STANDARD_TIME;
    public static final int WALL_TIME;
    private boolean useDaylight;
    private int dstSavings;
    private static final java.io.ObjectStreamField[] serialPersistentFields;

    public void <init>(int, java.lang.String)
    {
        java.util.SimpleTimeZone r0;
        int i0;
        java.lang.String r1;

        r0 := @this: java.util.SimpleTimeZone;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<java.util.TimeZone: void <init>()>();

        r0.<java.util.SimpleTimeZone: int dstSavings> = 3600000;

        virtualinvoke r0.<java.util.SimpleTimeZone: void setID(java.lang.String)>(r1);

        r0.<java.util.SimpleTimeZone: int rawOffset> = i0;

        return;
    }

    public void <init>(int, java.lang.String, int, int, int, int, int, int, int, int)
    {
        java.util.SimpleTimeZone r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8;
        java.lang.String r1;

        r0 := @this: java.util.SimpleTimeZone;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        i6 := @parameter7: int;

        i7 := @parameter8: int;

        i8 := @parameter9: int;

        specialinvoke r0.<java.util.SimpleTimeZone: void <init>(int,java.lang.String,int,int,int,int,int,int,int,int,int)>(i0, r1, i1, i2, i3, i4, i5, i6, i7, i8, 3600000);

        return;
    }

    public void <init>(int, java.lang.String, int, int, int, int, int, int, int, int, int)
    {
        java.util.SimpleTimeZone r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9;
        java.lang.String r1, $r6;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: java.util.SimpleTimeZone;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        i6 := @parameter7: int;

        i7 := @parameter8: int;

        i8 := @parameter9: int;

        i9 := @parameter10: int;

        specialinvoke r0.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(i0, r1);

        if i9 > 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid daylightSavings: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        r0.<java.util.SimpleTimeZone: int dstSavings> = i9;

        r0.<java.util.SimpleTimeZone: int startMonth> = i1;

        r0.<java.util.SimpleTimeZone: int startDay> = i2;

        r0.<java.util.SimpleTimeZone: int startDayOfWeek> = i3;

        r0.<java.util.SimpleTimeZone: int startTime> = i4;

        specialinvoke r0.<java.util.SimpleTimeZone: void setStartMode()>();

        r0.<java.util.SimpleTimeZone: int endMonth> = i5;

        r0.<java.util.SimpleTimeZone: int endDay> = i6;

        r0.<java.util.SimpleTimeZone: int endDayOfWeek> = i7;

        r0.<java.util.SimpleTimeZone: int endTime> = i8;

        specialinvoke r0.<java.util.SimpleTimeZone: void setEndMode()>();

        return;
    }

    public void <init>(int, java.lang.String, int, int, int, int, int, int, int, int, int, int, int)
    {
        java.util.SimpleTimeZone r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11;
        java.lang.String r1;

        r0 := @this: java.util.SimpleTimeZone;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        i6 := @parameter7: int;

        i7 := @parameter8: int;

        i8 := @parameter9: int;

        i9 := @parameter10: int;

        i10 := @parameter11: int;

        i11 := @parameter12: int;

        specialinvoke r0.<java.util.SimpleTimeZone: void <init>(int,java.lang.String,int,int,int,int,int,int,int,int,int)>(i0, r1, i1, i2, i3, i4, i6, i7, i8, i9, i11);

        r0.<java.util.SimpleTimeZone: int startMode> = i5;

        r0.<java.util.SimpleTimeZone: int endMode> = i10;

        return;
    }

    public java.lang.Object clone()
    {
        java.util.SimpleTimeZone r0, r1;
        java.lang.Object $r2;

        r0 := @this: java.util.SimpleTimeZone;

        $r2 = specialinvoke r0.<java.util.TimeZone: java.lang.Object clone()>();

        r1 = (java.util.SimpleTimeZone) $r2;

        return r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.SimpleTimeZone r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25;

        r0 := @this: java.util.SimpleTimeZone;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof java.util.SimpleTimeZone;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (java.util.SimpleTimeZone) r1;

        $r3 = virtualinvoke r0.<java.util.SimpleTimeZone: java.lang.String getID()>();

        $r4 = virtualinvoke r2.<java.util.SimpleTimeZone: java.lang.String getID()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label3;

        $i1 = r0.<java.util.SimpleTimeZone: int rawOffset>;

        $i0 = r2.<java.util.SimpleTimeZone: int rawOffset>;

        if $i1 != $i0 goto label3;

        $z3 = r0.<java.util.SimpleTimeZone: boolean useDaylight>;

        $z2 = r2.<java.util.SimpleTimeZone: boolean useDaylight>;

        if $z3 != $z2 goto label3;

        $z4 = r0.<java.util.SimpleTimeZone: boolean useDaylight>;

        if $z4 == 0 goto label2;

        $i3 = r0.<java.util.SimpleTimeZone: int startYear>;

        $i2 = r2.<java.util.SimpleTimeZone: int startYear>;

        if $i3 != $i2 goto label3;

        $i6 = r0.<java.util.SimpleTimeZone: int startMonth>;

        $i4 = r2.<java.util.SimpleTimeZone: int startMonth>;

        if $i6 != $i4 goto label3;

        $i8 = r0.<java.util.SimpleTimeZone: int startDay>;

        $i5 = r2.<java.util.SimpleTimeZone: int startDay>;

        if $i8 != $i5 goto label3;

        $i10 = r0.<java.util.SimpleTimeZone: int startMode>;

        $i7 = r2.<java.util.SimpleTimeZone: int startMode>;

        if $i10 != $i7 goto label3;

        $i12 = r0.<java.util.SimpleTimeZone: int startDayOfWeek>;

        $i9 = r2.<java.util.SimpleTimeZone: int startDayOfWeek>;

        if $i12 != $i9 goto label3;

        $i14 = r0.<java.util.SimpleTimeZone: int startTime>;

        $i11 = r2.<java.util.SimpleTimeZone: int startTime>;

        if $i14 != $i11 goto label3;

        $i16 = r0.<java.util.SimpleTimeZone: int endMonth>;

        $i13 = r2.<java.util.SimpleTimeZone: int endMonth>;

        if $i16 != $i13 goto label3;

        $i18 = r0.<java.util.SimpleTimeZone: int endDay>;

        $i15 = r2.<java.util.SimpleTimeZone: int endDay>;

        if $i18 != $i15 goto label3;

        $i20 = r0.<java.util.SimpleTimeZone: int endDayOfWeek>;

        $i17 = r2.<java.util.SimpleTimeZone: int endDayOfWeek>;

        if $i20 != $i17 goto label3;

        $i23 = r0.<java.util.SimpleTimeZone: int endTime>;

        $i19 = r2.<java.util.SimpleTimeZone: int endTime>;

        if $i23 != $i19 goto label3;

        $i21 = r0.<java.util.SimpleTimeZone: int endMode>;

        $i24 = r2.<java.util.SimpleTimeZone: int endMode>;

        if $i21 != $i24 goto label3;

        $i25 = r0.<java.util.SimpleTimeZone: int dstSavings>;

        $i22 = r2.<java.util.SimpleTimeZone: int dstSavings>;

        if $i25 != $i22 goto label3;

     label2:
        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        return $z5;
    }

    public int getDSTSavings()
    {
        java.util.SimpleTimeZone r0;
        boolean $z0;
        int $i0;

        r0 := @this: java.util.SimpleTimeZone;

        $z0 = r0.<java.util.SimpleTimeZone: boolean useDaylight>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = r0.<java.util.SimpleTimeZone: int dstSavings>;

        return $i0;
    }

    public int getOffset(int, int, int, int, int, int)
    {
        java.util.SimpleTimeZone r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, i108;
        boolean $z0, $z1, $z2, $z3, $z4;
        byte $b33;
        byte[] $r1, $r2, $r3;
        java.lang.StringBuilder $r4, $r7, $r8;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: java.util.SimpleTimeZone;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        if i0 == 0 goto label01;

        if i0 == 1 goto label01;

        $r5 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid era: ");

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label01:
        specialinvoke r0.<java.util.SimpleTimeZone: void checkRange(int,int,int)>(i2, i4, i5);

        if i2 != 1 goto label02;

        if i3 != 29 goto label02;

        $z4 = specialinvoke r0.<java.util.SimpleTimeZone: boolean isLeapYear(int)>(i1);

        if $z4 != 0 goto label03;

     label02:
        specialinvoke r0.<java.util.SimpleTimeZone: void checkDay(int,int)>(i2, i3);

     label03:
        $z0 = virtualinvoke r0.<java.util.SimpleTimeZone: boolean useDaylightTime()>();

        if $z0 == 0 goto label04;

        if i0 != 1 goto label04;

        $i15 = r0.<java.util.SimpleTimeZone: int startYear>;

        if i1 >= $i15 goto label05;

     label04:
        $i13 = r0.<java.util.SimpleTimeZone: int rawOffset>;

        return $i13;

     label05:
        $i17 = r0.<java.util.SimpleTimeZone: int endMonth>;

        $i14 = r0.<java.util.SimpleTimeZone: int startMonth>;

        if $i17 >= $i14 goto label06;

        $i105 = r0.<java.util.SimpleTimeZone: int endMonth>;

        if i2 <= $i105 goto label08;

        $i104 = r0.<java.util.SimpleTimeZone: int startMonth>;

        if i2 >= $i104 goto label08;

        $i103 = r0.<java.util.SimpleTimeZone: int rawOffset>;

        return $i103;

     label06:
        $i16 = r0.<java.util.SimpleTimeZone: int startMonth>;

        if i2 < $i16 goto label07;

        $i18 = r0.<java.util.SimpleTimeZone: int endMonth>;

        if i2 <= $i18 goto label08;

     label07:
        $i19 = r0.<java.util.SimpleTimeZone: int rawOffset>;

        return $i19;

     label08:
        i6 = 0;

        $i20 = i4 - i3;

        i8 = specialinvoke r0.<java.util.SimpleTimeZone: int mod7(int)>($i20);

        $i22 = r0.<java.util.SimpleTimeZone: int startMonth>;

        if i2 != $i22 goto label17;

        $i65 = r0.<java.util.SimpleTimeZone: int startMode>;

        tableswitch($i65)
        {
            case 1: goto label09;
            case 2: goto label10;
            case 3: goto label13;
            case 4: goto label14;
            default: goto label15;
        };

     label09:
        i6 = r0.<java.util.SimpleTimeZone: int startDay>;

        goto label15;

     label10:
        $i84 = r0.<java.util.SimpleTimeZone: int startDay>;

        if $i84 < 0 goto label11;

        $i100 = r0.<java.util.SimpleTimeZone: int startDayOfWeek>;

        $i98 = $i100 - i8;

        $i99 = specialinvoke r0.<java.util.SimpleTimeZone: int mod7(int)>($i98);

        $i106 = $i99 + 1;

        $i96 = r0.<java.util.SimpleTimeZone: int startDay>;

        $i97 = $i96 - 1;

        $i107 = $i97 * 7;

        i6 = $i106 + $i107;

        goto label15;

     label11:
        $r3 = <java.util.GregorianCalendar: byte[] DaysInMonth>;

        $i83 = r0.<java.util.SimpleTimeZone: int startMonth>;

        i7 = $r3[$i83];

        $i95 = r0.<java.util.SimpleTimeZone: int startMonth>;

        if $i95 != 1 goto label12;

        $z3 = specialinvoke r0.<java.util.SimpleTimeZone: boolean isLeapYear(int)>(i1);

        if $z3 == 0 goto label12;

        i7 = i7 + 1;

     label12:
        $i92 = i7 + 1;

        $i94 = r0.<java.util.SimpleTimeZone: int startDayOfWeek>;

        $i93 = i8 + i7;

        $i91 = $i94 - $i93;

        $i89 = specialinvoke r0.<java.util.SimpleTimeZone: int mod7(int)>($i91);

        $i102 = $i92 + $i89;

        $i90 = r0.<java.util.SimpleTimeZone: int startDay>;

        $i101 = $i90 * 7;

        i6 = $i102 + $i101;

        goto label15;

     label13:
        $i82 = r0.<java.util.SimpleTimeZone: int startDay>;

        $i88 = r0.<java.util.SimpleTimeZone: int startDayOfWeek>;

        $i75 = r0.<java.util.SimpleTimeZone: int startDay>;

        $i86 = i8 + $i75;

        $i85 = $i86 - 1;

        $i87 = $i88 - $i85;

        $i81 = specialinvoke r0.<java.util.SimpleTimeZone: int mod7(int)>($i87);

        i6 = $i82 + $i81;

        goto label15;

     label14:
        $i74 = r0.<java.util.SimpleTimeZone: int startDay>;

        $i80 = r0.<java.util.SimpleTimeZone: int startDayOfWeek>;

        $i68 = r0.<java.util.SimpleTimeZone: int startDay>;

        $i78 = i8 + $i68;

        $i77 = $i78 - 1;

        $i79 = $i80 - $i77;

        $i73 = specialinvoke r0.<java.util.SimpleTimeZone: int mod7(int)>($i79);

        i6 = $i74 + $i73;

        $i76 = r0.<java.util.SimpleTimeZone: int startDay>;

        if i6 == $i76 goto label15;

        i6 = i6 + -7;

     label15:
        if i6 > i3 goto label16;

        if i6 != i3 goto label17;

        $i67 = r0.<java.util.SimpleTimeZone: int startTime>;

        if i5 >= $i67 goto label17;

     label16:
        $i66 = r0.<java.util.SimpleTimeZone: int rawOffset>;

        return $i66;

     label17:
        $i24 = r0.<java.util.SimpleTimeZone: int endTime>;

        $i21 = r0.<java.util.SimpleTimeZone: int dstSavings>;

        i9 = $i24 - $i21;

        $i23 = i2 + 1;

        i10 = $i23 % 12;

        $i26 = r0.<java.util.SimpleTimeZone: int endMonth>;

        if i2 == $i26 goto label18;

        if i9 >= 0 goto label30;

        $i72 = r0.<java.util.SimpleTimeZone: int endMonth>;

        if i10 != $i72 goto label30;

     label18:
        $i25 = r0.<java.util.SimpleTimeZone: int endMode>;

        tableswitch($i25)
        {
            case 1: goto label19;
            case 2: goto label20;
            case 3: goto label23;
            case 4: goto label24;
            default: goto label25;
        };

     label19:
        i6 = r0.<java.util.SimpleTimeZone: int endDay>;

        goto label25;

     label20:
        $i47 = r0.<java.util.SimpleTimeZone: int endDay>;

        if $i47 < 0 goto label21;

        $i58 = r0.<java.util.SimpleTimeZone: int endDayOfWeek>;

        $i59 = $i58 - i8;

        $i60 = specialinvoke r0.<java.util.SimpleTimeZone: int mod7(int)>($i59);

        $i71 = $i60 + 1;

        $i61 = r0.<java.util.SimpleTimeZone: int endDay>;

        $i69 = $i61 - 1;

        $i70 = $i69 * 7;

        i6 = $i71 + $i70;

        goto label25;

     label21:
        $r2 = <java.util.GregorianCalendar: byte[] DaysInMonth>;

        $i53 = r0.<java.util.SimpleTimeZone: int endMonth>;

        i108 = $r2[$i53];

        $i52 = r0.<java.util.SimpleTimeZone: int endMonth>;

        if $i52 != 1 goto label22;

        $z2 = specialinvoke r0.<java.util.SimpleTimeZone: boolean isLeapYear(int)>(i1);

        if $z2 == 0 goto label22;

        i108 = i108 + 1;

     label22:
        $i55 = i108 + 1;

        $i57 = r0.<java.util.SimpleTimeZone: int endDayOfWeek>;

        $i51 = i8 + i108;

        $i56 = $i57 - $i51;

        $i54 = specialinvoke r0.<java.util.SimpleTimeZone: int mod7(int)>($i56);

        $i64 = $i55 + $i54;

        $i62 = r0.<java.util.SimpleTimeZone: int endDay>;

        $i63 = $i62 * 7;

        i6 = $i64 + $i63;

        goto label25;

     label23:
        $i49 = r0.<java.util.SimpleTimeZone: int endDay>;

        $i43 = r0.<java.util.SimpleTimeZone: int endDayOfWeek>;

        $i46 = r0.<java.util.SimpleTimeZone: int endDay>;

        $i45 = i8 + $i46;

        $i44 = $i45 - 1;

        $i50 = $i43 - $i44;

        $i48 = specialinvoke r0.<java.util.SimpleTimeZone: int mod7(int)>($i50);

        i6 = $i49 + $i48;

        goto label25;

     label24:
        $i42 = r0.<java.util.SimpleTimeZone: int endDay>;

        $i36 = r0.<java.util.SimpleTimeZone: int endDayOfWeek>;

        $i37 = r0.<java.util.SimpleTimeZone: int endDay>;

        $i38 = i8 + $i37;

        $i35 = $i38 - 1;

        $i41 = $i36 - $i35;

        $i39 = specialinvoke r0.<java.util.SimpleTimeZone: int mod7(int)>($i41);

        i6 = $i42 + $i39;

        $i40 = r0.<java.util.SimpleTimeZone: int endDay>;

        if i6 == $i40 goto label25;

        i6 = i6 + -7;

     label25:
        i11 = r0.<java.util.SimpleTimeZone: int endMonth>;

        if i9 >= 0 goto label27;

        $i30 = i9 / 86400000;

        i12 = 1 - $i30;

        $i34 = i9 % 86400000;

        i9 = $i34 + 86400000;

        i6 = i6 - i12;

        if i6 > 0 goto label27;

        i11 = i11 + -1;

        if i11 >= 0 goto label26;

        i11 = 11;

     label26:
        $r1 = <java.util.GregorianCalendar: byte[] DaysInMonth>;

        $b33 = $r1[i11];

        i6 = i6 + $b33;

        if i11 != 1 goto label27;

        $z1 = specialinvoke r0.<java.util.SimpleTimeZone: boolean isLeapYear(int)>(i1);

        if $z1 == 0 goto label27;

        i6 = i6 + 1;

     label27:
        if i2 != i11 goto label29;

        if i6 < i3 goto label28;

        if i6 != i3 goto label30;

        if i5 < i9 goto label30;

     label28:
        $i29 = r0.<java.util.SimpleTimeZone: int rawOffset>;

        return $i29;

     label29:
        if i10 == i11 goto label30;

        $i32 = r0.<java.util.SimpleTimeZone: int rawOffset>;

        return $i32;

     label30:
        $i27 = r0.<java.util.SimpleTimeZone: int rawOffset>;

        $i28 = r0.<java.util.SimpleTimeZone: int dstSavings>;

        $i31 = $i27 + $i28;

        return $i31;
    }

    public int getOffset(long)
    {
        java.util.SimpleTimeZone r0;
        long l0, $l2, $l3;
        int[] r1;
        boolean $z0;
        int $i1, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: java.util.SimpleTimeZone;

        l0 := @parameter0: long;

        $z0 = virtualinvoke r0.<java.util.SimpleTimeZone: boolean useDaylightTime()>();

        if $z0 != 0 goto label1;

        $i10 = r0.<java.util.SimpleTimeZone: int rawOffset>;

        return $i10;

     label1:
        $i1 = r0.<java.util.SimpleTimeZone: int rawOffset>;

        $l2 = (long) $i1;

        $l3 = l0 + $l2;

        r1 = staticinvoke <java.util.Grego: int[] timeToFields(long,int[])>($l3, null);

        $i8 = r1[0];

        $i7 = r1[1];

        $i6 = r1[2];

        $i5 = r1[3];

        $i4 = r1[5];

        $i9 = virtualinvoke r0.<java.util.SimpleTimeZone: int getOffset(int,int,int,int,int,int)>(1, $i8, $i7, $i6, $i5, $i4);

        return $i9;
    }

    public int getRawOffset()
    {
        java.util.SimpleTimeZone r0;
        int $i0;

        r0 := @this: java.util.SimpleTimeZone;

        $i0 = r0.<java.util.SimpleTimeZone: int rawOffset>;

        return $i0;
    }

    public synchronized int hashCode()
    {
        java.util.SimpleTimeZone r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: java.util.SimpleTimeZone;

        $r1 = virtualinvoke r0.<java.util.SimpleTimeZone: java.lang.String getID()>();

        $i1 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i2 = r0.<java.util.SimpleTimeZone: int rawOffset>;

        i0 = $i1 + $i2;

        $z0 = r0.<java.util.SimpleTimeZone: boolean useDaylight>;

        if $z0 == 0 goto label1;

        $i4 = r0.<java.util.SimpleTimeZone: int startYear>;

        $i3 = r0.<java.util.SimpleTimeZone: int startMonth>;

        $i6 = $i4 + $i3;

        $i5 = r0.<java.util.SimpleTimeZone: int startDay>;

        $i8 = $i6 + $i5;

        $i7 = r0.<java.util.SimpleTimeZone: int startDayOfWeek>;

        $i10 = $i8 + $i7;

        $i9 = r0.<java.util.SimpleTimeZone: int startTime>;

        $i12 = $i10 + $i9;

        $i11 = r0.<java.util.SimpleTimeZone: int startMode>;

        $i13 = $i12 + $i11;

        $i14 = r0.<java.util.SimpleTimeZone: int endMonth>;

        $i15 = $i13 + $i14;

        $i16 = r0.<java.util.SimpleTimeZone: int endDay>;

        $i17 = $i15 + $i16;

        $i18 = r0.<java.util.SimpleTimeZone: int endDayOfWeek>;

        $i19 = $i17 + $i18;

        $i20 = r0.<java.util.SimpleTimeZone: int endTime>;

        $i21 = $i19 + $i20;

        $i22 = r0.<java.util.SimpleTimeZone: int endMode>;

        $i23 = $i21 + $i22;

        $i24 = r0.<java.util.SimpleTimeZone: int dstSavings>;

        $i25 = $i23 + $i24;

        i0 = i0 + $i25;

     label1:
        return i0;
    }

    public boolean hasSameRules(java.util.TimeZone)
    {
        java.util.SimpleTimeZone r0, r2;
        java.util.TimeZone r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;

        r0 := @this: java.util.SimpleTimeZone;

        r1 := @parameter0: java.util.TimeZone;

        $z0 = r1 instanceof java.util.SimpleTimeZone;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (java.util.SimpleTimeZone) r1;

        $z2 = r0.<java.util.SimpleTimeZone: boolean useDaylight>;

        $z1 = r2.<java.util.SimpleTimeZone: boolean useDaylight>;

        if $z2 == $z1 goto label2;

        return 0;

     label2:
        $z3 = r0.<java.util.SimpleTimeZone: boolean useDaylight>;

        if $z3 != 0 goto label5;

        $i26 = r0.<java.util.SimpleTimeZone: int rawOffset>;

        $i25 = r2.<java.util.SimpleTimeZone: int rawOffset>;

        if $i26 != $i25 goto label3;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        return $z5;

     label5:
        $i1 = r0.<java.util.SimpleTimeZone: int rawOffset>;

        $i0 = r2.<java.util.SimpleTimeZone: int rawOffset>;

        if $i1 != $i0 goto label6;

        $i3 = r0.<java.util.SimpleTimeZone: int dstSavings>;

        $i2 = r2.<java.util.SimpleTimeZone: int dstSavings>;

        if $i3 != $i2 goto label6;

        $i5 = r0.<java.util.SimpleTimeZone: int startYear>;

        $i4 = r2.<java.util.SimpleTimeZone: int startYear>;

        if $i5 != $i4 goto label6;

        $i7 = r0.<java.util.SimpleTimeZone: int startMonth>;

        $i6 = r2.<java.util.SimpleTimeZone: int startMonth>;

        if $i7 != $i6 goto label6;

        $i10 = r0.<java.util.SimpleTimeZone: int startDay>;

        $i8 = r2.<java.util.SimpleTimeZone: int startDay>;

        if $i10 != $i8 goto label6;

        $i12 = r0.<java.util.SimpleTimeZone: int startMode>;

        $i9 = r2.<java.util.SimpleTimeZone: int startMode>;

        if $i12 != $i9 goto label6;

        $i14 = r0.<java.util.SimpleTimeZone: int startDayOfWeek>;

        $i11 = r2.<java.util.SimpleTimeZone: int startDayOfWeek>;

        if $i14 != $i11 goto label6;

        $i16 = r0.<java.util.SimpleTimeZone: int startTime>;

        $i13 = r2.<java.util.SimpleTimeZone: int startTime>;

        if $i16 != $i13 goto label6;

        $i18 = r0.<java.util.SimpleTimeZone: int endMonth>;

        $i15 = r2.<java.util.SimpleTimeZone: int endMonth>;

        if $i18 != $i15 goto label6;

        $i20 = r0.<java.util.SimpleTimeZone: int endDay>;

        $i17 = r2.<java.util.SimpleTimeZone: int endDay>;

        if $i20 != $i17 goto label6;

        $i22 = r0.<java.util.SimpleTimeZone: int endDayOfWeek>;

        $i19 = r2.<java.util.SimpleTimeZone: int endDayOfWeek>;

        if $i22 != $i19 goto label6;

        $i24 = r0.<java.util.SimpleTimeZone: int endTime>;

        $i21 = r2.<java.util.SimpleTimeZone: int endTime>;

        if $i24 != $i21 goto label6;

        $i27 = r0.<java.util.SimpleTimeZone: int endMode>;

        $i23 = r2.<java.util.SimpleTimeZone: int endMode>;

        if $i27 != $i23 goto label6;

        $z4 = 1;

        goto label7;

     label6:
        $z4 = 0;

     label7:
        return $z4;
    }

    public boolean inDaylightTime(java.util.Date)
    {
        java.util.SimpleTimeZone r0;
        java.util.Date r1;
        boolean $z0, $z1;
        long $l0;
        int $i1, $i2;

        r0 := @this: java.util.SimpleTimeZone;

        r1 := @parameter0: java.util.Date;

        $z0 = virtualinvoke r0.<java.util.SimpleTimeZone: boolean useDaylightTime()>();

        if $z0 == 0 goto label1;

        $l0 = virtualinvoke r1.<java.util.Date: long getTime()>();

        $i1 = virtualinvoke r0.<java.util.SimpleTimeZone: int getOffset(long)>($l0);

        $i2 = virtualinvoke r0.<java.util.SimpleTimeZone: int getRawOffset()>();

        if $i1 == $i2 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private boolean isLeapYear(int)
    {
        java.util.SimpleTimeZone r0;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1;

        r0 := @this: java.util.SimpleTimeZone;

        i0 := @parameter0: int;

        if i0 <= 1582 goto label4;

        $i2 = i0 % 4;

        if $i2 != 0 goto label2;

        $i3 = i0 % 100;

        if $i3 != 0 goto label1;

        $i4 = i0 % 400;

        if $i4 != 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        $i1 = i0 % 4;

        if $i1 != 0 goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        return $z0;
    }

    private int mod7(int)
    {
        java.util.SimpleTimeZone r0;
        int i0, i1, $i2;

        r0 := @this: java.util.SimpleTimeZone;

        i0 := @parameter0: int;

        i1 = i0 % 7;

        if i0 >= 0 goto label1;

        if i1 >= 0 goto label1;

        $i2 = 7 + i1;

        goto label2;

     label1:
        $i2 = i1;

     label2:
        return $i2;
    }

    public void setDSTSavings(int)
    {
        java.util.SimpleTimeZone r0;
        int i0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: java.util.SimpleTimeZone;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("milliseconds <= 0: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label1:
        r0.<java.util.SimpleTimeZone: int dstSavings> = i0;

        return;
    }

    private void checkRange(int, int, int)
    {
        java.util.SimpleTimeZone r0;
        int i0, i1, i2;
        java.lang.IllegalArgumentException $r1, $r6, $r11;
        java.lang.StringBuilder $r2, $r3, $r4, $r7, $r8, $r9, $r12, $r13, $r14;
        java.lang.String $r5, $r10, $r15;

        r0 := @this: java.util.SimpleTimeZone;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 < 0 goto label1;

        if i0 <= 11 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid month: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label2:
        if i1 < 1 goto label3;

        if i1 <= 7 goto label4;

     label3:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid day of week: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label4:
        if i2 < 0 goto label5;

        if i2 < 86400000 goto label6;

     label5:
        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid time: ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label6:
        return;
    }

    private void checkDay(int, int)
    {
        java.util.SimpleTimeZone r0;
        int i0, i1;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        byte[] $r6;
        byte $b2;

        r0 := @this: java.util.SimpleTimeZone;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 <= 0 goto label1;

        $r6 = <java.util.GregorianCalendar: byte[] DaysInMonth>;

        $b2 = $r6[i0];

        if i1 <= $b2 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid day of month: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label2:
        return;
    }

    private void setEndMode()
    {
        java.util.SimpleTimeZone r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: java.util.SimpleTimeZone;

        $i0 = r0.<java.util.SimpleTimeZone: int endDayOfWeek>;

        if $i0 != 0 goto label01;

        r0.<java.util.SimpleTimeZone: int endMode> = 1;

        goto label04;

     label01:
        $i1 = r0.<java.util.SimpleTimeZone: int endDayOfWeek>;

        if $i1 >= 0 goto label03;

        $i18 = r0.<java.util.SimpleTimeZone: int endDayOfWeek>;

        $i20 = neg $i18;

        r0.<java.util.SimpleTimeZone: int endDayOfWeek> = $i20;

        $i19 = r0.<java.util.SimpleTimeZone: int endDay>;

        if $i19 >= 0 goto label02;

        $i22 = r0.<java.util.SimpleTimeZone: int endDay>;

        $i21 = neg $i22;

        r0.<java.util.SimpleTimeZone: int endDay> = $i21;

        r0.<java.util.SimpleTimeZone: int endMode> = 4;

        goto label04;

     label02:
        r0.<java.util.SimpleTimeZone: int endMode> = 3;

        goto label04;

     label03:
        r0.<java.util.SimpleTimeZone: int endMode> = 2;

     label04:
        $i2 = r0.<java.util.SimpleTimeZone: int startDay>;

        if $i2 == 0 goto label05;

        $i16 = r0.<java.util.SimpleTimeZone: int endDay>;

        if $i16 == 0 goto label05;

        $z0 = 1;

        goto label06;

     label05:
        $z0 = 0;

     label06:
        r0.<java.util.SimpleTimeZone: boolean useDaylight> = $z0;

        $i3 = r0.<java.util.SimpleTimeZone: int endDay>;

        if $i3 == 0 goto label11;

        $i10 = r0.<java.util.SimpleTimeZone: int endMonth>;

        $i7 = r0.<java.util.SimpleTimeZone: int endMode>;

        if $i7 != 1 goto label07;

        $i9 = 1;

        goto label08;

     label07:
        $i9 = r0.<java.util.SimpleTimeZone: int endDayOfWeek>;

     label08:
        $i8 = r0.<java.util.SimpleTimeZone: int endTime>;

        specialinvoke r0.<java.util.SimpleTimeZone: void checkRange(int,int,int)>($i10, $i9, $i8);

        $i11 = r0.<java.util.SimpleTimeZone: int endMode>;

        if $i11 == 2 goto label09;

        $i17 = r0.<java.util.SimpleTimeZone: int endMonth>;

        $i14 = r0.<java.util.SimpleTimeZone: int endDay>;

        specialinvoke r0.<java.util.SimpleTimeZone: void checkDay(int,int)>($i17, $i14);

        goto label11;

     label09:
        $i12 = r0.<java.util.SimpleTimeZone: int endDay>;

        if $i12 < -5 goto label10;

        $i15 = r0.<java.util.SimpleTimeZone: int endDay>;

        if $i15 <= 5 goto label11;

     label10:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Day of week in month: ");

        $i13 = r0.<java.util.SimpleTimeZone: int endDay>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r1;

     label11:
        $i4 = r0.<java.util.SimpleTimeZone: int endMode>;

        if $i4 == 1 goto label12;

        $i5 = r0.<java.util.SimpleTimeZone: int endDayOfWeek>;

        $i6 = $i5 - 1;

        r0.<java.util.SimpleTimeZone: int endDayOfWeek> = $i6;

     label12:
        return;
    }

    public void setEndRule(int, int, int)
    {
        java.util.SimpleTimeZone r0;
        int i0, i1, i2;

        r0 := @this: java.util.SimpleTimeZone;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0.<java.util.SimpleTimeZone: int endMonth> = i0;

        r0.<java.util.SimpleTimeZone: int endDay> = i1;

        r0.<java.util.SimpleTimeZone: int endDayOfWeek> = 0;

        r0.<java.util.SimpleTimeZone: int endTime> = i2;

        specialinvoke r0.<java.util.SimpleTimeZone: void setEndMode()>();

        return;
    }

    public void setEndRule(int, int, int, int)
    {
        java.util.SimpleTimeZone r0;
        int i0, i1, i2, i3;

        r0 := @this: java.util.SimpleTimeZone;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r0.<java.util.SimpleTimeZone: int endMonth> = i0;

        r0.<java.util.SimpleTimeZone: int endDay> = i1;

        r0.<java.util.SimpleTimeZone: int endDayOfWeek> = i2;

        r0.<java.util.SimpleTimeZone: int endTime> = i3;

        specialinvoke r0.<java.util.SimpleTimeZone: void setEndMode()>();

        return;
    }

    public void setEndRule(int, int, int, int, boolean)
    {
        java.util.SimpleTimeZone r0;
        int i0, i1, i2, i3, $i4, $i5;
        boolean z0;

        r0 := @this: java.util.SimpleTimeZone;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        z0 := @parameter4: boolean;

        r0.<java.util.SimpleTimeZone: int endMonth> = i0;

        if z0 == 0 goto label1;

        $i4 = i1;

        goto label2;

     label1:
        $i4 = neg i1;

     label2:
        r0.<java.util.SimpleTimeZone: int endDay> = $i4;

        $i5 = neg i2;

        r0.<java.util.SimpleTimeZone: int endDayOfWeek> = $i5;

        r0.<java.util.SimpleTimeZone: int endTime> = i3;

        specialinvoke r0.<java.util.SimpleTimeZone: void setEndMode()>();

        return;
    }

    public void setRawOffset(int)
    {
        java.util.SimpleTimeZone r0;
        int i0;

        r0 := @this: java.util.SimpleTimeZone;

        i0 := @parameter0: int;

        r0.<java.util.SimpleTimeZone: int rawOffset> = i0;

        return;
    }

    private void setStartMode()
    {
        java.util.SimpleTimeZone r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: java.util.SimpleTimeZone;

        $i0 = r0.<java.util.SimpleTimeZone: int startDayOfWeek>;

        if $i0 != 0 goto label01;

        r0.<java.util.SimpleTimeZone: int startMode> = 1;

        goto label04;

     label01:
        $i1 = r0.<java.util.SimpleTimeZone: int startDayOfWeek>;

        if $i1 >= 0 goto label03;

        $i18 = r0.<java.util.SimpleTimeZone: int startDayOfWeek>;

        $i20 = neg $i18;

        r0.<java.util.SimpleTimeZone: int startDayOfWeek> = $i20;

        $i19 = r0.<java.util.SimpleTimeZone: int startDay>;

        if $i19 >= 0 goto label02;

        $i22 = r0.<java.util.SimpleTimeZone: int startDay>;

        $i21 = neg $i22;

        r0.<java.util.SimpleTimeZone: int startDay> = $i21;

        r0.<java.util.SimpleTimeZone: int startMode> = 4;

        goto label04;

     label02:
        r0.<java.util.SimpleTimeZone: int startMode> = 3;

        goto label04;

     label03:
        r0.<java.util.SimpleTimeZone: int startMode> = 2;

     label04:
        $i2 = r0.<java.util.SimpleTimeZone: int startDay>;

        if $i2 == 0 goto label05;

        $i16 = r0.<java.util.SimpleTimeZone: int endDay>;

        if $i16 == 0 goto label05;

        $z0 = 1;

        goto label06;

     label05:
        $z0 = 0;

     label06:
        r0.<java.util.SimpleTimeZone: boolean useDaylight> = $z0;

        $i3 = r0.<java.util.SimpleTimeZone: int startDay>;

        if $i3 == 0 goto label11;

        $i10 = r0.<java.util.SimpleTimeZone: int startMonth>;

        $i7 = r0.<java.util.SimpleTimeZone: int startMode>;

        if $i7 != 1 goto label07;

        $i9 = 1;

        goto label08;

     label07:
        $i9 = r0.<java.util.SimpleTimeZone: int startDayOfWeek>;

     label08:
        $i8 = r0.<java.util.SimpleTimeZone: int startTime>;

        specialinvoke r0.<java.util.SimpleTimeZone: void checkRange(int,int,int)>($i10, $i9, $i8);

        $i11 = r0.<java.util.SimpleTimeZone: int startMode>;

        if $i11 == 2 goto label09;

        $i17 = r0.<java.util.SimpleTimeZone: int startMonth>;

        $i14 = r0.<java.util.SimpleTimeZone: int startDay>;

        specialinvoke r0.<java.util.SimpleTimeZone: void checkDay(int,int)>($i17, $i14);

        goto label11;

     label09:
        $i12 = r0.<java.util.SimpleTimeZone: int startDay>;

        if $i12 < -5 goto label10;

        $i15 = r0.<java.util.SimpleTimeZone: int startDay>;

        if $i15 <= 5 goto label11;

     label10:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Day of week in month: ");

        $i13 = r0.<java.util.SimpleTimeZone: int startDay>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r1;

     label11:
        $i4 = r0.<java.util.SimpleTimeZone: int startMode>;

        if $i4 == 1 goto label12;

        $i5 = r0.<java.util.SimpleTimeZone: int startDayOfWeek>;

        $i6 = $i5 - 1;

        r0.<java.util.SimpleTimeZone: int startDayOfWeek> = $i6;

     label12:
        return;
    }

    public void setStartRule(int, int, int)
    {
        java.util.SimpleTimeZone r0;
        int i0, i1, i2;

        r0 := @this: java.util.SimpleTimeZone;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0.<java.util.SimpleTimeZone: int startMonth> = i0;

        r0.<java.util.SimpleTimeZone: int startDay> = i1;

        r0.<java.util.SimpleTimeZone: int startDayOfWeek> = 0;

        r0.<java.util.SimpleTimeZone: int startTime> = i2;

        specialinvoke r0.<java.util.SimpleTimeZone: void setStartMode()>();

        return;
    }

    public void setStartRule(int, int, int, int)
    {
        java.util.SimpleTimeZone r0;
        int i0, i1, i2, i3;

        r0 := @this: java.util.SimpleTimeZone;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r0.<java.util.SimpleTimeZone: int startMonth> = i0;

        r0.<java.util.SimpleTimeZone: int startDay> = i1;

        r0.<java.util.SimpleTimeZone: int startDayOfWeek> = i2;

        r0.<java.util.SimpleTimeZone: int startTime> = i3;

        specialinvoke r0.<java.util.SimpleTimeZone: void setStartMode()>();

        return;
    }

    public void setStartRule(int, int, int, int, boolean)
    {
        java.util.SimpleTimeZone r0;
        int i0, i1, i2, i3, $i4, $i5;
        boolean z0;

        r0 := @this: java.util.SimpleTimeZone;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        z0 := @parameter4: boolean;

        r0.<java.util.SimpleTimeZone: int startMonth> = i0;

        if z0 == 0 goto label1;

        $i4 = i1;

        goto label2;

     label1:
        $i4 = neg i1;

     label2:
        r0.<java.util.SimpleTimeZone: int startDay> = $i4;

        $i5 = neg i2;

        r0.<java.util.SimpleTimeZone: int startDayOfWeek> = $i5;

        r0.<java.util.SimpleTimeZone: int startTime> = i3;

        specialinvoke r0.<java.util.SimpleTimeZone: void setStartMode()>();

        return;
    }

    public void setStartYear(int)
    {
        java.util.SimpleTimeZone r0;
        int i0;

        r0 := @this: java.util.SimpleTimeZone;

        i0 := @parameter0: int;

        r0.<java.util.SimpleTimeZone: int startYear> = i0;

        r0.<java.util.SimpleTimeZone: boolean useDaylight> = 1;

        return;
    }

    public java.lang.String toString()
    {
        java.util.SimpleTimeZone r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r36, $r37;
        java.lang.Class $r2;
        java.lang.String $r3, $r6, $r35;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        boolean $z0, $z1, $z2;

        r0 := @this: java.util.SimpleTimeZone;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[id=");

        $r6 = virtualinvoke r0.<java.util.SimpleTimeZone: java.lang.String getID()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",offset=");

        $i0 = r0.<java.util.SimpleTimeZone: int rawOffset>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",dstSavings=");

        $i1 = r0.<java.util.SimpleTimeZone: int dstSavings>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",useDaylight=");

        $z0 = r0.<java.util.SimpleTimeZone: boolean useDaylight>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",startYear=");

        $i2 = r0.<java.util.SimpleTimeZone: int startYear>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",startMode=");

        $i3 = r0.<java.util.SimpleTimeZone: int startMode>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",startMonth=");

        $i4 = r0.<java.util.SimpleTimeZone: int startMonth>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",startDay=");

        $i5 = r0.<java.util.SimpleTimeZone: int startDay>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",startDayOfWeek=");

        $z1 = r0.<java.util.SimpleTimeZone: boolean useDaylight>;

        if $z1 == 0 goto label1;

        $i11 = r0.<java.util.SimpleTimeZone: int startMode>;

        if $i11 == 1 goto label1;

        $i16 = r0.<java.util.SimpleTimeZone: int startDayOfWeek>;

        $i15 = $i16 + 1;

        goto label2;

     label1:
        $i15 = 0;

     label2:
        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",startTime=");

        $i6 = r0.<java.util.SimpleTimeZone: int startTime>;

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",endMode=");

        $i8 = r0.<java.util.SimpleTimeZone: int endMode>;

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",endMonth=");

        $i7 = r0.<java.util.SimpleTimeZone: int endMonth>;

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",endDay=");

        $i9 = r0.<java.util.SimpleTimeZone: int endDay>;

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",endDayOfWeek=");

        $z2 = r0.<java.util.SimpleTimeZone: boolean useDaylight>;

        if $z2 == 0 goto label3;

        $i14 = r0.<java.util.SimpleTimeZone: int endMode>;

        if $i14 == 1 goto label3;

        $i13 = r0.<java.util.SimpleTimeZone: int endDayOfWeek>;

        $i12 = $i13 + 1;

        goto label4;

     label3:
        $i12 = 0;

     label4:
        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",endTime=");

        $i10 = r0.<java.util.SimpleTimeZone: int endTime>;

        $r37 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r35;
    }

    public boolean useDaylightTime()
    {
        java.util.SimpleTimeZone r0;
        boolean $z0;

        r0 := @this: java.util.SimpleTimeZone;

        $z0 = r0.<java.util.SimpleTimeZone: boolean useDaylight>;

        return $z0;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.util.SimpleTimeZone r0;
        java.io.ObjectOutputStream r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i20, $i22, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36;
        java.util.GregorianCalendar r2, $r5;
        byte[] r3, $r4;
        boolean $z0, $z1;
        byte $b17, $b21, $b23, $b24;
        java.io.ObjectOutputStream$PutField r6;

        r0 := @this: java.util.SimpleTimeZone;

        r1 := @parameter0: java.io.ObjectOutputStream;

        i0 = r0.<java.util.SimpleTimeZone: int endDay>;

        $i4 = r0.<java.util.SimpleTimeZone: int endDayOfWeek>;

        i1 = $i4 + 1;

        i2 = r0.<java.util.SimpleTimeZone: int startDay>;

        $i5 = r0.<java.util.SimpleTimeZone: int startDayOfWeek>;

        i3 = $i5 + 1;

        $z0 = r0.<java.util.SimpleTimeZone: boolean useDaylight>;

        if $z0 == 0 goto label3;

        $i25 = r0.<java.util.SimpleTimeZone: int startMode>;

        if $i25 != 2 goto label1;

        $i36 = r0.<java.util.SimpleTimeZone: int endMode>;

        if $i36 == 2 goto label3;

     label1:
        $r5 = new java.util.GregorianCalendar;

        specialinvoke $r5.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>(r0);

        r2 = $r5;

        $i30 = r0.<java.util.SimpleTimeZone: int endMode>;

        if $i30 == 2 goto label2;

        $i34 = r0.<java.util.SimpleTimeZone: int endMonth>;

        virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, $i34);

        $i35 = r0.<java.util.SimpleTimeZone: int endDay>;

        virtualinvoke r2.<java.util.Calendar: void set(int,int)>(5, $i35);

        i0 = virtualinvoke r2.<java.util.Calendar: int get(int)>(8);

        $i33 = r0.<java.util.SimpleTimeZone: int endMode>;

        if $i33 != 1 goto label2;

        i1 = virtualinvoke r2.<java.util.Calendar: int getFirstDayOfWeek()>();

     label2:
        $i28 = r0.<java.util.SimpleTimeZone: int startMode>;

        if $i28 == 2 goto label3;

        $i29 = r0.<java.util.SimpleTimeZone: int startMonth>;

        virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, $i29);

        $i32 = r0.<java.util.SimpleTimeZone: int startDay>;

        virtualinvoke r2.<java.util.Calendar: void set(int,int)>(5, $i32);

        i2 = virtualinvoke r2.<java.util.Calendar: int get(int)>(8);

        $i31 = r0.<java.util.SimpleTimeZone: int startMode>;

        if $i31 != 1 goto label3;

        i3 = virtualinvoke r2.<java.util.Calendar: int getFirstDayOfWeek()>();

     label3:
        r6 = virtualinvoke r1.<java.io.ObjectOutputStream: java.io.ObjectOutputStream$PutField putFields()>();

        $i6 = r0.<java.util.SimpleTimeZone: int dstSavings>;

        virtualinvoke r6.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,int)>("dstSavings", $i6);

        virtualinvoke r6.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,int)>("endDay", i0);

        virtualinvoke r6.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,int)>("endDayOfWeek", i1);

        $i7 = r0.<java.util.SimpleTimeZone: int endMode>;

        virtualinvoke r6.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,int)>("endMode", $i7);

        $i8 = r0.<java.util.SimpleTimeZone: int endMonth>;

        virtualinvoke r6.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,int)>("endMonth", $i8);

        $i9 = r0.<java.util.SimpleTimeZone: int endTime>;

        virtualinvoke r6.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,int)>("endTime", $i9);

        $r4 = <java.util.GregorianCalendar: byte[] DaysInMonth>;

        virtualinvoke r6.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,java.lang.Object)>("monthLength", $r4);

        $i10 = r0.<java.util.SimpleTimeZone: int rawOffset>;

        virtualinvoke r6.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,int)>("rawOffset", $i10);

        virtualinvoke r6.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,int)>("serialVersionOnStream", 1);

        virtualinvoke r6.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,int)>("startDay", i2);

        virtualinvoke r6.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,int)>("startDayOfWeek", i3);

        $i12 = r0.<java.util.SimpleTimeZone: int startMode>;

        virtualinvoke r6.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,int)>("startMode", $i12);

        $i11 = r0.<java.util.SimpleTimeZone: int startMonth>;

        virtualinvoke r6.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,int)>("startMonth", $i11);

        $i14 = r0.<java.util.SimpleTimeZone: int startTime>;

        virtualinvoke r6.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,int)>("startTime", $i14);

        $i13 = r0.<java.util.SimpleTimeZone: int startYear>;

        virtualinvoke r6.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,int)>("startYear", $i13);

        $z1 = r0.<java.util.SimpleTimeZone: boolean useDaylight>;

        virtualinvoke r6.<java.io.ObjectOutputStream$PutField: void put(java.lang.String,boolean)>("useDaylight", $z1);

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeFields()>();

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>(4);

        r3 = newarray (byte)[4];

        $i15 = r0.<java.util.SimpleTimeZone: int startDay>;

        $b17 = (byte) $i15;

        r3[0] = $b17;

        $i16 = r0.<java.util.SimpleTimeZone: int startMode>;

        if $i16 != 1 goto label4;

        $i18 = 0;

        goto label5;

     label4:
        $i19 = r0.<java.util.SimpleTimeZone: int startDayOfWeek>;

        $i18 = $i19 + 1;

     label5:
        $b21 = (byte) $i18;

        r3[1] = $b21;

        $i20 = r0.<java.util.SimpleTimeZone: int endDay>;

        $b23 = (byte) $i20;

        r3[2] = $b23;

        $i22 = r0.<java.util.SimpleTimeZone: int endMode>;

        if $i22 != 1 goto label6;

        $i27 = 0;

        goto label7;

     label6:
        $i26 = r0.<java.util.SimpleTimeZone: int endDayOfWeek>;

        $i27 = $i26 + 1;

     label7:
        $b24 = (byte) $i27;

        r3[3] = $b24;

        virtualinvoke r1.<java.io.ObjectOutputStream: void write(byte[])>(r3);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.util.SimpleTimeZone r0;
        java.io.ObjectInputStream r1;
        java.io.ObjectInputStream$GetField r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        byte[] r3;
        boolean $z0, $z1, $z2, $z3;
        byte $b6, $b8, $b9, $b10;

        r0 := @this: java.util.SimpleTimeZone;

        r1 := @parameter0: java.io.ObjectInputStream;

        r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.io.ObjectInputStream$GetField readFields()>();

        $i1 = virtualinvoke r2.<java.io.ObjectInputStream$GetField: int get(java.lang.String,int)>("rawOffset", 0);

        r0.<java.util.SimpleTimeZone: int rawOffset> = $i1;

        $z0 = virtualinvoke r2.<java.io.ObjectInputStream$GetField: boolean get(java.lang.String,boolean)>("useDaylight", 0);

        r0.<java.util.SimpleTimeZone: boolean useDaylight> = $z0;

        $z1 = r0.<java.util.SimpleTimeZone: boolean useDaylight>;

        if $z1 == 0 goto label1;

        $i25 = virtualinvoke r2.<java.io.ObjectInputStream$GetField: int get(java.lang.String,int)>("endMonth", 0);

        r0.<java.util.SimpleTimeZone: int endMonth> = $i25;

        $i22 = virtualinvoke r2.<java.io.ObjectInputStream$GetField: int get(java.lang.String,int)>("endTime", 0);

        r0.<java.util.SimpleTimeZone: int endTime> = $i22;

        $i23 = virtualinvoke r2.<java.io.ObjectInputStream$GetField: int get(java.lang.String,int)>("startMonth", 0);

        r0.<java.util.SimpleTimeZone: int startMonth> = $i23;

        $i26 = virtualinvoke r2.<java.io.ObjectInputStream$GetField: int get(java.lang.String,int)>("startTime", 0);

        r0.<java.util.SimpleTimeZone: int startTime> = $i26;

        $i27 = virtualinvoke r2.<java.io.ObjectInputStream$GetField: int get(java.lang.String,int)>("startYear", 0);

        r0.<java.util.SimpleTimeZone: int startYear> = $i27;

     label1:
        $i2 = virtualinvoke r2.<java.io.ObjectInputStream$GetField: int get(java.lang.String,int)>("serialVersionOnStream", 0);

        if $i2 != 0 goto label2;

        $z3 = r0.<java.util.SimpleTimeZone: boolean useDaylight>;

        if $z3 == 0 goto label4;

        r0.<java.util.SimpleTimeZone: int endMode> = 2;

        r0.<java.util.SimpleTimeZone: int startMode> = 2;

        $i16 = virtualinvoke r2.<java.io.ObjectInputStream$GetField: int get(java.lang.String,int)>("endDay", 0);

        r0.<java.util.SimpleTimeZone: int endDay> = $i16;

        $i19 = virtualinvoke r2.<java.io.ObjectInputStream$GetField: int get(java.lang.String,int)>("endDayOfWeek", 0);

        $i18 = $i19 - 1;

        r0.<java.util.SimpleTimeZone: int endDayOfWeek> = $i18;

        $i21 = virtualinvoke r2.<java.io.ObjectInputStream$GetField: int get(java.lang.String,int)>("startDay", 0);

        r0.<java.util.SimpleTimeZone: int startDay> = $i21;

        $i20 = virtualinvoke r2.<java.io.ObjectInputStream$GetField: int get(java.lang.String,int)>("startDayOfWeek", 0);

        $i24 = $i20 - 1;

        r0.<java.util.SimpleTimeZone: int startDayOfWeek> = $i24;

        goto label4;

     label2:
        $i3 = virtualinvoke r2.<java.io.ObjectInputStream$GetField: int get(java.lang.String,int)>("dstSavings", 0);

        r0.<java.util.SimpleTimeZone: int dstSavings> = $i3;

        $z2 = r0.<java.util.SimpleTimeZone: boolean useDaylight>;

        if $z2 == 0 goto label4;

        $i4 = virtualinvoke r2.<java.io.ObjectInputStream$GetField: int get(java.lang.String,int)>("endMode", 0);

        r0.<java.util.SimpleTimeZone: int endMode> = $i4;

        $i5 = virtualinvoke r2.<java.io.ObjectInputStream$GetField: int get(java.lang.String,int)>("startMode", 0);

        r0.<java.util.SimpleTimeZone: int startMode> = $i5;

        i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        r3 = newarray (byte)[i0];

        virtualinvoke r1.<java.io.ObjectInputStream: void readFully(byte[])>(r3);

        if i0 < 4 goto label4;

        $b6 = r3[0];

        r0.<java.util.SimpleTimeZone: int startDay> = $b6;

        $b8 = r3[1];

        r0.<java.util.SimpleTimeZone: int startDayOfWeek> = $b8;

        $i7 = r0.<java.util.SimpleTimeZone: int startMode>;

        if $i7 == 1 goto label3;

        $i13 = r0.<java.util.SimpleTimeZone: int startDayOfWeek>;

        $i15 = $i13 - 1;

        r0.<java.util.SimpleTimeZone: int startDayOfWeek> = $i15;

     label3:
        $b10 = r3[2];

        r0.<java.util.SimpleTimeZone: int endDay> = $b10;

        $b9 = r3[3];

        r0.<java.util.SimpleTimeZone: int endDayOfWeek> = $b9;

        $i12 = r0.<java.util.SimpleTimeZone: int endMode>;

        if $i12 == 1 goto label4;

        $i11 = r0.<java.util.SimpleTimeZone: int endDayOfWeek>;

        $i14 = $i11 - 1;

        r0.<java.util.SimpleTimeZone: int endDayOfWeek> = $i14;

     label4:
        return;
    }

    static void <clinit>()
    {
        java.io.ObjectStreamField[] $r0;
        java.io.ObjectStreamField $r1, $r3, $r5, $r7, $r9, $r12, $r13, $r14, $r17, $r18, $r21, $r23, $r24, $r25, $r27, $r31;
        java.lang.Class $r2, $r4, $r6, $r8, $r10, $r11, $r15, $r16, $r19, $r20, $r22, $r26, $r28, $r29, $r30;

        <java.util.SimpleTimeZone: int WALL_TIME> = 0;

        <java.util.SimpleTimeZone: int STANDARD_TIME> = 1;

        <java.util.SimpleTimeZone: int UTC_TIME> = 2;

        <java.util.SimpleTimeZone: int DOW_LE_DOM_MODE> = 4;

        <java.util.SimpleTimeZone: int DOW_GE_DOM_MODE> = 3;

        <java.util.SimpleTimeZone: int DOW_IN_MONTH_MODE> = 2;

        <java.util.SimpleTimeZone: int DOM_MODE> = 1;

        <java.util.SimpleTimeZone: long serialVersionUID> = -403250971215465050L;

        $r0 = newarray (java.io.ObjectStreamField)[16];

        $r1 = new java.io.ObjectStreamField;

        $r2 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r1.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("dstSavings", $r2);

        $r0[0] = $r1;

        $r3 = new java.io.ObjectStreamField;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r3.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("endDay", $r4);

        $r0[1] = $r3;

        $r5 = new java.io.ObjectStreamField;

        $r6 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r5.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("endDayOfWeek", $r6);

        $r0[2] = $r5;

        $r7 = new java.io.ObjectStreamField;

        $r8 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r7.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("endMode", $r8);

        $r0[3] = $r7;

        $r9 = new java.io.ObjectStreamField;

        $r10 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r9.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("endMonth", $r10);

        $r0[4] = $r9;

        $r12 = new java.io.ObjectStreamField;

        $r11 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r12.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("endTime", $r11);

        $r0[5] = $r12;

        $r13 = new java.io.ObjectStreamField;

        specialinvoke $r13.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("monthLength", class "[B");

        $r0[6] = $r13;

        $r14 = new java.io.ObjectStreamField;

        $r15 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r14.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("rawOffset", $r15);

        $r0[7] = $r14;

        $r17 = new java.io.ObjectStreamField;

        $r16 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r17.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("serialVersionOnStream", $r16);

        $r0[8] = $r17;

        $r18 = new java.io.ObjectStreamField;

        $r19 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r18.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("startDay", $r19);

        $r0[9] = $r18;

        $r21 = new java.io.ObjectStreamField;

        $r20 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r21.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("startDayOfWeek", $r20);

        $r0[10] = $r21;

        $r23 = new java.io.ObjectStreamField;

        $r22 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r23.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("startMode", $r22);

        $r0[11] = $r23;

        $r25 = new java.io.ObjectStreamField;

        $r26 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r25.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("startMonth", $r26);

        $r0[12] = $r25;

        $r24 = new java.io.ObjectStreamField;

        $r29 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r24.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("startTime", $r29);

        $r0[13] = $r24;

        $r27 = new java.io.ObjectStreamField;

        $r28 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r27.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("startYear", $r28);

        $r0[14] = $r27;

        $r31 = new java.io.ObjectStreamField;

        $r30 = <java.lang.Boolean: java.lang.Class TYPE>;

        specialinvoke $r31.<java.io.ObjectStreamField: void <init>(java.lang.String,java.lang.Class)>("useDaylight", $r30);

        $r0[15] = $r31;

        <java.util.SimpleTimeZone: java.io.ObjectStreamField[] serialPersistentFields> = $r0;

        return;
    }
}
