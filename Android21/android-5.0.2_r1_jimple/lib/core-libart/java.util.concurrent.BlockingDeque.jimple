public interface  java.util.concurrent.BlockingDeque extends java.lang.Object implements java.util.concurrent.BlockingQueue, java.util.Deque
{

    public abstract void addFirst(java.lang.Object);

    public abstract void addLast(java.lang.Object);

    public abstract boolean offerFirst(java.lang.Object);

    public abstract boolean offerLast(java.lang.Object);

    public abstract void putFirst(java.lang.Object) throws java.lang.InterruptedException;

    public abstract void putLast(java.lang.Object) throws java.lang.InterruptedException;

    public abstract boolean offerFirst(java.lang.Object, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;

    public abstract boolean offerLast(java.lang.Object, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;

    public abstract java.lang.Object takeFirst() throws java.lang.InterruptedException;

    public abstract java.lang.Object takeLast() throws java.lang.InterruptedException;

    public abstract java.lang.Object pollFirst(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;

    public abstract java.lang.Object pollLast(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;

    public abstract boolean removeFirstOccurrence(java.lang.Object);

    public abstract boolean removeLastOccurrence(java.lang.Object);

    public abstract boolean add(java.lang.Object);

    public abstract boolean offer(java.lang.Object);

    public abstract void put(java.lang.Object) throws java.lang.InterruptedException;

    public abstract boolean offer(java.lang.Object, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;

    public abstract java.lang.Object remove();

    public abstract java.lang.Object poll();

    public abstract java.lang.Object take() throws java.lang.InterruptedException;

    public abstract java.lang.Object poll(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;

    public abstract java.lang.Object element();

    public abstract java.lang.Object peek();

    public abstract boolean remove(java.lang.Object);

    public abstract boolean contains(java.lang.Object);

    public abstract int size();

    public abstract java.util.Iterator iterator();

    public abstract void push(java.lang.Object);
}
