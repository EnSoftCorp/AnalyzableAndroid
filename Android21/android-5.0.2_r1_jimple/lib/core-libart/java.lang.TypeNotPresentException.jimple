public class java.lang.TypeNotPresentException extends java.lang.RuntimeException
{
    private static final long serialVersionUID;
    private java.lang.String typeName;

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        java.lang.TypeNotPresentException r0;
        java.lang.String r1, $r7;
        java.lang.Throwable r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;

        r0 := @this: java.lang.TypeNotPresentException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not present");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r7, r2);

        r0.<java.lang.TypeNotPresentException: java.lang.String typeName> = r1;

        return;
    }

    public java.lang.String typeName()
    {
        java.lang.TypeNotPresentException r0;
        java.lang.String $r1;

        r0 := @this: java.lang.TypeNotPresentException;

        $r1 = r0.<java.lang.TypeNotPresentException: java.lang.String typeName>;

        return $r1;
    }

    public static void <clinit>()
    {
        <java.lang.TypeNotPresentException: long serialVersionUID> = -5101214195716534496L;

        return;
    }
}
