final class java.util.concurrent.ConcurrentHashMap$ForwardingNode extends java.util.concurrent.ConcurrentHashMap$Node
{
    final java.util.concurrent.ConcurrentHashMap$Node[] nextTable;

    void <init>(java.util.concurrent.ConcurrentHashMap$Node[])
    {
        java.util.concurrent.ConcurrentHashMap$ForwardingNode r0;
        java.util.concurrent.ConcurrentHashMap$Node[] r1;

        r0 := @this: java.util.concurrent.ConcurrentHashMap$ForwardingNode;

        r1 := @parameter0: java.util.concurrent.ConcurrentHashMap$Node[];

        specialinvoke r0.<java.util.concurrent.ConcurrentHashMap$Node: void <init>(int,java.lang.Object,java.lang.Object,java.util.concurrent.ConcurrentHashMap$Node)>(-1879048193, null, null, null);

        r0.<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node[] nextTable> = r1;

        return;
    }

    java.util.concurrent.ConcurrentHashMap$Node find(int, java.lang.Object)
    {
        java.util.concurrent.ConcurrentHashMap$ForwardingNode r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        java.lang.Object r1, r4, $r8;
        java.util.concurrent.ConcurrentHashMap$Node r2, $r5, $r6, $r7;
        java.util.concurrent.ConcurrentHashMap$Node[] r3;
        boolean $z0;

        r0 := @this: java.util.concurrent.ConcurrentHashMap$ForwardingNode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r3 = r0.<java.util.concurrent.ConcurrentHashMap$ForwardingNode: java.util.concurrent.ConcurrentHashMap$Node[] nextTable>;

        if r1 == null goto label5;

        if r3 == null goto label5;

        $i3 = lengthof r3;

        i1 = $i3;

        if $i3 <= 0 goto label5;

        $i4 = i1 - 1;

        $i5 = $i4 & i0;

        $r5 = staticinvoke <java.util.concurrent.ConcurrentHashMap: java.util.concurrent.ConcurrentHashMap$Node tabAt(java.util.concurrent.ConcurrentHashMap$Node[],int)>(r3, $i5);

        r2 = $r5;

        if $r5 == null goto label5;

     label1:
        $i6 = r2.<java.util.concurrent.ConcurrentHashMap$Node: int hash>;

        i2 = $i6;

        if $i6 != i0 goto label3;

        $r8 = r2.<java.util.concurrent.ConcurrentHashMap$Node: java.lang.Object key>;

        r4 = $r8;

        if $r8 == r1 goto label2;

        if r4 == null goto label3;

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label3;

     label2:
        return r2;

     label3:
        if i2 >= 0 goto label4;

        $r7 = virtualinvoke r2.<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object)>(i0, r1);

        return $r7;

     label4:
        $r6 = r2.<java.util.concurrent.ConcurrentHashMap$Node: java.util.concurrent.ConcurrentHashMap$Node next>;

        r2 = $r6;

        if $r6 != null goto label1;

     label5:
        return null;
    }
}
