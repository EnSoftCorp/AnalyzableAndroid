final class java.util.concurrent.ConcurrentSkipListMap$EntryIterator extends java.util.concurrent.ConcurrentSkipListMap$Iter
{
    final java.util.concurrent.ConcurrentSkipListMap this$0;

    void <init>(java.util.concurrent.ConcurrentSkipListMap)
    {
        java.util.concurrent.ConcurrentSkipListMap$EntryIterator r0;
        java.util.concurrent.ConcurrentSkipListMap r1;

        r0 := @this: java.util.concurrent.ConcurrentSkipListMap$EntryIterator;

        r1 := @parameter0: java.util.concurrent.ConcurrentSkipListMap;

        r0.<java.util.concurrent.ConcurrentSkipListMap$EntryIterator: java.util.concurrent.ConcurrentSkipListMap this$0> = r1;

        specialinvoke r0.<java.util.concurrent.ConcurrentSkipListMap$Iter: void <init>(java.util.concurrent.ConcurrentSkipListMap)>(r1);

        return;
    }

    public java.util.Map$Entry next()
    {
        java.util.concurrent.ConcurrentSkipListMap$EntryIterator r0;
        java.util.concurrent.ConcurrentSkipListMap$Node r1;
        java.lang.Object r2, $r4;
        java.util.AbstractMap$SimpleImmutableEntry $r3;

        r0 := @this: java.util.concurrent.ConcurrentSkipListMap$EntryIterator;

        r1 = r0.<java.util.concurrent.ConcurrentSkipListMap$EntryIterator: java.util.concurrent.ConcurrentSkipListMap$Node next>;

        r2 = r0.<java.util.concurrent.ConcurrentSkipListMap$EntryIterator: java.lang.Object nextValue>;

        virtualinvoke r0.<java.util.concurrent.ConcurrentSkipListMap$EntryIterator: void advance()>();

        $r3 = new java.util.AbstractMap$SimpleImmutableEntry;

        $r4 = r1.<java.util.concurrent.ConcurrentSkipListMap$Node: java.lang.Object key>;

        specialinvoke $r3.<java.util.AbstractMap$SimpleImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>($r4, r2);

        return $r3;
    }

    public volatile java.lang.Object next()
    {
        java.util.concurrent.ConcurrentSkipListMap$EntryIterator r0;
        java.util.Map$Entry $r1;

        r0 := @this: java.util.concurrent.ConcurrentSkipListMap$EntryIterator;

        $r1 = virtualinvoke r0.<java.util.concurrent.ConcurrentSkipListMap$EntryIterator: java.util.Map$Entry next()>();

        return $r1;
    }
}
