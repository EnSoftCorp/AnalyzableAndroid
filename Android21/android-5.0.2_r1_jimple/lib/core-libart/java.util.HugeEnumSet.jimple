final class java.util.HugeEnumSet extends java.util.EnumSet
{
    private static final int BIT_IN_LONG;
    private final java.lang.Enum[] enums;
    private long[] bits;
    private int size;

    void <init>(java.lang.Class, java.lang.Enum[])
    {
        java.util.HugeEnumSet r0;
        java.lang.Class r1;
        java.lang.Enum[] r2;
        int $i0, $i1, $i2, $i3;
        long[] $r3;

        r0 := @this: java.util.HugeEnumSet;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Enum[];

        specialinvoke r0.<java.util.EnumSet: void <init>(java.lang.Class)>(r1);

        r0.<java.util.HugeEnumSet: java.lang.Enum[] enums> = r2;

        $i0 = lengthof r2;

        $i1 = $i0 + 64;

        $i2 = $i1 - 1;

        $i3 = $i2 / 64;

        $r3 = newarray (long)[$i3];

        r0.<java.util.HugeEnumSet: long[] bits> = $r3;

        return;
    }

    public boolean add(java.lang.Enum)
    {
        java.util.HugeEnumSet r0;
        java.lang.Enum r1;
        int i0, i1, i2, $i7, $i8;
        long l3, l4, $l5;
        java.lang.Class $r2;
        long[] $r4, $r5;
        byte $b6;

        r0 := @this: java.util.HugeEnumSet;

        r1 := @parameter0: java.lang.Enum;

        $r2 = r0.<java.util.HugeEnumSet: java.lang.Class elementClass>;

        virtualinvoke $r2.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r1);

        i0 = virtualinvoke r1.<java.lang.Enum: int ordinal()>();

        i1 = i0 / 64;

        i2 = i0 % 64;

        $r4 = r0.<java.util.HugeEnumSet: long[] bits>;

        l3 = $r4[i1];

        $l5 = 1L << i2;

        l4 = l3 | $l5;

        $b6 = l3 cmp l4;

        if $b6 == 0 goto label1;

        $r5 = r0.<java.util.HugeEnumSet: long[] bits>;

        $r5[i1] = l4;

        $i8 = r0.<java.util.HugeEnumSet: int size>;

        $i7 = $i8 + 1;

        r0.<java.util.HugeEnumSet: int size> = $i7;

        return 1;

     label1:
        return 0;
    }

    public boolean addAll(java.util.Collection)
    {
        java.util.HugeEnumSet r0, r3;
        java.util.Collection r1;
        java.util.EnumSet r2;
        boolean z0, $z1, $z2, $z3;
        int i0, $i3, $i6, $i7, $i8, $i9, $i10;
        long l1, l2, $l5;
        java.lang.Class $r4, $r5;
        long[] $r7, $r8, $r9, $r10;
        byte $b4;

        r0 := @this: java.util.HugeEnumSet;

        r1 := @parameter0: java.util.Collection;

        $z1 = interfaceinvoke r1.<java.util.Collection: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        if r1 != r0 goto label2;

     label1:
        return 0;

     label2:
        $z2 = r1 instanceof java.util.EnumSet;

        if $z2 == 0 goto label6;

        r2 = (java.util.EnumSet) r1;

        $r5 = r2.<java.util.EnumSet: java.lang.Class elementClass>;

        $r4 = r0.<java.util.HugeEnumSet: java.lang.Class elementClass>;

        virtualinvoke $r5.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>($r4);

        r3 = (java.util.HugeEnumSet) r2;

        z0 = 0;

        i0 = 0;

     label3:
        $r7 = r0.<java.util.HugeEnumSet: long[] bits>;

        $i3 = lengthof $r7;

        if i0 >= $i3 goto label5;

        $r9 = r0.<java.util.HugeEnumSet: long[] bits>;

        l1 = $r9[i0];

        $r8 = r3.<java.util.HugeEnumSet: long[] bits>;

        $l5 = $r8[i0];

        l2 = l1 | $l5;

        $b4 = l1 cmp l2;

        if $b4 == 0 goto label4;

        $r10 = r0.<java.util.HugeEnumSet: long[] bits>;

        $r10[i0] = l2;

        $i6 = r0.<java.util.HugeEnumSet: int size>;

        $i8 = staticinvoke <java.lang.Long: int bitCount(long)>(l2);

        $i7 = staticinvoke <java.lang.Long: int bitCount(long)>(l1);

        $i10 = $i8 - $i7;

        $i9 = $i6 + $i10;

        r0.<java.util.HugeEnumSet: int size> = $i9;

        z0 = 1;

     label4:
        i0 = i0 + 1;

        goto label3;

     label5:
        return z0;

     label6:
        $z3 = specialinvoke r0.<java.util.EnumSet: boolean addAll(java.util.Collection)>(r1);

        return $z3;
    }

    public int size()
    {
        java.util.HugeEnumSet r0;
        int $i0;

        r0 := @this: java.util.HugeEnumSet;

        $i0 = r0.<java.util.HugeEnumSet: int size>;

        return $i0;
    }

    public void clear()
    {
        java.util.HugeEnumSet r0;
        long[] $r1;

        r0 := @this: java.util.HugeEnumSet;

        $r1 = r0.<java.util.HugeEnumSet: long[] bits>;

        staticinvoke <java.util.Arrays: void fill(long[],long)>($r1, 0L);

        r0.<java.util.HugeEnumSet: int size> = 0;

        return;
    }

    protected void complement()
    {
        java.util.HugeEnumSet r0;
        int i0, i1, $i4, $i5, $i6, $i7, $i8, $i9, $i11;
        long l2, $l3, $l10;
        long[] $r1, $r2, $r3;
        java.lang.Enum[] $r4;

        r0 := @this: java.util.HugeEnumSet;

        r0.<java.util.HugeEnumSet: int size> = 0;

        i0 = 0;

        $r1 = r0.<java.util.HugeEnumSet: long[] bits>;

        i1 = lengthof $r1;

     label1:
        if i0 >= i1 goto label3;

        $r2 = r0.<java.util.HugeEnumSet: long[] bits>;

        $l3 = $r2[i0];

        l2 = $l3 ^ -1L;

        $i4 = i1 - 1;

        if i0 != $i4 goto label2;

        $r4 = r0.<java.util.HugeEnumSet: java.lang.Enum[] enums>;

        $i8 = lengthof $r4;

        $i9 = $i8 % 64;

        $i11 = 64 - $i9;

        $l10 = -1L >>> $i11;

        l2 = l2 & $l10;

     label2:
        $i5 = r0.<java.util.HugeEnumSet: int size>;

        $i6 = staticinvoke <java.lang.Long: int bitCount(long)>(l2);

        $i7 = $i5 + $i6;

        r0.<java.util.HugeEnumSet: int size> = $i7;

        $r3 = r0.<java.util.HugeEnumSet: long[] bits>;

        $r3[i0] = l2;

        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.HugeEnumSet r0;
        java.lang.Object r1;
        int i0, i1, i2;
        java.lang.Class $r2;
        boolean $z0, $z1;
        java.lang.Enum $r3;
        long[] $r4;
        long $l3, $l4, $l5;
        byte $b6;

        r0 := @this: java.util.HugeEnumSet;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke r0.<java.util.HugeEnumSet: boolean isValidType(java.lang.Class)>($r2);

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r3 = (java.lang.Enum) r1;

        i0 = virtualinvoke $r3.<java.lang.Enum: int ordinal()>();

        i1 = i0 / 64;

        i2 = i0 % 64;

        $r4 = r0.<java.util.HugeEnumSet: long[] bits>;

        $l4 = $r4[i1];

        $l3 = 1L << i2;

        $l5 = $l4 & $l3;

        $b6 = $l5 cmp 0L;

        if $b6 == 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public java.util.HugeEnumSet clone()
    {
        java.util.HugeEnumSet r0, r1;
        java.util.EnumSet $r2;
        long[] $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: java.util.HugeEnumSet;

        $r2 = specialinvoke r0.<java.util.EnumSet: java.util.EnumSet clone()>();

        r1 = (java.util.HugeEnumSet) $r2;

        $r3 = r0.<java.util.HugeEnumSet: long[] bits>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>();

        $r5 = (long[]) $r4;

        r1.<java.util.HugeEnumSet: long[] bits> = $r5;

        return r1;
    }

    public boolean containsAll(java.util.Collection)
    {
        java.util.HugeEnumSet r0, r2;
        java.util.Collection r1;
        int i0, $i2;
        long l1, $l3, $l5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Class $r3;
        long[] $r4, $r5, $r6;
        byte $b4;

        r0 := @this: java.util.HugeEnumSet;

        r1 := @parameter0: java.util.Collection;

        $z0 = interfaceinvoke r1.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = r1 instanceof java.util.HugeEnumSet;

        if $z1 == 0 goto label5;

        r2 = (java.util.HugeEnumSet) r1;

        $r3 = r2.<java.util.HugeEnumSet: java.lang.Class elementClass>;

        $z5 = virtualinvoke r0.<java.util.HugeEnumSet: boolean isValidType(java.lang.Class)>($r3);

        if $z5 == 0 goto label5;

        i0 = 0;

     label2:
        $r4 = r0.<java.util.HugeEnumSet: long[] bits>;

        $i2 = lengthof $r4;

        if i0 >= $i2 goto label4;

        $r5 = r2.<java.util.HugeEnumSet: long[] bits>;

        l1 = $r5[i0];

        $r6 = r0.<java.util.HugeEnumSet: long[] bits>;

        $l3 = $r6[i0];

        $l5 = $l3 & l1;

        $b4 = $l5 cmp l1;

        if $b4 == 0 goto label3;

        return 0;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        return 1;

     label5:
        $z2 = r1 instanceof java.util.EnumSet;

        if $z2 != 0 goto label6;

        $z3 = specialinvoke r0.<java.util.EnumSet: boolean containsAll(java.util.Collection)>(r1);

        if $z3 == 0 goto label6;

        $z4 = 1;

        goto label7;

     label6:
        $z4 = 0;

     label7:
        return $z4;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.HugeEnumSet r0, $r3;
        java.lang.Object r1;
        java.lang.Class $r2;
        boolean $z0, $z1, $z2;
        long[] $r4, $r5;

        r0 := @this: java.util.HugeEnumSet;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke r0.<java.util.HugeEnumSet: boolean isValidType(java.lang.Class)>($r2);

        if $z0 != 0 goto label2;

        $z2 = specialinvoke r0.<java.util.EnumSet: boolean equals(java.lang.Object)>(r1);

        return $z2;

     label2:
        $r5 = r0.<java.util.HugeEnumSet: long[] bits>;

        $r3 = (java.util.HugeEnumSet) r1;

        $r4 = $r3.<java.util.HugeEnumSet: long[] bits>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(long[],long[])>($r5, $r4);

        return $z1;
    }

    public java.util.Iterator iterator()
    {
        java.util.HugeEnumSet r0;
        java.util.HugeEnumSet$HugeEnumSetIterator $r1;

        r0 := @this: java.util.HugeEnumSet;

        $r1 = new java.util.HugeEnumSet$HugeEnumSetIterator;

        specialinvoke $r1.<java.util.HugeEnumSet$HugeEnumSetIterator: void <init>(java.util.HugeEnumSet,java.util.HugeEnumSet$1)>(r0, null);

        return $r1;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.HugeEnumSet r0;
        java.lang.Object r1;
        int i0, i1, i2, $i8, $i9;
        long l3, l4, $l5, $l6;
        java.lang.Class $r2;
        boolean $z0;
        java.lang.Enum $r3;
        long[] $r4, $r5;
        byte $b7;

        r0 := @this: java.util.HugeEnumSet;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke r0.<java.util.HugeEnumSet: boolean isValidType(java.lang.Class)>($r2);

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r3 = (java.lang.Enum) r1;

        i0 = virtualinvoke $r3.<java.lang.Enum: int ordinal()>();

        i1 = i0 / 64;

        i2 = i0 % 64;

        $r4 = r0.<java.util.HugeEnumSet: long[] bits>;

        l3 = $r4[i1];

        $l5 = 1L << i2;

        $l6 = $l5 ^ -1L;

        l4 = l3 & $l6;

        $b7 = l3 cmp l4;

        if $b7 == 0 goto label3;

        $r5 = r0.<java.util.HugeEnumSet: long[] bits>;

        $r5[i1] = l4;

        $i9 = r0.<java.util.HugeEnumSet: int size>;

        $i8 = $i9 - 1;

        r0.<java.util.HugeEnumSet: int size> = $i8;

        return 1;

     label3:
        return 0;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.util.HugeEnumSet r0, r3;
        java.util.Collection r1;
        java.util.EnumSet r2;
        boolean z0, $z1, $z2, $z3, $z4;
        int i0, $i3, $i7, $i8, $i9, $i10, $i11;
        long l1, l2, $l4, $l6;
        java.lang.Class $r4;
        long[] $r5, $r6, $r7, $r8;
        byte $b5;

        r0 := @this: java.util.HugeEnumSet;

        r1 := @parameter0: java.util.Collection;

        $z1 = interfaceinvoke r1.<java.util.Collection: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        return 0;

     label1:
        $z2 = r1 instanceof java.util.EnumSet;

        if $z2 == 0 goto label6;

        r2 = (java.util.EnumSet) r1;

        $r4 = r2.<java.util.EnumSet: java.lang.Class elementClass>;

        $z4 = virtualinvoke r0.<java.util.HugeEnumSet: boolean isValidType(java.lang.Class)>($r4);

        if $z4 != 0 goto label2;

        return 0;

     label2:
        r3 = (java.util.HugeEnumSet) r2;

        z0 = 0;

        i0 = 0;

     label3:
        $r5 = r0.<java.util.HugeEnumSet: long[] bits>;

        $i3 = lengthof $r5;

        if i0 >= $i3 goto label5;

        $r6 = r0.<java.util.HugeEnumSet: long[] bits>;

        l1 = $r6[i0];

        $r7 = r3.<java.util.HugeEnumSet: long[] bits>;

        $l4 = $r7[i0];

        $l6 = $l4 ^ -1L;

        l2 = l1 & $l6;

        $b5 = l1 cmp l2;

        if $b5 == 0 goto label4;

        $r8 = r0.<java.util.HugeEnumSet: long[] bits>;

        $r8[i0] = l2;

        $i7 = r0.<java.util.HugeEnumSet: int size>;

        $i9 = staticinvoke <java.lang.Long: int bitCount(long)>(l2);

        $i8 = staticinvoke <java.lang.Long: int bitCount(long)>(l1);

        $i11 = $i9 - $i8;

        $i10 = $i7 + $i11;

        r0.<java.util.HugeEnumSet: int size> = $i10;

        z0 = 1;

     label4:
        i0 = i0 + 1;

        goto label3;

     label5:
        return z0;

     label6:
        $z3 = specialinvoke r0.<java.util.EnumSet: boolean removeAll(java.util.Collection)>(r1);

        return $z3;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.util.HugeEnumSet r0, r3;
        java.util.Collection r1;
        java.util.EnumSet r2;
        boolean z0, $z1, $z2, $z3;
        int i0, $i3, $i6, $i7, $i8, $i9, $i10, $i11;
        long l1, l2, $l5;
        java.lang.Class $r4;
        long[] $r5, $r6, $r7, $r8;
        byte $b4;

        r0 := @this: java.util.HugeEnumSet;

        r1 := @parameter0: java.util.Collection;

        $z1 = r1 instanceof java.util.EnumSet;

        if $z1 == 0 goto label6;

        r2 = (java.util.EnumSet) r1;

        $r4 = r2.<java.util.EnumSet: java.lang.Class elementClass>;

        $z3 = virtualinvoke r0.<java.util.HugeEnumSet: boolean isValidType(java.lang.Class)>($r4);

        if $z3 != 0 goto label2;

        $i11 = r0.<java.util.HugeEnumSet: int size>;

        if $i11 <= 0 goto label1;

        virtualinvoke r0.<java.util.HugeEnumSet: void clear()>();

        return 1;

     label1:
        return 0;

     label2:
        r3 = (java.util.HugeEnumSet) r2;

        z0 = 0;

        i0 = 0;

     label3:
        $r5 = r0.<java.util.HugeEnumSet: long[] bits>;

        $i3 = lengthof $r5;

        if i0 >= $i3 goto label5;

        $r7 = r0.<java.util.HugeEnumSet: long[] bits>;

        l1 = $r7[i0];

        $r6 = r3.<java.util.HugeEnumSet: long[] bits>;

        $l5 = $r6[i0];

        l2 = l1 & $l5;

        $b4 = l1 cmp l2;

        if $b4 == 0 goto label4;

        $r8 = r0.<java.util.HugeEnumSet: long[] bits>;

        $r8[i0] = l2;

        $i6 = r0.<java.util.HugeEnumSet: int size>;

        $i8 = staticinvoke <java.lang.Long: int bitCount(long)>(l2);

        $i7 = staticinvoke <java.lang.Long: int bitCount(long)>(l1);

        $i10 = $i8 - $i7;

        $i9 = $i6 + $i10;

        r0.<java.util.HugeEnumSet: int size> = $i9;

        z0 = 1;

     label4:
        i0 = i0 + 1;

        goto label3;

     label5:
        return z0;

     label6:
        $z2 = specialinvoke r0.<java.util.EnumSet: boolean retainAll(java.util.Collection)>(r1);

        return $z2;
    }

    void setRange(java.lang.Enum, java.lang.Enum)
    {
        java.util.HugeEnumSet r0;
        java.lang.Enum r1, r2;
        int i0, i1, i2, i3, i4, i5, i7, $i9, $i11, $i12, $i15, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i28, $i29, $i30, $i31, $i32, $i33, $i36, $i37, $i38, $i39, $i40, $i42, $i43, $i44, $i45, $i46, $i49, $i50, $i51;
        long l6, $l8, $l10, $l13, $l14, $l16, $l21, $l25, $l26, $l27, $l34, $l35, $l41, $l47, $l48, $l52, $l53, l54, l55;
        long[] $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        r0 := @this: java.util.HugeEnumSet;

        r1 := @parameter0: java.lang.Enum;

        r2 := @parameter1: java.lang.Enum;

        i0 = virtualinvoke r1.<java.lang.Enum: int ordinal()>();

        i1 = i0 / 64;

        i2 = i0 % 64;

        i3 = virtualinvoke r2.<java.lang.Enum: int ordinal()>();

        i4 = i3 / 64;

        i5 = i3 % 64;

        if i1 != i4 goto label1;

        $i37 = i5 - i2;

        $i43 = $i37 + 1;

        $i42 = 64 - $i43;

        $l41 = -1L >>> $i42;

        l6 = $l41 << i2;

        $i46 = r0.<java.util.HugeEnumSet: int size>;

        $r12 = r0.<java.util.HugeEnumSet: long[] bits>;

        $l47 = $r12[i1];

        $i45 = staticinvoke <java.lang.Long: int bitCount(long)>($l47);

        $i44 = $i46 - $i45;

        r0.<java.util.HugeEnumSet: int size> = $i44;

        $r13 = r0.<java.util.HugeEnumSet: long[] bits>;

        $l52 = $r13[i1];

        $l53 = $l52 | l6;

        $r13[i1] = $l53;

        $i49 = r0.<java.util.HugeEnumSet: int size>;

        $r14 = r0.<java.util.HugeEnumSet: long[] bits>;

        $l48 = $r14[i1];

        $i50 = staticinvoke <java.lang.Long: int bitCount(long)>($l48);

        $i51 = $i49 + $i50;

        r0.<java.util.HugeEnumSet: int size> = $i51;

        goto label3;

     label1:
        $l8 = -1L >>> i2;

        l54 = $l8 << i2;

        $i9 = r0.<java.util.HugeEnumSet: int size>;

        $r3 = r0.<java.util.HugeEnumSet: long[] bits>;

        $l10 = $r3[i1];

        $i12 = staticinvoke <java.lang.Long: int bitCount(long)>($l10);

        $i11 = $i9 - $i12;

        r0.<java.util.HugeEnumSet: int size> = $i11;

        $r4 = r0.<java.util.HugeEnumSet: long[] bits>;

        $l13 = $r4[i1];

        $l14 = $l13 | l54;

        $r4[i1] = $l14;

        $i15 = r0.<java.util.HugeEnumSet: int size>;

        $r5 = r0.<java.util.HugeEnumSet: long[] bits>;

        $l16 = $r5[i1];

        $i18 = staticinvoke <java.lang.Long: int bitCount(long)>($l16);

        $i17 = $i15 + $i18;

        r0.<java.util.HugeEnumSet: int size> = $i17;

        $i20 = i5 + 1;

        $i19 = 64 - $i20;

        l55 = -1L >>> $i19;

        $i23 = r0.<java.util.HugeEnumSet: int size>;

        $r6 = r0.<java.util.HugeEnumSet: long[] bits>;

        $l21 = $r6[i4];

        $i24 = staticinvoke <java.lang.Long: int bitCount(long)>($l21);

        $i22 = $i23 - $i24;

        r0.<java.util.HugeEnumSet: int size> = $i22;

        $r7 = r0.<java.util.HugeEnumSet: long[] bits>;

        $l26 = $r7[i4];

        $l27 = $l26 | l55;

        $r7[i4] = $l27;

        $i30 = r0.<java.util.HugeEnumSet: int size>;

        $r8 = r0.<java.util.HugeEnumSet: long[] bits>;

        $l25 = $r8[i4];

        $i31 = staticinvoke <java.lang.Long: int bitCount(long)>($l25);

        $i28 = $i30 + $i31;

        r0.<java.util.HugeEnumSet: int size> = $i28;

        i7 = i1 + 1;

     label2:
        $i29 = i4 - 1;

        if i7 > $i29 goto label3;

        $i32 = r0.<java.util.HugeEnumSet: int size>;

        $r9 = r0.<java.util.HugeEnumSet: long[] bits>;

        $l34 = $r9[i7];

        $i33 = staticinvoke <java.lang.Long: int bitCount(long)>($l34);

        $i36 = $i32 - $i33;

        r0.<java.util.HugeEnumSet: int size> = $i36;

        $r11 = r0.<java.util.HugeEnumSet: long[] bits>;

        $r11[i7] = -1L;

        $i40 = r0.<java.util.HugeEnumSet: int size>;

        $r10 = r0.<java.util.HugeEnumSet: long[] bits>;

        $l35 = $r10[i7];

        $i39 = staticinvoke <java.lang.Long: int bitCount(long)>($l35);

        $i38 = $i40 + $i39;

        r0.<java.util.HugeEnumSet: int size> = $i38;

        i7 = i7 + 1;

        goto label2;

     label3:
        return;
    }

    public volatile java.util.EnumSet clone()
    {
        java.util.HugeEnumSet r0, $r1;

        r0 := @this: java.util.HugeEnumSet;

        $r1 = virtualinvoke r0.<java.util.HugeEnumSet: java.util.HugeEnumSet clone()>();

        return $r1;
    }

    public volatile boolean add(java.lang.Object)
    {
        java.util.HugeEnumSet r0;
        java.lang.Object r1;
        java.lang.Enum $r2;
        boolean $z0;

        r0 := @this: java.util.HugeEnumSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Enum) r1;

        $z0 = virtualinvoke r0.<java.util.HugeEnumSet: boolean add(java.lang.Enum)>($r2);

        return $z0;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        java.util.HugeEnumSet r0, $r1;

        r0 := @this: java.util.HugeEnumSet;

        $r1 = virtualinvoke r0.<java.util.HugeEnumSet: java.util.HugeEnumSet clone()>();

        return $r1;
    }

    static long[] access$000(java.util.HugeEnumSet)
    {
        java.util.HugeEnumSet r0;
        long[] $r1;

        r0 := @parameter0: java.util.HugeEnumSet;

        $r1 = r0.<java.util.HugeEnumSet: long[] bits>;

        return $r1;
    }

    static java.lang.Enum[] access$100(java.util.HugeEnumSet)
    {
        java.util.HugeEnumSet r0;
        java.lang.Enum[] $r1;

        r0 := @parameter0: java.util.HugeEnumSet;

        $r1 = r0.<java.util.HugeEnumSet: java.lang.Enum[] enums>;

        return $r1;
    }

    public static void <clinit>()
    {
        <java.util.HugeEnumSet: int BIT_IN_LONG> = 64;

        return;
    }
}
