public final class java.util.UUID extends java.lang.Object implements java.io.Serializable, java.lang.Comparable
{
    private static final long serialVersionUID;
    private static java.security.SecureRandom rng;
    private long mostSigBits;
    private long leastSigBits;
    private transient int variant;
    private transient int version;
    private transient long timestamp;
    private transient int clockSequence;
    private transient long node;
    private transient int hash;

    public void <init>(long, long)
    {
        java.util.UUID r0;
        long l0, l1;

        r0 := @this: java.util.UUID;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.util.UUID: long mostSigBits> = l0;

        r0.<java.util.UUID: long leastSigBits> = l1;

        specialinvoke r0.<java.util.UUID: void init()>();

        return;
    }

    private void init()
    {
        java.util.UUID r0;
        int i0, i1, $i12, $i22, $i25, $i37, $i38, $i41;
        long l2, l3, l4, $l5, $l6, $l7, $l8, $l9, $l10, $l11, $l13, $l14, $l15, $l16, $l19, $l20, $l21, $l23, $l24, $l26, $l27, $l28, $l29, $l30, $l31, $l32, $l33, $l34, $l35, $l36, $l39, $l40, $l42, $l43;
        byte $b17, $b18;

        r0 := @this: java.util.UUID;

        $l7 = r0.<java.util.UUID: long mostSigBits>;

        $l5 = r0.<java.util.UUID: long mostSigBits>;

        $l6 = $l5 >>> 32;

        $l8 = $l7 ^ $l6;

        i0 = (int) $l8;

        $l11 = r0.<java.util.UUID: long leastSigBits>;

        $l9 = r0.<java.util.UUID: long leastSigBits>;

        $l10 = $l9 >>> 32;

        $l13 = $l11 ^ $l10;

        i1 = (int) $l13;

        $i12 = i0 ^ i1;

        r0.<java.util.UUID: int hash> = $i12;

        $l15 = r0.<java.util.UUID: long leastSigBits>;

        $l14 = $l15 & -9223372036854775808L;

        $b17 = $l14 cmp 0L;

        if $b17 != 0 goto label1;

        r0.<java.util.UUID: int variant> = 0;

        goto label3;

     label1:
        $l16 = r0.<java.util.UUID: long leastSigBits>;

        $l19 = $l16 & 4611686018427387904L;

        $b18 = $l19 cmp 0L;

        if $b18 == 0 goto label2;

        $l42 = r0.<java.util.UUID: long leastSigBits>;

        $l43 = $l42 & -2305843009213693952L;

        $l40 = $l43 >>> 61;

        $i41 = (int) $l40;

        r0.<java.util.UUID: int variant> = $i41;

        goto label3;

     label2:
        r0.<java.util.UUID: int variant> = 2;

     label3:
        $l21 = r0.<java.util.UUID: long mostSigBits>;

        $l20 = $l21 & 61440L;

        $l23 = $l20 >>> 12;

        $i22 = (int) $l23;

        r0.<java.util.UUID: int version> = $i22;

        $i25 = r0.<java.util.UUID: int variant>;

        if $i25 == 2 goto label4;

        $i37 = r0.<java.util.UUID: int version>;

        if $i37 == 1 goto label4;

        return;

     label4:
        $l24 = r0.<java.util.UUID: long mostSigBits>;

        $l27 = $l24 & -4294967296L;

        l2 = $l27 >>> 32;

        $l26 = r0.<java.util.UUID: long mostSigBits>;

        $l30 = $l26 & 4294901760L;

        l3 = $l30 << 16;

        $l31 = r0.<java.util.UUID: long mostSigBits>;

        $l28 = $l31 & 4095L;

        l4 = $l28 << 48;

        $l29 = l2 | l3;

        $l34 = $l29 | l4;

        r0.<java.util.UUID: long timestamp> = $l34;

        $l35 = r0.<java.util.UUID: long leastSigBits>;

        $l32 = $l35 & 4611404543450677248L;

        $l33 = $l32 >>> 48;

        $i38 = (int) $l33;

        r0.<java.util.UUID: int clockSequence> = $i38;

        $l39 = r0.<java.util.UUID: long leastSigBits>;

        $l36 = $l39 & 281474976710655L;

        r0.<java.util.UUID: long node> = $l36;

        return;
    }

    public static java.util.UUID randomUUID()
    {
        byte[] r0;
        java.lang.Class r1;
        java.lang.Throwable r2, $r7;
        java.security.SecureRandom $r3, $r4, $r6;
        java.util.UUID $r5;

        r0 = newarray (byte)[16];

        r1 = class "java/util/UUID";

        entermonitor class "java/util/UUID";

     label1:
        $r3 = <java.util.UUID: java.security.SecureRandom rng>;

        if $r3 != null goto label2;

        $r6 = new java.security.SecureRandom;

        specialinvoke $r6.<java.security.SecureRandom: void <init>()>();

        <java.util.UUID: java.security.SecureRandom rng> = $r6;

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        $r4 = <java.util.UUID: java.security.SecureRandom rng>;

        virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>(r0);

        $r5 = staticinvoke <java.util.UUID: java.util.UUID makeUuid(byte[],int)>(r0, 4);

        return $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static java.util.UUID nameUUIDFromBytes(byte[])
    {
        byte[] r0, $r2;
        java.security.MessageDigest r1;
        java.util.UUID $r3;
        java.lang.NullPointerException $r4;
        java.security.NoSuchAlgorithmException $r5, r7;
        java.lang.AssertionError $r6;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("name == null");

        throw $r4;

     label1:
        r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        $r2 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0);

        $r3 = staticinvoke <java.util.UUID: java.util.UUID makeUuid(byte[],int)>($r2, 3);

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

        r7 = $r5;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>(r7);

        throw $r6;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    private static java.util.UUID makeUuid(byte[], int)
    {
        byte[] r0;
        int i0;
        long l1, l2, $l3, $l4, l5, l6, l7, l8;
        java.nio.ByteOrder $r1, $r2;
        java.util.UUID $r3;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r1 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        l1 = staticinvoke <libcore.io.Memory: long peekLong(byte[],int,java.nio.ByteOrder)>(r0, 0, $r1);

        $r2 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        l2 = staticinvoke <libcore.io.Memory: long peekLong(byte[],int,java.nio.ByteOrder)>(r0, 8, $r2);

        l5 = l1 & -61441L;

        $l3 = (long) i0;

        $l4 = $l3 << 12;

        l6 = l5 | $l4;

        l7 = l2 & 4611686018427387903L;

        l8 = l7 | -9223372036854775808L;

        $r3 = new java.util.UUID;

        specialinvoke $r3.<java.util.UUID: void <init>(long,long)>(l6, l8);

        return $r3;
    }

    public static java.util.UUID fromString(java.lang.String)
    {
        java.lang.String r0, $r2, $r3, $r4, $r5, $r6, $r13;
        java.lang.String[] r1;
        long l0, l1, l2, l3, l4, l5, l6, $l8, $l9, $l10, $l11;
        int $i7;
        java.lang.StringBuilder $r7, $r8, $r12;
        java.util.UUID $r9;
        java.lang.IllegalArgumentException $r10;
        java.lang.NullPointerException $r11;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r11 = new java.lang.NullPointerException;

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("uuid == null");

        throw $r11;

     label1:
        r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("-");

        $i7 = lengthof r1;

        if $i7 == 5 goto label2;

        $r10 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid UUID: ");

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r10;

     label2:
        $r2 = r1[0];

        l0 = staticinvoke <java.lang.Long: long parsePositiveLong(java.lang.String,int)>($r2, 16);

        $r3 = r1[1];

        l1 = staticinvoke <java.lang.Long: long parsePositiveLong(java.lang.String,int)>($r3, 16);

        $r4 = r1[2];

        l2 = staticinvoke <java.lang.Long: long parsePositiveLong(java.lang.String,int)>($r4, 16);

        $r5 = r1[3];

        l3 = staticinvoke <java.lang.Long: long parsePositiveLong(java.lang.String,int)>($r5, 16);

        $r6 = r1[4];

        l4 = staticinvoke <java.lang.Long: long parsePositiveLong(java.lang.String,int)>($r6, 16);

        $l8 = l0 << 32;

        $l9 = l1 << 16;

        $l11 = $l8 | $l9;

        l5 = $l11 | l2;

        $l10 = l3 << 48;

        l6 = $l10 | l4;

        $r9 = new java.util.UUID;

        specialinvoke $r9.<java.util.UUID: void <init>(long,long)>(l5, l6);

        return $r9;
    }

    public long getLeastSignificantBits()
    {
        java.util.UUID r0;
        long $l0;

        r0 := @this: java.util.UUID;

        $l0 = r0.<java.util.UUID: long leastSigBits>;

        return $l0;
    }

    public long getMostSignificantBits()
    {
        java.util.UUID r0;
        long $l0;

        r0 := @this: java.util.UUID;

        $l0 = r0.<java.util.UUID: long mostSigBits>;

        return $l0;
    }

    public int version()
    {
        java.util.UUID r0;
        int $i0;

        r0 := @this: java.util.UUID;

        $i0 = r0.<java.util.UUID: int version>;

        return $i0;
    }

    public int variant()
    {
        java.util.UUID r0;
        int $i0;

        r0 := @this: java.util.UUID;

        $i0 = r0.<java.util.UUID: int variant>;

        return $i0;
    }

    public long timestamp()
    {
        java.util.UUID r0;
        int $i0;
        long $l1;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: java.util.UUID;

        $i0 = r0.<java.util.UUID: int version>;

        if $i0 == 1 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;

     label1:
        $l1 = r0.<java.util.UUID: long timestamp>;

        return $l1;
    }

    public int clockSequence()
    {
        java.util.UUID r0;
        int $i0, $i1;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: java.util.UUID;

        $i0 = r0.<java.util.UUID: int version>;

        if $i0 == 1 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;

     label1:
        $i1 = r0.<java.util.UUID: int clockSequence>;

        return $i1;
    }

    public long node()
    {
        java.util.UUID r0;
        int $i0;
        long $l1;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: java.util.UUID;

        $i0 = r0.<java.util.UUID: int version>;

        if $i0 == 1 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;

     label1:
        $l1 = r0.<java.util.UUID: long node>;

        return $l1;
    }

    public int compareTo(java.util.UUID)
    {
        java.util.UUID r0, r1;
        long $l0, $l1, $l3, $l4, $l6, $l7, $l10, $l11;
        byte $b2, $b5, $b8, $b9, $b12, $b13;

        r0 := @this: java.util.UUID;

        r1 := @parameter0: java.util.UUID;

        if r1 != r0 goto label1;

        return 0;

     label1:
        $l1 = r0.<java.util.UUID: long mostSigBits>;

        $l0 = r1.<java.util.UUID: long mostSigBits>;

        $b2 = $l1 cmp $l0;

        if $b2 == 0 goto label4;

        $l11 = r0.<java.util.UUID: long mostSigBits>;

        $l10 = r1.<java.util.UUID: long mostSigBits>;

        $b12 = $l11 cmp $l10;

        if $b12 >= 0 goto label2;

        $b13 = -1;

        goto label3;

     label2:
        $b13 = 1;

     label3:
        return $b13;

     label4:
        $l4 = r0.<java.util.UUID: long leastSigBits>;

        $l3 = r1.<java.util.UUID: long leastSigBits>;

        $b5 = $l4 cmp $l3;

        if $b5 == 0 goto label7;

        $l7 = r0.<java.util.UUID: long leastSigBits>;

        $l6 = r1.<java.util.UUID: long leastSigBits>;

        $b8 = $l7 cmp $l6;

        if $b8 >= 0 goto label5;

        $b9 = -1;

        goto label6;

     label5:
        $b9 = 1;

     label6:
        return $b9;

     label7:
        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.UUID r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        long $l0, $l1, $l3, $l4;
        byte $b2, $b5;

        r0 := @this: java.util.UUID;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        if r0 != r1 goto label2;

        return 1;

     label2:
        $z0 = r1 instanceof java.util.UUID;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        r2 = (java.util.UUID) r1;

        $l1 = r0.<java.util.UUID: long leastSigBits>;

        $l0 = r2.<java.util.UUID: long leastSigBits>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label4;

        $l4 = r0.<java.util.UUID: long mostSigBits>;

        $l3 = r2.<java.util.UUID: long mostSigBits>;

        $b5 = $l4 cmp $l3;

        if $b5 != 0 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    public int hashCode()
    {
        java.util.UUID r0;
        int $i0;

        r0 := @this: java.util.UUID;

        $i0 = r0.<java.util.UUID: int hash>;

        return $i0;
    }

    public java.lang.String toString()
    {
        java.util.UUID r0;
        java.lang.StringBuilder r1, $r3;
        java.lang.String r2, $r9, r13;
        int i0, i1, i2, $i4, $i6, $i7, $i8, i9;
        long $l3, $l5;

        r0 := @this: java.util.UUID;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(36);

        r1 = $r3;

        $l3 = r0.<java.util.UUID: long mostSigBits>;

        r2 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l3);

        $i4 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i4 >= 16 goto label2;

        $i8 = virtualinvoke r2.<java.lang.String: int length()>();

        i0 = 16 - $i8;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>(8, 45);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>(13, 45);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $l5 = r0.<java.util.UUID: long leastSigBits>;

        r13 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l5);

        $i6 = virtualinvoke r13.<java.lang.String: int length()>();

        if $i6 >= 16 goto label4;

        $i7 = virtualinvoke r13.<java.lang.String: int length()>();

        i9 = 16 - $i7;

        i2 = 0;

     label3:
        if i2 >= i9 goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        i2 = i2 + 1;

        goto label3;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>(23, 45);

        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.util.UUID r0;
        java.io.ObjectInputStream r1;

        r0 := @this: java.util.UUID;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        specialinvoke r0.<java.util.UUID: void init()>();

        return;
    }

    public volatile int compareTo(java.lang.Object)
    {
        java.util.UUID r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: java.util.UUID;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.UUID) r1;

        $i0 = virtualinvoke r0.<java.util.UUID: int compareTo(java.util.UUID)>($r2);

        return $i0;
    }

    public static void <clinit>()
    {
        <java.util.UUID: long serialVersionUID> = -4856846361193249489L;

        return;
    }
}
