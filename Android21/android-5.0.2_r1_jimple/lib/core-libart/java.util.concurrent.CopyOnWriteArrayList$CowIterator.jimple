class java.util.concurrent.CopyOnWriteArrayList$CowIterator extends java.lang.Object implements java.util.ListIterator
{
    private final java.lang.Object[] snapshot;
    private final int 'from';
    private final int 'to';
    private int index;

    void <init>(java.lang.Object[], int, int)
    {
        java.util.concurrent.CopyOnWriteArrayList$CowIterator r0;
        java.lang.Object[] r1;
        int i0, i1;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowIterator;

        r1 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.util.concurrent.CopyOnWriteArrayList$CowIterator: int index> = 0;

        r0.<java.util.concurrent.CopyOnWriteArrayList$CowIterator: java.lang.Object[] snapshot> = r1;

        r0.<java.util.concurrent.CopyOnWriteArrayList$CowIterator: int 'from'> = i0;

        r0.<java.util.concurrent.CopyOnWriteArrayList$CowIterator: int 'to'> = i1;

        r0.<java.util.concurrent.CopyOnWriteArrayList$CowIterator: int index> = i0;

        return;
    }

    public void add(java.lang.Object)
    {
        java.util.concurrent.CopyOnWriteArrayList$CowIterator r0;
        java.lang.Object r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowIterator;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public boolean hasNext()
    {
        java.util.concurrent.CopyOnWriteArrayList$CowIterator r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowIterator;

        $i1 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowIterator: int index>;

        $i0 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowIterator: int 'to'>;

        if $i1 >= $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasPrevious()
    {
        java.util.concurrent.CopyOnWriteArrayList$CowIterator r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowIterator;

        $i1 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowIterator: int index>;

        $i0 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowIterator: int 'from'>;

        if $i1 <= $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object next()
    {
        java.util.concurrent.CopyOnWriteArrayList$CowIterator r0;
        int $i0, $i1, $i2, $i3;
        java.util.NoSuchElementException $r1;
        java.lang.Object[] $r2;
        java.lang.Object $r3;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowIterator;

        $i1 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowIterator: int index>;

        $i0 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowIterator: int 'to'>;

        if $i1 >= $i0 goto label1;

        $r2 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowIterator: java.lang.Object[] snapshot>;

        $i2 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowIterator: int index>;

        $i3 = $i2 + 1;

        r0.<java.util.concurrent.CopyOnWriteArrayList$CowIterator: int index> = $i3;

        $r3 = $r2[$i2];

        return $r3;

     label1:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;
    }

    public int nextIndex()
    {
        java.util.concurrent.CopyOnWriteArrayList$CowIterator r0;
        int $i0;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowIterator;

        $i0 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowIterator: int index>;

        return $i0;
    }

    public java.lang.Object previous()
    {
        java.util.concurrent.CopyOnWriteArrayList$CowIterator r0;
        int $i0, $i1, $i2, $i3;
        java.util.NoSuchElementException $r1;
        java.lang.Object[] $r2;
        java.lang.Object $r3;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowIterator;

        $i1 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowIterator: int index>;

        $i0 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowIterator: int 'from'>;

        if $i1 <= $i0 goto label1;

        $r2 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowIterator: java.lang.Object[] snapshot>;

        $i2 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowIterator: int index>;

        $i3 = $i2 - 1;

        r0.<java.util.concurrent.CopyOnWriteArrayList$CowIterator: int index> = $i3;

        $r3 = $r2[$i3];

        return $r3;

     label1:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;
    }

    public int previousIndex()
    {
        java.util.concurrent.CopyOnWriteArrayList$CowIterator r0;
        int $i0, $i1;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowIterator;

        $i0 = r0.<java.util.concurrent.CopyOnWriteArrayList$CowIterator: int index>;

        $i1 = $i0 - 1;

        return $i1;
    }

    public void remove()
    {
        java.util.concurrent.CopyOnWriteArrayList$CowIterator r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public void set(java.lang.Object)
    {
        java.util.concurrent.CopyOnWriteArrayList$CowIterator r0;
        java.lang.Object r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: java.util.concurrent.CopyOnWriteArrayList$CowIterator;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    static int access$002(java.util.concurrent.CopyOnWriteArrayList$CowIterator, int)
    {
        java.util.concurrent.CopyOnWriteArrayList$CowIterator r0;
        int i0;

        r0 := @parameter0: java.util.concurrent.CopyOnWriteArrayList$CowIterator;

        i0 := @parameter1: int;

        r0.<java.util.concurrent.CopyOnWriteArrayList$CowIterator: int index> = i0;

        return i0;
    }
}
