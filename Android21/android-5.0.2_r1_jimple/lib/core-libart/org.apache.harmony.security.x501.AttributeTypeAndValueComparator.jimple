public class org.apache.harmony.security.x501.AttributeTypeAndValueComparator extends java.lang.Object implements java.util.Comparator, java.io.Serializable
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.harmony.security.x501.AttributeTypeAndValueComparator r0;

        r0 := @this: org.apache.harmony.security.x501.AttributeTypeAndValueComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(org.apache.harmony.security.x501.AttributeTypeAndValue, org.apache.harmony.security.x501.AttributeTypeAndValue)
    {
        org.apache.harmony.security.x501.AttributeTypeAndValueComparator r0;
        org.apache.harmony.security.x501.AttributeTypeAndValue r1, r2;
        java.lang.String r3, r4;
        org.apache.harmony.security.utils.ObjectIdentifier $r5, $r6, $r7, $r8;
        int $i0, $i1;

        r0 := @this: org.apache.harmony.security.x501.AttributeTypeAndValueComparator;

        r1 := @parameter0: org.apache.harmony.security.x501.AttributeTypeAndValue;

        r2 := @parameter1: org.apache.harmony.security.x501.AttributeTypeAndValue;

        if r1 != r2 goto label1;

        return 0;

     label1:
        $r5 = virtualinvoke r1.<org.apache.harmony.security.x501.AttributeTypeAndValue: org.apache.harmony.security.utils.ObjectIdentifier getType()>();

        r3 = virtualinvoke $r5.<org.apache.harmony.security.utils.ObjectIdentifier: java.lang.String getName()>();

        $r6 = virtualinvoke r2.<org.apache.harmony.security.x501.AttributeTypeAndValue: org.apache.harmony.security.utils.ObjectIdentifier getType()>();

        r4 = virtualinvoke $r6.<org.apache.harmony.security.utils.ObjectIdentifier: java.lang.String getName()>();

        if r3 == null goto label2;

        if r4 != null goto label2;

        return -1;

     label2:
        if r3 != null goto label3;

        if r4 == null goto label3;

        return 1;

     label3:
        if r3 == null goto label4;

        if r4 == null goto label4;

        $i1 = virtualinvoke r3.<java.lang.String: int compareTo(java.lang.String)>(r4);

        return $i1;

     label4:
        $r7 = virtualinvoke r1.<org.apache.harmony.security.x501.AttributeTypeAndValue: org.apache.harmony.security.utils.ObjectIdentifier getType()>();

        $r8 = virtualinvoke r2.<org.apache.harmony.security.x501.AttributeTypeAndValue: org.apache.harmony.security.utils.ObjectIdentifier getType()>();

        $i0 = staticinvoke <org.apache.harmony.security.x501.AttributeTypeAndValueComparator: int compateOids(org.apache.harmony.security.utils.ObjectIdentifier,org.apache.harmony.security.utils.ObjectIdentifier)>($r7, $r8);

        return $i0;
    }

    private static int compateOids(org.apache.harmony.security.utils.ObjectIdentifier, org.apache.harmony.security.utils.ObjectIdentifier)
    {
        org.apache.harmony.security.utils.ObjectIdentifier r0, r1;
        int[] r2, r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;

        r0 := @parameter0: org.apache.harmony.security.utils.ObjectIdentifier;

        r1 := @parameter1: org.apache.harmony.security.utils.ObjectIdentifier;

        if r0 != r1 goto label1;

        return 0;

     label1:
        r2 = virtualinvoke r0.<org.apache.harmony.security.utils.ObjectIdentifier: int[] getOid()>();

        r3 = virtualinvoke r1.<org.apache.harmony.security.utils.ObjectIdentifier: int[] getOid()>();

        $i3 = lengthof r2;

        $i2 = lengthof r3;

        if $i3 >= $i2 goto label2;

        $i16 = lengthof r2;

        goto label3;

     label2:
        $i16 = lengthof r3;

     label3:
        i0 = $i16;

        i1 = 0;

     label4:
        if i1 >= i0 goto label9;

        $i5 = r2[i1];

        $i4 = r3[i1];

        if $i5 >= $i4 goto label5;

        return -1;

     label5:
        $i7 = r2[i1];

        $i6 = r3[i1];

        if $i7 <= $i6 goto label6;

        return 1;

     label6:
        $i9 = i1 + 1;

        $i8 = lengthof r2;

        if $i9 != $i8 goto label7;

        $i14 = i1 + 1;

        $i15 = lengthof r3;

        if $i14 >= $i15 goto label7;

        return -1;

     label7:
        $i10 = i1 + 1;

        $i11 = lengthof r2;

        if $i10 >= $i11 goto label8;

        $i12 = i1 + 1;

        $i13 = lengthof r3;

        if $i12 != $i13 goto label8;

        return 1;

     label8:
        i1 = i1 + 1;

        goto label4;

     label9:
        return 0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.harmony.security.x501.AttributeTypeAndValueComparator r0;
        java.lang.Object r1, r2;
        org.apache.harmony.security.x501.AttributeTypeAndValue $r3, $r4;
        int $i0;

        r0 := @this: org.apache.harmony.security.x501.AttributeTypeAndValueComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.apache.harmony.security.x501.AttributeTypeAndValue) r1;

        $r3 = (org.apache.harmony.security.x501.AttributeTypeAndValue) r2;

        $i0 = virtualinvoke r0.<org.apache.harmony.security.x501.AttributeTypeAndValueComparator: int compare(org.apache.harmony.security.x501.AttributeTypeAndValue,org.apache.harmony.security.x501.AttributeTypeAndValue)>($r4, $r3);

        return $i0;
    }

    public static void <clinit>()
    {
        <org.apache.harmony.security.x501.AttributeTypeAndValueComparator: long serialVersionUID> = -1286471842007103132L;

        return;
    }
}
