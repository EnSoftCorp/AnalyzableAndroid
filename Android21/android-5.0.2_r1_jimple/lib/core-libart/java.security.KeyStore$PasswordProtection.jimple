public class java.security.KeyStore$PasswordProtection extends java.lang.Object implements java.security.KeyStore$ProtectionParameter, javax.security.auth.Destroyable
{
    private char[] password;
    private boolean isDestroyed;

    public void <init>(char[])
    {
        java.security.KeyStore$PasswordProtection r0;
        char[] r1, $r3;
        java.lang.Object $r2;

        r0 := @this: java.security.KeyStore$PasswordProtection;

        r1 := @parameter0: char[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.security.KeyStore$PasswordProtection: boolean isDestroyed> = 0;

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (char[]) $r2;

        r0.<java.security.KeyStore$PasswordProtection: char[] password> = $r3;

     label1:
        return;
    }

    public synchronized char[] getPassword()
    {
        java.security.KeyStore$PasswordProtection r0;
        boolean $z0;
        char[] $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: java.security.KeyStore$PasswordProtection;

        $z0 = r0.<java.security.KeyStore$PasswordProtection: boolean isDestroyed>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Password was destroyed");

        throw $r2;

     label1:
        $r1 = r0.<java.security.KeyStore$PasswordProtection: char[] password>;

        return $r1;
    }

    public synchronized void destroy() throws javax.security.auth.DestroyFailedException
    {
        java.security.KeyStore$PasswordProtection r0;
        char[] $r1, $r2;

        r0 := @this: java.security.KeyStore$PasswordProtection;

        r0.<java.security.KeyStore$PasswordProtection: boolean isDestroyed> = 1;

        $r1 = r0.<java.security.KeyStore$PasswordProtection: char[] password>;

        if $r1 == null goto label1;

        $r2 = r0.<java.security.KeyStore$PasswordProtection: char[] password>;

        staticinvoke <java.util.Arrays: void fill(char[],char)>($r2, 0);

        r0.<java.security.KeyStore$PasswordProtection: char[] password> = null;

     label1:
        return;
    }

    public synchronized boolean isDestroyed()
    {
        java.security.KeyStore$PasswordProtection r0;
        boolean $z0;

        r0 := @this: java.security.KeyStore$PasswordProtection;

        $z0 = r0.<java.security.KeyStore$PasswordProtection: boolean isDestroyed>;

        return $z0;
    }
}
