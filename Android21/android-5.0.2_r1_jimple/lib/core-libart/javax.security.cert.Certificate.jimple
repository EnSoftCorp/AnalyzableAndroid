public abstract class javax.security.cert.Certificate extends java.lang.Object
{

    public void <init>()
    {
        javax.security.cert.Certificate r0;

        r0 := @this: javax.security.cert.Certificate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        javax.security.cert.Certificate r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        byte[] $r4, $r5;
        javax.security.cert.CertificateEncodingException $r6;

        r0 := @this: javax.security.cert.Certificate;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof javax.security.cert.Certificate;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (javax.security.cert.Certificate) r1;

     label3:
        $r4 = virtualinvoke r0.<javax.security.cert.Certificate: byte[] getEncoded()>();

        $r5 = virtualinvoke r2.<javax.security.cert.Certificate: byte[] getEncoded()>();

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r4, $r5);

     label4:
        return $z1;

     label5:
        $r6 := @caughtexception;

        return 0;

        catch javax.security.cert.CertificateEncodingException from label3 to label4 with label5;
    }

    public int hashCode()
    {
        javax.security.cert.Certificate r0;
        int i0, i1, $i2;
        byte[] r1;
        byte $b3;
        javax.security.cert.CertificateEncodingException $r2;

        r0 := @this: javax.security.cert.Certificate;

        i0 = 0;

     label1:
        r1 = virtualinvoke r0.<javax.security.cert.Certificate: byte[] getEncoded()>();

        i1 = 0;

     label2:
        $i2 = lengthof r1;

        if i1 >= $i2 goto label3;

        $b3 = r1[i1];

        i0 = i0 + $b3;

        i1 = i1 + 1;

        goto label2;

     label3:
        goto label5;

     label4:
        $r2 := @caughtexception;

     label5:
        return i0;

        catch javax.security.cert.CertificateEncodingException from label1 to label3 with label4;
    }

    public abstract byte[] getEncoded() throws javax.security.cert.CertificateEncodingException;

    public abstract void verify(java.security.PublicKey) throws javax.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException;

    public abstract void verify(java.security.PublicKey, java.lang.String) throws javax.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException;

    public abstract java.lang.String toString();

    public abstract java.security.PublicKey getPublicKey();
}
