public final class java.security.SignedObject extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private byte[] content;
    private byte[] signature;
    private java.lang.String thealgorithm;

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.security.SignedObject r0;
        java.io.ObjectInputStream r1;
        byte[] r2, $r3, $r4, $r5, $r6, $r7, $r8, r9;
        int $i0, $i1, $i2, $i3;

        r0 := @this: java.security.SignedObject;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r3 = r0.<java.security.SignedObject: byte[] content>;

        $i0 = lengthof $r3;

        r2 = newarray (byte)[$i0];

        $r5 = r0.<java.security.SignedObject: byte[] content>;

        $r4 = r0.<java.security.SignedObject: byte[] content>;

        $i1 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r5, 0, r2, 0, $i1);

        r0.<java.security.SignedObject: byte[] content> = r2;

        $r6 = r0.<java.security.SignedObject: byte[] signature>;

        $i2 = lengthof $r6;

        r9 = newarray (byte)[$i2];

        $r8 = r0.<java.security.SignedObject: byte[] signature>;

        $r7 = r0.<java.security.SignedObject: byte[] signature>;

        $i3 = lengthof $r7;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r8, 0, r9, 0, $i3);

        r0.<java.security.SignedObject: byte[] signature> = r9;

        return;
    }

    public void <init>(java.io.Serializable, java.security.PrivateKey, java.security.Signature) throws java.io.IOException, java.security.InvalidKeyException, java.security.SignatureException
    {
        java.security.SignedObject r0;
        java.io.Serializable r1;
        java.security.PrivateKey r2;
        java.security.Signature r3;
        java.io.ByteArrayOutputStream r4, $r7;
        java.io.ObjectOutputStream r5, $r8;
        java.lang.Throwable r6, $r13;
        byte[] $r9, $r11, $r12;
        java.lang.String $r10;

        r0 := @this: java.security.SignedObject;

        r1 := @parameter0: java.io.Serializable;

        r2 := @parameter1: java.security.PrivateKey;

        r3 := @parameter2: java.security.Signature;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r7 = new java.io.ByteArrayOutputStream;

        specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>()>();

        r4 = $r7;

        $r8 = new java.io.ObjectOutputStream;

        specialinvoke $r8.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(r4);

        r5 = $r8;

     label1:
        virtualinvoke r5.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r1);

        virtualinvoke r5.<java.io.ObjectOutputStream: void flush()>();

     label2:
        virtualinvoke r5.<java.io.ObjectOutputStream: void close()>();

        goto label5;

     label3:
        $r13 := @caughtexception;

        r6 = $r13;

     label4:
        virtualinvoke r5.<java.io.ObjectOutputStream: void close()>();

        throw r6;

     label5:
        $r9 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        r0.<java.security.SignedObject: byte[] content> = $r9;

        virtualinvoke r3.<java.security.Signature: void initSign(java.security.PrivateKey)>(r2);

        $r10 = virtualinvoke r3.<java.security.Signature: java.lang.String getAlgorithm()>();

        r0.<java.security.SignedObject: java.lang.String thealgorithm> = $r10;

        $r11 = r0.<java.security.SignedObject: byte[] content>;

        virtualinvoke r3.<java.security.Signature: void update(byte[])>($r11);

        $r12 = virtualinvoke r3.<java.security.Signature: byte[] sign()>();

        r0.<java.security.SignedObject: byte[] signature> = $r12;

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Object getObject() throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.security.SignedObject r0;
        java.io.ObjectInputStream r1, $r4;
        java.lang.Object r2;
        java.lang.Throwable r3, $r7;
        java.io.ByteArrayInputStream $r5;
        byte[] $r6;

        r0 := @this: java.security.SignedObject;

        $r4 = new java.io.ObjectInputStream;

        $r5 = new java.io.ByteArrayInputStream;

        $r6 = r0.<java.security.SignedObject: byte[] content>;

        specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[])>($r6);

        specialinvoke $r4.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r5);

        r1 = $r4;

     label1:
        r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

     label2:
        virtualinvoke r1.<java.io.ObjectInputStream: void close()>();

        return r2;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

     label4:
        virtualinvoke r1.<java.io.ObjectInputStream: void close()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public byte[] getSignature()
    {
        java.security.SignedObject r0;
        byte[] r1, $r2, $r3, $r4;
        int $i0, $i1;

        r0 := @this: java.security.SignedObject;

        $r2 = r0.<java.security.SignedObject: byte[] signature>;

        $i0 = lengthof $r2;

        r1 = newarray (byte)[$i0];

        $r4 = r0.<java.security.SignedObject: byte[] signature>;

        $r3 = r0.<java.security.SignedObject: byte[] signature>;

        $i1 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r4, 0, r1, 0, $i1);

        return r1;
    }

    public java.lang.String getAlgorithm()
    {
        java.security.SignedObject r0;
        java.lang.String $r1;

        r0 := @this: java.security.SignedObject;

        $r1 = r0.<java.security.SignedObject: java.lang.String thealgorithm>;

        return $r1;
    }

    public boolean verify(java.security.PublicKey, java.security.Signature) throws java.security.InvalidKeyException, java.security.SignatureException
    {
        java.security.SignedObject r0;
        java.security.PublicKey r1;
        java.security.Signature r2;
        byte[] $r3, $r4;
        boolean $z0;

        r0 := @this: java.security.SignedObject;

        r1 := @parameter0: java.security.PublicKey;

        r2 := @parameter1: java.security.Signature;

        virtualinvoke r2.<java.security.Signature: void initVerify(java.security.PublicKey)>(r1);

        $r3 = r0.<java.security.SignedObject: byte[] content>;

        virtualinvoke r2.<java.security.Signature: void update(byte[])>($r3);

        $r4 = r0.<java.security.SignedObject: byte[] signature>;

        $z0 = virtualinvoke r2.<java.security.Signature: boolean verify(byte[])>($r4);

        return $z0;
    }

    public static void <clinit>()
    {
        <java.security.SignedObject: long serialVersionUID> = 720502720485447167L;

        return;
    }
}
