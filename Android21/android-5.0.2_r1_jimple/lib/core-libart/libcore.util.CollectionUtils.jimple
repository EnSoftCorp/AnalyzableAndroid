public final class libcore.util.CollectionUtils extends java.lang.Object
{

    private void <init>()
    {
        libcore.util.CollectionUtils r0;

        r0 := @this: libcore.util.CollectionUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Iterable dereferenceIterable(java.lang.Iterable, boolean)
    {
        java.lang.Iterable r0;
        boolean z0;
        libcore.util.CollectionUtils$1 $r1;

        r0 := @parameter0: java.lang.Iterable;

        z0 := @parameter1: boolean;

        $r1 = new libcore.util.CollectionUtils$1;

        specialinvoke $r1.<libcore.util.CollectionUtils$1: void <init>(java.lang.Iterable,boolean)>(r0, z0);

        return $r1;
    }

    public static void removeDuplicates(java.util.List, java.util.Comparator)
    {
        java.util.List r0, $r3;
        java.util.Comparator r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.Object r2, $r4, $r5;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.Comparator;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r0, r1);

        i0 = 1;

        i1 = 1;

     label1:
        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        if i1 >= $i2 goto label3;

        $i5 = i0 - 1;

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i5);

        $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        $i6 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $i6 == 0 goto label2;

        r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        $i7 = i0;

        i0 = i0 + 1;

        interfaceinvoke r0.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i7, r2);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $i3 = interfaceinvoke r0.<java.util.List: int size()>();

        if i0 >= $i3 goto label4;

        $i4 = interfaceinvoke r0.<java.util.List: int size()>();

        $r3 = interfaceinvoke r0.<java.util.List: java.util.List subList(int,int)>(i0, $i4);

        interfaceinvoke $r3.<java.util.List: void clear()>();

     label4:
        return;
    }
}
