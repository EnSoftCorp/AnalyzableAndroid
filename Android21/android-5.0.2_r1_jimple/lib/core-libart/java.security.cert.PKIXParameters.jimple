public class java.security.cert.PKIXParameters extends java.lang.Object implements java.security.cert.CertPathParameters
{
    private java.util.Set trustAnchors;
    private java.util.Set initialPolicies;
    private java.util.List certStores;
    private java.util.Date date;
    private java.util.List certPathCheckers;
    private java.lang.String sigProvider;
    private java.security.cert.CertSelector targetCertConstraints;
    private boolean revocationEnabled;
    private boolean explicitPolicyRequired;
    private boolean policyMappingInhibited;
    private boolean anyPolicyInhibited;
    private boolean policyQualifiersRejected;

    public void <init>(java.util.Set) throws java.security.InvalidAlgorithmParameterException
    {
        java.security.cert.PKIXParameters r0;
        java.util.Set r1;
        java.util.HashSet $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: java.security.cert.PKIXParameters;

        r1 := @parameter0: java.util.Set;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.security.cert.PKIXParameters: boolean revocationEnabled> = 1;

        r0.<java.security.cert.PKIXParameters: boolean explicitPolicyRequired> = 0;

        r0.<java.security.cert.PKIXParameters: boolean policyMappingInhibited> = 0;

        r0.<java.security.cert.PKIXParameters: boolean anyPolicyInhibited> = 0;

        r0.<java.security.cert.PKIXParameters: boolean policyQualifiersRejected> = 1;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("trustAnchors == null");

        throw $r3;

     label1:
        specialinvoke r0.<java.security.cert.PKIXParameters: void checkTrustAnchors(java.util.Set)>(r1);

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>(java.util.Collection)>(r1);

        r0.<java.security.cert.PKIXParameters: java.util.Set trustAnchors> = $r2;

        return;
    }

    public void <init>(java.security.KeyStore) throws java.security.KeyStoreException, java.security.InvalidAlgorithmParameterException
    {
        java.security.cert.PKIXParameters r0;
        java.security.KeyStore r1;
        java.util.Enumeration r2;
        java.lang.String r3;
        java.security.cert.Certificate r4;
        int $i0;
        java.util.HashSet $r5;
        boolean $z0, $z1, $z2;
        java.util.Set $r6, $r10;
        java.lang.Object $r7;
        java.security.cert.TrustAnchor $r8;
        java.security.cert.X509Certificate $r9;
        java.lang.NullPointerException $r11;
        java.security.InvalidAlgorithmParameterException $r12;

        r0 := @this: java.security.cert.PKIXParameters;

        r1 := @parameter0: java.security.KeyStore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.security.cert.PKIXParameters: boolean revocationEnabled> = 1;

        r0.<java.security.cert.PKIXParameters: boolean explicitPolicyRequired> = 0;

        r0.<java.security.cert.PKIXParameters: boolean policyMappingInhibited> = 0;

        r0.<java.security.cert.PKIXParameters: boolean anyPolicyInhibited> = 0;

        r0.<java.security.cert.PKIXParameters: boolean policyQualifiersRejected> = 1;

        if r1 != null goto label1;

        $r11 = new java.lang.NullPointerException;

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("keyStore == null");

        throw $r11;

     label1:
        $i0 = virtualinvoke r1.<java.security.KeyStore: int size()>();

        if $i0 != 0 goto label2;

        $r12 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r12.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("keyStore.size() == 0");

        throw $r12;

     label2:
        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r0.<java.security.cert.PKIXParameters: java.util.Set trustAnchors> = $r5;

        r2 = virtualinvoke r1.<java.security.KeyStore: java.util.Enumeration aliases()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        r3 = (java.lang.String) $r7;

        $z1 = virtualinvoke r1.<java.security.KeyStore: boolean isCertificateEntry(java.lang.String)>(r3);

        if $z1 == 0 goto label4;

        r4 = virtualinvoke r1.<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>(r3);

        $z2 = r4 instanceof java.security.cert.X509Certificate;

        if $z2 == 0 goto label4;

        $r10 = r0.<java.security.cert.PKIXParameters: java.util.Set trustAnchors>;

        $r8 = new java.security.cert.TrustAnchor;

        $r9 = (java.security.cert.X509Certificate) r4;

        specialinvoke $r8.<java.security.cert.TrustAnchor: void <init>(java.security.cert.X509Certificate,byte[])>($r9, null);

        interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>($r8);

     label4:
        goto label3;

     label5:
        $r6 = r0.<java.security.cert.PKIXParameters: java.util.Set trustAnchors>;

        specialinvoke r0.<java.security.cert.PKIXParameters: void checkTrustAnchors(java.util.Set)>($r6);

        return;
    }

    public java.util.Set getTrustAnchors()
    {
        java.security.cert.PKIXParameters r0;
        java.util.Set $r1, $r2;

        r0 := @this: java.security.cert.PKIXParameters;

        $r1 = r0.<java.security.cert.PKIXParameters: java.util.Set trustAnchors>;

        $r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);

        return $r2;
    }

    public void setTrustAnchors(java.util.Set) throws java.security.InvalidAlgorithmParameterException
    {
        java.security.cert.PKIXParameters r0;
        java.util.Set r1;
        java.util.HashSet $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: java.security.cert.PKIXParameters;

        r1 := @parameter0: java.util.Set;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("trustAnchors == null");

        throw $r3;

     label1:
        specialinvoke r0.<java.security.cert.PKIXParameters: void checkTrustAnchors(java.util.Set)>(r1);

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>(java.util.Collection)>(r1);

        r0.<java.security.cert.PKIXParameters: java.util.Set trustAnchors> = $r2;

        return;
    }

    public boolean isAnyPolicyInhibited()
    {
        java.security.cert.PKIXParameters r0;
        boolean $z0;

        r0 := @this: java.security.cert.PKIXParameters;

        $z0 = r0.<java.security.cert.PKIXParameters: boolean anyPolicyInhibited>;

        return $z0;
    }

    public void setAnyPolicyInhibited(boolean)
    {
        java.security.cert.PKIXParameters r0;
        boolean z0;

        r0 := @this: java.security.cert.PKIXParameters;

        z0 := @parameter0: boolean;

        r0.<java.security.cert.PKIXParameters: boolean anyPolicyInhibited> = z0;

        return;
    }

    public java.util.List getCertPathCheckers()
    {
        java.security.cert.PKIXParameters r0;
        java.util.ArrayList r1, $r6, $r14;
        java.util.Iterator r2;
        java.security.cert.PKIXCertPathChecker r3, $r11;
        java.util.List $r4, $r5, $r7, $r8, $r12, $r13;
        boolean $z0, $z1;
        java.lang.Object $r9, $r10;

        r0 := @this: java.security.cert.PKIXParameters;

        $r4 = r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers>;

        if $r4 != null goto label1;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers> = $r14;

     label1:
        $r5 = r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers>;

        $z0 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r13 = r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers>;

        $r12 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r13);

        return $r12;

     label2:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r1 = $r6;

        $r7 = r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers>;

        r2 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.security.cert.PKIXCertPathChecker) $r9;

        $r10 = virtualinvoke r3.<java.security.cert.PKIXCertPathChecker: java.lang.Object clone()>();

        $r11 = (java.security.cert.PKIXCertPathChecker) $r10;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        goto label3;

     label4:
        $r8 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r1);

        return $r8;
    }

    public void setCertPathCheckers(java.util.List)
    {
        java.security.cert.PKIXParameters r0;
        java.util.List r1, $r4, $r5, $r8;
        java.util.Iterator r2;
        java.security.cert.PKIXCertPathChecker r3, $r10;
        boolean $z0, $z1, $z2;
        java.util.ArrayList $r6;
        java.lang.Object $r7, $r9;

        r0 := @this: java.security.cert.PKIXParameters;

        r1 := @parameter0: java.util.List;

        if r1 == null goto label1;

        $z1 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label3;

     label1:
        $r4 = r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers>;

        if $r4 == null goto label2;

        $r5 = r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers>;

        $z0 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers> = null;

     label2:
        return;

     label3:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers> = $r6;

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.security.cert.PKIXCertPathChecker) $r7;

        $r8 = r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers>;

        $r9 = virtualinvoke r3.<java.security.cert.PKIXCertPathChecker: java.lang.Object clone()>();

        $r10 = (java.security.cert.PKIXCertPathChecker) $r9;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label4;

     label5:
        return;
    }

    public void addCertPathChecker(java.security.cert.PKIXCertPathChecker)
    {
        java.security.cert.PKIXParameters r0;
        java.security.cert.PKIXCertPathChecker r1, $r5;
        java.util.List $r2, $r3;
        java.lang.Object $r4;
        java.util.ArrayList $r6;

        r0 := @this: java.security.cert.PKIXParameters;

        r1 := @parameter0: java.security.cert.PKIXCertPathChecker;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers>;

        if $r2 != null goto label2;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers> = $r6;

     label2:
        $r3 = r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers>;

        $r4 = virtualinvoke r1.<java.security.cert.PKIXCertPathChecker: java.lang.Object clone()>();

        $r5 = (java.security.cert.PKIXCertPathChecker) $r4;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

        return;
    }

    public java.util.List getCertStores()
    {
        java.security.cert.PKIXParameters r0;
        java.util.ArrayList r1, $r4, $r9;
        java.util.List $r2, $r3, $r5, $r6, $r7, $r8;
        boolean $z0;

        r0 := @this: java.security.cert.PKIXParameters;

        $r2 = r0.<java.security.cert.PKIXParameters: java.util.List certStores>;

        if $r2 != null goto label1;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<java.security.cert.PKIXParameters: java.util.List certStores> = $r9;

     label1:
        $r3 = r0.<java.security.cert.PKIXParameters: java.util.List certStores>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r7 = r0.<java.security.cert.PKIXParameters: java.util.List certStores>;

        $r8 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r7);

        return $r8;

     label2:
        $r4 = new java.util.ArrayList;

        $r5 = r0.<java.security.cert.PKIXParameters: java.util.List certStores>;

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        r1 = $r4;

        $r6 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r1);

        return $r6;
    }

    public void setCertStores(java.util.List)
    {
        java.security.cert.PKIXParameters r0;
        java.util.List r1, $r2, $r3;
        boolean $z0, $z1;
        java.util.ArrayList $r4;

        r0 := @this: java.security.cert.PKIXParameters;

        r1 := @parameter0: java.util.List;

        if r1 == null goto label1;

        $z1 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label3;

     label1:
        $r2 = r0.<java.security.cert.PKIXParameters: java.util.List certStores>;

        if $r2 == null goto label2;

        $r3 = r0.<java.security.cert.PKIXParameters: java.util.List certStores>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        r0.<java.security.cert.PKIXParameters: java.util.List certStores> = null;

     label2:
        return;

     label3:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        r0.<java.security.cert.PKIXParameters: java.util.List certStores> = $r4;

        return;
    }

    public void addCertStore(java.security.cert.CertStore)
    {
        java.security.cert.PKIXParameters r0;
        java.security.cert.CertStore r1;
        java.util.List $r2, $r3;
        java.util.ArrayList $r4;

        r0 := @this: java.security.cert.PKIXParameters;

        r1 := @parameter0: java.security.cert.CertStore;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<java.security.cert.PKIXParameters: java.util.List certStores>;

        if $r2 != null goto label2;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<java.security.cert.PKIXParameters: java.util.List certStores> = $r4;

     label2:
        $r3 = r0.<java.security.cert.PKIXParameters: java.util.List certStores>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public java.util.Date getDate()
    {
        java.security.cert.PKIXParameters r0;
        java.util.Date $r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: java.security.cert.PKIXParameters;

        $r1 = r0.<java.security.cert.PKIXParameters: java.util.Date date>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<java.security.cert.PKIXParameters: java.util.Date date>;

        $r3 = virtualinvoke $r2.<java.util.Date: java.lang.Object clone()>();

        $r4 = (java.util.Date) $r3;

     label2:
        return $r4;
    }

    public void setDate(java.util.Date)
    {
        java.security.cert.PKIXParameters r0;
        java.util.Date r1, $r2;
        long $l0;

        r0 := @this: java.security.cert.PKIXParameters;

        r1 := @parameter0: java.util.Date;

        if r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = new java.util.Date;

        $l0 = virtualinvoke r1.<java.util.Date: long getTime()>();

        specialinvoke $r2.<java.util.Date: void <init>(long)>($l0);

     label2:
        r0.<java.security.cert.PKIXParameters: java.util.Date date> = $r2;

        return;
    }

    public boolean isExplicitPolicyRequired()
    {
        java.security.cert.PKIXParameters r0;
        boolean $z0;

        r0 := @this: java.security.cert.PKIXParameters;

        $z0 = r0.<java.security.cert.PKIXParameters: boolean explicitPolicyRequired>;

        return $z0;
    }

    public void setExplicitPolicyRequired(boolean)
    {
        java.security.cert.PKIXParameters r0;
        boolean z0;

        r0 := @this: java.security.cert.PKIXParameters;

        z0 := @parameter0: boolean;

        r0.<java.security.cert.PKIXParameters: boolean explicitPolicyRequired> = z0;

        return;
    }

    public java.util.Set getInitialPolicies()
    {
        java.security.cert.PKIXParameters r0;
        java.util.HashSet r1, $r4, $r9;
        java.util.Set $r2, $r3, $r5, $r6, $r7, $r8;
        boolean $z0;

        r0 := @this: java.security.cert.PKIXParameters;

        $r2 = r0.<java.security.cert.PKIXParameters: java.util.Set initialPolicies>;

        if $r2 != null goto label1;

        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        r0.<java.security.cert.PKIXParameters: java.util.Set initialPolicies> = $r9;

     label1:
        $r3 = r0.<java.security.cert.PKIXParameters: java.util.Set initialPolicies>;

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r7 = r0.<java.security.cert.PKIXParameters: java.util.Set initialPolicies>;

        $r8 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r7);

        return $r8;

     label2:
        $r4 = new java.util.HashSet;

        $r5 = r0.<java.security.cert.PKIXParameters: java.util.Set initialPolicies>;

        specialinvoke $r4.<java.util.HashSet: void <init>(java.util.Collection)>($r5);

        r1 = $r4;

        $r6 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(r1);

        return $r6;
    }

    public void setInitialPolicies(java.util.Set)
    {
        java.security.cert.PKIXParameters r0;
        java.util.Set r1, $r2, $r3;
        boolean $z0, $z1;
        java.util.HashSet $r4;

        r0 := @this: java.security.cert.PKIXParameters;

        r1 := @parameter0: java.util.Set;

        if r1 == null goto label1;

        $z1 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>();

        if $z1 == 0 goto label3;

     label1:
        $r2 = r0.<java.security.cert.PKIXParameters: java.util.Set initialPolicies>;

        if $r2 == null goto label2;

        $r3 = r0.<java.security.cert.PKIXParameters: java.util.Set initialPolicies>;

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        r0.<java.security.cert.PKIXParameters: java.util.Set initialPolicies> = null;

     label2:
        return;

     label3:
        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>(java.util.Collection)>(r1);

        r0.<java.security.cert.PKIXParameters: java.util.Set initialPolicies> = $r4;

        return;
    }

    public boolean isPolicyMappingInhibited()
    {
        java.security.cert.PKIXParameters r0;
        boolean $z0;

        r0 := @this: java.security.cert.PKIXParameters;

        $z0 = r0.<java.security.cert.PKIXParameters: boolean policyMappingInhibited>;

        return $z0;
    }

    public void setPolicyMappingInhibited(boolean)
    {
        java.security.cert.PKIXParameters r0;
        boolean z0;

        r0 := @this: java.security.cert.PKIXParameters;

        z0 := @parameter0: boolean;

        r0.<java.security.cert.PKIXParameters: boolean policyMappingInhibited> = z0;

        return;
    }

    public boolean getPolicyQualifiersRejected()
    {
        java.security.cert.PKIXParameters r0;
        boolean $z0;

        r0 := @this: java.security.cert.PKIXParameters;

        $z0 = r0.<java.security.cert.PKIXParameters: boolean policyQualifiersRejected>;

        return $z0;
    }

    public void setPolicyQualifiersRejected(boolean)
    {
        java.security.cert.PKIXParameters r0;
        boolean z0;

        r0 := @this: java.security.cert.PKIXParameters;

        z0 := @parameter0: boolean;

        r0.<java.security.cert.PKIXParameters: boolean policyQualifiersRejected> = z0;

        return;
    }

    public boolean isRevocationEnabled()
    {
        java.security.cert.PKIXParameters r0;
        boolean $z0;

        r0 := @this: java.security.cert.PKIXParameters;

        $z0 = r0.<java.security.cert.PKIXParameters: boolean revocationEnabled>;

        return $z0;
    }

    public void setRevocationEnabled(boolean)
    {
        java.security.cert.PKIXParameters r0;
        boolean z0;

        r0 := @this: java.security.cert.PKIXParameters;

        z0 := @parameter0: boolean;

        r0.<java.security.cert.PKIXParameters: boolean revocationEnabled> = z0;

        return;
    }

    public java.lang.String getSigProvider()
    {
        java.security.cert.PKIXParameters r0;
        java.lang.String $r1;

        r0 := @this: java.security.cert.PKIXParameters;

        $r1 = r0.<java.security.cert.PKIXParameters: java.lang.String sigProvider>;

        return $r1;
    }

    public void setSigProvider(java.lang.String)
    {
        java.security.cert.PKIXParameters r0;
        java.lang.String r1;

        r0 := @this: java.security.cert.PKIXParameters;

        r1 := @parameter0: java.lang.String;

        r0.<java.security.cert.PKIXParameters: java.lang.String sigProvider> = r1;

        return;
    }

    public java.security.cert.CertSelector getTargetCertConstraints()
    {
        java.security.cert.PKIXParameters r0;
        java.security.cert.CertSelector $r1, $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: java.security.cert.PKIXParameters;

        $r1 = r0.<java.security.cert.PKIXParameters: java.security.cert.CertSelector targetCertConstraints>;

        if $r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<java.security.cert.PKIXParameters: java.security.cert.CertSelector targetCertConstraints>;

        $r3 = interfaceinvoke $r2.<java.security.cert.CertSelector: java.lang.Object clone()>();

        $r4 = (java.security.cert.CertSelector) $r3;

     label2:
        return $r4;
    }

    public void setTargetCertConstraints(java.security.cert.CertSelector)
    {
        java.security.cert.PKIXParameters r0;
        java.security.cert.CertSelector r1, $r3;
        java.lang.Object $r2;

        r0 := @this: java.security.cert.PKIXParameters;

        r1 := @parameter0: java.security.cert.CertSelector;

        if r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = interfaceinvoke r1.<java.security.cert.CertSelector: java.lang.Object clone()>();

        $r3 = (java.security.cert.CertSelector) $r2;

     label2:
        r0.<java.security.cert.PKIXParameters: java.security.cert.CertSelector targetCertConstraints> = $r3;

        return;
    }

    public java.lang.Object clone()
    {
        java.security.cert.PKIXParameters r0, r1;
        java.lang.Object $r2;
        java.util.List $r3, $r4, $r6, $r8;
        java.util.ArrayList $r5, $r7;
        java.lang.CloneNotSupportedException $r9, r11;
        java.lang.AssertionError $r10;

        r0 := @this: java.security.cert.PKIXParameters;

     label1:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r1 = (java.security.cert.PKIXParameters) $r2;

        $r3 = r0.<java.security.cert.PKIXParameters: java.util.List certStores>;

        if $r3 == null goto label2;

        $r7 = new java.util.ArrayList;

        $r8 = r0.<java.security.cert.PKIXParameters: java.util.List certStores>;

        specialinvoke $r7.<java.util.ArrayList: void <init>(java.util.Collection)>($r8);

        r1.<java.security.cert.PKIXParameters: java.util.List certStores> = $r7;

     label2:
        $r4 = r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers>;

        if $r4 == null goto label3;

        $r5 = new java.util.ArrayList;

        $r6 = r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers>;

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        r1.<java.security.cert.PKIXParameters: java.util.List certPathCheckers> = $r5;

     label3:
        return r1;

     label4:
        $r9 := @caughtexception;

        r11 = $r9;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>(r11);

        throw $r10;

        catch java.lang.CloneNotSupportedException from label1 to label3 with label4;
    }

    public java.lang.String toString()
    {
        java.security.cert.PKIXParameters r0;
        java.lang.StringBuilder r1, $r2;
        java.util.Set $r3, $r15, $r42, $r43;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.List $r20, $r26, $r35, $r37, $r38, $r40;
        java.util.Date $r21;
        java.lang.String $r30, $r32, $r36, $r39, $r41;
        java.security.cert.CertSelector $r33;

        r0 := @this: java.security.cert.PKIXParameters;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("[\n Trust Anchors: ");

        r1 = $r2;

        $r3 = r0.<java.security.cert.PKIXParameters: java.util.Set trustAnchors>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n Revocation Enabled: ");

        $z0 = r0.<java.security.cert.PKIXParameters: boolean revocationEnabled>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n Explicit Policy Required: ");

        $z1 = r0.<java.security.cert.PKIXParameters: boolean explicitPolicyRequired>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n Policy Mapping Inhibited: ");

        $z2 = r0.<java.security.cert.PKIXParameters: boolean policyMappingInhibited>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n Any Policy Inhibited: ");

        $z3 = r0.<java.security.cert.PKIXParameters: boolean anyPolicyInhibited>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n Policy Qualifiers Rejected: ");

        $z4 = r0.<java.security.cert.PKIXParameters: boolean policyQualifiersRejected>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n Initial Policy OIDs: ");

        $r15 = r0.<java.security.cert.PKIXParameters: java.util.Set initialPolicies>;

        if $r15 == null goto label1;

        $r43 = r0.<java.security.cert.PKIXParameters: java.util.Set initialPolicies>;

        $z7 = interfaceinvoke $r43.<java.util.Set: boolean isEmpty()>();

        if $z7 == 0 goto label2;

     label1:
        $r41 = "any";

        goto label3;

     label2:
        $r42 = r0.<java.security.cert.PKIXParameters: java.util.Set initialPolicies>;

        $r41 = virtualinvoke $r42.<java.lang.Object: java.lang.String toString()>();

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n Cert Stores: ");

        $r20 = r0.<java.security.cert.PKIXParameters: java.util.List certStores>;

        if $r20 == null goto label4;

        $r40 = r0.<java.security.cert.PKIXParameters: java.util.List certStores>;

        $z6 = interfaceinvoke $r40.<java.util.List: boolean isEmpty()>();

        if $z6 == 0 goto label5;

     label4:
        $r39 = "no";

        goto label6;

     label5:
        $r38 = r0.<java.security.cert.PKIXParameters: java.util.List certStores>;

        $r39 = virtualinvoke $r38.<java.lang.Object: java.lang.String toString()>();

     label6:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n Validity Date: ");

        $r21 = r0.<java.security.cert.PKIXParameters: java.util.Date date>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n Cert Path Checkers: ");

        $r26 = r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers>;

        if $r26 == null goto label7;

        $r37 = r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers>;

        $z5 = interfaceinvoke $r37.<java.util.List: boolean isEmpty()>();

        if $z5 == 0 goto label8;

     label7:
        $r36 = "no";

        goto label9;

     label8:
        $r35 = r0.<java.security.cert.PKIXParameters: java.util.List certPathCheckers>;

        $r36 = virtualinvoke $r35.<java.lang.Object: java.lang.String toString()>();

     label9:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n Signature Provider: ");

        $r30 = r0.<java.security.cert.PKIXParameters: java.lang.String sigProvider>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n Target Certificate Constraints: ");

        $r33 = r0.<java.security.cert.PKIXParameters: java.security.cert.CertSelector targetCertConstraints>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n]");

        $r32 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r32;
    }

    private void checkTrustAnchors(java.util.Set) throws java.security.InvalidAlgorithmParameterException
    {
        java.security.cert.PKIXParameters r0;
        java.util.Set r1;
        boolean $z0;
        java.security.InvalidAlgorithmParameterException $r2;

        r0 := @this: java.security.cert.PKIXParameters;

        r1 := @parameter0: java.util.Set;

        $z0 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r2 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r2.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("trustAnchors.isEmpty()");

        throw $r2;

     label1:
        return;
    }
}
