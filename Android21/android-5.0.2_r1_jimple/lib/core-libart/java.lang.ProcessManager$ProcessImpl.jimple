class java.lang.ProcessManager$ProcessImpl extends java.lang.Process
{
    private final int pid;
    private final java.io.InputStream errorStream;
    private final java.io.InputStream inputStream;
    private final java.io.OutputStream outputStream;
    private java.lang.Integer exitValue;
    private final java.lang.Object exitValueMutex;

    void <init>(int, java.io.FileDescriptor, java.io.FileDescriptor, java.io.FileDescriptor)
    {
        java.lang.ProcessManager$ProcessImpl r0;
        int i0;
        java.io.FileDescriptor r1, r2, r3;
        java.lang.Object $r4;
        java.lang.ProcessManager$ProcessInputStream $r5, $r6;
        java.lang.ProcessManager$ProcessOutputStream $r7;

        r0 := @this: java.lang.ProcessManager$ProcessImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.io.FileDescriptor;

        r2 := @parameter2: java.io.FileDescriptor;

        r3 := @parameter3: java.io.FileDescriptor;

        specialinvoke r0.<java.lang.Process: void <init>()>();

        r0.<java.lang.ProcessManager$ProcessImpl: java.lang.Integer exitValue> = null;

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<java.lang.ProcessManager$ProcessImpl: java.lang.Object exitValueMutex> = $r4;

        r0.<java.lang.ProcessManager$ProcessImpl: int pid> = i0;

        $r5 = new java.lang.ProcessManager$ProcessInputStream;

        specialinvoke $r5.<java.lang.ProcessManager$ProcessInputStream: void <init>(java.io.FileDescriptor,java.lang.ProcessManager$1)>(r3, null);

        r0.<java.lang.ProcessManager$ProcessImpl: java.io.InputStream errorStream> = $r5;

        $r6 = new java.lang.ProcessManager$ProcessInputStream;

        specialinvoke $r6.<java.lang.ProcessManager$ProcessInputStream: void <init>(java.io.FileDescriptor,java.lang.ProcessManager$1)>(r1, null);

        r0.<java.lang.ProcessManager$ProcessImpl: java.io.InputStream inputStream> = $r6;

        $r7 = new java.lang.ProcessManager$ProcessOutputStream;

        specialinvoke $r7.<java.lang.ProcessManager$ProcessOutputStream: void <init>(java.io.FileDescriptor,java.lang.ProcessManager$1)>(r2, null);

        r0.<java.lang.ProcessManager$ProcessImpl: java.io.OutputStream outputStream> = $r7;

        return;
    }

    public void destroy()
    {
        java.lang.ProcessManager$ProcessImpl r0;
        java.lang.Object r1, $r4;
        android.system.ErrnoException r2, $r11;
        java.lang.Throwable r3, $r10;
        java.lang.Integer $r5;
        java.io.InputStream $r6, $r7;
        java.io.OutputStream $r8;
        int $i0, $i1, $i2;
        libcore.io.Os $r9;
        java.lang.StringBuilder $r12, $r13, $r14;
        java.lang.String $r15;

        r0 := @this: java.lang.ProcessManager$ProcessImpl;

        $r4 = r0.<java.lang.ProcessManager$ProcessImpl: java.lang.Object exitValueMutex>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<java.lang.ProcessManager$ProcessImpl: java.lang.Integer exitValue>;

        if $r5 != null goto label5;

     label2:
        $r9 = <libcore.io.Libcore: libcore.io.Os os>;

        $i1 = r0.<java.lang.ProcessManager$ProcessImpl: int pid>;

        $i0 = <android.system.OsConstants: int SIGKILL>;

        interfaceinvoke $r9.<libcore.io.Os: void kill(int,int)>($i1, $i0);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        r2 = $r11;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to destroy process ");

        $i2 = r0.<java.lang.ProcessManager$ProcessImpl: int pid>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <java.lang.System: void logI(java.lang.String,java.lang.Throwable)>($r15, r2);

     label5:
        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r1;

     label8:
        throw r3;

     label9:
        $r6 = r0.<java.lang.ProcessManager$ProcessImpl: java.io.InputStream inputStream>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r6);

        $r7 = r0.<java.lang.ProcessManager$ProcessImpl: java.io.InputStream errorStream>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r7);

        $r8 = r0.<java.lang.ProcessManager$ProcessImpl: java.io.OutputStream outputStream>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>($r8);

        return;

        catch android.system.ErrnoException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public int exitValue()
    {
        java.lang.ProcessManager$ProcessImpl r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r11;
        java.lang.Integer $r4, $r5;
        int $i0, $i1;
        java.lang.IllegalThreadStateException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: java.lang.ProcessManager$ProcessImpl;

        $r3 = r0.<java.lang.ProcessManager$ProcessImpl: java.lang.Object exitValueMutex>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<java.lang.ProcessManager$ProcessImpl: java.lang.Integer exitValue>;

        if $r4 != null goto label2;

        $r6 = new java.lang.IllegalThreadStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process has not yet terminated: ");

        $i1 = r0.<java.lang.ProcessManager$ProcessImpl: int pid>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalThreadStateException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label2:
        $r5 = r0.<java.lang.ProcessManager$ProcessImpl: java.lang.Integer exitValue>;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        exitmonitor r1;

     label3:
        return $i0;

     label4:
        $r11 := @caughtexception;

        r2 = $r11;

        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.io.InputStream getErrorStream()
    {
        java.lang.ProcessManager$ProcessImpl r0;
        java.io.InputStream $r1;

        r0 := @this: java.lang.ProcessManager$ProcessImpl;

        $r1 = r0.<java.lang.ProcessManager$ProcessImpl: java.io.InputStream errorStream>;

        return $r1;
    }

    public java.io.InputStream getInputStream()
    {
        java.lang.ProcessManager$ProcessImpl r0;
        java.io.InputStream $r1;

        r0 := @this: java.lang.ProcessManager$ProcessImpl;

        $r1 = r0.<java.lang.ProcessManager$ProcessImpl: java.io.InputStream inputStream>;

        return $r1;
    }

    public java.io.OutputStream getOutputStream()
    {
        java.lang.ProcessManager$ProcessImpl r0;
        java.io.OutputStream $r1;

        r0 := @this: java.lang.ProcessManager$ProcessImpl;

        $r1 = r0.<java.lang.ProcessManager$ProcessImpl: java.io.OutputStream outputStream>;

        return $r1;
    }

    public int waitFor() throws java.lang.InterruptedException
    {
        java.lang.ProcessManager$ProcessImpl r0;
        java.lang.Object r1, $r3, $r6;
        java.lang.Throwable r2, $r7;
        java.lang.Integer $r4, $r5;
        int $i0;

        r0 := @this: java.lang.ProcessManager$ProcessImpl;

        $r3 = r0.<java.lang.ProcessManager$ProcessImpl: java.lang.Object exitValueMutex>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<java.lang.ProcessManager$ProcessImpl: java.lang.Integer exitValue>;

        if $r4 != null goto label2;

        $r6 = r0.<java.lang.ProcessManager$ProcessImpl: java.lang.Object exitValueMutex>;

        virtualinvoke $r6.<java.lang.Object: void wait()>();

        goto label1;

     label2:
        $r5 = r0.<java.lang.ProcessManager$ProcessImpl: java.lang.Integer exitValue>;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        exitmonitor r1;

     label3:
        return $i0;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    void setExitValue(int)
    {
        java.lang.ProcessManager$ProcessImpl r0;
        int i0;
        java.lang.Object r1, $r3, $r5;
        java.lang.Throwable r2, $r6;
        java.lang.Integer $r4;

        r0 := @this: java.lang.ProcessManager$ProcessImpl;

        i0 := @parameter0: int;

        $r3 = r0.<java.lang.ProcessManager$ProcessImpl: java.lang.Object exitValueMutex>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r0.<java.lang.ProcessManager$ProcessImpl: java.lang.Integer exitValue> = $r4;

        $r5 = r0.<java.lang.ProcessManager$ProcessImpl: java.lang.Object exitValueMutex>;

        virtualinvoke $r5.<java.lang.Object: void notifyAll()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String toString()
    {
        java.lang.ProcessManager$ProcessImpl r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        int $i0;
        java.lang.String $r5;

        r0 := @this: java.lang.ProcessManager$ProcessImpl;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Process[pid=");

        $i0 = r0.<java.lang.ProcessManager$ProcessImpl: int pid>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    static int access$300(java.lang.ProcessManager$ProcessImpl)
    {
        java.lang.ProcessManager$ProcessImpl r0;
        int $i0;

        r0 := @parameter0: java.lang.ProcessManager$ProcessImpl;

        $i0 = r0.<java.lang.ProcessManager$ProcessImpl: int pid>;

        return $i0;
    }
}
