public final class android.system.OsConstants extends java.lang.Object
{
    public static final int AF_INET;
    public static final int AF_INET6;
    public static final int AF_UNIX;
    public static final int AF_UNSPEC;
    public static final int AI_ADDRCONFIG;
    public static final int AI_ALL;
    public static final int AI_CANONNAME;
    public static final int AI_NUMERICHOST;
    public static final int AI_NUMERICSERV;
    public static final int AI_PASSIVE;
    public static final int AI_V4MAPPED;
    public static final int CAP_AUDIT_CONTROL;
    public static final int CAP_AUDIT_WRITE;
    public static final int CAP_BLOCK_SUSPEND;
    public static final int CAP_CHOWN;
    public static final int CAP_DAC_OVERRIDE;
    public static final int CAP_DAC_READ_SEARCH;
    public static final int CAP_FOWNER;
    public static final int CAP_FSETID;
    public static final int CAP_IPC_LOCK;
    public static final int CAP_IPC_OWNER;
    public static final int CAP_KILL;
    public static final int CAP_LAST_CAP;
    public static final int CAP_LEASE;
    public static final int CAP_LINUX_IMMUTABLE;
    public static final int CAP_MAC_ADMIN;
    public static final int CAP_MAC_OVERRIDE;
    public static final int CAP_MKNOD;
    public static final int CAP_NET_ADMIN;
    public static final int CAP_NET_BIND_SERVICE;
    public static final int CAP_NET_BROADCAST;
    public static final int CAP_NET_RAW;
    public static final int CAP_SETFCAP;
    public static final int CAP_SETGID;
    public static final int CAP_SETPCAP;
    public static final int CAP_SETUID;
    public static final int CAP_SYS_ADMIN;
    public static final int CAP_SYS_BOOT;
    public static final int CAP_SYS_CHROOT;
    public static final int CAP_SYSLOG;
    public static final int CAP_SYS_MODULE;
    public static final int CAP_SYS_NICE;
    public static final int CAP_SYS_PACCT;
    public static final int CAP_SYS_PTRACE;
    public static final int CAP_SYS_RAWIO;
    public static final int CAP_SYS_RESOURCE;
    public static final int CAP_SYS_TIME;
    public static final int CAP_SYS_TTY_CONFIG;
    public static final int CAP_WAKE_ALARM;
    public static final int E2BIG;
    public static final int EACCES;
    public static final int EADDRINUSE;
    public static final int EADDRNOTAVAIL;
    public static final int EAFNOSUPPORT;
    public static final int EAGAIN;
    public static final int EAI_AGAIN;
    public static final int EAI_BADFLAGS;
    public static final int EAI_FAIL;
    public static final int EAI_FAMILY;
    public static final int EAI_MEMORY;
    public static final int EAI_NODATA;
    public static final int EAI_NONAME;
    public static final int EAI_OVERFLOW;
    public static final int EAI_SERVICE;
    public static final int EAI_SOCKTYPE;
    public static final int EAI_SYSTEM;
    public static final int EALREADY;
    public static final int EBADF;
    public static final int EBADMSG;
    public static final int EBUSY;
    public static final int ECANCELED;
    public static final int ECHILD;
    public static final int ECONNABORTED;
    public static final int ECONNREFUSED;
    public static final int ECONNRESET;
    public static final int EDEADLK;
    public static final int EDESTADDRREQ;
    public static final int EDOM;
    public static final int EDQUOT;
    public static final int EEXIST;
    public static final int EFAULT;
    public static final int EFBIG;
    public static final int EHOSTUNREACH;
    public static final int EIDRM;
    public static final int EILSEQ;
    public static final int EINPROGRESS;
    public static final int EINTR;
    public static final int EINVAL;
    public static final int EIO;
    public static final int EISCONN;
    public static final int EISDIR;
    public static final int ELOOP;
    public static final int EMFILE;
    public static final int EMLINK;
    public static final int EMSGSIZE;
    public static final int EMULTIHOP;
    public static final int ENAMETOOLONG;
    public static final int ENETDOWN;
    public static final int ENETRESET;
    public static final int ENETUNREACH;
    public static final int ENFILE;
    public static final int ENOBUFS;
    public static final int ENODATA;
    public static final int ENODEV;
    public static final int ENOENT;
    public static final int ENOEXEC;
    public static final int ENOLCK;
    public static final int ENOLINK;
    public static final int ENOMEM;
    public static final int ENOMSG;
    public static final int ENOPROTOOPT;
    public static final int ENOSPC;
    public static final int ENOSR;
    public static final int ENOSTR;
    public static final int ENOSYS;
    public static final int ENOTCONN;
    public static final int ENOTDIR;
    public static final int ENOTEMPTY;
    public static final int ENOTSOCK;
    public static final int ENOTSUP;
    public static final int ENOTTY;
    public static final int ENXIO;
    public static final int EOPNOTSUPP;
    public static final int EOVERFLOW;
    public static final int EPERM;
    public static final int EPIPE;
    public static final int EPROTO;
    public static final int EPROTONOSUPPORT;
    public static final int EPROTOTYPE;
    public static final int ERANGE;
    public static final int EROFS;
    public static final int ESPIPE;
    public static final int ESRCH;
    public static final int ESTALE;
    public static final int ETIME;
    public static final int ETIMEDOUT;
    public static final int ETXTBSY;
    public static final int EXDEV;
    public static final int EXIT_FAILURE;
    public static final int EXIT_SUCCESS;
    public static final int FD_CLOEXEC;
    public static final int FIONREAD;
    public static final int F_DUPFD;
    public static final int F_GETFD;
    public static final int F_GETFL;
    public static final int F_GETLK;
    public static final int F_GETLK64;
    public static final int F_GETOWN;
    public static final int F_OK;
    public static final int F_RDLCK;
    public static final int F_SETFD;
    public static final int F_SETFL;
    public static final int F_SETLK;
    public static final int F_SETLK64;
    public static final int F_SETLKW;
    public static final int F_SETLKW64;
    public static final int F_SETOWN;
    public static final int F_UNLCK;
    public static final int F_WRLCK;
    public static final int IFA_F_DADFAILED;
    public static final int IFA_F_DEPRECATED;
    public static final int IFA_F_HOMEADDRESS;
    public static final int IFA_F_NODAD;
    public static final int IFA_F_OPTIMISTIC;
    public static final int IFA_F_PERMANENT;
    public static final int IFA_F_SECONDARY;
    public static final int IFA_F_TEMPORARY;
    public static final int IFA_F_TENTATIVE;
    public static final int IFF_ALLMULTI;
    public static final int IFF_AUTOMEDIA;
    public static final int IFF_BROADCAST;
    public static final int IFF_DEBUG;
    public static final int IFF_DYNAMIC;
    public static final int IFF_LOOPBACK;
    public static final int IFF_MASTER;
    public static final int IFF_MULTICAST;
    public static final int IFF_NOARP;
    public static final int IFF_NOTRAILERS;
    public static final int IFF_POINTOPOINT;
    public static final int IFF_PORTSEL;
    public static final int IFF_PROMISC;
    public static final int IFF_RUNNING;
    public static final int IFF_SLAVE;
    public static final int IFF_UP;
    public static final int IPPROTO_ICMP;
    public static final int IPPROTO_ICMPV6;
    public static final int IPPROTO_IP;
    public static final int IPPROTO_IPV6;
    public static final int IPPROTO_RAW;
    public static final int IPPROTO_TCP;
    public static final int IPPROTO_UDP;
    public static final int IPV6_CHECKSUM;
    public static final int IPV6_MULTICAST_HOPS;
    public static final int IPV6_MULTICAST_IF;
    public static final int IPV6_MULTICAST_LOOP;
    public static final int IPV6_RECVDSTOPTS;
    public static final int IPV6_RECVHOPLIMIT;
    public static final int IPV6_RECVHOPOPTS;
    public static final int IPV6_RECVPKTINFO;
    public static final int IPV6_RECVRTHDR;
    public static final int IPV6_RECVTCLASS;
    public static final int IPV6_TCLASS;
    public static final int IPV6_UNICAST_HOPS;
    public static final int IPV6_V6ONLY;
    public static final int IP_MULTICAST_IF;
    public static final int IP_MULTICAST_LOOP;
    public static final int IP_MULTICAST_TTL;
    public static final int IP_TOS;
    public static final int IP_TTL;
    public static final int MAP_FIXED;
    public static final int MAP_PRIVATE;
    public static final int MAP_SHARED;
    public static final int MCAST_JOIN_GROUP;
    public static final int MCAST_LEAVE_GROUP;
    public static final int MCAST_JOIN_SOURCE_GROUP;
    public static final int MCAST_LEAVE_SOURCE_GROUP;
    public static final int MCAST_BLOCK_SOURCE;
    public static final int MCAST_UNBLOCK_SOURCE;
    public static final int MCL_CURRENT;
    public static final int MCL_FUTURE;
    public static final int MSG_CTRUNC;
    public static final int MSG_DONTROUTE;
    public static final int MSG_EOR;
    public static final int MSG_OOB;
    public static final int MSG_PEEK;
    public static final int MSG_TRUNC;
    public static final int MSG_WAITALL;
    public static final int MS_ASYNC;
    public static final int MS_INVALIDATE;
    public static final int MS_SYNC;
    public static final int NI_DGRAM;
    public static final int NI_NAMEREQD;
    public static final int NI_NOFQDN;
    public static final int NI_NUMERICHOST;
    public static final int NI_NUMERICSERV;
    public static final int O_ACCMODE;
    public static final int O_APPEND;
    public static final int O_CREAT;
    public static final int O_EXCL;
    public static final int O_NOCTTY;
    public static final int O_NOFOLLOW;
    public static final int O_NONBLOCK;
    public static final int O_RDONLY;
    public static final int O_RDWR;
    public static final int O_SYNC;
    public static final int O_TRUNC;
    public static final int O_WRONLY;
    public static final int POLLERR;
    public static final int POLLHUP;
    public static final int POLLIN;
    public static final int POLLNVAL;
    public static final int POLLOUT;
    public static final int POLLPRI;
    public static final int POLLRDBAND;
    public static final int POLLRDNORM;
    public static final int POLLWRBAND;
    public static final int POLLWRNORM;
    public static final int PR_GET_DUMPABLE;
    public static final int PR_SET_DUMPABLE;
    public static final int PR_SET_NO_NEW_PRIVS;
    public static final int PROT_EXEC;
    public static final int PROT_NONE;
    public static final int PROT_READ;
    public static final int PROT_WRITE;
    public static final int R_OK;
    public static final int RT_SCOPE_HOST;
    public static final int RT_SCOPE_LINK;
    public static final int RT_SCOPE_NOWHERE;
    public static final int RT_SCOPE_SITE;
    public static final int RT_SCOPE_UNIVERSE;
    public static final int SEEK_CUR;
    public static final int SEEK_END;
    public static final int SEEK_SET;
    public static final int SHUT_RD;
    public static final int SHUT_RDWR;
    public static final int SHUT_WR;
    public static final int SIGABRT;
    public static final int SIGALRM;
    public static final int SIGBUS;
    public static final int SIGCHLD;
    public static final int SIGCONT;
    public static final int SIGFPE;
    public static final int SIGHUP;
    public static final int SIGILL;
    public static final int SIGINT;
    public static final int SIGIO;
    public static final int SIGKILL;
    public static final int SIGPIPE;
    public static final int SIGPROF;
    public static final int SIGPWR;
    public static final int SIGQUIT;
    public static final int SIGRTMAX;
    public static final int SIGRTMIN;
    public static final int SIGSEGV;
    public static final int SIGSTKFLT;
    public static final int SIGSTOP;
    public static final int SIGSYS;
    public static final int SIGTERM;
    public static final int SIGTRAP;
    public static final int SIGTSTP;
    public static final int SIGTTIN;
    public static final int SIGTTOU;
    public static final int SIGURG;
    public static final int SIGUSR1;
    public static final int SIGUSR2;
    public static final int SIGVTALRM;
    public static final int SIGWINCH;
    public static final int SIGXCPU;
    public static final int SIGXFSZ;
    public static final int SIOCGIFADDR;
    public static final int SIOCGIFBRDADDR;
    public static final int SIOCGIFDSTADDR;
    public static final int SIOCGIFNETMASK;
    public static final int SOCK_DGRAM;
    public static final int SOCK_RAW;
    public static final int SOCK_SEQPACKET;
    public static final int SOCK_STREAM;
    public static final int SOL_SOCKET;
    public static final int SO_BINDTODEVICE;
    public static final int SO_BROADCAST;
    public static final int SO_DEBUG;
    public static final int SO_DONTROUTE;
    public static final int SO_ERROR;
    public static final int SO_KEEPALIVE;
    public static final int SO_LINGER;
    public static final int SO_OOBINLINE;
    public static final int SO_PASSCRED;
    public static final int SO_PEERCRED;
    public static final int SO_RCVBUF;
    public static final int SO_RCVLOWAT;
    public static final int SO_RCVTIMEO;
    public static final int SO_REUSEADDR;
    public static final int SO_SNDBUF;
    public static final int SO_SNDLOWAT;
    public static final int SO_SNDTIMEO;
    public static final int SO_TYPE;
    public static final int STDERR_FILENO;
    public static final int STDIN_FILENO;
    public static final int STDOUT_FILENO;
    public static final int S_IFBLK;
    public static final int S_IFCHR;
    public static final int S_IFDIR;
    public static final int S_IFIFO;
    public static final int S_IFLNK;
    public static final int S_IFMT;
    public static final int S_IFREG;
    public static final int S_IFSOCK;
    public static final int S_IRGRP;
    public static final int S_IROTH;
    public static final int S_IRUSR;
    public static final int S_IRWXG;
    public static final int S_IRWXO;
    public static final int S_IRWXU;
    public static final int S_ISGID;
    public static final int S_ISUID;
    public static final int S_ISVTX;
    public static final int S_IWGRP;
    public static final int S_IWOTH;
    public static final int S_IWUSR;
    public static final int S_IXGRP;
    public static final int S_IXOTH;
    public static final int S_IXUSR;
    public static final int TCP_NODELAY;
    public static final int WCONTINUED;
    public static final int WEXITED;
    public static final int WNOHANG;
    public static final int WNOWAIT;
    public static final int WSTOPPED;
    public static final int WUNTRACED;
    public static final int W_OK;
    public static final int X_OK;
    public static final int _SC_2_CHAR_TERM;
    public static final int _SC_2_C_BIND;
    public static final int _SC_2_C_DEV;
    public static final int _SC_2_C_VERSION;
    public static final int _SC_2_FORT_DEV;
    public static final int _SC_2_FORT_RUN;
    public static final int _SC_2_LOCALEDEF;
    public static final int _SC_2_SW_DEV;
    public static final int _SC_2_UPE;
    public static final int _SC_2_VERSION;
    public static final int _SC_AIO_LISTIO_MAX;
    public static final int _SC_AIO_MAX;
    public static final int _SC_AIO_PRIO_DELTA_MAX;
    public static final int _SC_ARG_MAX;
    public static final int _SC_ASYNCHRONOUS_IO;
    public static final int _SC_ATEXIT_MAX;
    public static final int _SC_AVPHYS_PAGES;
    public static final int _SC_BC_BASE_MAX;
    public static final int _SC_BC_DIM_MAX;
    public static final int _SC_BC_SCALE_MAX;
    public static final int _SC_BC_STRING_MAX;
    public static final int _SC_CHILD_MAX;
    public static final int _SC_CLK_TCK;
    public static final int _SC_COLL_WEIGHTS_MAX;
    public static final int _SC_DELAYTIMER_MAX;
    public static final int _SC_EXPR_NEST_MAX;
    public static final int _SC_FSYNC;
    public static final int _SC_GETGR_R_SIZE_MAX;
    public static final int _SC_GETPW_R_SIZE_MAX;
    public static final int _SC_IOV_MAX;
    public static final int _SC_JOB_CONTROL;
    public static final int _SC_LINE_MAX;
    public static final int _SC_LOGIN_NAME_MAX;
    public static final int _SC_MAPPED_FILES;
    public static final int _SC_MEMLOCK;
    public static final int _SC_MEMLOCK_RANGE;
    public static final int _SC_MEMORY_PROTECTION;
    public static final int _SC_MESSAGE_PASSING;
    public static final int _SC_MQ_OPEN_MAX;
    public static final int _SC_MQ_PRIO_MAX;
    public static final int _SC_NGROUPS_MAX;
    public static final int _SC_NPROCESSORS_CONF;
    public static final int _SC_NPROCESSORS_ONLN;
    public static final int _SC_OPEN_MAX;
    public static final int _SC_PAGESIZE;
    public static final int _SC_PAGE_SIZE;
    public static final int _SC_PASS_MAX;
    public static final int _SC_PHYS_PAGES;
    public static final int _SC_PRIORITIZED_IO;
    public static final int _SC_PRIORITY_SCHEDULING;
    public static final int _SC_REALTIME_SIGNALS;
    public static final int _SC_RE_DUP_MAX;
    public static final int _SC_RTSIG_MAX;
    public static final int _SC_SAVED_IDS;
    public static final int _SC_SEMAPHORES;
    public static final int _SC_SEM_NSEMS_MAX;
    public static final int _SC_SEM_VALUE_MAX;
    public static final int _SC_SHARED_MEMORY_OBJECTS;
    public static final int _SC_SIGQUEUE_MAX;
    public static final int _SC_STREAM_MAX;
    public static final int _SC_SYNCHRONIZED_IO;
    public static final int _SC_THREADS;
    public static final int _SC_THREAD_ATTR_STACKADDR;
    public static final int _SC_THREAD_ATTR_STACKSIZE;
    public static final int _SC_THREAD_DESTRUCTOR_ITERATIONS;
    public static final int _SC_THREAD_KEYS_MAX;
    public static final int _SC_THREAD_PRIORITY_SCHEDULING;
    public static final int _SC_THREAD_PRIO_INHERIT;
    public static final int _SC_THREAD_PRIO_PROTECT;
    public static final int _SC_THREAD_SAFE_FUNCTIONS;
    public static final int _SC_THREAD_STACK_MIN;
    public static final int _SC_THREAD_THREADS_MAX;
    public static final int _SC_TIMERS;
    public static final int _SC_TIMER_MAX;
    public static final int _SC_TTY_NAME_MAX;
    public static final int _SC_TZNAME_MAX;
    public static final int _SC_VERSION;
    public static final int _SC_XBS5_ILP32_OFF32;
    public static final int _SC_XBS5_ILP32_OFFBIG;
    public static final int _SC_XBS5_LP64_OFF64;
    public static final int _SC_XBS5_LPBIG_OFFBIG;
    public static final int _SC_XOPEN_CRYPT;
    public static final int _SC_XOPEN_ENH_I18N;
    public static final int _SC_XOPEN_LEGACY;
    public static final int _SC_XOPEN_REALTIME;
    public static final int _SC_XOPEN_REALTIME_THREADS;
    public static final int _SC_XOPEN_SHM;
    public static final int _SC_XOPEN_UNIX;
    public static final int _SC_XOPEN_VERSION;
    public static final int _SC_XOPEN_XCU_VERSION;

    private void <init>()
    {
        android.system.OsConstants r0;

        r0 := @this: android.system.OsConstants;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean S_ISBLK(int)
    {
        int i0, $i1, $i2, $i3;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = <android.system.OsConstants: int S_IFMT>;

        $i3 = i0 & $i1;

        $i2 = <android.system.OsConstants: int S_IFBLK>;

        if $i3 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean S_ISCHR(int)
    {
        int i0, $i1, $i2, $i3;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = <android.system.OsConstants: int S_IFMT>;

        $i3 = i0 & $i1;

        $i2 = <android.system.OsConstants: int S_IFCHR>;

        if $i3 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean S_ISDIR(int)
    {
        int i0, $i1, $i2, $i3;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = <android.system.OsConstants: int S_IFMT>;

        $i3 = i0 & $i1;

        $i2 = <android.system.OsConstants: int S_IFDIR>;

        if $i3 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean S_ISFIFO(int)
    {
        int i0, $i1, $i2, $i3;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = <android.system.OsConstants: int S_IFMT>;

        $i3 = i0 & $i1;

        $i2 = <android.system.OsConstants: int S_IFIFO>;

        if $i3 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean S_ISREG(int)
    {
        int i0, $i1, $i2, $i3;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = <android.system.OsConstants: int S_IFMT>;

        $i3 = i0 & $i1;

        $i2 = <android.system.OsConstants: int S_IFREG>;

        if $i3 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean S_ISLNK(int)
    {
        int i0, $i1, $i2, $i3;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = <android.system.OsConstants: int S_IFMT>;

        $i3 = i0 & $i1;

        $i2 = <android.system.OsConstants: int S_IFLNK>;

        if $i3 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean S_ISSOCK(int)
    {
        int i0, $i1, $i2, $i3;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = <android.system.OsConstants: int S_IFMT>;

        $i3 = i0 & $i1;

        $i2 = <android.system.OsConstants: int S_IFSOCK>;

        if $i3 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static int WEXITSTATUS(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = i0 & 65280;

        $i2 = $i1 >> 8;

        return $i2;
    }

    public static boolean WCOREDUMP(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 128;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static int WTERMSIG(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 & 127;

        return $i1;
    }

    public static int WSTOPSIG(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.system.OsConstants: int WEXITSTATUS(int)>(i0);

        return $i1;
    }

    public static boolean WIFEXITED(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.system.OsConstants: int WTERMSIG(int)>(i0);

        if $i1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean WIFSTOPPED(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.system.OsConstants: int WTERMSIG(int)>(i0);

        if $i1 != 127 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean WIFSIGNALED(int)
    {
        int i0, $i1, $i2;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 + 1;

        $i2 = staticinvoke <android.system.OsConstants: int WTERMSIG(int)>($i1);

        if $i2 < 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static java.lang.String gaiName(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        i0 := @parameter0: int;

        $i1 = <android.system.OsConstants: int EAI_AGAIN>;

        if i0 != $i1 goto label01;

        return "EAI_AGAIN";

     label01:
        $i2 = <android.system.OsConstants: int EAI_BADFLAGS>;

        if i0 != $i2 goto label02;

        return "EAI_BADFLAGS";

     label02:
        $i3 = <android.system.OsConstants: int EAI_FAIL>;

        if i0 != $i3 goto label03;

        return "EAI_FAIL";

     label03:
        $i4 = <android.system.OsConstants: int EAI_FAMILY>;

        if i0 != $i4 goto label04;

        return "EAI_FAMILY";

     label04:
        $i5 = <android.system.OsConstants: int EAI_MEMORY>;

        if i0 != $i5 goto label05;

        return "EAI_MEMORY";

     label05:
        $i6 = <android.system.OsConstants: int EAI_NODATA>;

        if i0 != $i6 goto label06;

        return "EAI_NODATA";

     label06:
        $i7 = <android.system.OsConstants: int EAI_NONAME>;

        if i0 != $i7 goto label07;

        return "EAI_NONAME";

     label07:
        $i8 = <android.system.OsConstants: int EAI_OVERFLOW>;

        if i0 != $i8 goto label08;

        return "EAI_OVERFLOW";

     label08:
        $i9 = <android.system.OsConstants: int EAI_SERVICE>;

        if i0 != $i9 goto label09;

        return "EAI_SERVICE";

     label09:
        $i10 = <android.system.OsConstants: int EAI_SOCKTYPE>;

        if i0 != $i10 goto label10;

        return "EAI_SOCKTYPE";

     label10:
        $i11 = <android.system.OsConstants: int EAI_SYSTEM>;

        if i0 != $i11 goto label11;

        return "EAI_SYSTEM";

     label11:
        return null;
    }

    public static java.lang.String errnoName(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78;

        i0 := @parameter0: int;

        $i1 = <android.system.OsConstants: int E2BIG>;

        if i0 != $i1 goto label01;

        return "E2BIG";

     label01:
        $i2 = <android.system.OsConstants: int EACCES>;

        if i0 != $i2 goto label02;

        return "EACCES";

     label02:
        $i3 = <android.system.OsConstants: int EADDRINUSE>;

        if i0 != $i3 goto label03;

        return "EADDRINUSE";

     label03:
        $i4 = <android.system.OsConstants: int EADDRNOTAVAIL>;

        if i0 != $i4 goto label04;

        return "EADDRNOTAVAIL";

     label04:
        $i5 = <android.system.OsConstants: int EAFNOSUPPORT>;

        if i0 != $i5 goto label05;

        return "EAFNOSUPPORT";

     label05:
        $i6 = <android.system.OsConstants: int EAGAIN>;

        if i0 != $i6 goto label06;

        return "EAGAIN";

     label06:
        $i7 = <android.system.OsConstants: int EALREADY>;

        if i0 != $i7 goto label07;

        return "EALREADY";

     label07:
        $i8 = <android.system.OsConstants: int EBADF>;

        if i0 != $i8 goto label08;

        return "EBADF";

     label08:
        $i9 = <android.system.OsConstants: int EBADMSG>;

        if i0 != $i9 goto label09;

        return "EBADMSG";

     label09:
        $i10 = <android.system.OsConstants: int EBUSY>;

        if i0 != $i10 goto label10;

        return "EBUSY";

     label10:
        $i11 = <android.system.OsConstants: int ECANCELED>;

        if i0 != $i11 goto label11;

        return "ECANCELED";

     label11:
        $i12 = <android.system.OsConstants: int ECHILD>;

        if i0 != $i12 goto label12;

        return "ECHILD";

     label12:
        $i13 = <android.system.OsConstants: int ECONNABORTED>;

        if i0 != $i13 goto label13;

        return "ECONNABORTED";

     label13:
        $i14 = <android.system.OsConstants: int ECONNREFUSED>;

        if i0 != $i14 goto label14;

        return "ECONNREFUSED";

     label14:
        $i15 = <android.system.OsConstants: int ECONNRESET>;

        if i0 != $i15 goto label15;

        return "ECONNRESET";

     label15:
        $i17 = <android.system.OsConstants: int EDEADLK>;

        if i0 != $i17 goto label16;

        return "EDEADLK";

     label16:
        $i16 = <android.system.OsConstants: int EDESTADDRREQ>;

        if i0 != $i16 goto label17;

        return "EDESTADDRREQ";

     label17:
        $i19 = <android.system.OsConstants: int EDOM>;

        if i0 != $i19 goto label18;

        return "EDOM";

     label18:
        $i18 = <android.system.OsConstants: int EDQUOT>;

        if i0 != $i18 goto label19;

        return "EDQUOT";

     label19:
        $i21 = <android.system.OsConstants: int EEXIST>;

        if i0 != $i21 goto label20;

        return "EEXIST";

     label20:
        $i20 = <android.system.OsConstants: int EFAULT>;

        if i0 != $i20 goto label21;

        return "EFAULT";

     label21:
        $i23 = <android.system.OsConstants: int EFBIG>;

        if i0 != $i23 goto label22;

        return "EFBIG";

     label22:
        $i22 = <android.system.OsConstants: int EHOSTUNREACH>;

        if i0 != $i22 goto label23;

        return "EHOSTUNREACH";

     label23:
        $i25 = <android.system.OsConstants: int EIDRM>;

        if i0 != $i25 goto label24;

        return "EIDRM";

     label24:
        $i24 = <android.system.OsConstants: int EILSEQ>;

        if i0 != $i24 goto label25;

        return "EILSEQ";

     label25:
        $i27 = <android.system.OsConstants: int EINPROGRESS>;

        if i0 != $i27 goto label26;

        return "EINPROGRESS";

     label26:
        $i26 = <android.system.OsConstants: int EINTR>;

        if i0 != $i26 goto label27;

        return "EINTR";

     label27:
        $i29 = <android.system.OsConstants: int EINVAL>;

        if i0 != $i29 goto label28;

        return "EINVAL";

     label28:
        $i28 = <android.system.OsConstants: int EIO>;

        if i0 != $i28 goto label29;

        return "EIO";

     label29:
        $i31 = <android.system.OsConstants: int EISCONN>;

        if i0 != $i31 goto label30;

        return "EISCONN";

     label30:
        $i30 = <android.system.OsConstants: int EISDIR>;

        if i0 != $i30 goto label31;

        return "EISDIR";

     label31:
        $i34 = <android.system.OsConstants: int ELOOP>;

        if i0 != $i34 goto label32;

        return "ELOOP";

     label32:
        $i35 = <android.system.OsConstants: int EMFILE>;

        if i0 != $i35 goto label33;

        return "EMFILE";

     label33:
        $i32 = <android.system.OsConstants: int EMLINK>;

        if i0 != $i32 goto label34;

        return "EMLINK";

     label34:
        $i33 = <android.system.OsConstants: int EMSGSIZE>;

        if i0 != $i33 goto label35;

        return "EMSGSIZE";

     label35:
        $i38 = <android.system.OsConstants: int EMULTIHOP>;

        if i0 != $i38 goto label36;

        return "EMULTIHOP";

     label36:
        $i39 = <android.system.OsConstants: int ENAMETOOLONG>;

        if i0 != $i39 goto label37;

        return "ENAMETOOLONG";

     label37:
        $i36 = <android.system.OsConstants: int ENETDOWN>;

        if i0 != $i36 goto label38;

        return "ENETDOWN";

     label38:
        $i37 = <android.system.OsConstants: int ENETRESET>;

        if i0 != $i37 goto label39;

        return "ENETRESET";

     label39:
        $i42 = <android.system.OsConstants: int ENETUNREACH>;

        if i0 != $i42 goto label40;

        return "ENETUNREACH";

     label40:
        $i43 = <android.system.OsConstants: int ENFILE>;

        if i0 != $i43 goto label41;

        return "ENFILE";

     label41:
        $i40 = <android.system.OsConstants: int ENOBUFS>;

        if i0 != $i40 goto label42;

        return "ENOBUFS";

     label42:
        $i41 = <android.system.OsConstants: int ENODATA>;

        if i0 != $i41 goto label43;

        return "ENODATA";

     label43:
        $i46 = <android.system.OsConstants: int ENODEV>;

        if i0 != $i46 goto label44;

        return "ENODEV";

     label44:
        $i47 = <android.system.OsConstants: int ENOENT>;

        if i0 != $i47 goto label45;

        return "ENOENT";

     label45:
        $i44 = <android.system.OsConstants: int ENOEXEC>;

        if i0 != $i44 goto label46;

        return "ENOEXEC";

     label46:
        $i45 = <android.system.OsConstants: int ENOLCK>;

        if i0 != $i45 goto label47;

        return "ENOLCK";

     label47:
        $i51 = <android.system.OsConstants: int ENOLINK>;

        if i0 != $i51 goto label48;

        return "ENOLINK";

     label48:
        $i50 = <android.system.OsConstants: int ENOMEM>;

        if i0 != $i50 goto label49;

        return "ENOMEM";

     label49:
        $i49 = <android.system.OsConstants: int ENOMSG>;

        if i0 != $i49 goto label50;

        return "ENOMSG";

     label50:
        $i48 = <android.system.OsConstants: int ENOPROTOOPT>;

        if i0 != $i48 goto label51;

        return "ENOPROTOOPT";

     label51:
        $i55 = <android.system.OsConstants: int ENOSPC>;

        if i0 != $i55 goto label52;

        return "ENOSPC";

     label52:
        $i54 = <android.system.OsConstants: int ENOSR>;

        if i0 != $i54 goto label53;

        return "ENOSR";

     label53:
        $i53 = <android.system.OsConstants: int ENOSTR>;

        if i0 != $i53 goto label54;

        return "ENOSTR";

     label54:
        $i52 = <android.system.OsConstants: int ENOSYS>;

        if i0 != $i52 goto label55;

        return "ENOSYS";

     label55:
        $i59 = <android.system.OsConstants: int ENOTCONN>;

        if i0 != $i59 goto label56;

        return "ENOTCONN";

     label56:
        $i58 = <android.system.OsConstants: int ENOTDIR>;

        if i0 != $i58 goto label57;

        return "ENOTDIR";

     label57:
        $i57 = <android.system.OsConstants: int ENOTEMPTY>;

        if i0 != $i57 goto label58;

        return "ENOTEMPTY";

     label58:
        $i56 = <android.system.OsConstants: int ENOTSOCK>;

        if i0 != $i56 goto label59;

        return "ENOTSOCK";

     label59:
        $i63 = <android.system.OsConstants: int ENOTSUP>;

        if i0 != $i63 goto label60;

        return "ENOTSUP";

     label60:
        $i62 = <android.system.OsConstants: int ENOTTY>;

        if i0 != $i62 goto label61;

        return "ENOTTY";

     label61:
        $i61 = <android.system.OsConstants: int ENXIO>;

        if i0 != $i61 goto label62;

        return "ENXIO";

     label62:
        $i60 = <android.system.OsConstants: int EOPNOTSUPP>;

        if i0 != $i60 goto label63;

        return "EOPNOTSUPP";

     label63:
        $i68 = <android.system.OsConstants: int EOVERFLOW>;

        if i0 != $i68 goto label64;

        return "EOVERFLOW";

     label64:
        $i69 = <android.system.OsConstants: int EPERM>;

        if i0 != $i69 goto label65;

        return "EPERM";

     label65:
        $i70 = <android.system.OsConstants: int EPIPE>;

        if i0 != $i70 goto label66;

        return "EPIPE";

     label66:
        $i71 = <android.system.OsConstants: int EPROTO>;

        if i0 != $i71 goto label67;

        return "EPROTO";

     label67:
        $i64 = <android.system.OsConstants: int EPROTONOSUPPORT>;

        if i0 != $i64 goto label68;

        return "EPROTONOSUPPORT";

     label68:
        $i65 = <android.system.OsConstants: int EPROTOTYPE>;

        if i0 != $i65 goto label69;

        return "EPROTOTYPE";

     label69:
        $i66 = <android.system.OsConstants: int ERANGE>;

        if i0 != $i66 goto label70;

        return "ERANGE";

     label70:
        $i67 = <android.system.OsConstants: int EROFS>;

        if i0 != $i67 goto label71;

        return "EROFS";

     label71:
        $i75 = <android.system.OsConstants: int ESPIPE>;

        if i0 != $i75 goto label72;

        return "ESPIPE";

     label72:
        $i76 = <android.system.OsConstants: int ESRCH>;

        if i0 != $i76 goto label73;

        return "ESRCH";

     label73:
        $i77 = <android.system.OsConstants: int ESTALE>;

        if i0 != $i77 goto label74;

        return "ESTALE";

     label74:
        $i78 = <android.system.OsConstants: int ETIME>;

        if i0 != $i78 goto label75;

        return "ETIME";

     label75:
        $i72 = <android.system.OsConstants: int ETIMEDOUT>;

        if i0 != $i72 goto label76;

        return "ETIMEDOUT";

     label76:
        $i73 = <android.system.OsConstants: int ETXTBSY>;

        if i0 != $i73 goto label77;

        return "ETXTBSY";

     label77:
        $i74 = <android.system.OsConstants: int EXDEV>;

        if i0 != $i74 goto label78;

        return "EXDEV";

     label78:
        return null;
    }

    private static native void initConstants();

    private static int placeholder()
    {
        return 0;
    }

    static void <clinit>()
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $i203, $i204, $i205, $i206, $i207, $i208, $i209, $i210, $i211, $i212, $i213, $i214, $i215, $i216, $i217, $i218, $i219, $i220, $i221, $i222, $i223, $i224, $i225, $i226, $i227, $i228, $i229, $i230, $i231, $i232, $i233, $i234, $i235, $i236, $i237, $i238, $i239, $i240, $i241, $i242, $i243, $i244, $i245, $i246, $i247, $i248, $i249, $i250, $i251, $i252, $i253, $i254, $i255, $i256, $i257, $i258, $i259, $i260, $i261, $i262, $i263, $i264, $i265, $i266, $i267, $i268, $i269, $i270, $i271, $i272, $i273, $i274, $i275, $i276, $i277, $i278, $i279, $i280, $i281, $i282, $i283, $i284, $i285, $i286, $i287, $i288, $i289, $i290, $i291, $i292, $i293, $i294, $i295, $i296, $i297, $i298, $i299, $i300, $i301, $i302, $i303, $i304, $i305, $i306, $i307, $i308, $i309, $i310, $i311, $i312, $i313, $i314, $i315, $i316, $i317, $i318, $i319, $i320, $i321, $i322, $i323, $i324, $i325, $i326, $i327, $i328, $i329, $i330, $i331, $i332, $i333, $i334, $i335, $i336, $i337, $i338, $i339, $i340, $i341, $i342, $i343, $i344, $i345, $i346, $i347, $i348, $i349, $i350, $i351, $i352, $i353, $i354, $i355, $i356, $i357, $i358, $i359, $i360, $i361, $i362, $i363, $i364, $i365, $i366, $i367, $i368, $i369, $i370, $i371, $i372, $i373, $i374, $i375, $i376, $i377, $i378, $i379, $i380, $i381, $i382, $i383, $i384, $i385, $i386, $i387, $i388, $i389, $i390, $i391, $i392, $i393, $i394, $i395, $i396, $i397, $i398, $i399, $i400, $i401, $i402, $i403, $i404, $i405, $i406, $i407, $i408, $i409, $i410, $i411, $i412, $i413, $i414, $i415, $i416, $i417, $i418, $i419, $i420, $i421, $i422, $i423, $i424, $i425, $i426, $i427, $i428, $i429, $i430, $i431, $i432, $i433, $i434, $i435, $i436, $i437, $i438, $i439, $i440, $i441, $i442, $i443, $i444, $i445, $i446, $i447, $i448, $i449, $i450, $i451, $i452, $i453, $i454, $i455, $i456, $i457, $i458, $i459, $i460;

        $i0 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int AF_INET> = $i0;

        $i1 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int AF_INET6> = $i1;

        $i2 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int AF_UNIX> = $i2;

        $i3 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int AF_UNSPEC> = $i3;

        $i4 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int AI_ADDRCONFIG> = $i4;

        $i5 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int AI_ALL> = $i5;

        $i6 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int AI_CANONNAME> = $i6;

        $i7 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int AI_NUMERICHOST> = $i7;

        $i8 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int AI_NUMERICSERV> = $i8;

        $i9 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int AI_PASSIVE> = $i9;

        $i10 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int AI_V4MAPPED> = $i10;

        $i11 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_AUDIT_CONTROL> = $i11;

        $i12 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_AUDIT_WRITE> = $i12;

        $i13 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_BLOCK_SUSPEND> = $i13;

        $i14 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_CHOWN> = $i14;

        $i15 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_DAC_OVERRIDE> = $i15;

        $i17 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_DAC_READ_SEARCH> = $i17;

        $i16 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_FOWNER> = $i16;

        $i19 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_FSETID> = $i19;

        $i18 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_IPC_LOCK> = $i18;

        $i21 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_IPC_OWNER> = $i21;

        $i20 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_KILL> = $i20;

        $i23 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_LAST_CAP> = $i23;

        $i22 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_LEASE> = $i22;

        $i25 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_LINUX_IMMUTABLE> = $i25;

        $i24 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_MAC_ADMIN> = $i24;

        $i27 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_MAC_OVERRIDE> = $i27;

        $i26 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_MKNOD> = $i26;

        $i29 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_NET_ADMIN> = $i29;

        $i28 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_NET_BIND_SERVICE> = $i28;

        $i31 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_NET_BROADCAST> = $i31;

        $i30 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_NET_RAW> = $i30;

        $i34 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_SETFCAP> = $i34;

        $i35 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_SETGID> = $i35;

        $i32 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_SETPCAP> = $i32;

        $i33 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_SETUID> = $i33;

        $i38 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_SYS_ADMIN> = $i38;

        $i39 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_SYS_BOOT> = $i39;

        $i36 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_SYS_CHROOT> = $i36;

        $i37 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_SYSLOG> = $i37;

        $i42 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_SYS_MODULE> = $i42;

        $i43 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_SYS_NICE> = $i43;

        $i40 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_SYS_PACCT> = $i40;

        $i41 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_SYS_PTRACE> = $i41;

        $i46 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_SYS_RAWIO> = $i46;

        $i47 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_SYS_RESOURCE> = $i47;

        $i44 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_SYS_TIME> = $i44;

        $i45 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_SYS_TTY_CONFIG> = $i45;

        $i51 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int CAP_WAKE_ALARM> = $i51;

        $i50 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int E2BIG> = $i50;

        $i49 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EACCES> = $i49;

        $i48 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EADDRINUSE> = $i48;

        $i55 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EADDRNOTAVAIL> = $i55;

        $i54 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EAFNOSUPPORT> = $i54;

        $i53 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EAGAIN> = $i53;

        $i52 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EAI_AGAIN> = $i52;

        $i59 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EAI_BADFLAGS> = $i59;

        $i58 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EAI_FAIL> = $i58;

        $i57 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EAI_FAMILY> = $i57;

        $i56 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EAI_MEMORY> = $i56;

        $i63 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EAI_NODATA> = $i63;

        $i62 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EAI_NONAME> = $i62;

        $i61 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EAI_OVERFLOW> = $i61;

        $i60 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EAI_SERVICE> = $i60;

        $i68 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EAI_SOCKTYPE> = $i68;

        $i69 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EAI_SYSTEM> = $i69;

        $i70 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EALREADY> = $i70;

        $i71 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EBADF> = $i71;

        $i64 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EBADMSG> = $i64;

        $i65 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EBUSY> = $i65;

        $i66 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ECANCELED> = $i66;

        $i67 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ECHILD> = $i67;

        $i76 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ECONNABORTED> = $i76;

        $i77 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ECONNREFUSED> = $i77;

        $i78 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ECONNRESET> = $i78;

        $i79 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EDEADLK> = $i79;

        $i72 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EDESTADDRREQ> = $i72;

        $i73 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EDOM> = $i73;

        $i74 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EDQUOT> = $i74;

        $i75 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EEXIST> = $i75;

        $i85 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EFAULT> = $i85;

        $i84 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EFBIG> = $i84;

        $i87 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EHOSTUNREACH> = $i87;

        $i86 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EIDRM> = $i86;

        $i81 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EILSEQ> = $i81;

        $i80 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EINPROGRESS> = $i80;

        $i83 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EINTR> = $i83;

        $i82 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EINVAL> = $i82;

        $i93 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EIO> = $i93;

        $i92 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EISCONN> = $i92;

        $i95 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EISDIR> = $i95;

        $i94 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ELOOP> = $i94;

        $i89 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EMFILE> = $i89;

        $i88 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EMLINK> = $i88;

        $i91 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EMSGSIZE> = $i91;

        $i90 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EMULTIHOP> = $i90;

        $i102 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ENAMETOOLONG> = $i102;

        $i103 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ENETDOWN> = $i103;

        $i100 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ENETRESET> = $i100;

        $i101 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ENETUNREACH> = $i101;

        $i98 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ENFILE> = $i98;

        $i99 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ENOBUFS> = $i99;

        $i96 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ENODATA> = $i96;

        $i97 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ENODEV> = $i97;

        $i110 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ENOENT> = $i110;

        $i111 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ENOEXEC> = $i111;

        $i108 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ENOLCK> = $i108;

        $i109 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ENOLINK> = $i109;

        $i106 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ENOMEM> = $i106;

        $i107 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ENOMSG> = $i107;

        $i104 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ENOPROTOOPT> = $i104;

        $i105 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ENOSPC> = $i105;

        $i119 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ENOSR> = $i119;

        $i118 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ENOSTR> = $i118;

        $i117 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ENOSYS> = $i117;

        $i116 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ENOTCONN> = $i116;

        $i115 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ENOTDIR> = $i115;

        $i114 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ENOTEMPTY> = $i114;

        $i113 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ENOTSOCK> = $i113;

        $i112 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ENOTSUP> = $i112;

        $i127 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ENOTTY> = $i127;

        $i126 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ENXIO> = $i126;

        $i125 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EOPNOTSUPP> = $i125;

        $i124 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EOVERFLOW> = $i124;

        $i123 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EPERM> = $i123;

        $i122 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EPIPE> = $i122;

        $i121 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EPROTO> = $i121;

        $i120 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EPROTONOSUPPORT> = $i120;

        $i137 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EPROTOTYPE> = $i137;

        $i136 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ERANGE> = $i136;

        $i139 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EROFS> = $i139;

        $i138 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ESPIPE> = $i138;

        $i141 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ESRCH> = $i141;

        $i140 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ESTALE> = $i140;

        $i143 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ETIME> = $i143;

        $i142 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ETIMEDOUT> = $i142;

        $i129 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int ETXTBSY> = $i129;

        $i128 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EXDEV> = $i128;

        $i131 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EXIT_FAILURE> = $i131;

        $i130 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int EXIT_SUCCESS> = $i130;

        $i133 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int FD_CLOEXEC> = $i133;

        $i132 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int FIONREAD> = $i132;

        $i135 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int F_DUPFD> = $i135;

        $i134 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int F_GETFD> = $i134;

        $i152 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int F_GETFL> = $i152;

        $i153 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int F_GETLK> = $i153;

        $i154 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int F_GETLK64> = $i154;

        $i155 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int F_GETOWN> = $i155;

        $i156 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int F_OK> = $i156;

        $i157 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int F_RDLCK> = $i157;

        $i158 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int F_SETFD> = $i158;

        $i159 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int F_SETFL> = $i159;

        $i144 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int F_SETLK> = $i144;

        $i145 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int F_SETLK64> = $i145;

        $i146 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int F_SETLKW> = $i146;

        $i147 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int F_SETLKW64> = $i147;

        $i148 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int F_SETOWN> = $i148;

        $i149 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int F_UNLCK> = $i149;

        $i150 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int F_WRLCK> = $i150;

        $i151 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IFA_F_DADFAILED> = $i151;

        $i171 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IFA_F_DEPRECATED> = $i171;

        $i170 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IFA_F_HOMEADDRESS> = $i170;

        $i169 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IFA_F_NODAD> = $i169;

        $i168 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IFA_F_OPTIMISTIC> = $i168;

        $i175 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IFA_F_PERMANENT> = $i175;

        $i174 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IFA_F_SECONDARY> = $i174;

        $i173 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IFA_F_TEMPORARY> = $i173;

        $i172 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IFA_F_TENTATIVE> = $i172;

        $i163 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IFF_ALLMULTI> = $i163;

        $i162 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IFF_AUTOMEDIA> = $i162;

        $i161 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IFF_BROADCAST> = $i161;

        $i160 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IFF_DEBUG> = $i160;

        $i167 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IFF_DYNAMIC> = $i167;

        $i166 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IFF_LOOPBACK> = $i166;

        $i165 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IFF_MASTER> = $i165;

        $i164 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IFF_MULTICAST> = $i164;

        $i186 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IFF_NOARP> = $i186;

        $i187 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IFF_NOTRAILERS> = $i187;

        $i184 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IFF_POINTOPOINT> = $i184;

        $i185 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IFF_PORTSEL> = $i185;

        $i190 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IFF_PROMISC> = $i190;

        $i191 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IFF_RUNNING> = $i191;

        $i188 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IFF_SLAVE> = $i188;

        $i189 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IFF_UP> = $i189;

        $i178 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IPPROTO_ICMP> = $i178;

        $i179 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IPPROTO_ICMPV6> = $i179;

        $i176 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IPPROTO_IP> = $i176;

        $i177 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IPPROTO_IPV6> = $i177;

        $i182 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IPPROTO_RAW> = $i182;

        $i183 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IPPROTO_TCP> = $i183;

        $i180 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IPPROTO_UDP> = $i180;

        $i181 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IPV6_CHECKSUM> = $i181;

        $i205 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IPV6_MULTICAST_HOPS> = $i205;

        $i204 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IPV6_MULTICAST_IF> = $i204;

        $i207 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IPV6_MULTICAST_LOOP> = $i207;

        $i206 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IPV6_RECVDSTOPTS> = $i206;

        $i201 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IPV6_RECVHOPLIMIT> = $i201;

        $i200 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IPV6_RECVHOPOPTS> = $i200;

        $i203 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IPV6_RECVPKTINFO> = $i203;

        $i202 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IPV6_RECVRTHDR> = $i202;

        $i197 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IPV6_RECVTCLASS> = $i197;

        $i196 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IPV6_TCLASS> = $i196;

        $i199 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IPV6_UNICAST_HOPS> = $i199;

        $i198 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IPV6_V6ONLY> = $i198;

        $i193 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IP_MULTICAST_IF> = $i193;

        $i192 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IP_MULTICAST_LOOP> = $i192;

        $i195 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IP_MULTICAST_TTL> = $i195;

        $i194 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IP_TOS> = $i194;

        $i220 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int IP_TTL> = $i220;

        $i221 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int MAP_FIXED> = $i221;

        $i222 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int MAP_PRIVATE> = $i222;

        $i223 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int MAP_SHARED> = $i223;

        $i216 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int MCAST_JOIN_GROUP> = $i216;

        $i217 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int MCAST_LEAVE_GROUP> = $i217;

        $i218 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int MCAST_JOIN_SOURCE_GROUP> = $i218;

        $i219 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int MCAST_LEAVE_SOURCE_GROUP> = $i219;

        $i212 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int MCAST_BLOCK_SOURCE> = $i212;

        $i213 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int MCAST_UNBLOCK_SOURCE> = $i213;

        $i214 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int MCL_CURRENT> = $i214;

        $i215 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int MCL_FUTURE> = $i215;

        $i208 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int MSG_CTRUNC> = $i208;

        $i209 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int MSG_DONTROUTE> = $i209;

        $i210 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int MSG_EOR> = $i210;

        $i211 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int MSG_OOB> = $i211;

        $i239 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int MSG_PEEK> = $i239;

        $i238 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int MSG_TRUNC> = $i238;

        $i237 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int MSG_WAITALL> = $i237;

        $i236 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int MS_ASYNC> = $i236;

        $i235 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int MS_INVALIDATE> = $i235;

        $i234 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int MS_SYNC> = $i234;

        $i233 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int NI_DGRAM> = $i233;

        $i232 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int NI_NAMEREQD> = $i232;

        $i231 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int NI_NOFQDN> = $i231;

        $i230 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int NI_NUMERICHOST> = $i230;

        $i229 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int NI_NUMERICSERV> = $i229;

        $i228 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int O_ACCMODE> = $i228;

        $i227 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int O_APPEND> = $i227;

        $i226 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int O_CREAT> = $i226;

        $i225 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int O_EXCL> = $i225;

        $i224 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int O_NOCTTY> = $i224;

        $i254 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int O_NOFOLLOW> = $i254;

        $i255 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int O_NONBLOCK> = $i255;

        $i252 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int O_RDONLY> = $i252;

        $i253 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int O_RDWR> = $i253;

        $i250 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int O_SYNC> = $i250;

        $i251 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int O_TRUNC> = $i251;

        $i248 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int O_WRONLY> = $i248;

        $i249 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int POLLERR> = $i249;

        $i246 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int POLLHUP> = $i246;

        $i247 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int POLLIN> = $i247;

        $i244 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int POLLNVAL> = $i244;

        $i245 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int POLLOUT> = $i245;

        $i242 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int POLLPRI> = $i242;

        $i243 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int POLLRDBAND> = $i243;

        $i240 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int POLLRDNORM> = $i240;

        $i241 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int POLLWRBAND> = $i241;

        $i274 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int POLLWRNORM> = $i274;

        $i275 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int PR_GET_DUMPABLE> = $i275;

        $i272 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int PR_SET_DUMPABLE> = $i272;

        $i273 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int PR_SET_NO_NEW_PRIVS> = $i273;

        $i278 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int PROT_EXEC> = $i278;

        $i279 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int PROT_NONE> = $i279;

        $i276 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int PROT_READ> = $i276;

        $i277 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int PROT_WRITE> = $i277;

        $i282 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int R_OK> = $i282;

        $i283 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int RT_SCOPE_HOST> = $i283;

        $i280 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int RT_SCOPE_LINK> = $i280;

        $i281 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int RT_SCOPE_NOWHERE> = $i281;

        $i286 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int RT_SCOPE_SITE> = $i286;

        $i287 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int RT_SCOPE_UNIVERSE> = $i287;

        $i284 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SEEK_CUR> = $i284;

        $i285 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SEEK_END> = $i285;

        $i259 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SEEK_SET> = $i259;

        $i258 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SHUT_RD> = $i258;

        $i257 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SHUT_RDWR> = $i257;

        $i256 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SHUT_WR> = $i256;

        $i263 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGABRT> = $i263;

        $i262 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGALRM> = $i262;

        $i261 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGBUS> = $i261;

        $i260 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGCHLD> = $i260;

        $i267 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGCONT> = $i267;

        $i266 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGFPE> = $i266;

        $i265 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGHUP> = $i265;

        $i264 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGILL> = $i264;

        $i271 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGINT> = $i271;

        $i270 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGIO> = $i270;

        $i269 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGKILL> = $i269;

        $i268 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGPIPE> = $i268;

        $i304 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGPROF> = $i304;

        $i305 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGPWR> = $i305;

        $i306 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGQUIT> = $i306;

        $i307 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGRTMAX> = $i307;

        $i308 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGRTMIN> = $i308;

        $i309 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGSEGV> = $i309;

        $i310 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGSTKFLT> = $i310;

        $i311 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGSTOP> = $i311;

        $i312 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGSYS> = $i312;

        $i313 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGTERM> = $i313;

        $i314 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGTRAP> = $i314;

        $i315 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGTSTP> = $i315;

        $i316 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGTTIN> = $i316;

        $i317 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGTTOU> = $i317;

        $i318 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGURG> = $i318;

        $i319 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGUSR1> = $i319;

        $i289 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGUSR2> = $i289;

        $i288 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGVTALRM> = $i288;

        $i291 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGWINCH> = $i291;

        $i290 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGXCPU> = $i290;

        $i293 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIGXFSZ> = $i293;

        $i292 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIOCGIFADDR> = $i292;

        $i295 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIOCGIFBRDADDR> = $i295;

        $i294 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIOCGIFDSTADDR> = $i294;

        $i297 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SIOCGIFNETMASK> = $i297;

        $i296 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SOCK_DGRAM> = $i296;

        $i299 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SOCK_RAW> = $i299;

        $i298 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SOCK_SEQPACKET> = $i298;

        $i301 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SOCK_STREAM> = $i301;

        $i300 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SOL_SOCKET> = $i300;

        $i303 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SO_BINDTODEVICE> = $i303;

        $i302 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SO_BROADCAST> = $i302;

        $i342 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SO_DEBUG> = $i342;

        $i343 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SO_DONTROUTE> = $i343;

        $i340 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SO_ERROR> = $i340;

        $i341 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SO_KEEPALIVE> = $i341;

        $i338 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SO_LINGER> = $i338;

        $i339 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SO_OOBINLINE> = $i339;

        $i336 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SO_PASSCRED> = $i336;

        $i337 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SO_PEERCRED> = $i337;

        $i350 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SO_RCVBUF> = $i350;

        $i351 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SO_RCVLOWAT> = $i351;

        $i348 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SO_RCVTIMEO> = $i348;

        $i349 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SO_REUSEADDR> = $i349;

        $i346 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SO_SNDBUF> = $i346;

        $i347 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SO_SNDLOWAT> = $i347;

        $i344 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SO_SNDTIMEO> = $i344;

        $i345 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int SO_TYPE> = $i345;

        $i327 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int STDERR_FILENO> = $i327;

        $i326 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int STDIN_FILENO> = $i326;

        $i325 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int STDOUT_FILENO> = $i325;

        $i324 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int S_IFBLK> = $i324;

        $i323 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int S_IFCHR> = $i323;

        $i322 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int S_IFDIR> = $i322;

        $i321 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int S_IFIFO> = $i321;

        $i320 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int S_IFLNK> = $i320;

        $i335 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int S_IFMT> = $i335;

        $i334 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int S_IFREG> = $i334;

        $i333 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int S_IFSOCK> = $i333;

        $i332 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int S_IRGRP> = $i332;

        $i331 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int S_IROTH> = $i331;

        $i330 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int S_IRUSR> = $i330;

        $i329 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int S_IRWXG> = $i329;

        $i328 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int S_IRWXO> = $i328;

        $i372 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int S_IRWXU> = $i372;

        $i373 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int S_ISGID> = $i373;

        $i374 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int S_ISUID> = $i374;

        $i375 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int S_ISVTX> = $i375;

        $i368 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int S_IWGRP> = $i368;

        $i369 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int S_IWOTH> = $i369;

        $i370 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int S_IWUSR> = $i370;

        $i371 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int S_IXGRP> = $i371;

        $i380 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int S_IXOTH> = $i380;

        $i381 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int S_IXUSR> = $i381;

        $i382 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int TCP_NODELAY> = $i382;

        $i383 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int WCONTINUED> = $i383;

        $i376 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int WEXITED> = $i376;

        $i377 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int WNOHANG> = $i377;

        $i378 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int WNOWAIT> = $i378;

        $i379 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int WSTOPPED> = $i379;

        $i357 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int WUNTRACED> = $i357;

        $i356 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int W_OK> = $i356;

        $i359 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int X_OK> = $i359;

        $i358 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_2_CHAR_TERM> = $i358;

        $i353 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_2_C_BIND> = $i353;

        $i352 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_2_C_DEV> = $i352;

        $i355 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_2_C_VERSION> = $i355;

        $i354 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_2_FORT_DEV> = $i354;

        $i365 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_2_FORT_RUN> = $i365;

        $i364 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_2_LOCALEDEF> = $i364;

        $i367 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_2_SW_DEV> = $i367;

        $i366 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_2_UPE> = $i366;

        $i361 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_2_VERSION> = $i361;

        $i360 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_AIO_LISTIO_MAX> = $i360;

        $i363 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_AIO_MAX> = $i363;

        $i362 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_AIO_PRIO_DELTA_MAX> = $i362;

        $i411 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_ARG_MAX> = $i411;

        $i410 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_ASYNCHRONOUS_IO> = $i410;

        $i409 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_ATEXIT_MAX> = $i409;

        $i408 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_AVPHYS_PAGES> = $i408;

        $i415 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_BC_BASE_MAX> = $i415;

        $i414 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_BC_DIM_MAX> = $i414;

        $i413 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_BC_SCALE_MAX> = $i413;

        $i412 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_BC_STRING_MAX> = $i412;

        $i403 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_CHILD_MAX> = $i403;

        $i402 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_CLK_TCK> = $i402;

        $i401 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_COLL_WEIGHTS_MAX> = $i401;

        $i400 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_DELAYTIMER_MAX> = $i400;

        $i407 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_EXPR_NEST_MAX> = $i407;

        $i406 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_FSYNC> = $i406;

        $i405 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_GETGR_R_SIZE_MAX> = $i405;

        $i404 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_GETPW_R_SIZE_MAX> = $i404;

        $i394 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_IOV_MAX> = $i394;

        $i395 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_JOB_CONTROL> = $i395;

        $i392 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_LINE_MAX> = $i392;

        $i393 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_LOGIN_NAME_MAX> = $i393;

        $i398 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_MAPPED_FILES> = $i398;

        $i399 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_MEMLOCK> = $i399;

        $i396 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_MEMLOCK_RANGE> = $i396;

        $i397 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_MEMORY_PROTECTION> = $i397;

        $i386 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_MESSAGE_PASSING> = $i386;

        $i387 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_MQ_OPEN_MAX> = $i387;

        $i384 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_MQ_PRIO_MAX> = $i384;

        $i385 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_NGROUPS_MAX> = $i385;

        $i390 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_NPROCESSORS_CONF> = $i390;

        $i391 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_NPROCESSORS_ONLN> = $i391;

        $i388 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_OPEN_MAX> = $i388;

        $i389 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_PAGESIZE> = $i389;

        $i441 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_PAGE_SIZE> = $i441;

        $i440 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_PASS_MAX> = $i440;

        $i443 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_PHYS_PAGES> = $i443;

        $i442 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_PRIORITIZED_IO> = $i442;

        $i445 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_PRIORITY_SCHEDULING> = $i445;

        $i444 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_REALTIME_SIGNALS> = $i444;

        $i447 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_RE_DUP_MAX> = $i447;

        $i446 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_RTSIG_MAX> = $i446;

        $i433 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_SAVED_IDS> = $i433;

        $i432 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_SEMAPHORES> = $i432;

        $i435 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_SEM_NSEMS_MAX> = $i435;

        $i434 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_SEM_VALUE_MAX> = $i434;

        $i437 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_SHARED_MEMORY_OBJECTS> = $i437;

        $i436 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_SIGQUEUE_MAX> = $i436;

        $i439 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_STREAM_MAX> = $i439;

        $i438 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_SYNCHRONIZED_IO> = $i438;

        $i424 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_THREADS> = $i424;

        $i425 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_THREAD_ATTR_STACKADDR> = $i425;

        $i426 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_THREAD_ATTR_STACKSIZE> = $i426;

        $i427 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_THREAD_DESTRUCTOR_ITERATIONS> = $i427;

        $i428 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_THREAD_KEYS_MAX> = $i428;

        $i429 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_THREAD_PRIORITY_SCHEDULING> = $i429;

        $i430 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_THREAD_PRIO_INHERIT> = $i430;

        $i431 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_THREAD_PRIO_PROTECT> = $i431;

        $i416 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_THREAD_SAFE_FUNCTIONS> = $i416;

        $i417 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_THREAD_STACK_MIN> = $i417;

        $i418 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_THREAD_THREADS_MAX> = $i418;

        $i419 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_TIMERS> = $i419;

        $i420 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_TIMER_MAX> = $i420;

        $i421 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_TTY_NAME_MAX> = $i421;

        $i422 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_TZNAME_MAX> = $i422;

        $i423 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_VERSION> = $i423;

        $i460 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_XBS5_ILP32_OFF32> = $i460;

        $i459 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_XBS5_ILP32_OFFBIG> = $i459;

        $i458 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_XBS5_LP64_OFF64> = $i458;

        $i457 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_XBS5_LPBIG_OFFBIG> = $i457;

        $i456 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_XOPEN_CRYPT> = $i456;

        $i455 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_XOPEN_ENH_I18N> = $i455;

        $i454 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_XOPEN_LEGACY> = $i454;

        $i453 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_XOPEN_REALTIME> = $i453;

        $i452 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_XOPEN_REALTIME_THREADS> = $i452;

        $i451 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_XOPEN_SHM> = $i451;

        $i450 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_XOPEN_UNIX> = $i450;

        $i449 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_XOPEN_VERSION> = $i449;

        $i448 = staticinvoke <android.system.OsConstants: int placeholder()>();

        <android.system.OsConstants: int _SC_XOPEN_XCU_VERSION> = $i448;

        staticinvoke <android.system.OsConstants: void initConstants()>();

        return;
    }
}
