final class java.util.concurrent.ForkJoinPool$DefaultForkJoinWorkerThreadFactory extends java.lang.Object implements java.util.concurrent.ForkJoinPool$ForkJoinWorkerThreadFactory
{

    void <init>()
    {
        java.util.concurrent.ForkJoinPool$DefaultForkJoinWorkerThreadFactory r0;

        r0 := @this: java.util.concurrent.ForkJoinPool$DefaultForkJoinWorkerThreadFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.util.concurrent.ForkJoinWorkerThread newThread(java.util.concurrent.ForkJoinPool)
    {
        java.util.concurrent.ForkJoinPool$DefaultForkJoinWorkerThreadFactory r0;
        java.util.concurrent.ForkJoinPool r1;
        java.util.concurrent.ForkJoinWorkerThread $r2;

        r0 := @this: java.util.concurrent.ForkJoinPool$DefaultForkJoinWorkerThreadFactory;

        r1 := @parameter0: java.util.concurrent.ForkJoinPool;

        $r2 = new java.util.concurrent.ForkJoinWorkerThread;

        specialinvoke $r2.<java.util.concurrent.ForkJoinWorkerThread: void <init>(java.util.concurrent.ForkJoinPool)>(r1);

        return $r2;
    }
}
