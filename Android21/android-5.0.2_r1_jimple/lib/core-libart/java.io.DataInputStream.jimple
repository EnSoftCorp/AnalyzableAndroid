public class java.io.DataInputStream extends java.io.FilterInputStream implements java.io.DataInput
{
    private final byte[] scratch;

    public void <init>(java.io.InputStream)
    {
        java.io.DataInputStream r0;
        java.io.InputStream r1;
        byte[] $r2;

        r0 := @this: java.io.DataInputStream;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>(r1);

        $r2 = newarray (byte)[8];

        r0.<java.io.DataInputStream: byte[] scratch> = $r2;

        return;
    }

    public final int read(byte[]) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        byte[] r1;
        int $i0;

        r0 := @this: java.io.DataInputStream;

        r1 := @parameter0: byte[];

        $i0 = specialinvoke r0.<java.io.FilterInputStream: int read(byte[])>(r1);

        return $i0;
    }

    public final int read(byte[], int, int) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        byte[] r1;
        int i0, i1, $i2;
        java.io.InputStream $r2;

        r0 := @this: java.io.DataInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<java.io.DataInputStream: java.io.InputStream in>;

        $i2 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>(r1, i0, i1);

        return $i2;
    }

    public final boolean readBoolean() throws java.io.IOException
    {
        java.io.DataInputStream r0;
        int i0;
        java.io.InputStream $r1;
        boolean $z0;
        java.io.EOFException $r2;

        r0 := @this: java.io.DataInputStream;

        $r1 = r0.<java.io.DataInputStream: java.io.InputStream in>;

        i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        if i0 >= 0 goto label1;

        $r2 = new java.io.EOFException;

        specialinvoke $r2.<java.io.EOFException: void <init>()>();

        throw $r2;

     label1:
        if i0 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public final byte readByte() throws java.io.IOException
    {
        java.io.DataInputStream r0;
        int i0;
        java.io.InputStream $r1;
        byte $b1;
        java.io.EOFException $r2;

        r0 := @this: java.io.DataInputStream;

        $r1 = r0.<java.io.DataInputStream: java.io.InputStream in>;

        i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        if i0 >= 0 goto label1;

        $r2 = new java.io.EOFException;

        specialinvoke $r2.<java.io.EOFException: void <init>()>();

        throw $r2;

     label1:
        $b1 = (byte) i0;

        return $b1;
    }

    public final char readChar() throws java.io.IOException
    {
        java.io.DataInputStream r0;
        short $s0;
        char $c1;

        r0 := @this: java.io.DataInputStream;

        $s0 = virtualinvoke r0.<java.io.DataInputStream: short readShort()>();

        $c1 = (char) $s0;

        return $c1;
    }

    public final double readDouble() throws java.io.IOException
    {
        java.io.DataInputStream r0;
        long $l0;
        double $d0;

        r0 := @this: java.io.DataInputStream;

        $l0 = virtualinvoke r0.<java.io.DataInputStream: long readLong()>();

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l0);

        return $d0;
    }

    public final float readFloat() throws java.io.IOException
    {
        java.io.DataInputStream r0;
        int $i0;
        float $f0;

        r0 := @this: java.io.DataInputStream;

        $i0 = virtualinvoke r0.<java.io.DataInputStream: int readInt()>();

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i0);

        return $f0;
    }

    public final void readFully(byte[]) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        byte[] r1;
        int $i0;

        r0 := @this: java.io.DataInputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<java.io.DataInputStream: void readFully(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public final void readFully(byte[], int, int) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        byte[] r1;
        int i0, i1;
        java.io.InputStream $r2;

        r0 := @this: java.io.DataInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<java.io.DataInputStream: java.io.InputStream in>;

        staticinvoke <libcore.io.Streams: void readFully(java.io.InputStream,byte[],int,int)>($r2, r1, i0, i1);

        return;
    }

    public final int readInt() throws java.io.IOException
    {
        java.io.DataInputStream r0;
        byte[] $r1, $r4;
        java.io.InputStream $r2;
        java.nio.ByteOrder $r3;
        int $i0;

        r0 := @this: java.io.DataInputStream;

        $r2 = r0.<java.io.DataInputStream: java.io.InputStream in>;

        $r1 = r0.<java.io.DataInputStream: byte[] scratch>;

        staticinvoke <libcore.io.Streams: void readFully(java.io.InputStream,byte[],int,int)>($r2, $r1, 0, 4);

        $r4 = r0.<java.io.DataInputStream: byte[] scratch>;

        $r3 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        $i0 = staticinvoke <libcore.io.Memory: int peekInt(byte[],int,java.nio.ByteOrder)>($r4, 0, $r3);

        return $i0;
    }

    public final java.lang.String readLine() throws java.io.IOException
    {
        java.io.DataInputStream r0;
        java.lang.StringBuilder r1, $r2;
        boolean z0;
        int i0, $i1;
        java.io.InputStream $r3, $r4, $r7, $r8, $r13;
        java.lang.Class $r5;
        java.io.PushbackInputStream $r6, $r9, $r16;
        java.lang.String $r10, $r11, $r12, $r15;
        char $c2;

        r0 := @this: java.io.DataInputStream;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(80);

        r1 = $r2;

        z0 = 0;

     label1:
        $r3 = r0.<java.io.DataInputStream: java.io.InputStream in>;

        i0 = virtualinvoke $r3.<java.io.InputStream: int read()>();

        lookupswitch(i0)
        {
            case -1: goto label2;
            case 10: goto label6;
            case 13: goto label4;
            default: goto label7;
        };

     label2:
        $i1 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        if $i1 != 0 goto label3;

        if z0 != 0 goto label3;

        return null;

     label3:
        $r12 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;

     label4:
        if z0 == 0 goto label5;

        $r8 = r0.<java.io.DataInputStream: java.io.InputStream in>;

        $r9 = (java.io.PushbackInputStream) $r8;

        virtualinvoke $r9.<java.io.PushbackInputStream: void unread(int)>(i0);

        $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;

     label5:
        z0 = 1;

        $r4 = r0.<java.io.DataInputStream: java.io.InputStream in>;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        if $r5 == class "java/io/PushbackInputStream" goto label9;

        $r6 = new java.io.PushbackInputStream;

        $r7 = r0.<java.io.DataInputStream: java.io.InputStream in>;

        specialinvoke $r6.<java.io.PushbackInputStream: void <init>(java.io.InputStream)>($r7);

        r0.<java.io.DataInputStream: java.io.InputStream in> = $r6;

        goto label9;

     label6:
        $r11 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;

     label7:
        if z0 == 0 goto label8;

        $r13 = r0.<java.io.DataInputStream: java.io.InputStream in>;

        $r16 = (java.io.PushbackInputStream) $r13;

        virtualinvoke $r16.<java.io.PushbackInputStream: void unread(int)>(i0);

        $r15 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;

     label8:
        $c2 = (char) i0;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

     label9:
        goto label1;
    }

    public final long readLong() throws java.io.IOException
    {
        java.io.DataInputStream r0;
        byte[] $r1, $r4;
        java.io.InputStream $r2;
        java.nio.ByteOrder $r3;
        long $l0;

        r0 := @this: java.io.DataInputStream;

        $r2 = r0.<java.io.DataInputStream: java.io.InputStream in>;

        $r1 = r0.<java.io.DataInputStream: byte[] scratch>;

        staticinvoke <libcore.io.Streams: void readFully(java.io.InputStream,byte[],int,int)>($r2, $r1, 0, 8);

        $r4 = r0.<java.io.DataInputStream: byte[] scratch>;

        $r3 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        $l0 = staticinvoke <libcore.io.Memory: long peekLong(byte[],int,java.nio.ByteOrder)>($r4, 0, $r3);

        return $l0;
    }

    public final short readShort() throws java.io.IOException
    {
        java.io.DataInputStream r0;
        byte[] $r1, $r4;
        java.io.InputStream $r2;
        java.nio.ByteOrder $r3;
        short $s0;

        r0 := @this: java.io.DataInputStream;

        $r2 = r0.<java.io.DataInputStream: java.io.InputStream in>;

        $r1 = r0.<java.io.DataInputStream: byte[] scratch>;

        staticinvoke <libcore.io.Streams: void readFully(java.io.InputStream,byte[],int,int)>($r2, $r1, 0, 2);

        $r4 = r0.<java.io.DataInputStream: byte[] scratch>;

        $r3 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        $s0 = staticinvoke <libcore.io.Memory: short peekShort(byte[],int,java.nio.ByteOrder)>($r4, 0, $r3);

        return $s0;
    }

    public final int readUnsignedByte() throws java.io.IOException
    {
        java.io.DataInputStream r0;
        int i0;
        java.io.InputStream $r1;
        java.io.EOFException $r2;

        r0 := @this: java.io.DataInputStream;

        $r1 = r0.<java.io.DataInputStream: java.io.InputStream in>;

        i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        if i0 >= 0 goto label1;

        $r2 = new java.io.EOFException;

        specialinvoke $r2.<java.io.EOFException: void <init>()>();

        throw $r2;

     label1:
        return i0;
    }

    public final int readUnsignedShort() throws java.io.IOException
    {
        java.io.DataInputStream r0;
        short $s0;
        int $i1;

        r0 := @this: java.io.DataInputStream;

        $s0 = virtualinvoke r0.<java.io.DataInputStream: short readShort()>();

        $i1 = $s0 & 65535;

        return $i1;
    }

    public final java.lang.String readUTF() throws java.io.IOException
    {
        java.io.DataInputStream r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: java.io.DataInputStream;

        $i0 = virtualinvoke r0.<java.io.DataInputStream: int readUnsignedShort()>();

        $r1 = virtualinvoke r0.<java.io.DataInputStream: java.lang.String decodeUTF(int)>($i0);

        return $r1;
    }

    java.lang.String decodeUTF(int) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: java.io.DataInputStream;

        i0 := @parameter0: int;

        $r1 = staticinvoke <java.io.DataInputStream: java.lang.String decodeUTF(int,java.io.DataInput)>(i0, r0);

        return $r1;
    }

    private static java.lang.String decodeUTF(int, java.io.DataInput) throws java.io.IOException
    {
        int i0;
        java.io.DataInput r0;
        byte[] r1;
        char[] $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        r0 := @parameter1: java.io.DataInput;

        r1 = newarray (byte)[i0];

        interfaceinvoke r0.<java.io.DataInput: void readFully(byte[],int,int)>(r1, 0, i0);

        $r2 = newarray (char)[i0];

        $r3 = staticinvoke <java.nio.charset.ModifiedUtf8: java.lang.String decode(byte[],char[],int,int)>(r1, $r2, 0, i0);

        return $r3;
    }

    public static final java.lang.String readUTF(java.io.DataInput) throws java.io.IOException
    {
        java.io.DataInput r0;
        int $i0;
        java.lang.String $r1;

        r0 := @parameter0: java.io.DataInput;

        $i0 = interfaceinvoke r0.<java.io.DataInput: int readUnsignedShort()>();

        $r1 = staticinvoke <java.io.DataInputStream: java.lang.String decodeUTF(int,java.io.DataInput)>($i0, r0);

        return $r1;
    }

    public final int skipBytes(int) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        int i0, i1, $i3;
        long l2, $l4, $l5, $l7, $l8;
        java.io.InputStream $r1;
        byte $b6;

        r0 := @this: java.io.DataInputStream;

        i0 := @parameter0: int;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r1 = r0.<java.io.DataInputStream: java.io.InputStream in>;

        $i3 = i0 - i1;

        $l4 = (long) $i3;

        $l5 = virtualinvoke $r1.<java.io.InputStream: long skip(long)>($l4);

        l2 = $l5;

        $b6 = $l5 cmp 0L;

        if $b6 == 0 goto label2;

        $l7 = (long) i1;

        $l8 = $l7 + l2;

        i1 = (int) $l8;

        goto label1;

     label2:
        return i1;
    }
}
