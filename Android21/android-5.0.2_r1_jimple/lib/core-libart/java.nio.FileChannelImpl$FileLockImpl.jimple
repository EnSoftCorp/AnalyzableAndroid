final class java.nio.FileChannelImpl$FileLockImpl extends java.nio.channels.FileLock
{
    private boolean isReleased;

    public void <init>(java.nio.channels.FileChannel, long, long, boolean)
    {
        java.nio.FileChannelImpl$FileLockImpl r0;
        java.nio.channels.FileChannel r1;
        long l0, l1;
        boolean z0;

        r0 := @this: java.nio.FileChannelImpl$FileLockImpl;

        r1 := @parameter0: java.nio.channels.FileChannel;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.nio.channels.FileLock: void <init>(java.nio.channels.FileChannel,long,long,boolean)>(r1, l0, l1, z0);

        r0.<java.nio.FileChannelImpl$FileLockImpl: boolean isReleased> = 0;

        return;
    }

    public boolean isValid()
    {
        java.nio.FileChannelImpl$FileLockImpl r0;
        boolean $z0, $z1, $z2;
        java.nio.channels.FileChannel $r1;

        r0 := @this: java.nio.FileChannelImpl$FileLockImpl;

        $z0 = r0.<java.nio.FileChannelImpl$FileLockImpl: boolean isReleased>;

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke r0.<java.nio.FileChannelImpl$FileLockImpl: java.nio.channels.FileChannel channel()>();

        $z1 = virtualinvoke $r1.<java.nio.channels.FileChannel: boolean isOpen()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void release() throws java.io.IOException
    {
        java.nio.FileChannelImpl$FileLockImpl r0;
        java.nio.channels.FileChannel $r1, $r2;
        boolean $z0, $z1;
        java.nio.FileChannelImpl $r3;
        java.nio.channels.ClosedChannelException $r4;

        r0 := @this: java.nio.FileChannelImpl$FileLockImpl;

        $r1 = virtualinvoke r0.<java.nio.FileChannelImpl$FileLockImpl: java.nio.channels.FileChannel channel()>();

        $z0 = virtualinvoke $r1.<java.nio.channels.FileChannel: boolean isOpen()>();

        if $z0 != 0 goto label1;

        $r4 = new java.nio.channels.ClosedChannelException;

        specialinvoke $r4.<java.nio.channels.ClosedChannelException: void <init>()>();

        throw $r4;

     label1:
        $z1 = r0.<java.nio.FileChannelImpl$FileLockImpl: boolean isReleased>;

        if $z1 != 0 goto label2;

        $r2 = virtualinvoke r0.<java.nio.FileChannelImpl$FileLockImpl: java.nio.channels.FileChannel channel()>();

        $r3 = (java.nio.FileChannelImpl) $r2;

        virtualinvoke $r3.<java.nio.FileChannelImpl: void release(java.nio.channels.FileLock)>(r0);

        r0.<java.nio.FileChannelImpl$FileLockImpl: boolean isReleased> = 1;

     label2:
        return;
    }
}
