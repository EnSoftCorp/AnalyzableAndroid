public class java.security.KeyStore extends java.lang.Object
{
    private static final java.lang.String SERVICE;
    private static final org.apache.harmony.security.fortress.Engine ENGINE;
    private static final java.lang.String PROPERTY_NAME;
    private static final java.lang.String DEFAULT_KEYSTORE_TYPE;
    private boolean isInit;
    private final java.security.KeyStoreSpi implSpi;
    private final java.security.Provider provider;
    private final java.lang.String type;

    protected void <init>(java.security.KeyStoreSpi, java.security.Provider, java.lang.String)
    {
        java.security.KeyStore r0;
        java.security.KeyStoreSpi r1;
        java.security.Provider r2;
        java.lang.String r3;

        r0 := @this: java.security.KeyStore;

        r1 := @parameter0: java.security.KeyStoreSpi;

        r2 := @parameter1: java.security.Provider;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.security.KeyStore: java.lang.String type> = r3;

        r0.<java.security.KeyStore: java.security.Provider provider> = r2;

        r0.<java.security.KeyStore: java.security.KeyStoreSpi implSpi> = r1;

        r0.<java.security.KeyStore: boolean isInit> = 0;

        return;
    }

    private static void throwNotInitialized() throws java.security.KeyStoreException
    {
        java.security.KeyStoreException $r0;

        $r0 = new java.security.KeyStoreException;

        specialinvoke $r0.<java.security.KeyStoreException: void <init>(java.lang.String)>("KeyStore was not initialized");

        throw $r0;
    }

    public static java.security.KeyStore getInstance(java.lang.String) throws java.security.KeyStoreException
    {
        java.lang.String r0;
        org.apache.harmony.security.fortress.Engine$SpiAndProvider r1;
        org.apache.harmony.security.fortress.Engine $r2;
        java.security.KeyStore $r3;
        java.lang.Object $r4;
        java.security.Provider $r5;
        java.security.KeyStoreSpi $r6;
        java.lang.NullPointerException $r7;
        java.security.NoSuchAlgorithmException $r8, r10;
        java.security.KeyStoreException $r9;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("type == null");

        throw $r7;

     label1:
        $r2 = <java.security.KeyStore: org.apache.harmony.security.fortress.Engine ENGINE>;

        r1 = virtualinvoke $r2.<org.apache.harmony.security.fortress.Engine: org.apache.harmony.security.fortress.Engine$SpiAndProvider getInstance(java.lang.String,java.lang.Object)>(r0, null);

        $r3 = new java.security.KeyStore;

        $r4 = r1.<org.apache.harmony.security.fortress.Engine$SpiAndProvider: java.lang.Object spi>;

        $r6 = (java.security.KeyStoreSpi) $r4;

        $r5 = r1.<org.apache.harmony.security.fortress.Engine$SpiAndProvider: java.security.Provider provider>;

        specialinvoke $r3.<java.security.KeyStore: void <init>(java.security.KeyStoreSpi,java.security.Provider,java.lang.String)>($r6, $r5, r0);

     label2:
        return $r3;

     label3:
        $r8 := @caughtexception;

        r10 = $r8;

        $r9 = new java.security.KeyStoreException;

        specialinvoke $r9.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>(r10);

        throw $r9;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static java.security.KeyStore getInstance(java.lang.String, java.lang.String) throws java.security.KeyStoreException, java.security.NoSuchProviderException
    {
        java.lang.String r0, r1;
        java.security.Provider r2;
        java.lang.Exception r3, $r7;
        java.lang.IllegalArgumentException $r4;
        boolean $z0;
        java.security.KeyStore $r5;
        java.security.NoSuchProviderException $r6;
        java.security.KeyStoreException $r8;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label2:
        r2 = staticinvoke <java.security.Security: java.security.Provider getProvider(java.lang.String)>(r1);

        if r2 != null goto label3;

        $r6 = new java.security.NoSuchProviderException;

        specialinvoke $r6.<java.security.NoSuchProviderException: void <init>(java.lang.String)>(r1);

        throw $r6;

     label3:
        $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.security.Provider)>(r0, r2);

     label4:
        return $r5;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

        $r8 = new java.security.KeyStoreException;

        specialinvoke $r8.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>(r3);

        throw $r8;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static java.security.KeyStore getInstance(java.lang.String, java.security.Provider) throws java.security.KeyStoreException
    {
        java.lang.String r0;
        java.security.Provider r1;
        java.lang.Object r2;
        org.apache.harmony.security.fortress.Engine $r3;
        java.security.KeyStore $r4;
        java.security.KeyStoreSpi $r5;
        java.lang.NullPointerException $r6;
        java.lang.IllegalArgumentException $r7;
        java.lang.Exception $r8, r10;
        java.security.KeyStoreException $r9;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.security.Provider;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("provider == null");

        throw $r7;

     label1:
        if r0 != null goto label2;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("type == null");

        throw $r6;

     label2:
        $r3 = <java.security.KeyStore: org.apache.harmony.security.fortress.Engine ENGINE>;

        r2 = virtualinvoke $r3.<org.apache.harmony.security.fortress.Engine: java.lang.Object getInstance(java.lang.String,java.security.Provider,java.lang.Object)>(r0, r1, null);

        $r4 = new java.security.KeyStore;

        $r5 = (java.security.KeyStoreSpi) r2;

        specialinvoke $r4.<java.security.KeyStore: void <init>(java.security.KeyStoreSpi,java.security.Provider,java.lang.String)>($r5, r1, r0);

     label3:
        return $r4;

     label4:
        $r8 := @caughtexception;

        r10 = $r8;

        $r9 = new java.security.KeyStoreException;

        specialinvoke $r9.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>(r10);

        throw $r9;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public static final java.lang.String getDefaultType()
    {
        java.lang.String r0, $r1;

        r0 = staticinvoke <java.security.Security: java.lang.String getProperty(java.lang.String)>("keystore.type");

        if r0 != null goto label1;

        $r1 = "jks";

        goto label2;

     label1:
        $r1 = r0;

     label2:
        return $r1;
    }

    public final java.security.Provider getProvider()
    {
        java.security.KeyStore r0;
        java.security.Provider $r1;

        r0 := @this: java.security.KeyStore;

        $r1 = r0.<java.security.KeyStore: java.security.Provider provider>;

        return $r1;
    }

    public final java.lang.String getType()
    {
        java.security.KeyStore r0;
        java.lang.String $r1;

        r0 := @this: java.security.KeyStore;

        $r1 = r0.<java.security.KeyStore: java.lang.String type>;

        return $r1;
    }

    public final java.security.Key getKey(java.lang.String, char[]) throws java.security.KeyStoreException, java.security.NoSuchAlgorithmException, java.security.UnrecoverableKeyException
    {
        java.security.KeyStore r0;
        java.lang.String r1;
        char[] r2;
        boolean $z0;
        java.security.KeyStoreSpi $r3;
        java.security.Key $r4;

        r0 := @this: java.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: char[];

        $z0 = r0.<java.security.KeyStore: boolean isInit>;

        if $z0 != 0 goto label1;

        staticinvoke <java.security.KeyStore: void throwNotInitialized()>();

     label1:
        $r3 = r0.<java.security.KeyStore: java.security.KeyStoreSpi implSpi>;

        $r4 = virtualinvoke $r3.<java.security.KeyStoreSpi: java.security.Key engineGetKey(java.lang.String,char[])>(r1, r2);

        return $r4;
    }

    public final java.security.cert.Certificate[] getCertificateChain(java.lang.String) throws java.security.KeyStoreException
    {
        java.security.KeyStore r0;
        java.lang.String r1;
        boolean $z0;
        java.security.KeyStoreSpi $r2;
        java.security.cert.Certificate[] $r3;

        r0 := @this: java.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<java.security.KeyStore: boolean isInit>;

        if $z0 != 0 goto label1;

        staticinvoke <java.security.KeyStore: void throwNotInitialized()>();

     label1:
        $r2 = r0.<java.security.KeyStore: java.security.KeyStoreSpi implSpi>;

        $r3 = virtualinvoke $r2.<java.security.KeyStoreSpi: java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String)>(r1);

        return $r3;
    }

    public final java.security.cert.Certificate getCertificate(java.lang.String) throws java.security.KeyStoreException
    {
        java.security.KeyStore r0;
        java.lang.String r1;
        boolean $z0;
        java.security.KeyStoreSpi $r2;
        java.security.cert.Certificate $r3;

        r0 := @this: java.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<java.security.KeyStore: boolean isInit>;

        if $z0 != 0 goto label1;

        staticinvoke <java.security.KeyStore: void throwNotInitialized()>();

     label1:
        $r2 = r0.<java.security.KeyStore: java.security.KeyStoreSpi implSpi>;

        $r3 = virtualinvoke $r2.<java.security.KeyStoreSpi: java.security.cert.Certificate engineGetCertificate(java.lang.String)>(r1);

        return $r3;
    }

    public final java.util.Date getCreationDate(java.lang.String) throws java.security.KeyStoreException
    {
        java.security.KeyStore r0;
        java.lang.String r1;
        boolean $z0;
        java.security.KeyStoreSpi $r2;
        java.util.Date $r3;

        r0 := @this: java.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<java.security.KeyStore: boolean isInit>;

        if $z0 != 0 goto label1;

        staticinvoke <java.security.KeyStore: void throwNotInitialized()>();

     label1:
        $r2 = r0.<java.security.KeyStore: java.security.KeyStoreSpi implSpi>;

        $r3 = virtualinvoke $r2.<java.security.KeyStoreSpi: java.util.Date engineGetCreationDate(java.lang.String)>(r1);

        return $r3;
    }

    public final void setKeyEntry(java.lang.String, java.security.Key, char[], java.security.cert.Certificate[]) throws java.security.KeyStoreException
    {
        java.security.KeyStore r0;
        java.lang.String r1;
        java.security.Key r2;
        char[] r3;
        java.security.cert.Certificate[] r4;
        boolean $z0, $z1;
        java.security.KeyStoreSpi $r5;
        java.lang.IllegalArgumentException $r6;
        int $i0;

        r0 := @this: java.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.Key;

        r3 := @parameter2: char[];

        r4 := @parameter3: java.security.cert.Certificate[];

        $z0 = r0.<java.security.KeyStore: boolean isInit>;

        if $z0 != 0 goto label1;

        staticinvoke <java.security.KeyStore: void throwNotInitialized()>();

     label1:
        if r2 == null goto label3;

        $z1 = r2 instanceof java.security.PrivateKey;

        if $z1 == 0 goto label3;

        if r4 == null goto label2;

        $i0 = lengthof r4;

        if $i0 != 0 goto label3;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Certificate chain is not defined for Private key");

        throw $r6;

     label3:
        $r5 = r0.<java.security.KeyStore: java.security.KeyStoreSpi implSpi>;

        virtualinvoke $r5.<java.security.KeyStoreSpi: void engineSetKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])>(r1, r2, r3, r4);

        return;
    }

    public final void setKeyEntry(java.lang.String, byte[], java.security.cert.Certificate[]) throws java.security.KeyStoreException
    {
        java.security.KeyStore r0;
        java.lang.String r1;
        byte[] r2;
        java.security.cert.Certificate[] r3;
        boolean $z0;
        java.security.KeyStoreSpi $r4;

        r0 := @this: java.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        r3 := @parameter2: java.security.cert.Certificate[];

        $z0 = r0.<java.security.KeyStore: boolean isInit>;

        if $z0 != 0 goto label1;

        staticinvoke <java.security.KeyStore: void throwNotInitialized()>();

     label1:
        $r4 = r0.<java.security.KeyStore: java.security.KeyStoreSpi implSpi>;

        virtualinvoke $r4.<java.security.KeyStoreSpi: void engineSetKeyEntry(java.lang.String,byte[],java.security.cert.Certificate[])>(r1, r2, r3);

        return;
    }

    public final void setCertificateEntry(java.lang.String, java.security.cert.Certificate) throws java.security.KeyStoreException
    {
        java.security.KeyStore r0;
        java.lang.String r1;
        java.security.cert.Certificate r2;
        boolean $z0;
        java.security.KeyStoreSpi $r3;

        r0 := @this: java.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.cert.Certificate;

        $z0 = r0.<java.security.KeyStore: boolean isInit>;

        if $z0 != 0 goto label1;

        staticinvoke <java.security.KeyStore: void throwNotInitialized()>();

     label1:
        $r3 = r0.<java.security.KeyStore: java.security.KeyStoreSpi implSpi>;

        virtualinvoke $r3.<java.security.KeyStoreSpi: void engineSetCertificateEntry(java.lang.String,java.security.cert.Certificate)>(r1, r2);

        return;
    }

    public final void deleteEntry(java.lang.String) throws java.security.KeyStoreException
    {
        java.security.KeyStore r0;
        java.lang.String r1;
        boolean $z0;
        java.security.KeyStoreSpi $r2;

        r0 := @this: java.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<java.security.KeyStore: boolean isInit>;

        if $z0 != 0 goto label1;

        staticinvoke <java.security.KeyStore: void throwNotInitialized()>();

     label1:
        $r2 = r0.<java.security.KeyStore: java.security.KeyStoreSpi implSpi>;

        virtualinvoke $r2.<java.security.KeyStoreSpi: void engineDeleteEntry(java.lang.String)>(r1);

        return;
    }

    public final java.util.Enumeration aliases() throws java.security.KeyStoreException
    {
        java.security.KeyStore r0;
        boolean $z0;
        java.security.KeyStoreSpi $r1;
        java.util.Enumeration $r2;

        r0 := @this: java.security.KeyStore;

        $z0 = r0.<java.security.KeyStore: boolean isInit>;

        if $z0 != 0 goto label1;

        staticinvoke <java.security.KeyStore: void throwNotInitialized()>();

     label1:
        $r1 = r0.<java.security.KeyStore: java.security.KeyStoreSpi implSpi>;

        $r2 = virtualinvoke $r1.<java.security.KeyStoreSpi: java.util.Enumeration engineAliases()>();

        return $r2;
    }

    public final boolean containsAlias(java.lang.String) throws java.security.KeyStoreException
    {
        java.security.KeyStore r0;
        java.lang.String r1;
        boolean $z0, $z1;
        java.security.KeyStoreSpi $r2;

        r0 := @this: java.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<java.security.KeyStore: boolean isInit>;

        if $z0 != 0 goto label1;

        staticinvoke <java.security.KeyStore: void throwNotInitialized()>();

     label1:
        $r2 = r0.<java.security.KeyStore: java.security.KeyStoreSpi implSpi>;

        $z1 = virtualinvoke $r2.<java.security.KeyStoreSpi: boolean engineContainsAlias(java.lang.String)>(r1);

        return $z1;
    }

    public final int size() throws java.security.KeyStoreException
    {
        java.security.KeyStore r0;
        boolean $z0;
        java.security.KeyStoreSpi $r1;
        int $i0;

        r0 := @this: java.security.KeyStore;

        $z0 = r0.<java.security.KeyStore: boolean isInit>;

        if $z0 != 0 goto label1;

        staticinvoke <java.security.KeyStore: void throwNotInitialized()>();

     label1:
        $r1 = r0.<java.security.KeyStore: java.security.KeyStoreSpi implSpi>;

        $i0 = virtualinvoke $r1.<java.security.KeyStoreSpi: int engineSize()>();

        return $i0;
    }

    public final boolean isKeyEntry(java.lang.String) throws java.security.KeyStoreException
    {
        java.security.KeyStore r0;
        java.lang.String r1;
        boolean $z0, $z1;
        java.security.KeyStoreSpi $r2;

        r0 := @this: java.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<java.security.KeyStore: boolean isInit>;

        if $z0 != 0 goto label1;

        staticinvoke <java.security.KeyStore: void throwNotInitialized()>();

     label1:
        $r2 = r0.<java.security.KeyStore: java.security.KeyStoreSpi implSpi>;

        $z1 = virtualinvoke $r2.<java.security.KeyStoreSpi: boolean engineIsKeyEntry(java.lang.String)>(r1);

        return $z1;
    }

    public final boolean isCertificateEntry(java.lang.String) throws java.security.KeyStoreException
    {
        java.security.KeyStore r0;
        java.lang.String r1;
        boolean $z0, $z1;
        java.security.KeyStoreSpi $r2;

        r0 := @this: java.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<java.security.KeyStore: boolean isInit>;

        if $z0 != 0 goto label1;

        staticinvoke <java.security.KeyStore: void throwNotInitialized()>();

     label1:
        $r2 = r0.<java.security.KeyStore: java.security.KeyStoreSpi implSpi>;

        $z1 = virtualinvoke $r2.<java.security.KeyStoreSpi: boolean engineIsCertificateEntry(java.lang.String)>(r1);

        return $z1;
    }

    public final java.lang.String getCertificateAlias(java.security.cert.Certificate) throws java.security.KeyStoreException
    {
        java.security.KeyStore r0;
        java.security.cert.Certificate r1;
        boolean $z0;
        java.security.KeyStoreSpi $r2;
        java.lang.String $r3;

        r0 := @this: java.security.KeyStore;

        r1 := @parameter0: java.security.cert.Certificate;

        $z0 = r0.<java.security.KeyStore: boolean isInit>;

        if $z0 != 0 goto label1;

        staticinvoke <java.security.KeyStore: void throwNotInitialized()>();

     label1:
        $r2 = r0.<java.security.KeyStore: java.security.KeyStoreSpi implSpi>;

        $r3 = virtualinvoke $r2.<java.security.KeyStoreSpi: java.lang.String engineGetCertificateAlias(java.security.cert.Certificate)>(r1);

        return $r3;
    }

    public final void store(java.io.OutputStream, char[]) throws java.security.KeyStoreException, java.io.IOException, java.security.NoSuchAlgorithmException, java.security.cert.CertificateException
    {
        java.security.KeyStore r0;
        java.io.OutputStream r1;
        char[] r2;
        boolean $z0;
        java.security.KeyStoreSpi $r3;

        r0 := @this: java.security.KeyStore;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: char[];

        $z0 = r0.<java.security.KeyStore: boolean isInit>;

        if $z0 != 0 goto label1;

        staticinvoke <java.security.KeyStore: void throwNotInitialized()>();

     label1:
        $r3 = r0.<java.security.KeyStore: java.security.KeyStoreSpi implSpi>;

        virtualinvoke $r3.<java.security.KeyStoreSpi: void engineStore(java.io.OutputStream,char[])>(r1, r2);

        return;
    }

    public final void store(java.security.KeyStore$LoadStoreParameter) throws java.security.KeyStoreException, java.io.IOException, java.security.NoSuchAlgorithmException, java.security.cert.CertificateException
    {
        java.security.KeyStore r0;
        java.security.KeyStore$LoadStoreParameter r1;
        boolean $z0;
        java.security.KeyStoreSpi $r2;

        r0 := @this: java.security.KeyStore;

        r1 := @parameter0: java.security.KeyStore$LoadStoreParameter;

        $z0 = r0.<java.security.KeyStore: boolean isInit>;

        if $z0 != 0 goto label1;

        staticinvoke <java.security.KeyStore: void throwNotInitialized()>();

     label1:
        $r2 = r0.<java.security.KeyStore: java.security.KeyStoreSpi implSpi>;

        virtualinvoke $r2.<java.security.KeyStoreSpi: void engineStore(java.security.KeyStore$LoadStoreParameter)>(r1);

        return;
    }

    public final void load(java.io.InputStream, char[]) throws java.io.IOException, java.security.NoSuchAlgorithmException, java.security.cert.CertificateException
    {
        java.security.KeyStore r0;
        java.io.InputStream r1;
        char[] r2;
        java.security.KeyStoreSpi $r3;

        r0 := @this: java.security.KeyStore;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: char[];

        $r3 = r0.<java.security.KeyStore: java.security.KeyStoreSpi implSpi>;

        virtualinvoke $r3.<java.security.KeyStoreSpi: void engineLoad(java.io.InputStream,char[])>(r1, r2);

        r0.<java.security.KeyStore: boolean isInit> = 1;

        return;
    }

    public final void load(java.security.KeyStore$LoadStoreParameter) throws java.io.IOException, java.security.NoSuchAlgorithmException, java.security.cert.CertificateException
    {
        java.security.KeyStore r0;
        java.security.KeyStore$LoadStoreParameter r1;
        java.security.KeyStoreSpi $r2;

        r0 := @this: java.security.KeyStore;

        r1 := @parameter0: java.security.KeyStore$LoadStoreParameter;

        $r2 = r0.<java.security.KeyStore: java.security.KeyStoreSpi implSpi>;

        virtualinvoke $r2.<java.security.KeyStoreSpi: void engineLoad(java.security.KeyStore$LoadStoreParameter)>(r1);

        r0.<java.security.KeyStore: boolean isInit> = 1;

        return;
    }

    public final java.security.KeyStore$Entry getEntry(java.lang.String, java.security.KeyStore$ProtectionParameter) throws java.security.NoSuchAlgorithmException, java.security.UnrecoverableEntryException, java.security.KeyStoreException
    {
        java.security.KeyStore r0;
        java.lang.String r1;
        java.security.KeyStore$ProtectionParameter r2;
        boolean $z0;
        java.security.KeyStoreSpi $r3;
        java.security.KeyStore$Entry $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: java.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.KeyStore$ProtectionParameter;

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("alias == null");

        throw $r5;

     label1:
        $z0 = r0.<java.security.KeyStore: boolean isInit>;

        if $z0 != 0 goto label2;

        staticinvoke <java.security.KeyStore: void throwNotInitialized()>();

     label2:
        $r3 = r0.<java.security.KeyStore: java.security.KeyStoreSpi implSpi>;

        $r4 = virtualinvoke $r3.<java.security.KeyStoreSpi: java.security.KeyStore$Entry engineGetEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>(r1, r2);

        return $r4;
    }

    public final void setEntry(java.lang.String, java.security.KeyStore$Entry, java.security.KeyStore$ProtectionParameter) throws java.security.KeyStoreException
    {
        java.security.KeyStore r0;
        java.lang.String r1;
        java.security.KeyStore$Entry r2;
        java.security.KeyStore$ProtectionParameter r3;
        boolean $z0;
        java.security.KeyStoreSpi $r4;
        java.lang.NullPointerException $r5, $r6;

        r0 := @this: java.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.KeyStore$Entry;

        r3 := @parameter2: java.security.KeyStore$ProtectionParameter;

        $z0 = r0.<java.security.KeyStore: boolean isInit>;

        if $z0 != 0 goto label1;

        staticinvoke <java.security.KeyStore: void throwNotInitialized()>();

     label1:
        if r1 != null goto label2;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("alias == null");

        throw $r6;

     label2:
        if r2 != null goto label3;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("entry == null");

        throw $r5;

     label3:
        $r4 = r0.<java.security.KeyStore: java.security.KeyStoreSpi implSpi>;

        virtualinvoke $r4.<java.security.KeyStoreSpi: void engineSetEntry(java.lang.String,java.security.KeyStore$Entry,java.security.KeyStore$ProtectionParameter)>(r1, r2, r3);

        return;
    }

    public final boolean entryInstanceOf(java.lang.String, java.lang.Class) throws java.security.KeyStoreException
    {
        java.security.KeyStore r0;
        java.lang.String r1;
        java.lang.Class r2;
        boolean $z0, $z1;
        java.security.KeyStoreSpi $r3;
        java.lang.NullPointerException $r4, $r5;

        r0 := @this: java.security.KeyStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("alias == null");

        throw $r5;

     label1:
        if r2 != null goto label2;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("entryClass == null");

        throw $r4;

     label2:
        $z0 = r0.<java.security.KeyStore: boolean isInit>;

        if $z0 != 0 goto label3;

        staticinvoke <java.security.KeyStore: void throwNotInitialized()>();

     label3:
        $r3 = r0.<java.security.KeyStore: java.security.KeyStoreSpi implSpi>;

        $z1 = virtualinvoke $r3.<java.security.KeyStoreSpi: boolean engineEntryInstanceOf(java.lang.String,java.lang.Class)>(r1, r2);

        return $z1;
    }

    static boolean access$000(java.security.KeyStore)
    {
        java.security.KeyStore r0;
        boolean $z0;

        r0 := @parameter0: java.security.KeyStore;

        $z0 = r0.<java.security.KeyStore: boolean isInit>;

        return $z0;
    }

    static void <clinit>()
    {
        org.apache.harmony.security.fortress.Engine $r0;

        <java.security.KeyStore: java.lang.String DEFAULT_KEYSTORE_TYPE> = "jks";

        <java.security.KeyStore: java.lang.String PROPERTY_NAME> = "keystore.type";

        <java.security.KeyStore: java.lang.String SERVICE> = "KeyStore";

        $r0 = new org.apache.harmony.security.fortress.Engine;

        specialinvoke $r0.<org.apache.harmony.security.fortress.Engine: void <init>(java.lang.String)>("KeyStore");

        <java.security.KeyStore: org.apache.harmony.security.fortress.Engine ENGINE> = $r0;

        return;
    }
}
