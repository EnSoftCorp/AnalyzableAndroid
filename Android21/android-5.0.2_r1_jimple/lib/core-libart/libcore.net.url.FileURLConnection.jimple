public class libcore.net.url.FileURLConnection extends java.net.URLConnection
{
    private static final java.util.Comparator HEADER_COMPARATOR;
    private java.lang.String filename;
    private java.io.InputStream is;
    private long length;
    private long lastModified;
    private boolean isDir;
    private java.io.FilePermission permission;
    private final java.lang.String[] headerKeysAndValues;
    private static final int CONTENT_TYPE_VALUE_IDX;
    private static final int CONTENT_LENGTH_VALUE_IDX;
    private static final int LAST_MODIFIED_VALUE_IDX;
    private java.util.Map headerFields;

    public void <init>(java.net.URL)
    {
        libcore.net.url.FileURLConnection r0;
        java.net.URL r1;
        java.lang.String $r2, $r3, $r4, $r5;
        java.lang.String[] $r6;

        r0 := @this: libcore.net.url.FileURLConnection;

        r1 := @parameter0: java.net.URL;

        specialinvoke r0.<java.net.URLConnection: void <init>(java.net.URL)>(r1);

        r0.<libcore.net.url.FileURLConnection: long length> = -1L;

        r0.<libcore.net.url.FileURLConnection: long lastModified> = -1L;

        $r2 = virtualinvoke r1.<java.net.URL: java.lang.String getFile()>();

        r0.<libcore.net.url.FileURLConnection: java.lang.String filename> = $r2;

        $r3 = r0.<libcore.net.url.FileURLConnection: java.lang.String filename>;

        if $r3 != null goto label1;

        r0.<libcore.net.url.FileURLConnection: java.lang.String filename> = "";

     label1:
        $r4 = r0.<libcore.net.url.FileURLConnection: java.lang.String filename>;

        $r5 = staticinvoke <libcore.net.UriCodec: java.lang.String decode(java.lang.String)>($r4);

        r0.<libcore.net.url.FileURLConnection: java.lang.String filename> = $r5;

        $r6 = newarray (java.lang.String)[6];

        $r6[0] = "content-type";

        $r6[1] = null;

        $r6[2] = "content-length";

        $r6[3] = null;

        $r6[4] = "last-modified";

        $r6[5] = null;

        r0.<libcore.net.url.FileURLConnection: java.lang.String[] headerKeysAndValues> = $r6;

        return;
    }

    public void connect() throws java.io.IOException
    {
        libcore.net.url.FileURLConnection r0;
        java.io.File r1, $r4;
        java.io.IOException r2, r3, $r17;
        java.lang.String $r5, $r10, $r12, $r15;
        boolean $z0;
        java.io.BufferedInputStream $r6;
        java.io.FileInputStream $r7;
        java.lang.String[] $r8, $r9, $r11, $r13, $r16;
        long $l0, $l1, $l2, $l3, $l4;
        java.io.InputStream $r14;

        r0 := @this: libcore.net.url.FileURLConnection;

        $r4 = new java.io.File;

        $r5 = r0.<libcore.net.url.FileURLConnection: java.lang.String filename>;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r5);

        r1 = $r4;

        r2 = null;

        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label1;

        r0.<libcore.net.url.FileURLConnection: boolean isDir> = 1;

        $r14 = specialinvoke r0.<libcore.net.url.FileURLConnection: java.io.InputStream getDirectoryListing(java.io.File)>(r1);

        r0.<libcore.net.url.FileURLConnection: java.io.InputStream is> = $r14;

        $l4 = virtualinvoke r1.<java.io.File: long lastModified()>();

        r0.<libcore.net.url.FileURLConnection: long lastModified> = $l4;

        $r16 = r0.<libcore.net.url.FileURLConnection: java.lang.String[] headerKeysAndValues>;

        $r16[1] = "text/html";

        goto label6;

     label1:
        $r6 = new java.io.BufferedInputStream;

        $r7 = new java.io.FileInputStream;

        specialinvoke $r7.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        specialinvoke $r6.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r7);

        r0.<libcore.net.url.FileURLConnection: java.io.InputStream is> = $r6;

     label2:
        goto label4;

     label3:
        $r17 := @caughtexception;

        r3 = $r17;

        r2 = r3;

     label4:
        if r2 != null goto label5;

        $l3 = virtualinvoke r1.<java.io.File: long length()>();

        r0.<libcore.net.url.FileURLConnection: long length> = $l3;

        $l2 = virtualinvoke r1.<java.io.File: long lastModified()>();

        r0.<libcore.net.url.FileURLConnection: long lastModified> = $l2;

        $r13 = r0.<libcore.net.url.FileURLConnection: java.lang.String[] headerKeysAndValues>;

        $r15 = specialinvoke r0.<libcore.net.url.FileURLConnection: java.lang.String getContentTypeForPlainFiles()>();

        $r13[1] = $r15;

        goto label6;

     label5:
        $r8 = r0.<libcore.net.url.FileURLConnection: java.lang.String[] headerKeysAndValues>;

        $r8[1] = "content/unknown";

     label6:
        $r9 = r0.<libcore.net.url.FileURLConnection: java.lang.String[] headerKeysAndValues>;

        $l0 = r0.<libcore.net.url.FileURLConnection: long length>;

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        $r9[3] = $r10;

        $r11 = r0.<libcore.net.url.FileURLConnection: java.lang.String[] headerKeysAndValues>;

        $l1 = r0.<libcore.net.url.FileURLConnection: long lastModified>;

        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l1);

        $r11[5] = $r12;

        r0.<libcore.net.url.FileURLConnection: boolean connected> = 1;

        if r2 == null goto label7;

        throw r2;

     label7:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String getHeaderField(java.lang.String)
    {
        libcore.net.url.FileURLConnection r0;
        java.lang.String r1, $r5, $r7;
        boolean $z0, $z1;
        java.lang.String[] $r3, $r4, $r6;
        int $i0, $i1, i2;
        java.io.IOException $r8;

        r0 := @this: libcore.net.url.FileURLConnection;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<libcore.net.url.FileURLConnection: boolean connected>;

        if $z0 != 0 goto label4;

     label1:
        virtualinvoke r0.<libcore.net.url.FileURLConnection: void connect()>();

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        return null;

     label4:
        i2 = 0;

     label5:
        $r3 = r0.<libcore.net.url.FileURLConnection: java.lang.String[] headerKeysAndValues>;

        $i0 = lengthof $r3;

        if i2 >= $i0 goto label7;

        $r4 = r0.<libcore.net.url.FileURLConnection: java.lang.String[] headerKeysAndValues>;

        $r5 = $r4[i2];

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z1 == 0 goto label6;

        $r6 = r0.<libcore.net.url.FileURLConnection: java.lang.String[] headerKeysAndValues>;

        $i1 = i2 + 1;

        $r7 = $r6[$i1];

        return $r7;

     label6:
        i2 = i2 + 2;

        goto label5;

     label7:
        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String getHeaderFieldKey(int)
    {
        libcore.net.url.FileURLConnection r0;
        int i0, $i1, $i2, $i3;
        boolean $z0;
        java.lang.String[] $r2, $r3;
        java.lang.String $r4;
        java.io.IOException $r5;

        r0 := @this: libcore.net.url.FileURLConnection;

        i0 := @parameter0: int;

        $z0 = r0.<libcore.net.url.FileURLConnection: boolean connected>;

        if $z0 != 0 goto label4;

     label1:
        virtualinvoke r0.<libcore.net.url.FileURLConnection: void connect()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        return null;

     label4:
        if i0 < 0 goto label5;

        $r2 = r0.<libcore.net.url.FileURLConnection: java.lang.String[] headerKeysAndValues>;

        $i1 = lengthof $r2;

        $i2 = $i1 / 2;

        if i0 <= $i2 goto label6;

     label5:
        return null;

     label6:
        $r3 = r0.<libcore.net.url.FileURLConnection: java.lang.String[] headerKeysAndValues>;

        $i3 = i0 * 2;

        $r4 = $r3[$i3];

        return $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String getHeaderField(int)
    {
        libcore.net.url.FileURLConnection r0;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        java.lang.String[] $r2, $r3;
        java.lang.String $r4;
        java.io.IOException $r5;

        r0 := @this: libcore.net.url.FileURLConnection;

        i0 := @parameter0: int;

        $z0 = r0.<libcore.net.url.FileURLConnection: boolean connected>;

        if $z0 != 0 goto label4;

     label1:
        virtualinvoke r0.<libcore.net.url.FileURLConnection: void connect()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        return null;

     label4:
        if i0 < 0 goto label5;

        $r2 = r0.<libcore.net.url.FileURLConnection: java.lang.String[] headerKeysAndValues>;

        $i1 = lengthof $r2;

        $i2 = $i1 / 2;

        if i0 <= $i2 goto label6;

     label5:
        return null;

     label6:
        $r3 = r0.<libcore.net.url.FileURLConnection: java.lang.String[] headerKeysAndValues>;

        $i3 = i0 * 2;

        $i4 = $i3 + 1;

        $r4 = $r3[$i4];

        return $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.util.Map getHeaderFields()
    {
        libcore.net.url.FileURLConnection r0;
        java.util.TreeMap r1, $r4;
        int i0, $i1, $i2;
        java.util.Map $r2, $r3, $r7;
        java.util.Comparator $r5;
        java.lang.String[] $r6, $r8, $r9;
        java.lang.String $r10, $r11;
        java.util.List $r12;

        r0 := @this: libcore.net.url.FileURLConnection;

        $r2 = r0.<libcore.net.url.FileURLConnection: java.util.Map headerFields>;

        if $r2 != null goto label3;

        $r4 = new java.util.TreeMap;

        $r5 = <libcore.net.url.FileURLConnection: java.util.Comparator HEADER_COMPARATOR>;

        specialinvoke $r4.<java.util.TreeMap: void <init>(java.util.Comparator)>($r5);

        r1 = $r4;

        i0 = 0;

     label1:
        $r6 = r0.<libcore.net.url.FileURLConnection: java.lang.String[] headerKeysAndValues>;

        $i1 = lengthof $r6;

        if i0 >= $i1 goto label2;

        $r8 = r0.<libcore.net.url.FileURLConnection: java.lang.String[] headerKeysAndValues>;

        $r11 = $r8[i0];

        $r9 = r0.<libcore.net.url.FileURLConnection: java.lang.String[] headerKeysAndValues>;

        $i2 = i0 + 1;

        $r10 = $r9[$i2];

        $r12 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r10);

        virtualinvoke r1.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12);

        i0 = i0 + 2;

        goto label1;

     label2:
        $r7 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r1);

        r0.<libcore.net.url.FileURLConnection: java.util.Map headerFields> = $r7;

     label3:
        $r3 = r0.<libcore.net.url.FileURLConnection: java.util.Map headerFields>;

        return $r3;
    }

    public int getContentLength()
    {
        libcore.net.url.FileURLConnection r0;
        long l0;
        byte $b1;
        int $i2;

        r0 := @this: libcore.net.url.FileURLConnection;

        l0 = specialinvoke r0.<libcore.net.url.FileURLConnection: long getContentLengthLong()>();

        $b1 = l0 cmp 2147483647L;

        if $b1 > 0 goto label1;

        $i2 = (int) l0;

        goto label2;

     label1:
        $i2 = -1;

     label2:
        return $i2;
    }

    private long getContentLengthLong()
    {
        libcore.net.url.FileURLConnection r0;
        boolean $z0;
        long $l0;
        java.io.IOException $r2;

        r0 := @this: libcore.net.url.FileURLConnection;

     label1:
        $z0 = r0.<libcore.net.url.FileURLConnection: boolean connected>;

        if $z0 != 0 goto label2;

        virtualinvoke r0.<libcore.net.url.FileURLConnection: void connect()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        $l0 = r0.<libcore.net.url.FileURLConnection: long length>;

        return $l0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String getContentType()
    {
        libcore.net.url.FileURLConnection r0;
        java.lang.String $r1;

        r0 := @this: libcore.net.url.FileURLConnection;

        $r1 = virtualinvoke r0.<libcore.net.url.FileURLConnection: java.lang.String getHeaderField(int)>(0);

        return $r1;
    }

    private java.lang.String getContentTypeForPlainFiles()
    {
        libcore.net.url.FileURLConnection r0;
        java.lang.String r1, $r4;
        java.net.URL $r3;
        java.io.InputStream $r5;
        java.io.IOException $r6;

        r0 := @this: libcore.net.url.FileURLConnection;

        $r3 = r0.<libcore.net.url.FileURLConnection: java.net.URL url>;

        $r4 = virtualinvoke $r3.<java.net.URL: java.lang.String getFile()>();

        r1 = staticinvoke <libcore.net.url.FileURLConnection: java.lang.String guessContentTypeFromName(java.lang.String)>($r4);

        if r1 == null goto label1;

        return r1;

     label1:
        $r5 = r0.<libcore.net.url.FileURLConnection: java.io.InputStream is>;

        r1 = staticinvoke <libcore.net.url.FileURLConnection: java.lang.String guessContentTypeFromStream(java.io.InputStream)>($r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        if r1 == null goto label5;

        return r1;

     label5:
        return "content/unknown";

        catch java.io.IOException from label1 to label2 with label3;
    }

    private java.io.InputStream getDirectoryListing(java.io.File)
    {
        libcore.net.url.FileURLConnection r0;
        java.io.File r1;
        java.lang.String[] r2;
        java.io.ByteArrayOutputStream r3, $r5;
        java.io.PrintStream r4, $r6;
        int i0, $i1;
        java.lang.StringBuilder $r7, $r10, $r11, $r13, $r15, $r17, $r19, $r22;
        java.lang.String $r8, $r9, $r12, $r14, $r20, $r21;
        java.io.ByteArrayInputStream $r16;
        byte[] $r18;

        r0 := @this: libcore.net.url.FileURLConnection;

        r1 := @parameter0: java.io.File;

        r2 = virtualinvoke r1.<java.io.File: java.lang.String[] list()>();

        $r5 = new java.io.ByteArrayOutputStream;

        specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>()>();

        r3 = $r5;

        $r6 = new java.io.PrintStream;

        specialinvoke $r6.<java.io.PrintStream: void <init>(java.io.OutputStream)>(r3);

        r4 = $r6;

        virtualinvoke r4.<java.io.PrintStream: void print(java.lang.String)>("<title>Directory Listing</title>\n");

        virtualinvoke r4.<java.io.PrintStream: void print(java.lang.String)>("<base href=\"file:");

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String replace(char,char)>(92, 47);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/\"><h1>");

        $r12 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</h1>\n<hr>\n");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintStream: void print(java.lang.String)>($r14);

        i0 = 0;

     label1:
        $i1 = lengthof r2;

        if i0 >= $i1 goto label2;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = r2[i0];

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br>\n");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<java.io.PrintStream: void print(java.lang.String)>($r21);

        i0 = i0 + 1;

        goto label1;

     label2:
        virtualinvoke r4.<java.io.PrintStream: void close()>();

        $r16 = new java.io.ByteArrayInputStream;

        $r18 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r16.<java.io.ByteArrayInputStream: void <init>(byte[])>($r18);

        return $r16;
    }

    public java.io.InputStream getInputStream() throws java.io.IOException
    {
        libcore.net.url.FileURLConnection r0;
        boolean $z0;
        java.io.InputStream $r1;

        r0 := @this: libcore.net.url.FileURLConnection;

        $z0 = r0.<libcore.net.url.FileURLConnection: boolean connected>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<libcore.net.url.FileURLConnection: void connect()>();

     label1:
        $r1 = r0.<libcore.net.url.FileURLConnection: java.io.InputStream is>;

        return $r1;
    }

    public java.security.Permission getPermission() throws java.io.IOException
    {
        libcore.net.url.FileURLConnection r0;
        java.lang.String r1;
        java.io.FilePermission $r2, $r3, $r4;
        char $c0, $c1;

        r0 := @this: libcore.net.url.FileURLConnection;

        $r2 = r0.<libcore.net.url.FileURLConnection: java.io.FilePermission permission>;

        if $r2 != null goto label2;

        r1 = r0.<libcore.net.url.FileURLConnection: java.lang.String filename>;

        $c0 = <java.io.File: char separatorChar>;

        if $c0 == 47 goto label1;

        $c1 = <java.io.File: char separatorChar>;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(47, $c1);

     label1:
        $r4 = new java.io.FilePermission;

        specialinvoke $r4.<java.io.FilePermission: void <init>(java.lang.String,java.lang.String)>(r1, "read");

        r0.<libcore.net.url.FileURLConnection: java.io.FilePermission permission> = $r4;

     label2:
        $r3 = r0.<libcore.net.url.FileURLConnection: java.io.FilePermission permission>;

        return $r3;
    }

    static void <clinit>()
    {
        libcore.net.url.FileURLConnection$1 $r0;

        <libcore.net.url.FileURLConnection: int LAST_MODIFIED_VALUE_IDX> = 5;

        <libcore.net.url.FileURLConnection: int CONTENT_LENGTH_VALUE_IDX> = 3;

        <libcore.net.url.FileURLConnection: int CONTENT_TYPE_VALUE_IDX> = 1;

        $r0 = new libcore.net.url.FileURLConnection$1;

        specialinvoke $r0.<libcore.net.url.FileURLConnection$1: void <init>()>();

        <libcore.net.url.FileURLConnection: java.util.Comparator HEADER_COMPARATOR> = $r0;

        return;
    }
}
