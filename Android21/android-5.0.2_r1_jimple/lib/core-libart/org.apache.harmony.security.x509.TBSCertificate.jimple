public final class org.apache.harmony.security.x509.TBSCertificate extends java.lang.Object
{
    private final int version;
    private final java.math.BigInteger serialNumber;
    private final org.apache.harmony.security.x509.AlgorithmIdentifier signature;
    private final org.apache.harmony.security.x501.Name issuer;
    private final org.apache.harmony.security.x509.Validity validity;
    private final org.apache.harmony.security.x501.Name subject;
    private final org.apache.harmony.security.x509.SubjectPublicKeyInfo subjectPublicKeyInfo;
    private final boolean[] issuerUniqueID;
    private final boolean[] subjectUniqueID;
    private final org.apache.harmony.security.x509.Extensions extensions;
    private byte[] encoding;
    public static final org.apache.harmony.security.asn1.ASN1Sequence ASN1;

    public void <init>(int, java.math.BigInteger, org.apache.harmony.security.x509.AlgorithmIdentifier, org.apache.harmony.security.x501.Name, org.apache.harmony.security.x509.Validity, org.apache.harmony.security.x501.Name, org.apache.harmony.security.x509.SubjectPublicKeyInfo, boolean[], boolean[], org.apache.harmony.security.x509.Extensions)
    {
        org.apache.harmony.security.x509.TBSCertificate r0;
        int i0;
        java.math.BigInteger r1;
        org.apache.harmony.security.x509.AlgorithmIdentifier r2;
        org.apache.harmony.security.x501.Name r3, r5;
        org.apache.harmony.security.x509.Validity r4;
        org.apache.harmony.security.x509.SubjectPublicKeyInfo r6;
        boolean[] r7, r8;
        org.apache.harmony.security.x509.Extensions r9;

        r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        i0 := @parameter0: int;

        r1 := @parameter1: java.math.BigInteger;

        r2 := @parameter2: org.apache.harmony.security.x509.AlgorithmIdentifier;

        r3 := @parameter3: org.apache.harmony.security.x501.Name;

        r4 := @parameter4: org.apache.harmony.security.x509.Validity;

        r5 := @parameter5: org.apache.harmony.security.x501.Name;

        r6 := @parameter6: org.apache.harmony.security.x509.SubjectPublicKeyInfo;

        r7 := @parameter7: boolean[];

        r8 := @parameter8: boolean[];

        r9 := @parameter9: org.apache.harmony.security.x509.Extensions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.harmony.security.x509.TBSCertificate: int version> = i0;

        r0.<org.apache.harmony.security.x509.TBSCertificate: java.math.BigInteger serialNumber> = r1;

        r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.AlgorithmIdentifier signature> = r2;

        r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x501.Name issuer> = r3;

        r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Validity validity> = r4;

        r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x501.Name subject> = r5;

        r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.SubjectPublicKeyInfo subjectPublicKeyInfo> = r6;

        r0.<org.apache.harmony.security.x509.TBSCertificate: boolean[] issuerUniqueID> = r7;

        r0.<org.apache.harmony.security.x509.TBSCertificate: boolean[] subjectUniqueID> = r8;

        r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Extensions extensions> = r9;

        return;
    }

    private void <init>(int, java.math.BigInteger, org.apache.harmony.security.x509.AlgorithmIdentifier, org.apache.harmony.security.x501.Name, org.apache.harmony.security.x509.Validity, org.apache.harmony.security.x501.Name, org.apache.harmony.security.x509.SubjectPublicKeyInfo, boolean[], boolean[], org.apache.harmony.security.x509.Extensions, byte[])
    {
        org.apache.harmony.security.x509.TBSCertificate r0;
        int i0;
        java.math.BigInteger r1;
        org.apache.harmony.security.x509.AlgorithmIdentifier r2;
        org.apache.harmony.security.x501.Name r3, r5;
        org.apache.harmony.security.x509.Validity r4;
        org.apache.harmony.security.x509.SubjectPublicKeyInfo r6;
        boolean[] r7, r8;
        org.apache.harmony.security.x509.Extensions r9;
        byte[] r10;

        r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        i0 := @parameter0: int;

        r1 := @parameter1: java.math.BigInteger;

        r2 := @parameter2: org.apache.harmony.security.x509.AlgorithmIdentifier;

        r3 := @parameter3: org.apache.harmony.security.x501.Name;

        r4 := @parameter4: org.apache.harmony.security.x509.Validity;

        r5 := @parameter5: org.apache.harmony.security.x501.Name;

        r6 := @parameter6: org.apache.harmony.security.x509.SubjectPublicKeyInfo;

        r7 := @parameter7: boolean[];

        r8 := @parameter8: boolean[];

        r9 := @parameter9: org.apache.harmony.security.x509.Extensions;

        r10 := @parameter10: byte[];

        specialinvoke r0.<org.apache.harmony.security.x509.TBSCertificate: void <init>(int,java.math.BigInteger,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.Validity,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.SubjectPublicKeyInfo,boolean[],boolean[],org.apache.harmony.security.x509.Extensions)>(i0, r1, r2, r3, r4, r5, r6, r7, r8, r9);

        r0.<org.apache.harmony.security.x509.TBSCertificate: byte[] encoding> = r10;

        return;
    }

    public int getVersion()
    {
        org.apache.harmony.security.x509.TBSCertificate r0;
        int $i0;

        r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        $i0 = r0.<org.apache.harmony.security.x509.TBSCertificate: int version>;

        return $i0;
    }

    public java.math.BigInteger getSerialNumber()
    {
        org.apache.harmony.security.x509.TBSCertificate r0;
        java.math.BigInteger $r1;

        r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        $r1 = r0.<org.apache.harmony.security.x509.TBSCertificate: java.math.BigInteger serialNumber>;

        return $r1;
    }

    public org.apache.harmony.security.x509.AlgorithmIdentifier getSignature()
    {
        org.apache.harmony.security.x509.TBSCertificate r0;
        org.apache.harmony.security.x509.AlgorithmIdentifier $r1;

        r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        $r1 = r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.AlgorithmIdentifier signature>;

        return $r1;
    }

    public org.apache.harmony.security.x501.Name getIssuer()
    {
        org.apache.harmony.security.x509.TBSCertificate r0;
        org.apache.harmony.security.x501.Name $r1;

        r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        $r1 = r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x501.Name issuer>;

        return $r1;
    }

    public org.apache.harmony.security.x509.Validity getValidity()
    {
        org.apache.harmony.security.x509.TBSCertificate r0;
        org.apache.harmony.security.x509.Validity $r1;

        r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        $r1 = r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Validity validity>;

        return $r1;
    }

    public org.apache.harmony.security.x501.Name getSubject()
    {
        org.apache.harmony.security.x509.TBSCertificate r0;
        org.apache.harmony.security.x501.Name $r1;

        r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        $r1 = r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x501.Name subject>;

        return $r1;
    }

    public org.apache.harmony.security.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()
    {
        org.apache.harmony.security.x509.TBSCertificate r0;
        org.apache.harmony.security.x509.SubjectPublicKeyInfo $r1;

        r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        $r1 = r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.SubjectPublicKeyInfo subjectPublicKeyInfo>;

        return $r1;
    }

    public boolean[] getIssuerUniqueID()
    {
        org.apache.harmony.security.x509.TBSCertificate r0;
        boolean[] $r1;

        r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        $r1 = r0.<org.apache.harmony.security.x509.TBSCertificate: boolean[] issuerUniqueID>;

        return $r1;
    }

    public boolean[] getSubjectUniqueID()
    {
        org.apache.harmony.security.x509.TBSCertificate r0;
        boolean[] $r1;

        r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        $r1 = r0.<org.apache.harmony.security.x509.TBSCertificate: boolean[] subjectUniqueID>;

        return $r1;
    }

    public org.apache.harmony.security.x509.Extensions getExtensions()
    {
        org.apache.harmony.security.x509.TBSCertificate r0;
        org.apache.harmony.security.x509.Extensions $r1;

        r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        $r1 = r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Extensions extensions>;

        return $r1;
    }

    public byte[] getEncoded()
    {
        org.apache.harmony.security.x509.TBSCertificate r0;
        byte[] $r1, $r2, $r4;
        org.apache.harmony.security.asn1.ASN1Sequence $r3;

        r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        $r1 = r0.<org.apache.harmony.security.x509.TBSCertificate: byte[] encoding>;

        if $r1 != null goto label1;

        $r3 = <org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r4 = virtualinvoke $r3.<org.apache.harmony.security.asn1.ASN1Sequence: byte[] encode(java.lang.Object)>(r0);

        r0.<org.apache.harmony.security.x509.TBSCertificate: byte[] encoding> = $r4;

     label1:
        $r2 = r0.<org.apache.harmony.security.x509.TBSCertificate: byte[] encoding>;

        return $r2;
    }

    public void dumpValue(java.lang.StringBuilder)
    {
        org.apache.harmony.security.x509.TBSCertificate r0;
        java.lang.StringBuilder r1, $r4, $r6, $r11, $r18, $r22, $r23, $r25, $r28;
        boolean[] r2, $r31, $r32, r45;
        int i0, i1, $i2, $i3, i6, i7;
        boolean z0, z1;
        org.apache.harmony.security.x501.Name $r7, $r29;
        java.lang.String $r8, $r16, $r30;
        org.apache.harmony.security.x509.AlgorithmIdentifier $r12;
        java.security.PublicKey $r13;
        org.apache.harmony.security.x509.SubjectPublicKeyInfo $r14;
        org.apache.harmony.security.x509.Validity $r17, $r21;
        java.util.Date $r20, $r24;
        java.math.BigInteger $r33;
        org.apache.harmony.security.x509.Extensions $r37, $r41;
        char $c4, $c5;

        r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        r1 := @parameter0: java.lang.StringBuilder;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  Version: V");

        $i2 = r0.<org.apache.harmony.security.x509.TBSCertificate: int version>;

        $i3 = $i2 + 1;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  Subject: ");

        $r7 = r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x501.Name subject>;

        $r8 = virtualinvoke $r7.<org.apache.harmony.security.x501.Name: java.lang.String getName(java.lang.String)>("RFC2253");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  Signature Algorithm: ");

        $r12 = r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.AlgorithmIdentifier signature>;

        virtualinvoke $r12.<org.apache.harmony.security.x509.AlgorithmIdentifier: void dumpValue(java.lang.StringBuilder)>(r1);

        $r11 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  Key: ");

        $r14 = r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.SubjectPublicKeyInfo subjectPublicKeyInfo>;

        $r13 = virtualinvoke $r14.<org.apache.harmony.security.x509.SubjectPublicKeyInfo: java.security.PublicKey getPublicKey()>();

        $r16 = virtualinvoke $r13.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  Validity: [From: ");

        $r17 = r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Validity validity>;

        $r20 = virtualinvoke $r17.<org.apache.harmony.security.x509.Validity: java.util.Date getNotBefore()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n               To: ");

        $r21 = r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Validity validity>;

        $r24 = virtualinvoke $r21.<org.apache.harmony.security.x509.Validity: java.util.Date getNotAfter()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r25 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  Issuer: ");

        $r29 = r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x501.Name issuer>;

        $r30 = virtualinvoke $r29.<org.apache.harmony.security.x501.Name: java.lang.String getName(java.lang.String)>("RFC2253");

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r28 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  Serial Number: ");

        $r33 = r0.<org.apache.harmony.security.x509.TBSCertificate: java.math.BigInteger serialNumber>;

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r31 = r0.<org.apache.harmony.security.x509.TBSCertificate: boolean[] issuerUniqueID>;

        if $r31 == null goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  Issuer Id: ");

        r2 = r0.<org.apache.harmony.security.x509.TBSCertificate: boolean[] issuerUniqueID>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        z0 = r2[i1];

        if z0 == 0 goto label2;

        $c4 = 49;

        goto label3;

     label2:
        $c4 = 48;

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        i1 = i1 + 1;

        goto label1;

     label4:
        $r32 = r0.<org.apache.harmony.security.x509.TBSCertificate: boolean[] subjectUniqueID>;

        if $r32 == null goto label8;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  Subject Id: ");

        r45 = r0.<org.apache.harmony.security.x509.TBSCertificate: boolean[] subjectUniqueID>;

        i6 = lengthof r45;

        i7 = 0;

     label5:
        if i7 >= i6 goto label8;

        z1 = r45[i7];

        if z1 == 0 goto label6;

        $c5 = 49;

        goto label7;

     label6:
        $c5 = 48;

     label7:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        i7 = i7 + 1;

        goto label5;

     label8:
        $r37 = r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Extensions extensions>;

        if $r37 == null goto label9;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n  Extensions: ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[\n");

        $r41 = r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Extensions extensions>;

        virtualinvoke $r41.<org.apache.harmony.security.x509.Extensions: void dumpValue(java.lang.StringBuilder,java.lang.String)>(r1, "    ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ]");

     label9:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n]");

        return;
    }

    void <init>(int, java.math.BigInteger, org.apache.harmony.security.x509.AlgorithmIdentifier, org.apache.harmony.security.x501.Name, org.apache.harmony.security.x509.Validity, org.apache.harmony.security.x501.Name, org.apache.harmony.security.x509.SubjectPublicKeyInfo, boolean[], boolean[], org.apache.harmony.security.x509.Extensions, byte[], org.apache.harmony.security.x509.TBSCertificate$1)
    {
        org.apache.harmony.security.x509.TBSCertificate r0;
        int i0;
        java.math.BigInteger r1;
        org.apache.harmony.security.x509.AlgorithmIdentifier r2;
        org.apache.harmony.security.x501.Name r3, r5;
        org.apache.harmony.security.x509.Validity r4;
        org.apache.harmony.security.x509.SubjectPublicKeyInfo r6;
        boolean[] r7, r8;
        org.apache.harmony.security.x509.Extensions r9;
        byte[] r10;
        org.apache.harmony.security.x509.TBSCertificate$1 r11;

        r0 := @this: org.apache.harmony.security.x509.TBSCertificate;

        i0 := @parameter0: int;

        r1 := @parameter1: java.math.BigInteger;

        r2 := @parameter2: org.apache.harmony.security.x509.AlgorithmIdentifier;

        r3 := @parameter3: org.apache.harmony.security.x501.Name;

        r4 := @parameter4: org.apache.harmony.security.x509.Validity;

        r5 := @parameter5: org.apache.harmony.security.x501.Name;

        r6 := @parameter6: org.apache.harmony.security.x509.SubjectPublicKeyInfo;

        r7 := @parameter7: boolean[];

        r8 := @parameter8: boolean[];

        r9 := @parameter9: org.apache.harmony.security.x509.Extensions;

        r10 := @parameter10: byte[];

        r11 := @parameter11: org.apache.harmony.security.x509.TBSCertificate$1;

        specialinvoke r0.<org.apache.harmony.security.x509.TBSCertificate: void <init>(int,java.math.BigInteger,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.Validity,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.SubjectPublicKeyInfo,boolean[],boolean[],org.apache.harmony.security.x509.Extensions,byte[])>(i0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10);

        return;
    }

    static int access$100(org.apache.harmony.security.x509.TBSCertificate)
    {
        org.apache.harmony.security.x509.TBSCertificate r0;
        int $i0;

        r0 := @parameter0: org.apache.harmony.security.x509.TBSCertificate;

        $i0 = r0.<org.apache.harmony.security.x509.TBSCertificate: int version>;

        return $i0;
    }

    static java.math.BigInteger access$200(org.apache.harmony.security.x509.TBSCertificate)
    {
        org.apache.harmony.security.x509.TBSCertificate r0;
        java.math.BigInteger $r1;

        r0 := @parameter0: org.apache.harmony.security.x509.TBSCertificate;

        $r1 = r0.<org.apache.harmony.security.x509.TBSCertificate: java.math.BigInteger serialNumber>;

        return $r1;
    }

    static org.apache.harmony.security.x509.AlgorithmIdentifier access$300(org.apache.harmony.security.x509.TBSCertificate)
    {
        org.apache.harmony.security.x509.TBSCertificate r0;
        org.apache.harmony.security.x509.AlgorithmIdentifier $r1;

        r0 := @parameter0: org.apache.harmony.security.x509.TBSCertificate;

        $r1 = r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.AlgorithmIdentifier signature>;

        return $r1;
    }

    static org.apache.harmony.security.x501.Name access$400(org.apache.harmony.security.x509.TBSCertificate)
    {
        org.apache.harmony.security.x509.TBSCertificate r0;
        org.apache.harmony.security.x501.Name $r1;

        r0 := @parameter0: org.apache.harmony.security.x509.TBSCertificate;

        $r1 = r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x501.Name issuer>;

        return $r1;
    }

    static org.apache.harmony.security.x509.Validity access$500(org.apache.harmony.security.x509.TBSCertificate)
    {
        org.apache.harmony.security.x509.TBSCertificate r0;
        org.apache.harmony.security.x509.Validity $r1;

        r0 := @parameter0: org.apache.harmony.security.x509.TBSCertificate;

        $r1 = r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Validity validity>;

        return $r1;
    }

    static org.apache.harmony.security.x501.Name access$600(org.apache.harmony.security.x509.TBSCertificate)
    {
        org.apache.harmony.security.x509.TBSCertificate r0;
        org.apache.harmony.security.x501.Name $r1;

        r0 := @parameter0: org.apache.harmony.security.x509.TBSCertificate;

        $r1 = r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x501.Name subject>;

        return $r1;
    }

    static org.apache.harmony.security.x509.SubjectPublicKeyInfo access$700(org.apache.harmony.security.x509.TBSCertificate)
    {
        org.apache.harmony.security.x509.TBSCertificate r0;
        org.apache.harmony.security.x509.SubjectPublicKeyInfo $r1;

        r0 := @parameter0: org.apache.harmony.security.x509.TBSCertificate;

        $r1 = r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.SubjectPublicKeyInfo subjectPublicKeyInfo>;

        return $r1;
    }

    static boolean[] access$800(org.apache.harmony.security.x509.TBSCertificate)
    {
        org.apache.harmony.security.x509.TBSCertificate r0;
        boolean[] $r1;

        r0 := @parameter0: org.apache.harmony.security.x509.TBSCertificate;

        $r1 = r0.<org.apache.harmony.security.x509.TBSCertificate: boolean[] issuerUniqueID>;

        return $r1;
    }

    static boolean[] access$900(org.apache.harmony.security.x509.TBSCertificate)
    {
        org.apache.harmony.security.x509.TBSCertificate r0;
        boolean[] $r1;

        r0 := @parameter0: org.apache.harmony.security.x509.TBSCertificate;

        $r1 = r0.<org.apache.harmony.security.x509.TBSCertificate: boolean[] subjectUniqueID>;

        return $r1;
    }

    static org.apache.harmony.security.x509.Extensions access$1000(org.apache.harmony.security.x509.TBSCertificate)
    {
        org.apache.harmony.security.x509.TBSCertificate r0;
        org.apache.harmony.security.x509.Extensions $r1;

        r0 := @parameter0: org.apache.harmony.security.x509.TBSCertificate;

        $r1 = r0.<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Extensions extensions>;

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.harmony.security.x509.TBSCertificate$1 $r0;
        org.apache.harmony.security.asn1.ASN1Type[] $r1;
        org.apache.harmony.security.asn1.ASN1Explicit $r2, $r13;
        org.apache.harmony.security.asn1.ASN1Integer $r3, $r4;
        org.apache.harmony.security.asn1.ASN1Sequence $r5, $r7, $r9;
        org.apache.harmony.security.asn1.ASN1SequenceOf $r6, $r8;
        org.apache.harmony.security.asn1.ASN1Implicit $r10, $r11;
        org.apache.harmony.security.asn1.ASN1BitString $r12, $r14;
        org.apache.harmony.security.asn1.ASN1Type $r15;

        $r0 = new org.apache.harmony.security.x509.TBSCertificate$1;

        $r1 = newarray (org.apache.harmony.security.asn1.ASN1Type)[10];

        $r2 = new org.apache.harmony.security.asn1.ASN1Explicit;

        $r3 = staticinvoke <org.apache.harmony.security.asn1.ASN1Integer: org.apache.harmony.security.asn1.ASN1Integer getInstance()>();

        specialinvoke $r2.<org.apache.harmony.security.asn1.ASN1Explicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(0, $r3);

        $r1[0] = $r2;

        $r4 = staticinvoke <org.apache.harmony.security.asn1.ASN1Integer: org.apache.harmony.security.asn1.ASN1Integer getInstance()>();

        $r1[1] = $r4;

        $r5 = <org.apache.harmony.security.x509.AlgorithmIdentifier: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r1[2] = $r5;

        $r6 = <org.apache.harmony.security.x501.Name: org.apache.harmony.security.asn1.ASN1SequenceOf ASN1>;

        $r1[3] = $r6;

        $r7 = <org.apache.harmony.security.x509.Validity: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r1[4] = $r7;

        $r8 = <org.apache.harmony.security.x501.Name: org.apache.harmony.security.asn1.ASN1SequenceOf ASN1>;

        $r1[5] = $r8;

        $r9 = <org.apache.harmony.security.x509.SubjectPublicKeyInfo: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r1[6] = $r9;

        $r10 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r12 = staticinvoke <org.apache.harmony.security.asn1.ASN1BitString: org.apache.harmony.security.asn1.ASN1BitString getInstance()>();

        specialinvoke $r10.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(1, $r12);

        $r1[7] = $r10;

        $r11 = new org.apache.harmony.security.asn1.ASN1Implicit;

        $r14 = staticinvoke <org.apache.harmony.security.asn1.ASN1BitString: org.apache.harmony.security.asn1.ASN1BitString getInstance()>();

        specialinvoke $r11.<org.apache.harmony.security.asn1.ASN1Implicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(2, $r14);

        $r1[8] = $r11;

        $r13 = new org.apache.harmony.security.asn1.ASN1Explicit;

        $r15 = <org.apache.harmony.security.x509.Extensions: org.apache.harmony.security.asn1.ASN1Type ASN1>;

        specialinvoke $r13.<org.apache.harmony.security.asn1.ASN1Explicit: void <init>(int,org.apache.harmony.security.asn1.ASN1Type)>(3, $r15);

        $r1[9] = $r13;

        specialinvoke $r0.<org.apache.harmony.security.x509.TBSCertificate$1: void <init>(org.apache.harmony.security.asn1.ASN1Type[])>($r1);

        <org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.asn1.ASN1Sequence ASN1> = $r0;

        return;
    }
}
