public class java.net.URLClassLoader extends java.security.SecureClassLoader
{
    java.util.ArrayList originalUrls;
    java.util.List searchList;
    java.util.ArrayList handlerList;
    java.util.Map handlerMap;
    private java.net.URLStreamHandlerFactory factory;

    public void <init>(java.net.URL[])
    {
        java.net.URLClassLoader r0;
        java.net.URL[] r1;
        java.lang.ClassLoader $r2;

        r0 := @this: java.net.URLClassLoader;

        r1 := @parameter0: java.net.URL[];

        $r2 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

        specialinvoke r0.<java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader,java.net.URLStreamHandlerFactory)>(r1, $r2, null);

        return;
    }

    public void <init>(java.net.URL[], java.lang.ClassLoader)
    {
        java.net.URLClassLoader r0;
        java.net.URL[] r1;
        java.lang.ClassLoader r2;

        r0 := @this: java.net.URLClassLoader;

        r1 := @parameter0: java.net.URL[];

        r2 := @parameter1: java.lang.ClassLoader;

        specialinvoke r0.<java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader,java.net.URLStreamHandlerFactory)>(r1, r2, null);

        return;
    }

    protected void addURL(java.net.URL)
    {
        java.net.URLClassLoader r0;
        java.net.URL r1, $r5;
        java.util.ArrayList $r3;
        java.util.List $r4;
        java.net.MalformedURLException $r6;

        r0 := @this: java.net.URLClassLoader;

        r1 := @parameter0: java.net.URL;

     label1:
        $r3 = r0.<java.net.URLClassLoader: java.util.ArrayList originalUrls>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r4 = r0.<java.net.URLClassLoader: java.util.List searchList>;

        $r5 = specialinvoke r0.<java.net.URLClassLoader: java.net.URL createSearchURL(java.net.URL)>(r1);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        return;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    public java.util.Enumeration findResources(java.lang.String) throws java.io.IOException
    {
        java.net.URLClassLoader r0;
        java.lang.String r1;
        java.util.ArrayList r2, $r4;
        int i0, $i1;
        java.net.URLClassLoader$URLHandler r3;
        java.util.Enumeration $r5;

        r0 := @this: java.net.URLClassLoader;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r2 = $r4;

        i0 = 0;

     label2:
        $i1 = i0;

        i0 = i0 + 1;

        r3 = specialinvoke r0.<java.net.URLClassLoader: java.net.URLClassLoader$URLHandler getHandler(int)>($i1);

        if r3 != null goto label3;

        goto label4;

     label3:
        virtualinvoke r3.<java.net.URLClassLoader$URLHandler: void findResources(java.lang.String,java.util.ArrayList)>(r1, r2);

        goto label2;

     label4:
        $r5 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>(r2);

        return $r5;
    }

    protected java.security.PermissionCollection getPermissions(java.security.CodeSource)
    {
        java.net.URLClassLoader r0;
        java.security.CodeSource r1;
        java.security.PermissionCollection r2;
        java.net.URL r3;
        java.lang.String r5, $r6, $r7, $r14, r22, r23;
        boolean $z0, $z1, $z2;
        int $i0, $i3;
        java.net.SocketPermission $r8;
        char $c1, $c2;
        java.io.FilePermission $r9, $r11;
        java.lang.StringBuilder $r10, $r12, $r13, $r15, $r16, $r17, $r18;
        java.net.JarURLConnection $r19;
        java.net.URLConnection $r20;
        java.io.IOException $r21;

        r0 := @this: java.net.URLClassLoader;

        r1 := @parameter0: java.security.CodeSource;

        r2 = specialinvoke r0.<java.security.SecureClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>(r1);

        r3 = virtualinvoke r1.<java.security.CodeSource: java.net.URL getLocation()>();

        $r6 = virtualinvoke r3.<java.net.URL: java.lang.String getProtocol()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("jar");

        if $z0 == 0 goto label04;

     label01:
        $r20 = virtualinvoke r3.<java.net.URL: java.net.URLConnection openConnection()>();

        $r19 = (java.net.JarURLConnection) $r20;

        r3 = virtualinvoke $r19.<java.net.JarURLConnection: java.net.URL getJarFileURL()>();

     label02:
        goto label04;

     label03:
        $r21 := @caughtexception;

     label04:
        $r7 = virtualinvoke r3.<java.net.URL: java.lang.String getProtocol()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("file");

        if $z1 == 0 goto label09;

        r22 = virtualinvoke r3.<java.net.URL: java.lang.String getFile()>();

        r5 = virtualinvoke r3.<java.net.URL: java.lang.String getHost()>();

        if r5 == null goto label05;

        $i3 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i3 <= 0 goto label05;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("//");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        $c1 = <java.io.File: char separatorChar>;

        if $c1 == 47 goto label06;

        $c2 = <java.io.File: char separatorChar>;

        r22 = virtualinvoke r22.<java.lang.String: java.lang.String replace(char,char)>(47, $c2);

     label06:
        $z2 = staticinvoke <java.net.URLClassLoader: boolean isDirectory(java.net.URL)>(r3);

        if $z2 == 0 goto label07;

        $r11 = new java.io.FilePermission;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.FilePermission: void <init>(java.lang.String,java.lang.String)>($r14, "read");

        virtualinvoke r2.<java.security.PermissionCollection: void add(java.security.Permission)>($r11);

        goto label08;

     label07:
        $r9 = new java.io.FilePermission;

        specialinvoke $r9.<java.io.FilePermission: void <init>(java.lang.String,java.lang.String)>(r22, "read");

        virtualinvoke r2.<java.security.PermissionCollection: void add(java.security.Permission)>($r9);

     label08:
        goto label11;

     label09:
        r23 = virtualinvoke r3.<java.net.URL: java.lang.String getHost()>();

        $i0 = virtualinvoke r23.<java.lang.String: int length()>();

        if $i0 != 0 goto label10;

        r23 = "localhost";

     label10:
        $r8 = new java.net.SocketPermission;

        specialinvoke $r8.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>(r23, "connect, accept");

        virtualinvoke r2.<java.security.PermissionCollection: void add(java.security.Permission)>($r8);

     label11:
        return r2;

        catch java.io.IOException from label01 to label02 with label03;
    }

    public java.net.URL[] getURLs()
    {
        java.net.URLClassLoader r0;
        java.util.ArrayList $r1, $r2;
        int $i0;
        java.net.URL[] $r3, $r5;
        java.lang.Object[] $r4;

        r0 := @this: java.net.URLClassLoader;

        $r2 = r0.<java.net.URLClassLoader: java.util.ArrayList originalUrls>;

        $r1 = r0.<java.net.URLClassLoader: java.util.ArrayList originalUrls>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $r3 = newarray (java.net.URL)[$i0];

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (java.net.URL[]) $r4;

        return $r5;
    }

    private static boolean isDirectory(java.net.URL)
    {
        java.net.URL r0;
        java.lang.String r1;
        int $i0, $i1, $i2;
        char $c3;
        boolean $z0;

        r0 := @parameter0: java.net.URL;

        r1 = virtualinvoke r0.<java.net.URL: java.lang.String getFile()>();

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i2);

        if $c3 != 47 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static java.net.URLClassLoader newInstance(java.net.URL[])
    {
        java.net.URL[] r0;
        java.net.URLClassLoader $r1;
        java.lang.ClassLoader $r2;

        r0 := @parameter0: java.net.URL[];

        $r1 = new java.net.URLClassLoader;

        $r2 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

        specialinvoke $r1.<java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader)>(r0, $r2);

        return $r1;
    }

    public static java.net.URLClassLoader newInstance(java.net.URL[], java.lang.ClassLoader)
    {
        java.net.URL[] r0;
        java.lang.ClassLoader r1;
        java.net.URLClassLoader $r2;

        r0 := @parameter0: java.net.URL[];

        r1 := @parameter1: java.lang.ClassLoader;

        $r2 = new java.net.URLClassLoader;

        specialinvoke $r2.<java.net.URLClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader)>(r0, r1);

        return $r2;
    }

    public void <init>(java.net.URL[], java.lang.ClassLoader, java.net.URLStreamHandlerFactory)
    {
        java.net.URLClassLoader r0;
        java.net.URL[] r1;
        java.lang.ClassLoader r2;
        java.net.URLStreamHandlerFactory r3;
        int i0, i1;
        java.util.HashMap $r5;
        java.util.ArrayList $r6, $r7, $r8, $r11;
        java.util.List $r9, $r14;
        java.net.URL $r10, $r12, $r13;
        java.net.MalformedURLException $r15;

        r0 := @this: java.net.URLClassLoader;

        r1 := @parameter0: java.net.URL[];

        r2 := @parameter1: java.lang.ClassLoader;

        r3 := @parameter2: java.net.URLStreamHandlerFactory;

        specialinvoke r0.<java.security.SecureClassLoader: void <init>(java.lang.ClassLoader)>(r2);

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<java.net.URLClassLoader: java.util.Map handlerMap> = $r5;

        r0.<java.net.URLClassLoader: java.net.URLStreamHandlerFactory factory> = r3;

        i0 = lengthof r1;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>(i0);

        r0.<java.net.URLClassLoader: java.util.ArrayList originalUrls> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(i0);

        r0.<java.net.URLClassLoader: java.util.ArrayList handlerList> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(i0);

        $r9 = staticinvoke <java.util.Collections: java.util.List synchronizedList(java.util.List)>($r8);

        r0.<java.net.URLClassLoader: java.util.List searchList> = $r9;

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        $r11 = r0.<java.net.URLClassLoader: java.util.ArrayList originalUrls>;

        $r10 = r1[i1];

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

     label2:
        $r14 = r0.<java.net.URLClassLoader: java.util.List searchList>;

        $r12 = r1[i1];

        $r13 = specialinvoke r0.<java.net.URLClassLoader: java.net.URL createSearchURL(java.net.URL)>($r12);

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r13);

     label3:
        goto label5;

     label4:
        $r15 := @caughtexception;

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        return;

        catch java.net.MalformedURLException from label2 to label3 with label4;
    }

    protected java.lang.Class findClass(java.lang.String) throws java.lang.ClassNotFoundException
    {
        java.net.URLClassLoader r0;
        java.lang.String r1, r2, r3, r4;
        int i1, $i2, $i3, i4;
        java.net.URLClassLoader$URLHandler r5;
        java.lang.Class r6;
        java.lang.StringBuilder $r7, $r8;
        java.lang.ClassNotFoundException $r9;

        r0 := @this: java.net.URLClassLoader;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".class");

        r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = null;

        virtualinvoke r2.<java.lang.String: int lastIndexOf(int)>(47);

        $i2 = virtualinvoke r2.<java.lang.String: int lastIndexOf(int)>(47);

        i4 = $i2;

        if $i2 == -1 goto label1;

        r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i4);

     label1:
        i1 = 0;

     label2:
        $i3 = i1;

        i1 = i1 + 1;

        r5 = specialinvoke r0.<java.net.URLClassLoader: java.net.URLClassLoader$URLHandler getHandler(int)>($i3);

        if r5 != null goto label3;

        goto label5;

     label3:
        r6 = virtualinvoke r5.<java.net.URLClassLoader$URLHandler: java.lang.Class findClass(java.lang.String,java.lang.String,java.lang.String)>(r4, r3, r1);

        if r6 == null goto label4;

        return r6;

     label4:
        goto label2;

     label5:
        $r9 = new java.lang.ClassNotFoundException;

        specialinvoke $r9.<java.lang.ClassNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r9;
    }

    private java.net.URL createSearchURL(java.net.URL) throws java.net.MalformedURLException
    {
        java.net.URLClassLoader r0;
        java.net.URL r1, $r4, $r13;
        java.lang.String r2, $r6, $r9, $r14, $r17;
        boolean $z0, $z1;
        java.net.URLStreamHandlerFactory $r3, $r11;
        java.lang.StringBuilder $r5, $r7, $r8, $r12, $r15, $r16;
        java.net.URLStreamHandler $r10;

        r0 := @this: java.net.URLClassLoader;

        r1 := @parameter0: java.net.URL;

        if r1 != null goto label1;

        return r1;

     label1:
        r2 = virtualinvoke r1.<java.net.URL: java.lang.String getProtocol()>();

        $z0 = staticinvoke <java.net.URLClassLoader: boolean isDirectory(java.net.URL)>(r1);

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("jar");

        if $z1 == 0 goto label3;

     label2:
        return r1;

     label3:
        $r3 = r0.<java.net.URLClassLoader: java.net.URLStreamHandlerFactory factory>;

        if $r3 != null goto label4;

        $r13 = new java.net.URL;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke r1.<java.net.URL: java.lang.String toString()>();

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!/");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String)>("jar", "", -1, $r17);

        return $r13;

     label4:
        $r4 = new java.net.URL;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r1.<java.net.URL: java.lang.String toString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!/");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = r0.<java.net.URLClassLoader: java.net.URLStreamHandlerFactory factory>;

        $r10 = interfaceinvoke $r11.<java.net.URLStreamHandlerFactory: java.net.URLStreamHandler createURLStreamHandler(java.lang.String)>("jar");

        specialinvoke $r4.<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>("jar", "", -1, $r9, $r10);

        return $r4;
    }

    public java.net.URL findResource(java.lang.String)
    {
        java.net.URLClassLoader r0;
        java.lang.String r1;
        int i0, $i1;
        java.net.URLClassLoader$URLHandler r2;
        java.net.URL r3;

        r0 := @this: java.net.URLClassLoader;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        i0 = 0;

     label2:
        $i1 = i0;

        i0 = i0 + 1;

        r2 = specialinvoke r0.<java.net.URLClassLoader: java.net.URLClassLoader$URLHandler getHandler(int)>($i1);

        if r2 != null goto label3;

        goto label5;

     label3:
        r3 = virtualinvoke r2.<java.net.URLClassLoader$URLHandler: java.net.URL findResource(java.lang.String)>(r1);

        if r3 == null goto label4;

        return r3;

     label4:
        goto label2;

     label5:
        return null;
    }

    private java.net.URLClassLoader$URLHandler getHandler(int)
    {
        java.net.URLClassLoader r0;
        int i0, $i1, $i2;
        java.util.ArrayList $r1, $r2, $r3, $r6;
        java.lang.Object $r4, $r7;
        java.net.URLClassLoader$URLHandler $r5, $r8;

        r0 := @this: java.net.URLClassLoader;

        i0 := @parameter0: int;

        $r1 = r0.<java.net.URLClassLoader: java.util.ArrayList handlerList>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label1;

        $r6 = r0.<java.net.URLClassLoader: java.util.ArrayList handlerList>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r8 = (java.net.URLClassLoader$URLHandler) $r7;

        return $r8;

     label1:
        specialinvoke r0.<java.net.URLClassLoader: void makeNewHandler()>();

        $r2 = r0.<java.net.URLClassLoader: java.util.ArrayList handlerList>;

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i0 >= $i2 goto label2;

        $r3 = r0.<java.net.URLClassLoader: java.util.ArrayList handlerList>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r5 = (java.net.URLClassLoader$URLHandler) $r4;

        return $r5;

     label2:
        return null;
    }

    private synchronized void makeNewHandler()
    {
        java.net.URLClassLoader r0;
        java.net.URL r1;
        java.net.URLClassLoader$URLHandler r2;
        java.lang.String r3;
        java.util.List $r4, $r5;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r6;
        java.util.Map $r7, $r8;
        java.util.ArrayList $r10;
        java.lang.NullPointerException $r11;

        r0 := @this: java.net.URLClassLoader;

     label1:
        $r4 = r0.<java.net.URLClassLoader: java.util.List searchList>;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label7;

        $r5 = r0.<java.net.URLClassLoader: java.util.List searchList>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object remove(int)>(0);

        r1 = (java.net.URL) $r6;

        if r1 != null goto label2;

        $r11 = new java.lang.NullPointerException;

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("nextCandidate == null");

        throw $r11;

     label2:
        $r7 = r0.<java.net.URLClassLoader: java.util.Map handlerMap>;

        $z1 = interfaceinvoke $r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z1 != 0 goto label6;

        r3 = virtualinvoke r1.<java.net.URL: java.lang.String getProtocol()>();

        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("jar");

        if $z2 == 0 goto label3;

        r2 = specialinvoke r0.<java.net.URLClassLoader: java.net.URLClassLoader$URLHandler createURLJarHandler(java.net.URL)>(r1);

        goto label5;

     label3:
        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("file");

        if $z3 == 0 goto label4;

        r2 = specialinvoke r0.<java.net.URLClassLoader: java.net.URLClassLoader$URLHandler createURLFileHandler(java.net.URL)>(r1);

        goto label5;

     label4:
        r2 = specialinvoke r0.<java.net.URLClassLoader: java.net.URLClassLoader$URLHandler createURLHandler(java.net.URL)>(r1);

     label5:
        if r2 == null goto label6;

        $r8 = r0.<java.net.URLClassLoader: java.util.Map handlerMap>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r10 = r0.<java.net.URLClassLoader: java.util.ArrayList handlerList>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        return;

     label6:
        goto label1;

     label7:
        return;
    }

    private java.net.URLClassLoader$URLHandler createURLHandler(java.net.URL)
    {
        java.net.URLClassLoader r0;
        java.net.URL r1;
        java.net.URLClassLoader$URLHandler $r2;

        r0 := @this: java.net.URLClassLoader;

        r1 := @parameter0: java.net.URL;

        $r2 = new java.net.URLClassLoader$URLHandler;

        specialinvoke $r2.<java.net.URLClassLoader$URLHandler: void <init>(java.net.URLClassLoader,java.net.URL)>(r0, r1);

        return $r2;
    }

    private java.net.URLClassLoader$URLHandler createURLFileHandler(java.net.URL)
    {
        java.net.URLClassLoader r0;
        java.net.URL r1;
        java.net.URLClassLoader$URLFileHandler $r2;

        r0 := @this: java.net.URLClassLoader;

        r1 := @parameter0: java.net.URL;

        $r2 = new java.net.URLClassLoader$URLFileHandler;

        specialinvoke $r2.<java.net.URLClassLoader$URLFileHandler: void <init>(java.net.URLClassLoader,java.net.URL)>(r0, r1);

        return $r2;
    }

    private java.net.URLClassLoader$URLHandler createURLJarHandler(java.net.URL)
    {
        java.net.URLClassLoader r0;
        java.net.URL r1, $r13, r27;
        java.lang.String r2, r3, r8, $r9, $r15, $r16;
        int i0, i1;
        java.net.JarURLConnection r4, $r11;
        java.util.jar.JarFile r5;
        java.net.URLClassLoader$URLJarHandler r6, $r20;
        java.util.jar.Manifest r7;
        boolean $z0;
        java.net.URLConnection $r10, $r18;
        java.lang.StringBuilder $r12, $r14, $r17;
        java.net.URLClassLoader$IndexFile $r19;
        java.util.jar.Attributes $r21;
        java.util.List $r22;
        java.util.jar.Attributes$Name $r23;
        java.io.IOException $r24, $r25;
        java.util.ArrayList $r26;

        r0 := @this: java.net.URLClassLoader;

        r1 := @parameter0: java.net.URL;

        r3 = virtualinvoke r1.<java.net.URL: java.lang.String getFile()>();

        $r9 = virtualinvoke r1.<java.net.URL: java.lang.String getFile()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean endsWith(java.lang.String)>("!/");

        if $z0 == 0 goto label1;

        r2 = "";

        goto label3;

     label1:
        i0 = virtualinvoke r3.<java.lang.String: int lastIndexOf(java.lang.String)>("!/");

        if i0 != -1 goto label2;

        return null;

     label2:
        i1 = i0 + 2;

        r2 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>(i1);

     label3:
        $r10 = virtualinvoke r1.<java.net.URL: java.net.URLConnection openConnection()>();

        $r11 = (java.net.JarURLConnection) $r10;

        r27 = virtualinvoke $r11.<java.net.JarURLConnection: java.net.URL getJarFileURL()>();

        $r13 = new java.net.URL;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke r27.<java.net.URL: java.lang.String toExternalForm()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!/");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.net.URL: void <init>(java.lang.String,java.lang.String,java.lang.String)>("jar", "", $r16);

        $r18 = virtualinvoke $r13.<java.net.URL: java.net.URLConnection openConnection()>();

        r4 = (java.net.JarURLConnection) $r18;

        r5 = virtualinvoke r4.<java.net.JarURLConnection: java.util.jar.JarFile getJarFile()>();

        $r20 = new java.net.URLClassLoader$URLJarHandler;

        specialinvoke $r20.<java.net.URLClassLoader$URLJarHandler: void <init>(java.net.URLClassLoader,java.net.URL,java.net.URL,java.util.jar.JarFile,java.lang.String)>(r0, r1, r27, r5, r2);

        r6 = $r20;

        $r19 = virtualinvoke r6.<java.net.URLClassLoader$URLJarHandler: java.net.URLClassLoader$IndexFile getIndex()>();

        if $r19 != null goto label7;

     label4:
        r7 = virtualinvoke r5.<java.util.jar.JarFile: java.util.jar.Manifest getManifest()>();

        if r7 == null goto label5;

        $r21 = virtualinvoke r7.<java.util.jar.Manifest: java.util.jar.Attributes getMainAttributes()>();

        $r23 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name CLASS_PATH>;

        r8 = virtualinvoke $r21.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r23);

        if r8 == null goto label5;

        $r22 = r0.<java.net.URLClassLoader: java.util.List searchList>;

        $r26 = specialinvoke r0.<java.net.URLClassLoader: java.util.ArrayList getInternalURLs(java.net.URL,java.lang.String)>(r1, r8);

        interfaceinvoke $r22.<java.util.List: boolean addAll(int,java.util.Collection)>(0, $r26);

     label5:
        goto label7;

     label6:
        $r24 := @caughtexception;

     label7:
        return r6;

     label8:
        $r25 := @caughtexception;

        return null;

        catch java.io.IOException from label4 to label5 with label6;
        catch java.io.IOException from label3 to label7 with label8;
    }

    protected java.lang.Package definePackage(java.lang.String, java.util.jar.Manifest, java.net.URL) throws java.lang.IllegalArgumentException
    {
        java.net.URLClassLoader r0;
        java.lang.String r1, r5, r7, r8, r9, r10, r11, r12, $r15;
        java.util.jar.Manifest r2;
        java.net.URL r3, $r24;
        java.util.jar.Attributes r4, r6;
        boolean z0, $z1;
        java.lang.StringBuilder $r13, $r14, $r16;
        java.util.jar.Attributes$Name $r17, $r18, $r19, $r20, $r21, $r22, $r25, $r26, $r27, $r28, $r29, $r30;
        java.lang.Package $r23;

        r0 := @this: java.net.URLClassLoader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.jar.Manifest;

        r3 := @parameter2: java.net.URL;

        r4 = virtualinvoke r2.<java.util.jar.Manifest: java.util.jar.Attributes getMainAttributes()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        r5 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        r6 = virtualinvoke r2.<java.util.jar.Manifest: java.util.jar.Attributes getAttributes(java.lang.String)>(r5);

        z0 = 0;

        if r6 != null goto label1;

        z0 = 1;

        r6 = r4;

     label1:
        $r17 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SPECIFICATION_TITLE>;

        r7 = virtualinvoke r6.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r17);

        if r7 != null goto label2;

        if z0 != 0 goto label2;

        $r29 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SPECIFICATION_TITLE>;

        r7 = virtualinvoke r4.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r29);

     label2:
        $r18 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SPECIFICATION_VERSION>;

        r8 = virtualinvoke r6.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r18);

        if r8 != null goto label3;

        if z0 != 0 goto label3;

        $r30 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SPECIFICATION_VERSION>;

        r8 = virtualinvoke r4.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r30);

     label3:
        $r19 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SPECIFICATION_VENDOR>;

        r9 = virtualinvoke r6.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r19);

        if r9 != null goto label4;

        if z0 != 0 goto label4;

        $r27 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SPECIFICATION_VENDOR>;

        r9 = virtualinvoke r4.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r27);

     label4:
        $r20 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_TITLE>;

        r10 = virtualinvoke r6.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r20);

        if r10 != null goto label5;

        if z0 != 0 goto label5;

        $r28 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_TITLE>;

        r10 = virtualinvoke r4.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r28);

     label5:
        $r21 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_VERSION>;

        r11 = virtualinvoke r6.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r21);

        if r11 != null goto label6;

        if z0 != 0 goto label6;

        $r25 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_VERSION>;

        r11 = virtualinvoke r4.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r25);

     label6:
        $r22 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_VENDOR>;

        r12 = virtualinvoke r6.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r22);

        if r12 != null goto label7;

        if z0 != 0 goto label7;

        $r26 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name IMPLEMENTATION_VENDOR>;

        r12 = virtualinvoke r4.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r26);

     label7:
        $z1 = specialinvoke r0.<java.net.URLClassLoader: boolean isSealed(java.util.jar.Manifest,java.lang.String)>(r2, r5);

        if $z1 == 0 goto label8;

        $r24 = r3;

        goto label9;

     label8:
        $r24 = null;

     label9:
        $r23 = virtualinvoke r0.<java.net.URLClassLoader: java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>(r1, r7, r8, r9, r10, r11, r12, $r24);

        return $r23;
    }

    private boolean isSealed(java.util.jar.Manifest, java.lang.String)
    {
        java.net.URLClassLoader r0;
        java.util.jar.Manifest r1;
        java.lang.String r2, r4, r5;
        java.util.jar.Attributes r3, r8;
        java.util.jar.Attributes$Name $r6, $r7;
        boolean $z0, $z1, $z2;

        r0 := @this: java.net.URLClassLoader;

        r1 := @parameter0: java.util.jar.Manifest;

        r2 := @parameter1: java.lang.String;

        r3 = virtualinvoke r1.<java.util.jar.Manifest: java.util.jar.Attributes getAttributes(java.lang.String)>(r2);

        if r3 == null goto label1;

        $r7 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SEALED>;

        r4 = virtualinvoke r3.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r7);

        if r4 == null goto label1;

        $z2 = virtualinvoke r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        return $z2;

     label1:
        r8 = virtualinvoke r1.<java.util.jar.Manifest: java.util.jar.Attributes getMainAttributes()>();

        $r6 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SEALED>;

        r5 = virtualinvoke r8.<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)>($r6);

        if r5 == null goto label2;

        $z0 = virtualinvoke r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z0 == 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private java.util.ArrayList getInternalURLs(java.net.URL, java.lang.String)
    {
        java.net.URLClassLoader r0;
        java.net.URL r1, r7, $r10, $r11, $r12;
        java.lang.String r2, r5, r6, $r13, r15;
        java.util.StringTokenizer r3, $r8;
        java.util.ArrayList r4, $r9;
        int i0, i1, $i2, $i3, $i4;
        boolean $z0, $z1;
        java.net.MalformedURLException $r14;

        r0 := @this: java.net.URLClassLoader;

        r1 := @parameter0: java.net.URL;

        r2 := @parameter1: java.lang.String;

        $r8 = new java.util.StringTokenizer;

        specialinvoke $r8.<java.util.StringTokenizer: void <init>(java.lang.String)>(r2);

        r3 = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r4 = $r9;

        r5 = virtualinvoke r1.<java.net.URL: java.lang.String getFile()>();

        $i2 = virtualinvoke r5.<java.lang.String: int lastIndexOf(java.lang.String)>("!/");

        i0 = $i2 - 1;

        $i3 = virtualinvoke r5.<java.lang.String: int lastIndexOf(java.lang.String,int)>("/", i0);

        i1 = $i3 + 1;

        if i1 != 0 goto label1;

        $r13 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("file.separator");

        $i4 = virtualinvoke r5.<java.lang.String: int lastIndexOf(java.lang.String,int)>($r13, i0);

        i1 = $i4 + 1;

     label1:
        r15 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

     label2:
        $z0 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreElements()>();

        if $z0 == 0 goto label7;

        r6 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z1 = virtualinvoke r6.<java.lang.String: boolean isEmpty()>();

        if $z1 != 0 goto label6;

     label3:
        $r10 = new java.net.URL;

        $r12 = new java.net.URL;

        specialinvoke $r12.<java.net.URL: void <init>(java.lang.String)>(r15);

        specialinvoke $r10.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r12, r6);

        r7 = $r10;

        $r11 = specialinvoke r0.<java.net.URLClassLoader: java.net.URL createSearchURL(java.net.URL)>(r7);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label4:
        goto label6;

     label5:
        $r14 := @caughtexception;

     label6:
        goto label2;

     label7:
        return r4;

        catch java.net.MalformedURLException from label3 to label4 with label5;
    }

    static java.lang.Package access$000(java.net.URLClassLoader, java.lang.String)
    {
        java.net.URLClassLoader r0;
        java.lang.String r1;
        java.lang.Package $r2;

        r0 := @parameter0: java.net.URLClassLoader;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<java.net.URLClassLoader: java.lang.Package getPackage(java.lang.String)>(r1);

        return $r2;
    }

    static java.lang.Package access$100(java.net.URLClassLoader, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.net.URL) throws java.lang.IllegalArgumentException
    {
        java.net.URLClassLoader r0;
        java.lang.String r1, r2, r3, r4, r5, r6, r7;
        java.net.URL r8;
        java.lang.Package $r9;

        r0 := @parameter0: java.net.URLClassLoader;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        r6 := @parameter6: java.lang.String;

        r7 := @parameter7: java.lang.String;

        r8 := @parameter8: java.net.URL;

        $r9 = virtualinvoke r0.<java.net.URLClassLoader: java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>(r1, r2, r3, r4, r5, r6, r7, r8);

        return $r9;
    }

    static java.lang.Class access$200(java.net.URLClassLoader, java.lang.String, byte[], int, int, java.security.CodeSource)
    {
        java.net.URLClassLoader r0;
        java.lang.String r1;
        byte[] r2;
        int i0, i1;
        java.security.CodeSource r3;
        java.lang.Class $r4;

        r0 := @parameter0: java.net.URLClassLoader;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: byte[];

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r3 := @parameter5: java.security.CodeSource;

        $r4 = virtualinvoke r0.<java.net.URLClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.CodeSource)>(r1, r2, i0, i1, r3);

        return $r4;
    }

    static java.lang.Package access$300(java.net.URLClassLoader, java.lang.String)
    {
        java.net.URLClassLoader r0;
        java.lang.String r1;
        java.lang.Package $r2;

        r0 := @parameter0: java.net.URLClassLoader;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<java.net.URLClassLoader: java.lang.Package getPackage(java.lang.String)>(r1);

        return $r2;
    }

    static java.lang.Package access$400(java.net.URLClassLoader, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.net.URL) throws java.lang.IllegalArgumentException
    {
        java.net.URLClassLoader r0;
        java.lang.String r1, r2, r3, r4, r5, r6, r7;
        java.net.URL r8;
        java.lang.Package $r9;

        r0 := @parameter0: java.net.URLClassLoader;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        r6 := @parameter6: java.lang.String;

        r7 := @parameter7: java.lang.String;

        r8 := @parameter8: java.net.URL;

        $r9 = virtualinvoke r0.<java.net.URLClassLoader: java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>(r1, r2, r3, r4, r5, r6, r7, r8);

        return $r9;
    }

    static boolean access$500(java.net.URLClassLoader, java.util.jar.Manifest, java.lang.String)
    {
        java.net.URLClassLoader r0;
        java.util.jar.Manifest r1;
        java.lang.String r2;
        boolean $z0;

        r0 := @parameter0: java.net.URLClassLoader;

        r1 := @parameter1: java.util.jar.Manifest;

        r2 := @parameter2: java.lang.String;

        $z0 = specialinvoke r0.<java.net.URLClassLoader: boolean isSealed(java.util.jar.Manifest,java.lang.String)>(r1, r2);

        return $z0;
    }

    static java.lang.Class access$600(java.net.URLClassLoader, java.lang.String, byte[], int, int, java.security.CodeSource)
    {
        java.net.URLClassLoader r0;
        java.lang.String r1;
        byte[] r2;
        int i0, i1;
        java.security.CodeSource r3;
        java.lang.Class $r4;

        r0 := @parameter0: java.net.URLClassLoader;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: byte[];

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r3 := @parameter5: java.security.CodeSource;

        $r4 = virtualinvoke r0.<java.net.URLClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.CodeSource)>(r1, r2, i0, i1, r3);

        return $r4;
    }

    static java.net.URLClassLoader$URLHandler access$700(java.net.URLClassLoader, java.net.URL)
    {
        java.net.URLClassLoader r0;
        java.net.URL r1;
        java.net.URLClassLoader$URLHandler $r2;

        r0 := @parameter0: java.net.URLClassLoader;

        r1 := @parameter1: java.net.URL;

        $r2 = specialinvoke r0.<java.net.URLClassLoader: java.net.URLClassLoader$URLHandler createURLJarHandler(java.net.URL)>(r1);

        return $r2;
    }

    static java.net.URLClassLoader$URLHandler access$800(java.net.URLClassLoader, java.net.URL)
    {
        java.net.URLClassLoader r0;
        java.net.URL r1;
        java.net.URLClassLoader$URLHandler $r2;

        r0 := @parameter0: java.net.URLClassLoader;

        r1 := @parameter1: java.net.URL;

        $r2 = specialinvoke r0.<java.net.URLClassLoader: java.net.URLClassLoader$URLHandler createURLHandler(java.net.URL)>(r1);

        return $r2;
    }
}
