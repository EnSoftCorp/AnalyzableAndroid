public abstract class java.lang.ref.Reference extends java.lang.Object
{
    private static boolean disableIntrinsic;
    private static boolean slowPathEnabled;
    volatile java.lang.Object referent;
    volatile java.lang.ref.ReferenceQueue queue;
    volatile java.lang.ref.Reference queueNext;
    public volatile java.lang.ref.Reference pendingNext;

    void <init>()
    {
        java.lang.ref.Reference r0;

        r0 := @this: java.lang.ref.Reference;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(java.lang.Object, java.lang.ref.ReferenceQueue)
    {
        java.lang.ref.Reference r0;
        java.lang.Object r1;
        java.lang.ref.ReferenceQueue r2;

        r0 := @this: java.lang.ref.Reference;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.ref.ReferenceQueue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.lang.ref.Reference: java.lang.Object referent> = r1;

        r0.<java.lang.ref.Reference: java.lang.ref.ReferenceQueue queue> = r2;

        return;
    }

    public void clear()
    {
        java.lang.ref.Reference r0;

        r0 := @this: java.lang.ref.Reference;

        r0.<java.lang.ref.Reference: java.lang.Object referent> = null;

        return;
    }

    public final synchronized boolean enqueueInternal()
    {
        java.lang.ref.Reference r0, $r2;
        java.lang.ref.ReferenceQueue $r1, $r3;

        r0 := @this: java.lang.ref.Reference;

        $r1 = r0.<java.lang.ref.Reference: java.lang.ref.ReferenceQueue queue>;

        if $r1 == null goto label1;

        $r2 = r0.<java.lang.ref.Reference: java.lang.ref.Reference queueNext>;

        if $r2 != null goto label1;

        $r3 = r0.<java.lang.ref.Reference: java.lang.ref.ReferenceQueue queue>;

        virtualinvoke $r3.<java.lang.ref.ReferenceQueue: void enqueue(java.lang.ref.Reference)>(r0);

        r0.<java.lang.ref.Reference: java.lang.ref.ReferenceQueue queue> = null;

        return 1;

     label1:
        return 0;
    }

    public boolean enqueue()
    {
        java.lang.ref.Reference r0;
        boolean $z0;

        r0 := @this: java.lang.ref.Reference;

        $z0 = virtualinvoke r0.<java.lang.ref.Reference: boolean enqueueInternal()>();

        return $z0;
    }

    public java.lang.Object get()
    {
        java.lang.ref.Reference r0;
        java.lang.Object $r1;

        r0 := @this: java.lang.ref.Reference;

        $r1 = specialinvoke r0.<java.lang.ref.Reference: java.lang.Object getReferent()>();

        return $r1;
    }

    private final native java.lang.Object getReferent();

    public boolean isEnqueued()
    {
        java.lang.ref.Reference r0, $r1;
        boolean $z0;

        r0 := @this: java.lang.ref.Reference;

        $r1 = r0.<java.lang.ref.Reference: java.lang.ref.Reference queueNext>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void <clinit>()
    {
        <java.lang.ref.Reference: boolean disableIntrinsic> = 0;

        <java.lang.ref.Reference: boolean slowPathEnabled> = 0;

        return;
    }
}
