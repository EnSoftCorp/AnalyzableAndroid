public class java.text.DateFormatSymbols extends java.lang.Object implements java.io.Serializable, java.lang.Cloneable
{
    private static final long serialVersionUID;
    private java.lang.String localPatternChars;
    java.lang.String[] ampms;
    java.lang.String[] eras;
    java.lang.String[] months;
    java.lang.String[] shortMonths;
    java.lang.String[] shortWeekdays;
    java.lang.String[] weekdays;
    transient libcore.icu.LocaleData localeData;
    private java.lang.String[][] zoneStrings;
    private final java.util.Locale locale;

    synchronized java.lang.String[][] internalZoneStrings()
    {
        java.text.DateFormatSymbols r0;
        java.lang.String[][] $r1, $r2, $r4;
        java.util.Locale $r3;

        r0 := @this: java.text.DateFormatSymbols;

        $r1 = r0.<java.text.DateFormatSymbols: java.lang.String[][] zoneStrings>;

        if $r1 != null goto label1;

        $r3 = r0.<java.text.DateFormatSymbols: java.util.Locale locale>;

        $r4 = staticinvoke <libcore.icu.TimeZoneNames: java.lang.String[][] getZoneStrings(java.util.Locale)>($r3);

        r0.<java.text.DateFormatSymbols: java.lang.String[][] zoneStrings> = $r4;

     label1:
        $r2 = r0.<java.text.DateFormatSymbols: java.lang.String[][] zoneStrings>;

        return $r2;
    }

    public void <init>()
    {
        java.text.DateFormatSymbols r0;
        java.util.Locale $r1;

        r0 := @this: java.text.DateFormatSymbols;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke r0.<java.text.DateFormatSymbols: void <init>(java.util.Locale)>($r1);

        return;
    }

    public void <init>(java.util.Locale)
    {
        java.text.DateFormatSymbols r0;
        java.util.Locale r1, $r2;
        libcore.icu.LocaleData $r3, $r4, $r6, $r8, $r10, $r12, $r14;
        java.lang.String[] $r5, $r7, $r9, $r11, $r13, $r15;

        r0 := @this: java.text.DateFormatSymbols;

        r1 := @parameter0: java.util.Locale;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <libcore.icu.LocaleData: java.util.Locale mapInvalidAndNullLocales(java.util.Locale)>(r1);

        r0.<java.text.DateFormatSymbols: java.util.Locale locale> = $r2;

        r0.<java.text.DateFormatSymbols: java.lang.String localPatternChars> = "GyMdkHmsSEDFwWahKzZLc";

        $r3 = staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>(r1);

        r0.<java.text.DateFormatSymbols: libcore.icu.LocaleData localeData> = $r3;

        $r4 = r0.<java.text.DateFormatSymbols: libcore.icu.LocaleData localeData>;

        $r5 = $r4.<libcore.icu.LocaleData: java.lang.String[] amPm>;

        r0.<java.text.DateFormatSymbols: java.lang.String[] ampms> = $r5;

        $r6 = r0.<java.text.DateFormatSymbols: libcore.icu.LocaleData localeData>;

        $r7 = $r6.<libcore.icu.LocaleData: java.lang.String[] eras>;

        r0.<java.text.DateFormatSymbols: java.lang.String[] eras> = $r7;

        $r8 = r0.<java.text.DateFormatSymbols: libcore.icu.LocaleData localeData>;

        $r9 = $r8.<libcore.icu.LocaleData: java.lang.String[] longMonthNames>;

        r0.<java.text.DateFormatSymbols: java.lang.String[] months> = $r9;

        $r10 = r0.<java.text.DateFormatSymbols: libcore.icu.LocaleData localeData>;

        $r11 = $r10.<libcore.icu.LocaleData: java.lang.String[] shortMonthNames>;

        r0.<java.text.DateFormatSymbols: java.lang.String[] shortMonths> = $r11;

        $r12 = r0.<java.text.DateFormatSymbols: libcore.icu.LocaleData localeData>;

        $r13 = $r12.<libcore.icu.LocaleData: java.lang.String[] longWeekdayNames>;

        r0.<java.text.DateFormatSymbols: java.lang.String[] weekdays> = $r13;

        $r14 = r0.<java.text.DateFormatSymbols: libcore.icu.LocaleData localeData>;

        $r15 = $r14.<libcore.icu.LocaleData: java.lang.String[] shortWeekdayNames>;

        r0.<java.text.DateFormatSymbols: java.lang.String[] shortWeekdays> = $r15;

        return;
    }

    public static final java.text.DateFormatSymbols getInstance()
    {
        java.util.Locale $r0;
        java.text.DateFormatSymbols $r1;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = staticinvoke <java.text.DateFormatSymbols: java.text.DateFormatSymbols getInstance(java.util.Locale)>($r0);

        return $r1;
    }

    public static final java.text.DateFormatSymbols getInstance(java.util.Locale)
    {
        java.util.Locale r0;
        java.text.DateFormatSymbols $r1;
        java.lang.NullPointerException $r2;

        r0 := @parameter0: java.util.Locale;

        if r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("locale == null");

        throw $r2;

     label1:
        $r1 = new java.text.DateFormatSymbols;

        specialinvoke $r1.<java.text.DateFormatSymbols: void <init>(java.util.Locale)>(r0);

        return $r1;
    }

    public static java.util.Locale[] getAvailableLocales()
    {
        java.util.Locale[] $r0;

        $r0 = staticinvoke <libcore.icu.ICU: java.util.Locale[] getAvailableDateFormatSymbolsLocales()>();

        return $r0;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.text.DateFormatSymbols r0;
        java.io.ObjectInputStream r1;
        java.util.Locale r2;
        libcore.icu.LocaleData $r3;

        r0 := @this: java.text.DateFormatSymbols;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        r2 = r0.<java.text.DateFormatSymbols: java.util.Locale locale>;

        if r2 != null goto label1;

        r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label1:
        $r3 = staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>(r2);

        r0.<java.text.DateFormatSymbols: libcore.icu.LocaleData localeData> = $r3;

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.text.DateFormatSymbols r0;
        java.io.ObjectOutputStream r1;

        r0 := @this: java.text.DateFormatSymbols;

        r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r0.<java.text.DateFormatSymbols: java.lang.String[][] internalZoneStrings()>();

        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        return;
    }

    public java.lang.Object clone()
    {
        java.text.DateFormatSymbols r0;
        java.lang.Object $r2;
        java.lang.CloneNotSupportedException $r3;
        java.lang.AssertionError $r4;

        r0 := @this: java.text.DateFormatSymbols;

     label1:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public boolean equals(java.lang.Object)
    {
        java.text.DateFormatSymbols r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.String $r3, $r4;
        java.lang.String[] $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;

        r0 := @this: java.text.DateFormatSymbols;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof java.text.DateFormatSymbols;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (java.text.DateFormatSymbols) r1;

        $r4 = r0.<java.text.DateFormatSymbols: java.lang.String localPatternChars>;

        $r3 = r2.<java.text.DateFormatSymbols: java.lang.String localPatternChars>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

        $r6 = r0.<java.text.DateFormatSymbols: java.lang.String[] ampms>;

        $r5 = r2.<java.text.DateFormatSymbols: java.lang.String[] ampms>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r6, $r5);

        if $z2 == 0 goto label3;

        $r8 = r0.<java.text.DateFormatSymbols: java.lang.String[] eras>;

        $r7 = r2.<java.text.DateFormatSymbols: java.lang.String[] eras>;

        $z3 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r8, $r7);

        if $z3 == 0 goto label3;

        $r10 = r0.<java.text.DateFormatSymbols: java.lang.String[] months>;

        $r9 = r2.<java.text.DateFormatSymbols: java.lang.String[] months>;

        $z4 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r10, $r9);

        if $z4 == 0 goto label3;

        $r11 = r0.<java.text.DateFormatSymbols: java.lang.String[] shortMonths>;

        $r12 = r2.<java.text.DateFormatSymbols: java.lang.String[] shortMonths>;

        $z5 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r11, $r12);

        if $z5 == 0 goto label3;

        $r14 = r0.<java.text.DateFormatSymbols: java.lang.String[] shortWeekdays>;

        $r13 = r2.<java.text.DateFormatSymbols: java.lang.String[] shortWeekdays>;

        $z6 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r14, $r13);

        if $z6 == 0 goto label3;

        $r15 = r0.<java.text.DateFormatSymbols: java.lang.String[] weekdays>;

        $r16 = r2.<java.text.DateFormatSymbols: java.lang.String[] weekdays>;

        $z8 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r15, $r16);

        if $z8 == 0 goto label3;

        $z7 = staticinvoke <java.text.DateFormatSymbols: boolean timeZoneStringsEqual(java.text.DateFormatSymbols,java.text.DateFormatSymbols)>(r0, r2);

        if $z7 == 0 goto label3;

        $z9 = 1;

        goto label4;

     label3:
        $z9 = 0;

     label4:
        return $z9;
    }

    private static boolean timeZoneStringsEqual(java.text.DateFormatSymbols, java.text.DateFormatSymbols)
    {
        java.text.DateFormatSymbols r0, r1;
        java.lang.String[][] $r2, $r3, $r4, $r5;
        boolean $z0, $z1;
        java.util.Locale $r6, $r7;

        r0 := @parameter0: java.text.DateFormatSymbols;

        r1 := @parameter1: java.text.DateFormatSymbols;

        $r2 = r0.<java.text.DateFormatSymbols: java.lang.String[][] zoneStrings>;

        if $r2 != null goto label1;

        $r5 = r1.<java.text.DateFormatSymbols: java.lang.String[][] zoneStrings>;

        if $r5 != null goto label1;

        $r7 = r0.<java.text.DateFormatSymbols: java.util.Locale locale>;

        $r6 = r1.<java.text.DateFormatSymbols: java.util.Locale locale>;

        $z1 = virtualinvoke $r7.<java.util.Locale: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        $r3 = virtualinvoke r0.<java.text.DateFormatSymbols: java.lang.String[][] internalZoneStrings()>();

        $r4 = virtualinvoke r1.<java.text.DateFormatSymbols: java.lang.String[][] internalZoneStrings()>();

        $z0 = staticinvoke <java.util.Arrays: boolean deepEquals(java.lang.Object[],java.lang.Object[])>($r3, $r4);

        return $z0;
    }

    public java.lang.String toString()
    {
        java.text.DateFormatSymbols r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r8, $r9, $r12, $r13, $r15, $r17, $r18, $r21, $r22, $r25, $r26, $r29, $r30, $r34, $r36, $r38, $r39;
        java.lang.Class $r2;
        java.lang.String $r3, $r7, $r11, $r14, $r19, $r23, $r27, $r31, $r33, $r37;
        java.lang.String[] $r6, $r10, $r16, $r20, $r24, $r28, $r32;
        java.lang.String[][] $r35;

        r0 := @this: java.text.DateFormatSymbols;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[amPmStrings=");

        $r6 = r0.<java.text.DateFormatSymbols: java.lang.String[] ampms>;

        $r7 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r6);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",eras=");

        $r10 = r0.<java.text.DateFormatSymbols: java.lang.String[] eras>;

        $r11 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r10);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",localPatternChars=");

        $r14 = r0.<java.text.DateFormatSymbols: java.lang.String localPatternChars>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",months=");

        $r16 = r0.<java.text.DateFormatSymbols: java.lang.String[] months>;

        $r19 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",shortMonths=");

        $r20 = r0.<java.text.DateFormatSymbols: java.lang.String[] shortMonths>;

        $r23 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",shortWeekdays=");

        $r24 = r0.<java.text.DateFormatSymbols: java.lang.String[] shortWeekdays>;

        $r27 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",weekdays=");

        $r28 = r0.<java.text.DateFormatSymbols: java.lang.String[] weekdays>;

        $r31 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",zoneStrings=[");

        $r35 = virtualinvoke r0.<java.text.DateFormatSymbols: java.lang.String[][] internalZoneStrings()>();

        $r32 = $r35[0];

        $r33 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r32);

        $r38 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...]");

        $r36 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r37;
    }

    public java.lang.String[] getAmPmStrings()
    {
        java.text.DateFormatSymbols r0;
        java.lang.String[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: java.text.DateFormatSymbols;

        $r1 = r0.<java.text.DateFormatSymbols: java.lang.String[] ampms>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (java.lang.String[]) $r2;

        return $r3;
    }

    public java.lang.String[] getEras()
    {
        java.text.DateFormatSymbols r0;
        java.lang.String[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: java.text.DateFormatSymbols;

        $r1 = r0.<java.text.DateFormatSymbols: java.lang.String[] eras>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (java.lang.String[]) $r2;

        return $r3;
    }

    public java.lang.String getLocalPatternChars()
    {
        java.text.DateFormatSymbols r0;
        java.lang.String $r1;

        r0 := @this: java.text.DateFormatSymbols;

        $r1 = r0.<java.text.DateFormatSymbols: java.lang.String localPatternChars>;

        return $r1;
    }

    public java.lang.String[] getMonths()
    {
        java.text.DateFormatSymbols r0;
        java.lang.String[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: java.text.DateFormatSymbols;

        $r1 = r0.<java.text.DateFormatSymbols: java.lang.String[] months>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (java.lang.String[]) $r2;

        return $r3;
    }

    public java.lang.String[] getShortMonths()
    {
        java.text.DateFormatSymbols r0;
        java.lang.String[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: java.text.DateFormatSymbols;

        $r1 = r0.<java.text.DateFormatSymbols: java.lang.String[] shortMonths>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (java.lang.String[]) $r2;

        return $r3;
    }

    public java.lang.String[] getShortWeekdays()
    {
        java.text.DateFormatSymbols r0;
        java.lang.String[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: java.text.DateFormatSymbols;

        $r1 = r0.<java.text.DateFormatSymbols: java.lang.String[] shortWeekdays>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (java.lang.String[]) $r2;

        return $r3;
    }

    public java.lang.String[] getWeekdays()
    {
        java.text.DateFormatSymbols r0;
        java.lang.String[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: java.text.DateFormatSymbols;

        $r1 = r0.<java.text.DateFormatSymbols: java.lang.String[] weekdays>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (java.lang.String[]) $r2;

        return $r3;
    }

    public java.lang.String[][] getZoneStrings()
    {
        java.text.DateFormatSymbols r0;
        java.lang.String[][] r1, r2, $r5;
        int i0, i1;
        java.lang.String[] r3;
        java.lang.String r4, $r6, $r7, $r8, $r9, $r12, $r15, $r18, $r21;
        java.util.TimeZone $r10, $r14, $r17, $r20;
        java.util.Locale $r11, $r13, $r16, $r19;

        r0 := @this: java.text.DateFormatSymbols;

        $r5 = virtualinvoke r0.<java.text.DateFormatSymbols: java.lang.String[][] internalZoneStrings()>();

        r1 = staticinvoke <java.text.DateFormatSymbols: java.lang.String[][] clone2dStringArray(java.lang.String[][])>($r5);

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        r3 = r2[i1];

        r4 = r3[0];

        $r6 = r3[1];

        if $r6 != null goto label2;

        $r20 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(r4);

        $r19 = r0.<java.text.DateFormatSymbols: java.util.Locale locale>;

        $r21 = virtualinvoke $r20.<java.util.TimeZone: java.lang.String getDisplayName(boolean,int,java.util.Locale)>(0, 1, $r19);

        r3[1] = $r21;

     label2:
        $r7 = r3[2];

        if $r7 != null goto label3;

        $r17 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(r4);

        $r16 = r0.<java.text.DateFormatSymbols: java.util.Locale locale>;

        $r18 = virtualinvoke $r17.<java.util.TimeZone: java.lang.String getDisplayName(boolean,int,java.util.Locale)>(0, 0, $r16);

        r3[2] = $r18;

     label3:
        $r8 = r3[3];

        if $r8 != null goto label4;

        $r14 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(r4);

        $r13 = r0.<java.text.DateFormatSymbols: java.util.Locale locale>;

        $r15 = virtualinvoke $r14.<java.util.TimeZone: java.lang.String getDisplayName(boolean,int,java.util.Locale)>(1, 1, $r13);

        r3[3] = $r15;

     label4:
        $r9 = r3[4];

        if $r9 != null goto label5;

        $r10 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(r4);

        $r11 = r0.<java.text.DateFormatSymbols: java.util.Locale locale>;

        $r12 = virtualinvoke $r10.<java.util.TimeZone: java.lang.String getDisplayName(boolean,int,java.util.Locale)>(1, 0, $r11);

        r3[4] = $r12;

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        return r1;
    }

    private static java.lang.String[][] clone2dStringArray(java.lang.String[][])
    {
        java.lang.String[][] r0, r1;
        int i0, $i1, $i2;
        java.lang.String[] $r2, $r4;
        java.lang.Object $r3;

        r0 := @parameter0: java.lang.String[][];

        $i1 = lengthof r0;

        r1 = newarray (java.lang.String[])[$i1];

        i0 = 0;

     label1:
        $i2 = lengthof r0;

        if i0 >= $i2 goto label2;

        $r2 = r0[i0];

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (java.lang.String[]) $r3;

        r1[i0] = $r4;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r1;
    }

    public int hashCode()
    {
        java.text.DateFormatSymbols r0;
        java.lang.String[][] r1, r17;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23;
        java.lang.String[] r2, r7, r9, r11, r13, r15, r18;
        java.lang.String r3, $r4, $r5, $r6, r8, r10, r12, r14, r16;

        r0 := @this: java.text.DateFormatSymbols;

        r1 = virtualinvoke r0.<java.text.DateFormatSymbols: java.lang.String[][] internalZoneStrings()>();

        $r4 = r0.<java.text.DateFormatSymbols: java.lang.String localPatternChars>;

        i0 = virtualinvoke $r4.<java.lang.String: int hashCode()>();

        r2 = r0.<java.text.DateFormatSymbols: java.lang.String[] ampms>;

        i1 = lengthof r2;

        i2 = 0;

     label01:
        if i2 >= i1 goto label02;

        r3 = r2[i2];

        $i11 = virtualinvoke r3.<java.lang.String: int hashCode()>();

        i0 = i0 + $i11;

        i2 = i2 + 1;

        goto label01;

     label02:
        r7 = r0.<java.text.DateFormatSymbols: java.lang.String[] eras>;

        i12 = lengthof r7;

        i13 = 0;

     label03:
        if i13 >= i12 goto label04;

        r8 = r7[i13];

        $i9 = virtualinvoke r8.<java.lang.String: int hashCode()>();

        i0 = i0 + $i9;

        i13 = i13 + 1;

        goto label03;

     label04:
        r9 = r0.<java.text.DateFormatSymbols: java.lang.String[] months>;

        i14 = lengthof r9;

        i15 = 0;

     label05:
        if i15 >= i14 goto label06;

        r10 = r9[i15];

        $i10 = virtualinvoke r10.<java.lang.String: int hashCode()>();

        i0 = i0 + $i10;

        i15 = i15 + 1;

        goto label05;

     label06:
        r11 = r0.<java.text.DateFormatSymbols: java.lang.String[] shortMonths>;

        i16 = lengthof r11;

        i17 = 0;

     label07:
        if i17 >= i16 goto label08;

        r12 = r11[i17];

        $i7 = virtualinvoke r12.<java.lang.String: int hashCode()>();

        i0 = i0 + $i7;

        i17 = i17 + 1;

        goto label07;

     label08:
        r13 = r0.<java.text.DateFormatSymbols: java.lang.String[] shortWeekdays>;

        i18 = lengthof r13;

        i19 = 0;

     label09:
        if i19 >= i18 goto label10;

        r14 = r13[i19];

        $i8 = virtualinvoke r14.<java.lang.String: int hashCode()>();

        i0 = i0 + $i8;

        i19 = i19 + 1;

        goto label09;

     label10:
        r15 = r0.<java.text.DateFormatSymbols: java.lang.String[] weekdays>;

        i20 = lengthof r15;

        i21 = 0;

     label11:
        if i21 >= i20 goto label12;

        r16 = r15[i21];

        $i6 = virtualinvoke r16.<java.lang.String: int hashCode()>();

        i0 = i0 + $i6;

        i21 = i21 + 1;

        goto label11;

     label12:
        r17 = r1;

        i22 = lengthof r17;

        i23 = 0;

     label13:
        if i23 >= i22 goto label17;

        r18 = r17[i23];

        i3 = 0;

     label14:
        $i4 = lengthof r18;

        if i3 >= $i4 goto label16;

        $r5 = r18[i3];

        if $r5 == null goto label15;

        $r6 = r18[i3];

        $i5 = virtualinvoke $r6.<java.lang.String: int hashCode()>();

        i0 = i0 + $i5;

     label15:
        i3 = i3 + 1;

        goto label14;

     label16:
        i23 = i23 + 1;

        goto label13;

     label17:
        return i0;
    }

    public void setAmPmStrings(java.lang.String[])
    {
        java.text.DateFormatSymbols r0;
        java.lang.String[] r1, $r3;
        java.lang.Object $r2;

        r0 := @this: java.text.DateFormatSymbols;

        r1 := @parameter0: java.lang.String[];

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (java.lang.String[]) $r2;

        r0.<java.text.DateFormatSymbols: java.lang.String[] ampms> = $r3;

        return;
    }

    public void setEras(java.lang.String[])
    {
        java.text.DateFormatSymbols r0;
        java.lang.String[] r1, $r3;
        java.lang.Object $r2;

        r0 := @this: java.text.DateFormatSymbols;

        r1 := @parameter0: java.lang.String[];

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (java.lang.String[]) $r2;

        r0.<java.text.DateFormatSymbols: java.lang.String[] eras> = $r3;

        return;
    }

    public void setLocalPatternChars(java.lang.String)
    {
        java.text.DateFormatSymbols r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;

        r0 := @this: java.text.DateFormatSymbols;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("data == null");

        throw $r2;

     label1:
        r0.<java.text.DateFormatSymbols: java.lang.String localPatternChars> = r1;

        return;
    }

    public void setMonths(java.lang.String[])
    {
        java.text.DateFormatSymbols r0;
        java.lang.String[] r1, $r3;
        java.lang.Object $r2;

        r0 := @this: java.text.DateFormatSymbols;

        r1 := @parameter0: java.lang.String[];

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (java.lang.String[]) $r2;

        r0.<java.text.DateFormatSymbols: java.lang.String[] months> = $r3;

        return;
    }

    public void setShortMonths(java.lang.String[])
    {
        java.text.DateFormatSymbols r0;
        java.lang.String[] r1, $r3;
        java.lang.Object $r2;

        r0 := @this: java.text.DateFormatSymbols;

        r1 := @parameter0: java.lang.String[];

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (java.lang.String[]) $r2;

        r0.<java.text.DateFormatSymbols: java.lang.String[] shortMonths> = $r3;

        return;
    }

    public void setShortWeekdays(java.lang.String[])
    {
        java.text.DateFormatSymbols r0;
        java.lang.String[] r1, $r3;
        java.lang.Object $r2;

        r0 := @this: java.text.DateFormatSymbols;

        r1 := @parameter0: java.lang.String[];

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (java.lang.String[]) $r2;

        r0.<java.text.DateFormatSymbols: java.lang.String[] shortWeekdays> = $r3;

        return;
    }

    public void setWeekdays(java.lang.String[])
    {
        java.text.DateFormatSymbols r0;
        java.lang.String[] r1, $r3;
        java.lang.Object $r2;

        r0 := @this: java.text.DateFormatSymbols;

        r1 := @parameter0: java.lang.String[];

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (java.lang.String[]) $r2;

        r0.<java.text.DateFormatSymbols: java.lang.String[] weekdays> = $r3;

        return;
    }

    public void setZoneStrings(java.lang.String[][])
    {
        java.text.DateFormatSymbols r0;
        java.lang.String[][] r1, r2, $r4;
        int i0, i1, $i2;
        java.lang.String[] r3;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r8, $r9;
        java.lang.String $r7, $r10;
        java.lang.NullPointerException $r11;

        r0 := @this: java.text.DateFormatSymbols;

        r1 := @parameter0: java.lang.String[][];

        if r1 != null goto label1;

        $r11 = new java.lang.NullPointerException;

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("zoneStrings == null");

        throw $r11;

     label1:
        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r3 = r2[i1];

        $i2 = lengthof r3;

        if $i2 >= 5 goto label3;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r3);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".length < 5");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $r4 = staticinvoke <java.text.DateFormatSymbols: java.lang.String[][] clone2dStringArray(java.lang.String[][])>(r1);

        r0.<java.text.DateFormatSymbols: java.lang.String[][] zoneStrings> = $r4;

        return;
    }

    java.lang.String getTimeZoneDisplayName(java.util.TimeZone, boolean, int)
    {
        java.text.DateFormatSymbols r0;
        java.util.TimeZone r1;
        boolean z0;
        int i0;
        java.lang.String[][] r2;
        java.lang.String $r3, $r4, $r9;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: java.text.DateFormatSymbols;

        r1 := @parameter0: java.util.TimeZone;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        if i0 == 0 goto label1;

        if i0 == 1 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad style: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        r2 = virtualinvoke r0.<java.text.DateFormatSymbols: java.lang.String[][] internalZoneStrings()>();

        $r3 = virtualinvoke r1.<java.util.TimeZone: java.lang.String getID()>();

        $r4 = staticinvoke <libcore.icu.TimeZoneNames: java.lang.String getDisplayName(java.lang.String[][],java.lang.String,boolean,int)>(r2, $r3, z0, i0);

        return $r4;
    }

    public static void <clinit>()
    {
        <java.text.DateFormatSymbols: long serialVersionUID> = -5987973545549424702L;

        return;
    }
}
