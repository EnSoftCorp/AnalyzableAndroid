class java.nio.ServerSocketChannelImpl$ServerSocketAdapter extends java.net.ServerSocket
{
    private final java.nio.ServerSocketChannelImpl channelImpl;

    void <init>(java.nio.ServerSocketChannelImpl) throws java.io.IOException
    {
        java.nio.ServerSocketChannelImpl$ServerSocketAdapter r0;
        java.nio.ServerSocketChannelImpl r1;

        r0 := @this: java.nio.ServerSocketChannelImpl$ServerSocketAdapter;

        r1 := @parameter0: java.nio.ServerSocketChannelImpl;

        specialinvoke r0.<java.net.ServerSocket: void <init>()>();

        r0.<java.nio.ServerSocketChannelImpl$ServerSocketAdapter: java.nio.ServerSocketChannelImpl channelImpl> = r1;

        return;
    }

    public java.net.Socket accept() throws java.io.IOException
    {
        java.nio.ServerSocketChannelImpl$ServerSocketAdapter r0;
        java.nio.channels.SocketChannel r1;
        boolean $z0;
        java.nio.ServerSocketChannelImpl $r2;
        java.net.Socket $r3;
        java.nio.channels.IllegalBlockingModeException $r4, $r5;

        r0 := @this: java.nio.ServerSocketChannelImpl$ServerSocketAdapter;

        $z0 = virtualinvoke r0.<java.nio.ServerSocketChannelImpl$ServerSocketAdapter: boolean isBound()>();

        if $z0 != 0 goto label1;

        $r5 = new java.nio.channels.IllegalBlockingModeException;

        specialinvoke $r5.<java.nio.channels.IllegalBlockingModeException: void <init>()>();

        throw $r5;

     label1:
        $r2 = r0.<java.nio.ServerSocketChannelImpl$ServerSocketAdapter: java.nio.ServerSocketChannelImpl channelImpl>;

        r1 = virtualinvoke $r2.<java.nio.ServerSocketChannelImpl: java.nio.channels.SocketChannel accept()>();

        if r1 != null goto label2;

        $r4 = new java.nio.channels.IllegalBlockingModeException;

        specialinvoke $r4.<java.nio.channels.IllegalBlockingModeException: void <init>()>();

        throw $r4;

     label2:
        $r3 = virtualinvoke r1.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        return $r3;
    }

    public java.net.Socket implAccept(java.nio.SocketChannelImpl) throws java.io.IOException
    {
        java.nio.ServerSocketChannelImpl$ServerSocketAdapter r0, r3;
        java.nio.SocketChannelImpl r1;
        java.net.Socket r2;
        boolean z0, z1;
        java.net.InetSocketAddress r4, $r8;
        java.lang.Throwable r5, r6, $r10, $r11;
        java.net.InetAddress $r9;
        int $i0;

        r0 := @this: java.nio.ServerSocketChannelImpl$ServerSocketAdapter;

        r1 := @parameter0: java.nio.SocketChannelImpl;

        r2 = virtualinvoke r1.<java.nio.SocketChannelImpl: java.net.Socket socket()>();

        z0 = 0;

     label01:
        r3 = r0;

        entermonitor r0;

     label02:
        specialinvoke r0.<java.net.ServerSocket: void implAccept(java.net.Socket)>(r2);

        $r8 = new java.net.InetSocketAddress;

        $r9 = virtualinvoke r2.<java.net.Socket: java.net.InetAddress getInetAddress()>();

        $i0 = virtualinvoke r2.<java.net.Socket: int getPort()>();

        specialinvoke $r8.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r9, $i0);

        r4 = $r8;

        virtualinvoke r1.<java.nio.SocketChannelImpl: void onAccept(java.net.InetSocketAddress,boolean)>(r4, 0);

        exitmonitor r3;

     label03:
        goto label06;

     label04:
        $r10 := @caughtexception;

        r5 = $r10;

        exitmonitor r3;

     label05:
        throw r5;

     label06:
        z1 = 1;

     label07:
        if z1 != 0 goto label11;

        virtualinvoke r2.<java.net.Socket: void close()>();

        goto label11;

     label08:
        $r11 := @caughtexception;

        r6 = $r11;

     label09:
        if z0 != 0 goto label10;

        virtualinvoke r2.<java.net.Socket: void close()>();

     label10:
        throw r6;

     label11:
        return r2;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public java.nio.channels.ServerSocketChannel getChannel()
    {
        java.nio.ServerSocketChannelImpl$ServerSocketAdapter r0;
        java.nio.ServerSocketChannelImpl $r1;

        r0 := @this: java.nio.ServerSocketChannelImpl$ServerSocketAdapter;

        $r1 = r0.<java.nio.ServerSocketChannelImpl$ServerSocketAdapter: java.nio.ServerSocketChannelImpl channelImpl>;

        return $r1;
    }

    public void close() throws java.io.IOException
    {
        java.nio.ServerSocketChannelImpl$ServerSocketAdapter r0;
        java.nio.ServerSocketChannelImpl r1, $r3, $r4, $r5;
        java.lang.Throwable r2, $r6;
        boolean $z0;

        r0 := @this: java.nio.ServerSocketChannelImpl$ServerSocketAdapter;

        $r3 = r0.<java.nio.ServerSocketChannelImpl$ServerSocketAdapter: java.nio.ServerSocketChannelImpl channelImpl>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<java.net.ServerSocket: void close()>();

        $r4 = r0.<java.nio.ServerSocketChannelImpl$ServerSocketAdapter: java.nio.ServerSocketChannelImpl channelImpl>;

        $z0 = virtualinvoke $r4.<java.nio.ServerSocketChannelImpl: boolean isOpen()>();

        if $z0 == 0 goto label2;

        $r5 = r0.<java.nio.ServerSocketChannelImpl$ServerSocketAdapter: java.nio.ServerSocketChannelImpl channelImpl>;

        virtualinvoke $r5.<java.nio.ServerSocketChannelImpl: void close()>();

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private java.io.FileDescriptor getFD$()
    {
        java.nio.ServerSocketChannelImpl$ServerSocketAdapter r0;
        java.net.SocketImpl $r1;
        java.io.FileDescriptor $r2;

        r0 := @this: java.nio.ServerSocketChannelImpl$ServerSocketAdapter;

        $r1 = specialinvoke r0.<java.net.ServerSocket: java.net.SocketImpl getImpl$()>();

        $r2 = virtualinvoke $r1.<java.net.SocketImpl: java.io.FileDescriptor getFD$()>();

        return $r2;
    }

    static java.io.FileDescriptor access$000(java.nio.ServerSocketChannelImpl$ServerSocketAdapter)
    {
        java.nio.ServerSocketChannelImpl$ServerSocketAdapter r0;
        java.io.FileDescriptor $r1;

        r0 := @parameter0: java.nio.ServerSocketChannelImpl$ServerSocketAdapter;

        $r1 = specialinvoke r0.<java.nio.ServerSocketChannelImpl$ServerSocketAdapter: java.io.FileDescriptor getFD$()>();

        return $r1;
    }
}
