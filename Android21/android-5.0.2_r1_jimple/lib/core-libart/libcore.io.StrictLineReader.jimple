public class libcore.io.StrictLineReader extends java.lang.Object implements java.io.Closeable
{
    private static final byte CR;
    private static final byte LF;
    private final java.io.InputStream in;
    private final java.nio.charset.Charset charset;
    private byte[] buf;
    private int pos;
    private int end;

    public void <init>(java.io.InputStream)
    {
        libcore.io.StrictLineReader r0;
        java.io.InputStream r1;

        r0 := @this: libcore.io.StrictLineReader;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<libcore.io.StrictLineReader: void <init>(java.io.InputStream,int)>(r1, 8192);

        return;
    }

    public void <init>(java.io.InputStream, int)
    {
        libcore.io.StrictLineReader r0;
        java.io.InputStream r1;
        int i0;
        java.nio.charset.Charset $r2;

        r0 := @this: libcore.io.StrictLineReader;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        $r2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>;

        specialinvoke r0.<libcore.io.StrictLineReader: void <init>(java.io.InputStream,int,java.nio.charset.Charset)>(r1, i0, $r2);

        return;
    }

    public void <init>(java.io.InputStream, java.nio.charset.Charset)
    {
        libcore.io.StrictLineReader r0;
        java.io.InputStream r1;
        java.nio.charset.Charset r2;

        r0 := @this: libcore.io.StrictLineReader;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.nio.charset.Charset;

        specialinvoke r0.<libcore.io.StrictLineReader: void <init>(java.io.InputStream,int,java.nio.charset.Charset)>(r1, 8192, r2);

        return;
    }

    public void <init>(java.io.InputStream, int, java.nio.charset.Charset)
    {
        libcore.io.StrictLineReader r0;
        java.io.InputStream r1;
        int i0;
        java.nio.charset.Charset r2, $r3, $r5, $r6;
        boolean $z0, $z1, $z2;
        byte[] $r4;
        java.lang.IllegalArgumentException $r7, $r8;
        java.lang.NullPointerException $r9, $r10;

        r0 := @this: libcore.io.StrictLineReader;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        r2 := @parameter2: java.nio.charset.Charset;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("in == null");

        throw $r10;

     label1:
        if r2 != null goto label2;

        $r9 = new java.lang.NullPointerException;

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("charset == null");

        throw $r9;

     label2:
        if i0 >= 0 goto label3;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("capacity <= 0");

        throw $r8;

     label3:
        $r3 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>;

        $z0 = virtualinvoke r2.<java.nio.charset.Charset: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label4;

        $r5 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $z1 = virtualinvoke r2.<java.nio.charset.Charset: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label4;

        $r6 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset ISO_8859_1>;

        $z2 = virtualinvoke r2.<java.nio.charset.Charset: boolean equals(java.lang.Object)>($r6);

        if $z2 != 0 goto label4;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported encoding");

        throw $r7;

     label4:
        r0.<libcore.io.StrictLineReader: java.io.InputStream in> = r1;

        r0.<libcore.io.StrictLineReader: java.nio.charset.Charset charset> = r2;

        $r4 = newarray (byte)[i0];

        r0.<libcore.io.StrictLineReader: byte[] buf> = $r4;

        return;
    }

    public void close() throws java.io.IOException
    {
        libcore.io.StrictLineReader r0;
        java.io.InputStream r1, $r3, $r5;
        java.lang.Throwable r2, $r6;
        byte[] $r4;

        r0 := @this: libcore.io.StrictLineReader;

        $r3 = r0.<libcore.io.StrictLineReader: java.io.InputStream in>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<libcore.io.StrictLineReader: byte[] buf>;

        if $r4 == null goto label2;

        r0.<libcore.io.StrictLineReader: byte[] buf> = null;

        $r5 = r0.<libcore.io.StrictLineReader: java.io.InputStream in>;

        virtualinvoke $r5.<java.io.InputStream: void close()>();

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.lang.String readLine() throws java.io.IOException
    {
        libcore.io.StrictLineReader r0;
        java.io.InputStream r1, $r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i26, $i27, i29;
        java.lang.String r2, $r9, $r11;
        java.lang.Throwable r3, $r17;
        byte[] $r5, $r7, $r8, $r10, $r12, $r14, $r16;
        libcore.io.StrictLineReader$1 $r6, r18;
        byte $b14, $b21, $b28;
        java.nio.charset.Charset $r13;
        java.io.IOException $r15;

        r0 := @this: libcore.io.StrictLineReader;

        $r4 = r0.<libcore.io.StrictLineReader: java.io.InputStream in>;

        r1 = $r4;

        entermonitor $r4;

     label01:
        $r5 = r0.<libcore.io.StrictLineReader: byte[] buf>;

        if $r5 != null goto label02;

        $r15 = new java.io.IOException;

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>("LineReader is closed");

        throw $r15;

     label02:
        $i3 = r0.<libcore.io.StrictLineReader: int pos>;

        $i2 = r0.<libcore.io.StrictLineReader: int end>;

        if $i3 < $i2 goto label03;

        specialinvoke r0.<libcore.io.StrictLineReader: void fillBuf()>();

     label03:
        i0 = r0.<libcore.io.StrictLineReader: int pos>;

     label04:
        $i4 = r0.<libcore.io.StrictLineReader: int end>;

        if i0 == $i4 goto label09;

        $r12 = r0.<libcore.io.StrictLineReader: byte[] buf>;

        $b21 = $r12[i0];

        if $b21 != 10 goto label08;

        $i20 = r0.<libcore.io.StrictLineReader: int pos>;

        if i0 == $i20 goto label05;

        $r16 = r0.<libcore.io.StrictLineReader: byte[] buf>;

        $i25 = i0 - 1;

        $b28 = $r16[$i25];

        if $b28 != 13 goto label05;

        $i27 = i0 - 1;

        goto label06;

     label05:
        $i27 = i0;

     label06:
        i1 = $i27;

        $r11 = new java.lang.String;

        $r14 = r0.<libcore.io.StrictLineReader: byte[] buf>;

        $i23 = r0.<libcore.io.StrictLineReader: int pos>;

        $i24 = r0.<libcore.io.StrictLineReader: int pos>;

        $i22 = i1 - $i24;

        $r13 = r0.<libcore.io.StrictLineReader: java.nio.charset.Charset charset>;

        specialinvoke $r11.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r14, $i23, $i22, $r13);

        r2 = $r11;

        $i26 = i0 + 1;

        r0.<libcore.io.StrictLineReader: int pos> = $i26;

        exitmonitor r1;

     label07:
        return r2;

     label08:
        i0 = i0 + 1;

        goto label04;

     label09:
        $r6 = new libcore.io.StrictLineReader$1;

        $i6 = r0.<libcore.io.StrictLineReader: int end>;

        $i5 = r0.<libcore.io.StrictLineReader: int pos>;

        $i7 = $i6 - $i5;

        $i8 = $i7 + 80;

        specialinvoke $r6.<libcore.io.StrictLineReader$1: void <init>(libcore.io.StrictLineReader,int)>(r0, $i8);

        r18 = $r6;

     label10:
        $r7 = r0.<libcore.io.StrictLineReader: byte[] buf>;

        $i11 = r0.<libcore.io.StrictLineReader: int pos>;

        $i9 = r0.<libcore.io.StrictLineReader: int end>;

        $i10 = r0.<libcore.io.StrictLineReader: int pos>;

        $i12 = $i9 - $i10;

        virtualinvoke r18.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r7, $i11, $i12);

        r0.<libcore.io.StrictLineReader: int end> = -1;

        specialinvoke r0.<libcore.io.StrictLineReader: void fillBuf()>();

        i29 = r0.<libcore.io.StrictLineReader: int pos>;

     label11:
        $i13 = r0.<libcore.io.StrictLineReader: int end>;

        if i29 == $i13 goto label15;

        $r8 = r0.<libcore.io.StrictLineReader: byte[] buf>;

        $b14 = $r8[i29];

        if $b14 != 10 goto label14;

        $i16 = r0.<libcore.io.StrictLineReader: int pos>;

        if i29 == $i16 goto label12;

        $r10 = r0.<libcore.io.StrictLineReader: byte[] buf>;

        $i19 = r0.<libcore.io.StrictLineReader: int pos>;

        $i18 = r0.<libcore.io.StrictLineReader: int pos>;

        $i17 = i29 - $i18;

        virtualinvoke r18.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r10, $i19, $i17);

     label12:
        $i15 = i29 + 1;

        r0.<libcore.io.StrictLineReader: int pos> = $i15;

        $r9 = virtualinvoke r18.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        exitmonitor r1;

     label13:
        return $r9;

     label14:
        i29 = i29 + 1;

        goto label11;

     label15:
        goto label10;

     label16:
        $r17 := @caughtexception;

        r3 = $r17;

        exitmonitor r1;

     label17:
        throw r3;

        catch java.lang.Throwable from label01 to label07 with label16;
        catch java.lang.Throwable from label08 to label13 with label16;
        catch java.lang.Throwable from label14 to label17 with label16;
    }

    public int readInt() throws java.io.IOException
    {
        libcore.io.StrictLineReader r0;
        java.lang.String r1, $r9;
        int $i0;
        java.lang.NumberFormatException $r3;
        java.io.IOException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;

        r0 := @this: libcore.io.StrictLineReader;

        r1 = virtualinvoke r0.<libcore.io.StrictLineReader: java.lang.String readLine()>();

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected an int but was \"");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw $r4;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public boolean hasUnterminatedLine()
    {
        libcore.io.StrictLineReader r0;
        int $i0;
        boolean $z0;

        r0 := @this: libcore.io.StrictLineReader;

        $i0 = r0.<libcore.io.StrictLineReader: int end>;

        if $i0 != -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void fillBuf() throws java.io.IOException
    {
        libcore.io.StrictLineReader r0;
        int i0, $i1;
        byte[] $r1, $r2;
        java.io.InputStream $r3;
        java.io.EOFException $r4;

        r0 := @this: libcore.io.StrictLineReader;

        $r3 = r0.<libcore.io.StrictLineReader: java.io.InputStream in>;

        $r2 = r0.<libcore.io.StrictLineReader: byte[] buf>;

        $r1 = r0.<libcore.io.StrictLineReader: byte[] buf>;

        $i1 = lengthof $r1;

        i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i1);

        if i0 != -1 goto label1;

        $r4 = new java.io.EOFException;

        specialinvoke $r4.<java.io.EOFException: void <init>()>();

        throw $r4;

     label1:
        r0.<libcore.io.StrictLineReader: int pos> = 0;

        r0.<libcore.io.StrictLineReader: int end> = i0;

        return;
    }

    static java.nio.charset.Charset access$000(libcore.io.StrictLineReader)
    {
        libcore.io.StrictLineReader r0;
        java.nio.charset.Charset $r1;

        r0 := @parameter0: libcore.io.StrictLineReader;

        $r1 = r0.<libcore.io.StrictLineReader: java.nio.charset.Charset charset>;

        return $r1;
    }

    public static void <clinit>()
    {
        <libcore.io.StrictLineReader: byte LF> = 10;

        <libcore.io.StrictLineReader: byte CR> = 13;

        return;
    }
}
