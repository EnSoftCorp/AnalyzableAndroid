public final class java.math.MathContext extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    public static final java.math.MathContext DECIMAL128;
    public static final java.math.MathContext DECIMAL32;
    public static final java.math.MathContext DECIMAL64;
    public static final java.math.MathContext UNLIMITED;
    private final int precision;
    private final java.math.RoundingMode roundingMode;

    public void <init>(int)
    {
        java.math.MathContext r0;
        int i0;
        java.math.RoundingMode $r1;

        r0 := @this: java.math.MathContext;

        i0 := @parameter0: int;

        $r1 = <java.math.RoundingMode: java.math.RoundingMode HALF_UP>;

        specialinvoke r0.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>(i0, $r1);

        return;
    }

    public void <init>(int, java.math.RoundingMode)
    {
        java.math.MathContext r0;
        int i0;
        java.math.RoundingMode r1;

        r0 := @this: java.math.MathContext;

        i0 := @parameter0: int;

        r1 := @parameter1: java.math.RoundingMode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.math.MathContext: int precision> = i0;

        r0.<java.math.MathContext: java.math.RoundingMode roundingMode> = r1;

        specialinvoke r0.<java.math.MathContext: void checkValid()>();

        return;
    }

    public void <init>(java.lang.String)
    {
        java.math.MathContext r0;
        java.lang.String r1, r2, $r4, $r5, $r7;
        int i0, i1, i2, $i3, $i4, i5, i6;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r6, $r8, $r10;
        java.math.RoundingMode $r9;
        java.lang.NumberFormatException $r11;

        r0 := @this: java.math.MathContext;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = "precision=";

        i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $r5 = "roundingMode=";

        i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("precision=");

        if $z0 == 0 goto label1;

        $i3 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(32, i0);

        i2 = $i3;

        if $i3 != -1 goto label2;

     label1:
        $r6 = specialinvoke r0.<java.math.MathContext: java.lang.IllegalArgumentException invalidMathContext(java.lang.String,java.lang.String)>("Missing precision", r1);

        throw $r6;

     label2:
        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i0, i2);

     label3:
        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

        r0.<java.math.MathContext: int precision> = $i4;

     label4:
        goto label6;

     label5:
        $r11 := @caughtexception;

        $r10 = specialinvoke r0.<java.math.MathContext: java.lang.IllegalArgumentException invalidMathContext(java.lang.String,java.lang.String)>("Bad precision", r1);

        throw $r10;

     label6:
        i5 = i2 + 1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(i5, "roundingMode=", 0, i1);

        if $z1 != 0 goto label7;

        $r8 = specialinvoke r0.<java.math.MathContext: java.lang.IllegalArgumentException invalidMathContext(java.lang.String,java.lang.String)>("Missing rounding mode", r1);

        throw $r8;

     label7:
        i6 = i5 + i1;

        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i6);

        $r9 = staticinvoke <java.math.RoundingMode: java.math.RoundingMode valueOf(java.lang.String)>($r7);

        r0.<java.math.MathContext: java.math.RoundingMode roundingMode> = $r9;

        specialinvoke r0.<java.math.MathContext: void checkValid()>();

        return;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }

    private java.lang.IllegalArgumentException invalidMathContext(java.lang.String, java.lang.String)
    {
        java.math.MathContext r0;
        java.lang.String r1, r2, $r8;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;

        r0 := @this: java.math.MathContext;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    private void checkValid()
    {
        java.math.MathContext r0;
        int $i0, $i1;
        java.math.RoundingMode $r1;
        java.lang.NullPointerException $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: java.math.MathContext;

        $i0 = r0.<java.math.MathContext: int precision>;

        if $i0 >= 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Negative precision: ");

        $i1 = r0.<java.math.MathContext: int precision>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        $r1 = r0.<java.math.MathContext: java.math.RoundingMode roundingMode>;

        if $r1 != null goto label2;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("roundingMode == null");

        throw $r2;

     label2:
        return;
    }

    public int getPrecision()
    {
        java.math.MathContext r0;
        int $i0;

        r0 := @this: java.math.MathContext;

        $i0 = r0.<java.math.MathContext: int precision>;

        return $i0;
    }

    public java.math.RoundingMode getRoundingMode()
    {
        java.math.MathContext r0;
        java.math.RoundingMode $r1;

        r0 := @this: java.math.MathContext;

        $r1 = r0.<java.math.MathContext: java.math.RoundingMode roundingMode>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.math.MathContext r0, $r2, $r3;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0, $i1;
        java.math.RoundingMode $r4, $r5;

        r0 := @this: java.math.MathContext;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof java.math.MathContext;

        if $z0 == 0 goto label1;

        $r2 = (java.math.MathContext) r1;

        $i0 = virtualinvoke $r2.<java.math.MathContext: int getPrecision()>();

        $i1 = r0.<java.math.MathContext: int precision>;

        if $i0 != $i1 goto label1;

        $r3 = (java.math.MathContext) r1;

        $r4 = virtualinvoke $r3.<java.math.MathContext: java.math.RoundingMode getRoundingMode()>();

        $r5 = r0.<java.math.MathContext: java.math.RoundingMode roundingMode>;

        if $r4 != $r5 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public int hashCode()
    {
        java.math.MathContext r0;
        int $i0, $i1, $i2, $i3;
        java.math.RoundingMode $r1;

        r0 := @this: java.math.MathContext;

        $i0 = r0.<java.math.MathContext: int precision>;

        $i1 = $i0 << 3;

        $r1 = r0.<java.math.MathContext: java.math.RoundingMode roundingMode>;

        $i2 = virtualinvoke $r1.<java.math.RoundingMode: int ordinal()>();

        $i3 = $i1 | $i2;

        return $i3;
    }

    public java.lang.String toString()
    {
        java.math.MathContext r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r6;
        int $i0;
        java.math.RoundingMode $r5;
        java.lang.String $r7;

        r0 := @this: java.math.MathContext;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("precision=");

        $i0 = r0.<java.math.MathContext: int precision>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" roundingMode=");

        $r5 = r0.<java.math.MathContext: java.math.RoundingMode roundingMode>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.math.MathContext r0;
        java.io.ObjectInputStream r1;
        java.lang.Exception r2, $r3;
        java.io.StreamCorruptedException $r4;
        java.lang.String $r5;

        r0 := @this: java.math.MathContext;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

     label1:
        specialinvoke r0.<java.math.MathContext: void checkValid()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        $r4 = new java.io.StreamCorruptedException;

        $r5 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r4.<java.io.StreamCorruptedException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.math.MathContext $r0, $r2, $r4, $r6;
        java.math.RoundingMode $r1, $r3, $r5, $r7;

        <java.math.MathContext: long serialVersionUID> = 5579720004786848255L;

        $r0 = new java.math.MathContext;

        $r1 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;

        specialinvoke $r0.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>(34, $r1);

        <java.math.MathContext: java.math.MathContext DECIMAL128> = $r0;

        $r2 = new java.math.MathContext;

        $r3 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;

        specialinvoke $r2.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>(7, $r3);

        <java.math.MathContext: java.math.MathContext DECIMAL32> = $r2;

        $r4 = new java.math.MathContext;

        $r5 = <java.math.RoundingMode: java.math.RoundingMode HALF_EVEN>;

        specialinvoke $r4.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>(16, $r5);

        <java.math.MathContext: java.math.MathContext DECIMAL64> = $r4;

        $r6 = new java.math.MathContext;

        $r7 = <java.math.RoundingMode: java.math.RoundingMode HALF_UP>;

        specialinvoke $r6.<java.math.MathContext: void <init>(int,java.math.RoundingMode)>(0, $r7);

        <java.math.MathContext: java.math.MathContext UNLIMITED> = $r6;

        return;
    }
}
