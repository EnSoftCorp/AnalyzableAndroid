public abstract class javax.net.ServerSocketFactory extends java.lang.Object
{
    private static javax.net.ServerSocketFactory defaultFactory;

    public static synchronized javax.net.ServerSocketFactory getDefault()
    {
        javax.net.ServerSocketFactory $r0, $r1;
        javax.net.DefaultServerSocketFactory $r2;

        $r0 = <javax.net.ServerSocketFactory: javax.net.ServerSocketFactory defaultFactory>;

        if $r0 != null goto label1;

        $r2 = new javax.net.DefaultServerSocketFactory;

        specialinvoke $r2.<javax.net.DefaultServerSocketFactory: void <init>()>();

        <javax.net.ServerSocketFactory: javax.net.ServerSocketFactory defaultFactory> = $r2;

     label1:
        $r1 = <javax.net.ServerSocketFactory: javax.net.ServerSocketFactory defaultFactory>;

        return $r1;
    }

    protected void <init>()
    {
        javax.net.ServerSocketFactory r0;

        r0 := @this: javax.net.ServerSocketFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.net.ServerSocket createServerSocket() throws java.io.IOException
    {
        javax.net.ServerSocketFactory r0;
        java.net.SocketException $r1;

        r0 := @this: javax.net.ServerSocketFactory;

        $r1 = new java.net.SocketException;

        specialinvoke $r1.<java.net.SocketException: void <init>(java.lang.String)>("Unbound server sockets not implemented");

        throw $r1;
    }

    public abstract java.net.ServerSocket createServerSocket(int) throws java.io.IOException;

    public abstract java.net.ServerSocket createServerSocket(int, int) throws java.io.IOException;

    public abstract java.net.ServerSocket createServerSocket(int, int, java.net.InetAddress) throws java.io.IOException;
}
