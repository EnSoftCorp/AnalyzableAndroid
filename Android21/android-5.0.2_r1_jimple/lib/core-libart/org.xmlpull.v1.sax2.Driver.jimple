public class org.xmlpull.v1.sax2.Driver extends java.lang.Object implements org.xml.sax.Locator, org.xml.sax.XMLReader, org.xml.sax.Attributes
{
    protected static final java.lang.String DECLARATION_HANDLER_PROPERTY;
    protected static final java.lang.String LEXICAL_HANDLER_PROPERTY;
    protected static final java.lang.String NAMESPACES_FEATURE;
    protected static final java.lang.String NAMESPACE_PREFIXES_FEATURE;
    protected static final java.lang.String VALIDATION_FEATURE;
    protected static final java.lang.String APACHE_SCHEMA_VALIDATION_FEATURE;
    protected static final java.lang.String APACHE_DYNAMIC_VALIDATION_FEATURE;
    protected org.xml.sax.ContentHandler contentHandler;
    protected org.xml.sax.ErrorHandler errorHandler;
    protected java.lang.String systemId;
    protected org.xmlpull.v1.XmlPullParser pp;

    public void <init>() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xmlpull.v1.XmlPullParserFactory r1;
        org.xml.sax.helpers.DefaultHandler $r2, $r3;
        org.xmlpull.v1.XmlPullParser $r4;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.xml.sax.helpers.DefaultHandler;

        specialinvoke $r2.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler> = $r2;

        $r3 = new org.xml.sax.helpers.DefaultHandler;

        specialinvoke $r3.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler> = $r3;

        r1 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        virtualinvoke r1.<org.xmlpull.v1.XmlPullParserFactory: void setNamespaceAware(boolean)>(1);

        $r4 = virtualinvoke r1.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser newPullParser()>();

        r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp> = $r4;

        return;
    }

    public void <init>(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xmlpull.v1.XmlPullParser r1;
        org.xml.sax.helpers.DefaultHandler $r2, $r3;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.xml.sax.helpers.DefaultHandler;

        specialinvoke $r2.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler> = $r2;

        $r3 = new org.xml.sax.helpers.DefaultHandler;

        specialinvoke $r3.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler> = $r3;

        r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp> = r1;

        return;
    }

    public int getLength()
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xmlpull.v1.XmlPullParser $r1;
        int $i0;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        return $i0;
    }

    public java.lang.String getURI(int)
    {
        org.xmlpull.v1.sax2.Driver r0;
        int i0;
        org.xmlpull.v1.XmlPullParser $r1;
        java.lang.String $r2;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        i0 := @parameter0: int;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeNamespace(int)>(i0);

        return $r2;
    }

    public java.lang.String getLocalName(int)
    {
        org.xmlpull.v1.sax2.Driver r0;
        int i0;
        org.xmlpull.v1.XmlPullParser $r1;
        java.lang.String $r2;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        i0 := @parameter0: int;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i0);

        return $r2;
    }

    public java.lang.String getQName(int)
    {
        org.xmlpull.v1.sax2.Driver r0;
        int i0;
        java.lang.String r1, $r4, $r9, $r11;
        org.xmlpull.v1.XmlPullParser $r2, $r3, $r8;
        java.lang.StringBuilder $r5, $r6, $r7, $r10;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        i0 := @parameter0: int;

        $r2 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        r1 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributePrefix(int)>(i0);

        if r1 == null goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r8 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r9 = interfaceinvoke $r8.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i0);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;

     label1:
        $r3 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i0);

        return $r4;
    }

    public java.lang.String getType(int)
    {
        org.xmlpull.v1.sax2.Driver r0;
        int i0;
        org.xmlpull.v1.XmlPullParser $r1;
        java.lang.String $r2;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        i0 := @parameter0: int;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeType(int)>(i0);

        return $r2;
    }

    public java.lang.String getValue(int)
    {
        org.xmlpull.v1.sax2.Driver r0;
        int i0;
        org.xmlpull.v1.XmlPullParser $r1;
        java.lang.String $r2;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        i0 := @parameter0: int;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r2 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(int)>(i0);

        return $r2;
    }

    public int getIndex(java.lang.String, java.lang.String)
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String r1, r2, $r5, $r7;
        int i0, $i1;
        org.xmlpull.v1.XmlPullParser $r3, $r4, $r6;
        boolean $z0, $z1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 = 0;

     label1:
        $r3 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i1 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        if i0 >= $i1 goto label3;

        $r4 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r5 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeNamespace(int)>(i0);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r6 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r7 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i0);

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label2;

        return i0;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return -1;
    }

    public int getIndex(java.lang.String)
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String r1, $r4;
        int i0, $i1;
        org.xmlpull.v1.XmlPullParser $r2, $r3;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: java.lang.String;

        i0 = 0;

     label1:
        $r2 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i1 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        if i0 >= $i1 goto label3;

        $r3 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i0);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return i0;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return -1;
    }

    public java.lang.String getType(java.lang.String, java.lang.String)
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String r1, r2, $r5, $r7, $r9;
        int i0, $i1;
        org.xmlpull.v1.XmlPullParser $r3, $r4, $r6, $r8;
        boolean $z0, $z1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 = 0;

     label1:
        $r3 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i1 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        if i0 >= $i1 goto label3;

        $r4 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r5 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeNamespace(int)>(i0);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r6 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r7 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i0);

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label2;

        $r8 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r9 = interfaceinvoke $r8.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeType(int)>(i0);

        return $r9;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return null;
    }

    public java.lang.String getType(java.lang.String)
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String r1, $r4, $r6;
        int i0, $i1;
        org.xmlpull.v1.XmlPullParser $r2, $r3, $r5;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: java.lang.String;

        i0 = 0;

     label1:
        $r2 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i1 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getAttributeCount()>();

        if i0 >= $i1 goto label3;

        $r3 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeName(int)>(i0);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r5 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r6 = interfaceinvoke $r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeType(int)>(i0);

        return $r6;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return null;
    }

    public java.lang.String getValue(java.lang.String, java.lang.String)
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String r1, r2, $r4;
        org.xmlpull.v1.XmlPullParser $r3;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r4 = interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(r1, r2);

        return $r4;
    }

    public java.lang.String getValue(java.lang.String)
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String r1, $r3;
        org.xmlpull.v1.XmlPullParser $r2;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        return $r3;
    }

    public java.lang.String getPublicId()
    {
        org.xmlpull.v1.sax2.Driver r0;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        return null;
    }

    public java.lang.String getSystemId()
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String $r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId>;

        return $r1;
    }

    public int getLineNumber()
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xmlpull.v1.XmlPullParser $r1;
        int $i0;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getLineNumber()>();

        return $i0;
    }

    public int getColumnNumber()
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xmlpull.v1.XmlPullParser $r1;
        int $i0;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i0 = interfaceinvoke $r1.<org.xmlpull.v1.XmlPullParser: int getColumnNumber()>();

        return $i0;
    }

    public boolean getFeature(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.xmlpull.v1.XmlPullParser $r5, $r6, $r7, $r8;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: java.lang.String;

        $r2 = "http://xml.org/sax/features/namespaces";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r8 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $z6 = interfaceinvoke $r8.<org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#process-namespaces");

        return $z6;

     label1:
        $r3 = "http://xml.org/sax/features/namespace-prefixes";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $r7 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $z5 = interfaceinvoke $r7.<org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#report-namespace-prefixes");

        return $z5;

     label2:
        $r4 = "http://xml.org/sax/features/validation";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label3;

        $r6 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $z4 = interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#validation");

        return $z4;

     label3:
        $r5 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $z3 = interfaceinvoke $r5.<org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)>(r1);

        return $z3;
    }

    public void setFeature(java.lang.String, boolean) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String r1, $r3, $r4, $r5;
        boolean z0, $z1, $z2, $z3, $z4;
        org.xmlpull.v1.XmlPullParser $r6, $r7, $r8, $r9, $r10;
        org.xmlpull.v1.XmlPullParserException $r11;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

     label1:
        $r3 = "http://xml.org/sax/features/namespaces";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $r10 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r10.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#process-namespaces", z0);

        goto label5;

     label2:
        $r4 = "http://xml.org/sax/features/namespace-prefixes";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label3;

        $r8 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $z4 = interfaceinvoke $r8.<org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#report-namespace-prefixes");

        if $z4 == z0 goto label5;

        $r9 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r9.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#report-namespace-prefixes", z0);

        goto label5;

     label3:
        $r5 = "http://xml.org/sax/features/validation";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label4;

        $r7 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r7.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#validation", z0);

        goto label5;

     label4:
        $r6 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>(r1, z0);

     label5:
        goto label7;

     label6:
        $r11 := @caughtexception;

     label7:
        return;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label5 with label6;
    }

    public java.lang.Object getProperty(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String r1, $r2, $r3;
        boolean $z0, $z1;
        org.xmlpull.v1.XmlPullParser $r4;
        java.lang.Object $r5;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: java.lang.String;

        $r2 = "http://xml.org/sax/properties/declaration-handler";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r3 = "http://xml.org/sax/properties/lexical-handler";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        return null;

     label2:
        $r4 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r5 = interfaceinvoke $r4.<org.xmlpull.v1.XmlPullParser: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r5;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String r1, $r4, $r5, $r11, $r17, $r24;
        java.lang.Object r2;
        org.xmlpull.v1.XmlPullParserException r3, $r16;
        boolean $z0, $z1;
        org.xmlpull.v1.XmlPullParser $r6;
        org.xml.sax.SAXNotSupportedException $r7, $r12, $r19;
        java.lang.StringBuilder $r8, $r9, $r10, $r13, $r14, $r15, $r18, $r20, $r21, $r22, $r23;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r4 = "http://xml.org/sax/properties/declaration-handler";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r12 = new org.xml.sax.SAXNotSupportedException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not supported setting property ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r17);

        throw $r12;

     label1:
        $r5 = "http://xml.org/sax/properties/lexical-handler";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $r7 = new org.xml.sax.SAXNotSupportedException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not supported setting property ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label2:
        $r6 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r6.<org.xmlpull.v1.XmlPullParser: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);

     label3:
        goto label5;

     label4:
        $r16 := @caughtexception;

        r3 = $r16;

        $r19 = new org.xml.sax.SAXNotSupportedException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not supported set property ");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>($r24);

        throw $r19;

     label5:
        return;

        catch org.xmlpull.v1.XmlPullParserException from label2 to label3 with label4;
    }

    public void setEntityResolver(org.xml.sax.EntityResolver)
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xml.sax.EntityResolver r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: org.xml.sax.EntityResolver;

        return;
    }

    public org.xml.sax.EntityResolver getEntityResolver()
    {
        org.xmlpull.v1.sax2.Driver r0;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        return null;
    }

    public void setDTDHandler(org.xml.sax.DTDHandler)
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xml.sax.DTDHandler r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: org.xml.sax.DTDHandler;

        return;
    }

    public org.xml.sax.DTDHandler getDTDHandler()
    {
        org.xmlpull.v1.sax2.Driver r0;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        return null;
    }

    public void setContentHandler(org.xml.sax.ContentHandler)
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xml.sax.ContentHandler r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: org.xml.sax.ContentHandler;

        r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler> = r1;

        return;
    }

    public org.xml.sax.ContentHandler getContentHandler()
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xml.sax.ContentHandler $r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        return $r1;
    }

    public void setErrorHandler(org.xml.sax.ErrorHandler)
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xml.sax.ErrorHandler r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: org.xml.sax.ErrorHandler;

        r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler> = r1;

        return;
    }

    public org.xml.sax.ErrorHandler getErrorHandler()
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xml.sax.ErrorHandler $r1;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        $r1 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        return $r1;
    }

    public void parse(org.xml.sax.InputSource) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xml.sax.InputSource r1;
        java.io.Reader r2;
        java.io.InputStream r3;
        java.lang.String r4, $r8, $r19, $r21, $r25, $r26, $r29, $r31, $r38, $r40, $r48, $r55;
        org.xml.sax.SAXParseException r5, r7, $r15, $r27, $r37, $r44, $r53, r59, r60, r62;
        java.io.FileNotFoundException r6, $r36;
        org.xml.sax.ContentHandler $r9, $r11, $r16;
        org.xmlpull.v1.XmlPullParser $r10, $r12, $r13, $r14, $r20, $r24;
        int $i1;
        java.lang.StringBuilder $r17, $r18, $r22, $r34, $r35, $r41, $r42, $r43, $r49, $r50, $r51, $r52;
        org.xml.sax.ErrorHandler $r23, $r32, $r39, $r47, $r54;
        java.net.URL $r28, r56;
        java.io.FileInputStream $r30;
        java.net.MalformedURLException $r33;
        org.xmlpull.v1.XmlPullParserException $r45, $r46, r58, r61;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: org.xml.sax.InputSource;

        $r8 = virtualinvoke r1.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId> = $r8;

        $r9 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        interfaceinvoke $r9.<org.xml.sax.ContentHandler: void setDocumentLocator(org.xml.sax.Locator)>(r0);

        r2 = virtualinvoke r1.<org.xml.sax.InputSource: java.io.Reader getCharacterStream()>();

     label01:
        if r2 != null goto label11;

        r3 = virtualinvoke r1.<org.xml.sax.InputSource: java.io.InputStream getByteStream()>();

        r4 = virtualinvoke r1.<org.xml.sax.InputSource: java.lang.String getEncoding()>();

        if r3 != null goto label10;

        $r26 = virtualinvoke r1.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId> = $r26;

        $r25 = r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId>;

        if $r25 != null goto label03;

        $r27 = new org.xml.sax.SAXParseException;

        specialinvoke $r27.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator)>("null source systemId", r0);

        r5 = $r27;

        $r32 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        interfaceinvoke $r32.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>(r5);

     label02:
        return;

     label03:
        $r28 = new java.net.URL;

        $r29 = r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId>;

        specialinvoke $r28.<java.net.URL: void <init>(java.lang.String)>($r29);

        r56 = $r28;

        r3 = virtualinvoke r56.<java.net.URL: java.io.InputStream openStream()>();

     label04:
        goto label10;

     label05:
        $r33 := @caughtexception;

     label06:
        $r30 = new java.io.FileInputStream;

        $r31 = r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId>;

        specialinvoke $r30.<java.io.FileInputStream: void <init>(java.lang.String)>($r31);

        r3 = $r30;

     label07:
        goto label10;

     label08:
        $r36 := @caughtexception;

        r6 = $r36;

        $r37 = new org.xml.sax.SAXParseException;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not open file with systemId ");

        $r40 = r0.<org.xmlpull.v1.sax2.Driver: java.lang.String systemId>;

        $r41 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r38 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>($r38, r0, r6);

        r7 = $r37;

        $r39 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        interfaceinvoke $r39.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>(r7);

     label09:
        return;

     label10:
        $r24 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r24.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r3, r4);

        goto label12;

     label11:
        $r10 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r10.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>(r2);

     label12:
        goto label14;

     label13:
        $r45 := @caughtexception;

        r58 = $r45;

        $r44 = new org.xml.sax.SAXParseException;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parsing initialization error: ");

        $r49 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r58);

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r44.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>($r48, r0, r58);

        r59 = $r44;

        $r47 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        interfaceinvoke $r47.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>(r59);

        return;

     label14:
        $r11 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        interfaceinvoke $r11.<org.xml.sax.ContentHandler: void startDocument()>();

        $r12 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        interfaceinvoke $r12.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r13 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $i1 = interfaceinvoke $r13.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i1 == 2 goto label16;

        $r15 = new org.xml.sax.SAXParseException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected start tag not");

        $r20 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        $r19 = interfaceinvoke $r20.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator)>($r21, r0);

        r60 = $r15;

        $r23 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        interfaceinvoke $r23.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>(r60);

     label15:
        return;

     label16:
        goto label18;

     label17:
        $r46 := @caughtexception;

        r61 = $r46;

        $r53 = new org.xml.sax.SAXParseException;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parsing initialization error: ");

        $r50 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r61);

        $r55 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r53.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>($r55, r0, r61);

        r62 = $r53;

        $r54 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        interfaceinvoke $r54.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>(r62);

        return;

     label18:
        $r14 = r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp>;

        virtualinvoke r0.<org.xmlpull.v1.sax2.Driver: void parseSubTree(org.xmlpull.v1.XmlPullParser)>($r14);

        $r16 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        interfaceinvoke $r16.<org.xml.sax.ContentHandler: void endDocument()>();

        return;

        catch java.net.MalformedURLException from label03 to label04 with label05;
        catch java.io.FileNotFoundException from label06 to label07 with label08;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label13;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label09 with label13;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label12 with label13;
        catch org.xmlpull.v1.XmlPullParserException from label14 to label15 with label17;
    }

    public void parse(java.lang.String) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String r1;
        org.xml.sax.InputSource $r2;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.xml.sax.InputSource;

        specialinvoke $r2.<org.xml.sax.InputSource: void <init>(java.lang.String)>(r1);

        virtualinvoke r0.<org.xmlpull.v1.sax2.Driver: void parse(org.xml.sax.InputSource)>($r2);

        return;
    }

    public void parseSubTree(org.xmlpull.v1.XmlPullParser) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.xmlpull.v1.sax2.Driver r0;
        org.xmlpull.v1.XmlPullParser r1;
        boolean z0;
        int[] r2;
        java.lang.StringBuilder r3, $r4, $r23, $r24, $r27, $r28, $r29, $r31;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21;
        java.lang.String $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r18, $r19, $r20, $r21, $r30, $r32, $r34, r36, r37, r39, r40;
        org.xml.sax.ContentHandler $r12, $r15, $r16, $r17, $r22;
        org.xml.sax.SAXException $r25;
        org.xml.sax.SAXParseException $r26, r42;
        org.xmlpull.v1.XmlPullParserException $r33, r41;
        org.xml.sax.ErrorHandler $r35;
        char[] r38;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r0.<org.xmlpull.v1.sax2.Driver: org.xmlpull.v1.XmlPullParser pp> = r1;

        z0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#process-namespaces");

     label01:
        $i7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i7 == 2 goto label02;

        $r25 = new org.xml.sax.SAXException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("start tag must be read before skiping subtree");

        $r30 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r31 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<org.xml.sax.SAXException: void <init>(java.lang.String)>($r32);

        throw $r25;

     label02:
        r2 = newarray (int)[2];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>(16);

        r3 = $r4;

        $i8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i0 = $i8 - 1;

        i1 = 2;

     label03:
        tableswitch(i1)
        {
            case 1: goto label23;
            case 2: goto label04;
            case 3: goto label14;
            case 4: goto label13;
            default: goto label24;
        };

     label04:
        if z0 == 0 goto label12;

        $i9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i2 = $i9 - 1;

        if i0 <= i2 goto label05;

        $i14 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getNamespaceCount(int)>(i2);

        goto label06;

     label05:
        $i14 = 0;

     label06:
        i3 = $i14;

        $i11 = i2 + 1;

        i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getNamespaceCount(int)>($i11);

        i5 = i3;

     label07:
        if i5 >= i4 goto label08;

        $r12 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        $r10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespacePrefix(int)>(i5);

        $r11 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespaceUri(int)>(i5);

        interfaceinvoke $r12.<org.xml.sax.ContentHandler: void startPrefixMapping(java.lang.String,java.lang.String)>($r10, $r11);

        i5 = i5 + 1;

        goto label07;

     label08:
        r36 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        r37 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPrefix()>();

        if r37 == null goto label09;

        virtualinvoke r3.<java.lang.StringBuilder: void setLength(int)>(0);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r36);

     label09:
        $r9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace()>();

        if r37 != null goto label10;

        $r8 = r36;

        goto label11;

     label10:
        $r8 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        virtualinvoke r0.<org.xmlpull.v1.sax2.Driver: void startElement(java.lang.String,java.lang.String,java.lang.String)>($r9, r36, $r8);

        goto label24;

     label12:
        $r6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace()>();

        $r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        virtualinvoke r0.<org.xmlpull.v1.sax2.Driver: void startElement(java.lang.String,java.lang.String,java.lang.String)>($r6, $r5, $r7);

        goto label24;

     label13:
        r38 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: char[] getTextCharacters(int[])>(r2);

        $r15 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        $i13 = r2[0];

        $i12 = r2[1];

        interfaceinvoke $r15.<org.xml.sax.ContentHandler: void characters(char[],int,int)>(r38, $i13, $i12);

        goto label24;

     label14:
        if z0 == 0 goto label22;

        r39 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        r40 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPrefix()>();

        if r40 == null goto label15;

        virtualinvoke r3.<java.lang.StringBuilder: void setLength(int)>(0);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);

     label15:
        $r17 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        $r20 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace()>();

        if r40 == null goto label16;

        $r19 = r39;

        goto label17;

     label16:
        $r19 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label17:
        interfaceinvoke $r17.<org.xml.sax.ContentHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>($r20, r39, $r19);

        i19 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if i0 <= i19 goto label18;

        $i18 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $i17 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getNamespaceCount(int)>($i18);

        goto label19;

     label18:
        $i17 = 0;

     label19:
        i20 = $i17;

        $i15 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $i16 = $i15 - 1;

        i21 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getNamespaceCount(int)>($i16);

        i6 = i21 - 1;

     label20:
        if i6 < i20 goto label21;

        $r22 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        $r21 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespacePrefix(int)>(i6);

        interfaceinvoke $r22.<org.xml.sax.ContentHandler: void endPrefixMapping(java.lang.String)>($r21);

        i6 = i6 + -1;

        goto label20;

     label21:
        goto label24;

     label22:
        $r16 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        $r13 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getNamespace()>();

        $r14 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r18 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        interfaceinvoke $r16.<org.xml.sax.ContentHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>($r13, $r14, $r18);

        goto label24;

     label23:
        goto label25;

     label24:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        $i10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i10 > i0 goto label03;

     label25:
        goto label27;

     label26:
        $r33 := @caughtexception;

        r41 = $r33;

        $r26 = new org.xml.sax.SAXParseException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parsing error: ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r41);

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>($r34, r0, r41);

        r42 = $r26;

        virtualinvoke r41.<org.xmlpull.v1.XmlPullParserException: void printStackTrace()>();

        $r35 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler errorHandler>;

        interfaceinvoke $r35.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>(r42);

     label27:
        return;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label25 with label26;
    }

    protected void startElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.xmlpull.v1.sax2.Driver r0;
        java.lang.String r1, r2, r3;
        org.xml.sax.ContentHandler $r4;

        r0 := @this: org.xmlpull.v1.sax2.Driver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler contentHandler>;

        interfaceinvoke $r4.<org.xml.sax.ContentHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r1, r2, r3, r0);

        return;
    }

    public static void <clinit>()
    {
        <org.xmlpull.v1.sax2.Driver: java.lang.String APACHE_DYNAMIC_VALIDATION_FEATURE> = "http://apache.org/xml/features/validation/dynamic";

        <org.xmlpull.v1.sax2.Driver: java.lang.String APACHE_SCHEMA_VALIDATION_FEATURE> = "http://apache.org/xml/features/validation/schema";

        <org.xmlpull.v1.sax2.Driver: java.lang.String VALIDATION_FEATURE> = "http://xml.org/sax/features/validation";

        <org.xmlpull.v1.sax2.Driver: java.lang.String NAMESPACE_PREFIXES_FEATURE> = "http://xml.org/sax/features/namespace-prefixes";

        <org.xmlpull.v1.sax2.Driver: java.lang.String NAMESPACES_FEATURE> = "http://xml.org/sax/features/namespaces";

        <org.xmlpull.v1.sax2.Driver: java.lang.String LEXICAL_HANDLER_PROPERTY> = "http://xml.org/sax/properties/lexical-handler";

        <org.xmlpull.v1.sax2.Driver: java.lang.String DECLARATION_HANDLER_PROPERTY> = "http://xml.org/sax/properties/declaration-handler";

        return;
    }
}
