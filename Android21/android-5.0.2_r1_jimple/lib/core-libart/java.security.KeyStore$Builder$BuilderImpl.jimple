class java.security.KeyStore$Builder$BuilderImpl extends java.security.KeyStore$Builder
{
    private java.security.KeyStore keyStore;
    private java.security.KeyStore$ProtectionParameter protParameter;
    private final java.lang.String typeForKeyStore;
    private final java.security.Provider providerForKeyStore;
    private final java.io.File fileForLoad;
    private boolean isGetKeyStore;
    private java.security.KeyStoreException lastException;

    void <init>(java.security.KeyStore, java.security.KeyStore$ProtectionParameter, java.io.File, java.lang.String, java.security.Provider)
    {
        java.security.KeyStore$Builder$BuilderImpl r0;
        java.security.KeyStore r1;
        java.security.KeyStore$ProtectionParameter r2;
        java.io.File r3;
        java.lang.String r4;
        java.security.Provider r5;

        r0 := @this: java.security.KeyStore$Builder$BuilderImpl;

        r1 := @parameter0: java.security.KeyStore;

        r2 := @parameter1: java.security.KeyStore$ProtectionParameter;

        r3 := @parameter2: java.io.File;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.security.Provider;

        specialinvoke r0.<java.security.KeyStore$Builder: void <init>()>();

        r0.<java.security.KeyStore$Builder$BuilderImpl: boolean isGetKeyStore> = 0;

        r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStore keyStore> = r1;

        r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStore$ProtectionParameter protParameter> = r2;

        r0.<java.security.KeyStore$Builder$BuilderImpl: java.io.File fileForLoad> = r3;

        r0.<java.security.KeyStore$Builder$BuilderImpl: java.lang.String typeForKeyStore> = r4;

        r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.Provider providerForKeyStore> = r5;

        r0.<java.security.KeyStore$Builder$BuilderImpl: boolean isGetKeyStore> = 0;

        r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStoreException lastException> = null;

        return;
    }

    public synchronized java.security.KeyStore getKeyStore() throws java.security.KeyStoreException
    {
        java.security.KeyStore$Builder$BuilderImpl r0;
        java.security.KeyStore r1, $r6, $r10, $r24;
        char[] r2;
        java.io.FileInputStream r3, $r17;
        java.lang.Throwable r4, $r28;
        java.security.KeyStoreException $r5, $r13, $r23, $r25, $r27, r29;
        java.security.Provider $r7, $r8;
        java.lang.String $r9, $r22;
        java.security.KeyStore$ProtectionParameter $r11, $r12, $r14, $r18, $r19;
        boolean $z0, $z1;
        java.security.KeyStore$Builder$TmpLSParameter $r15;
        java.io.File $r16, $r20;
        java.security.KeyStore$PasswordProtection $r21;
        java.lang.Exception $r26, r30;

        r0 := @this: java.security.KeyStore$Builder$BuilderImpl;

        $r5 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStoreException lastException>;

        if $r5 == null goto label01;

        $r23 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStoreException lastException>;

        throw $r23;

     label01:
        $r6 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStore keyStore>;

        if $r6 == null goto label02;

        r0.<java.security.KeyStore$Builder$BuilderImpl: boolean isGetKeyStore> = 1;

        $r24 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStore keyStore>;

        return $r24;

     label02:
        $r7 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.Provider providerForKeyStore>;

        if $r7 != null goto label03;

        $r22 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.lang.String typeForKeyStore>;

        $r10 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r22);

        goto label04;

     label03:
        $r9 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.lang.String typeForKeyStore>;

        $r8 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.Provider providerForKeyStore>;

        $r10 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.security.Provider)>($r9, $r8);

     label04:
        r1 = $r10;

        $r11 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStore$ProtectionParameter protParameter>;

        $z0 = $r11 instanceof java.security.KeyStore$PasswordProtection;

        if $z0 == 0 goto label05;

        $r19 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStore$ProtectionParameter protParameter>;

        $r21 = (java.security.KeyStore$PasswordProtection) $r19;

        r2 = virtualinvoke $r21.<java.security.KeyStore$PasswordProtection: char[] getPassword()>();

        goto label07;

     label05:
        $r12 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStore$ProtectionParameter protParameter>;

        $z1 = $r12 instanceof java.security.KeyStore$CallbackHandlerProtection;

        if $z1 == 0 goto label06;

        $r14 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStore$ProtectionParameter protParameter>;

        r2 = staticinvoke <java.security.KeyStoreSpi: char[] getPasswordFromCallBack(java.security.KeyStore$ProtectionParameter)>($r14);

        goto label07;

     label06:
        $r13 = new java.security.KeyStoreException;

        specialinvoke $r13.<java.security.KeyStoreException: void <init>(java.lang.String)>("protectionParameter is neither PasswordProtection nor CallbackHandlerProtection instance");

        throw $r13;

     label07:
        $r16 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.io.File fileForLoad>;

        if $r16 == null goto label13;

        r3 = null;

     label08:
        $r17 = new java.io.FileInputStream;

        $r20 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.io.File fileForLoad>;

        specialinvoke $r17.<java.io.FileInputStream: void <init>(java.io.File)>($r20);

        r3 = $r17;

        virtualinvoke r1.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r3, r2);

     label09:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        goto label12;

     label10:
        $r28 := @caughtexception;

        r4 = $r28;

     label11:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        throw r4;

     label12:
        goto label14;

     label13:
        $r15 = new java.security.KeyStore$Builder$TmpLSParameter;

        $r18 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStore$ProtectionParameter protParameter>;

        specialinvoke $r15.<java.security.KeyStore$Builder$TmpLSParameter: void <init>(java.security.KeyStore$ProtectionParameter)>($r18);

        virtualinvoke r1.<java.security.KeyStore: void load(java.security.KeyStore$LoadStoreParameter)>($r15);

     label14:
        r0.<java.security.KeyStore$Builder$BuilderImpl: boolean isGetKeyStore> = 1;

     label15:
        return r1;

     label16:
        $r27 := @caughtexception;

        r29 = $r27;

        r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStoreException lastException> = r29;

        throw r29;

     label17:
        $r26 := @caughtexception;

        r30 = $r26;

        $r25 = new java.security.KeyStoreException;

        specialinvoke $r25.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>(r30);

        r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStoreException lastException> = $r25;

        throw $r25;

        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.security.KeyStoreException from label02 to label15 with label16;
        catch java.lang.Exception from label02 to label15 with label17;
    }

    public synchronized java.security.KeyStore$ProtectionParameter getProtectionParameter(java.lang.String) throws java.security.KeyStoreException
    {
        java.security.KeyStore$Builder$BuilderImpl r0;
        java.lang.String r1;
        boolean $z0;
        java.security.KeyStore$ProtectionParameter $r2;
        java.lang.IllegalStateException $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: java.security.KeyStore$Builder$BuilderImpl;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("alias == null");

        throw $r4;

     label1:
        $z0 = r0.<java.security.KeyStore$Builder$BuilderImpl: boolean isGetKeyStore>;

        if $z0 != 0 goto label2;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("getKeyStore() was not invoked");

        throw $r3;

     label2:
        $r2 = r0.<java.security.KeyStore$Builder$BuilderImpl: java.security.KeyStore$ProtectionParameter protParameter>;

        return $r2;
    }
}
