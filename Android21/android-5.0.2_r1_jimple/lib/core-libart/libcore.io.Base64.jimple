public final class libcore.io.Base64 extends java.lang.Object
{
    private static final byte[] map;

    private void <init>()
    {
        libcore.io.Base64 r0;

        r0 := @this: libcore.io.Base64;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] decode(byte[])
    {
        byte[] r0, $r1;
        int $i0;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        $r1 = staticinvoke <libcore.io.Base64: byte[] decode(byte[],int)>(r0, $i0);

        return $r1;
    }

    public static byte[] decode(byte[], int)
    {
        byte[] r0, r1, $r2, r3;
        int i0, i1, i2, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i16, $i17, $i19, $i21, $i22, i26, i27, i28, i29;
        byte b3, $b14, $b15, $b18, $b20, $b23, $b24, b25;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i8 = i0 / 4;

        i1 = $i8 * 3;

        if i1 != 0 goto label01;

        $r2 = <libcore.util.EmptyArray: byte[] BYTE>;

        return $r2;

     label01:
        r1 = newarray (byte)[i1];

        i2 = 0;

     label02:
        $i9 = i0 - 1;

        b3 = r0[$i9];

        if b3 == 10 goto label04;

        if b3 == 13 goto label04;

        if b3 == 32 goto label04;

        if b3 != 9 goto label03;

        goto label04;

     label03:
        if b3 != 61 goto label05;

        i2 = i2 + 1;

     label04:
        i0 = i0 + -1;

        goto label02;

     label05:
        i4 = 0;

        i5 = 0;

        i6 = 0;

        i7 = 0;

     label06:
        if i7 >= i0 goto label16;

        b25 = r0[i7];

        if b25 == 10 goto label15;

        if b25 == 13 goto label15;

        if b25 == 32 goto label15;

        if b25 != 9 goto label07;

        goto label15;

     label07:
        if b25 < 65 goto label08;

        if b25 > 90 goto label08;

        i26 = b25 - 65;

        goto label13;

     label08:
        if b25 < 97 goto label09;

        if b25 > 122 goto label09;

        i26 = b25 - 71;

        goto label13;

     label09:
        if b25 < 48 goto label10;

        if b25 > 57 goto label10;

        i26 = b25 + 4;

        goto label13;

     label10:
        if b25 != 43 goto label11;

        i26 = 62;

        goto label13;

     label11:
        if b25 != 47 goto label12;

        i26 = 63;

        goto label13;

     label12:
        return null;

     label13:
        $i17 = i6 << 6;

        $b18 = (byte) i26;

        i6 = $i17 | $b18;

        $i19 = i5 % 4;

        if $i19 != 3 goto label14;

        i27 = i4 + 1;

        $i21 = i6 >> 16;

        $b20 = (byte) $i21;

        r1[i4] = $b20;

        i28 = i27 + 1;

        $i22 = i6 >> 8;

        $b23 = (byte) $i22;

        r1[i27] = $b23;

        i4 = i28 + 1;

        $b24 = (byte) i6;

        r1[i28] = $b24;

     label14:
        i5 = i5 + 1;

     label15:
        i7 = i7 + 1;

        goto label06;

     label16:
        if i2 <= 0 goto label17;

        $i10 = 6 * i2;

        i29 = i6 << $i10;

        $i11 = i4;

        i4 = i4 + 1;

        $i12 = i29 >> 16;

        $b14 = (byte) $i12;

        r1[$i11] = $b14;

        if i2 != 1 goto label17;

        $i13 = i4;

        i4 = i4 + 1;

        $i16 = i29 >> 8;

        $b15 = (byte) $i16;

        r1[$i13] = $b15;

     label17:
        r3 = newarray (byte)[i4];

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, 0, r3, 0, i4);

        return r3;
    }

    public static java.lang.String encode(byte[])
    {
        byte[] r0, r1, $r2, $r3, $r5, $r7, $r8, $r9, $r10, $r11, $r12;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i17, $i21, $i23, $i26, $i27, $i34, $i44, $i45, $i47, $i51, $i55, $i58, $i61, $i62, i65, i66, i67, i68, i69, i70, i71, i72, i73;
        byte $b12, $b15, $b16, $b18, $b20, $b24, $b25, $b28, $b29, $b30, $b32, $b35, $b36, $b37, $b40, $b41, $b42, $b43, $b46, $b48, $b52, $b56, $b57, $b59, $b60, $b63, $b64;
        short $s13, $s14, $s19, $s22, $s31, $s33, $s38, $s39, $s49, $s50, $s53, $s54;
        java.lang.String $r4;
        java.nio.charset.Charset $r6;

        r0 := @parameter0: byte[];

        $i4 = lengthof r0;

        $i5 = $i4 + 2;

        $i6 = $i5 * 4;

        i0 = $i6 / 3;

        r1 = newarray (byte)[i0];

        i1 = 0;

        $i9 = lengthof r0;

        $i7 = lengthof r0;

        $i8 = $i7 % 3;

        i2 = $i9 - $i8;

        i3 = 0;

     label1:
        if i3 >= i2 goto label2;

        i65 = i1 + 1;

        $r9 = <libcore.io.Base64: byte[] map>;

        $b40 = r0[i3];

        $s39 = $b40 & 255;

        $s38 = $s39 >> 2;

        $b43 = $r9[$s38];

        r1[i1] = $b43;

        i66 = i65 + 1;

        $r10 = <libcore.io.Base64: byte[] map>;

        $b42 = r0[i3];

        $b41 = $b42 & 3;

        $i44 = $b41 << 4;

        $i47 = i3 + 1;

        $b48 = r0[$i47];

        $s49 = $b48 & 255;

        $s50 = $s49 >> 4;

        $i45 = $i44 | $s50;

        $b46 = $r10[$i45];

        r1[i65] = $b46;

        i67 = i66 + 1;

        $r11 = <libcore.io.Base64: byte[] map>;

        $i55 = i3 + 1;

        $b56 = r0[$i55];

        $b57 = $b56 & 15;

        $i62 = $b57 << 2;

        $i51 = i3 + 2;

        $b52 = r0[$i51];

        $s53 = $b52 & 255;

        $s54 = $s53 >> 6;

        $i61 = $i62 | $s54;

        $b63 = $r11[$i61];

        r1[i66] = $b63;

        i1 = i67 + 1;

        $r12 = <libcore.io.Base64: byte[] map>;

        $i58 = i3 + 2;

        $b60 = r0[$i58];

        $b59 = $b60 & 63;

        $b64 = $r12[$b59];

        r1[i67] = $b64;

        i3 = i3 + 3;

        goto label1;

     label2:
        $i10 = lengthof r0;

        $i11 = $i10 % 3;

        lookupswitch($i11)
        {
            case 1: goto label3;
            case 2: goto label4;
            default: goto label5;
        };

     label3:
        i68 = i1 + 1;

        $r7 = <libcore.io.Base64: byte[] map>;

        $b30 = r0[i2];

        $s31 = $b30 & 255;

        $s33 = $s31 >> 2;

        $b32 = $r7[$s33];

        r1[i1] = $b32;

        i69 = i68 + 1;

        $r8 = <libcore.io.Base64: byte[] map>;

        $b36 = r0[i2];

        $b35 = $b36 & 3;

        $i34 = $b35 << 4;

        $b37 = $r8[$i34];

        r1[i68] = $b37;

        i70 = i69 + 1;

        r1[i69] = 61;

        i1 = i70 + 1;

        r1[i70] = 61;

        goto label5;

     label4:
        i71 = i1 + 1;

        $r2 = <libcore.io.Base64: byte[] map>;

        $b12 = r0[i2];

        $s14 = $b12 & 255;

        $s13 = $s14 >> 2;

        $b15 = $r2[$s13];

        r1[i1] = $b15;

        i72 = i71 + 1;

        $r3 = <libcore.io.Base64: byte[] map>;

        $b16 = r0[i2];

        $b18 = $b16 & 3;

        $i21 = $b18 << 4;

        $i17 = i2 + 1;

        $b20 = r0[$i17];

        $s19 = $b20 & 255;

        $s22 = $s19 >> 4;

        $i23 = $i21 | $s22;

        $b24 = $r3[$i23];

        r1[i71] = $b24;

        i73 = i72 + 1;

        $r5 = <libcore.io.Base64: byte[] map>;

        $i27 = i2 + 1;

        $b28 = r0[$i27];

        $b25 = $b28 & 15;

        $i26 = $b25 << 2;

        $b29 = $r5[$i26];

        r1[i72] = $b29;

        i1 = i73 + 1;

        r1[i73] = 61;

     label5:
        $r4 = new java.lang.String;

        $r6 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>;

        specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>(r1, 0, i1, $r6);

        return $r4;
    }

    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[64];

        $r0[0] = 65;

        $r0[1] = 66;

        $r0[2] = 67;

        $r0[3] = 68;

        $r0[4] = 69;

        $r0[5] = 70;

        $r0[6] = 71;

        $r0[7] = 72;

        $r0[8] = 73;

        $r0[9] = 74;

        $r0[10] = 75;

        $r0[11] = 76;

        $r0[12] = 77;

        $r0[13] = 78;

        $r0[14] = 79;

        $r0[15] = 80;

        $r0[16] = 81;

        $r0[17] = 82;

        $r0[18] = 83;

        $r0[19] = 84;

        $r0[20] = 85;

        $r0[21] = 86;

        $r0[22] = 87;

        $r0[23] = 88;

        $r0[24] = 89;

        $r0[25] = 90;

        $r0[26] = 97;

        $r0[27] = 98;

        $r0[28] = 99;

        $r0[29] = 100;

        $r0[30] = 101;

        $r0[31] = 102;

        $r0[32] = 103;

        $r0[33] = 104;

        $r0[34] = 105;

        $r0[35] = 106;

        $r0[36] = 107;

        $r0[37] = 108;

        $r0[38] = 109;

        $r0[39] = 110;

        $r0[40] = 111;

        $r0[41] = 112;

        $r0[42] = 113;

        $r0[43] = 114;

        $r0[44] = 115;

        $r0[45] = 116;

        $r0[46] = 117;

        $r0[47] = 118;

        $r0[48] = 119;

        $r0[49] = 120;

        $r0[50] = 121;

        $r0[51] = 122;

        $r0[52] = 48;

        $r0[53] = 49;

        $r0[54] = 50;

        $r0[55] = 51;

        $r0[56] = 52;

        $r0[57] = 53;

        $r0[58] = 54;

        $r0[59] = 55;

        $r0[60] = 56;

        $r0[61] = 57;

        $r0[62] = 43;

        $r0[63] = 47;

        <libcore.io.Base64: byte[] map> = $r0;

        return;
    }
}
