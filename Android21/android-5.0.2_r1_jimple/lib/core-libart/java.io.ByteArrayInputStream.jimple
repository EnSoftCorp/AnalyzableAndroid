public class java.io.ByteArrayInputStream extends java.io.InputStream
{
    protected byte[] buf;
    protected int pos;
    protected int mark;
    protected int count;

    public void <init>(byte[])
    {
        java.io.ByteArrayInputStream r0;
        byte[] r1;
        int $i0;

        r0 := @this: java.io.ByteArrayInputStream;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<java.io.ByteArrayInputStream: int mark> = 0;

        r0.<java.io.ByteArrayInputStream: byte[] buf> = r1;

        $i0 = lengthof r1;

        r0.<java.io.ByteArrayInputStream: int count> = $i0;

        return;
    }

    public void <init>(byte[], int, int)
    {
        java.io.ByteArrayInputStream r0;
        byte[] r1;
        int i0, i1, $i2, $i3, $i4;

        r0 := @this: java.io.ByteArrayInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<java.io.ByteArrayInputStream: byte[] buf> = r1;

        r0.<java.io.ByteArrayInputStream: int pos> = i0;

        r0.<java.io.ByteArrayInputStream: int mark> = i0;

        $i3 = i0 + i1;

        $i2 = lengthof r1;

        if $i3 <= $i2 goto label1;

        $i4 = lengthof r1;

        goto label2;

     label1:
        $i4 = i0 + i1;

     label2:
        r0.<java.io.ByteArrayInputStream: int count> = $i4;

        return;
    }

    public synchronized int available()
    {
        java.io.ByteArrayInputStream r0;
        int $i0, $i1, $i2;

        r0 := @this: java.io.ByteArrayInputStream;

        $i1 = r0.<java.io.ByteArrayInputStream: int count>;

        $i0 = r0.<java.io.ByteArrayInputStream: int pos>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public void close() throws java.io.IOException
    {
        java.io.ByteArrayInputStream r0;

        r0 := @this: java.io.ByteArrayInputStream;

        return;
    }

    public synchronized void mark(int)
    {
        java.io.ByteArrayInputStream r0;
        int i0, $i1;

        r0 := @this: java.io.ByteArrayInputStream;

        i0 := @parameter0: int;

        $i1 = r0.<java.io.ByteArrayInputStream: int pos>;

        r0.<java.io.ByteArrayInputStream: int mark> = $i1;

        return;
    }

    public boolean markSupported()
    {
        java.io.ByteArrayInputStream r0;

        r0 := @this: java.io.ByteArrayInputStream;

        return 1;
    }

    public synchronized int read()
    {
        java.io.ByteArrayInputStream r0;
        int $i0, $i1, $i2, $i3;
        byte[] $r1;
        byte $b4;
        short $s5;

        r0 := @this: java.io.ByteArrayInputStream;

        $i1 = r0.<java.io.ByteArrayInputStream: int pos>;

        $i0 = r0.<java.io.ByteArrayInputStream: int count>;

        if $i1 >= $i0 goto label1;

        $r1 = r0.<java.io.ByteArrayInputStream: byte[] buf>;

        $i2 = r0.<java.io.ByteArrayInputStream: int pos>;

        $i3 = $i2 + 1;

        r0.<java.io.ByteArrayInputStream: int pos> = $i3;

        $b4 = $r1[$i2];

        $s5 = $b4 & 255;

        goto label2;

     label1:
        $s5 = -1;

     label2:
        return $s5;
    }

    public synchronized int read(byte[], int, int)
    {
        java.io.ByteArrayInputStream r0;
        byte[] r1, $r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;

        r0 := @this: java.io.ByteArrayInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = lengthof r1;

        staticinvoke <java.util.Arrays: void checkOffsetAndCount(int,int,int)>($i3, i0, i1);

        $i5 = r0.<java.io.ByteArrayInputStream: int pos>;

        $i4 = r0.<java.io.ByteArrayInputStream: int count>;

        if $i5 < $i4 goto label1;

        return -1;

     label1:
        if i1 != 0 goto label2;

        return 0;

     label2:
        $i7 = r0.<java.io.ByteArrayInputStream: int count>;

        $i6 = r0.<java.io.ByteArrayInputStream: int pos>;

        $i8 = $i7 - $i6;

        if $i8 >= i1 goto label3;

        $i14 = r0.<java.io.ByteArrayInputStream: int count>;

        $i12 = r0.<java.io.ByteArrayInputStream: int pos>;

        $i13 = $i14 - $i12;

        goto label4;

     label3:
        $i13 = i1;

     label4:
        i2 = $i13;

        $r2 = r0.<java.io.ByteArrayInputStream: byte[] buf>;

        $i9 = r0.<java.io.ByteArrayInputStream: int pos>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r2, $i9, r1, i0, i2);

        $i10 = r0.<java.io.ByteArrayInputStream: int pos>;

        $i11 = $i10 + i2;

        r0.<java.io.ByteArrayInputStream: int pos> = $i11;

        return i2;
    }

    public synchronized void reset()
    {
        java.io.ByteArrayInputStream r0;
        int $i0;

        r0 := @this: java.io.ByteArrayInputStream;

        $i0 = r0.<java.io.ByteArrayInputStream: int mark>;

        r0.<java.io.ByteArrayInputStream: int pos> = $i0;

        return;
    }

    public synchronized long skip(long)
    {
        java.io.ByteArrayInputStream r0;
        long l0, $l6, $l9, $l10, $l14;
        int i1, $i3, $i4, $i5, $i8, $i11, $i12, $i13;
        byte $b2, $b7;

        r0 := @this: java.io.ByteArrayInputStream;

        l0 := @parameter0: long;

        $b2 = l0 cmp 0L;

        if $b2 > 0 goto label1;

        return 0L;

     label1:
        i1 = r0.<java.io.ByteArrayInputStream: int pos>;

        $i4 = r0.<java.io.ByteArrayInputStream: int count>;

        $i3 = r0.<java.io.ByteArrayInputStream: int pos>;

        $i5 = $i4 - $i3;

        $l6 = (long) $i5;

        $b7 = $l6 cmp l0;

        if $b7 >= 0 goto label2;

        $i11 = r0.<java.io.ByteArrayInputStream: int count>;

        goto label3;

     label2:
        $i8 = r0.<java.io.ByteArrayInputStream: int pos>;

        $l9 = (long) $i8;

        $l10 = $l9 + l0;

        $i11 = (int) $l10;

     label3:
        r0.<java.io.ByteArrayInputStream: int pos> = $i11;

        $i12 = r0.<java.io.ByteArrayInputStream: int pos>;

        $i13 = $i12 - i1;

        $l14 = (long) $i13;

        return $l14;
    }
}
