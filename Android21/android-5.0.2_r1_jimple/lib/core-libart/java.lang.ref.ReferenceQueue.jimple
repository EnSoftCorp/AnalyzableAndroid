public class java.lang.ref.ReferenceQueue extends java.lang.Object
{
    private static final int NANOS_PER_MILLI;
    private java.lang.ref.Reference head;
    private java.lang.ref.Reference tail;
    public static java.lang.ref.Reference unenqueued;

    public void <init>()
    {
        java.lang.ref.ReferenceQueue r0;

        r0 := @this: java.lang.ref.ReferenceQueue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public synchronized java.lang.ref.Reference poll()
    {
        java.lang.ref.ReferenceQueue r0;
        java.lang.ref.Reference r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: java.lang.ref.ReferenceQueue;

        $r2 = r0.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference head>;

        if $r2 != null goto label1;

        return null;

     label1:
        r1 = r0.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference head>;

        $r4 = r0.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference head>;

        $r3 = r0.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference tail>;

        if $r4 != $r3 goto label2;

        r0.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference tail> = null;

        r0.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference head> = null;

        goto label3;

     label2:
        $r5 = r0.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference head>;

        $r6 = $r5.<java.lang.ref.Reference: java.lang.ref.Reference queueNext>;

        r0.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference head> = $r6;

     label3:
        r1.<java.lang.ref.Reference: java.lang.ref.Reference queueNext> = null;

        return r1;
    }

    public java.lang.ref.Reference remove() throws java.lang.InterruptedException
    {
        java.lang.ref.ReferenceQueue r0;
        java.lang.ref.Reference $r1;

        r0 := @this: java.lang.ref.ReferenceQueue;

        $r1 = virtualinvoke r0.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove(long)>(0L);

        return $r1;
    }

    public synchronized java.lang.ref.Reference remove(long) throws java.lang.InterruptedException
    {
        java.lang.ref.ReferenceQueue r0;
        long l0, l1, l3, l4, l5, $l10, $l11, $l12;
        int i2;
        byte $b6, $b7, $b8, $b9;
        java.lang.ref.Reference $r1, $r2, $r3, $r4, $r5, $r6;
        java.lang.StringBuilder $r7, $r9, $r10;
        java.lang.IllegalArgumentException $r8;
        java.lang.String $r11;

        r0 := @this: java.lang.ref.ReferenceQueue;

        l0 := @parameter0: long;

        $b6 = l0 cmp 0L;

        if $b6 >= 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("timeout < 0: ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r8;

     label1:
        $r1 = r0.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference head>;

        if $r1 == null goto label2;

        $r5 = virtualinvoke r0.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>();

        return $r5;

     label2:
        $b7 = l0 cmp 0L;

        if $b7 == 0 goto label3;

        $b8 = l0 cmp 9223372036854L;

        if $b8 <= 0 goto label4;

     label3:
        virtualinvoke r0.<java.lang.Object: void wait(long)>(0L);

        $r2 = r0.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference head>;

        if $r2 == null goto label3;

        $r3 = virtualinvoke r0.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>();

        return $r3;

     label4:
        l1 = l0 * 1000000L;

        i2 = 0;

        l3 = staticinvoke <java.lang.System: long nanoTime()>();

     label5:
        virtualinvoke r0.<java.lang.Object: void wait(long,int)>(l0, i2);

        $r4 = r0.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference head>;

        if $r4 == null goto label6;

        goto label8;

     label6:
        $l10 = staticinvoke <java.lang.System: long nanoTime()>();

        l4 = $l10 - l3;

        l5 = l1 - l4;

        $b9 = l5 cmp 0L;

        if $b9 > 0 goto label7;

        goto label8;

     label7:
        l0 = l5 / 1000000L;

        $l12 = l0 * 1000000L;

        $l11 = l5 - $l12;

        i2 = (int) $l11;

        goto label5;

     label8:
        $r6 = virtualinvoke r0.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>();

        return $r6;
    }

    synchronized void enqueue(java.lang.ref.Reference)
    {
        java.lang.ref.ReferenceQueue r0;
        java.lang.ref.Reference r1, $r2, $r3, $r4;

        r0 := @this: java.lang.ref.ReferenceQueue;

        r1 := @parameter0: java.lang.ref.Reference;

        $r2 = r0.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference tail>;

        if $r2 != null goto label1;

        r0.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference head> = r1;

        goto label2;

     label1:
        $r3 = r0.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference tail>;

        $r3.<java.lang.ref.Reference: java.lang.ref.Reference queueNext> = r1;

     label2:
        r0.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference tail> = r1;

        $r4 = r0.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference tail>;

        $r4.<java.lang.ref.Reference: java.lang.ref.Reference queueNext> = r1;

        virtualinvoke r0.<java.lang.Object: void notify()>();

        return;
    }

    static void add(java.lang.ref.Reference)
    {
        java.lang.ref.Reference r0, r2, $r4, $r5, $r6, $r7, $r8, r11;
        java.lang.Class r1, $r9;
        java.lang.Throwable r3, $r10;

        r0 := @parameter0: java.lang.ref.Reference;

        r1 = class "java/lang/ref/ReferenceQueue";

        entermonitor class "java/lang/ref/ReferenceQueue";

     label01:
        $r4 = <java.lang.ref.ReferenceQueue: java.lang.ref.Reference unenqueued>;

        if $r4 != null goto label02;

        <java.lang.ref.ReferenceQueue: java.lang.ref.Reference unenqueued> = r0;

        goto label07;

     label02:
        r2 = <java.lang.ref.ReferenceQueue: java.lang.ref.Reference unenqueued>;

     label03:
        $r6 = r2.<java.lang.ref.Reference: java.lang.ref.Reference pendingNext>;

        $r5 = <java.lang.ref.ReferenceQueue: java.lang.ref.Reference unenqueued>;

        if $r6 == $r5 goto label04;

        r2 = r2.<java.lang.ref.Reference: java.lang.ref.Reference pendingNext>;

        goto label03;

     label04:
        r2.<java.lang.ref.Reference: java.lang.ref.Reference pendingNext> = r0;

        r11 = r0;

     label05:
        $r7 = r11.<java.lang.ref.Reference: java.lang.ref.Reference pendingNext>;

        if $r7 == r0 goto label06;

        r11 = r11.<java.lang.ref.Reference: java.lang.ref.Reference pendingNext>;

        goto label05;

     label06:
        $r8 = <java.lang.ref.ReferenceQueue: java.lang.ref.Reference unenqueued>;

        r11.<java.lang.ref.Reference: java.lang.ref.Reference pendingNext> = $r8;

     label07:
        $r9 = class "java/lang/ref/ReferenceQueue";

        virtualinvoke $r9.<java.lang.Object: void notifyAll()>();

        exitmonitor r1;

     label08:
        goto label11;

     label09:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r1;

     label10:
        throw r3;

     label11:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    static void <clinit>()
    {
        <java.lang.ref.ReferenceQueue: int NANOS_PER_MILLI> = 1000000;

        <java.lang.ref.ReferenceQueue: java.lang.ref.Reference unenqueued> = null;

        return;
    }
}
