class java.util.concurrent.LinkedBlockingQueue$Itr extends java.lang.Object implements java.util.Iterator
{
    private java.util.concurrent.LinkedBlockingQueue$Node current;
    private java.util.concurrent.LinkedBlockingQueue$Node lastRet;
    private java.lang.Object currentElement;
    final java.util.concurrent.LinkedBlockingQueue this$0;

    void <init>(java.util.concurrent.LinkedBlockingQueue)
    {
        java.util.concurrent.LinkedBlockingQueue$Itr r0;
        java.util.concurrent.LinkedBlockingQueue r1;
        java.lang.Throwable r2, $r8;
        java.util.concurrent.LinkedBlockingQueue$Node $r3, $r4, $r5, $r6;
        java.lang.Object $r7;

        r0 := @this: java.util.concurrent.LinkedBlockingQueue$Itr;

        r1 := @parameter0: java.util.concurrent.LinkedBlockingQueue;

        r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.util.concurrent.LinkedBlockingQueue this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r1.<java.util.concurrent.LinkedBlockingQueue: void fullyLock()>();

     label1:
        $r3 = r1.<java.util.concurrent.LinkedBlockingQueue: java.util.concurrent.LinkedBlockingQueue$Node head>;

        $r4 = $r3.<java.util.concurrent.LinkedBlockingQueue$Node: java.util.concurrent.LinkedBlockingQueue$Node next>;

        r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.util.concurrent.LinkedBlockingQueue$Node current> = $r4;

        $r5 = r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.util.concurrent.LinkedBlockingQueue$Node current>;

        if $r5 == null goto label2;

        $r6 = r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.util.concurrent.LinkedBlockingQueue$Node current>;

        $r7 = $r6.<java.util.concurrent.LinkedBlockingQueue$Node: java.lang.Object item>;

        r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.lang.Object currentElement> = $r7;

     label2:
        virtualinvoke r1.<java.util.concurrent.LinkedBlockingQueue: void fullyUnlock()>();

        goto label5;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

     label4:
        virtualinvoke r1.<java.util.concurrent.LinkedBlockingQueue: void fullyUnlock()>();

        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean hasNext()
    {
        java.util.concurrent.LinkedBlockingQueue$Itr r0;
        java.util.concurrent.LinkedBlockingQueue$Node $r1;
        boolean $z0;

        r0 := @this: java.util.concurrent.LinkedBlockingQueue$Itr;

        $r1 = r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.util.concurrent.LinkedBlockingQueue$Node current>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private java.util.concurrent.LinkedBlockingQueue$Node nextNode(java.util.concurrent.LinkedBlockingQueue$Node)
    {
        java.util.concurrent.LinkedBlockingQueue$Itr r0;
        java.util.concurrent.LinkedBlockingQueue$Node r1, r2, $r5, $r6;
        java.lang.Object $r3;
        java.util.concurrent.LinkedBlockingQueue $r4;

        r0 := @this: java.util.concurrent.LinkedBlockingQueue$Itr;

        r1 := @parameter0: java.util.concurrent.LinkedBlockingQueue$Node;

     label1:
        r2 = r1.<java.util.concurrent.LinkedBlockingQueue$Node: java.util.concurrent.LinkedBlockingQueue$Node next>;

        if r2 != r1 goto label2;

        $r4 = r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.util.concurrent.LinkedBlockingQueue this$0>;

        $r5 = $r4.<java.util.concurrent.LinkedBlockingQueue: java.util.concurrent.LinkedBlockingQueue$Node head>;

        $r6 = $r5.<java.util.concurrent.LinkedBlockingQueue$Node: java.util.concurrent.LinkedBlockingQueue$Node next>;

        return $r6;

     label2:
        if r2 == null goto label3;

        $r3 = r2.<java.util.concurrent.LinkedBlockingQueue$Node: java.lang.Object item>;

        if $r3 == null goto label4;

     label3:
        return r2;

     label4:
        r1 = r2;

        goto label1;
    }

    public java.lang.Object next()
    {
        java.util.concurrent.LinkedBlockingQueue$Itr r0;
        java.lang.Object r1, r2, $r11;
        java.lang.Throwable r3, $r14;
        java.util.concurrent.LinkedBlockingQueue $r4, $r12, $r15;
        java.util.concurrent.LinkedBlockingQueue$Node $r5, $r6, $r7, $r8, $r9, $r10;
        java.util.NoSuchElementException $r13;

        r0 := @this: java.util.concurrent.LinkedBlockingQueue$Itr;

        $r4 = r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.util.concurrent.LinkedBlockingQueue this$0>;

        virtualinvoke $r4.<java.util.concurrent.LinkedBlockingQueue: void fullyLock()>();

     label1:
        $r5 = r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.util.concurrent.LinkedBlockingQueue$Node current>;

        if $r5 != null goto label2;

        $r13 = new java.util.NoSuchElementException;

        specialinvoke $r13.<java.util.NoSuchElementException: void <init>()>();

        throw $r13;

     label2:
        r1 = r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.lang.Object currentElement>;

        $r6 = r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.util.concurrent.LinkedBlockingQueue$Node current>;

        r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.util.concurrent.LinkedBlockingQueue$Node lastRet> = $r6;

        $r7 = r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.util.concurrent.LinkedBlockingQueue$Node current>;

        $r8 = specialinvoke r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.util.concurrent.LinkedBlockingQueue$Node nextNode(java.util.concurrent.LinkedBlockingQueue$Node)>($r7);

        r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.util.concurrent.LinkedBlockingQueue$Node current> = $r8;

        $r9 = r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.util.concurrent.LinkedBlockingQueue$Node current>;

        if $r9 != null goto label3;

        $r11 = null;

        goto label4;

     label3:
        $r10 = r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.util.concurrent.LinkedBlockingQueue$Node current>;

        $r11 = $r10.<java.util.concurrent.LinkedBlockingQueue$Node: java.lang.Object item>;

     label4:
        r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.lang.Object currentElement> = $r11;

        r2 = r1;

     label5:
        $r12 = r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.util.concurrent.LinkedBlockingQueue this$0>;

        virtualinvoke $r12.<java.util.concurrent.LinkedBlockingQueue: void fullyUnlock()>();

        return r2;

     label6:
        $r14 := @caughtexception;

        r3 = $r14;

     label7:
        $r15 = r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.util.concurrent.LinkedBlockingQueue this$0>;

        virtualinvoke $r15.<java.util.concurrent.LinkedBlockingQueue: void fullyUnlock()>();

        throw r3;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void remove()
    {
        java.util.concurrent.LinkedBlockingQueue$Itr r0;
        java.util.concurrent.LinkedBlockingQueue$Node r1, r2, r3, $r5;
        java.lang.Throwable r4, $r11;
        java.util.concurrent.LinkedBlockingQueue $r6, $r7, $r8, $r9, $r12;
        java.lang.IllegalStateException $r10;

        r0 := @this: java.util.concurrent.LinkedBlockingQueue$Itr;

        $r5 = r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.util.concurrent.LinkedBlockingQueue$Node lastRet>;

        if $r5 != null goto label1;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>()>();

        throw $r10;

     label1:
        $r6 = r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.util.concurrent.LinkedBlockingQueue this$0>;

        virtualinvoke $r6.<java.util.concurrent.LinkedBlockingQueue: void fullyLock()>();

     label2:
        r1 = r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.util.concurrent.LinkedBlockingQueue$Node lastRet>;

        r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.util.concurrent.LinkedBlockingQueue$Node lastRet> = null;

        $r7 = r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.util.concurrent.LinkedBlockingQueue this$0>;

        r2 = $r7.<java.util.concurrent.LinkedBlockingQueue: java.util.concurrent.LinkedBlockingQueue$Node head>;

        r3 = r2.<java.util.concurrent.LinkedBlockingQueue$Node: java.util.concurrent.LinkedBlockingQueue$Node next>;

     label3:
        if r3 == null goto label5;

        if r3 != r1 goto label4;

        $r9 = r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.util.concurrent.LinkedBlockingQueue this$0>;

        virtualinvoke $r9.<java.util.concurrent.LinkedBlockingQueue: void unlink(java.util.concurrent.LinkedBlockingQueue$Node,java.util.concurrent.LinkedBlockingQueue$Node)>(r3, r2);

        goto label5;

     label4:
        r2 = r3;

        r3 = r3.<java.util.concurrent.LinkedBlockingQueue$Node: java.util.concurrent.LinkedBlockingQueue$Node next>;

        goto label3;

     label5:
        $r8 = r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.util.concurrent.LinkedBlockingQueue this$0>;

        virtualinvoke $r8.<java.util.concurrent.LinkedBlockingQueue: void fullyUnlock()>();

        goto label8;

     label6:
        $r11 := @caughtexception;

        r4 = $r11;

     label7:
        $r12 = r0.<java.util.concurrent.LinkedBlockingQueue$Itr: java.util.concurrent.LinkedBlockingQueue this$0>;

        virtualinvoke $r12.<java.util.concurrent.LinkedBlockingQueue: void fullyUnlock()>();

        throw r4;

     label8:
        return;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }
}
