public final class java.io.Console extends java.lang.Object implements java.io.Flushable
{
    private static final java.lang.Object CONSOLE_LOCK;
    private static final java.io.Console console;
    private final java.io.Console$ConsoleReader reader;
    private final java.io.PrintWriter writer;

    public static java.io.Console getConsole()
    {
        java.io.Console $r0;

        $r0 = <java.io.Console: java.io.Console console>;

        return $r0;
    }

    private static java.io.Console makeConsole()
    {
        java.io.UnsupportedEncodingException r0, $r8;
        java.io.FileDescriptor $r1, $r3;
        libcore.io.Os $r2, $r4;
        boolean $z0, $z1;
        java.io.Console $r5;
        java.io.PrintStream $r6;
        java.io.InputStream $r7;
        java.lang.AssertionError $r9;

        $r2 = <libcore.io.Libcore: libcore.io.Os os>;

        $r1 = <java.io.FileDescriptor: java.io.FileDescriptor in>;

        $z0 = interfaceinvoke $r2.<libcore.io.Os: boolean isatty(java.io.FileDescriptor)>($r1);

        if $z0 == 0 goto label1;

        $r4 = <libcore.io.Libcore: libcore.io.Os os>;

        $r3 = <java.io.FileDescriptor: java.io.FileDescriptor out>;

        $z1 = interfaceinvoke $r4.<libcore.io.Os: boolean isatty(java.io.FileDescriptor)>($r3);

        if $z1 != 0 goto label2;

     label1:
        return null;

     label2:
        $r5 = new java.io.Console;

        $r7 = <java.lang.System: java.io.InputStream in>;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r5.<java.io.Console: void <init>(java.io.InputStream,java.io.OutputStream)>($r7, $r6);

     label3:
        return $r5;

     label4:
        $r8 := @caughtexception;

        r0 = $r8;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>(r0);

        throw $r9;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    private void <init>(java.io.InputStream, java.io.OutputStream) throws java.io.UnsupportedEncodingException
    {
        java.io.Console r0;
        java.io.InputStream r1;
        java.io.OutputStream r2;
        java.io.Console$ConsoleReader $r3;
        java.io.Console$ConsoleWriter $r4;

        r0 := @this: java.io.Console;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.io.OutputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.io.Console$ConsoleReader;

        specialinvoke $r3.<java.io.Console$ConsoleReader: void <init>(java.io.InputStream)>(r1);

        r0.<java.io.Console: java.io.Console$ConsoleReader reader> = $r3;

        $r4 = new java.io.Console$ConsoleWriter;

        specialinvoke $r4.<java.io.Console$ConsoleWriter: void <init>(java.io.OutputStream)>(r2);

        r0.<java.io.Console: java.io.PrintWriter writer> = $r4;

        return;
    }

    public void flush()
    {
        java.io.Console r0;
        java.io.PrintWriter $r1;

        r0 := @this: java.io.Console;

        $r1 = r0.<java.io.Console: java.io.PrintWriter writer>;

        virtualinvoke $r1.<java.io.PrintWriter: void flush()>();

        return;
    }

    public transient java.io.Console format(java.lang.String, java.lang.Object[])
    {
        java.io.Console r0;
        java.lang.String r1;
        java.lang.Object[] r2;
        java.util.Formatter r3, $r4;
        java.io.PrintWriter $r5;

        r0 := @this: java.io.Console;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r4 = new java.util.Formatter;

        $r5 = r0.<java.io.Console: java.io.PrintWriter writer>;

        specialinvoke $r4.<java.util.Formatter: void <init>(java.lang.Appendable)>($r5);

        r3 = $r4;

        virtualinvoke r3.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(r1, r2);

        virtualinvoke r3.<java.util.Formatter: void flush()>();

        return r0;
    }

    public transient java.io.Console printf(java.lang.String, java.lang.Object[])
    {
        java.io.Console r0, $r3;
        java.lang.String r1;
        java.lang.Object[] r2;

        r0 := @this: java.io.Console;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = virtualinvoke r0.<java.io.Console: java.io.Console format(java.lang.String,java.lang.Object[])>(r1, r2);

        return $r3;
    }

    public java.io.Reader reader()
    {
        java.io.Console r0;
        java.io.Console$ConsoleReader $r1;

        r0 := @this: java.io.Console;

        $r1 = r0.<java.io.Console: java.io.Console$ConsoleReader reader>;

        return $r1;
    }

    public java.lang.String readLine()
    {
        java.io.Console r0;
        java.io.IOException r1, $r4;
        java.io.Console$ConsoleReader $r2;
        java.lang.String $r3;
        java.io.IOError $r5;

        r0 := @this: java.io.Console;

     label1:
        $r2 = r0.<java.io.Console: java.io.Console$ConsoleReader reader>;

        $r3 = virtualinvoke $r2.<java.io.Console$ConsoleReader: java.lang.String readLine()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.io.IOError;

        specialinvoke $r5.<java.io.IOError: void <init>(java.lang.Throwable)>(r1);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public transient java.lang.String readLine(java.lang.String, java.lang.Object[])
    {
        java.io.Console r0;
        java.lang.String r1, $r7;
        java.lang.Object[] r2;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r8;

        r0 := @this: java.io.Console;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r5 = <java.io.Console: java.lang.Object CONSOLE_LOCK>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        virtualinvoke r0.<java.io.Console: java.io.Console format(java.lang.String,java.lang.Object[])>(r1, r2);

        $r7 = virtualinvoke r0.<java.io.Console: java.lang.String readLine()>();

        exitmonitor r3;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r3;

     label4:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public char[] readPassword()
    {
        java.io.Console r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: java.io.Console;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public transient char[] readPassword(java.lang.String, java.lang.Object[])
    {
        java.io.Console r0;
        java.lang.String r1;
        java.lang.Object[] r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: java.io.Console;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public java.io.PrintWriter writer()
    {
        java.io.Console r0;
        java.io.PrintWriter $r1;

        r0 := @this: java.io.Console;

        $r1 = r0.<java.io.Console: java.io.PrintWriter writer>;

        return $r1;
    }

    static java.lang.Object access$000()
    {
        java.lang.Object $r0;

        $r0 = <java.io.Console: java.lang.Object CONSOLE_LOCK>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;
        java.io.Console $r1;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <java.io.Console: java.lang.Object CONSOLE_LOCK> = $r0;

        $r1 = staticinvoke <java.io.Console: java.io.Console makeConsole()>();

        <java.io.Console: java.io.Console console> = $r1;

        return;
    }
}
