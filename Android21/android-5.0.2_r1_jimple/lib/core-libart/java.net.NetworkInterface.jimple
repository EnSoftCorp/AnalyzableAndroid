public final class java.net.NetworkInterface extends java.lang.Object
{
    private static final java.io.File SYS_CLASS_NET;
    private final java.lang.String name;
    private final int interfaceIndex;
    private final java.util.List interfaceAddresses;
    private final java.util.List addresses;
    private final java.util.List children;
    private java.net.NetworkInterface parent;

    private void <init>(java.lang.String, int, java.util.List, java.util.List)
    {
        java.net.NetworkInterface r0;
        java.lang.String r1;
        int i0;
        java.util.List r2, r3;
        java.util.LinkedList $r4;

        r0 := @this: java.net.NetworkInterface;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r0.<java.net.NetworkInterface: java.util.List children> = $r4;

        r0.<java.net.NetworkInterface: java.net.NetworkInterface parent> = null;

        r0.<java.net.NetworkInterface: java.lang.String name> = r1;

        r0.<java.net.NetworkInterface: int interfaceIndex> = i0;

        r0.<java.net.NetworkInterface: java.util.List addresses> = r2;

        r0.<java.net.NetworkInterface: java.util.List interfaceAddresses> = r3;

        return;
    }

    static java.net.NetworkInterface forUnboundMulticastSocket()
    {
        java.net.NetworkInterface $r0;
        java.net.InetAddress[] $r1;
        java.net.InetAddress $r2;
        java.util.List $r3, $r4;

        $r0 = new java.net.NetworkInterface;

        $r1 = newarray (java.net.InetAddress)[1];

        $r2 = <java.net.Inet6Address: java.net.InetAddress ANY>;

        $r1[0] = $r2;

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        specialinvoke $r0.<java.net.NetworkInterface: void <init>(java.lang.String,int,java.util.List,java.util.List)>(null, -1, $r3, $r4);

        return $r0;
    }

    public int getIndex()
    {
        java.net.NetworkInterface r0;
        int $i0;

        r0 := @this: java.net.NetworkInterface;

        $i0 = r0.<java.net.NetworkInterface: int interfaceIndex>;

        return $i0;
    }

    public java.lang.String getName()
    {
        java.net.NetworkInterface r0;
        java.lang.String $r1;

        r0 := @this: java.net.NetworkInterface;

        $r1 = r0.<java.net.NetworkInterface: java.lang.String name>;

        return $r1;
    }

    public java.util.Enumeration getInetAddresses()
    {
        java.net.NetworkInterface r0;
        java.util.List $r1;
        java.util.Enumeration $r2;

        r0 := @this: java.net.NetworkInterface;

        $r1 = r0.<java.net.NetworkInterface: java.util.List addresses>;

        $r2 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r1);

        return $r2;
    }

    public java.lang.String getDisplayName()
    {
        java.net.NetworkInterface r0;
        java.lang.String $r1;

        r0 := @this: java.net.NetworkInterface;

        $r1 = r0.<java.net.NetworkInterface: java.lang.String name>;

        return $r1;
    }

    public static java.net.NetworkInterface getByName(java.lang.String) throws java.net.SocketException
    {
        java.lang.String r0;
        boolean $z0;
        java.lang.String[] $r1;
        java.net.NetworkInterface $r2;
        java.lang.NullPointerException $r3;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("interfaceName == null");

        throw $r3;

     label1:
        $z0 = staticinvoke <java.net.NetworkInterface: boolean isValidInterfaceName(java.lang.String)>(r0);

        if $z0 != 0 goto label2;

        return null;

     label2:
        $r1 = staticinvoke <java.net.NetworkInterface: java.lang.String[] readIfInet6Lines()>();

        $r2 = staticinvoke <java.net.NetworkInterface: java.net.NetworkInterface getByNameInternal(java.lang.String,java.lang.String[])>(r0, $r1);

        return $r2;
    }

    private static java.net.NetworkInterface getByNameInternal(java.lang.String, java.lang.String[]) throws java.net.SocketException
    {
        java.lang.String r0, $r8;
        java.lang.String[] r1;
        int i0;
        java.util.ArrayList r2, r3, $r9, $r10;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.net.NetworkInterface $r11;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/sys/class/net/");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/ifindex");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = staticinvoke <java.net.NetworkInterface: int readIntFile(java.lang.String)>($r8);

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r2 = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r3 = $r10;

        staticinvoke <java.net.NetworkInterface: void collectIpv6Addresses(java.lang.String,int,java.util.List,java.util.List,java.lang.String[])>(r0, i0, r2, r3, r1);

        staticinvoke <java.net.NetworkInterface: void collectIpv4Address(java.lang.String,java.util.List,java.util.List)>(r0, r2, r3);

        $r11 = new java.net.NetworkInterface;

        specialinvoke $r11.<java.net.NetworkInterface: void <init>(java.lang.String,int,java.util.List,java.util.List)>(r0, i0, r2, r3);

        return $r11;
    }

    private static java.lang.String[] readIfInet6Lines() throws java.net.SocketException
    {
        java.io.IOException r0, $r3;
        java.lang.String $r1;
        java.lang.String[] $r2;
        java.net.SocketException $r4;

     label1:
        $r1 = staticinvoke <libcore.io.IoUtils: java.lang.String readFileAsString(java.lang.String)>("/proc/net/if_inet6");

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        r0 = $r3;

        $r4 = staticinvoke <java.net.NetworkInterface: java.net.SocketException rethrowAsSocketException(java.lang.Exception)>(r0);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void collectIpv6Addresses(java.lang.String, int, java.util.List, java.util.List, java.lang.String[]) throws java.net.SocketException
    {
        java.lang.String r0, r4, r6, $r12, $r16;
        int i0, i1, i2, i3, i4, $i6, $i7, $i8, $i9, $i10, $i12, i14;
        java.util.List r1, r2;
        java.lang.String[] r3, r5;
        byte[] r7;
        short s5;
        java.net.Inet6Address r8, $r13;
        java.lang.StringBuilder $r9, $r10, $r11;
        boolean $z0;
        java.net.InterfaceAddress $r14;
        byte $b11, b13;
        java.lang.NumberFormatException $r15, r18;
        java.net.SocketException $r17;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: java.util.List;

        r2 := @parameter3: java.util.List;

        r3 := @parameter4: java.lang.String[];

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        r4 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        r5 = r3;

        i1 = lengthof r5;

        i2 = 0;

     label2:
        if i2 >= i1 goto label7;

        r6 = r5[i2];

        $z0 = virtualinvoke r6.<java.lang.String: boolean endsWith(java.lang.String)>(r4);

        if $z0 != 0 goto label3;

        goto label6;

     label3:
        r7 = newarray (byte)[16];

        i3 = 0;

     label4:
        $i7 = lengthof r7;

        if i3 >= $i7 goto label5;

        $i9 = 2 * i3;

        $i8 = 2 * i3;

        $i10 = $i8 + 2;

        $r16 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>($i9, $i10);

        $i12 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r16, 16);

        $b11 = (byte) $i12;

        r7[i3] = $b11;

        i3 = i3 + 1;

        goto label4;

     label5:
        b13 = 33;

        $i6 = virtualinvoke r6.<java.lang.String: int indexOf(int,int)>(32, b13);

        i14 = $i6 + 1;

        i4 = virtualinvoke r6.<java.lang.String: int indexOf(int,int)>(32, i14);

        $r12 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(i14, i4);

        s5 = staticinvoke <java.lang.Short: short parseShort(java.lang.String,int)>($r12, 16);

        $r13 = new java.net.Inet6Address;

        specialinvoke $r13.<java.net.Inet6Address: void <init>(byte[],java.lang.String,int)>(r7, null, i0);

        r8 = $r13;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r8);

        $r14 = new java.net.InterfaceAddress;

        specialinvoke $r14.<java.net.InterfaceAddress: void <init>(java.net.Inet6Address,short)>(r8, s5);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r14);

     label6:
        i2 = i2 + 1;

        goto label2;

     label7:
        goto label9;

     label8:
        $r15 := @caughtexception;

        r18 = $r15;

        $r17 = staticinvoke <java.net.NetworkInterface: java.net.SocketException rethrowAsSocketException(java.lang.Exception)>(r18);

        throw $r17;

     label9:
        return;

        catch java.lang.NumberFormatException from label1 to label7 with label8;
    }

    private static void collectIpv4Address(java.lang.String, java.util.List, java.util.List) throws java.net.SocketException
    {
        java.lang.String r0;
        java.util.List r1, r2;
        java.io.FileDescriptor r3;
        java.net.InetAddress r4, r5, r6, $r12;
        java.lang.Throwable r7, $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        libcore.io.Os $r8, $r9, $r10, $r11;
        boolean $z1;
        java.net.Inet4Address $r13, $r15, $r16;
        java.net.InterfaceAddress $r14;
        java.lang.Exception $r17, r23;
        java.net.SocketException $r19, $r20;
        android.system.ErrnoException $r21, r22;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.List;

        r3 = null;

     label1:
        $r8 = <libcore.io.Libcore: libcore.io.Os os>;

        $i1 = <android.system.OsConstants: int AF_INET>;

        $i0 = <android.system.OsConstants: int SOCK_DGRAM>;

        r3 = interfaceinvoke $r8.<libcore.io.Os: java.io.FileDescriptor socket(int,int,int)>($i1, $i0, 0);

        $r9 = <libcore.io.Libcore: libcore.io.Os os>;

        $i2 = <android.system.OsConstants: int SIOCGIFADDR>;

        r4 = interfaceinvoke $r9.<libcore.io.Os: java.net.InetAddress ioctlInetAddress(java.io.FileDescriptor,int,java.lang.String)>(r3, $i2, r0);

        $r10 = <libcore.io.Libcore: libcore.io.Os os>;

        $i3 = <android.system.OsConstants: int SIOCGIFBRDADDR>;

        r5 = interfaceinvoke $r10.<libcore.io.Os: java.net.InetAddress ioctlInetAddress(java.io.FileDescriptor,int,java.lang.String)>(r3, $i3, r0);

        $r11 = <libcore.io.Libcore: libcore.io.Os os>;

        $i4 = <android.system.OsConstants: int SIOCGIFNETMASK>;

        r6 = interfaceinvoke $r11.<libcore.io.Os: java.net.InetAddress ioctlInetAddress(java.io.FileDescriptor,int,java.lang.String)>(r3, $i4, r0);

        $r12 = <java.net.Inet4Address: java.net.InetAddress ANY>;

        $z1 = virtualinvoke r5.<java.net.InetAddress: boolean equals(java.lang.Object)>($r12);

        if $z1 == 0 goto label2;

        r5 = null;

     label2:
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r4);

        $r14 = new java.net.InterfaceAddress;

        $r15 = (java.net.Inet4Address) r4;

        $r16 = (java.net.Inet4Address) r5;

        $r13 = (java.net.Inet4Address) r6;

        specialinvoke $r14.<java.net.InterfaceAddress: void <init>(java.net.Inet4Address,java.net.Inet4Address,java.net.Inet4Address)>($r15, $r16, $r13);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r14);

     label3:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>(r3);

        goto label9;

     label4:
        $r21 := @caughtexception;

        r22 = $r21;

        $i5 = r22.<android.system.ErrnoException: int errno>;

        $i6 = <android.system.OsConstants: int EADDRNOTAVAIL>;

        if $i5 == $i6 goto label5;

        $r20 = staticinvoke <java.net.NetworkInterface: java.net.SocketException rethrowAsSocketException(java.lang.Exception)>(r22);

        throw $r20;

     label5:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>(r3);

        goto label9;

     label6:
        $r17 := @caughtexception;

        r23 = $r17;

        $r19 = staticinvoke <java.net.NetworkInterface: java.net.SocketException rethrowAsSocketException(java.lang.Exception)>(r23);

        throw $r19;

     label7:
        $r18 := @caughtexception;

        r7 = $r18;

     label8:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>(r3);

        throw r7;

     label9:
        return;

        catch android.system.ErrnoException from label1 to label3 with label4;
        catch java.lang.Exception from label1 to label3 with label6;
        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label6 to label8 with label7;
    }

    private static boolean isValidInterfaceName(java.lang.String)
    {
        java.lang.String r0, r3;
        java.lang.String[] r1, r2;
        int i0, i1;
        java.io.File $r4;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r4 = <java.net.NetworkInterface: java.io.File SYS_CLASS_NET>;

        r1 = virtualinvoke $r4.<java.io.File: java.lang.String[] list()>();

        if r1 != null goto label1;

        return 0;

     label1:
        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r3 = r2[i1];

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    private static int readIntFile(java.lang.String) throws java.net.SocketException
    {
        java.lang.String r0, r1, $r2, $r3;
        boolean $z0;
        int $i0, $i1;
        java.lang.Exception $r4, r6;
        java.net.SocketException $r5;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <libcore.io.IoUtils: java.lang.String readFileAsString(java.lang.String)>(r0);

        r1 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("0x");

        if $z0 == 0 goto label3;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(2);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r3, 16);

     label2:
        return $i1;

     label3:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label4:
        return $i0;

     label5:
        $r4 := @caughtexception;

        r6 = $r4;

        $r5 = staticinvoke <java.net.NetworkInterface: java.net.SocketException rethrowAsSocketException(java.lang.Exception)>(r6);

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    private static java.net.SocketException rethrowAsSocketException(java.lang.Exception) throws java.net.SocketException
    {
        java.lang.Exception r0;
        java.net.SocketException r1, $r2;

        r0 := @parameter0: java.lang.Exception;

        $r2 = new java.net.SocketException;

        specialinvoke $r2.<java.net.SocketException: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.net.SocketException: java.lang.Throwable initCause(java.lang.Throwable)>(r0);

        throw r1;
    }

    public static java.net.NetworkInterface getByInetAddress(java.net.InetAddress) throws java.net.SocketException
    {
        java.net.InetAddress r0;
        java.util.Iterator r1;
        java.net.NetworkInterface r2;
        java.util.List $r3, $r5;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.lang.NullPointerException $r6;

        r0 := @parameter0: java.net.InetAddress;

        if r0 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("address == null");

        throw $r6;

     label1:
        $r3 = staticinvoke <java.net.NetworkInterface: java.util.List getNetworkInterfacesList()>();

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.net.NetworkInterface) $r4;

        $r5 = r2.<java.net.NetworkInterface: java.util.List addresses>;

        $z1 = interfaceinvoke $r5.<java.util.List: boolean contains(java.lang.Object)>(r0);

        if $z1 == 0 goto label3;

        return r2;

     label3:
        goto label2;

     label4:
        return null;
    }

    public static java.net.NetworkInterface getByIndex(int) throws java.net.SocketException
    {
        int i0;
        java.lang.String r0;
        libcore.io.Os $r1;
        java.net.NetworkInterface $r2;

        i0 := @parameter0: int;

        $r1 = <libcore.io.Libcore: libcore.io.Os os>;

        r0 = interfaceinvoke $r1.<libcore.io.Os: java.lang.String if_indextoname(int)>(i0);

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = staticinvoke <java.net.NetworkInterface: java.net.NetworkInterface getByName(java.lang.String)>(r0);

        return $r2;
    }

    public static java.util.Enumeration getNetworkInterfaces() throws java.net.SocketException
    {
        java.util.List $r0;
        java.util.Enumeration $r1;

        $r0 = staticinvoke <java.net.NetworkInterface: java.util.List getNetworkInterfacesList()>();

        $r1 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r0);

        return $r1;
    }

    private static java.util.List getNetworkInterfacesList() throws java.net.SocketException
    {
        java.lang.String[] r0, r3;
        java.net.NetworkInterface[] r1;
        boolean[] r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        java.io.File $r4;
        java.util.ArrayList $r5, r27;
        boolean $z0, $z1, $z3;
        java.net.NetworkInterface $r6, $r8, $r9, $r15, $r17, $r18, $r19, $r20, $r22, $r24, $r26;
        java.lang.StringBuilder $r7, $r11, $r14;
        java.lang.String $r10, $r12, $r13, $r25;
        java.util.List $r16, $r21, $r23;

        $r4 = <java.net.NetworkInterface: java.io.File SYS_CLASS_NET>;

        r0 = virtualinvoke $r4.<java.io.File: java.lang.String[] list()>();

        $i3 = lengthof r0;

        r1 = newarray (java.net.NetworkInterface)[$i3];

        $i4 = lengthof r1;

        r2 = newarray (boolean)[$i4];

        r3 = staticinvoke <java.net.NetworkInterface: java.lang.String[] readIfInet6Lines()>();

        i0 = 0;

     label01:
        $i5 = lengthof r0;

        if i0 >= $i5 goto label03;

        $r25 = r0[i0];

        $r26 = staticinvoke <java.net.NetworkInterface: java.net.NetworkInterface getByNameInternal(java.lang.String,java.lang.String[])>($r25, r3);

        r1[i0] = $r26;

        $r24 = r1[i0];

        if $r24 != null goto label02;

        r2[i0] = 1;

     label02:
        i0 = i0 + 1;

        goto label01;

     label03:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r27 = $r5;

        i1 = 0;

     label04:
        $i6 = lengthof r1;

        if i1 >= $i6 goto label11;

        $z0 = r2[i1];

        if $z0 == 0 goto label05;

        goto label10;

     label05:
        i2 = i1;

     label06:
        $i7 = lengthof r1;

        if i2 >= $i7 goto label09;

        $z1 = r2[i2];

        if $z1 == 0 goto label07;

        goto label08;

     label07:
        $r8 = r1[i2];

        $r10 = $r8.<java.net.NetworkInterface: java.lang.String name>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = r1[i1];

        $r12 = $r9.<java.net.NetworkInterface: java.lang.String name>;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $z3 = virtualinvoke $r10.<java.lang.String: boolean startsWith(java.lang.String)>($r13);

        if $z3 == 0 goto label08;

        $r15 = r1[i1];

        $r16 = $r15.<java.net.NetworkInterface: java.util.List children>;

        $r17 = r1[i2];

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r17);

        $r18 = r1[i2];

        $r20 = r1[i1];

        $r18.<java.net.NetworkInterface: java.net.NetworkInterface parent> = $r20;

        $r19 = r1[i1];

        $r21 = $r19.<java.net.NetworkInterface: java.util.List addresses>;

        $r22 = r1[i2];

        $r23 = $r22.<java.net.NetworkInterface: java.util.List addresses>;

        interfaceinvoke $r21.<java.util.List: boolean addAll(java.util.Collection)>($r23);

        r2[i2] = 1;

     label08:
        i2 = i2 + 1;

        goto label06;

     label09:
        $r6 = r1[i1];

        interfaceinvoke r27.<java.util.List: boolean add(java.lang.Object)>($r6);

        r2[i1] = 1;

     label10:
        i1 = i1 + 1;

        goto label04;

     label11:
        return r27;
    }

    public boolean equals(java.lang.Object)
    {
        java.net.NetworkInterface r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1;
        java.lang.String $r3, $r4;
        java.util.List $r5, $r6;

        r0 := @this: java.net.NetworkInterface;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof java.net.NetworkInterface;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (java.net.NetworkInterface) r1;

        $i1 = r0.<java.net.NetworkInterface: int interfaceIndex>;

        $i0 = r2.<java.net.NetworkInterface: int interfaceIndex>;

        if $i1 != $i0 goto label3;

        $r4 = r0.<java.net.NetworkInterface: java.lang.String name>;

        $r3 = r2.<java.net.NetworkInterface: java.lang.String name>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

        $r6 = r0.<java.net.NetworkInterface: java.util.List addresses>;

        $r5 = r2.<java.net.NetworkInterface: java.util.List addresses>;

        $z2 = interfaceinvoke $r6.<java.util.List: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    public int hashCode()
    {
        java.net.NetworkInterface r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: java.net.NetworkInterface;

        $r1 = r0.<java.net.NetworkInterface: java.lang.String name>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        java.net.NetworkInterface r0;
        java.lang.StringBuilder r1, $r4;
        java.util.Iterator r2;
        java.net.InetAddress r3;
        java.lang.String $r6, $r12, $r16;
        int $i0;
        java.util.List $r11;
        boolean $z0;
        java.lang.Object $r14;

        r0 := @this: java.net.NetworkInterface;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>(25);

        r1 = $r4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r6 = r0.<java.net.NetworkInterface: java.lang.String name>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $i0 = r0.<java.net.NetworkInterface: int interfaceIndex>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r11 = r0.<java.net.NetworkInterface: java.util.List addresses>;

        r2 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r14 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.net.InetAddress) $r14;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r16 = virtualinvoke r3.<java.net.InetAddress: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        goto label1;

     label2:
        $r12 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public java.util.List getInterfaceAddresses()
    {
        java.net.NetworkInterface r0;
        java.util.List $r1, $r2;

        r0 := @this: java.net.NetworkInterface;

        $r1 = r0.<java.net.NetworkInterface: java.util.List interfaceAddresses>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public java.util.Enumeration getSubInterfaces()
    {
        java.net.NetworkInterface r0;
        java.util.List $r1;
        java.util.Enumeration $r2;

        r0 := @this: java.net.NetworkInterface;

        $r1 = r0.<java.net.NetworkInterface: java.util.List children>;

        $r2 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r1);

        return $r2;
    }

    public java.net.NetworkInterface getParent()
    {
        java.net.NetworkInterface r0, $r1;

        r0 := @this: java.net.NetworkInterface;

        $r1 = r0.<java.net.NetworkInterface: java.net.NetworkInterface parent>;

        return $r1;
    }

    public boolean isUp() throws java.net.SocketException
    {
        java.net.NetworkInterface r0;
        int $i0;
        boolean $z0;

        r0 := @this: java.net.NetworkInterface;

        $i0 = <android.system.OsConstants: int IFF_UP>;

        $z0 = specialinvoke r0.<java.net.NetworkInterface: boolean hasFlag(int)>($i0);

        return $z0;
    }

    public boolean isLoopback() throws java.net.SocketException
    {
        java.net.NetworkInterface r0;
        int $i0;
        boolean $z0;

        r0 := @this: java.net.NetworkInterface;

        $i0 = <android.system.OsConstants: int IFF_LOOPBACK>;

        $z0 = specialinvoke r0.<java.net.NetworkInterface: boolean hasFlag(int)>($i0);

        return $z0;
    }

    public boolean isPointToPoint() throws java.net.SocketException
    {
        java.net.NetworkInterface r0;
        int $i0;
        boolean $z0;

        r0 := @this: java.net.NetworkInterface;

        $i0 = <android.system.OsConstants: int IFF_POINTOPOINT>;

        $z0 = specialinvoke r0.<java.net.NetworkInterface: boolean hasFlag(int)>($i0);

        return $z0;
    }

    public boolean supportsMulticast() throws java.net.SocketException
    {
        java.net.NetworkInterface r0;
        int $i0;
        boolean $z0;

        r0 := @this: java.net.NetworkInterface;

        $i0 = <android.system.OsConstants: int IFF_MULTICAST>;

        $z0 = specialinvoke r0.<java.net.NetworkInterface: boolean hasFlag(int)>($i0);

        return $z0;
    }

    private boolean hasFlag(int) throws java.net.SocketException
    {
        java.net.NetworkInterface r0;
        int i0, i1, $i2;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        java.lang.String $r3, $r6;
        boolean $z0;

        r0 := @this: java.net.NetworkInterface;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/sys/class/net/");

        $r3 = r0.<java.net.NetworkInterface: java.lang.String name>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/flags");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        i1 = staticinvoke <java.net.NetworkInterface: int readIntFile(java.lang.String)>($r6);

        $i2 = i1 & i0;

        if $i2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public byte[] getHardwareAddress() throws java.net.SocketException
    {
        java.net.NetworkInterface r0;
        java.lang.String r1, $r5, $r8, $r9;
        byte[] r2;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i10, i11;
        java.lang.StringBuilder $r3, $r4, $r6, $r7;
        byte $b5, $b9;
        java.net.SocketException $r10;
        java.lang.Exception $r11, r12;

        r0 := @this: java.net.NetworkInterface;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/sys/class/net/");

        $r5 = r0.<java.net.NetworkInterface: java.lang.String name>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/address");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r1 = staticinvoke <libcore.io.IoUtils: java.lang.String readFileAsString(java.lang.String)>($r8);

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = $i1 / 3;

        r2 = newarray (byte)[$i2];

        i0 = 0;

     label2:
        $i3 = lengthof r2;

        if i0 >= $i3 goto label3;

        $i8 = 3 * i0;

        $i7 = 3 * i0;

        $i6 = $i7 + 2;

        $r9 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i8, $i6);

        $i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r9, 16);

        $b9 = (byte) $i10;

        r2[i0] = $b9;

        i0 = i0 + 1;

        goto label2;

     label3:
        i11 = 0;

     label4:
        $i4 = lengthof r2;

        if i11 >= $i4 goto label7;

        $b5 = r2[i11];

        if $b5 == 0 goto label6;

     label5:
        return r2;

     label6:
        i11 = i11 + 1;

        goto label4;

     label7:
        return null;

     label8:
        $r11 := @caughtexception;

        r12 = $r11;

        $r10 = staticinvoke <java.net.NetworkInterface: java.net.SocketException rethrowAsSocketException(java.lang.Exception)>(r12);

        throw $r10;

        catch java.lang.Exception from label1 to label5 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public int getMTU() throws java.net.SocketException
    {
        java.net.NetworkInterface r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        java.lang.String $r3, $r6;
        int $i0;

        r0 := @this: java.net.NetworkInterface;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/sys/class/net/");

        $r3 = r0.<java.net.NetworkInterface: java.lang.String name>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/mtu");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = staticinvoke <java.net.NetworkInterface: int readIntFile(java.lang.String)>($r6);

        return $i0;
    }

    public boolean isVirtual()
    {
        java.net.NetworkInterface r0, $r1;
        boolean $z0;

        r0 := @this: java.net.NetworkInterface;

        $r1 = r0.<java.net.NetworkInterface: java.net.NetworkInterface parent>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void <clinit>()
    {
        java.io.File $r0;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>("/sys/class/net");

        <java.net.NetworkInterface: java.io.File SYS_CLASS_NET> = $r0;

        return;
    }
}
