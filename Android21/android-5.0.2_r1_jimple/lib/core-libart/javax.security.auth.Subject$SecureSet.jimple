final class javax.security.auth.Subject$SecureSet extends java.util.AbstractSet implements java.io.Serializable
{
    private static final long serialVersionUID;
    private java.util.LinkedList elements;
    private int setType;
    private static final int SET_Principal;
    private static final int SET_PrivCred;
    private static final int SET_PubCred;
    private transient javax.security.auth.AuthPermission permission;
    final javax.security.auth.Subject this$0;

    protected void <init>(javax.security.auth.Subject, javax.security.auth.AuthPermission)
    {
        javax.security.auth.Subject$SecureSet r0;
        javax.security.auth.Subject r1;
        javax.security.auth.AuthPermission r2;
        java.util.LinkedList $r3;

        r0 := @this: javax.security.auth.Subject$SecureSet;

        r1 := @parameter0: javax.security.auth.Subject;

        r2 := @parameter1: javax.security.auth.AuthPermission;

        r0.<javax.security.auth.Subject$SecureSet: javax.security.auth.Subject this$0> = r1;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        r0.<javax.security.auth.Subject$SecureSet: javax.security.auth.AuthPermission permission> = r2;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r0.<javax.security.auth.Subject$SecureSet: java.util.LinkedList elements> = $r3;

        return;
    }

    protected void <init>(javax.security.auth.Subject, javax.security.auth.AuthPermission, java.util.Collection)
    {
        javax.security.auth.Subject$SecureSet r0;
        javax.security.auth.Subject r1;
        javax.security.auth.AuthPermission r2;
        java.util.Collection r3;
        boolean z0, $z1, $z3, $z4;
        java.util.Iterator r4;
        java.lang.Object r5;
        java.lang.Class $r6;
        java.lang.ClassLoader $r7;
        java.util.LinkedList $r8, $r9;

        r0 := @this: javax.security.auth.Subject$SecureSet;

        r1 := @parameter0: javax.security.auth.Subject;

        r2 := @parameter1: javax.security.auth.AuthPermission;

        r3 := @parameter2: java.util.Collection;

        specialinvoke r0.<javax.security.auth.Subject$SecureSet: void <init>(javax.security.auth.Subject,javax.security.auth.AuthPermission)>(r1, r2);

        $r6 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        if $r7 != null goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z0 = $z4;

        r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        specialinvoke r0.<javax.security.auth.Subject$SecureSet: void verifyElement(java.lang.Object)>(r5);

        if z0 != 0 goto label4;

        $r9 = r0.<javax.security.auth.Subject$SecureSet: java.util.LinkedList elements>;

        $z3 = virtualinvoke $r9.<java.util.LinkedList: boolean contains(java.lang.Object)>(r5);

        if $z3 != 0 goto label5;

     label4:
        $r8 = r0.<javax.security.auth.Subject$SecureSet: java.util.LinkedList elements>;

        virtualinvoke $r8.<java.util.LinkedList: boolean add(java.lang.Object)>(r5);

     label5:
        goto label3;

     label6:
        return;
    }

    private void verifyElement(java.lang.Object)
    {
        javax.security.auth.Subject$SecureSet r0;
        java.lang.Object r1;
        javax.security.auth.AuthPermission $r2, $r3;
        java.lang.Class $r4, $r5;
        boolean $z0;
        java.lang.IllegalArgumentException $r6;
        java.lang.NullPointerException $r7;

        r0 := @this: javax.security.auth.Subject$SecureSet;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("o == null");

        throw $r7;

     label1:
        $r2 = r0.<javax.security.auth.Subject$SecureSet: javax.security.auth.AuthPermission permission>;

        $r3 = staticinvoke <javax.security.auth.Subject: javax.security.auth.AuthPermission access$000()>();

        if $r2 != $r3 goto label2;

        $r4 = class "java/security/Principal";

        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r5);

        if $z0 != 0 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Element is not instance of java.security.Principal");

        throw $r6;

     label2:
        return;
    }

    public boolean add(java.lang.Object)
    {
        javax.security.auth.Subject$SecureSet r0;
        java.lang.Object r1;
        javax.security.auth.Subject $r2;
        java.util.LinkedList $r3, $r4;
        boolean $z0;

        r0 := @this: javax.security.auth.Subject$SecureSet;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<javax.security.auth.Subject$SecureSet: void verifyElement(java.lang.Object)>(r1);

        $r2 = r0.<javax.security.auth.Subject$SecureSet: javax.security.auth.Subject this$0>;

        staticinvoke <javax.security.auth.Subject: void access$100(javax.security.auth.Subject)>($r2);

        $r3 = r0.<javax.security.auth.Subject$SecureSet: java.util.LinkedList elements>;

        $z0 = virtualinvoke $r3.<java.util.LinkedList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r4 = r0.<javax.security.auth.Subject$SecureSet: java.util.LinkedList elements>;

        virtualinvoke $r4.<java.util.LinkedList: boolean add(java.lang.Object)>(r1);

        return 1;

     label1:
        return 0;
    }

    public java.util.Iterator iterator()
    {
        javax.security.auth.Subject$SecureSet r0;
        javax.security.auth.AuthPermission $r1, $r2;
        javax.security.auth.Subject$SecureSet$SecureIterator $r3;
        java.util.LinkedList $r4, $r7;
        java.util.Iterator $r5, $r8;
        javax.security.auth.Subject$SecureSet$1 $r6;

        r0 := @this: javax.security.auth.Subject$SecureSet;

        $r1 = r0.<javax.security.auth.Subject$SecureSet: javax.security.auth.AuthPermission permission>;

        $r2 = staticinvoke <javax.security.auth.Subject: javax.security.auth.AuthPermission access$200()>();

        if $r1 != $r2 goto label1;

        $r6 = new javax.security.auth.Subject$SecureSet$1;

        $r7 = r0.<javax.security.auth.Subject$SecureSet: java.util.LinkedList elements>;

        $r8 = virtualinvoke $r7.<java.util.LinkedList: java.util.Iterator iterator()>();

        specialinvoke $r6.<javax.security.auth.Subject$SecureSet$1: void <init>(javax.security.auth.Subject$SecureSet,java.util.Iterator)>(r0, $r8);

        return $r6;

     label1:
        $r3 = new javax.security.auth.Subject$SecureSet$SecureIterator;

        $r4 = r0.<javax.security.auth.Subject$SecureSet: java.util.LinkedList elements>;

        $r5 = virtualinvoke $r4.<java.util.LinkedList: java.util.Iterator iterator()>();

        specialinvoke $r3.<javax.security.auth.Subject$SecureSet$SecureIterator: void <init>(javax.security.auth.Subject$SecureSet,java.util.Iterator)>(r0, $r5);

        return $r3;
    }

    public boolean retainAll(java.util.Collection)
    {
        javax.security.auth.Subject$SecureSet r0;
        java.util.Collection r1;
        boolean $z0;
        java.lang.NullPointerException $r2;

        r0 := @this: javax.security.auth.Subject$SecureSet;

        r1 := @parameter0: java.util.Collection;

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("c == null");

        throw $r2;

     label1:
        $z0 = specialinvoke r0.<java.util.AbstractSet: boolean retainAll(java.util.Collection)>(r1);

        return $z0;
    }

    public int size()
    {
        javax.security.auth.Subject$SecureSet r0;
        java.util.LinkedList $r1;
        int $i0;

        r0 := @this: javax.security.auth.Subject$SecureSet;

        $r1 = r0.<javax.security.auth.Subject$SecureSet: java.util.LinkedList elements>;

        $i0 = virtualinvoke $r1.<java.util.LinkedList: int size()>();

        return $i0;
    }

    protected final java.util.Set get(java.lang.Class)
    {
        javax.security.auth.Subject$SecureSet r0;
        java.lang.Class r1, $r6;
        javax.security.auth.Subject$SecureSet$2 r2, $r5;
        java.util.Iterator r3;
        java.lang.Object r4, $r7;
        boolean $z0, $z1;
        java.lang.NullPointerException $r8;

        r0 := @this: javax.security.auth.Subject$SecureSet;

        r1 := @parameter0: java.lang.Class;

        if r1 != null goto label1;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("c == null");

        throw $r8;

     label1:
        $r5 = new javax.security.auth.Subject$SecureSet$2;

        specialinvoke $r5.<javax.security.auth.Subject$SecureSet$2: void <init>(javax.security.auth.Subject$SecureSet,java.lang.Class)>(r0, r1);

        r2 = $r5;

        r3 = virtualinvoke r0.<javax.security.auth.Subject$SecureSet: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r6);

        if $z1 == 0 goto label3;

        $r7 = virtualinvoke r1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(r4);

        virtualinvoke r2.<java.util.AbstractSet: boolean add(java.lang.Object)>($r7);

     label3:
        goto label2;

     label4:
        return r2;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        javax.security.auth.Subject$SecureSet r0;
        java.io.ObjectInputStream r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        int $i0;
        javax.security.auth.AuthPermission $r4, $r6, $r7;
        java.util.LinkedList $r5;
        boolean $z0;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: javax.security.auth.Subject$SecureSet;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $i0 = r0.<javax.security.auth.Subject$SecureSet: int setType>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        $r4 = staticinvoke <javax.security.auth.Subject: javax.security.auth.AuthPermission access$000()>();

        r0.<javax.security.auth.Subject$SecureSet: javax.security.auth.AuthPermission permission> = $r4;

        goto label5;

     label2:
        $r7 = staticinvoke <javax.security.auth.Subject: javax.security.auth.AuthPermission access$200()>();

        r0.<javax.security.auth.Subject$SecureSet: javax.security.auth.AuthPermission permission> = $r7;

        goto label5;

     label3:
        $r6 = staticinvoke <javax.security.auth.Subject: javax.security.auth.AuthPermission access$300()>();

        r0.<javax.security.auth.Subject$SecureSet: javax.security.auth.AuthPermission permission> = $r6;

        goto label5;

     label4:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r8;

     label5:
        $r5 = r0.<javax.security.auth.Subject$SecureSet: java.util.LinkedList elements>;

        r2 = virtualinvoke $r5.<java.util.LinkedList: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        specialinvoke r0.<javax.security.auth.Subject$SecureSet: void verifyElement(java.lang.Object)>(r3);

        goto label6;

     label7:
        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        javax.security.auth.Subject$SecureSet r0;
        java.io.ObjectOutputStream r1;
        javax.security.auth.AuthPermission $r2, $r3, $r4, $r5;

        r0 := @this: javax.security.auth.Subject$SecureSet;

        r1 := @parameter0: java.io.ObjectOutputStream;

        $r2 = r0.<javax.security.auth.Subject$SecureSet: javax.security.auth.AuthPermission permission>;

        $r3 = staticinvoke <javax.security.auth.Subject: javax.security.auth.AuthPermission access$200()>();

        if $r2 != $r3 goto label1;

        r0.<javax.security.auth.Subject$SecureSet: int setType> = 1;

        goto label3;

     label1:
        $r4 = r0.<javax.security.auth.Subject$SecureSet: javax.security.auth.AuthPermission permission>;

        $r5 = staticinvoke <javax.security.auth.Subject: javax.security.auth.AuthPermission access$000()>();

        if $r4 != $r5 goto label2;

        r0.<javax.security.auth.Subject$SecureSet: int setType> = 0;

        goto label3;

     label2:
        r0.<javax.security.auth.Subject$SecureSet: int setType> = 2;

     label3:
        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        return;
    }

    public static void <clinit>()
    {
        <javax.security.auth.Subject$SecureSet: int SET_PubCred> = 2;

        <javax.security.auth.Subject$SecureSet: int SET_PrivCred> = 1;

        <javax.security.auth.Subject$SecureSet: int SET_Principal> = 0;

        <javax.security.auth.Subject$SecureSet: long serialVersionUID> = 7911754171111800359L;

        return;
    }
}
