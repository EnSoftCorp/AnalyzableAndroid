public class java.io.File extends java.lang.Object implements java.io.Serializable, java.lang.Comparable
{
    private static final long serialVersionUID;
    private static final java.util.Random tempFileRandom;
    public static final char separatorChar;
    public static final java.lang.String separator;
    public static final char pathSeparatorChar;
    public static final java.lang.String pathSeparator;
    private java.lang.String path;

    public void <init>(java.io.File, java.lang.String)
    {
        java.io.File r0, r1;
        java.lang.String r2, $r3;

        r0 := @this: java.io.File;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r3 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

     label2:
        specialinvoke r0.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r3, r2);

        return;
    }

    public void <init>(java.lang.String)
    {
        java.io.File r0;
        java.lang.String r1, $r2;

        r0 := @this: java.io.File;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <java.io.File: java.lang.String fixSlashes(java.lang.String)>(r1);

        r0.<java.io.File: java.lang.String path> = $r2;

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        java.io.File r0;
        java.lang.String r1, r2, $r3, $r4, $r5, $r6;
        boolean $z0, $z1;
        java.lang.NullPointerException $r7;

        r0 := @this: java.io.File;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r2 != null goto label1;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("name == null");

        throw $r7;

     label1:
        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label3;

     label2:
        $r3 = staticinvoke <java.io.File: java.lang.String fixSlashes(java.lang.String)>(r2);

        r0.<java.io.File: java.lang.String path> = $r3;

        goto label5;

     label3:
        $z1 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label4;

        $r6 = staticinvoke <java.io.File: java.lang.String fixSlashes(java.lang.String)>(r1);

        r0.<java.io.File: java.lang.String path> = $r6;

        goto label5;

     label4:
        $r4 = staticinvoke <java.io.File: java.lang.String join(java.lang.String,java.lang.String)>(r1, r2);

        $r5 = staticinvoke <java.io.File: java.lang.String fixSlashes(java.lang.String)>($r4);

        r0.<java.io.File: java.lang.String path> = $r5;

     label5:
        return;
    }

    public void <init>(java.net.URI)
    {
        java.io.File r0;
        java.net.URI r1;
        java.lang.String $r2, $r3;

        r0 := @this: java.io.File;

        r1 := @parameter0: java.net.URI;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <java.io.File: void checkURI(java.net.URI)>(r1);

        $r2 = virtualinvoke r1.<java.net.URI: java.lang.String getPath()>();

        $r3 = staticinvoke <java.io.File: java.lang.String fixSlashes(java.lang.String)>($r2);

        r0.<java.io.File: java.lang.String path> = $r3;

        return;
    }

    private static java.lang.String fixSlashes(java.lang.String)
    {
        java.lang.String r0, $r2;
        boolean z0;
        char[] r1;
        int i0, i1, i2, $i4, $i5;
        char c3, $c6;

        r0 := @parameter0: java.lang.String;

        z0 = 0;

        r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        i0 = lengthof r1;

        i1 = 0;

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        c3 = r1[i2];

        if c3 != 47 goto label2;

        if z0 != 0 goto label3;

        $i5 = i1;

        i1 = i1 + 1;

        $c6 = <java.io.File: char separatorChar>;

        r1[$i5] = $c6;

        z0 = 1;

        goto label3;

     label2:
        $i4 = i1;

        i1 = i1 + 1;

        r1[$i4] = c3;

        z0 = 0;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        if z0 == 0 goto label5;

        if i1 <= 1 goto label5;

        i1 = i1 + -1;

     label5:
        if i1 == i0 goto label6;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>(r1, 0, i1);

        goto label7;

     label6:
        $r2 = r0;

     label7:
        return $r2;
    }

    private static java.lang.String join(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r6;
        int i0, $i2, $i5;
        boolean z0, $z1, $z2;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r7, $r8, $r9;
        char $c1, $c3, $c4, $c6, $c7;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 <= 0 goto label1;

        $i5 = i0 - 1;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i5);

        $c6 = <java.io.File: char separatorChar>;

        if $c7 != $c6 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        if z0 != 0 goto label5;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i2 <= 0 goto label3;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        $c3 = <java.io.File: char separatorChar>;

        if $c4 != $c3 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        z0 = $z1;

     label5:
        if z0 == 0 goto label6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label7;

     label6:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $c1 = <java.io.File: char separatorChar>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label7:
        return $r6;
    }

    private static void checkURI(java.net.URI)
    {
        java.net.URI r0;
        java.lang.String r1, $r2, $r3, $r4, $r9, $r10, $r11, $r12, $r18, $r21, $r29, $r34, $r35, $r40;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalArgumentException $r5, $r14, $r17, $r24, $r30, $r31, $r36;
        java.lang.StringBuilder $r6, $r7, $r8, $r13, $r15, $r16, $r19, $r20, $r22, $r23, $r25, $r26, $r27, $r28, $r32, $r33, $r37, $r38, $r39, $r41, $r42;

        r0 := @parameter0: java.net.URI;

        $z0 = virtualinvoke r0.<java.net.URI: boolean isAbsolute()>();

        if $z0 != 0 goto label1;

        $r36 = new java.lang.IllegalArgumentException;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("URI is not absolute: ");

        $r39 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r40);

        throw $r36;

     label1:
        $r2 = virtualinvoke r0.<java.net.URI: java.lang.String getRawSchemeSpecificPart()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z1 != 0 goto label2;

        $r31 = new java.lang.IllegalArgumentException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("URI is not hierarchical: ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r35 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r35);

        throw $r31;

     label2:
        $r3 = "file";

        $r4 = virtualinvoke r0.<java.net.URI: java.lang.String getScheme()>();

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z2 != 0 goto label3;

        $r30 = new java.lang.IllegalArgumentException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected file scheme in URI: ");

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r34);

        throw $r30;

     label3:
        r1 = virtualinvoke r0.<java.net.URI: java.lang.String getRawPath()>();

        if r1 == null goto label4;

        $z3 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z3 == 0 goto label5;

     label4:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected non-empty path in URI: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label5:
        $r10 = virtualinvoke r0.<java.net.URI: java.lang.String getRawAuthority()>();

        if $r10 == null goto label6;

        $r24 = new java.lang.IllegalArgumentException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found authority in URI: ");

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r29);

        throw $r24;

     label6:
        $r12 = virtualinvoke r0.<java.net.URI: java.lang.String getRawQuery()>();

        if $r12 == null goto label7;

        $r17 = new java.lang.IllegalArgumentException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found query in URI: ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r17;

     label7:
        $r11 = virtualinvoke r0.<java.net.URI: java.lang.String getRawFragment()>();

        if $r11 == null goto label8;

        $r14 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found fragment in URI: ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r14;

     label8:
        return;
    }

    public static java.io.File[] listRoots()
    {
        java.io.File[] $r0;
        java.io.File $r1;

        $r0 = newarray (java.io.File)[1];

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>("/");

        $r0[0] = $r1;

        return $r0;
    }

    public boolean canExecute()
    {
        java.io.File r0;
        int $i0;
        boolean $z0;

        r0 := @this: java.io.File;

        $i0 = <android.system.OsConstants: int X_OK>;

        $z0 = specialinvoke r0.<java.io.File: boolean doAccess(int)>($i0);

        return $z0;
    }

    public boolean canRead()
    {
        java.io.File r0;
        int $i0;
        boolean $z0;

        r0 := @this: java.io.File;

        $i0 = <android.system.OsConstants: int R_OK>;

        $z0 = specialinvoke r0.<java.io.File: boolean doAccess(int)>($i0);

        return $z0;
    }

    public boolean canWrite()
    {
        java.io.File r0;
        int $i0;
        boolean $z0;

        r0 := @this: java.io.File;

        $i0 = <android.system.OsConstants: int W_OK>;

        $z0 = specialinvoke r0.<java.io.File: boolean doAccess(int)>($i0);

        return $z0;
    }

    private boolean doAccess(int)
    {
        java.io.File r0;
        int i0;
        java.lang.String $r2;
        libcore.io.Os $r3;
        boolean $z0;
        android.system.ErrnoException $r4;

        r0 := @this: java.io.File;

        i0 := @parameter0: int;

     label1:
        $r3 = <libcore.io.Libcore: libcore.io.Os os>;

        $r2 = r0.<java.io.File: java.lang.String path>;

        $z0 = interfaceinvoke $r3.<libcore.io.Os: boolean access(java.lang.String,int)>($r2, i0);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public int compareTo(java.io.File)
    {
        java.io.File r0, r1;
        java.lang.String $r2, $r3;
        int $i0;

        r0 := @this: java.io.File;

        r1 := @parameter0: java.io.File;

        $r2 = virtualinvoke r0.<java.io.File: java.lang.String getPath()>();

        $r3 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int compareTo(java.lang.String)>($r3);

        return $i0;
    }

    public boolean delete()
    {
        java.io.File r0;
        java.lang.String $r2;
        libcore.io.Os $r3;
        android.system.ErrnoException $r4;

        r0 := @this: java.io.File;

     label1:
        $r3 = <libcore.io.Libcore: libcore.io.Os os>;

        $r2 = r0.<java.io.File: java.lang.String path>;

        interfaceinvoke $r3.<libcore.io.Os: void remove(java.lang.String)>($r2);

     label2:
        return 1;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public void deleteOnExit()
    {
        java.io.File r0;
        libcore.io.DeleteOnExit $r1;
        java.lang.String $r2;

        r0 := @this: java.io.File;

        $r1 = staticinvoke <libcore.io.DeleteOnExit: libcore.io.DeleteOnExit getInstance()>();

        $r2 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r1.<libcore.io.DeleteOnExit: void addFile(java.lang.String)>($r2);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.io.File r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.String $r3, $r4;

        r0 := @this: java.io.File;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof java.io.File;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<java.io.File: java.lang.String path>;

        $r2 = (java.io.File) r1;

        $r4 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        return $z1;
    }

    public boolean exists()
    {
        java.io.File r0;
        int $i0;
        boolean $z0;

        r0 := @this: java.io.File;

        $i0 = <android.system.OsConstants: int F_OK>;

        $z0 = specialinvoke r0.<java.io.File: boolean doAccess(int)>($i0);

        return $z0;
    }

    public java.lang.String getAbsolutePath()
    {
        java.io.File r0;
        java.lang.String r1, $r2, $r3, $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean isAbsolute()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<java.io.File: java.lang.String path>;

        return $r5;

     label1:
        r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.dir");

        $r2 = r0.<java.io.File: java.lang.String path>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        $r4 = r1;

        goto label3;

     label2:
        $r3 = r0.<java.io.File: java.lang.String path>;

        $r4 = staticinvoke <java.io.File: java.lang.String join(java.lang.String,java.lang.String)>(r1, $r3);

     label3:
        return $r4;
    }

    public java.io.File getAbsoluteFile()
    {
        java.io.File r0, $r1;
        java.lang.String $r2;

        r0 := @this: java.io.File;

        $r1 = new java.io.File;

        $r2 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r2);

        return $r1;
    }

    public java.lang.String getCanonicalPath() throws java.io.IOException
    {
        java.io.File r0;
        java.lang.String $r1, $r2;

        r0 := @this: java.io.File;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r2 = staticinvoke <java.io.File: java.lang.String canonicalizePath(java.lang.String)>($r1);

        return $r2;
    }

    private static native java.lang.String canonicalizePath(java.lang.String);

    public java.io.File getCanonicalFile() throws java.io.IOException
    {
        java.io.File r0, $r1;
        java.lang.String $r2;

        r0 := @this: java.io.File;

        $r1 = new java.io.File;

        $r2 = virtualinvoke r0.<java.io.File: java.lang.String getCanonicalPath()>();

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r2);

        return $r1;
    }

    public java.lang.String getName()
    {
        java.io.File r0;
        int i0, $i1, $i2;
        java.lang.String $r1, $r2, $r3, $r4, $r5;

        r0 := @this: java.io.File;

        $r2 = r0.<java.io.File: java.lang.String path>;

        $r1 = <java.io.File: java.lang.String separator>;

        i0 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(java.lang.String)>($r1);

        if i0 >= 0 goto label1;

        $r5 = r0.<java.io.File: java.lang.String path>;

        goto label2;

     label1:
        $r4 = r0.<java.io.File: java.lang.String path>;

        $i1 = i0 + 1;

        $r3 = r0.<java.io.File: java.lang.String path>;

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

     label2:
        return $r5;
    }

    public java.lang.String getParent()
    {
        java.io.File r0;
        int i0, i2, $i5, $i9, $i12;
        byte b1;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        char $c3, $c4, $c6, $c7, $c8, $c10, $c11, $c13;

        r0 := @this: java.io.File;

        $r1 = r0.<java.io.File: java.lang.String path>;

        i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        b1 = 0;

        $c3 = <java.io.File: char separatorChar>;

        if $c3 != 92 goto label1;

        if i0 <= 2 goto label1;

        $r9 = r0.<java.io.File: java.lang.String path>;

        $c13 = virtualinvoke $r9.<java.lang.String: char charAt(int)>(1);

        if $c13 != 58 goto label1;

        b1 = 2;

     label1:
        $r2 = r0.<java.io.File: java.lang.String path>;

        $c4 = <java.io.File: char separatorChar>;

        i2 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(int)>($c4);

        if i2 != -1 goto label2;

        if b1 <= 0 goto label2;

        i2 = 2;

     label2:
        if i2 == -1 goto label3;

        $r3 = r0.<java.io.File: java.lang.String path>;

        $i5 = i0 - 1;

        $c6 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i5);

        $c7 = <java.io.File: char separatorChar>;

        if $c6 != $c7 goto label4;

     label3:
        return null;

     label4:
        $r4 = r0.<java.io.File: java.lang.String path>;

        $c8 = <java.io.File: char separatorChar>;

        $i9 = virtualinvoke $r4.<java.lang.String: int indexOf(int)>($c8);

        if $i9 != i2 goto label5;

        $r6 = r0.<java.io.File: java.lang.String path>;

        $c11 = virtualinvoke $r6.<java.lang.String: char charAt(int)>(b1);

        $c10 = <java.io.File: char separatorChar>;

        if $c11 != $c10 goto label5;

        $r8 = r0.<java.io.File: java.lang.String path>;

        $i12 = i2 + 1;

        $r10 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int,int)>(0, $i12);

        return $r10;

     label5:
        $r5 = r0.<java.io.File: java.lang.String path>;

        $r7 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        return $r7;
    }

    public java.io.File getParentFile()
    {
        java.io.File r0, $r2;
        java.lang.String r1;

        r0 := @this: java.io.File;

        r1 = virtualinvoke r0.<java.io.File: java.lang.String getParent()>();

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r1);

        return $r2;
    }

    public java.lang.String getPath()
    {
        java.io.File r0;
        java.lang.String $r1;

        r0 := @this: java.io.File;

        $r1 = r0.<java.io.File: java.lang.String path>;

        return $r1;
    }

    public int hashCode()
    {
        java.io.File r0;
        java.lang.String $r1;
        int $i0, $i1;

        r0 := @this: java.io.File;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getPath()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i1 = $i0 ^ 1234321;

        return $i1;
    }

    public boolean isAbsolute()
    {
        java.io.File r0;
        java.lang.String $r1, $r2;
        int $i0;
        char $c1, $c2;
        boolean $z0;

        r0 := @this: java.io.File;

        $r1 = r0.<java.io.File: java.lang.String path>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r2 = r0.<java.io.File: java.lang.String path>;

        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(0);

        $c2 = <java.io.File: char separatorChar>;

        if $c1 != $c2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isDirectory()
    {
        java.io.File r0;
        java.lang.String $r2;
        libcore.io.Os $r3;
        android.system.StructStat $r4;
        int $i0;
        boolean $z0;
        android.system.ErrnoException $r5;

        r0 := @this: java.io.File;

     label1:
        $r3 = <libcore.io.Libcore: libcore.io.Os os>;

        $r2 = r0.<java.io.File: java.lang.String path>;

        $r4 = interfaceinvoke $r3.<libcore.io.Os: android.system.StructStat stat(java.lang.String)>($r2);

        $i0 = $r4.<android.system.StructStat: int st_mode>;

        $z0 = staticinvoke <android.system.OsConstants: boolean S_ISDIR(int)>($i0);

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        return 0;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public boolean isFile()
    {
        java.io.File r0;
        java.lang.String $r2;
        libcore.io.Os $r3;
        android.system.StructStat $r4;
        int $i0;
        boolean $z0;
        android.system.ErrnoException $r5;

        r0 := @this: java.io.File;

     label1:
        $r3 = <libcore.io.Libcore: libcore.io.Os os>;

        $r2 = r0.<java.io.File: java.lang.String path>;

        $r4 = interfaceinvoke $r3.<libcore.io.Os: android.system.StructStat stat(java.lang.String)>($r2);

        $i0 = $r4.<android.system.StructStat: int st_mode>;

        $z0 = staticinvoke <android.system.OsConstants: boolean S_ISREG(int)>($i0);

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        return 0;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public boolean isHidden()
    {
        java.io.File r0;
        java.lang.String $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: java.io.File;

        $r1 = r0.<java.io.File: java.lang.String path>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r0.<java.io.File: java.lang.String getName()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        return $z1;
    }

    public long lastModified()
    {
        java.io.File r0;
        java.lang.String $r2;
        libcore.io.Os $r3;
        android.system.StructStat $r4;
        long $l0, $l1;
        android.system.ErrnoException $r5;

        r0 := @this: java.io.File;

     label1:
        $r3 = <libcore.io.Libcore: libcore.io.Os os>;

        $r2 = r0.<java.io.File: java.lang.String path>;

        $r4 = interfaceinvoke $r3.<libcore.io.Os: android.system.StructStat stat(java.lang.String)>($r2);

        $l0 = $r4.<android.system.StructStat: long st_mtime>;

        $l1 = $l0 * 1000L;

     label2:
        return $l1;

     label3:
        $r5 := @caughtexception;

        return 0L;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public boolean setLastModified(long)
    {
        java.io.File r0;
        long l0;
        byte $b1;
        java.lang.String $r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: java.io.File;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 >= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("time < 0");

        throw $r2;

     label1:
        $r1 = r0.<java.io.File: java.lang.String path>;

        $z0 = staticinvoke <java.io.File: boolean setLastModifiedImpl(java.lang.String,long)>($r1, l0);

        return $z0;
    }

    private static native boolean setLastModifiedImpl(java.lang.String, long);

    public boolean setReadOnly()
    {
        java.io.File r0;
        boolean $z0;

        r0 := @this: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean setWritable(boolean,boolean)>(0, 0);

        return $z0;
    }

    public boolean setExecutable(boolean, boolean)
    {
        java.io.File r0;
        boolean z0, z1, $z2;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: java.io.File;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        if z1 == 0 goto label1;

        $i4 = <android.system.OsConstants: int S_IXUSR>;

        goto label2;

     label1:
        $i1 = <android.system.OsConstants: int S_IXUSR>;

        $i0 = <android.system.OsConstants: int S_IXGRP>;

        $i3 = $i1 | $i0;

        $i2 = <android.system.OsConstants: int S_IXOTH>;

        $i4 = $i3 | $i2;

     label2:
        $z2 = specialinvoke r0.<java.io.File: boolean doChmod(int,boolean)>($i4, z0);

        return $z2;
    }

    public boolean setExecutable(boolean)
    {
        java.io.File r0;
        boolean z0, $z1;

        r0 := @this: java.io.File;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<java.io.File: boolean setExecutable(boolean,boolean)>(z0, 1);

        return $z1;
    }

    public boolean setReadable(boolean, boolean)
    {
        java.io.File r0;
        boolean z0, z1, $z2;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: java.io.File;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        if z1 == 0 goto label1;

        $i4 = <android.system.OsConstants: int S_IRUSR>;

        goto label2;

     label1:
        $i1 = <android.system.OsConstants: int S_IRUSR>;

        $i0 = <android.system.OsConstants: int S_IRGRP>;

        $i3 = $i1 | $i0;

        $i2 = <android.system.OsConstants: int S_IROTH>;

        $i4 = $i3 | $i2;

     label2:
        $z2 = specialinvoke r0.<java.io.File: boolean doChmod(int,boolean)>($i4, z0);

        return $z2;
    }

    public boolean setReadable(boolean)
    {
        java.io.File r0;
        boolean z0, $z1;

        r0 := @this: java.io.File;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<java.io.File: boolean setReadable(boolean,boolean)>(z0, 1);

        return $z1;
    }

    public boolean setWritable(boolean, boolean)
    {
        java.io.File r0;
        boolean z0, z1, $z2;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: java.io.File;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        if z1 == 0 goto label1;

        $i4 = <android.system.OsConstants: int S_IWUSR>;

        goto label2;

     label1:
        $i1 = <android.system.OsConstants: int S_IWUSR>;

        $i0 = <android.system.OsConstants: int S_IWGRP>;

        $i3 = $i1 | $i0;

        $i2 = <android.system.OsConstants: int S_IWOTH>;

        $i4 = $i3 | $i2;

     label2:
        $z2 = specialinvoke r0.<java.io.File: boolean doChmod(int,boolean)>($i4, z0);

        return $z2;
    }

    public boolean setWritable(boolean)
    {
        java.io.File r0;
        boolean z0, $z1;

        r0 := @this: java.io.File;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<java.io.File: boolean setWritable(boolean,boolean)>(z0, 1);

        return $z1;
    }

    private boolean doChmod(int, boolean)
    {
        java.io.File r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean z0;
        android.system.StructStat r1;
        java.lang.String $r2, $r4;
        libcore.io.Os $r3, $r5;
        android.system.ErrnoException $r6;

        r0 := @this: java.io.File;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

     label1:
        $r3 = <libcore.io.Libcore: libcore.io.Os os>;

        $r2 = r0.<java.io.File: java.lang.String path>;

        r1 = interfaceinvoke $r3.<libcore.io.Os: android.system.StructStat stat(java.lang.String)>($r2);

        if z0 == 0 goto label2;

        $i4 = r1.<android.system.StructStat: int st_mode>;

        $i5 = $i4 | i0;

        goto label3;

     label2:
        $i3 = r1.<android.system.StructStat: int st_mode>;

        $i2 = i0 ^ -1;

        $i5 = $i3 & $i2;

     label3:
        i1 = $i5;

        $r5 = <libcore.io.Libcore: libcore.io.Os os>;

        $r4 = r0.<java.io.File: java.lang.String path>;

        interfaceinvoke $r5.<libcore.io.Os: void chmod(java.lang.String,int)>($r4, i1);

     label4:
        return 1;

     label5:
        $r6 := @caughtexception;

        return 0;

        catch android.system.ErrnoException from label1 to label4 with label5;
    }

    public long length()
    {
        java.io.File r0;
        java.lang.String $r2;
        libcore.io.Os $r3;
        android.system.StructStat $r4;
        long $l0;
        android.system.ErrnoException $r5;

        r0 := @this: java.io.File;

     label1:
        $r3 = <libcore.io.Libcore: libcore.io.Os os>;

        $r2 = r0.<java.io.File: java.lang.String path>;

        $r4 = interfaceinvoke $r3.<libcore.io.Os: android.system.StructStat stat(java.lang.String)>($r2);

        $l0 = $r4.<android.system.StructStat: long st_size>;

     label2:
        return $l0;

     label3:
        $r5 := @caughtexception;

        return 0L;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public java.lang.String[] list()
    {
        java.io.File r0;
        java.lang.String $r1;
        java.lang.String[] $r2;

        r0 := @this: java.io.File;

        $r1 = r0.<java.io.File: java.lang.String path>;

        $r2 = staticinvoke <java.io.File: java.lang.String[] listImpl(java.lang.String)>($r1);

        return $r2;
    }

    private static native java.lang.String[] listImpl(java.lang.String);

    public java.lang.String[] list(java.io.FilenameFilter)
    {
        java.io.File r0;
        java.io.FilenameFilter r1;
        java.lang.String[] r2, r4, $r7, $r9;
        java.util.ArrayList r3, $r6;
        int i0, i1, $i2, $i3;
        java.lang.String r5;
        java.lang.Object[] $r8;
        boolean $z0;

        r0 := @this: java.io.File;

        r1 := @parameter0: java.io.FilenameFilter;

        r2 = virtualinvoke r0.<java.io.File: java.lang.String[] list()>();

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        return r2;

     label2:
        $r6 = new java.util.ArrayList;

        $i2 = lengthof r2;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i2);

        r3 = $r6;

        r4 = r2;

        i0 = lengthof r4;

        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        r5 = r4[i1];

        $z0 = interfaceinvoke r1.<java.io.FilenameFilter: boolean accept(java.io.File,java.lang.String)>(r0, r5);

        if $z0 == 0 goto label4;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r5);

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        $i3 = interfaceinvoke r3.<java.util.List: int size()>();

        $r7 = newarray (java.lang.String)[$i3];

        $r8 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r9 = (java.lang.String[]) $r8;

        return $r9;
    }

    public java.io.File[] listFiles()
    {
        java.io.File r0;
        java.lang.String[] $r1;
        java.io.File[] $r2;

        r0 := @this: java.io.File;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String[] list()>();

        $r2 = specialinvoke r0.<java.io.File: java.io.File[] filenamesToFiles(java.lang.String[])>($r1);

        return $r2;
    }

    public java.io.File[] listFiles(java.io.FilenameFilter)
    {
        java.io.File r0;
        java.io.FilenameFilter r1;
        java.lang.String[] $r2;
        java.io.File[] $r3;

        r0 := @this: java.io.File;

        r1 := @parameter0: java.io.FilenameFilter;

        $r2 = virtualinvoke r0.<java.io.File: java.lang.String[] list(java.io.FilenameFilter)>(r1);

        $r3 = specialinvoke r0.<java.io.File: java.io.File[] filenamesToFiles(java.lang.String[])>($r2);

        return $r3;
    }

    public java.io.File[] listFiles(java.io.FileFilter)
    {
        java.io.File r0, r5;
        java.io.FileFilter r1;
        java.io.File[] r2, r4, $r7, $r9;
        java.util.ArrayList r3, $r6;
        int i0, i1, $i2, $i3;
        java.lang.Object[] $r8;
        boolean $z0;

        r0 := @this: java.io.File;

        r1 := @parameter0: java.io.FileFilter;

        r2 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        return r2;

     label2:
        $r6 = new java.util.ArrayList;

        $i2 = lengthof r2;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i2);

        r3 = $r6;

        r4 = r2;

        i0 = lengthof r4;

        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        r5 = r4[i1];

        $z0 = interfaceinvoke r1.<java.io.FileFilter: boolean accept(java.io.File)>(r5);

        if $z0 == 0 goto label4;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r5);

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        $i3 = interfaceinvoke r3.<java.util.List: int size()>();

        $r7 = newarray (java.io.File)[$i3];

        $r8 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r9 = (java.io.File[]) $r8;

        return $r9;
    }

    private java.io.File[] filenamesToFiles(java.lang.String[])
    {
        java.io.File r0, $r3;
        java.lang.String[] r1;
        int i0, i1;
        java.io.File[] r2;
        java.lang.String $r4;

        r0 := @this: java.io.File;

        r1 := @parameter0: java.lang.String[];

        if r1 != null goto label1;

        return null;

     label1:
        i0 = lengthof r1;

        r2 = newarray (java.io.File)[i0];

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r3 = new java.io.File;

        $r4 = r1[i1];

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, $r4);

        r2[i1] = $r3;

        i1 = i1 + 1;

        goto label2;

     label3:
        return r2;
    }

    public boolean mkdir()
    {
        java.io.File r0;
        android.system.ErrnoException $r2;

        r0 := @this: java.io.File;

     label1:
        specialinvoke r0.<java.io.File: void mkdirErrno()>();

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    private void mkdirErrno() throws android.system.ErrnoException
    {
        java.io.File r0;
        int $i0;
        java.lang.String $r1;
        libcore.io.Os $r2;

        r0 := @this: java.io.File;

        $r2 = <libcore.io.Libcore: libcore.io.Os os>;

        $r1 = r0.<java.io.File: java.lang.String path>;

        $i0 = <android.system.OsConstants: int S_IRWXU>;

        interfaceinvoke $r2.<libcore.io.Os: void mkdir(java.lang.String,int)>($r1, $i0);

        return;
    }

    public boolean mkdirs()
    {
        java.io.File r0;
        boolean $z0;

        r0 := @this: java.io.File;

        $z0 = specialinvoke r0.<java.io.File: boolean mkdirs(boolean)>(0);

        return $z0;
    }

    private boolean mkdirs(boolean)
    {
        java.io.File r0, r2;
        boolean z0, $z1, $z2, $z3;
        android.system.ErrnoException r1, $r3;
        int $i0, $i1, $i2, $i3;

        r0 := @this: java.io.File;

        z0 := @parameter0: boolean;

     label1:
        specialinvoke r0.<java.io.File: void mkdirErrno()>();

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $i1 = r1.<android.system.ErrnoException: int errno>;

        $i0 = <android.system.OsConstants: int ENOENT>;

        if $i1 != $i0 goto label6;

        r2 = virtualinvoke r0.<java.io.File: java.io.File getParentFile()>();

        if r2 == null goto label4;

        $z1 = specialinvoke r2.<java.io.File: boolean mkdirs(boolean)>(1);

        if $z1 == 0 goto label4;

        $z2 = virtualinvoke r0.<java.io.File: boolean mkdir()>();

        if $z2 == 0 goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        return $z3;

     label6:
        $i3 = r1.<android.system.ErrnoException: int errno>;

        $i2 = <android.system.OsConstants: int EEXIST>;

        if $i3 != $i2 goto label7;

        return z0;

     label7:
        return 0;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public boolean createNewFile() throws java.io.IOException
    {
        java.io.File r0;
        java.io.FileDescriptor r1;
        boolean z0, z1;
        java.lang.Throwable r2, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r3;
        libcore.io.Os $r4;
        android.system.ErrnoException $r6, r8;
        java.io.IOException $r7;

        r0 := @this: java.io.File;

        r1 = null;

     label1:
        $r4 = <libcore.io.Libcore: libcore.io.Os os>;

        $r3 = r0.<java.io.File: java.lang.String path>;

        $i1 = <android.system.OsConstants: int O_RDWR>;

        $i0 = <android.system.OsConstants: int O_CREAT>;

        $i3 = $i1 | $i0;

        $i2 = <android.system.OsConstants: int O_EXCL>;

        $i4 = $i3 | $i2;

        r1 = interfaceinvoke $r4.<libcore.io.Os: java.io.FileDescriptor open(java.lang.String,int,int)>($r3, $i4, 384);

        z0 = 1;

     label2:
        staticinvoke <libcore.io.IoUtils: void close(java.io.FileDescriptor)>(r1);

        return z0;

     label3:
        $r6 := @caughtexception;

        r8 = $r6;

        $i6 = r8.<android.system.ErrnoException: int errno>;

        $i5 = <android.system.OsConstants: int EEXIST>;

        if $i6 != $i5 goto label5;

        z1 = 0;

     label4:
        staticinvoke <libcore.io.IoUtils: void close(java.io.FileDescriptor)>(r1);

        return z1;

     label5:
        $r7 = virtualinvoke r8.<android.system.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r7;

     label6:
        $r5 := @caughtexception;

        r2 = $r5;

     label7:
        staticinvoke <libcore.io.IoUtils: void close(java.io.FileDescriptor)>(r1);

        throw r2;

        catch android.system.ErrnoException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label7 with label6;
    }

    public static java.io.File createTempFile(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, r1;
        java.io.File $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>(r0, r1, null);

        return $r2;
    }

    public static java.io.File createTempFile(java.lang.String, java.lang.String, java.io.File) throws java.io.IOException
    {
        java.lang.String r0, r1, r4, $r11;
        java.io.File r2, r3, $r5, $r13, r14;
        int $i0, $i1;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;
        java.util.Random $r8;
        boolean $z0;
        java.lang.IllegalArgumentException $r12;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.io.File;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 >= 3 goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("prefix must be at least 3 characters");

        throw $r12;

     label1:
        if r1 != null goto label2;

        r1 = ".tmp";

     label2:
        r3 = r2;

        if r3 != null goto label3;

        r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("java.io.tmpdir", ".");

        $r13 = new java.io.File;

        specialinvoke $r13.<java.io.File: void <init>(java.lang.String)>(r4);

        r3 = $r13;

     label3:
        $r5 = new java.io.File;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = <java.io.File: java.util.Random tempFileRandom>;

        $i1 = virtualinvoke $r8.<java.util.Random: int nextInt()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, $r11);

        r14 = $r5;

        $z0 = virtualinvoke r14.<java.io.File: boolean createNewFile()>();

        if $z0 == 0 goto label3;

        return r14;
    }

    public boolean renameTo(java.io.File)
    {
        java.io.File r0, r1;
        java.lang.String $r3, $r4;
        libcore.io.Os $r5;
        android.system.ErrnoException $r6;

        r0 := @this: java.io.File;

        r1 := @parameter0: java.io.File;

     label1:
        $r5 = <libcore.io.Libcore: libcore.io.Os os>;

        $r4 = r0.<java.io.File: java.lang.String path>;

        $r3 = r1.<java.io.File: java.lang.String path>;

        interfaceinvoke $r5.<libcore.io.Os: void rename(java.lang.String,java.lang.String)>($r4, $r3);

     label2:
        return 1;

     label3:
        $r6 := @caughtexception;

        return 0;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        java.io.File r0;
        java.lang.String $r1;

        r0 := @this: java.io.File;

        $r1 = r0.<java.io.File: java.lang.String path>;

        return $r1;
    }

    public java.net.URI toURI()
    {
        java.io.File r0;
        java.lang.String r1, $r9;
        boolean $z0, $z1;
        java.net.URI $r3, $r4, $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.net.URISyntaxException $r10;

        r0 := @this: java.io.File;

        r1 = specialinvoke r0.<java.io.File: java.lang.String getAbsoluteName()>();

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 != 0 goto label3;

        $r5 = new java.net.URI;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("file", null, $r9, null, null);

     label2:
        return $r5;

     label3:
        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("//");

        if $z1 == 0 goto label5;

        $r4 = new java.net.URI;

        specialinvoke $r4.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("file", "", r1, null);

     label4:
        return $r4;

     label5:
        $r3 = new java.net.URI;

        specialinvoke $r3.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("file", null, r1, null, null);

     label6:
        return $r3;

     label7:
        $r10 := @caughtexception;

        return null;

        catch java.net.URISyntaxException from label1 to label2 with label7;
        catch java.net.URISyntaxException from label3 to label4 with label7;
        catch java.net.URISyntaxException from label5 to label6 with label7;
    }

    public java.net.URL toURL() throws java.net.MalformedURLException
    {
        java.io.File r0;
        java.lang.String r1, $r7, $r12;
        boolean $z0, $z1;
        java.net.URL $r2, $r3, $r8;
        java.lang.StringBuilder $r4, $r5, $r6, $r9, $r10, $r11;

        r0 := @this: java.io.File;

        r1 = specialinvoke r0.<java.io.File: java.lang.String getAbsoluteName()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 != 0 goto label1;

        $r8 = new java.net.URL;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>("file", "", -1, $r12, null);

        return $r8;

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("//");

        if $z1 == 0 goto label2;

        $r3 = new java.net.URL;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file:");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r7);

        return $r3;

     label2:
        $r2 = new java.net.URL;

        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>("file", "", -1, r1, null);

        return $r2;
    }

    private java.lang.String getAbsoluteName()
    {
        java.io.File r0, r1;
        java.lang.String r2;
        boolean $z0;
        char $c0, $c1, $c4, $c5;
        int $i2, $i3;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: java.io.File;

        r1 = virtualinvoke r0.<java.io.File: java.io.File getAbsoluteFile()>();

        r2 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label1;

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        $i3 = $i2 - 1;

        $c4 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i3);

        $c5 = <java.io.File: char separatorChar>;

        if $c4 == $c5 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $c0 = <java.io.File: char separatorChar>;

        if $c0 == 47 goto label2;

        $c1 = <java.io.File: char separatorChar>;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String replace(char,char)>($c1, 47);

     label2:
        return r2;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.File r0;
        java.io.ObjectOutputStream r1;
        char $c0;

        r0 := @this: java.io.File;

        r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $c0 = <java.io.File: char separatorChar>;

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeChar(int)>($c0);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.File r0;
        java.io.ObjectInputStream r1;
        char c0, $c1;
        java.lang.String $r2, $r3, $r4;

        r0 := @this: java.io.File;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        c0 = virtualinvoke r1.<java.io.ObjectInputStream: char readChar()>();

        $r2 = r0.<java.io.File: java.lang.String path>;

        $c1 = <java.io.File: char separatorChar>;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(char,char)>(c0, $c1);

        $r4 = staticinvoke <java.io.File: java.lang.String fixSlashes(java.lang.String)>($r3);

        r0.<java.io.File: java.lang.String path> = $r4;

        return;
    }

    public long getTotalSpace()
    {
        java.io.File r0;
        android.system.StructStatVfs r1;
        java.lang.String $r2;
        libcore.io.Os $r3;
        long $l0, $l1, $l2;
        android.system.ErrnoException $r4;

        r0 := @this: java.io.File;

     label1:
        $r3 = <libcore.io.Libcore: libcore.io.Os os>;

        $r2 = r0.<java.io.File: java.lang.String path>;

        r1 = interfaceinvoke $r3.<libcore.io.Os: android.system.StructStatVfs statvfs(java.lang.String)>($r2);

        $l1 = r1.<android.system.StructStatVfs: long f_blocks>;

        $l0 = r1.<android.system.StructStatVfs: long f_bsize>;

        $l2 = $l1 * $l0;

     label2:
        return $l2;

     label3:
        $r4 := @caughtexception;

        return 0L;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public long getUsableSpace()
    {
        java.io.File r0;
        android.system.StructStatVfs r1;
        java.lang.String $r2;
        libcore.io.Os $r3;
        long $l0, $l1, $l2;
        android.system.ErrnoException $r4;

        r0 := @this: java.io.File;

     label1:
        $r3 = <libcore.io.Libcore: libcore.io.Os os>;

        $r2 = r0.<java.io.File: java.lang.String path>;

        r1 = interfaceinvoke $r3.<libcore.io.Os: android.system.StructStatVfs statvfs(java.lang.String)>($r2);

        $l1 = r1.<android.system.StructStatVfs: long f_bavail>;

        $l0 = r1.<android.system.StructStatVfs: long f_bsize>;

        $l2 = $l1 * $l0;

     label2:
        return $l2;

     label3:
        $r4 := @caughtexception;

        return 0L;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public long getFreeSpace()
    {
        java.io.File r0;
        android.system.StructStatVfs r1;
        java.lang.String $r2;
        libcore.io.Os $r3;
        long $l0, $l1, $l2;
        android.system.ErrnoException $r4;

        r0 := @this: java.io.File;

     label1:
        $r3 = <libcore.io.Libcore: libcore.io.Os os>;

        $r2 = r0.<java.io.File: java.lang.String path>;

        r1 = interfaceinvoke $r3.<libcore.io.Os: android.system.StructStatVfs statvfs(java.lang.String)>($r2);

        $l1 = r1.<android.system.StructStatVfs: long f_bfree>;

        $l0 = r1.<android.system.StructStatVfs: long f_bsize>;

        $l2 = $l1 * $l0;

     label2:
        return $l2;

     label3:
        $r4 := @caughtexception;

        return 0L;

        catch android.system.ErrnoException from label1 to label2 with label3;
    }

    public volatile int compareTo(java.lang.Object)
    {
        java.io.File r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: java.io.File;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.io.File) r1;

        $i0 = virtualinvoke r0.<java.io.File: int compareTo(java.io.File)>($r2);

        return $i0;
    }

    static void <clinit>()
    {
        java.util.Random $r0;
        java.lang.String $r1, $r2, $r3, $r4;
        char $c0, $c1, $c2, $c3;

        <java.io.File: long serialVersionUID> = 301077366599181567L;

        $r0 = new java.util.Random;

        specialinvoke $r0.<java.util.Random: void <init>()>();

        <java.io.File: java.util.Random tempFileRandom> = $r0;

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("file.separator", "/");

        $c0 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        <java.io.File: char separatorChar> = $c0;

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("path.separator", ":");

        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(0);

        <java.io.File: char pathSeparatorChar> = $c1;

        $c2 = <java.io.File: char separatorChar>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c2);

        <java.io.File: java.lang.String separator> = $r3;

        $c3 = <java.io.File: char pathSeparatorChar>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c3);

        <java.io.File: java.lang.String pathSeparator> = $r4;

        return;
    }
}
