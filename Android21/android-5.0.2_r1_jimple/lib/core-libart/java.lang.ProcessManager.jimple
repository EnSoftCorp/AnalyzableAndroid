final class java.lang.ProcessManager extends java.lang.Object
{
    private final java.util.Map processReferences;
    private final java.lang.ProcessManager$ProcessReferenceQueue referenceQueue;
    private static final java.lang.ProcessManager instance;

    private void <init>()
    {
        java.lang.ProcessManager r0;
        java.lang.ProcessManager$1 r1, $r4;
        java.util.HashMap $r2;
        java.lang.ProcessManager$ProcessReferenceQueue $r3;
        java.lang.Class $r5;
        java.lang.String $r6;

        r0 := @this: java.lang.ProcessManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<java.lang.ProcessManager: java.util.Map processReferences> = $r2;

        $r3 = new java.lang.ProcessManager$ProcessReferenceQueue;

        specialinvoke $r3.<java.lang.ProcessManager$ProcessReferenceQueue: void <init>()>();

        r0.<java.lang.ProcessManager: java.lang.ProcessManager$ProcessReferenceQueue referenceQueue> = $r3;

        $r4 = new java.lang.ProcessManager$1;

        $r5 = class "java/lang/ProcessManager";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r4.<java.lang.ProcessManager$1: void <init>(java.lang.ProcessManager,java.lang.String)>(r0, $r6);

        r1 = $r4;

        virtualinvoke r1.<java.lang.Thread: void setDaemon(boolean)>(1);

        virtualinvoke r1.<java.lang.Thread: void start()>();

        return;
    }

    private void cleanUp()
    {
        java.lang.ProcessManager r0;
        java.lang.ProcessManager$ProcessReference r1, $r5;
        java.util.Map r2, $r6, $r7;
        java.lang.Throwable r3, $r10;
        java.lang.ProcessManager$ProcessReferenceQueue $r4;
        int $i0;
        java.lang.Integer $r8;

        r0 := @this: java.lang.ProcessManager;

     label1:
        $r4 = r0.<java.lang.ProcessManager: java.lang.ProcessManager$ProcessReferenceQueue referenceQueue>;

        $r5 = virtualinvoke $r4.<java.lang.ProcessManager$ProcessReferenceQueue: java.lang.ProcessManager$ProcessReference poll()>();

        r1 = $r5;

        if $r5 == null goto label7;

        $r6 = r0.<java.lang.ProcessManager: java.util.Map processReferences>;

        r2 = $r6;

        entermonitor $r6;

     label2:
        $r7 = r0.<java.lang.ProcessManager: java.util.Map processReferences>;

        $i0 = r1.<java.lang.ProcessManager$ProcessReference: int processId>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r8);

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        goto label1;

     label7:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void watchChildren()
    {
        java.lang.ProcessManager r0;
        android.util.MutableInt r1, $r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        libcore.io.Os $r3;
        boolean $z0, $z1, $z2;
        java.lang.AssertionError $r4, $r10;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;
        android.system.ErrnoException $r9, r11;

        r0 := @this: java.lang.ProcessManager;

        $r2 = new android.util.MutableInt;

        specialinvoke $r2.<android.util.MutableInt: void <init>(int)>(-1);

        r1 = $r2;

     label1:
        $r3 = <libcore.io.Libcore: libcore.io.Os os>;

        i0 = interfaceinvoke $r3.<libcore.io.Os: int waitpid(int,android.util.MutableInt,int)>(0, r1, 0);

        $i2 = r1.<android.util.MutableInt: int value>;

        $z0 = staticinvoke <android.system.OsConstants: boolean WIFEXITED(int)>($i2);

        if $z0 == 0 goto label2;

        $i8 = r1.<android.util.MutableInt: int value>;

        i1 = staticinvoke <android.system.OsConstants: int WEXITSTATUS(int)>($i8);

        goto label5;

     label2:
        $i3 = r1.<android.util.MutableInt: int value>;

        $z1 = staticinvoke <android.system.OsConstants: boolean WIFSIGNALED(int)>($i3);

        if $z1 == 0 goto label3;

        $i7 = r1.<android.util.MutableInt: int value>;

        i1 = staticinvoke <android.system.OsConstants: int WTERMSIG(int)>($i7);

        goto label5;

     label3:
        $i4 = r1.<android.util.MutableInt: int value>;

        $z2 = staticinvoke <android.system.OsConstants: boolean WIFSTOPPED(int)>($i4);

        if $z2 == 0 goto label4;

        $i6 = r1.<android.util.MutableInt: int value>;

        i1 = staticinvoke <android.system.OsConstants: int WSTOPSIG(int)>($i6);

        goto label5;

     label4:
        $r4 = new java.lang.AssertionError;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected status from waitpid: ");

        $i5 = r1.<android.util.MutableInt: int value>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>($r8);

        throw $r4;

     label5:
        specialinvoke r0.<java.lang.ProcessManager: void onExit(int,int)>(i0, i1);

     label6:
        goto label1;

     label7:
        $r9 := @caughtexception;

        r11 = $r9;

        $i9 = r11.<android.system.ErrnoException: int errno>;

        $i10 = <android.system.OsConstants: int ECHILD>;

        if $i9 != $i10 goto label8;

        specialinvoke r0.<java.lang.ProcessManager: void waitForMoreChildren()>();

        goto label1;

     label8:
        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>(r11);

        throw $r10;

        catch android.system.ErrnoException from label1 to label6 with label7;
    }

    private void onExit(int, int)
    {
        java.lang.ProcessManager r0;
        int i0, i1;
        java.util.Map r1, $r3, $r4;
        java.lang.Throwable r2, $r8;
        java.lang.Integer $r5;
        java.lang.Object $r6, $r7;
        java.lang.ProcessManager$ProcessReference r9;
        java.lang.ProcessManager$ProcessImpl r10;

        r0 := @this: java.lang.ProcessManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = r0.<java.lang.ProcessManager: java.util.Map processReferences>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<java.lang.ProcessManager: void cleanUp()>();

        $r4 = r0.<java.lang.ProcessManager: java.util.Map processReferences>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r5);

        r9 = (java.lang.ProcessManager$ProcessReference) $r6;

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        if r9 == null goto label6;

        $r7 = virtualinvoke r9.<java.lang.ProcessManager$ProcessReference: java.lang.Object get()>();

        r10 = (java.lang.ProcessManager$ProcessImpl) $r7;

        if r10 == null goto label6;

        virtualinvoke r10.<java.lang.ProcessManager$ProcessImpl: void setExitValue(int)>(i1);

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void waitForMoreChildren()
    {
        java.lang.ProcessManager r0;
        java.util.Map r1, $r4, $r5, $r6;
        java.lang.Throwable r3, $r7;
        boolean $z0;
        java.lang.InterruptedException $r8;
        java.lang.AssertionError $r9;

        r0 := @this: java.lang.ProcessManager;

        $r4 = r0.<java.lang.ProcessManager: java.util.Map processReferences>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<java.lang.ProcessManager: java.util.Map processReferences>;

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label5;

     label2:
        $r6 = r0.<java.lang.ProcessManager: java.util.Map processReferences>;

        virtualinvoke $r6.<java.lang.Object: void wait()>();

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>("unexpected interrupt");

        throw $r9;

     label5:
        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r1;

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.InterruptedException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private static native int exec(java.lang.String[], java.lang.String[], java.lang.String, java.io.FileDescriptor, java.io.FileDescriptor, java.io.FileDescriptor, boolean) throws java.io.IOException;

    public java.lang.Process exec(java.lang.String[], java.lang.String[], java.io.File, boolean) throws java.io.IOException
    {
        java.lang.ProcessManager r0;
        java.lang.String[] r1, r2, r4, r5, $r42;
        java.io.File r3;
        boolean z0;
        int i0, i1, $i2, $i3, $i4, i5;
        java.io.FileDescriptor r6, r7, $r14, $r15, $r16, r58;
        java.lang.String r8, $r18, $r26, $r34, $r35, $r37, $r51, $r52, $r54;
        java.util.Map r9, $r17, $r23, $r24;
        java.io.IOException r10, r11, $r46, $r47;
        java.lang.Throwable r12, $r57;
        java.lang.Object $r13, $r43;
        java.lang.ProcessManager$ProcessImpl $r19, r59;
        java.lang.ProcessManager$ProcessReferenceQueue $r20;
        java.lang.ProcessManager$ProcessReference $r21, r60;
        java.lang.Integer $r22;
        java.lang.NullPointerException $r27, $r32, $r40;
        java.lang.StringBuilder $r28, $r29, $r30, $r31, $r33, $r36, $r38, $r39, $r44, $r45, $r48, $r49, $r50, $r53, $r55;
        java.lang.IndexOutOfBoundsException $r41;

        r0 := @this: java.lang.ProcessManager;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.io.File;

        z0 := @parameter3: boolean;

        if r1 != null goto label01;

        $r40 = new java.lang.NullPointerException;

        specialinvoke $r40.<java.lang.NullPointerException: void <init>(java.lang.String)>("taintedCommand == null");

        throw $r40;

     label01:
        $i2 = lengthof r1;

        if $i2 != 0 goto label02;

        $r41 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r41.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>("taintedCommand.length == 0");

        throw $r41;

     label02:
        $r13 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        r4 = (java.lang.String[]) $r13;

        if r2 == null goto label03;

        $r43 = virtualinvoke r2.<java.lang.Object: java.lang.Object clone()>();

        $r42 = (java.lang.String[]) $r43;

        goto label04;

     label03:
        $r42 = null;

     label04:
        r5 = $r42;

        i0 = 0;

     label05:
        $i3 = lengthof r4;

        if i0 >= $i3 goto label07;

        $r35 = r4[i0];

        if $r35 != null goto label06;

        $r32 = new java.lang.NullPointerException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("taintedCommand[");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r36 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] == null");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.NullPointerException: void <init>(java.lang.String)>($r37);

        throw $r32;

     label06:
        i0 = i0 + 1;

        goto label05;

     label07:
        if r5 == null goto label10;

        i5 = 0;

     label08:
        $i4 = lengthof r5;

        if i5 >= $i4 goto label10;

        $r26 = r5[i5];

        if $r26 != null goto label09;

        $r27 = new java.lang.NullPointerException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("taintedEnvironment[");

        $r28 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] == null");

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.NullPointerException: void <init>(java.lang.String)>($r34);

        throw $r27;

     label09:
        i5 = i5 + 1;

        goto label08;

     label10:
        $r14 = new java.io.FileDescriptor;

        specialinvoke $r14.<java.io.FileDescriptor: void <init>()>();

        r58 = $r14;

        $r16 = new java.io.FileDescriptor;

        specialinvoke $r16.<java.io.FileDescriptor: void <init>()>();

        r6 = $r16;

        $r15 = new java.io.FileDescriptor;

        specialinvoke $r15.<java.io.FileDescriptor: void <init>()>();

        r7 = $r15;

        if r3 != null goto label11;

        $r18 = null;

        goto label12;

     label11:
        $r18 = virtualinvoke r3.<java.io.File: java.lang.String getPath()>();

     label12:
        r8 = $r18;

        $r17 = r0.<java.lang.ProcessManager: java.util.Map processReferences>;

        r9 = $r17;

        entermonitor $r17;

     label13:
        i1 = staticinvoke <java.lang.ProcessManager: int exec(java.lang.String[],java.lang.String[],java.lang.String,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,boolean)>(r4, r5, r8, r58, r6, r7, z0);

     label14:
        goto label16;

     label15:
        $r47 := @caughtexception;

        r10 = $r47;

        $r46 = new java.io.IOException;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error running exec(). Command: ");

        $r51 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r4);

        $r50 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Working Directory: ");

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r55 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Environment: ");

        $r54 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r5);

        $r53 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r52 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<java.io.IOException: void <init>(java.lang.String)>($r52);

        r11 = $r46;

        virtualinvoke r11.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>(r10);

        throw r11;

     label16:
        $r19 = new java.lang.ProcessManager$ProcessImpl;

        specialinvoke $r19.<java.lang.ProcessManager$ProcessImpl: void <init>(int,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor)>(i1, r58, r6, r7);

        r59 = $r19;

        $r21 = new java.lang.ProcessManager$ProcessReference;

        $r20 = r0.<java.lang.ProcessManager: java.lang.ProcessManager$ProcessReferenceQueue referenceQueue>;

        specialinvoke $r21.<java.lang.ProcessManager$ProcessReference: void <init>(java.lang.ProcessManager$ProcessImpl,java.lang.ProcessManager$ProcessReferenceQueue)>(r59, $r20);

        r60 = $r21;

        $r23 = r0.<java.lang.ProcessManager: java.util.Map processReferences>;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, r60);

        $r24 = r0.<java.lang.ProcessManager: java.util.Map processReferences>;

        virtualinvoke $r24.<java.lang.Object: void notifyAll()>();

        exitmonitor r9;

     label17:
        return r59;

     label18:
        $r57 := @caughtexception;

        r12 = $r57;

        exitmonitor r9;

     label19:
        throw r12;

        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.Throwable from label13 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    public static java.lang.ProcessManager getInstance()
    {
        java.lang.ProcessManager $r0;

        $r0 = <java.lang.ProcessManager: java.lang.ProcessManager instance>;

        return $r0;
    }

    static void access$000(java.lang.ProcessManager)
    {
        java.lang.ProcessManager r0;

        r0 := @parameter0: java.lang.ProcessManager;

        specialinvoke r0.<java.lang.ProcessManager: void watchChildren()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.ProcessManager $r0;

        $r0 = new java.lang.ProcessManager;

        specialinvoke $r0.<java.lang.ProcessManager: void <init>()>();

        <java.lang.ProcessManager: java.lang.ProcessManager instance> = $r0;

        return;
    }
}
