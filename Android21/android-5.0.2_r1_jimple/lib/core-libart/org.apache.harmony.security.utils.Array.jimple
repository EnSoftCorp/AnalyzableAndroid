public class org.apache.harmony.security.utils.Array extends java.lang.Object
{

    private void <init>()
    {
        org.apache.harmony.security.utils.Array r0;

        r0 := @this: org.apache.harmony.security.utils.Array;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getBytesAsString(byte[])
    {
        byte[] r0;
        java.lang.StringBuilder r1, $r2;
        int i0, $i1, $i2, $i3;
        java.lang.String $r3, $r4;
        byte $b4;

        r0 := @parameter0: byte[];

        $r2 = new java.lang.StringBuilder;

        $i1 = lengthof r0;

        $i2 = $i1 * 3;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i2);

        r1 = $r2;

        i0 = 0;

     label1:
        $i3 = lengthof r0;

        if i0 >= $i3 goto label2;

        $b4 = r0[i0];

        $r4 = staticinvoke <java.lang.Byte: java.lang.String toHexString(byte,boolean)>($b4, 0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.String toString(byte[], java.lang.String)
    {
        byte[] r0;
        java.lang.String r1, r5, $r9, $r12, $r18, $r21, $r25;
        java.lang.String[] r2, $r6;
        java.lang.StringBuilder r3, r4, $r7, $r8;
        char c0, $c12;
        int $i1, $i2, $i3, $i4, $i6, $i8, $i9, $i10, $i11, $i13, $i14, i15, i17, i18;
        byte $b5, $b7;
        boolean $z1;
        short s16;

        r0 := @parameter0: byte[];

        r1 := @parameter1: java.lang.String;

        $r6 = newarray (java.lang.String)[5];

        $r6[0] = "";

        $r6[1] = "000";

        $r6[2] = "00";

        $r6[3] = "0";

        $r6[4] = "";

        r2 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        r3 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        r4 = $r8;

        i15 = 0;

     label01:
        $i1 = lengthof r0;

        if i15 >= $i1 goto label07;

        $i4 = i15 % 16;

        if $i4 != 0 goto label02;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i15);

        $i13 = virtualinvoke r5.<java.lang.String: int length()>();

        $r25 = r2[$i13];

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $i14 = virtualinvoke r4.<java.lang.StringBuilder: int length()>();

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>(0, $i14);

     label02:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $b5 = r0[i15];

        $r18 = staticinvoke <java.lang.Byte: java.lang.String toHexString(byte,boolean)>($b5, 0);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $b7 = r0[i15];

        s16 = 255 & $b7;

        $i6 = s16 & 65535;

        c0 = (char) $i6;

        $z1 = staticinvoke <java.lang.Character: boolean isISOControl(char)>(c0);

        if $z1 == 0 goto label03;

        $c12 = 46;

        goto label04;

     label03:
        $c12 = c0;

     label04:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c12);

        $i9 = i15 + 1;

        $i8 = $i9 % 8;

        if $i8 != 0 goto label05;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label05:
        $i10 = i15 + 1;

        $i11 = $i10 % 16;

        if $i11 != 0 goto label06;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r21 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label06:
        i15 = i15 + 1;

        goto label01;

     label07:
        $i2 = i15 % 16;

        if $i2 == 0 goto label11;

        $i3 = i15 % 16;

        i17 = 16 - $i3;

        i18 = 0;

     label08:
        if i18 >= i17 goto label09;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   ");

        i18 = i18 + 1;

        goto label08;

     label09:
        if i17 <= 8 goto label10;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label10:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r12 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label11:
        $r9 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }
}
