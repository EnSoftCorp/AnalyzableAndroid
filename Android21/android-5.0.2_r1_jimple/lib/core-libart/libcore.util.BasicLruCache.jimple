public class libcore.util.BasicLruCache extends java.lang.Object
{
    private final java.util.LinkedHashMap map;
    private final int maxSize;

    public void <init>(int)
    {
        libcore.util.BasicLruCache r0;
        int i0;
        java.util.LinkedHashMap $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: libcore.util.BasicLruCache;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 > 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("maxSize <= 0");

        throw $r2;

     label1:
        r0.<libcore.util.BasicLruCache: int maxSize> = i0;

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(0, 0.75F, 1);

        r0.<libcore.util.BasicLruCache: java.util.LinkedHashMap map> = $r1;

        return;
    }

    public final synchronized java.lang.Object get(java.lang.Object)
    {
        libcore.util.BasicLruCache r0;
        java.lang.Object r1, r2, r7;
        java.util.LinkedHashMap $r3, $r4;
        int $i0;
        java.lang.NullPointerException $r6;

        r0 := @this: libcore.util.BasicLruCache;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("key == null");

        throw $r6;

     label1:
        $r3 = r0.<libcore.util.BasicLruCache: java.util.LinkedHashMap map>;

        r2 = virtualinvoke $r3.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r1);

        if r2 == null goto label2;

        return r2;

     label2:
        r7 = virtualinvoke r0.<libcore.util.BasicLruCache: java.lang.Object create(java.lang.Object)>(r1);

        if r7 == null goto label3;

        $r4 = r0.<libcore.util.BasicLruCache: java.util.LinkedHashMap map>;

        virtualinvoke $r4.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r7);

        $i0 = r0.<libcore.util.BasicLruCache: int maxSize>;

        specialinvoke r0.<libcore.util.BasicLruCache: void trimToSize(int)>($i0);

     label3:
        return r7;
    }

    public final synchronized java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        libcore.util.BasicLruCache r0;
        java.lang.Object r1, r2, r3;
        java.util.LinkedHashMap $r4;
        int $i0;
        java.lang.NullPointerException $r5, $r6;

        r0 := @this: libcore.util.BasicLruCache;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        if r1 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("key == null");

        throw $r6;

     label1:
        if r2 != null goto label2;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("value == null");

        throw $r5;

     label2:
        $r4 = r0.<libcore.util.BasicLruCache: java.util.LinkedHashMap map>;

        r3 = virtualinvoke $r4.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $i0 = r0.<libcore.util.BasicLruCache: int maxSize>;

        specialinvoke r0.<libcore.util.BasicLruCache: void trimToSize(int)>($i0);

        return r3;
    }

    private void trimToSize(int)
    {
        libcore.util.BasicLruCache r0;
        int i0, $i1;
        java.util.Map$Entry r1;
        java.lang.Object r2, r3;
        java.util.LinkedHashMap $r4, $r5, $r6;

        r0 := @this: libcore.util.BasicLruCache;

        i0 := @parameter0: int;

     label1:
        $r4 = r0.<libcore.util.BasicLruCache: java.util.LinkedHashMap map>;

        $i1 = virtualinvoke $r4.<java.util.LinkedHashMap: int size()>();

        if $i1 <= i0 goto label2;

        $r5 = r0.<libcore.util.BasicLruCache: java.util.LinkedHashMap map>;

        r1 = virtualinvoke $r5.<java.util.LinkedHashMap: java.util.Map$Entry eldest()>();

        r2 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        r3 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = r0.<libcore.util.BasicLruCache: java.util.LinkedHashMap map>;

        virtualinvoke $r6.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>(r2);

        virtualinvoke r0.<libcore.util.BasicLruCache: void entryEvicted(java.lang.Object,java.lang.Object)>(r2, r3);

        goto label1;

     label2:
        return;
    }

    protected void entryEvicted(java.lang.Object, java.lang.Object)
    {
        libcore.util.BasicLruCache r0;
        java.lang.Object r1, r2;

        r0 := @this: libcore.util.BasicLruCache;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        return;
    }

    protected java.lang.Object create(java.lang.Object)
    {
        libcore.util.BasicLruCache r0;
        java.lang.Object r1;

        r0 := @this: libcore.util.BasicLruCache;

        r1 := @parameter0: java.lang.Object;

        return null;
    }

    public final synchronized java.util.Map snapshot()
    {
        libcore.util.BasicLruCache r0;
        java.util.LinkedHashMap $r1, $r2;

        r0 := @this: libcore.util.BasicLruCache;

        $r1 = new java.util.LinkedHashMap;

        $r2 = r0.<libcore.util.BasicLruCache: java.util.LinkedHashMap map>;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>(java.util.Map)>($r2);

        return $r1;
    }

    public final synchronized void evictAll()
    {
        libcore.util.BasicLruCache r0;

        r0 := @this: libcore.util.BasicLruCache;

        specialinvoke r0.<libcore.util.BasicLruCache: void trimToSize(int)>(0);

        return;
    }
}
