public class java.security.Provider$Service extends java.lang.Object
{
    private static final java.lang.String ATTR_SUPPORTED_KEY_CLASSES;
    private static final java.lang.String ATTR_SUPPORTED_KEY_FORMATS;
    private static final java.util.HashMap supportsParameterTypes;
    private static final java.util.HashMap constructorParameterClasses;
    private java.security.Provider provider;
    private java.lang.String type;
    private java.lang.String algorithm;
    private java.lang.String className;
    private java.util.List aliases;
    private java.util.Map attributes;
    private java.lang.Class implementation;
    private java.lang.String lastClassName;
    private volatile boolean supportedKeysInitialized;
    private java.lang.Class[] keyClasses;
    private java.lang.String[] keyFormats;

    private static java.lang.Class loadClassOrThrow(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Exception r1, $r5;
        java.lang.Class $r2, $r4;
        java.lang.ClassLoader $r3;
        java.lang.AssertionError $r6;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = class "java/security/Provider";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r4 = virtualinvoke $r3.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>(r1);

        throw $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void <init>(java.security.Provider, java.lang.String, java.lang.String, java.lang.String, java.util.List, java.util.Map)
    {
        java.security.Provider$Service r0;
        java.security.Provider r1;
        java.lang.String r2, r3, r4;
        java.util.List r5, $r8;
        java.util.Map r6, $r7;
        int $i0, $i1;
        java.lang.NullPointerException $r9, $r10, $r11, $r12;

        r0 := @this: java.security.Provider$Service;

        r1 := @parameter0: java.security.Provider;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.util.List;

        r6 := @parameter5: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r12 = new java.lang.NullPointerException;

        specialinvoke $r12.<java.lang.NullPointerException: void <init>(java.lang.String)>("provider == null");

        throw $r12;

     label1:
        if r2 != null goto label2;

        $r11 = new java.lang.NullPointerException;

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("type == null");

        throw $r11;

     label2:
        if r3 != null goto label3;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("algorithm == null");

        throw $r10;

     label3:
        if r4 != null goto label4;

        $r9 = new java.lang.NullPointerException;

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("className == null");

        throw $r9;

     label4:
        r0.<java.security.Provider$Service: java.security.Provider provider> = r1;

        r0.<java.security.Provider$Service: java.lang.String type> = r2;

        r0.<java.security.Provider$Service: java.lang.String algorithm> = r3;

        r0.<java.security.Provider$Service: java.lang.String className> = r4;

        if r5 == null goto label5;

        $i1 = interfaceinvoke r5.<java.util.List: int size()>();

        if $i1 != 0 goto label5;

        $r8 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        goto label6;

     label5:
        $r8 = r5;

     label6:
        r0.<java.security.Provider$Service: java.util.List aliases> = $r8;

        if r6 == null goto label7;

        $i0 = interfaceinvoke r6.<java.util.Map: int size()>();

        if $i0 != 0 goto label7;

        $r7 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        goto label8;

     label7:
        $r7 = r6;

     label8:
        r0.<java.security.Provider$Service: java.util.Map attributes> = $r7;

        return;
    }

    void addAlias(java.lang.String)
    {
        java.security.Provider$Service r0;
        java.lang.String r1;
        java.util.List $r2, $r4, $r5;
        java.util.ArrayList $r3;
        int $i0;

        r0 := @this: java.security.Provider$Service;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<java.security.Provider$Service: java.util.List aliases>;

        if $r2 == null goto label1;

        $r5 = r0.<java.security.Provider$Service: java.util.List aliases>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 != 0 goto label2;

     label1:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<java.security.Provider$Service: java.util.List aliases> = $r3;

     label2:
        $r4 = r0.<java.security.Provider$Service: java.util.List aliases>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    void putAttribute(java.lang.String, java.lang.String)
    {
        java.security.Provider$Service r0;
        java.lang.String r1, r2;
        java.util.Map $r3, $r5, $r7;
        java.util.HashMap $r4;
        int $i0;

        r0 := @this: java.security.Provider$Service;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<java.security.Provider$Service: java.util.Map attributes>;

        if $r3 == null goto label1;

        $r7 = r0.<java.security.Provider$Service: java.util.Map attributes>;

        $i0 = interfaceinvoke $r7.<java.util.Map: int size()>();

        if $i0 != 0 goto label2;

     label1:
        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<java.security.Provider$Service: java.util.Map attributes> = $r4;

     label2:
        $r5 = r0.<java.security.Provider$Service: java.util.Map attributes>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public final java.lang.String getType()
    {
        java.security.Provider$Service r0;
        java.lang.String $r1;

        r0 := @this: java.security.Provider$Service;

        $r1 = r0.<java.security.Provider$Service: java.lang.String type>;

        return $r1;
    }

    public final java.lang.String getAlgorithm()
    {
        java.security.Provider$Service r0;
        java.lang.String $r1;

        r0 := @this: java.security.Provider$Service;

        $r1 = r0.<java.security.Provider$Service: java.lang.String algorithm>;

        return $r1;
    }

    public final java.security.Provider getProvider()
    {
        java.security.Provider$Service r0;
        java.security.Provider $r1;

        r0 := @this: java.security.Provider$Service;

        $r1 = r0.<java.security.Provider$Service: java.security.Provider provider>;

        return $r1;
    }

    public final java.lang.String getClassName()
    {
        java.security.Provider$Service r0;
        java.lang.String $r1;

        r0 := @this: java.security.Provider$Service;

        $r1 = r0.<java.security.Provider$Service: java.lang.String className>;

        return $r1;
    }

    public final java.lang.String getAttribute(java.lang.String)
    {
        java.security.Provider$Service r0;
        java.lang.String r1, $r5;
        java.util.Map $r2, $r3;
        java.lang.Object $r4;
        java.lang.NullPointerException $r6;

        r0 := @this: java.security.Provider$Service;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("name == null");

        throw $r6;

     label1:
        $r2 = r0.<java.security.Provider$Service: java.util.Map attributes>;

        if $r2 != null goto label2;

        return null;

     label2:
        $r3 = r0.<java.security.Provider$Service: java.util.Map attributes>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    java.util.List getAliases()
    {
        java.security.Provider$Service r0;
        java.util.List $r1, $r2;
        java.util.ArrayList $r3;

        r0 := @this: java.security.Provider$Service;

        $r1 = r0.<java.security.Provider$Service: java.util.List aliases>;

        if $r1 != null goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(0);

        r0.<java.security.Provider$Service: java.util.List aliases> = $r3;

     label1:
        $r2 = r0.<java.security.Provider$Service: java.util.List aliases>;

        return $r2;
    }

    public java.lang.Object newInstance(java.lang.Object) throws java.security.NoSuchAlgorithmException
    {
        java.security.Provider$Service r0;
        java.lang.Object r1, $r15, $r16, $r33, $r34, $r35;
        java.lang.ClassLoader r2;
        java.lang.Exception r3, $r41;
        java.lang.Class $r4, $r6, $r8, $r14, $r24, $r36, r50;
        java.security.Provider $r5;
        java.lang.String $r7, $r9, $r10, $r12, $r19, $r23, $r25, $r30, $r32, $r37, $r38, $r40, $r44, $r47;
        java.util.HashMap $r11, $r13;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r17, $r20, $r21, $r22, $r26, $r27, $r29, $r31, $r39, $r43, $r45, $r46, $r48, $r49;
        java.lang.IllegalArgumentException $r18, $r28;
        java.security.NoSuchAlgorithmException $r42;

        r0 := @this: java.security.Provider$Service;

        r1 := @parameter0: java.lang.Object;

        $r4 = r0.<java.security.Provider$Service: java.lang.Class implementation>;

        if $r4 == null goto label01;

        $r37 = r0.<java.security.Provider$Service: java.lang.String className>;

        $r38 = r0.<java.security.Provider$Service: java.lang.String lastClassName>;

        $z2 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>($r38);

        if $z2 != 0 goto label05;

     label01:
        $r5 = r0.<java.security.Provider$Service: java.security.Provider provider>;

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        r2 = virtualinvoke $r6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        if r2 != null goto label02;

        r2 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

     label02:
        $r7 = r0.<java.security.Provider$Service: java.lang.String className>;

        $r8 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($r7, 1, r2);

        r0.<java.security.Provider$Service: java.lang.Class implementation> = $r8;

        $r9 = r0.<java.security.Provider$Service: java.lang.String className>;

        r0.<java.security.Provider$Service: java.lang.String lastClassName> = $r9;

     label03:
        goto label05;

     label04:
        $r41 := @caughtexception;

        r3 = $r41;

        $r42 = new java.security.NoSuchAlgorithmException;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = r0.<java.security.Provider$Service: java.lang.String type>;

        $r46 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r44 = r0.<java.security.Provider$Service: java.lang.String algorithm>;

        $r43 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r49 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" implementation not found: ");

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r42.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r47);

        throw $r42;

     label05:
        $r11 = <java.security.Provider$Service: java.util.HashMap constructorParameterClasses>;

        $r10 = r0.<java.security.Provider$Service: java.lang.String type>;

        $z0 = virtualinvoke $r11.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r10);

        if $z0 != 0 goto label07;

        if r1 != null goto label06;

        $r34 = specialinvoke r0.<java.security.Provider$Service: java.lang.Object newInstanceNoParameter()>();

        return $r34;

     label06:
        $r36 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r33 = specialinvoke r0.<java.security.Provider$Service: java.lang.Object newInstanceWithParameter(java.lang.Object,java.lang.Class)>(r1, $r36);

        return $r33;

     label07:
        if r1 != null goto label08;

        $r35 = specialinvoke r0.<java.security.Provider$Service: java.lang.Object newInstanceNoParameter()>();

        return $r35;

     label08:
        $r13 = <java.security.Provider$Service: java.util.HashMap constructorParameterClasses>;

        $r12 = r0.<java.security.Provider$Service: java.lang.String type>;

        $r15 = virtualinvoke $r13.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r12);

        r50 = (java.lang.Class) $r15;

        if r50 != null goto label09;

        $r28 = new java.lang.IllegalArgumentException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Constructor parameter not supported for ");

        $r32 = r0.<java.security.Provider$Service: java.lang.String type>;

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r30);

        throw $r28;

     label09:
        $r14 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke r50.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r14);

        if $z1 != 0 goto label10;

        $r18 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expecting constructor parameter of type ");

        $r19 = virtualinvoke r50.<java.lang.Class: java.lang.String getName()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but was ");

        $r24 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r23 = virtualinvoke $r24.<java.lang.Class: java.lang.String getName()>();

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);

        throw $r18;

     label10:
        $r16 = specialinvoke r0.<java.security.Provider$Service: java.lang.Object newInstanceWithParameter(java.lang.Object,java.lang.Class)>(r1, r50);

        return $r16;

        catch java.lang.Exception from label02 to label03 with label04;
    }

    private java.lang.Object newInstanceWithParameter(java.lang.Object, java.lang.Class) throws java.security.NoSuchAlgorithmException
    {
        java.security.Provider$Service r0;
        java.lang.Object r1, $r9;
        java.lang.Class r2, $r7;
        java.lang.Class[] r3, $r5;
        java.lang.Object[] r4, $r6;
        java.lang.reflect.Constructor $r8;
        java.lang.Exception $r10, r20;
        java.security.NoSuchAlgorithmException $r11;
        java.lang.StringBuilder $r12, $r14, $r15, $r16, $r19;
        java.lang.String $r13, $r17, $r18;

        r0 := @this: java.security.Provider$Service;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Class;

     label1:
        $r5 = newarray (java.lang.Class)[1];

        $r5[0] = r2;

        r3 = $r5;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r1;

        r4 = $r6;

        $r7 = r0.<java.security.Provider$Service: java.lang.Class implementation>;

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(r3);

        $r9 = virtualinvoke $r8.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r4);

     label2:
        return $r9;

     label3:
        $r10 := @caughtexception;

        r20 = $r10;

        $r11 = new java.security.NoSuchAlgorithmException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = r0.<java.security.Provider$Service: java.lang.String type>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r17 = r0.<java.security.Provider$Service: java.lang.String algorithm>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" implementation not found");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String,java.lang.Throwable)>($r18, r20);

        throw $r11;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private java.lang.Object newInstanceNoParameter() throws java.security.NoSuchAlgorithmException
    {
        java.security.Provider$Service r0;
        java.lang.Exception r1, $r4;
        java.lang.Class $r2;
        java.lang.Object $r3;
        java.security.NoSuchAlgorithmException $r5;
        java.lang.StringBuilder $r6, $r8, $r9, $r11, $r12;
        java.lang.String $r7, $r10, $r13;

        r0 := @this: java.security.Provider$Service;

     label1:
        $r2 = r0.<java.security.Provider$Service: java.lang.Class implementation>;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.security.NoSuchAlgorithmException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = r0.<java.security.Provider$Service: java.lang.String type>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = r0.<java.security.Provider$Service: java.lang.String algorithm>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" implementation not found");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String,java.lang.Throwable)>($r13, r1);

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public boolean supportsParameter(java.lang.Object)
    {
        java.security.Provider$Service r0;
        java.lang.Object r1, $r6;
        java.lang.Boolean r2;
        java.security.Key r3;
        java.lang.String $r4, $r11, $r18, $r20;
        java.util.HashMap $r5;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Class[] $r7, $r8, $r12;
        java.lang.String[] $r9, $r10, $r14;
        java.lang.Class $r13;
        java.security.InvalidParameterException $r15, $r17;
        java.lang.StringBuilder $r16, $r19, $r21;

        r0 := @this: java.security.Provider$Service;

        r1 := @parameter0: java.lang.Object;

        $r5 = <java.security.Provider$Service: java.util.HashMap supportsParameterTypes>;

        $r4 = r0.<java.security.Provider$Service: java.lang.String type>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        r2 = (java.lang.Boolean) $r6;

        if r2 != null goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label2;

        $r17 = new java.security.InvalidParameterException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot use a parameter with ");

        $r18 = r0.<java.security.Provider$Service: java.lang.String type>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.security.InvalidParameterException: void <init>(java.lang.String)>($r20);

        throw $r17;

     label2:
        if r1 == null goto label3;

        $z3 = r1 instanceof java.security.Key;

        if $z3 != 0 goto label3;

        $r15 = new java.security.InvalidParameterException;

        specialinvoke $r15.<java.security.InvalidParameterException: void <init>(java.lang.String)>("Parameter should be of type Key");

        throw $r15;

     label3:
        specialinvoke r0.<java.security.Provider$Service: void ensureSupportedKeysInitialized()>();

        $r7 = r0.<java.security.Provider$Service: java.lang.Class[] keyClasses>;

        if $r7 != null goto label4;

        $r14 = r0.<java.security.Provider$Service: java.lang.String[] keyFormats>;

        if $r14 != null goto label4;

        return 1;

     label4:
        if r1 != null goto label5;

        return 0;

     label5:
        r3 = (java.security.Key) r1;

        $r8 = r0.<java.security.Provider$Service: java.lang.Class[] keyClasses>;

        if $r8 == null goto label6;

        $r12 = r0.<java.security.Provider$Service: java.lang.Class[] keyClasses>;

        $r13 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $z2 = staticinvoke <java.security.Provider$Service: boolean isInArray(java.lang.Class[],java.lang.Class)>($r12, $r13);

        if $z2 == 0 goto label6;

        return 1;

     label6:
        $r9 = r0.<java.security.Provider$Service: java.lang.String[] keyFormats>;

        if $r9 == null goto label7;

        $r10 = r0.<java.security.Provider$Service: java.lang.String[] keyFormats>;

        $r11 = interfaceinvoke r3.<java.security.Key: java.lang.String getFormat()>();

        $z1 = staticinvoke <java.security.Provider$Service: boolean isInArray(java.lang.Object[],java.lang.Object)>($r10, $r11);

        if $z1 == 0 goto label7;

        return 1;

     label7:
        return 0;
    }

    private void ensureSupportedKeysInitialized()
    {
        java.security.Provider$Service r0;
        java.lang.String r1, r6, r18;
        java.lang.String[] r2, r5, $r8;
        java.util.ArrayList r3, $r9;
        java.lang.ClassLoader r4;
        int i0, i1, $i2, $i3;
        java.lang.Class r7, $r11, $r15;
        boolean $z0, $z2;
        java.security.Provider $r10;
        java.lang.Class[] $r12, $r13;
        java.lang.Object[] $r14;
        java.lang.ClassNotFoundException $r16;

        r0 := @this: java.security.Provider$Service;

        $z0 = r0.<java.security.Provider$Service: boolean supportedKeysInitialized>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r1 = virtualinvoke r0.<java.security.Provider$Service: java.lang.String getAttribute(java.lang.String)>("SupportedKeyClasses");

        if r1 == null goto label8;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\|");

        $r9 = new java.util.ArrayList;

        $i2 = lengthof r2;

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i2);

        r3 = $r9;

        $r10 = virtualinvoke r0.<java.security.Provider$Service: java.security.Provider getProvider()>();

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.Class getClass()>();

        r4 = virtualinvoke $r11.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r5 = r2;

        i0 = lengthof r5;

        i1 = 0;

     label2:
        if i1 >= i0 goto label7;

        r6 = r5[i1];

     label3:
        r7 = virtualinvoke r4.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r6);

        $r15 = class "java/security/Key";

        $z2 = virtualinvoke $r15.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r7);

        if $z2 == 0 goto label4;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

     label4:
        goto label6;

     label5:
        $r16 := @caughtexception;

     label6:
        i1 = i1 + 1;

        goto label2;

     label7:
        $i3 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        $r12 = newarray (java.lang.Class)[$i3];

        $r14 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r12);

        $r13 = (java.lang.Class[]) $r14;

        r0.<java.security.Provider$Service: java.lang.Class[] keyClasses> = $r13;

     label8:
        r18 = virtualinvoke r0.<java.security.Provider$Service: java.lang.String getAttribute(java.lang.String)>("SupportedKeyFormats");

        if r18 == null goto label9;

        $r8 = virtualinvoke r18.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\|");

        r0.<java.security.Provider$Service: java.lang.String[] keyFormats> = $r8;

     label9:
        r0.<java.security.Provider$Service: boolean supportedKeysInitialized> = 1;

        return;

        catch java.lang.ClassNotFoundException from label3 to label4 with label5;
    }

    private static boolean isInArray(java.lang.Object[], java.lang.Object)
    {
        java.lang.Object[] r0, r2;
        java.lang.Object r1, r3;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        r2 = r0;

        i0 = lengthof r2;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r3 = r2[i1];

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    private static boolean isInArray(java.lang.Class[], java.lang.Class)
    {
        java.lang.Class[] r0, r2;
        java.lang.Class r1, r3;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: java.lang.Class[];

        r1 := @parameter1: java.lang.Class;

        if r1 != null goto label1;

        return 0;

     label1:
        r2 = r0;

        i0 = lengthof r2;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r3 = r2[i1];

        $z0 = virtualinvoke r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    public java.lang.String toString()
    {
        java.security.Provider$Service r0;
        java.lang.String r1, $r5, $r8, $r11, $r14, $r21, $r29;
        java.lang.StringBuilder $r2, $r3, $r6, $r7, $r9, $r10, $r12, $r13, $r15, $r17, $r19, $r20, $r23, $r24, $r25, $r27, $r28;
        java.security.Provider $r4;
        java.util.List $r16, $r26;
        java.util.Map $r18, $r22;

        r0 := @this: java.security.Provider$Service;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider ");

        $r4 = r0.<java.security.Provider$Service: java.security.Provider provider>;

        $r5 = virtualinvoke $r4.<java.security.Provider: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Service ");

        $r8 = r0.<java.security.Provider$Service: java.lang.String type>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r11 = r0.<java.security.Provider$Service: java.lang.String algorithm>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r14 = r0.<java.security.Provider$Service: java.lang.String className>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        r1 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = r0.<java.security.Provider$Service: java.util.List aliases>;

        if $r16 == null goto label1;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nAliases ");

        $r26 = r0.<java.security.Provider$Service: java.util.List aliases>;

        $r29 = virtualinvoke $r26.<java.lang.Object: java.lang.String toString()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        r1 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r18 = r0.<java.security.Provider$Service: java.util.Map attributes>;

        if $r18 == null goto label2;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nAttributes ");

        $r22 = r0.<java.security.Provider$Service: java.util.Map attributes>;

        $r21 = virtualinvoke $r22.<java.lang.Object: java.lang.String toString()>();

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        r1 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return r1;
    }

    static java.lang.String access$000(java.security.Provider$Service)
    {
        java.security.Provider$Service r0;
        java.lang.String $r1;

        r0 := @parameter0: java.security.Provider$Service;

        $r1 = r0.<java.security.Provider$Service: java.lang.String type>;

        return $r1;
    }

    static java.lang.String access$100(java.security.Provider$Service)
    {
        java.security.Provider$Service r0;
        java.lang.String $r1;

        r0 := @parameter0: java.security.Provider$Service;

        $r1 = r0.<java.security.Provider$Service: java.lang.String algorithm>;

        return $r1;
    }

    static java.util.List access$200(java.security.Provider$Service)
    {
        java.security.Provider$Service r0;
        java.util.List $r1;

        r0 := @parameter0: java.security.Provider$Service;

        $r1 = r0.<java.security.Provider$Service: java.util.List aliases>;

        return $r1;
    }

    static java.lang.String access$300(java.security.Provider$Service)
    {
        java.security.Provider$Service r0;
        java.lang.String $r1;

        r0 := @parameter0: java.security.Provider$Service;

        $r1 = r0.<java.security.Provider$Service: java.lang.String className>;

        return $r1;
    }

    static java.util.Map access$400(java.security.Provider$Service)
    {
        java.security.Provider$Service r0;
        java.util.Map $r1;

        r0 := @parameter0: java.security.Provider$Service;

        $r1 = r0.<java.security.Provider$Service: java.util.Map attributes>;

        return $r1;
    }

    static java.lang.String access$302(java.security.Provider$Service, java.lang.String)
    {
        java.security.Provider$Service r0;
        java.lang.String r1;

        r0 := @parameter0: java.security.Provider$Service;

        r1 := @parameter1: java.lang.String;

        r0.<java.security.Provider$Service: java.lang.String className> = r1;

        return r1;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0, $r1, $r4, $r7, $r10, $r12, $r15, $r18, $r21, $r26, $r29, $r32, $r35, $r37, $r40, $r43, $r46, $r49, $r52, $r55, $r58, $r63, $r64, $r66, $r68, $r70, $r72, $r74, $r75, $r77, $r79, $r81, $r83, $r85, $r87, $r89, $r92, $r94, $r96, $r98, $r100, $r102;
        java.lang.Boolean $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r24, $r27, $r30, $r33, $r36, $r39, $r42, $r45, $r50, $r53, $r56, $r59;
        java.lang.Class $r61;

        <java.security.Provider$Service: java.lang.String ATTR_SUPPORTED_KEY_FORMATS> = "SupportedKeyFormats";

        <java.security.Provider$Service: java.lang.String ATTR_SUPPORTED_KEY_CLASSES> = "SupportedKeyClasses";

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <java.security.Provider$Service: java.util.HashMap supportsParameterTypes> = $r0;

        $r1 = <java.security.Provider$Service: java.util.HashMap supportsParameterTypes>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("AlgorithmParameterGenerator", $r2);

        $r4 = <java.security.Provider$Service: java.util.HashMap supportsParameterTypes>;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("AlgorithmParameters", $r5);

        $r7 = <java.security.Provider$Service: java.util.HashMap supportsParameterTypes>;

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CertificateFactory", $r8);

        $r10 = <java.security.Provider$Service: java.util.HashMap supportsParameterTypes>;

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CertPathBuilder", $r11);

        $r12 = <java.security.Provider$Service: java.util.HashMap supportsParameterTypes>;

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CertPathValidator", $r14);

        $r15 = <java.security.Provider$Service: java.util.HashMap supportsParameterTypes>;

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CertStore", $r17);

        $r18 = <java.security.Provider$Service: java.util.HashMap supportsParameterTypes>;

        $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyFactory", $r20);

        $r21 = <java.security.Provider$Service: java.util.HashMap supportsParameterTypes>;

        $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r21.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyGenerator", $r23);

        $r26 = <java.security.Provider$Service: java.util.HashMap supportsParameterTypes>;

        $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r26.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyManagerFactory", $r24);

        $r29 = <java.security.Provider$Service: java.util.HashMap supportsParameterTypes>;

        $r27 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r29.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyPairGenerator", $r27);

        $r32 = <java.security.Provider$Service: java.util.HashMap supportsParameterTypes>;

        $r30 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r32.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyStore", $r30);

        $r35 = <java.security.Provider$Service: java.util.HashMap supportsParameterTypes>;

        $r33 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r35.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("MessageDigest", $r33);

        $r37 = <java.security.Provider$Service: java.util.HashMap supportsParameterTypes>;

        $r36 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r37.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("SecretKeyFactory", $r36);

        $r40 = <java.security.Provider$Service: java.util.HashMap supportsParameterTypes>;

        $r39 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r40.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("SecureRandom", $r39);

        $r43 = <java.security.Provider$Service: java.util.HashMap supportsParameterTypes>;

        $r42 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r43.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("SSLContext", $r42);

        $r46 = <java.security.Provider$Service: java.util.HashMap supportsParameterTypes>;

        $r45 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r46.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("TrustManagerFactory", $r45);

        $r52 = <java.security.Provider$Service: java.util.HashMap supportsParameterTypes>;

        $r53 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r52.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Cipher", $r53);

        $r49 = <java.security.Provider$Service: java.util.HashMap supportsParameterTypes>;

        $r50 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r49.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyAgreement", $r50);

        $r58 = <java.security.Provider$Service: java.util.HashMap supportsParameterTypes>;

        $r59 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r58.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Mac", $r59);

        $r55 = <java.security.Provider$Service: java.util.HashMap supportsParameterTypes>;

        $r56 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r55.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Signature", $r56);

        $r64 = new java.util.HashMap;

        specialinvoke $r64.<java.util.HashMap: void <init>()>();

        <java.security.Provider$Service: java.util.HashMap constructorParameterClasses> = $r64;

        $r66 = <java.security.Provider$Service: java.util.HashMap constructorParameterClasses>;

        $r61 = staticinvoke <java.security.Provider$Service: java.lang.Class loadClassOrThrow(java.lang.String)>("java.security.cert.CertStoreParameters");

        virtualinvoke $r66.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CertStore", $r61);

        $r63 = <java.security.Provider$Service: java.util.HashMap constructorParameterClasses>;

        virtualinvoke $r63.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("AlgorithmParameterGenerator", null);

        $r72 = <java.security.Provider$Service: java.util.HashMap constructorParameterClasses>;

        virtualinvoke $r72.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("AlgorithmParameters", null);

        $r74 = <java.security.Provider$Service: java.util.HashMap constructorParameterClasses>;

        virtualinvoke $r74.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CertificateFactory", null);

        $r68 = <java.security.Provider$Service: java.util.HashMap constructorParameterClasses>;

        virtualinvoke $r68.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CertPathBuilder", null);

        $r70 = <java.security.Provider$Service: java.util.HashMap constructorParameterClasses>;

        virtualinvoke $r70.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CertPathValidator", null);

        $r81 = <java.security.Provider$Service: java.util.HashMap constructorParameterClasses>;

        virtualinvoke $r81.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyFactory", null);

        $r79 = <java.security.Provider$Service: java.util.HashMap constructorParameterClasses>;

        virtualinvoke $r79.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyGenerator", null);

        $r77 = <java.security.Provider$Service: java.util.HashMap constructorParameterClasses>;

        virtualinvoke $r77.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyManagerFactory", null);

        $r75 = <java.security.Provider$Service: java.util.HashMap constructorParameterClasses>;

        virtualinvoke $r75.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyPairGenerator", null);

        $r89 = <java.security.Provider$Service: java.util.HashMap constructorParameterClasses>;

        virtualinvoke $r89.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyStore", null);

        $r87 = <java.security.Provider$Service: java.util.HashMap constructorParameterClasses>;

        virtualinvoke $r87.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("MessageDigest", null);

        $r85 = <java.security.Provider$Service: java.util.HashMap constructorParameterClasses>;

        virtualinvoke $r85.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("SecretKeyFactory", null);

        $r83 = <java.security.Provider$Service: java.util.HashMap constructorParameterClasses>;

        virtualinvoke $r83.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("SecureRandom", null);

        $r98 = <java.security.Provider$Service: java.util.HashMap constructorParameterClasses>;

        virtualinvoke $r98.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("SSLContext", null);

        $r96 = <java.security.Provider$Service: java.util.HashMap constructorParameterClasses>;

        virtualinvoke $r96.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("TrustManagerFactory", null);

        $r94 = <java.security.Provider$Service: java.util.HashMap constructorParameterClasses>;

        virtualinvoke $r94.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Cipher", null);

        $r92 = <java.security.Provider$Service: java.util.HashMap constructorParameterClasses>;

        virtualinvoke $r92.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("KeyAgreement", null);

        $r102 = <java.security.Provider$Service: java.util.HashMap constructorParameterClasses>;

        virtualinvoke $r102.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Mac", null);

        $r100 = <java.security.Provider$Service: java.util.HashMap constructorParameterClasses>;

        virtualinvoke $r100.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Signature", null);

        return;
    }
}
