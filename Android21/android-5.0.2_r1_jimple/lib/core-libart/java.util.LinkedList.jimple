public class java.util.LinkedList extends java.util.AbstractSequentialList implements java.util.List, java.util.Deque, java.util.Queue, java.lang.Cloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    transient int size;
    transient java.util.LinkedList$Link voidLink;

    public void <init>()
    {
        java.util.LinkedList r0;
        java.util.LinkedList$Link $r1, $r2, $r3, $r4, $r5;

        r0 := @this: java.util.LinkedList;

        specialinvoke r0.<java.util.AbstractSequentialList: void <init>()>();

        r0.<java.util.LinkedList: int size> = 0;

        $r1 = new java.util.LinkedList$Link;

        specialinvoke $r1.<java.util.LinkedList$Link: void <init>(java.lang.Object,java.util.LinkedList$Link,java.util.LinkedList$Link)>(null, null, null);

        r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink> = $r1;

        $r3 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        $r2 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        $r3.<java.util.LinkedList$Link: java.util.LinkedList$Link previous> = $r2;

        $r5 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        $r4 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        $r5.<java.util.LinkedList$Link: java.util.LinkedList$Link next> = $r4;

        return;
    }

    public void <init>(java.util.Collection)
    {
        java.util.LinkedList r0;
        java.util.Collection r1;

        r0 := @this: java.util.LinkedList;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<java.util.LinkedList: void <init>()>();

        virtualinvoke r0.<java.util.LinkedList: boolean addAll(java.util.Collection)>(r1);

        return;
    }

    public void add(int, java.lang.Object)
    {
        java.util.LinkedList r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        java.lang.Object r1;
        java.util.LinkedList$Link r2, r3, $r5, r6;
        java.lang.IndexOutOfBoundsException $r4;

        r0 := @this: java.util.LinkedList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        if i0 < 0 goto label6;

        $i2 = r0.<java.util.LinkedList: int size>;

        if i0 > $i2 goto label6;

        r2 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        $i3 = r0.<java.util.LinkedList: int size>;

        $i4 = $i3 / 2;

        if i0 >= $i4 goto label3;

        i1 = 0;

     label1:
        if i1 > i0 goto label2;

        r2 = r2.<java.util.LinkedList$Link: java.util.LinkedList$Link next>;

        i1 = i1 + 1;

        goto label1;

     label2:
        goto label5;

     label3:
        i9 = r0.<java.util.LinkedList: int size>;

     label4:
        if i9 <= i0 goto label5;

        r2 = r2.<java.util.LinkedList$Link: java.util.LinkedList$Link previous>;

        i9 = i9 + -1;

        goto label4;

     label5:
        r6 = r2.<java.util.LinkedList$Link: java.util.LinkedList$Link previous>;

        $r5 = new java.util.LinkedList$Link;

        specialinvoke $r5.<java.util.LinkedList$Link: void <init>(java.lang.Object,java.util.LinkedList$Link,java.util.LinkedList$Link)>(r1, r6, r2);

        r3 = $r5;

        r6.<java.util.LinkedList$Link: java.util.LinkedList$Link next> = r3;

        r2.<java.util.LinkedList$Link: java.util.LinkedList$Link previous> = r3;

        $i5 = r0.<java.util.LinkedList: int size>;

        $i6 = $i5 + 1;

        r0.<java.util.LinkedList: int size> = $i6;

        $i7 = r0.<java.util.LinkedList: int modCount>;

        $i8 = $i7 + 1;

        r0.<java.util.LinkedList: int modCount> = $i8;

        goto label7;

     label6:
        $r4 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r4;

     label7:
        return;
    }

    public boolean add(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: java.util.LinkedList;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.util.LinkedList: boolean addLastImpl(java.lang.Object)>(r1);

        return $z0;
    }

    private boolean addLastImpl(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1;
        java.util.LinkedList$Link r2, r3, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3;

        r0 := @this: java.util.LinkedList;

        r1 := @parameter0: java.lang.Object;

        $r4 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        r2 = $r4.<java.util.LinkedList$Link: java.util.LinkedList$Link previous>;

        $r5 = new java.util.LinkedList$Link;

        $r6 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        specialinvoke $r5.<java.util.LinkedList$Link: void <init>(java.lang.Object,java.util.LinkedList$Link,java.util.LinkedList$Link)>(r1, r2, $r6);

        r3 = $r5;

        $r7 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        $r7.<java.util.LinkedList$Link: java.util.LinkedList$Link previous> = r3;

        r2.<java.util.LinkedList$Link: java.util.LinkedList$Link next> = r3;

        $i0 = r0.<java.util.LinkedList: int size>;

        $i1 = $i0 + 1;

        r0.<java.util.LinkedList: int size> = $i1;

        $i2 = r0.<java.util.LinkedList: int modCount>;

        $i3 = $i2 + 1;

        r0.<java.util.LinkedList: int modCount> = $i3;

        return 1;
    }

    public boolean addAll(int, java.util.Collection)
    {
        java.util.LinkedList r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        java.util.Collection r1, r2, $r8;
        java.util.LinkedList$Link r3, r6, r10, r13;
        java.util.Iterator r4;
        java.lang.Object r5;
        boolean $z0;
        java.lang.IndexOutOfBoundsException r11;
        java.util.ArrayList r12;

        r0 := @this: java.util.LinkedList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Collection;

        if i0 < 0 goto label01;

        $i3 = r0.<java.util.LinkedList: int size>;

        if i0 <= $i3 goto label02;

     label01:
        r11 = new java.lang.IndexOutOfBoundsException;

        specialinvoke r11.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw r11;

     label02:
        i1 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if i1 != 0 goto label03;

        return 0;

     label03:
        if r1 != r0 goto label04;

        r12 = new java.util.ArrayList;

        $r8 = r12;

        specialinvoke r12.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        goto label05;

     label04:
        $r8 = r1;

     label05:
        r2 = $r8;

        r3 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        $i4 = r0.<java.util.LinkedList: int size>;

        $i5 = $i4 / 2;

        if i0 >= $i5 goto label08;

        i2 = 0;

     label06:
        if i2 >= i0 goto label07;

        r3 = r3.<java.util.LinkedList$Link: java.util.LinkedList$Link next>;

        i2 = i2 + 1;

        goto label06;

     label07:
        goto label10;

     label08:
        i10 = r0.<java.util.LinkedList: int size>;

     label09:
        if i10 < i0 goto label10;

        r3 = r3.<java.util.LinkedList$Link: java.util.LinkedList$Link previous>;

        i10 = i10 + -1;

        goto label09;

     label10:
        r10 = r3.<java.util.LinkedList$Link: java.util.LinkedList$Link next>;

        r4 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label11:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r13 = new java.util.LinkedList$Link;

        specialinvoke r13.<java.util.LinkedList$Link: void <init>(java.lang.Object,java.util.LinkedList$Link,java.util.LinkedList$Link)>(r5, r3, null);

        r6 = r13;

        r3.<java.util.LinkedList$Link: java.util.LinkedList$Link next> = r6;

        r3 = r6;

        goto label11;

     label12:
        r3.<java.util.LinkedList$Link: java.util.LinkedList$Link next> = r10;

        r10.<java.util.LinkedList$Link: java.util.LinkedList$Link previous> = r3;

        $i6 = r0.<java.util.LinkedList: int size>;

        $i8 = $i6 + i1;

        r0.<java.util.LinkedList: int size> = $i8;

        $i7 = r0.<java.util.LinkedList: int modCount>;

        $i9 = $i7 + 1;

        r0.<java.util.LinkedList: int modCount> = $i9;

        return 1;
    }

    public boolean addAll(java.util.Collection)
    {
        java.util.LinkedList r0;
        java.util.Collection r1, r2, $r11;
        int i0, $i1, $i2, $i3, $i4;
        java.util.LinkedList$Link r3, r6, $r7, $r8, $r9, r13;
        java.util.Iterator r4;
        java.lang.Object r5;
        boolean $z0;
        java.util.ArrayList r12;

        r0 := @this: java.util.LinkedList;

        r1 := @parameter0: java.util.Collection;

        i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if i0 != 0 goto label1;

        return 0;

     label1:
        if r1 != r0 goto label2;

        r12 = new java.util.ArrayList;

        $r11 = r12;

        specialinvoke r12.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        goto label3;

     label2:
        $r11 = r1;

     label3:
        r2 = $r11;

        $r7 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        r3 = $r7.<java.util.LinkedList$Link: java.util.LinkedList$Link previous>;

        r4 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r13 = new java.util.LinkedList$Link;

        specialinvoke r13.<java.util.LinkedList$Link: void <init>(java.lang.Object,java.util.LinkedList$Link,java.util.LinkedList$Link)>(r5, r3, null);

        r6 = r13;

        r3.<java.util.LinkedList$Link: java.util.LinkedList$Link next> = r6;

        r3 = r6;

        goto label4;

     label5:
        $r8 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        r3.<java.util.LinkedList$Link: java.util.LinkedList$Link next> = $r8;

        $r9 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        $r9.<java.util.LinkedList$Link: java.util.LinkedList$Link previous> = r3;

        $i1 = r0.<java.util.LinkedList: int size>;

        $i2 = $i1 + i0;

        r0.<java.util.LinkedList: int size> = $i2;

        $i4 = r0.<java.util.LinkedList: int modCount>;

        $i3 = $i4 + 1;

        r0.<java.util.LinkedList: int modCount> = $i3;

        return 1;
    }

    public void addFirst(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1;

        r0 := @this: java.util.LinkedList;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.util.LinkedList: boolean addFirstImpl(java.lang.Object)>(r1);

        return;
    }

    private boolean addFirstImpl(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1;
        java.util.LinkedList$Link r2, r3, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3;

        r0 := @this: java.util.LinkedList;

        r1 := @parameter0: java.lang.Object;

        $r4 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        r2 = $r4.<java.util.LinkedList$Link: java.util.LinkedList$Link next>;

        $r5 = new java.util.LinkedList$Link;

        $r6 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        specialinvoke $r5.<java.util.LinkedList$Link: void <init>(java.lang.Object,java.util.LinkedList$Link,java.util.LinkedList$Link)>(r1, $r6, r2);

        r3 = $r5;

        $r7 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        $r7.<java.util.LinkedList$Link: java.util.LinkedList$Link next> = r3;

        r2.<java.util.LinkedList$Link: java.util.LinkedList$Link previous> = r3;

        $i0 = r0.<java.util.LinkedList: int size>;

        $i1 = $i0 + 1;

        r0.<java.util.LinkedList: int size> = $i1;

        $i2 = r0.<java.util.LinkedList: int modCount>;

        $i3 = $i2 + 1;

        r0.<java.util.LinkedList: int modCount> = $i3;

        return 1;
    }

    public void addLast(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1;

        r0 := @this: java.util.LinkedList;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.util.LinkedList: boolean addLastImpl(java.lang.Object)>(r1);

        return;
    }

    public void clear()
    {
        java.util.LinkedList r0;
        int $i0, $i1, $i2;
        java.util.LinkedList$Link $r1, $r2, $r3, $r4;

        r0 := @this: java.util.LinkedList;

        $i0 = r0.<java.util.LinkedList: int size>;

        if $i0 <= 0 goto label1;

        r0.<java.util.LinkedList: int size> = 0;

        $r2 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        $r1 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        $r2.<java.util.LinkedList$Link: java.util.LinkedList$Link next> = $r1;

        $r4 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        $r3 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        $r4.<java.util.LinkedList$Link: java.util.LinkedList$Link previous> = $r3;

        $i1 = r0.<java.util.LinkedList: int modCount>;

        $i2 = $i1 + 1;

        r0.<java.util.LinkedList: int modCount> = $i2;

     label1:
        return;
    }

    public java.lang.Object clone()
    {
        java.util.LinkedList r0, r1;
        java.lang.Object $r2;
        java.util.LinkedList$Link $r3, $r4, $r5, $r6, $r7;
        java.lang.CloneNotSupportedException $r8, r10;
        java.lang.AssertionError $r9;

        r0 := @this: java.util.LinkedList;

     label1:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r1 = (java.util.LinkedList) $r2;

        r1.<java.util.LinkedList: int size> = 0;

        $r3 = new java.util.LinkedList$Link;

        specialinvoke $r3.<java.util.LinkedList$Link: void <init>(java.lang.Object,java.util.LinkedList$Link,java.util.LinkedList$Link)>(null, null, null);

        r1.<java.util.LinkedList: java.util.LinkedList$Link voidLink> = $r3;

        $r5 = r1.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        $r4 = r1.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        $r5.<java.util.LinkedList$Link: java.util.LinkedList$Link previous> = $r4;

        $r7 = r1.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        $r6 = r1.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        $r7.<java.util.LinkedList$Link: java.util.LinkedList$Link next> = $r6;

        virtualinvoke r1.<java.util.LinkedList: boolean addAll(java.util.Collection)>(r0);

     label2:
        return r1;

     label3:
        $r8 := @caughtexception;

        r10 = $r8;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>(java.lang.Object)>(r10);

        throw $r9;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1, $r5, $r7;
        java.util.LinkedList$Link r2, $r3, $r4, $r6;
        boolean $z0;

        r0 := @this: java.util.LinkedList;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        r2 = $r3.<java.util.LinkedList$Link: java.util.LinkedList$Link next>;

        if r1 == null goto label3;

     label1:
        $r6 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        if r2 == $r6 goto label5;

        $r7 = r2.<java.util.LinkedList$Link: java.lang.Object data>;

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        r2 = r2.<java.util.LinkedList$Link: java.util.LinkedList$Link next>;

        goto label1;

     label3:
        $r4 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        if r2 == $r4 goto label5;

        $r5 = r2.<java.util.LinkedList$Link: java.lang.Object data>;

        if $r5 != null goto label4;

        return 1;

     label4:
        r2 = r2.<java.util.LinkedList$Link: java.util.LinkedList$Link next>;

        goto label3;

     label5:
        return 0;
    }

    public java.lang.Object get(int)
    {
        java.util.LinkedList r0;
        int i0, i1, $i2, $i3, $i4, i5;
        java.util.LinkedList$Link r1;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.Object $r3;

        r0 := @this: java.util.LinkedList;

        i0 := @parameter0: int;

        if i0 < 0 goto label6;

        $i2 = r0.<java.util.LinkedList: int size>;

        if i0 >= $i2 goto label6;

        r1 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        $i3 = r0.<java.util.LinkedList: int size>;

        $i4 = $i3 / 2;

        if i0 >= $i4 goto label3;

        i1 = 0;

     label1:
        if i1 > i0 goto label2;

        r1 = r1.<java.util.LinkedList$Link: java.util.LinkedList$Link next>;

        i1 = i1 + 1;

        goto label1;

     label2:
        goto label5;

     label3:
        i5 = r0.<java.util.LinkedList: int size>;

     label4:
        if i5 <= i0 goto label5;

        r1 = r1.<java.util.LinkedList$Link: java.util.LinkedList$Link previous>;

        i5 = i5 + -1;

        goto label4;

     label5:
        $r3 = r1.<java.util.LinkedList$Link: java.lang.Object data>;

        return $r3;

     label6:
        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r2;
    }

    public java.lang.Object getFirst()
    {
        java.util.LinkedList r0;
        java.lang.Object $r1;

        r0 := @this: java.util.LinkedList;

        $r1 = specialinvoke r0.<java.util.LinkedList: java.lang.Object getFirstImpl()>();

        return $r1;
    }

    private java.lang.Object getFirstImpl()
    {
        java.util.LinkedList r0;
        java.util.LinkedList$Link r1, $r2, $r3;
        java.util.NoSuchElementException $r4;
        java.lang.Object $r5;

        r0 := @this: java.util.LinkedList;

        $r2 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        r1 = $r2.<java.util.LinkedList$Link: java.util.LinkedList$Link next>;

        $r3 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        if r1 == $r3 goto label1;

        $r5 = r1.<java.util.LinkedList$Link: java.lang.Object data>;

        return $r5;

     label1:
        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();

        throw $r4;
    }

    public java.lang.Object getLast()
    {
        java.util.LinkedList r0;
        java.util.LinkedList$Link r1, $r2, $r3;
        java.util.NoSuchElementException $r4;
        java.lang.Object $r5;

        r0 := @this: java.util.LinkedList;

        $r2 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        r1 = $r2.<java.util.LinkedList$Link: java.util.LinkedList$Link previous>;

        $r3 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        if r1 == $r3 goto label1;

        $r5 = r1.<java.util.LinkedList$Link: java.lang.Object data>;

        return $r5;

     label1:
        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();

        throw $r4;
    }

    public int indexOf(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1, $r5, $r7;
        int i0;
        java.util.LinkedList$Link r2, $r3, $r4, $r6;
        boolean $z0;

        r0 := @this: java.util.LinkedList;

        r1 := @parameter0: java.lang.Object;

        i0 = 0;

        $r3 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        r2 = $r3.<java.util.LinkedList$Link: java.util.LinkedList$Link next>;

        if r1 == null goto label3;

     label1:
        $r6 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        if r2 == $r6 goto label5;

        $r7 = r2.<java.util.LinkedList$Link: java.lang.Object data>;

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

        return i0;

     label2:
        r2 = r2.<java.util.LinkedList$Link: java.util.LinkedList$Link next>;

        i0 = i0 + 1;

        goto label1;

     label3:
        $r4 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        if r2 == $r4 goto label5;

        $r5 = r2.<java.util.LinkedList$Link: java.lang.Object data>;

        if $r5 != null goto label4;

        return i0;

     label4:
        r2 = r2.<java.util.LinkedList$Link: java.util.LinkedList$Link next>;

        i0 = i0 + 1;

        goto label3;

     label5:
        return -1;
    }

    public int lastIndexOf(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1, $r5, $r7;
        int i0;
        java.util.LinkedList$Link r2, $r3, $r4, $r6;
        boolean $z0;

        r0 := @this: java.util.LinkedList;

        r1 := @parameter0: java.lang.Object;

        i0 = r0.<java.util.LinkedList: int size>;

        $r3 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        r2 = $r3.<java.util.LinkedList$Link: java.util.LinkedList$Link previous>;

        if r1 == null goto label3;

     label1:
        $r6 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        if r2 == $r6 goto label5;

        i0 = i0 + -1;

        $r7 = r2.<java.util.LinkedList$Link: java.lang.Object data>;

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

        return i0;

     label2:
        r2 = r2.<java.util.LinkedList$Link: java.util.LinkedList$Link previous>;

        goto label1;

     label3:
        $r4 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        if r2 == $r4 goto label5;

        i0 = i0 + -1;

        $r5 = r2.<java.util.LinkedList$Link: java.lang.Object data>;

        if $r5 != null goto label4;

        return i0;

     label4:
        r2 = r2.<java.util.LinkedList$Link: java.util.LinkedList$Link previous>;

        goto label3;

     label5:
        return -1;
    }

    public java.util.ListIterator listIterator(int)
    {
        java.util.LinkedList r0;
        int i0;
        java.util.LinkedList$LinkIterator $r1;

        r0 := @this: java.util.LinkedList;

        i0 := @parameter0: int;

        $r1 = new java.util.LinkedList$LinkIterator;

        specialinvoke $r1.<java.util.LinkedList$LinkIterator: void <init>(java.util.LinkedList,int)>(r0, i0);

        return $r1;
    }

    public java.lang.Object remove(int)
    {
        java.util.LinkedList r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        java.util.LinkedList$Link r1, r2, r5;
        java.lang.IndexOutOfBoundsException $r3;
        java.lang.Object $r4;

        r0 := @this: java.util.LinkedList;

        i0 := @parameter0: int;

        if i0 < 0 goto label6;

        $i2 = r0.<java.util.LinkedList: int size>;

        if i0 >= $i2 goto label6;

        r1 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        $i3 = r0.<java.util.LinkedList: int size>;

        $i4 = $i3 / 2;

        if i0 >= $i4 goto label3;

        i1 = 0;

     label1:
        if i1 > i0 goto label2;

        r1 = r1.<java.util.LinkedList$Link: java.util.LinkedList$Link next>;

        i1 = i1 + 1;

        goto label1;

     label2:
        goto label5;

     label3:
        i9 = r0.<java.util.LinkedList: int size>;

     label4:
        if i9 <= i0 goto label5;

        r1 = r1.<java.util.LinkedList$Link: java.util.LinkedList$Link previous>;

        i9 = i9 + -1;

        goto label4;

     label5:
        r5 = r1.<java.util.LinkedList$Link: java.util.LinkedList$Link previous>;

        r2 = r1.<java.util.LinkedList$Link: java.util.LinkedList$Link next>;

        r5.<java.util.LinkedList$Link: java.util.LinkedList$Link next> = r2;

        r2.<java.util.LinkedList$Link: java.util.LinkedList$Link previous> = r5;

        $i5 = r0.<java.util.LinkedList: int size>;

        $i6 = $i5 - 1;

        r0.<java.util.LinkedList: int size> = $i6;

        $i7 = r0.<java.util.LinkedList: int modCount>;

        $i8 = $i7 + 1;

        r0.<java.util.LinkedList: int modCount> = $i8;

        $r4 = r1.<java.util.LinkedList$Link: java.lang.Object data>;

        return $r4;

     label6:
        $r3 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r3;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: java.util.LinkedList;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.util.LinkedList: boolean removeFirstOccurrenceImpl(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.Object removeFirst()
    {
        java.util.LinkedList r0;
        java.lang.Object $r1;

        r0 := @this: java.util.LinkedList;

        $r1 = specialinvoke r0.<java.util.LinkedList: java.lang.Object removeFirstImpl()>();

        return $r1;
    }

    private java.lang.Object removeFirstImpl()
    {
        java.util.LinkedList r0;
        java.util.LinkedList$Link r1, r2, $r3, $r4, $r6, $r7;
        java.util.NoSuchElementException $r5;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r8;

        r0 := @this: java.util.LinkedList;

        $r3 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        r1 = $r3.<java.util.LinkedList$Link: java.util.LinkedList$Link next>;

        $r4 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        if r1 == $r4 goto label1;

        r2 = r1.<java.util.LinkedList$Link: java.util.LinkedList$Link next>;

        $r6 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        $r6.<java.util.LinkedList$Link: java.util.LinkedList$Link next> = r2;

        $r7 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        r2.<java.util.LinkedList$Link: java.util.LinkedList$Link previous> = $r7;

        $i0 = r0.<java.util.LinkedList: int size>;

        $i1 = $i0 - 1;

        r0.<java.util.LinkedList: int size> = $i1;

        $i2 = r0.<java.util.LinkedList: int modCount>;

        $i3 = $i2 + 1;

        r0.<java.util.LinkedList: int modCount> = $i3;

        $r8 = r1.<java.util.LinkedList$Link: java.lang.Object data>;

        return $r8;

     label1:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        throw $r5;
    }

    public java.lang.Object removeLast()
    {
        java.util.LinkedList r0;
        java.lang.Object $r1;

        r0 := @this: java.util.LinkedList;

        $r1 = specialinvoke r0.<java.util.LinkedList: java.lang.Object removeLastImpl()>();

        return $r1;
    }

    private java.lang.Object removeLastImpl()
    {
        java.util.LinkedList r0;
        java.util.LinkedList$Link r1, r2, $r3, $r4, $r6, $r7;
        java.util.NoSuchElementException $r5;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r8;

        r0 := @this: java.util.LinkedList;

        $r3 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        r1 = $r3.<java.util.LinkedList$Link: java.util.LinkedList$Link previous>;

        $r4 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        if r1 == $r4 goto label1;

        r2 = r1.<java.util.LinkedList$Link: java.util.LinkedList$Link previous>;

        $r6 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        $r6.<java.util.LinkedList$Link: java.util.LinkedList$Link previous> = r2;

        $r7 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        r2.<java.util.LinkedList$Link: java.util.LinkedList$Link next> = $r7;

        $i0 = r0.<java.util.LinkedList: int size>;

        $i1 = $i0 - 1;

        r0.<java.util.LinkedList: int size> = $i1;

        $i2 = r0.<java.util.LinkedList: int modCount>;

        $i3 = $i2 + 1;

        r0.<java.util.LinkedList: int modCount> = $i3;

        $r8 = r1.<java.util.LinkedList$Link: java.lang.Object data>;

        return $r8;

     label1:
        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        throw $r5;
    }

    public java.util.Iterator descendingIterator()
    {
        java.util.LinkedList r0;
        java.util.LinkedList$ReverseLinkIterator $r1;

        r0 := @this: java.util.LinkedList;

        $r1 = new java.util.LinkedList$ReverseLinkIterator;

        specialinvoke $r1.<java.util.LinkedList$ReverseLinkIterator: void <init>(java.util.LinkedList,java.util.LinkedList)>(r0, r0);

        return $r1;
    }

    public boolean offerFirst(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: java.util.LinkedList;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.util.LinkedList: boolean addFirstImpl(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean offerLast(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: java.util.LinkedList;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.util.LinkedList: boolean addLastImpl(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.Object peekFirst()
    {
        java.util.LinkedList r0;
        java.lang.Object $r1;

        r0 := @this: java.util.LinkedList;

        $r1 = specialinvoke r0.<java.util.LinkedList: java.lang.Object peekFirstImpl()>();

        return $r1;
    }

    public java.lang.Object peekLast()
    {
        java.util.LinkedList r0;
        java.util.LinkedList$Link r1, $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: java.util.LinkedList;

        $r2 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        r1 = $r2.<java.util.LinkedList$Link: java.util.LinkedList$Link previous>;

        $r3 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        if r1 != $r3 goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r4 = r1.<java.util.LinkedList$Link: java.lang.Object data>;

     label2:
        return $r4;
    }

    public java.lang.Object pollFirst()
    {
        java.util.LinkedList r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: java.util.LinkedList;

        $i0 = r0.<java.util.LinkedList: int size>;

        if $i0 != 0 goto label1;

        $r1 = null;

        goto label2;

     label1:
        $r1 = specialinvoke r0.<java.util.LinkedList: java.lang.Object removeFirstImpl()>();

     label2:
        return $r1;
    }

    public java.lang.Object pollLast()
    {
        java.util.LinkedList r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: java.util.LinkedList;

        $i0 = r0.<java.util.LinkedList: int size>;

        if $i0 != 0 goto label1;

        $r1 = null;

        goto label2;

     label1:
        $r1 = specialinvoke r0.<java.util.LinkedList: java.lang.Object removeLastImpl()>();

     label2:
        return $r1;
    }

    public java.lang.Object pop()
    {
        java.util.LinkedList r0;
        java.lang.Object $r1;

        r0 := @this: java.util.LinkedList;

        $r1 = specialinvoke r0.<java.util.LinkedList: java.lang.Object removeFirstImpl()>();

        return $r1;
    }

    public void push(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1;

        r0 := @this: java.util.LinkedList;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.util.LinkedList: boolean addFirstImpl(java.lang.Object)>(r1);

        return;
    }

    public boolean removeFirstOccurrence(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: java.util.LinkedList;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.util.LinkedList: boolean removeFirstOccurrenceImpl(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean removeLastOccurrence(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1;
        java.util.LinkedList$ReverseLinkIterator r2, $r3;
        boolean $z0;

        r0 := @this: java.util.LinkedList;

        r1 := @parameter0: java.lang.Object;

        $r3 = new java.util.LinkedList$ReverseLinkIterator;

        specialinvoke $r3.<java.util.LinkedList$ReverseLinkIterator: void <init>(java.util.LinkedList,java.util.LinkedList)>(r0, r0);

        r2 = $r3;

        $z0 = specialinvoke r0.<java.util.LinkedList: boolean removeOneOccurrence(java.lang.Object,java.util.Iterator)>(r1, r2);

        return $z0;
    }

    private boolean removeFirstOccurrenceImpl(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1;
        java.util.LinkedList$LinkIterator r2, $r3;
        boolean $z0;

        r0 := @this: java.util.LinkedList;

        r1 := @parameter0: java.lang.Object;

        $r3 = new java.util.LinkedList$LinkIterator;

        specialinvoke $r3.<java.util.LinkedList$LinkIterator: void <init>(java.util.LinkedList,int)>(r0, 0);

        r2 = $r3;

        $z0 = specialinvoke r0.<java.util.LinkedList: boolean removeOneOccurrence(java.lang.Object,java.util.Iterator)>(r1, r2);

        return $z0;
    }

    private boolean removeOneOccurrence(java.lang.Object, java.util.Iterator)
    {
        java.util.LinkedList r0;
        java.lang.Object r1, r3;
        java.util.Iterator r2;
        boolean $z0, $z1;

        r0 := @this: java.util.LinkedList;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.util.Iterator;

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        if r1 != null goto label2;

        if r3 != null goto label4;

        goto label3;

     label2:
        $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label4;

     label3:
        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        return 1;

     label4:
        goto label1;

     label5:
        return 0;
    }

    public java.lang.Object set(int, java.lang.Object)
    {
        java.util.LinkedList r0;
        int i0, i1, $i2, $i3, $i4, i5;
        java.lang.Object r1, r4;
        java.util.LinkedList$Link r2;
        java.lang.IndexOutOfBoundsException $r3;

        r0 := @this: java.util.LinkedList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        if i0 < 0 goto label6;

        $i2 = r0.<java.util.LinkedList: int size>;

        if i0 >= $i2 goto label6;

        r2 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        $i3 = r0.<java.util.LinkedList: int size>;

        $i4 = $i3 / 2;

        if i0 >= $i4 goto label3;

        i1 = 0;

     label1:
        if i1 > i0 goto label2;

        r2 = r2.<java.util.LinkedList$Link: java.util.LinkedList$Link next>;

        i1 = i1 + 1;

        goto label1;

     label2:
        goto label5;

     label3:
        i5 = r0.<java.util.LinkedList: int size>;

     label4:
        if i5 <= i0 goto label5;

        r2 = r2.<java.util.LinkedList$Link: java.util.LinkedList$Link previous>;

        i5 = i5 + -1;

        goto label4;

     label5:
        r4 = r2.<java.util.LinkedList$Link: java.lang.Object data>;

        r2.<java.util.LinkedList$Link: java.lang.Object data> = r1;

        return r4;

     label6:
        $r3 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r3;
    }

    public int size()
    {
        java.util.LinkedList r0;
        int $i0;

        r0 := @this: java.util.LinkedList;

        $i0 = r0.<java.util.LinkedList: int size>;

        return $i0;
    }

    public boolean offer(java.lang.Object)
    {
        java.util.LinkedList r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: java.util.LinkedList;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.util.LinkedList: boolean addLastImpl(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.Object poll()
    {
        java.util.LinkedList r0;
        int $i0;
        java.lang.Object $r1;

        r0 := @this: java.util.LinkedList;

        $i0 = r0.<java.util.LinkedList: int size>;

        if $i0 != 0 goto label1;

        $r1 = null;

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<java.util.LinkedList: java.lang.Object removeFirst()>();

     label2:
        return $r1;
    }

    public java.lang.Object remove()
    {
        java.util.LinkedList r0;
        java.lang.Object $r1;

        r0 := @this: java.util.LinkedList;

        $r1 = specialinvoke r0.<java.util.LinkedList: java.lang.Object removeFirstImpl()>();

        return $r1;
    }

    public java.lang.Object peek()
    {
        java.util.LinkedList r0;
        java.lang.Object $r1;

        r0 := @this: java.util.LinkedList;

        $r1 = specialinvoke r0.<java.util.LinkedList: java.lang.Object peekFirstImpl()>();

        return $r1;
    }

    private java.lang.Object peekFirstImpl()
    {
        java.util.LinkedList r0;
        java.util.LinkedList$Link r1, $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: java.util.LinkedList;

        $r2 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        r1 = $r2.<java.util.LinkedList$Link: java.util.LinkedList$Link next>;

        $r3 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        if r1 != $r3 goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r4 = r1.<java.util.LinkedList$Link: java.lang.Object data>;

     label2:
        return $r4;
    }

    public java.lang.Object element()
    {
        java.util.LinkedList r0;
        java.lang.Object $r1;

        r0 := @this: java.util.LinkedList;

        $r1 = specialinvoke r0.<java.util.LinkedList: java.lang.Object getFirstImpl()>();

        return $r1;
    }

    public java.lang.Object[] toArray()
    {
        java.util.LinkedList r0;
        int i0, $i1, $i2;
        java.lang.Object[] r1;
        java.util.LinkedList$Link r2, $r3, $r4;
        java.lang.Object $r5;

        r0 := @this: java.util.LinkedList;

        i0 = 0;

        $i1 = r0.<java.util.LinkedList: int size>;

        r1 = newarray (java.lang.Object)[$i1];

        $r3 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        r2 = $r3.<java.util.LinkedList$Link: java.util.LinkedList$Link next>;

     label1:
        $r4 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        if r2 == $r4 goto label2;

        $i2 = i0;

        i0 = i0 + 1;

        $r5 = r2.<java.util.LinkedList$Link: java.lang.Object data>;

        r1[$i2] = $r5;

        r2 = r2.<java.util.LinkedList$Link: java.util.LinkedList$Link next>;

        goto label1;

     label2:
        return r1;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.util.LinkedList r0;
        java.lang.Object[] r1, $r8;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Class r2, $r6;
        java.util.LinkedList$Link $r3, $r4, r9;
        java.lang.Object $r5, $r7;

        r0 := @this: java.util.LinkedList;

        r1 := @parameter0: java.lang.Object[];

        i0 = 0;

        $i2 = r0.<java.util.LinkedList: int size>;

        $i1 = lengthof r1;

        if $i2 <= $i1 goto label1;

        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        r2 = virtualinvoke $r6.<java.lang.Class: java.lang.Class getComponentType()>();

        $i5 = r0.<java.util.LinkedList: int size>;

        $r7 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r2, $i5);

        $r8 = (java.lang.Object[]) $r7;

        r1 = (java.lang.Object[]) $r8;

     label1:
        $r3 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        r9 = $r3.<java.util.LinkedList$Link: java.util.LinkedList$Link next>;

     label2:
        $r4 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        if r9 == $r4 goto label3;

        $i4 = i0;

        i0 = i0 + 1;

        $r5 = r9.<java.util.LinkedList$Link: java.lang.Object data>;

        r1[$i4] = $r5;

        r9 = r9.<java.util.LinkedList$Link: java.util.LinkedList$Link next>;

        goto label2;

     label3:
        $i3 = lengthof r1;

        if i0 >= $i3 goto label4;

        r1[i0] = null;

     label4:
        return r1;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.util.LinkedList r0;
        java.io.ObjectOutputStream r1;
        java.util.Iterator r2;
        int $i0;
        boolean $z0;
        java.lang.Object $r3;

        r0 := @this: java.util.LinkedList;

        r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $i0 = r0.<java.util.LinkedList: int size>;

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i0);

        r2 = virtualinvoke r0.<java.util.LinkedList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r3);

        goto label1;

     label2:
        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.util.LinkedList r0;
        java.io.ObjectInputStream r1;
        java.util.LinkedList$Link r2, r3, $r4, $r5, $r6, $r7;
        int i0, $i1;
        java.lang.Object $r8;

        r0 := @this: java.util.LinkedList;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $i1 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        r0.<java.util.LinkedList: int size> = $i1;

        $r4 = new java.util.LinkedList$Link;

        specialinvoke $r4.<java.util.LinkedList$Link: void <init>(java.lang.Object,java.util.LinkedList$Link,java.util.LinkedList$Link)>(null, null, null);

        r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink> = $r4;

        r2 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        i0 = r0.<java.util.LinkedList: int size>;

     label1:
        i0 = i0 + -1;

        if i0 < 0 goto label2;

        $r7 = new java.util.LinkedList$Link;

        $r8 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        specialinvoke $r7.<java.util.LinkedList$Link: void <init>(java.lang.Object,java.util.LinkedList$Link,java.util.LinkedList$Link)>($r8, r2, null);

        r3 = $r7;

        r2.<java.util.LinkedList$Link: java.util.LinkedList$Link next> = r3;

        r2 = r3;

        goto label1;

     label2:
        $r5 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        r2.<java.util.LinkedList$Link: java.util.LinkedList$Link next> = $r5;

        $r6 = r0.<java.util.LinkedList: java.util.LinkedList$Link voidLink>;

        $r6.<java.util.LinkedList$Link: java.util.LinkedList$Link previous> = r2;

        return;
    }

    public static void <clinit>()
    {
        <java.util.LinkedList: long serialVersionUID> = 876323262645176354L;

        return;
    }
}
