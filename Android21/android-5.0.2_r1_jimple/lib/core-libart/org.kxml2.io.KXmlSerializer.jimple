public class org.kxml2.io.KXmlSerializer extends java.lang.Object implements org.xmlpull.v1.XmlSerializer
{
    private static final int WRITE_BUFFER_SIZE;
    private java.io.BufferedWriter writer;
    private boolean pending;
    private int auto;
    private int depth;
    private java.lang.String[] elementStack;
    private int[] nspCounts;
    private java.lang.String[] nspStack;
    private boolean[] indent;
    private boolean unicode;
    private java.lang.String encoding;

    public void <init>()
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String[] $r1, $r3;
        int[] $r2;
        boolean[] $r4;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (java.lang.String)[12];

        r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack> = $r1;

        $r2 = newarray (int)[4];

        r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts> = $r2;

        $r3 = newarray (java.lang.String)[8];

        r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack> = $r3;

        $r4 = newarray (boolean)[4];

        r0.<org.kxml2.io.KXmlSerializer: boolean[] indent> = $r4;

        return;
    }

    private final void check(boolean) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        boolean[] r1, $r2, $r3, $r4, $r29;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, i31;
        int[] $r5, $r6, $r7, $r8, $r10, $r14, r30;
        java.io.BufferedWriter $r9, $r12, $r13, $r17, $r19, $r24, $r26;
        java.lang.String $r11, $r15, $r18, $r20, $r22, $r27;
        java.lang.String[] $r16, $r21, $r23, $r28;
        java.lang.IllegalStateException $r25;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        z0 := @parameter0: boolean;

        $z1 = r0.<org.kxml2.io.KXmlSerializer: boolean pending>;

        if $z1 != 0 goto label1;

        return;

     label1:
        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i1 = $i0 + 1;

        r0.<org.kxml2.io.KXmlSerializer: int depth> = $i1;

        r0.<org.kxml2.io.KXmlSerializer: boolean pending> = 0;

        $r2 = r0.<org.kxml2.io.KXmlSerializer: boolean[] indent>;

        $i3 = lengthof $r2;

        $i2 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        if $i3 > $i2 goto label2;

        $i28 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i29 = $i28 + 4;

        r1 = newarray (boolean)[$i29];

        $r29 = r0.<org.kxml2.io.KXmlSerializer: boolean[] indent>;

        $i30 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        staticinvoke <java.lang.System: void arraycopy(boolean[],int,boolean[],int,int)>($r29, 0, r1, 0, $i30);

        r0.<org.kxml2.io.KXmlSerializer: boolean[] indent> = r1;

     label2:
        $r4 = r0.<org.kxml2.io.KXmlSerializer: boolean[] indent>;

        $i6 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $r3 = r0.<org.kxml2.io.KXmlSerializer: boolean[] indent>;

        $i4 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i5 = $i4 - 1;

        $z2 = $r3[$i5];

        $r4[$i6] = $z2;

        $r5 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i7 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i8 = $i7 - 1;

        i31 = $r5[$i8];

     label3:
        $r6 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i9 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i10 = $r6[$i9];

        if i31 >= $i10 goto label6;

        $r12 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r12.<java.io.BufferedWriter: void write(int)>(32);

        $r13 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r13.<java.io.BufferedWriter: void write(java.lang.String)>("xmlns");

        $r16 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $i22 = i31 * 2;

        $r15 = $r16[$i22];

        $z3 = virtualinvoke $r15.<java.lang.String: boolean isEmpty()>();

        if $z3 != 0 goto label4;

        $r24 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r24.<java.io.BufferedWriter: void write(int)>(58);

        $r26 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        $r28 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $i27 = i31 * 2;

        $r27 = $r28[$i27];

        virtualinvoke $r26.<java.io.BufferedWriter: void write(java.lang.String)>($r27);

        goto label5;

     label4:
        $r18 = virtualinvoke r0.<org.kxml2.io.KXmlSerializer: java.lang.String getNamespace()>();

        $z4 = virtualinvoke $r18.<java.lang.String: boolean isEmpty()>();

        if $z4 == 0 goto label5;

        $r23 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $i26 = i31 * 2;

        $i25 = $i26 + 1;

        $r22 = $r23[$i25];

        $z5 = virtualinvoke $r22.<java.lang.String: boolean isEmpty()>();

        if $z5 != 0 goto label5;

        $r25 = new java.lang.IllegalStateException;

        specialinvoke $r25.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot set default namespace for elements in no namespace");

        throw $r25;

     label5:
        $r17 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r17.<java.io.BufferedWriter: void write(java.lang.String)>("=\"");

        $r21 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $i23 = i31 * 2;

        $i24 = $i23 + 1;

        $r20 = $r21[$i24];

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void writeEscaped(java.lang.String,int)>($r20, 34);

        $r19 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r19.<java.io.BufferedWriter: void write(int)>(34);

        i31 = i31 + 1;

        goto label3;

     label6:
        $r7 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i14 = lengthof $r7;

        $i12 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i11 = $i12 + 1;

        if $i14 > $i11 goto label7;

        $i20 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i18 = $i20 + 8;

        r30 = newarray (int)[$i18];

        $r14 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i19 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i21 = $i19 + 1;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r14, 0, r30, 0, $i21);

        r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts> = r30;

     label7:
        $r10 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i13 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i16 = $i13 + 1;

        $r8 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i15 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i17 = $r8[$i15];

        $r10[$i16] = $i17;

        $r9 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        if z0 == 0 goto label8;

        $r11 = " />";

        goto label9;

     label8:
        $r11 = ">";

     label9:
        virtualinvoke $r9.<java.io.BufferedWriter: void write(java.lang.String)>($r11);

        return;
    }

    private final void writeEscaped(java.lang.String, int) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1, $r11, $r17, $r20;
        int i0, i1, $i3;
        char c2;
        boolean z0, $z1, $z2;
        java.io.BufferedWriter $r2, $r3, $r4, $r6, $r10, $r12, $r13, $r19;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r14, $r15, $r16, $r18;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 = 0;

     label01:
        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        if i1 >= $i3 goto label19;

        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);

        lookupswitch(c2)
        {
            case 9: goto label02;
            case 10: goto label02;
            case 13: goto label02;
            case 38: goto label04;
            case 60: goto label06;
            case 62: goto label05;
            default: goto label07;
        };

     label02:
        if i0 != -1 goto label03;

        $r10 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r10.<java.io.BufferedWriter: void write(int)>(c2);

        goto label18;

     label03:
        $r6 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(c2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.BufferedWriter: void write(java.lang.String)>($r11);

        goto label18;

     label04:
        $r4 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r4.<java.io.BufferedWriter: void write(java.lang.String)>("&amp;");

        goto label18;

     label05:
        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r2.<java.io.BufferedWriter: void write(java.lang.String)>("&gt;");

        goto label18;

     label06:
        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r3.<java.io.BufferedWriter: void write(java.lang.String)>("&lt;");

        goto label18;

     label07:
        if c2 != i0 goto label10;

        $r19 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        if c2 != 34 goto label08;

        $r20 = "&quot;";

        goto label09;

     label08:
        $r20 = "&apos;";

     label09:
        virtualinvoke $r19.<java.io.BufferedWriter: void write(java.lang.String)>($r20);

        goto label18;

     label10:
        if c2 < 32 goto label11;

        if c2 <= 55295 goto label12;

     label11:
        if c2 < 57344 goto label13;

        if c2 > 65533 goto label13;

     label12:
        $z2 = 1;

        goto label14;

     label13:
        $z2 = 0;

     label14:
        z0 = $z2;

        if z0 != 0 goto label15;

        staticinvoke <org.kxml2.io.KXmlSerializer: void reportInvalidCharacter(char)>(c2);

     label15:
        $z1 = r0.<org.kxml2.io.KXmlSerializer: boolean unicode>;

        if $z1 != 0 goto label16;

        if c2 >= 127 goto label17;

     label16:
        $r12 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r12.<java.io.BufferedWriter: void write(int)>(c2);

        goto label18;

     label17:
        $r13 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(c2);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.BufferedWriter: void write(java.lang.String)>($r17);

     label18:
        i1 = i1 + 1;

        goto label01;

     label19:
        return;
    }

    private static void reportInvalidCharacter(char)
    {
        char c0;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        java.lang.String $r3, $r6;

        c0 := @parameter0: char;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal character (");

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(c0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r0;
    }

    public void docdecl(java.lang.String) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1;
        java.io.BufferedWriter $r2, $r3, $r4;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r2.<java.io.BufferedWriter: void write(java.lang.String)>("<!DOCTYPE");

        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r3.<java.io.BufferedWriter: void write(java.lang.String)>(r1);

        $r4 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r4.<java.io.BufferedWriter: void write(java.lang.String)>(">");

        return;
    }

    public void endDocument() throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String[] $r1, $r2;
        java.lang.String $r3, $r4;

        r0 := @this: org.kxml2.io.KXmlSerializer;

     label1:
        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        if $i0 <= 0 goto label2;

        $r1 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i1 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i2 = $i1 * 3;

        $i3 = $i2 - 3;

        $r4 = $r1[$i3];

        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i4 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i5 = $i4 * 3;

        $i6 = $i5 - 1;

        $r3 = $r2[$i6];

        virtualinvoke r0.<org.kxml2.io.KXmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>($r4, $r3);

        goto label1;

     label2:
        virtualinvoke r0.<org.kxml2.io.KXmlSerializer: void flush()>();

        return;
    }

    public void entityRef(java.lang.String) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1;
        java.io.BufferedWriter $r2, $r3, $r4;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void check(boolean)>(0);

        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r2.<java.io.BufferedWriter: void write(int)>(38);

        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r3.<java.io.BufferedWriter: void write(java.lang.String)>(r1);

        $r4 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r4.<java.io.BufferedWriter: void write(int)>(59);

        return;
    }

    public boolean getFeature(java.lang.String)
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1, $r2;
        boolean $z0, $z1;
        int $i0;
        boolean[] $r3;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        $r2 = "http://xmlpull.org/v1/doc/features.html#indent-output";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<org.kxml2.io.KXmlSerializer: boolean[] indent>;

        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $z1 = $r3[$i0];

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public java.lang.String getPrefix(java.lang.String, boolean)
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1, $r3, $r6;
        boolean z0;
        java.io.IOException r2, $r4;
        java.lang.RuntimeException $r5;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

     label1:
        $r3 = specialinvoke r0.<org.kxml2.io.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>(r1, 0, z0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.lang.RuntimeException;

        $r6 = virtualinvoke r2.<java.io.IOException: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private final java.lang.String getPrefix(java.lang.String, boolean, boolean) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1, r2, $r8, $r10, $r14, $r17, r18;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, z7;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17;
        int[] $r3, $r7, $r13;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String[] $r9, $r11, $r12, $r15, $r16;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r3 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i2 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i3 = $i2 + 1;

        $i4 = $r3[$i3];

        $i5 = $i4 * 2;

        i0 = $i5 - 2;

     label01:
        if i0 < 0 goto label07;

        $r11 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $i12 = i0 + 1;

        $r10 = $r11[$i12];

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z4 == 0 goto label06;

        if z0 != 0 goto label02;

        $r16 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $r17 = $r16[i0];

        $z6 = virtualinvoke $r17.<java.lang.String: boolean isEmpty()>();

        if $z6 != 0 goto label06;

     label02:
        $r12 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        r2 = $r12[i0];

        i1 = i0 + 2;

     label03:
        $r13 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i14 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i15 = $i14 + 1;

        $i13 = $r13[$i15];

        $i16 = $i13 * 2;

        if i1 >= $i16 goto label05;

        $r15 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $r14 = $r15[i1];

        $z5 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z5 == 0 goto label04;

        r2 = null;

        goto label05;

     label04:
        i1 = i1 + 1;

        goto label03;

     label05:
        if r2 == null goto label06;

        return r2;

     label06:
        i0 = i0 + -2;

        goto label01;

     label07:
        if z1 != 0 goto label08;

        return null;

     label08:
        $z2 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z2 == 0 goto label09;

        r18 = "";

        goto label13;

     label09:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("n");

        $i6 = r0.<org.kxml2.io.KXmlSerializer: int auto>;

        $i7 = $i6 + 1;

        r0.<org.kxml2.io.KXmlSerializer: int auto> = $i7;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        r18 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i8 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i9 = $i8 + 1;

        $i11 = $r7[$i9];

        $i10 = $i11 * 2;

        i17 = $i10 - 2;

     label10:
        if i17 < 0 goto label12;

        $r9 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $r8 = $r9[i17];

        $z3 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z3 == 0 goto label11;

        r18 = null;

        goto label12;

     label11:
        i17 = i17 + -2;

        goto label10;

     label12:
        if r18 == null goto label09;

     label13:
        z7 = r0.<org.kxml2.io.KXmlSerializer: boolean pending>;

        r0.<org.kxml2.io.KXmlSerializer: boolean pending> = 0;

        virtualinvoke r0.<org.kxml2.io.KXmlSerializer: void setPrefix(java.lang.String,java.lang.String)>(r18, r1);

        r0.<org.kxml2.io.KXmlSerializer: boolean pending> = z7;

        return r18;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unsupported property");

        throw $r2;
    }

    public void ignorableWhitespace(java.lang.String) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.kxml2.io.KXmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>(r1);

        return;
    }

    public void setFeature(java.lang.String, boolean)
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1, $r2;
        boolean z0, $z1;
        java.lang.RuntimeException $r3;
        int $i0;
        boolean[] $r4;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = "http://xmlpull.org/v1/doc/features.html#indent-output";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        $r4 = r0.<org.kxml2.io.KXmlSerializer: boolean[] indent>;

        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $r4[$i0] = z0;

        goto label2;

     label1:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unsupported Feature");

        throw $r3;

     label2:
        return;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1, $r7;
        java.lang.Object r2;
        java.lang.RuntimeException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported Property:");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    public void setPrefix(java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1, r2, r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        java.lang.String[] r4, $r6, $r7, $r8, $r9, $r10;
        boolean $z0;
        int[] $r5;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void check(boolean)>(0);

        if r1 != null goto label1;

        r1 = "";

     label1:
        if r2 != null goto label2;

        r2 = "";

     label2:
        r3 = specialinvoke r0.<org.kxml2.io.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>(r2, 1, 0);

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label3;

        return;

     label3:
        $r5 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i1 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i2 = $i1 + 1;

        $i3 = $r5[$i2];

        $i4 = $i3 + 1;

        $r5[$i2] = $i4;

        i0 = $i3 << 1;

        $r6 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $i6 = lengthof $r6;

        $i5 = i0 + 1;

        if $i6 >= $i5 goto label4;

        $r8 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $i8 = lengthof $r8;

        $i7 = $i8 + 16;

        r4 = newarray (java.lang.String)[$i7];

        $r10 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, r4, 0, i0);

        r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack> = r4;

     label4:
        $r7 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        i9 = i0 + 1;

        $r7[i0] = r1;

        $r9 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $r9[i9] = r2;

        return;
    }

    public void setOutput(java.io.Writer)
    {
        org.kxml2.io.KXmlSerializer r0;
        java.io.Writer r1;
        boolean $z0;
        java.io.BufferedWriter $r2, $r9;
        int[] $r3, $r4;
        java.lang.String[] $r5, $r6, $r7, $r8;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.io.Writer;

        $z0 = r1 instanceof java.io.BufferedWriter;

        if $z0 == 0 goto label1;

        $r9 = (java.io.BufferedWriter) r1;

        r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer> = $r9;

        goto label2;

     label1:
        $r2 = new java.io.BufferedWriter;

        specialinvoke $r2.<java.io.BufferedWriter: void <init>(java.io.Writer,int)>(r1, 500);

        r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer> = $r2;

     label2:
        $r3 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $r3[0] = 2;

        $r4 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $r4[1] = 2;

        $r5 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $r5[0] = "";

        $r6 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $r6[1] = "";

        $r7 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $r7[2] = "xml";

        $r8 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $r8[3] = "http://www.w3.org/XML/1998/namespace";

        r0.<org.kxml2.io.KXmlSerializer: boolean pending> = 0;

        r0.<org.kxml2.io.KXmlSerializer: int auto> = 0;

        r0.<org.kxml2.io.KXmlSerializer: int depth> = 0;

        r0.<org.kxml2.io.KXmlSerializer: boolean unicode> = 0;

        return;
    }

    public void setOutput(java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.io.OutputStream r1;
        java.lang.String r2, $r5;
        java.io.OutputStreamWriter $r3;
        java.util.Locale $r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("os == null");

        throw $r6;

     label1:
        if r2 != null goto label2;

        $r3 = new java.io.OutputStreamWriter;

        specialinvoke $r3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>(r1);

        goto label3;

     label2:
        $r3 = new java.io.OutputStreamWriter;

        specialinvoke $r3.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r1, r2);

     label3:
        virtualinvoke r0.<org.kxml2.io.KXmlSerializer: void setOutput(java.io.Writer)>($r3);

        r0.<org.kxml2.io.KXmlSerializer: java.lang.String encoding> = r2;

        if r2 == null goto label4;

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r5 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>("utf");

        if $z0 == 0 goto label4;

        r0.<org.kxml2.io.KXmlSerializer: boolean unicode> = 1;

     label4:
        return;
    }

    public void startDocument(java.lang.String, java.lang.Boolean) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1, $r4, $r9, $r11, $r15;
        java.lang.Boolean r2;
        java.io.BufferedWriter $r3, $r5, $r6, $r7, $r8, $r10, $r12, $r13;
        boolean $z0, $z1;
        java.util.Locale $r14;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Boolean;

        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r3.<java.io.BufferedWriter: void write(java.lang.String)>("<?xml version=\'1.0\' ");

        if r1 == null goto label1;

        r0.<org.kxml2.io.KXmlSerializer: java.lang.String encoding> = r1;

        $r14 = <java.util.Locale: java.util.Locale US>;

        $r15 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r14);

        $z1 = virtualinvoke $r15.<java.lang.String: boolean startsWith(java.lang.String)>("utf");

        if $z1 == 0 goto label1;

        r0.<org.kxml2.io.KXmlSerializer: boolean unicode> = 1;

     label1:
        $r4 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String encoding>;

        if $r4 == null goto label2;

        $r10 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r10.<java.io.BufferedWriter: void write(java.lang.String)>("encoding=\'");

        $r12 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        $r11 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String encoding>;

        virtualinvoke $r12.<java.io.BufferedWriter: void write(java.lang.String)>($r11);

        $r13 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r13.<java.io.BufferedWriter: void write(java.lang.String)>("\' ");

     label2:
        if r2 == null goto label5;

        $r6 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r6.<java.io.BufferedWriter: void write(java.lang.String)>("standalone=\'");

        $r7 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        $z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label3;

        $r9 = "yes";

        goto label4;

     label3:
        $r9 = "no";

     label4:
        virtualinvoke $r7.<java.io.BufferedWriter: void write(java.lang.String)>($r9);

        $r8 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r8.<java.io.BufferedWriter: void write(java.lang.String)>("\' ");

     label5:
        $r5 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r5.<java.io.BufferedWriter: void write(java.lang.String)>("?>");

        return;
    }

    public org.xmlpull.v1.XmlSerializer startTag(java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1, r2, $r6, $r17, $r18, r25;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18;
        java.lang.String[] r3, $r5, $r7, $r8, $r10, $r16, $r19, $r21, $r23;
        boolean[] $r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.io.BufferedWriter $r9, $r11, $r12, $r13, $r22, $r24;
        int[] $r14, $r15;
        java.lang.IllegalStateException $r20;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void check(boolean)>(0);

        $r4 = r0.<org.kxml2.io.KXmlSerializer: boolean[] indent>;

        $i2 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $z0 = $r4[$i2];

        if $z0 == 0 goto label2;

        $r24 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r24.<java.io.BufferedWriter: void write(java.lang.String)>("\r\n");

        i0 = 0;

     label1:
        $i15 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        if i0 >= $i15 goto label2;

        $r22 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r22.<java.io.BufferedWriter: void write(java.lang.String)>("  ");

        i0 = i0 + 1;

        goto label1;

     label2:
        $i3 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        i16 = $i3 * 3;

        $r5 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i5 = lengthof $r5;

        $i4 = i16 + 3;

        if $i5 >= $i4 goto label3;

        $r21 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i13 = lengthof $r21;

        $i14 = $i13 + 12;

        r3 = newarray (java.lang.String)[$i14];

        $r23 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r23, 0, r3, 0, i16);

        r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack> = r3;

     label3:
        if r1 != null goto label4;

        $r6 = "";

        goto label5;

     label4:
        $r6 = specialinvoke r0.<org.kxml2.io.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>(r1, 1, 1);

     label5:
        r25 = $r6;

        if r1 == null goto label8;

        $z2 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z2 == 0 goto label8;

        $r14 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i6 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        i1 = $r14[$i6];

     label6:
        $r15 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i7 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i8 = $i7 + 1;

        $i10 = $r15[$i8];

        if i1 >= $i10 goto label8;

        $r16 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $i9 = i1 * 2;

        $r17 = $r16[$i9];

        $z3 = virtualinvoke $r17.<java.lang.String: boolean isEmpty()>();

        if $z3 == 0 goto label7;

        $r19 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] nspStack>;

        $i11 = i1 * 2;

        $i12 = $i11 + 1;

        $r18 = $r19[$i12];

        $z4 = virtualinvoke $r18.<java.lang.String: boolean isEmpty()>();

        if $z4 != 0 goto label7;

        $r20 = new java.lang.IllegalStateException;

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot set default namespace for elements in no namespace");

        throw $r20;

     label7:
        i1 = i1 + 1;

        goto label6;

     label8:
        $r7 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        i17 = i16 + 1;

        $r7[i16] = r1;

        $r8 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        i18 = i17 + 1;

        $r8[i17] = r25;

        $r10 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $r10[i18] = r2;

        $r9 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r9.<java.io.BufferedWriter: void write(int)>(60);

        $z1 = virtualinvoke r25.<java.lang.String: boolean isEmpty()>();

        if $z1 != 0 goto label9;

        $r13 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r13.<java.io.BufferedWriter: void write(java.lang.String)>(r25);

        $r12 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r12.<java.io.BufferedWriter: void write(int)>(58);

     label9:
        $r11 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r11.<java.io.BufferedWriter: void write(java.lang.String)>(r2);

        r0.<org.kxml2.io.KXmlSerializer: boolean pending> = 1;

        return r0;
    }

    public org.xmlpull.v1.XmlSerializer attribute(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1, r2, r3, r4, $r5;
        byte b0, $b2;
        boolean $z0, $z1, $z2;
        java.io.BufferedWriter $r6, $r7, $r8, $r9, $r10, $r11, $r13;
        int $i1;
        java.lang.IllegalStateException $r12;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $z0 = r0.<org.kxml2.io.KXmlSerializer: boolean pending>;

        if $z0 != 0 goto label1;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("illegal position for attribute");

        throw $r12;

     label1:
        if r1 != null goto label2;

        r1 = "";

     label2:
        $z1 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label3;

        $r5 = "";

        goto label4;

     label3:
        $r5 = specialinvoke r0.<org.kxml2.io.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)>(r1, 0, 1);

     label4:
        r4 = $r5;

        $r6 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r6.<java.io.BufferedWriter: void write(int)>(32);

        $z2 = virtualinvoke r4.<java.lang.String: boolean isEmpty()>();

        if $z2 != 0 goto label5;

        $r11 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r11.<java.io.BufferedWriter: void write(java.lang.String)>(r4);

        $r13 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r13.<java.io.BufferedWriter: void write(int)>(58);

     label5:
        $r7 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r7.<java.io.BufferedWriter: void write(java.lang.String)>(r2);

        $r8 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r8.<java.io.BufferedWriter: void write(int)>(61);

        $i1 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(34);

        if $i1 != -1 goto label6;

        $b2 = 34;

        goto label7;

     label6:
        $b2 = 39;

     label7:
        b0 = $b2;

        $r9 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r9.<java.io.BufferedWriter: void write(int)>(b0);

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void writeEscaped(java.lang.String,int)>(r3, b0);

        $r10 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r10.<java.io.BufferedWriter: void write(int)>(b0);

        return r0;
    }

    public void flush() throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.io.BufferedWriter $r1;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void check(boolean)>(0);

        $r1 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r1.<java.io.BufferedWriter: void flush()>();

        return;
    }

    public org.xmlpull.v1.XmlSerializer endTag(java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1, r2, $r4, $r24, $r25, $r26, r28;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String[] $r3, $r7, $r23, $r27;
        boolean[] $r5;
        java.io.BufferedWriter $r6, $r8, $r9, $r12, $r13, $r14, $r15;
        int[] $r10, $r11;
        java.lang.StringBuilder $r16, $r17, $r19, $r20, $r21, $r22;
        java.lang.IllegalArgumentException $r18;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = r0.<org.kxml2.io.KXmlSerializer: boolean pending>;

        if $z0 != 0 goto label01;

        $i21 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i20 = $i21 - 1;

        r0.<org.kxml2.io.KXmlSerializer: int depth> = $i20;

     label01:
        if r1 != null goto label02;

        $r27 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i19 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i18 = $i19 * 3;

        $r26 = $r27[$i18];

        if $r26 != null goto label04;

     label02:
        if r1 == null goto label03;

        $r23 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i17 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i16 = $i17 * 3;

        $r25 = $r23[$i16];

        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r25);

        if $z5 == 0 goto label04;

     label03:
        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i1 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i2 = $i1 * 3;

        $i3 = $i2 + 2;

        $r4 = $r3[$i3];

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label05;

     label04:
        $r18 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</{");

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> does not match start");

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r24);

        throw $r18;

     label05:
        $z2 = r0.<org.kxml2.io.KXmlSerializer: boolean pending>;

        if $z2 == 0 goto label06;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void check(boolean)>(1);

        $i13 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i15 = $i13 - 1;

        r0.<org.kxml2.io.KXmlSerializer: int depth> = $i15;

        goto label10;

     label06:
        $r5 = r0.<org.kxml2.io.KXmlSerializer: boolean[] indent>;

        $i4 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i5 = $i4 + 1;

        $z3 = $r5[$i5];

        if $z3 == 0 goto label08;

        $r15 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r15.<java.io.BufferedWriter: void write(java.lang.String)>("\r\n");

        i0 = 0;

     label07:
        $i14 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        if i0 >= $i14 goto label08;

        $r14 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r14.<java.io.BufferedWriter: void write(java.lang.String)>("  ");

        i0 = i0 + 1;

        goto label07;

     label08:
        $r6 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r6.<java.io.BufferedWriter: void write(java.lang.String)>("</");

        $r7 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i6 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i8 = $i6 * 3;

        $i7 = $i8 + 1;

        r28 = $r7[$i7];

        $z4 = virtualinvoke r28.<java.lang.String: boolean isEmpty()>();

        if $z4 != 0 goto label09;

        $r13 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r13.<java.io.BufferedWriter: void write(java.lang.String)>(r28);

        $r12 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r12.<java.io.BufferedWriter: void write(int)>(58);

     label09:
        $r9 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r9.<java.io.BufferedWriter: void write(java.lang.String)>(r2);

        $r8 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r8.<java.io.BufferedWriter: void write(int)>(62);

     label10:
        $r11 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i10 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i12 = $i10 + 1;

        $r10 = r0.<org.kxml2.io.KXmlSerializer: int[] nspCounts>;

        $i9 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i11 = $r10[$i9];

        $r11[$i12] = $i11;

        return r0;
    }

    public java.lang.String getNamespace()
    {
        org.kxml2.io.KXmlSerializer r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $i0 = virtualinvoke r0.<org.kxml2.io.KXmlSerializer: int getDepth()>();

        if $i0 != 0 goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r1 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i1 = virtualinvoke r0.<org.kxml2.io.KXmlSerializer: int getDepth()>();

        $i2 = $i1 * 3;

        $i3 = $i2 - 3;

        $r2 = $r1[$i3];

     label2:
        return $r2;
    }

    public java.lang.String getName()
    {
        org.kxml2.io.KXmlSerializer r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $i0 = virtualinvoke r0.<org.kxml2.io.KXmlSerializer: int getDepth()>();

        if $i0 != 0 goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r1 = r0.<org.kxml2.io.KXmlSerializer: java.lang.String[] elementStack>;

        $i1 = virtualinvoke r0.<org.kxml2.io.KXmlSerializer: int getDepth()>();

        $i2 = $i1 * 3;

        $i3 = $i2 - 1;

        $r2 = $r1[$i3];

     label2:
        return $r2;
    }

    public int getDepth()
    {
        org.kxml2.io.KXmlSerializer r0;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        $z0 = r0.<org.kxml2.io.KXmlSerializer: boolean pending>;

        if $z0 == 0 goto label1;

        $i1 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $i0 = $i1 + 1;

        goto label2;

     label1:
        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

     label2:
        return $i0;
    }

    public org.xmlpull.v1.XmlSerializer text(java.lang.String) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1;
        int $i0;
        boolean[] $r2;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void check(boolean)>(0);

        $r2 = r0.<org.kxml2.io.KXmlSerializer: boolean[] indent>;

        $i0 = r0.<org.kxml2.io.KXmlSerializer: int depth>;

        $r2[$i0] = 0;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void writeEscaped(java.lang.String,int)>(r1, -1);

        return r0;
    }

    public org.xmlpull.v1.XmlSerializer text(char[], int, int) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        char[] r1;
        int i0, i1;
        java.lang.String $r2;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>(r1, i0, i1);

        virtualinvoke r0.<org.kxml2.io.KXmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r2);

        return r0;
    }

    public void cdsect(java.lang.String) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1, r7;
        char[] r2, r3;
        int i0, i1, $i3;
        char c2;
        boolean z0, $z1;
        java.io.BufferedWriter $r4, $r5, $r6;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void check(boolean)>(0);

        r7 = virtualinvoke r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("]]>", "]]]]><![CDATA[>");

        r2 = virtualinvoke r7.<java.lang.String: char[] toCharArray()>();

        r3 = r2;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label7;

        c2 = r3[i1];

        if c2 < 32 goto label2;

        if c2 <= 55295 goto label3;

     label2:
        if c2 == 9 goto label3;

        if c2 == 10 goto label3;

        if c2 == 13 goto label3;

        if c2 < 57344 goto label4;

        if c2 > 65533 goto label4;

     label3:
        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        z0 = $z1;

        if z0 != 0 goto label6;

        staticinvoke <org.kxml2.io.KXmlSerializer: void reportInvalidCharacter(char)>(c2);

     label6:
        i1 = i1 + 1;

        goto label1;

     label7:
        $r4 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r4.<java.io.BufferedWriter: void write(java.lang.String)>("<![CDATA[");

        $r5 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        $i3 = lengthof r2;

        virtualinvoke $r5.<java.io.BufferedWriter: void write(char[],int,int)>(r2, 0, $i3);

        $r6 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r6.<java.io.BufferedWriter: void write(java.lang.String)>("]]>");

        return;
    }

    public void comment(java.lang.String) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1;
        java.io.BufferedWriter $r2, $r3, $r4;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void check(boolean)>(0);

        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r2.<java.io.BufferedWriter: void write(java.lang.String)>("<!--");

        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r3.<java.io.BufferedWriter: void write(java.lang.String)>(r1);

        $r4 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r4.<java.io.BufferedWriter: void write(java.lang.String)>("-->");

        return;
    }

    public void processingInstruction(java.lang.String) throws java.io.IOException
    {
        org.kxml2.io.KXmlSerializer r0;
        java.lang.String r1;
        java.io.BufferedWriter $r2, $r3, $r4;

        r0 := @this: org.kxml2.io.KXmlSerializer;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.kxml2.io.KXmlSerializer: void check(boolean)>(0);

        $r2 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r2.<java.io.BufferedWriter: void write(java.lang.String)>("<?");

        $r3 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r3.<java.io.BufferedWriter: void write(java.lang.String)>(r1);

        $r4 = r0.<org.kxml2.io.KXmlSerializer: java.io.BufferedWriter writer>;

        virtualinvoke $r4.<java.io.BufferedWriter: void write(java.lang.String)>("?>");

        return;
    }

    public static void <clinit>()
    {
        <org.kxml2.io.KXmlSerializer: int WRITE_BUFFER_SIZE> = 500;

        return;
    }
}
