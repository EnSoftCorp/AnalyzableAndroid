public class javax.crypto.spec.PBEKeySpec extends java.lang.Object implements java.security.spec.KeySpec
{
    private char[] password;
    private final byte[] salt;
    private final int iterationCount;
    private final int keyLength;

    public void <init>(char[])
    {
        javax.crypto.spec.PBEKeySpec r0;
        char[] r1, $r2, $r3, $r4;
        int $i0, $i1;

        r0 := @this: javax.crypto.spec.PBEKeySpec;

        r1 := @parameter0: char[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r4 = <libcore.util.EmptyArray: char[] CHAR>;

        r0.<javax.crypto.spec.PBEKeySpec: char[] password> = $r4;

        goto label2;

     label1:
        $i0 = lengthof r1;

        $r2 = newarray (char)[$i0];

        r0.<javax.crypto.spec.PBEKeySpec: char[] password> = $r2;

        $r3 = r0.<javax.crypto.spec.PBEKeySpec: char[] password>;

        $i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(char[],int,char[],int,int)>(r1, 0, $r3, 0, $i1);

     label2:
        r0.<javax.crypto.spec.PBEKeySpec: byte[] salt> = null;

        r0.<javax.crypto.spec.PBEKeySpec: int iterationCount> = 0;

        r0.<javax.crypto.spec.PBEKeySpec: int keyLength> = 0;

        return;
    }

    public void <init>(char[], byte[], int, int)
    {
        javax.crypto.spec.PBEKeySpec r0;
        char[] r1, $r3, $r4, $r7;
        byte[] r2, $r5, $r6;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.IllegalArgumentException $r8, $r9, $r10;
        java.lang.NullPointerException $r11;

        r0 := @this: javax.crypto.spec.PBEKeySpec;

        r1 := @parameter0: char[];

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r2 != null goto label1;

        $r11 = new java.lang.NullPointerException;

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("salt == null");

        throw $r11;

     label1:
        $i2 = lengthof r2;

        if $i2 != 0 goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("salt.length == 0");

        throw $r9;

     label2:
        if i0 > 0 goto label3;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("iterationCount <= 0");

        throw $r10;

     label3:
        if i1 > 0 goto label4;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("keyLength <= 0");

        throw $r8;

     label4:
        if r1 != null goto label5;

        $r7 = <libcore.util.EmptyArray: char[] CHAR>;

        r0.<javax.crypto.spec.PBEKeySpec: char[] password> = $r7;

        goto label6;

     label5:
        $i3 = lengthof r1;

        $r3 = newarray (char)[$i3];

        r0.<javax.crypto.spec.PBEKeySpec: char[] password> = $r3;

        $r4 = r0.<javax.crypto.spec.PBEKeySpec: char[] password>;

        $i4 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(char[],int,char[],int,int)>(r1, 0, $r4, 0, $i4);

     label6:
        $i5 = lengthof r2;

        $r5 = newarray (byte)[$i5];

        r0.<javax.crypto.spec.PBEKeySpec: byte[] salt> = $r5;

        $r6 = r0.<javax.crypto.spec.PBEKeySpec: byte[] salt>;

        $i6 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r2, 0, $r6, 0, $i6);

        r0.<javax.crypto.spec.PBEKeySpec: int iterationCount> = i0;

        r0.<javax.crypto.spec.PBEKeySpec: int keyLength> = i1;

        return;
    }

    public void <init>(char[], byte[], int)
    {
        javax.crypto.spec.PBEKeySpec r0;
        char[] r1, $r3, $r4, $r7;
        byte[] r2, $r5, $r6;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.IllegalArgumentException $r8, $r9;
        java.lang.NullPointerException $r10;

        r0 := @this: javax.crypto.spec.PBEKeySpec;

        r1 := @parameter0: char[];

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r2 != null goto label1;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("salt == null");

        throw $r10;

     label1:
        $i1 = lengthof r2;

        if $i1 != 0 goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("salt.length == 0");

        throw $r9;

     label2:
        if i0 > 0 goto label3;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("iterationCount <= 0");

        throw $r8;

     label3:
        if r1 != null goto label4;

        $r7 = <libcore.util.EmptyArray: char[] CHAR>;

        r0.<javax.crypto.spec.PBEKeySpec: char[] password> = $r7;

        goto label5;

     label4:
        $i2 = lengthof r1;

        $r3 = newarray (char)[$i2];

        r0.<javax.crypto.spec.PBEKeySpec: char[] password> = $r3;

        $r4 = r0.<javax.crypto.spec.PBEKeySpec: char[] password>;

        $i3 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(char[],int,char[],int,int)>(r1, 0, $r4, 0, $i3);

     label5:
        $i4 = lengthof r2;

        $r5 = newarray (byte)[$i4];

        r0.<javax.crypto.spec.PBEKeySpec: byte[] salt> = $r5;

        $r6 = r0.<javax.crypto.spec.PBEKeySpec: byte[] salt>;

        $i5 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r2, 0, $r6, 0, $i5);

        r0.<javax.crypto.spec.PBEKeySpec: int iterationCount> = i0;

        r0.<javax.crypto.spec.PBEKeySpec: int keyLength> = 0;

        return;
    }

    public final void clearPassword()
    {
        javax.crypto.spec.PBEKeySpec r0;
        char[] $r1;

        r0 := @this: javax.crypto.spec.PBEKeySpec;

        $r1 = r0.<javax.crypto.spec.PBEKeySpec: char[] password>;

        staticinvoke <java.util.Arrays: void fill(char[],char)>($r1, 63);

        r0.<javax.crypto.spec.PBEKeySpec: char[] password> = null;

        return;
    }

    public final char[] getPassword()
    {
        javax.crypto.spec.PBEKeySpec r0;
        char[] r1, $r2, $r3, $r4, $r5;
        int $i0, $i1;
        java.lang.IllegalStateException $r6;

        r0 := @this: javax.crypto.spec.PBEKeySpec;

        $r2 = r0.<javax.crypto.spec.PBEKeySpec: char[] password>;

        if $r2 != null goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("The password has been cleared");

        throw $r6;

     label1:
        $r3 = r0.<javax.crypto.spec.PBEKeySpec: char[] password>;

        $i0 = lengthof $r3;

        r1 = newarray (char)[$i0];

        $r5 = r0.<javax.crypto.spec.PBEKeySpec: char[] password>;

        $r4 = r0.<javax.crypto.spec.PBEKeySpec: char[] password>;

        $i1 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(char[],int,char[],int,int)>($r5, 0, r1, 0, $i1);

        return r1;
    }

    public final byte[] getSalt()
    {
        javax.crypto.spec.PBEKeySpec r0;
        byte[] r1, $r2, $r3, $r4, $r5;
        int $i0, $i1;

        r0 := @this: javax.crypto.spec.PBEKeySpec;

        $r2 = r0.<javax.crypto.spec.PBEKeySpec: byte[] salt>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = r0.<javax.crypto.spec.PBEKeySpec: byte[] salt>;

        $i0 = lengthof $r3;

        r1 = newarray (byte)[$i0];

        $r5 = r0.<javax.crypto.spec.PBEKeySpec: byte[] salt>;

        $r4 = r0.<javax.crypto.spec.PBEKeySpec: byte[] salt>;

        $i1 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r5, 0, r1, 0, $i1);

        return r1;
    }

    public final int getIterationCount()
    {
        javax.crypto.spec.PBEKeySpec r0;
        int $i0;

        r0 := @this: javax.crypto.spec.PBEKeySpec;

        $i0 = r0.<javax.crypto.spec.PBEKeySpec: int iterationCount>;

        return $i0;
    }

    public final int getKeyLength()
    {
        javax.crypto.spec.PBEKeySpec r0;
        int $i0;

        r0 := @this: javax.crypto.spec.PBEKeySpec;

        $i0 = r0.<javax.crypto.spec.PBEKeySpec: int keyLength>;

        return $i0;
    }
}
