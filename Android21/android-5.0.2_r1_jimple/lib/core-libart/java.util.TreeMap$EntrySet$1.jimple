class java.util.TreeMap$EntrySet$1 extends java.util.TreeMap$MapIterator
{
    final java.util.TreeMap$EntrySet this$1;

    void <init>(java.util.TreeMap$EntrySet, java.util.TreeMap$Node)
    {
        java.util.TreeMap$EntrySet$1 r0;
        java.util.TreeMap$EntrySet r1;
        java.util.TreeMap$Node r2;
        java.util.TreeMap $r3;

        r0 := @this: java.util.TreeMap$EntrySet$1;

        r1 := @parameter0: java.util.TreeMap$EntrySet;

        r2 := @parameter1: java.util.TreeMap$Node;

        r0.<java.util.TreeMap$EntrySet$1: java.util.TreeMap$EntrySet this$1> = r1;

        $r3 = r1.<java.util.TreeMap$EntrySet: java.util.TreeMap this$0>;

        specialinvoke r0.<java.util.TreeMap$MapIterator: void <init>(java.util.TreeMap,java.util.TreeMap$Node)>($r3, r2);

        return;
    }

    public java.util.Map$Entry next()
    {
        java.util.TreeMap$EntrySet$1 r0;
        java.util.TreeMap$Node $r1;

        r0 := @this: java.util.TreeMap$EntrySet$1;

        $r1 = virtualinvoke r0.<java.util.TreeMap$EntrySet$1: java.util.TreeMap$Node stepForward()>();

        return $r1;
    }

    public volatile java.lang.Object next()
    {
        java.util.TreeMap$EntrySet$1 r0;
        java.util.Map$Entry $r1;

        r0 := @this: java.util.TreeMap$EntrySet$1;

        $r1 = virtualinvoke r0.<java.util.TreeMap$EntrySet$1: java.util.Map$Entry next()>();

        return $r1;
    }
}
