public class javax.crypto.SealedObject extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    protected byte[] encodedParams;
    private byte[] encryptedContent;
    private java.lang.String sealAlg;
    private java.lang.String paramsAlg;

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        javax.crypto.SealedObject r0;
        java.io.ObjectInputStream r1;
        java.io.ObjectInputStream$GetField r2;
        byte[] $r3, $r4;
        java.lang.Object $r5, $r7;
        java.lang.String $r6, $r8;

        r0 := @this: javax.crypto.SealedObject;

        r1 := @parameter0: java.io.ObjectInputStream;

        r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.io.ObjectInputStream$GetField readFields()>();

        $r3 = staticinvoke <javax.crypto.SealedObject: byte[] getSafeCopy(java.io.ObjectInputStream$GetField,java.lang.String)>(r2, "encodedParams");

        r0.<javax.crypto.SealedObject: byte[] encodedParams> = $r3;

        $r4 = staticinvoke <javax.crypto.SealedObject: byte[] getSafeCopy(java.io.ObjectInputStream$GetField,java.lang.String)>(r2, "encryptedContent");

        r0.<javax.crypto.SealedObject: byte[] encryptedContent> = $r4;

        $r5 = virtualinvoke r2.<java.io.ObjectInputStream$GetField: java.lang.Object get(java.lang.String,java.lang.Object)>("paramsAlg", null);

        $r6 = (java.lang.String) $r5;

        r0.<javax.crypto.SealedObject: java.lang.String paramsAlg> = $r6;

        $r7 = virtualinvoke r2.<java.io.ObjectInputStream$GetField: java.lang.Object get(java.lang.String,java.lang.Object)>("sealAlg", null);

        $r8 = (java.lang.String) $r7;

        r0.<javax.crypto.SealedObject: java.lang.String sealAlg> = $r8;

        return;
    }

    private static byte[] getSafeCopy(java.io.ObjectInputStream$GetField, java.lang.String) throws java.io.IOException
    {
        java.io.ObjectInputStream$GetField r0;
        java.lang.String r1;
        byte[] r2, $r4, $r6;
        java.lang.Object $r3, $r5;

        r0 := @parameter0: java.io.ObjectInputStream$GetField;

        r1 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<java.io.ObjectInputStream$GetField: java.lang.Object get(java.lang.String,java.lang.Object)>(r1, null);

        $r4 = (byte[]) $r3;

        r2 = (byte[]) $r4;

        if r2 == null goto label1;

        $r5 = virtualinvoke r2.<java.lang.Object: java.lang.Object clone()>();

        $r6 = (byte[]) $r5;

        goto label2;

     label1:
        $r6 = null;

     label2:
        return $r6;
    }

    public void <init>(java.io.Serializable, javax.crypto.Cipher) throws java.io.IOException, javax.crypto.IllegalBlockSizeException
    {
        javax.crypto.SealedObject r0;
        java.io.Serializable r1;
        javax.crypto.Cipher r2;
        java.io.ObjectOutputStream r3, $r8;
        java.io.ByteArrayOutputStream r4, $r7;
        java.security.AlgorithmParameters r5;
        java.lang.Throwable r6, $r16;
        byte[] $r9, $r12, $r13;
        java.lang.String $r10, $r11, $r17;
        java.lang.NullPointerException $r14;
        javax.crypto.BadPaddingException $r15, r19;
        java.io.IOException $r18;

        r0 := @this: javax.crypto.SealedObject;

        r1 := @parameter0: java.io.Serializable;

        r2 := @parameter1: javax.crypto.Cipher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r2 != null goto label01;

        $r14 = new java.lang.NullPointerException;

        specialinvoke $r14.<java.lang.NullPointerException: void <init>(java.lang.String)>("c == null");

        throw $r14;

     label01:
        r3 = null;

     label02:
        $r7 = new java.io.ByteArrayOutputStream;

        specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>()>();

        r4 = $r7;

        $r8 = new java.io.ObjectOutputStream;

        specialinvoke $r8.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(r4);

        r3 = $r8;

        virtualinvoke r3.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r1);

        virtualinvoke r3.<java.io.ObjectOutputStream: void flush()>();

        r5 = virtualinvoke r2.<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>();

        if r5 != null goto label03;

        $r9 = null;

        goto label04;

     label03:
        $r9 = virtualinvoke r5.<java.security.AlgorithmParameters: byte[] getEncoded()>();

     label04:
        r0.<javax.crypto.SealedObject: byte[] encodedParams> = $r9;

        if r5 != null goto label05;

        $r10 = null;

        goto label06;

     label05:
        $r10 = virtualinvoke r5.<java.security.AlgorithmParameters: java.lang.String getAlgorithm()>();

     label06:
        r0.<javax.crypto.SealedObject: java.lang.String paramsAlg> = $r10;

        $r11 = virtualinvoke r2.<javax.crypto.Cipher: java.lang.String getAlgorithm()>();

        r0.<javax.crypto.SealedObject: java.lang.String sealAlg> = $r11;

        $r12 = virtualinvoke r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r13 = virtualinvoke r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r12);

        r0.<javax.crypto.SealedObject: byte[] encryptedContent> = $r13;

     label07:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        goto label11;

     label08:
        $r15 := @caughtexception;

        r19 = $r15;

        $r18 = new java.io.IOException;

        $r17 = virtualinvoke r19.<javax.crypto.BadPaddingException: java.lang.String toString()>();

        specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>($r17);

        throw $r18;

     label09:
        $r16 := @caughtexception;

        r6 = $r16;

     label10:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        throw r6;

     label11:
        return;

        catch javax.crypto.BadPaddingException from label02 to label07 with label08;
        catch java.lang.Throwable from label02 to label07 with label09;
        catch java.lang.Throwable from label08 to label10 with label09;
    }

    protected void <init>(javax.crypto.SealedObject)
    {
        javax.crypto.SealedObject r0, r1;
        byte[] $r2, $r3, $r6, $r8, $r9, $r11;
        java.lang.String $r4, $r5;
        java.lang.Object $r7, $r10;
        java.lang.NullPointerException $r12;

        r0 := @this: javax.crypto.SealedObject;

        r1 := @parameter0: javax.crypto.SealedObject;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r12 = new java.lang.NullPointerException;

        specialinvoke $r12.<java.lang.NullPointerException: void <init>(java.lang.String)>("so == null");

        throw $r12;

     label1:
        $r2 = r1.<javax.crypto.SealedObject: byte[] encryptedContent>;

        if $r2 == null goto label2;

        $r9 = r1.<javax.crypto.SealedObject: byte[] encryptedContent>;

        $r10 = virtualinvoke $r9.<java.lang.Object: java.lang.Object clone()>();

        $r11 = (byte[]) $r10;

        goto label3;

     label2:
        $r11 = null;

     label3:
        r0.<javax.crypto.SealedObject: byte[] encryptedContent> = $r11;

        $r3 = r1.<javax.crypto.SealedObject: byte[] encodedParams>;

        if $r3 == null goto label4;

        $r6 = r1.<javax.crypto.SealedObject: byte[] encodedParams>;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Object clone()>();

        $r8 = (byte[]) $r7;

        goto label5;

     label4:
        $r8 = null;

     label5:
        r0.<javax.crypto.SealedObject: byte[] encodedParams> = $r8;

        $r4 = r1.<javax.crypto.SealedObject: java.lang.String sealAlg>;

        r0.<javax.crypto.SealedObject: java.lang.String sealAlg> = $r4;

        $r5 = r1.<javax.crypto.SealedObject: java.lang.String paramsAlg>;

        r0.<javax.crypto.SealedObject: java.lang.String paramsAlg> = $r5;

        return;
    }

    public final java.lang.String getAlgorithm()
    {
        javax.crypto.SealedObject r0;
        java.lang.String $r1;

        r0 := @this: javax.crypto.SealedObject;

        $r1 = r0.<javax.crypto.SealedObject: java.lang.String sealAlg>;

        return $r1;
    }

    public final java.lang.Object getObject(java.security.Key) throws java.io.IOException, java.lang.ClassNotFoundException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException
    {
        javax.crypto.SealedObject r0;
        java.security.Key r1;
        javax.crypto.Cipher r2;
        java.security.AlgorithmParameters r3;
        java.lang.String $r4, $r5, $r8, $r9, $r15, $r16, $r21, $r22, $r26;
        byte[] $r6, $r10, r27;
        java.lang.Object $r7;
        int $i0;
        java.security.InvalidKeyException $r11;
        java.security.NoSuchAlgorithmException $r12, $r17, $r18, $r23, $r24;
        java.lang.IllegalStateException $r13, r32;
        javax.crypto.IllegalBlockSizeException $r14, r30;
        java.security.InvalidAlgorithmParameterException $r19, r29;
        javax.crypto.BadPaddingException $r20, r31;
        javax.crypto.NoSuchPaddingException $r25, r28;

        r0 := @this: javax.crypto.SealedObject;

        r1 := @parameter0: java.security.Key;

        if r1 != null goto label1;

        $r11 = new java.security.InvalidKeyException;

        specialinvoke $r11.<java.security.InvalidKeyException: void <init>(java.lang.String)>("key == null");

        throw $r11;

     label1:
        $r4 = r0.<javax.crypto.SealedObject: java.lang.String sealAlg>;

        r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r4);

        $r5 = r0.<javax.crypto.SealedObject: java.lang.String paramsAlg>;

        if $r5 == null goto label2;

        $r8 = r0.<javax.crypto.SealedObject: java.lang.String paramsAlg>;

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i0 == 0 goto label2;

        $r9 = r0.<javax.crypto.SealedObject: java.lang.String paramsAlg>;

        r3 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>($r9);

        $r10 = r0.<javax.crypto.SealedObject: byte[] encodedParams>;

        virtualinvoke r3.<java.security.AlgorithmParameters: void init(byte[])>($r10);

        virtualinvoke r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(2, r1, r3);

        goto label3;

     label2:
        virtualinvoke r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(2, r1);

     label3:
        $r6 = r0.<javax.crypto.SealedObject: byte[] encryptedContent>;

        r27 = virtualinvoke r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6);

        $r7 = staticinvoke <javax.crypto.SealedObject: java.lang.Object readSerialized(byte[])>(r27);

     label4:
        return $r7;

     label5:
        $r25 := @caughtexception;

        r28 = $r25;

        $r24 = new java.security.NoSuchAlgorithmException;

        $r26 = virtualinvoke r28.<javax.crypto.NoSuchPaddingException: java.lang.String toString()>();

        specialinvoke $r24.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r26);

        throw $r24;

     label6:
        $r19 := @caughtexception;

        r29 = $r19;

        $r18 = new java.security.NoSuchAlgorithmException;

        $r21 = virtualinvoke r29.<java.security.InvalidAlgorithmParameterException: java.lang.String toString()>();

        specialinvoke $r18.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r21);

        throw $r18;

     label7:
        $r14 := @caughtexception;

        r30 = $r14;

        $r17 = new java.security.NoSuchAlgorithmException;

        $r16 = virtualinvoke r30.<javax.crypto.IllegalBlockSizeException: java.lang.String toString()>();

        specialinvoke $r17.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r16);

        throw $r17;

     label8:
        $r20 := @caughtexception;

        r31 = $r20;

        $r23 = new java.security.NoSuchAlgorithmException;

        $r22 = virtualinvoke r31.<javax.crypto.BadPaddingException: java.lang.String toString()>();

        specialinvoke $r23.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r22);

        throw $r23;

     label9:
        $r13 := @caughtexception;

        r32 = $r13;

        $r12 = new java.security.NoSuchAlgorithmException;

        $r15 = virtualinvoke r32.<java.lang.IllegalStateException: java.lang.String toString()>();

        specialinvoke $r12.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r15);

        throw $r12;

        catch javax.crypto.NoSuchPaddingException from label1 to label4 with label5;
        catch java.security.InvalidAlgorithmParameterException from label1 to label4 with label6;
        catch javax.crypto.IllegalBlockSizeException from label1 to label4 with label7;
        catch javax.crypto.BadPaddingException from label1 to label4 with label8;
        catch java.lang.IllegalStateException from label1 to label4 with label9;
    }

    public final java.lang.Object getObject(javax.crypto.Cipher) throws java.io.IOException, java.lang.ClassNotFoundException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        javax.crypto.SealedObject r0;
        javax.crypto.Cipher r1;
        byte[] r2, $r3;
        java.lang.Object $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: javax.crypto.SealedObject;

        r1 := @parameter0: javax.crypto.Cipher;

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("c == null");

        throw $r5;

     label1:
        $r3 = r0.<javax.crypto.SealedObject: byte[] encryptedContent>;

        r2 = virtualinvoke r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3);

        $r4 = staticinvoke <javax.crypto.SealedObject: java.lang.Object readSerialized(byte[])>(r2);

        return $r4;
    }

    public final java.lang.Object getObject(java.security.Key, java.lang.String) throws java.io.IOException, java.lang.ClassNotFoundException, java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException, java.security.InvalidKeyException
    {
        javax.crypto.SealedObject r0;
        java.security.Key r1;
        java.lang.String r2, $r6, $r7, $r10, $r11, $r16, $r17, $r22, $r23, $r27;
        javax.crypto.Cipher r3;
        java.security.AlgorithmParameters r4;
        java.lang.IllegalArgumentException $r5;
        boolean $z0;
        byte[] $r8, $r12, r28;
        java.lang.Object $r9;
        int $i0;
        java.security.NoSuchAlgorithmException $r13, $r18, $r19, $r24, $r25;
        java.security.InvalidAlgorithmParameterException $r14, r30;
        javax.crypto.IllegalBlockSizeException $r15, r31;
        javax.crypto.BadPaddingException $r20, r32;
        java.lang.IllegalStateException $r21, r33;
        javax.crypto.NoSuchPaddingException $r26, r29;

        r0 := @this: javax.crypto.SealedObject;

        r1 := @parameter0: java.security.Key;

        r2 := @parameter1: java.lang.String;

        if r2 == null goto label01;

        $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label02;

     label01:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("provider name empty or null");

        throw $r5;

     label02:
        $r6 = r0.<javax.crypto.SealedObject: java.lang.String sealAlg>;

        r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r6, r2);

        $r7 = r0.<javax.crypto.SealedObject: java.lang.String paramsAlg>;

        if $r7 == null goto label03;

        $r10 = r0.<javax.crypto.SealedObject: java.lang.String paramsAlg>;

        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i0 == 0 goto label03;

        $r11 = r0.<javax.crypto.SealedObject: java.lang.String paramsAlg>;

        r4 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>($r11);

        $r12 = r0.<javax.crypto.SealedObject: byte[] encodedParams>;

        virtualinvoke r4.<java.security.AlgorithmParameters: void init(byte[])>($r12);

        virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(2, r1, r4);

        goto label04;

     label03:
        virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(2, r1);

     label04:
        $r8 = r0.<javax.crypto.SealedObject: byte[] encryptedContent>;

        r28 = virtualinvoke r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r8);

        $r9 = staticinvoke <javax.crypto.SealedObject: java.lang.Object readSerialized(byte[])>(r28);

     label05:
        return $r9;

     label06:
        $r26 := @caughtexception;

        r29 = $r26;

        $r25 = new java.security.NoSuchAlgorithmException;

        $r27 = virtualinvoke r29.<javax.crypto.NoSuchPaddingException: java.lang.String toString()>();

        specialinvoke $r25.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r27);

        throw $r25;

     label07:
        $r14 := @caughtexception;

        r30 = $r14;

        $r13 = new java.security.NoSuchAlgorithmException;

        $r16 = virtualinvoke r30.<java.security.InvalidAlgorithmParameterException: java.lang.String toString()>();

        specialinvoke $r13.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r16);

        throw $r13;

     label08:
        $r15 := @caughtexception;

        r31 = $r15;

        $r18 = new java.security.NoSuchAlgorithmException;

        $r17 = virtualinvoke r31.<javax.crypto.IllegalBlockSizeException: java.lang.String toString()>();

        specialinvoke $r18.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r17);

        throw $r18;

     label09:
        $r20 := @caughtexception;

        r32 = $r20;

        $r19 = new java.security.NoSuchAlgorithmException;

        $r22 = virtualinvoke r32.<javax.crypto.BadPaddingException: java.lang.String toString()>();

        specialinvoke $r19.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r22);

        throw $r19;

     label10:
        $r21 := @caughtexception;

        r33 = $r21;

        $r24 = new java.security.NoSuchAlgorithmException;

        $r23 = virtualinvoke r33.<java.lang.IllegalStateException: java.lang.String toString()>();

        specialinvoke $r24.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r23);

        throw $r24;

        catch javax.crypto.NoSuchPaddingException from label02 to label05 with label06;
        catch java.security.InvalidAlgorithmParameterException from label02 to label05 with label07;
        catch javax.crypto.IllegalBlockSizeException from label02 to label05 with label08;
        catch javax.crypto.BadPaddingException from label02 to label05 with label09;
        catch java.lang.IllegalStateException from label02 to label05 with label10;
    }

    private static java.lang.Object readSerialized(byte[]) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        byte[] r0;
        java.io.ObjectInputStream r1, $r4;
        java.lang.Object r2;
        java.lang.Throwable r3, $r6;
        java.io.ByteArrayInputStream $r5;

        r0 := @parameter0: byte[];

        r1 = null;

     label1:
        $r4 = new java.io.ObjectInputStream;

        $r5 = new java.io.ByteArrayInputStream;

        specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[])>(r0);

        specialinvoke $r4.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r5);

        r1 = $r4;

        r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

     label2:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        return r2;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

     label4:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void <clinit>()
    {
        <javax.crypto.SealedObject: long serialVersionUID> = 4482838265551344752L;

        return;
    }
}
