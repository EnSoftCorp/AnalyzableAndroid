final class java.lang.reflect.Proxy$1 extends java.lang.Object implements java.util.Comparator
{

    void <init>()
    {
        java.lang.reflect.Proxy$1 r0;

        r0 := @this: java.lang.reflect.Proxy$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(java.lang.reflect.Method, java.lang.reflect.Method)
    {
        java.lang.reflect.Proxy$1 r0;
        java.lang.reflect.Method r1, r2;
        int i0;
        java.lang.Class r3, r4;
        java.util.Comparator $r5;
        boolean $z0, $z1;

        r0 := @this: java.lang.reflect.Proxy$1;

        r1 := @parameter0: java.lang.reflect.Method;

        r2 := @parameter1: java.lang.reflect.Method;

        $r5 = <java.lang.reflect.Method: java.util.Comparator ORDER_BY_SIGNATURE>;

        i0 = interfaceinvoke $r5.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r1, r2);

        if i0 == 0 goto label1;

        return i0;

     label1:
        r3 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        r4 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        if r3 != r4 goto label2;

        return 0;

     label2:
        $z0 = virtualinvoke r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $z1 = virtualinvoke r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r3);

        if $z1 == 0 goto label4;

        return -1;

     label4:
        return 0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        java.lang.reflect.Proxy$1 r0;
        java.lang.Object r1, r2;
        java.lang.reflect.Method $r3, $r4;
        int $i0;

        r0 := @this: java.lang.reflect.Proxy$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.reflect.Method) r1;

        $r3 = (java.lang.reflect.Method) r2;

        $i0 = virtualinvoke r0.<java.lang.reflect.Proxy$1: int compare(java.lang.reflect.Method,java.lang.reflect.Method)>($r4, $r3);

        return $i0;
    }
}
