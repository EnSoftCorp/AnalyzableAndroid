public class java.text.ChoiceFormat extends java.text.NumberFormat
{
    private static final long serialVersionUID;
    private double[] choiceLimits;
    private java.lang.String[] choiceFormats;

    public void <init>(double[], java.lang.String[])
    {
        java.text.ChoiceFormat r0;
        double[] r1;
        java.lang.String[] r2;

        r0 := @this: java.text.ChoiceFormat;

        r1 := @parameter0: double[];

        r2 := @parameter1: java.lang.String[];

        specialinvoke r0.<java.text.NumberFormat: void <init>()>();

        virtualinvoke r0.<java.text.ChoiceFormat: void setChoices(double[],java.lang.String[])>(r1, r2);

        return;
    }

    public void <init>(java.lang.String)
    {
        java.text.ChoiceFormat r0;
        java.lang.String r1;

        r0 := @this: java.text.ChoiceFormat;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.text.NumberFormat: void <init>()>();

        virtualinvoke r0.<java.text.ChoiceFormat: void applyPattern(java.lang.String)>(r1);

        return;
    }

    public void applyPattern(java.lang.String)
    {
        java.text.ChoiceFormat r0;
        java.lang.String r1, $r14, $r21, $r27, $r30;
        double[] r2, r7, $r12, $r26, $r29;
        java.util.ArrayList r3, $r8;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, i15, i16, i17;
        java.lang.StringBuffer r4, $r10;
        java.text.NumberFormat r5;
        java.text.ParsePosition r6, $r11;
        char c4;
        java.util.Locale $r9;
        java.lang.String[] $r13, $r28, $r32;
        double $d0, $d1, d2;
        byte $b9;
        java.lang.StringBuilder $r15, $r16, $r18, $r20, $r22, $r23, $r24, $r25;
        java.lang.IllegalArgumentException $r17, $r19;
        java.lang.Object $r31;
        java.lang.Number r33;

        r0 := @this: java.text.ChoiceFormat;

        r1 := @parameter0: java.lang.String;

        r2 = newarray (double)[5];

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r3 = $r8;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i1 = 0;

        i2 = 0;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        r4 = $r10;

        $r9 = <java.util.Locale: java.util.Locale US>;

        r5 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale)>($r9);

        $r11 = new java.text.ParsePosition;

        specialinvoke $r11.<java.text.ParsePosition: void <init>(int)>(0);

        r6 = $r11;

     label01:
        i15 = specialinvoke r0.<java.text.ChoiceFormat: int skipWhitespace(java.lang.String,int)>(r1, i2);

        if i15 < i0 goto label06;

        $i11 = lengthof r2;

        if i1 != $i11 goto label02;

        r0.<java.text.ChoiceFormat: double[] choiceLimits> = r2;

        goto label03;

     label02:
        $r26 = newarray (double)[i1];

        r0.<java.text.ChoiceFormat: double[] choiceLimits> = $r26;

        $r29 = r0.<java.text.ChoiceFormat: double[] choiceLimits>;

        staticinvoke <java.lang.System: void arraycopy(double[],int,double[],int,int)>(r2, 0, $r29, 0, i1);

     label03:
        $i14 = interfaceinvoke r3.<java.util.List: int size()>();

        $r28 = newarray (java.lang.String)[$i14];

        r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats> = $r28;

        i3 = 0;

     label04:
        $i13 = interfaceinvoke r3.<java.util.List: int size()>();

        if i3 >= $i13 goto label05;

        $r32 = r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats>;

        $r31 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i3);

        $r30 = (java.lang.String) $r31;

        $r32[i3] = $r30;

        i3 = i3 + 1;

        goto label04;

     label05:
        return;

     label06:
        virtualinvoke r6.<java.text.ParsePosition: void setIndex(int)>(i15);

        r33 = virtualinvoke r5.<java.text.NumberFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>(r1, r6);

        $i5 = virtualinvoke r6.<java.text.ParsePosition: int getIndex()>();

        i16 = specialinvoke r0.<java.text.ChoiceFormat: int skipWhitespace(java.lang.String,int)>(r1, $i5);

        $i6 = virtualinvoke r6.<java.text.ParsePosition: int getErrorIndex()>();

        if $i6 != -1 goto label07;

        if i16 < i0 goto label08;

     label07:
        $r12 = <libcore.util.EmptyArray: double[] DOUBLE>;

        r0.<java.text.ChoiceFormat: double[] choiceLimits> = $r12;

        $r13 = <libcore.util.EmptyArray: java.lang.String[] STRING>;

        r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats> = $r13;

        return;

     label08:
        i17 = i16 + 1;

        c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i16);

        $i7 = lengthof r2;

        if i1 != $i7 goto label09;

        $i12 = i1 * 2;

        r7 = newarray (double)[$i12];

        staticinvoke <java.lang.System: void arraycopy(double[],int,double[],int,int)>(r2, 0, r7, 0, i1);

        r2 = r7;

     label09:
        lookupswitch(c4)
        {
            case 35: goto label10;
            case 60: goto label11;
            case 8804: goto label10;
            default: goto label12;
        };

     label10:
        d2 = virtualinvoke r33.<java.lang.Number: double doubleValue()>();

        goto label13;

     label11:
        $d0 = virtualinvoke r33.<java.lang.Number: double doubleValue()>();

        d2 = staticinvoke <java.text.ChoiceFormat: double nextDouble(double)>($d0);

        goto label13;

     label12:
        $r19 = new java.lang.IllegalArgumentException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad character \'");

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' in template: ");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r27);

        throw $r19;

     label13:
        if i1 <= 0 goto label14;

        $i10 = i1 - 1;

        $d1 = r2[$i10];

        $b9 = d2 cmpg $d1;

        if $b9 > 0 goto label14;

        $r17 = new java.lang.IllegalArgumentException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad template: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r17;

     label14:
        virtualinvoke r4.<java.lang.StringBuffer: void setLength(int)>(0);

        virtualinvoke r6.<java.text.ParsePosition: void setIndex(int)>(i17);

        staticinvoke <java.text.ChoiceFormat: boolean upTo(java.lang.String,java.text.ParsePosition,java.lang.StringBuffer,char)>(r1, r6, r4, 124);

        i2 = virtualinvoke r6.<java.text.ParsePosition: int getIndex()>();

        $i8 = i1;

        i1 = i1 + 1;

        r2[$i8] = d2;

        $r14 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r14);

        goto label01;
    }

    public java.lang.Object clone()
    {
        java.text.ChoiceFormat r0, r1;
        java.lang.Object $r2, $r4, $r7;
        double[] $r3, $r5;
        java.lang.String[] $r6, $r8;

        r0 := @this: java.text.ChoiceFormat;

        $r2 = specialinvoke r0.<java.text.NumberFormat: java.lang.Object clone()>();

        r1 = (java.text.ChoiceFormat) $r2;

        $r3 = r0.<java.text.ChoiceFormat: double[] choiceLimits>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>();

        $r5 = (double[]) $r4;

        r1.<java.text.ChoiceFormat: double[] choiceLimits> = $r5;

        $r6 = r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats>;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Object clone()>();

        $r8 = (java.lang.String[]) $r7;

        r1.<java.text.ChoiceFormat: java.lang.String[] choiceFormats> = $r8;

        return r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.text.ChoiceFormat r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        double[] $r3, $r4;
        java.lang.String[] $r5, $r6;

        r0 := @this: java.text.ChoiceFormat;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof java.text.ChoiceFormat;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (java.text.ChoiceFormat) r1;

        $r4 = r0.<java.text.ChoiceFormat: double[] choiceLimits>;

        $r3 = r2.<java.text.ChoiceFormat: double[] choiceLimits>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r4, $r3);

        if $z1 == 0 goto label3;

        $r6 = r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats>;

        $r5 = r2.<java.text.ChoiceFormat: java.lang.String[] choiceFormats>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r6, $r5);

        if $z2 == 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    public java.lang.StringBuffer format(double, java.lang.StringBuffer, java.text.FieldPosition)
    {
        java.text.ChoiceFormat r0;
        double d0, $d1;
        java.lang.StringBuffer r1, $r7, $r11;
        java.text.FieldPosition r2;
        int i0, $i1, $i2;
        double[] $r3, $r8;
        java.lang.String[] $r4, $r5, $r10;
        java.lang.String $r6, $r9;
        byte $b3;

        r0 := @this: java.text.ChoiceFormat;

        d0 := @parameter0: double;

        r1 := @parameter1: java.lang.StringBuffer;

        r2 := @parameter2: java.text.FieldPosition;

        $r3 = r0.<java.text.ChoiceFormat: double[] choiceLimits>;

        $i1 = lengthof $r3;

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label3;

        $r8 = r0.<java.text.ChoiceFormat: double[] choiceLimits>;

        $d1 = $r8[i0];

        $b3 = $d1 cmpg d0;

        if $b3 > 0 goto label2;

        $r10 = r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats>;

        $r9 = $r10[i0];

        $r11 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        return $r11;

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        $r4 = r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats>;

        $i2 = lengthof $r4;

        if $i2 != 0 goto label4;

        $r7 = r1;

        goto label5;

     label4:
        $r5 = r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats>;

        $r6 = $r5[0];

        $r7 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

     label5:
        return $r7;
    }

    public java.lang.StringBuffer format(long, java.lang.StringBuffer, java.text.FieldPosition)
    {
        java.text.ChoiceFormat r0;
        long l0;
        java.lang.StringBuffer r1, $r3;
        java.text.FieldPosition r2;
        double $d0;

        r0 := @this: java.text.ChoiceFormat;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.StringBuffer;

        r2 := @parameter2: java.text.FieldPosition;

        $d0 = (double) l0;

        $r3 = virtualinvoke r0.<java.text.ChoiceFormat: java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition)>($d0, r1, r2);

        return $r3;
    }

    public java.lang.Object[] getFormats()
    {
        java.text.ChoiceFormat r0;
        java.lang.String[] $r1;

        r0 := @this: java.text.ChoiceFormat;

        $r1 = r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats>;

        return $r1;
    }

    public double[] getLimits()
    {
        java.text.ChoiceFormat r0;
        double[] $r1;

        r0 := @this: java.text.ChoiceFormat;

        $r1 = r0.<java.text.ChoiceFormat: double[] choiceLimits>;

        return $r1;
    }

    public int hashCode()
    {
        java.text.ChoiceFormat r0;
        int i0, i1, $i3, $i6, $i7, $i8;
        long l2, $l4, $l5;
        double[] $r1, $r2;
        double $d0;
        java.lang.String[] $r3;
        java.lang.String $r4;

        r0 := @this: java.text.ChoiceFormat;

        i0 = 0;

        i1 = 0;

     label1:
        $r1 = r0.<java.text.ChoiceFormat: double[] choiceLimits>;

        $i3 = lengthof $r1;

        if i1 >= $i3 goto label2;

        $r2 = r0.<java.text.ChoiceFormat: double[] choiceLimits>;

        $d0 = $r2[i1];

        l2 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $l4 = l2 >>> 32;

        $l5 = l2 ^ $l4;

        $i6 = (int) $l5;

        $r3 = r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats>;

        $r4 = $r3[i1];

        $i7 = virtualinvoke $r4.<java.lang.String: int hashCode()>();

        $i8 = $i6 + $i7;

        i0 = i0 + $i8;

        i1 = i1 + 1;

        goto label1;

     label2:
        return i0;
    }

    public static final double nextDouble(double)
    {
        double d0, $d1;
        long l0, $l4;
        byte $b1, $b2, $b3;

        d0 := @parameter0: double;

        $b1 = d0 cmpl #Infinity;

        if $b1 != 0 goto label1;

        return d0;

     label1:
        $b2 = d0 cmpl 0.0;

        if $b2 != 0 goto label2;

        l0 = 0L;

        goto label3;

     label2:
        l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

     label3:
        $b3 = d0 cmpg 0.0;

        if $b3 >= 0 goto label4;

        $l4 = l0 - 1L;

        goto label5;

     label4:
        $l4 = l0 + 1L;

     label5:
        $d1 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l4);

        return $d1;
    }

    public static double nextDouble(double, boolean)
    {
        double d0, $d1;
        boolean z0;

        d0 := @parameter0: double;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $d1 = staticinvoke <java.text.ChoiceFormat: double nextDouble(double)>(d0);

        goto label2;

     label1:
        $d1 = staticinvoke <java.text.ChoiceFormat: double previousDouble(double)>(d0);

     label2:
        return $d1;
    }

    public java.lang.Number parse(java.lang.String, java.text.ParsePosition)
    {
        java.text.ChoiceFormat r0;
        java.lang.String r1, $r6, $r8;
        java.text.ParsePosition r2;
        int i0, i1, $i2, $i3, $i4;
        java.lang.String[] $r3, $r5, $r7;
        java.lang.Double $r4, $r10;
        boolean $z0;
        double[] $r9;
        double $d0;

        r0 := @this: java.text.ChoiceFormat;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.text.ParsePosition;

        i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        i1 = 0;

     label1:
        $r3 = r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats>;

        $i2 = lengthof $r3;

        if i1 >= $i2 goto label3;

        $r5 = r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats>;

        $r6 = $r5[i1];

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String,int)>($r6, i0);

        if $z0 == 0 goto label2;

        $r7 = r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats>;

        $r8 = $r7[i1];

        $i3 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i4 = i0 + $i3;

        virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>($i4);

        $r10 = new java.lang.Double;

        $r9 = r0.<java.text.ChoiceFormat: double[] choiceLimits>;

        $d0 = $r9[i1];

        specialinvoke $r10.<java.lang.Double: void <init>(double)>($d0);

        return $r10;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke r2.<java.text.ParsePosition: void setErrorIndex(int)>(i0);

        $r4 = new java.lang.Double;

        specialinvoke $r4.<java.lang.Double: void <init>(double)>(#NaN);

        return $r4;
    }

    public static final double previousDouble(double)
    {
        double d0, $d1;
        long l0, $l4;
        byte $b1, $b2, $b3;

        d0 := @parameter0: double;

        $b1 = d0 cmpl #-Infinity;

        if $b1 != 0 goto label1;

        return d0;

     label1:
        $b2 = d0 cmpl 0.0;

        if $b2 != 0 goto label2;

        l0 = -9223372036854775808L;

        goto label3;

     label2:
        l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

     label3:
        $b3 = d0 cmpg 0.0;

        if $b3 > 0 goto label4;

        $l4 = l0 + 1L;

        goto label5;

     label4:
        $l4 = l0 - 1L;

     label5:
        $d1 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l4);

        return $d1;
    }

    public void setChoices(double[], java.lang.String[])
    {
        java.text.ChoiceFormat r0;
        double[] r1;
        java.lang.String[] r2;
        int $i0, $i1, $i2, $i3;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: java.text.ChoiceFormat;

        r1 := @parameter0: double[];

        r2 := @parameter1: java.lang.String[];

        $i1 = lengthof r1;

        $i0 = lengthof r2;

        if $i1 == $i0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("limits.length != formats.length: ");

        $i2 = lengthof r1;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != ");

        $i3 = lengthof r2;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r3;

     label1:
        r0.<java.text.ChoiceFormat: double[] choiceLimits> = r1;

        r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats> = r2;

        return;
    }

    private int skipWhitespace(java.lang.String, int)
    {
        java.text.ChoiceFormat r0;
        java.lang.String r1;
        int i0, i1;
        char $c2;
        boolean $z0;

        r0 := @this: java.text.ChoiceFormat;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 = virtualinvoke r1.<java.lang.String: int length()>();

     label1:
        if i0 >= i1 goto label2;

        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c2);

        if $z0 == 0 goto label2;

        i0 = i0 + 1;

        goto label1;

     label2:
        return i0;
    }

    public java.lang.String toPattern()
    {
        java.text.ChoiceFormat r0;
        java.lang.StringBuilder r1, $r4;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String r2, r3, $r6, $r12, $r13;
        boolean z0, $z1;
        double[] $r5, $r7, $r8;
        double $d0, $d1, $d2;
        java.lang.String[] $r10, $r14;

        r0 := @this: java.text.ChoiceFormat;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r1 = $r4;

        i0 = 0;

     label1:
        $r5 = r0.<java.text.ChoiceFormat: double[] choiceLimits>;

        $i1 = lengthof $r5;

        if i0 >= $i1 goto label9;

        if i0 == 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(124);

     label2:
        $r7 = r0.<java.text.ChoiceFormat: double[] choiceLimits>;

        $d0 = $r7[i0];

        $d1 = staticinvoke <java.text.ChoiceFormat: double previousDouble(double)>($d0);

        r2 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d1);

        $r8 = r0.<java.text.ChoiceFormat: double[] choiceLimits>;

        $d2 = $r8[i0];

        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d2);

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        $i3 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i2 >= $i3 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(60);

        goto label4;

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(35);

     label4:
        $r10 = r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats>;

        $r12 = $r10[i0];

        $i4 = virtualinvoke $r12.<java.lang.String: int indexOf(int)>(124);

        if $i4 == -1 goto label5;

        $z1 = 1;

        goto label6;

     label5:
        $z1 = 0;

     label6:
        z0 = $z1;

        if z0 == 0 goto label7;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

     label7:
        $r14 = r0.<java.text.ChoiceFormat: java.lang.String[] choiceFormats>;

        $r13 = $r14[i0];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        if z0 == 0 goto label8;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

     label8:
        i0 = i0 + 1;

        goto label1;

     label9:
        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static void <clinit>()
    {
        <java.text.ChoiceFormat: long serialVersionUID> = 1795184449645032964L;

        return;
    }
}
