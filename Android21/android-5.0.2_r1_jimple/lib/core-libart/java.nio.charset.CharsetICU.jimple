final class java.nio.charset.CharsetICU extends java.nio.charset.Charset
{
    private final java.lang.String icuCanonicalName;

    protected void <init>(java.lang.String, java.lang.String, java.lang.String[])
    {
        java.nio.charset.CharsetICU r0;
        java.lang.String r1, r2;
        java.lang.String[] r3;

        r0 := @this: java.nio.charset.CharsetICU;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        specialinvoke r0.<java.nio.charset.Charset: void <init>(java.lang.String,java.lang.String[])>(r1, r3);

        r0.<java.nio.charset.CharsetICU: java.lang.String icuCanonicalName> = r2;

        return;
    }

    public java.nio.charset.CharsetDecoder newDecoder()
    {
        java.nio.charset.CharsetICU r0;
        java.lang.String $r1;
        java.nio.charset.CharsetDecoderICU $r2;

        r0 := @this: java.nio.charset.CharsetICU;

        $r1 = r0.<java.nio.charset.CharsetICU: java.lang.String icuCanonicalName>;

        $r2 = staticinvoke <java.nio.charset.CharsetDecoderICU: java.nio.charset.CharsetDecoderICU newInstance(java.nio.charset.Charset,java.lang.String)>(r0, $r1);

        return $r2;
    }

    public java.nio.charset.CharsetEncoder newEncoder()
    {
        java.nio.charset.CharsetICU r0;
        java.lang.String $r1;
        java.nio.charset.CharsetEncoderICU $r2;

        r0 := @this: java.nio.charset.CharsetICU;

        $r1 = r0.<java.nio.charset.CharsetICU: java.lang.String icuCanonicalName>;

        $r2 = staticinvoke <java.nio.charset.CharsetEncoderICU: java.nio.charset.CharsetEncoderICU newInstance(java.nio.charset.Charset,java.lang.String)>(r0, $r1);

        return $r2;
    }

    public boolean contains(java.nio.charset.Charset)
    {
        java.nio.charset.CharsetICU r0;
        java.nio.charset.Charset r1;
        boolean $z0, $z1;
        java.lang.String $r2, $r3;

        r0 := @this: java.nio.charset.CharsetICU;

        r1 := @parameter0: java.nio.charset.Charset;

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r0.<java.nio.charset.CharsetICU: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $r2 = virtualinvoke r0.<java.nio.charset.CharsetICU: java.lang.String name()>();

        $r3 = virtualinvoke r1.<java.nio.charset.Charset: java.lang.String name()>();

        $z1 = staticinvoke <libcore.icu.NativeConverter: boolean contains(java.lang.String,java.lang.String)>($r2, $r3);

        return $z1;
    }
}
