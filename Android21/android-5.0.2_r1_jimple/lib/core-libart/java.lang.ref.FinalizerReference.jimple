public final class java.lang.ref.FinalizerReference extends java.lang.ref.Reference
{
    public static final java.lang.ref.ReferenceQueue queue;
    private static final java.lang.Object LIST_LOCK;
    private static java.lang.ref.FinalizerReference head;
    private java.lang.ref.FinalizerReference prev;
    private java.lang.ref.FinalizerReference next;
    private java.lang.Object zombie;

    public void <init>(java.lang.Object, java.lang.ref.ReferenceQueue)
    {
        java.lang.ref.FinalizerReference r0;
        java.lang.Object r1;
        java.lang.ref.ReferenceQueue r2;

        r0 := @this: java.lang.ref.FinalizerReference;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.ref.ReferenceQueue;

        specialinvoke r0.<java.lang.ref.Reference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>(r1, r2);

        return;
    }

    public java.lang.Object get()
    {
        java.lang.ref.FinalizerReference r0;
        java.lang.Object $r1;

        r0 := @this: java.lang.ref.FinalizerReference;

        $r1 = r0.<java.lang.ref.FinalizerReference: java.lang.Object zombie>;

        return $r1;
    }

    public void clear()
    {
        java.lang.ref.FinalizerReference r0;

        r0 := @this: java.lang.ref.FinalizerReference;

        r0.<java.lang.ref.FinalizerReference: java.lang.Object zombie> = null;

        return;
    }

    public static void add(java.lang.Object)
    {
        java.lang.Object r0, r2, $r6;
        java.lang.ref.FinalizerReference r1, $r4, $r7, $r8, $r9;
        java.lang.Throwable r3, $r10;
        java.lang.ref.ReferenceQueue $r5;

        r0 := @parameter0: java.lang.Object;

        $r4 = new java.lang.ref.FinalizerReference;

        $r5 = <java.lang.ref.FinalizerReference: java.lang.ref.ReferenceQueue queue>;

        specialinvoke $r4.<java.lang.ref.FinalizerReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>(r0, $r5);

        r1 = $r4;

        $r6 = <java.lang.ref.FinalizerReference: java.lang.Object LIST_LOCK>;

        r2 = $r6;

        entermonitor $r6;

     label1:
        r1.<java.lang.ref.FinalizerReference: java.lang.ref.FinalizerReference prev> = null;

        $r7 = <java.lang.ref.FinalizerReference: java.lang.ref.FinalizerReference head>;

        r1.<java.lang.ref.FinalizerReference: java.lang.ref.FinalizerReference next> = $r7;

        $r8 = <java.lang.ref.FinalizerReference: java.lang.ref.FinalizerReference head>;

        if $r8 == null goto label2;

        $r9 = <java.lang.ref.FinalizerReference: java.lang.ref.FinalizerReference head>;

        $r9.<java.lang.ref.FinalizerReference: java.lang.ref.FinalizerReference prev> = r1;

     label2:
        <java.lang.ref.FinalizerReference: java.lang.ref.FinalizerReference head> = r1;

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static void remove(java.lang.ref.FinalizerReference)
    {
        java.lang.ref.FinalizerReference r0, r2, r3;
        java.lang.Object r1, $r5;
        java.lang.Throwable r4, $r6;

        r0 := @parameter0: java.lang.ref.FinalizerReference;

        $r5 = <java.lang.ref.FinalizerReference: java.lang.Object LIST_LOCK>;

        r1 = $r5;

        entermonitor $r5;

     label1:
        r2 = r0.<java.lang.ref.FinalizerReference: java.lang.ref.FinalizerReference next>;

        r3 = r0.<java.lang.ref.FinalizerReference: java.lang.ref.FinalizerReference prev>;

        r0.<java.lang.ref.FinalizerReference: java.lang.ref.FinalizerReference next> = null;

        r0.<java.lang.ref.FinalizerReference: java.lang.ref.FinalizerReference prev> = null;

        if r3 == null goto label2;

        r3.<java.lang.ref.FinalizerReference: java.lang.ref.FinalizerReference next> = r2;

        goto label3;

     label2:
        <java.lang.ref.FinalizerReference: java.lang.ref.FinalizerReference head> = r2;

     label3:
        if r2 == null goto label4;

        r2.<java.lang.ref.FinalizerReference: java.lang.ref.FinalizerReference prev> = r3;

     label4:
        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r6 := @caughtexception;

        r4 = $r6;

        exitmonitor r1;

     label7:
        throw r4;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static void finalizeAllEnqueued() throws java.lang.InterruptedException
    {
        java.lang.ref.FinalizerReference$Sentinel r0, $r1;
        boolean $z0;

     label1:
        $r1 = new java.lang.ref.FinalizerReference$Sentinel;

        specialinvoke $r1.<java.lang.ref.FinalizerReference$Sentinel: void <init>(java.lang.ref.FinalizerReference$1)>(null);

        r0 = $r1;

        $z0 = staticinvoke <java.lang.ref.FinalizerReference: boolean enqueueSentinelReference(java.lang.ref.FinalizerReference$Sentinel)>(r0);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<java.lang.ref.FinalizerReference$Sentinel: void awaitFinalization()>();

        return;
    }

    private static boolean enqueueSentinelReference(java.lang.ref.FinalizerReference$Sentinel)
    {
        java.lang.ref.FinalizerReference$Sentinel r0;
        java.lang.Object r1, $r5, $r7;
        java.lang.ref.FinalizerReference r2, r3;
        java.lang.Throwable r4, $r8;
        java.lang.AssertionError $r6;
        boolean $z0;

        r0 := @parameter0: java.lang.ref.FinalizerReference$Sentinel;

        $r5 = <java.lang.ref.FinalizerReference: java.lang.Object LIST_LOCK>;

        r1 = $r5;

        entermonitor $r5;

     label01:
        r2 = <java.lang.ref.FinalizerReference: java.lang.ref.FinalizerReference head>;

     label02:
        if r2 == null goto label07;

        $r7 = r2.<java.lang.ref.FinalizerReference: java.lang.Object referent>;

        if $r7 != r0 goto label06;

        r3 = r2;

        r3.<java.lang.ref.FinalizerReference: java.lang.Object referent> = null;

        r3.<java.lang.ref.FinalizerReference: java.lang.Object zombie> = r0;

        $z0 = specialinvoke r3.<java.lang.ref.FinalizerReference: boolean makeCircularListIfUnenqueued()>();

        if $z0 != 0 goto label04;

        exitmonitor r1;

     label03:
        return 0;

     label04:
        staticinvoke <java.lang.ref.ReferenceQueue: void add(java.lang.ref.Reference)>(r3);

        exitmonitor r1;

     label05:
        return 1;

     label06:
        r2 = r2.<java.lang.ref.FinalizerReference: java.lang.ref.FinalizerReference next>;

        goto label02;

     label07:
        exitmonitor r1;

     label08:
        goto label11;

     label09:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r1;

     label10:
        throw r4;

     label11:
        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>("newly-created live Sentinel not on list!");

        throw $r6;

        catch java.lang.Throwable from label01 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private native boolean makeCircularListIfUnenqueued();

    static void <clinit>()
    {
        java.lang.ref.ReferenceQueue $r0;
        java.lang.Object $r1;

        $r0 = new java.lang.ref.ReferenceQueue;

        specialinvoke $r0.<java.lang.ref.ReferenceQueue: void <init>()>();

        <java.lang.ref.FinalizerReference: java.lang.ref.ReferenceQueue queue> = $r0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <java.lang.ref.FinalizerReference: java.lang.Object LIST_LOCK> = $r1;

        <java.lang.ref.FinalizerReference: java.lang.ref.FinalizerReference head> = null;

        return;
    }
}
