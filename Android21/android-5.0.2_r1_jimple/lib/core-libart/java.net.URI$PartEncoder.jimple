class java.net.URI$PartEncoder extends libcore.net.UriCodec
{
    private final java.lang.String extraLegalCharacters;

    void <init>(java.lang.String)
    {
        java.net.URI$PartEncoder r0;
        java.lang.String r1;

        r0 := @this: java.net.URI$PartEncoder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<libcore.net.UriCodec: void <init>()>();

        r0.<java.net.URI$PartEncoder: java.lang.String extraLegalCharacters> = r1;

        return;
    }

    protected boolean isRetained(char)
    {
        java.net.URI$PartEncoder r0;
        char c0;
        java.lang.String $r1, $r2, $r3;
        int $i1, $i2, $i3;
        boolean $z0, $z1, $z2;

        r0 := @this: java.net.URI$PartEncoder;

        c0 := @parameter0: char;

        $r1 = "_-!.~\'()*";

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(c0);

        if $i1 != -1 goto label1;

        $r2 = ",;:$&+=";

        $i2 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(c0);

        if $i2 != -1 goto label1;

        $r3 = r0.<java.net.URI$PartEncoder: java.lang.String extraLegalCharacters>;

        $i3 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(c0);

        if $i3 != -1 goto label1;

        if c0 <= 127 goto label2;

        $z1 = staticinvoke <java.lang.Character: boolean isSpaceChar(char)>(c0);

        if $z1 != 0 goto label2;

        $z2 = staticinvoke <java.lang.Character: boolean isISOControl(char)>(c0);

        if $z2 != 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }
}
