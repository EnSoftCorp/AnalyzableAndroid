class java.net.URLClassLoader$IndexFile extends java.lang.Object
{
    private java.util.HashMap map;

    static java.net.URLClassLoader$IndexFile readIndexFile(java.util.jar.JarFile, java.util.jar.JarEntry, java.net.URL)
    {
        java.util.jar.JarFile r0;
        java.util.jar.JarEntry r1;
        java.net.URL r2, r8, $r11, $r22;
        java.io.BufferedReader r3, $r17;
        java.io.InputStream r4;
        java.lang.String r5, r6, $r20, $r21, $r27, r34, r35;
        java.util.HashMap r7, $r18;
        java.util.ArrayList r9, $r29;
        java.lang.Throwable r10, $r30;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r23, $r24, $r25, $r26;
        java.io.InputStreamReader $r16;
        java.nio.charset.Charset $r19;
        boolean $z0, $z1, $z2;
        java.lang.Object $r28;
        java.net.MalformedURLException $r31;
        java.net.URLClassLoader$IndexFile $r32, r36;
        java.io.IOException $r33;

        r0 := @parameter0: java.util.jar.JarFile;

        r1 := @parameter1: java.util.jar.JarEntry;

        r2 := @parameter2: java.net.URL;

        r3 = null;

        r4 = null;

     label01:
        $r11 = staticinvoke <java.net.URLClassLoader$IndexFile: java.net.URL getParentURL(java.net.URL)>(r2);

        r5 = virtualinvoke $r11.<java.net.URL: java.lang.String toExternalForm()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("jar:");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        r6 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = virtualinvoke r0.<java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r1);

        $r17 = new java.io.BufferedReader;

        $r16 = new java.io.InputStreamReader;

        $r19 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        specialinvoke $r16.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>(r4, $r19);

        specialinvoke $r17.<java.io.BufferedReader: void <init>(java.io.Reader)>($r16);

        r3 = $r17;

        $r18 = new java.util.HashMap;

        specialinvoke $r18.<java.util.HashMap: void <init>()>();

        r7 = $r18;

        $r21 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r21 != null goto label03;

     label02:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        return null;

     label03:
        $r20 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r20 != null goto label05;

     label04:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        return null;

     label05:
        r34 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>();

        if r34 != null goto label06;

        goto label13;

     label06:
        $r22 = new java.net.URL;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!/");

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.net.URL: void <init>(java.lang.String)>($r27);

        r8 = $r22;

     label07:
        r35 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>();

        if r35 != null goto label08;

        goto label13;

     label08:
        $z0 = virtualinvoke r35.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label09;

        goto label12;

     label09:
        $z1 = virtualinvoke r7.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r35);

        if $z1 == 0 goto label10;

        $r28 = virtualinvoke r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r35);

        r9 = (java.util.ArrayList) $r28;

        goto label11;

     label10:
        $r29 = new java.util.ArrayList;

        specialinvoke $r29.<java.util.ArrayList: void <init>()>();

        r9 = $r29;

        virtualinvoke r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r35, r9);

     label11:
        virtualinvoke r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

        goto label07;

     label12:
        goto label05;

     label13:
        $z2 = virtualinvoke r7.<java.util.HashMap: boolean isEmpty()>();

        if $z2 != 0 goto label15;

        $r32 = new java.net.URLClassLoader$IndexFile;

        specialinvoke $r32.<java.net.URLClassLoader$IndexFile: void <init>(java.util.HashMap)>(r7);

        r36 = $r32;

     label14:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        return r36;

     label15:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        goto label22;

     label16:
        $r31 := @caughtexception;

     label17:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        goto label22;

     label18:
        $r33 := @caughtexception;

     label19:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        goto label22;

     label20:
        $r30 := @caughtexception;

        r10 = $r30;

     label21:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        throw r10;

     label22:
        return null;

        catch java.net.MalformedURLException from label01 to label02 with label16;
        catch java.net.MalformedURLException from label03 to label04 with label16;
        catch java.net.MalformedURLException from label05 to label14 with label16;
        catch java.io.IOException from label01 to label02 with label18;
        catch java.io.IOException from label03 to label04 with label18;
        catch java.io.IOException from label05 to label14 with label18;
        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label05 to label14 with label20;
        catch java.lang.Throwable from label16 to label17 with label20;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
    }

    private static java.net.URL getParentURL(java.net.URL) throws java.io.IOException
    {
        java.net.URL r0, r1, r4, $r8;
        java.lang.String r2, r3, $r9, $r10, r14;
        java.net.URLConnection $r5;
        java.net.JarURLConnection $r6;
        java.io.File $r7;
        char $c0, $c1;
        int $i2;
        java.lang.StringBuilder $r11, $r12, $r13;

        r0 := @parameter0: java.net.URL;

        $r5 = virtualinvoke r0.<java.net.URL: java.net.URLConnection openConnection()>();

        $r6 = (java.net.JarURLConnection) $r5;

        r1 = virtualinvoke $r6.<java.net.JarURLConnection: java.net.URL getJarFileURL()>();

        r2 = virtualinvoke r1.<java.net.URL: java.lang.String getFile()>();

        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>(r2);

        r3 = virtualinvoke $r7.<java.io.File: java.lang.String getParent()>();

        $c0 = <java.io.File: char separatorChar>;

        r14 = virtualinvoke r3.<java.lang.String: java.lang.String replace(char,char)>($c0, 47);

        $c1 = virtualinvoke r14.<java.lang.String: char charAt(int)>(0);

        if $c1 == 47 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r8 = new java.net.URL;

        $r9 = virtualinvoke r1.<java.net.URL: java.lang.String getProtocol()>();

        $r10 = virtualinvoke r1.<java.net.URL: java.lang.String getHost()>();

        $i2 = virtualinvoke r1.<java.net.URL: int getPort()>();

        specialinvoke $r8.<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String)>($r9, $r10, $i2, r14);

        r4 = $r8;

        return r4;
    }

    public void <init>(java.util.HashMap)
    {
        java.net.URLClassLoader$IndexFile r0;
        java.util.HashMap r1;

        r0 := @this: java.net.URLClassLoader$IndexFile;

        r1 := @parameter0: java.util.HashMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.net.URLClassLoader$IndexFile: java.util.HashMap map> = r1;

        return;
    }

    java.util.ArrayList get(java.lang.String)
    {
        java.net.URLClassLoader$IndexFile r0;
        java.lang.String r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.util.ArrayList $r4;

        r0 := @this: java.net.URLClassLoader$IndexFile;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<java.net.URLClassLoader$IndexFile: java.util.HashMap map>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.util.ArrayList) $r3;

        return $r4;
    }
}
