public class java.lang.reflect.UndeclaredThrowableException extends java.lang.RuntimeException
{
    private static final long serialVersionUID;
    private java.lang.Throwable undeclaredThrowable;

    public void <init>(java.lang.Throwable)
    {
        java.lang.reflect.UndeclaredThrowableException r0;
        java.lang.Throwable r1;

        r0 := @this: java.lang.reflect.UndeclaredThrowableException;

        r1 := @parameter0: java.lang.Throwable;

        specialinvoke r0.<java.lang.RuntimeException: void <init>()>();

        r0.<java.lang.reflect.UndeclaredThrowableException: java.lang.Throwable undeclaredThrowable> = r1;

        virtualinvoke r0.<java.lang.reflect.UndeclaredThrowableException: java.lang.Throwable initCause(java.lang.Throwable)>(r1);

        return;
    }

    public void <init>(java.lang.Throwable, java.lang.String)
    {
        java.lang.reflect.UndeclaredThrowableException r0;
        java.lang.Throwable r1;
        java.lang.String r2;

        r0 := @this: java.lang.reflect.UndeclaredThrowableException;

        r1 := @parameter0: java.lang.Throwable;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(r2);

        r0.<java.lang.reflect.UndeclaredThrowableException: java.lang.Throwable undeclaredThrowable> = r1;

        virtualinvoke r0.<java.lang.reflect.UndeclaredThrowableException: java.lang.Throwable initCause(java.lang.Throwable)>(r1);

        return;
    }

    public java.lang.Throwable getUndeclaredThrowable()
    {
        java.lang.reflect.UndeclaredThrowableException r0;
        java.lang.Throwable $r1;

        r0 := @this: java.lang.reflect.UndeclaredThrowableException;

        $r1 = r0.<java.lang.reflect.UndeclaredThrowableException: java.lang.Throwable undeclaredThrowable>;

        return $r1;
    }

    public java.lang.Throwable getCause()
    {
        java.lang.reflect.UndeclaredThrowableException r0;
        java.lang.Throwable $r1;

        r0 := @this: java.lang.reflect.UndeclaredThrowableException;

        $r1 = r0.<java.lang.reflect.UndeclaredThrowableException: java.lang.Throwable undeclaredThrowable>;

        return $r1;
    }

    public static void <clinit>()
    {
        <java.lang.reflect.UndeclaredThrowableException: long serialVersionUID> = 330127114055056639L;

        return;
    }
}
