class org.apache.harmony.xml.ExpatParser$CurrentAttributes extends org.apache.harmony.xml.ExpatAttributes
{
    final org.apache.harmony.xml.ExpatParser this$0;

    private void <init>(org.apache.harmony.xml.ExpatParser)
    {
        org.apache.harmony.xml.ExpatParser$CurrentAttributes r0;
        org.apache.harmony.xml.ExpatParser r1;

        r0 := @this: org.apache.harmony.xml.ExpatParser$CurrentAttributes;

        r1 := @parameter0: org.apache.harmony.xml.ExpatParser;

        r0.<org.apache.harmony.xml.ExpatParser$CurrentAttributes: org.apache.harmony.xml.ExpatParser this$0> = r1;

        specialinvoke r0.<org.apache.harmony.xml.ExpatAttributes: void <init>()>();

        return;
    }

    public long getParserPointer()
    {
        org.apache.harmony.xml.ExpatParser$CurrentAttributes r0;
        org.apache.harmony.xml.ExpatParser $r1;
        long $l0;

        r0 := @this: org.apache.harmony.xml.ExpatParser$CurrentAttributes;

        $r1 = r0.<org.apache.harmony.xml.ExpatParser$CurrentAttributes: org.apache.harmony.xml.ExpatParser this$0>;

        $l0 = staticinvoke <org.apache.harmony.xml.ExpatParser: long access$1000(org.apache.harmony.xml.ExpatParser)>($r1);

        return $l0;
    }

    public long getPointer()
    {
        org.apache.harmony.xml.ExpatParser$CurrentAttributes r0;
        org.apache.harmony.xml.ExpatParser $r1, $r2;
        boolean $z0;
        long $l0;
        java.lang.IllegalStateException $r3;

        r0 := @this: org.apache.harmony.xml.ExpatParser$CurrentAttributes;

        $r1 = r0.<org.apache.harmony.xml.ExpatParser$CurrentAttributes: org.apache.harmony.xml.ExpatParser this$0>;

        $z0 = staticinvoke <org.apache.harmony.xml.ExpatParser: boolean access$1100(org.apache.harmony.xml.ExpatParser)>($r1);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Attributes can only be used within the scope of startElement().");

        throw $r3;

     label1:
        $r2 = r0.<org.apache.harmony.xml.ExpatParser$CurrentAttributes: org.apache.harmony.xml.ExpatParser this$0>;

        $l0 = staticinvoke <org.apache.harmony.xml.ExpatParser: long access$1200(org.apache.harmony.xml.ExpatParser)>($r2);

        return $l0;
    }

    public int getLength()
    {
        org.apache.harmony.xml.ExpatParser$CurrentAttributes r0;
        org.apache.harmony.xml.ExpatParser $r1, $r2;
        boolean $z0;
        int $i0;
        java.lang.IllegalStateException $r3;

        r0 := @this: org.apache.harmony.xml.ExpatParser$CurrentAttributes;

        $r1 = r0.<org.apache.harmony.xml.ExpatParser$CurrentAttributes: org.apache.harmony.xml.ExpatParser this$0>;

        $z0 = staticinvoke <org.apache.harmony.xml.ExpatParser: boolean access$1100(org.apache.harmony.xml.ExpatParser)>($r1);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Attributes can only be used within the scope of startElement().");

        throw $r3;

     label1:
        $r2 = r0.<org.apache.harmony.xml.ExpatParser$CurrentAttributes: org.apache.harmony.xml.ExpatParser this$0>;

        $i0 = staticinvoke <org.apache.harmony.xml.ExpatParser: int access$1300(org.apache.harmony.xml.ExpatParser)>($r2);

        return $i0;
    }

    void <init>(org.apache.harmony.xml.ExpatParser, org.apache.harmony.xml.ExpatParser$1)
    {
        org.apache.harmony.xml.ExpatParser$CurrentAttributes r0;
        org.apache.harmony.xml.ExpatParser r1;
        org.apache.harmony.xml.ExpatParser$1 r2;

        r0 := @this: org.apache.harmony.xml.ExpatParser$CurrentAttributes;

        r1 := @parameter0: org.apache.harmony.xml.ExpatParser;

        r2 := @parameter1: org.apache.harmony.xml.ExpatParser$1;

        specialinvoke r0.<org.apache.harmony.xml.ExpatParser$CurrentAttributes: void <init>(org.apache.harmony.xml.ExpatParser)>(r1);

        return;
    }
}
