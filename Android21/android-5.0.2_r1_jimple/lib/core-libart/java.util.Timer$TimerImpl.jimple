final class java.util.Timer$TimerImpl extends java.lang.Thread
{
    private boolean cancelled;
    private boolean finished;
    private java.util.Timer$TimerImpl$TimerHeap tasks;

    void <init>(java.lang.String, boolean)
    {
        java.util.Timer$TimerImpl r0;
        java.lang.String r1;
        boolean z0;
        java.util.Timer$TimerImpl$TimerHeap $r2;

        r0 := @this: java.util.Timer$TimerImpl;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        $r2 = new java.util.Timer$TimerImpl$TimerHeap;

        specialinvoke $r2.<java.util.Timer$TimerImpl$TimerHeap: void <init>(java.util.Timer$1)>(null);

        r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks> = $r2;

        virtualinvoke r0.<java.util.Timer$TimerImpl: void setName(java.lang.String)>(r1);

        virtualinvoke r0.<java.util.Timer$TimerImpl: void setDaemon(boolean)>(z0);

        virtualinvoke r0.<java.util.Timer$TimerImpl: void start()>();

        return;
    }

    public void run()
    {
        java.util.Timer$TimerImpl r0, r2, r10, r36;
        java.util.TimerTask r1, $r17;
        long l0, $l1, $l3, $l4, $l5, $l7, $l9, $l10, $l11, $l12, $l13, $l15, l16;
        java.lang.Object r4, $r15, $r16, r35;
        java.lang.Throwable r5, r6, r7, r8, r9, r11, $r25, $r26, $r27, $r30, $r32, $r33;
        java.util.Timer$TimerImpl$TimerHeap $r13, $r14, $r18, $r19, $r21, $r22, $r23, $r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, z7;
        byte $b2, $b6, $b8;
        int $i14, i17;
        java.lang.InterruptedException $r29, $r31;

        r0 := @this: java.util.Timer$TimerImpl;

     label01:
        r2 = r0;

        entermonitor r0;

     label02:
        $z0 = r0.<java.util.Timer$TimerImpl: boolean cancelled>;

        if $z0 == 0 goto label04;

        exitmonitor r2;

     label03:
        return;

     label04:
        $r13 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        $z1 = virtualinvoke $r13.<java.util.Timer$TimerImpl$TimerHeap: boolean isEmpty()>();

        if $z1 == 0 goto label11;

        $z5 = r0.<java.util.Timer$TimerImpl: boolean finished>;

        if $z5 == 0 goto label06;

        exitmonitor r2;

     label05:
        return;

     label06:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label07:
        goto label09;

     label08:
        $r29 := @caughtexception;

     label09:
        exitmonitor r2;

     label10:
        goto label01;

     label11:
        l16 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r14 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        r1 = virtualinvoke $r14.<java.util.Timer$TimerImpl$TimerHeap: java.util.TimerTask minimum()>();

        $r15 = r1.<java.util.TimerTask: java.lang.Object lock>;

        r4 = $r15;

        entermonitor $r15;

     label12:
        $z2 = r1.<java.util.TimerTask: boolean cancelled>;

        if $z2 == 0 goto label15;

        $r24 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        virtualinvoke $r24.<java.util.Timer$TimerImpl$TimerHeap: void delete(int)>(0);

        exitmonitor r4;

     label13:
        exitmonitor r2;

     label14:
        goto label01;

     label15:
        $l1 = r1.<java.util.TimerTask: long when>;

        l0 = $l1 - l16;

        exitmonitor r4;

     label16:
        goto label19;

     label17:
        $r25 := @caughtexception;

        r5 = $r25;

        exitmonitor r4;

     label18:
        throw r5;

     label19:
        $b2 = l0 cmp 0L;

        if $b2 <= 0 goto label25;

     label20:
        virtualinvoke r0.<java.lang.Object: void wait(long)>(l0);

     label21:
        goto label23;

     label22:
        $r31 := @caughtexception;

     label23:
        exitmonitor r2;

     label24:
        goto label01;

     label25:
        $r16 = r1.<java.util.TimerTask: java.lang.Object lock>;

        r35 = $r16;

        entermonitor $r16;

     label26:
        i17 = 0;

        $r18 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        $r17 = virtualinvoke $r18.<java.util.Timer$TimerImpl$TimerHeap: java.util.TimerTask minimum()>();

        $l3 = $r17.<java.util.TimerTask: long when>;

        $l4 = r1.<java.util.TimerTask: long when>;

        $b6 = $l3 cmp $l4;

        if $b6 == 0 goto label27;

        $r23 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        i17 = staticinvoke <java.util.Timer$TimerImpl$TimerHeap: int access$100(java.util.Timer$TimerImpl$TimerHeap,java.util.TimerTask)>($r23, r1);

     label27:
        $z3 = r1.<java.util.TimerTask: boolean cancelled>;

        if $z3 == 0 goto label30;

        $r21 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        $r22 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        $i14 = staticinvoke <java.util.Timer$TimerImpl$TimerHeap: int access$100(java.util.Timer$TimerImpl$TimerHeap,java.util.TimerTask)>($r22, r1);

        virtualinvoke $r21.<java.util.Timer$TimerImpl$TimerHeap: void delete(int)>($i14);

        exitmonitor r35;

     label28:
        exitmonitor r2;

     label29:
        goto label01;

     label30:
        $l5 = r1.<java.util.TimerTask: long when>;

        virtualinvoke r1.<java.util.TimerTask: void setScheduledTime(long)>($l5);

        $r19 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        virtualinvoke $r19.<java.util.Timer$TimerImpl$TimerHeap: void delete(int)>(i17);

        $l7 = r1.<java.util.TimerTask: long period>;

        $b8 = $l7 cmp 0L;

        if $b8 < 0 goto label33;

        $z4 = r1.<java.util.TimerTask: boolean fixedRate>;

        if $z4 == 0 goto label31;

        $l11 = r1.<java.util.TimerTask: long when>;

        $l10 = r1.<java.util.TimerTask: long period>;

        $l15 = $l11 + $l10;

        r1.<java.util.TimerTask: long when> = $l15;

        goto label32;

     label31:
        $l9 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l12 = r1.<java.util.TimerTask: long period>;

        $l13 = $l9 + $l12;

        r1.<java.util.TimerTask: long when> = $l13;

     label32:
        specialinvoke r0.<java.util.Timer$TimerImpl: void insertTask(java.util.TimerTask)>(r1);

        goto label34;

     label33:
        r1.<java.util.TimerTask: long when> = 0L;

     label34:
        exitmonitor r35;

     label35:
        goto label38;

     label36:
        $r26 := @caughtexception;

        r6 = $r26;

        exitmonitor r35;

     label37:
        throw r6;

     label38:
        exitmonitor r2;

     label39:
        goto label42;

     label40:
        $r30 := @caughtexception;

        r7 = $r30;

        exitmonitor r2;

     label41:
        throw r7;

     label42:
        z6 = 0;

     label43:
        virtualinvoke r1.<java.util.TimerTask: void run()>();

        z7 = 1;

     label44:
        if z7 != 0 goto label57;

        r36 = r0;

        entermonitor r0;

     label45:
        r0.<java.util.Timer$TimerImpl: boolean cancelled> = 1;

        exitmonitor r36;

     label46:
        goto label49;

     label47:
        $r32 := @caughtexception;

        r8 = $r32;

        exitmonitor r36;

     label48:
        throw r8;

     label49:
        goto label57;

     label50:
        $r27 := @caughtexception;

        r9 = $r27;

     label51:
        if z6 != 0 goto label56;

        r10 = r0;

        entermonitor r0;

     label52:
        r0.<java.util.Timer$TimerImpl: boolean cancelled> = 1;

        exitmonitor r10;

     label53:
        goto label56;

     label54:
        $r33 := @caughtexception;

        r11 = $r33;

        exitmonitor r10;

     label55:
        throw r11;

     label56:
        throw r9;

     label57:
        goto label01;

        catch java.lang.InterruptedException from label06 to label07 with label08;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
        catch java.lang.InterruptedException from label20 to label21 with label22;
        catch java.lang.Throwable from label26 to label28 with label36;
        catch java.lang.Throwable from label30 to label35 with label36;
        catch java.lang.Throwable from label36 to label37 with label36;
        catch java.lang.Throwable from label02 to label03 with label40;
        catch java.lang.Throwable from label04 to label05 with label40;
        catch java.lang.Throwable from label06 to label10 with label40;
        catch java.lang.Throwable from label11 to label14 with label40;
        catch java.lang.Throwable from label15 to label24 with label40;
        catch java.lang.Throwable from label25 to label29 with label40;
        catch java.lang.Throwable from label30 to label39 with label40;
        catch java.lang.Throwable from label40 to label41 with label40;
        catch java.lang.Throwable from label45 to label46 with label47;
        catch java.lang.Throwable from label47 to label48 with label47;
        catch java.lang.Throwable from label43 to label44 with label50;
        catch java.lang.Throwable from label52 to label53 with label54;
        catch java.lang.Throwable from label54 to label55 with label54;
        catch java.lang.Throwable from label50 to label51 with label50;
    }

    private void insertTask(java.util.TimerTask)
    {
        java.util.Timer$TimerImpl r0;
        java.util.TimerTask r1;
        java.util.Timer$TimerImpl$TimerHeap $r2;

        r0 := @this: java.util.Timer$TimerImpl;

        r1 := @parameter0: java.util.TimerTask;

        $r2 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        virtualinvoke $r2.<java.util.Timer$TimerImpl$TimerHeap: void insert(java.util.TimerTask)>(r1);

        virtualinvoke r0.<java.lang.Object: void notify()>();

        return;
    }

    public synchronized void cancel()
    {
        java.util.Timer$TimerImpl r0;
        java.util.Timer$TimerImpl$TimerHeap $r1;

        r0 := @this: java.util.Timer$TimerImpl;

        r0.<java.util.Timer$TimerImpl: boolean cancelled> = 1;

        $r1 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        virtualinvoke $r1.<java.util.Timer$TimerImpl$TimerHeap: void reset()>();

        virtualinvoke r0.<java.lang.Object: void notify()>();

        return;
    }

    public int purge()
    {
        java.util.Timer$TimerImpl r0;
        java.util.Timer$TimerImpl$TimerHeap $r1, $r2, $r3, $r4;
        boolean $z0;
        int $i1;

        r0 := @this: java.util.Timer$TimerImpl;

        $r1 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        $z0 = virtualinvoke $r1.<java.util.Timer$TimerImpl$TimerHeap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        staticinvoke <java.util.Timer$TimerImpl$TimerHeap: int access$202(java.util.Timer$TimerImpl$TimerHeap,int)>($r2, 0);

        $r3 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        virtualinvoke $r3.<java.util.Timer$TimerImpl$TimerHeap: void deleteIfCancelled()>();

        $r4 = r0.<java.util.Timer$TimerImpl: java.util.Timer$TimerImpl$TimerHeap tasks>;

        $i1 = staticinvoke <java.util.Timer$TimerImpl$TimerHeap: int access$200(java.util.Timer$TimerImpl$TimerHeap)>($r4);

        return $i1;
    }

    static boolean access$302(java.util.Timer$TimerImpl, boolean)
    {
        java.util.Timer$TimerImpl r0;
        boolean z0;

        r0 := @parameter0: java.util.Timer$TimerImpl;

        z0 := @parameter1: boolean;

        r0.<java.util.Timer$TimerImpl: boolean finished> = z0;

        return z0;
    }

    static boolean access$400(java.util.Timer$TimerImpl)
    {
        java.util.Timer$TimerImpl r0;
        boolean $z0;

        r0 := @parameter0: java.util.Timer$TimerImpl;

        $z0 = r0.<java.util.Timer$TimerImpl: boolean cancelled>;

        return $z0;
    }

    static void access$500(java.util.Timer$TimerImpl, java.util.TimerTask)
    {
        java.util.Timer$TimerImpl r0;
        java.util.TimerTask r1;

        r0 := @parameter0: java.util.Timer$TimerImpl;

        r1 := @parameter1: java.util.TimerTask;

        specialinvoke r0.<java.util.Timer$TimerImpl: void insertTask(java.util.TimerTask)>(r1);

        return;
    }
}
