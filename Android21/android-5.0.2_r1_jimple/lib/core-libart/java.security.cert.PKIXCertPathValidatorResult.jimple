public class java.security.cert.PKIXCertPathValidatorResult extends java.lang.Object implements java.security.cert.CertPathValidatorResult
{
    private final java.security.cert.TrustAnchor trustAnchor;
    private final java.security.cert.PolicyNode policyTree;
    private final java.security.PublicKey subjectPublicKey;

    public void <init>(java.security.cert.TrustAnchor, java.security.cert.PolicyNode, java.security.PublicKey)
    {
        java.security.cert.PKIXCertPathValidatorResult r0;
        java.security.cert.TrustAnchor r1, $r4;
        java.security.cert.PolicyNode r2;
        java.security.PublicKey r3, $r5;
        java.lang.NullPointerException $r6, $r7;

        r0 := @this: java.security.cert.PKIXCertPathValidatorResult;

        r1 := @parameter0: java.security.cert.TrustAnchor;

        r2 := @parameter1: java.security.cert.PolicyNode;

        r3 := @parameter2: java.security.PublicKey;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.TrustAnchor trustAnchor> = r1;

        r0.<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.PolicyNode policyTree> = r2;

        r0.<java.security.cert.PKIXCertPathValidatorResult: java.security.PublicKey subjectPublicKey> = r3;

        $r4 = r0.<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.TrustAnchor trustAnchor>;

        if $r4 != null goto label1;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("trustAnchor == null");

        throw $r7;

     label1:
        $r5 = r0.<java.security.cert.PKIXCertPathValidatorResult: java.security.PublicKey subjectPublicKey>;

        if $r5 != null goto label2;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("subjectPublicKey == null");

        throw $r6;

     label2:
        return;
    }

    public java.security.cert.PolicyNode getPolicyTree()
    {
        java.security.cert.PKIXCertPathValidatorResult r0;
        java.security.cert.PolicyNode $r1;

        r0 := @this: java.security.cert.PKIXCertPathValidatorResult;

        $r1 = r0.<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.PolicyNode policyTree>;

        return $r1;
    }

    public java.security.PublicKey getPublicKey()
    {
        java.security.cert.PKIXCertPathValidatorResult r0;
        java.security.PublicKey $r1;

        r0 := @this: java.security.cert.PKIXCertPathValidatorResult;

        $r1 = r0.<java.security.cert.PKIXCertPathValidatorResult: java.security.PublicKey subjectPublicKey>;

        return $r1;
    }

    public java.security.cert.TrustAnchor getTrustAnchor()
    {
        java.security.cert.PKIXCertPathValidatorResult r0;
        java.security.cert.TrustAnchor $r1;

        r0 := @this: java.security.cert.PKIXCertPathValidatorResult;

        $r1 = r0.<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.TrustAnchor trustAnchor>;

        return $r1;
    }

    public java.lang.Object clone()
    {
        java.security.cert.PKIXCertPathValidatorResult r0;
        java.lang.CloneNotSupportedException r1, $r3;
        java.lang.Object $r2;
        java.lang.AssertionError $r4;

        r0 := @this: java.security.cert.PKIXCertPathValidatorResult;

     label1:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>(r1);

        throw $r4;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        java.security.cert.PKIXCertPathValidatorResult r0;
        java.lang.StringBuilder r1, $r2;
        java.lang.String $r3, $r6, $r11, $r15, $r18;
        java.security.cert.TrustAnchor $r5;
        java.security.cert.PolicyNode $r9, $r10;
        java.security.PublicKey $r14;

        r0 := @this: java.security.cert.PKIXCertPathValidatorResult;

        $r2 = new java.lang.StringBuilder;

        $r3 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": [\n Trust Anchor: ");

        $r5 = r0.<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.TrustAnchor trustAnchor>;

        $r6 = virtualinvoke $r5.<java.security.cert.TrustAnchor: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n Policy Tree: ");

        $r9 = r0.<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.PolicyNode policyTree>;

        if $r9 != null goto label1;

        $r11 = "no valid policy tree\n";

        goto label2;

     label1:
        $r10 = r0.<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.PolicyNode policyTree>;

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>();

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n Subject Public Key: ");

        $r14 = r0.<java.security.cert.PKIXCertPathValidatorResult: java.security.PublicKey subjectPublicKey>;

        $r15 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n]");

        $r18 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r18;
    }
}
