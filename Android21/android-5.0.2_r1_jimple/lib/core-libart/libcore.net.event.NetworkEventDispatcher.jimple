public class libcore.net.event.NetworkEventDispatcher extends java.lang.Object
{
    private static final libcore.net.event.NetworkEventDispatcher instance;
    private final java.util.List listeners;

    public static libcore.net.event.NetworkEventDispatcher getInstance()
    {
        libcore.net.event.NetworkEventDispatcher $r0;

        $r0 = <libcore.net.event.NetworkEventDispatcher: libcore.net.event.NetworkEventDispatcher instance>;

        return $r0;
    }

    protected void <init>()
    {
        libcore.net.event.NetworkEventDispatcher r0;
        java.util.concurrent.CopyOnWriteArrayList $r1;

        r0 := @this: libcore.net.event.NetworkEventDispatcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<libcore.net.event.NetworkEventDispatcher: java.util.List listeners> = $r1;

        return;
    }

    public void addListener(libcore.net.event.NetworkEventListener)
    {
        libcore.net.event.NetworkEventDispatcher r0;
        libcore.net.event.NetworkEventListener r1;
        java.util.List $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: libcore.net.event.NetworkEventDispatcher;

        r1 := @parameter0: libcore.net.event.NetworkEventListener;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("toAdd == null");

        throw $r3;

     label1:
        $r2 = r0.<libcore.net.event.NetworkEventDispatcher: java.util.List listeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeListener(libcore.net.event.NetworkEventListener)
    {
        libcore.net.event.NetworkEventDispatcher r0;
        libcore.net.event.NetworkEventListener r1, r3;
        java.util.Iterator r2;
        java.util.List $r4, $r6;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: libcore.net.event.NetworkEventDispatcher;

        r1 := @parameter0: libcore.net.event.NetworkEventListener;

        $r4 = r0.<libcore.net.event.NetworkEventDispatcher: java.util.List listeners>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (libcore.net.event.NetworkEventListener) $r5;

        if r3 != r1 goto label2;

        $r6 = r0.<libcore.net.event.NetworkEventDispatcher: java.util.List listeners>;

        interfaceinvoke $r6.<java.util.List: boolean remove(java.lang.Object)>(r3);

        return;

     label2:
        goto label1;

     label3:
        return;
    }

    public void onNetworkConfigurationChanged()
    {
        libcore.net.event.NetworkEventDispatcher r0;
        java.util.Iterator r1;
        libcore.net.event.NetworkEventListener r2;
        java.lang.RuntimeException r3, $r6;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: libcore.net.event.NetworkEventDispatcher;

        $r4 = r0.<libcore.net.event.NetworkEventDispatcher: java.util.List listeners>;

        r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (libcore.net.event.NetworkEventListener) $r5;

     label2:
        virtualinvoke r2.<libcore.net.event.NetworkEventListener: void onNetworkConfigurationChanged()>();

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        r3 = $r6;

        staticinvoke <java.lang.System: void logI(java.lang.String,java.lang.Throwable)>("Exception thrown during network event propagation", r3);

     label5:
        goto label1;

     label6:
        return;

        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    static void <clinit>()
    {
        libcore.net.event.NetworkEventDispatcher $r0;

        $r0 = new libcore.net.event.NetworkEventDispatcher;

        specialinvoke $r0.<libcore.net.event.NetworkEventDispatcher: void <init>()>();

        <libcore.net.event.NetworkEventDispatcher: libcore.net.event.NetworkEventDispatcher instance> = $r0;

        return;
    }
}
