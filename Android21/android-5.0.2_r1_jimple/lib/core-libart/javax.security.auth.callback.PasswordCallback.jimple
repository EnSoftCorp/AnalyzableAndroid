public class javax.security.auth.callback.PasswordCallback extends java.lang.Object implements javax.security.auth.callback.Callback, java.io.Serializable
{
    private static final long serialVersionUID;
    private java.lang.String prompt;
    boolean echoOn;
    private char[] inputPassword;

    private void setPrompt(java.lang.String) throws java.lang.IllegalArgumentException
    {
        javax.security.auth.callback.PasswordCallback r0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r2;
        int $i0;

        r0 := @this: javax.security.auth.callback.PasswordCallback;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid prompt");

        throw $r2;

     label2:
        r0.<javax.security.auth.callback.PasswordCallback: java.lang.String prompt> = r1;

        return;
    }

    public void <init>(java.lang.String, boolean)
    {
        javax.security.auth.callback.PasswordCallback r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: javax.security.auth.callback.PasswordCallback;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<javax.security.auth.callback.PasswordCallback: void setPrompt(java.lang.String)>(r1);

        r0.<javax.security.auth.callback.PasswordCallback: boolean echoOn> = z0;

        return;
    }

    public java.lang.String getPrompt()
    {
        javax.security.auth.callback.PasswordCallback r0;
        java.lang.String $r1;

        r0 := @this: javax.security.auth.callback.PasswordCallback;

        $r1 = r0.<javax.security.auth.callback.PasswordCallback: java.lang.String prompt>;

        return $r1;
    }

    public boolean isEchoOn()
    {
        javax.security.auth.callback.PasswordCallback r0;
        boolean $z0;

        r0 := @this: javax.security.auth.callback.PasswordCallback;

        $z0 = r0.<javax.security.auth.callback.PasswordCallback: boolean echoOn>;

        return $z0;
    }

    public void setPassword(char[])
    {
        javax.security.auth.callback.PasswordCallback r0;
        char[] r1, $r2, $r3, $r4;
        int $i0, $i1;

        r0 := @this: javax.security.auth.callback.PasswordCallback;

        r1 := @parameter0: char[];

        if r1 != null goto label1;

        r0.<javax.security.auth.callback.PasswordCallback: char[] inputPassword> = r1;

        goto label2;

     label1:
        $i0 = lengthof r1;

        $r2 = newarray (char)[$i0];

        r0.<javax.security.auth.callback.PasswordCallback: char[] inputPassword> = $r2;

        $r4 = r0.<javax.security.auth.callback.PasswordCallback: char[] inputPassword>;

        $r3 = r0.<javax.security.auth.callback.PasswordCallback: char[] inputPassword>;

        $i1 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(char[],int,char[],int,int)>(r1, 0, $r4, 0, $i1);

     label2:
        return;
    }

    public char[] getPassword()
    {
        javax.security.auth.callback.PasswordCallback r0;
        char[] r1, $r2, $r3, $r4;
        int $i0, $i1;

        r0 := @this: javax.security.auth.callback.PasswordCallback;

        $r2 = r0.<javax.security.auth.callback.PasswordCallback: char[] inputPassword>;

        if $r2 == null goto label1;

        $r3 = r0.<javax.security.auth.callback.PasswordCallback: char[] inputPassword>;

        $i0 = lengthof $r3;

        r1 = newarray (char)[$i0];

        $r4 = r0.<javax.security.auth.callback.PasswordCallback: char[] inputPassword>;

        $i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(char[],int,char[],int,int)>($r4, 0, r1, 0, $i1);

        return r1;

     label1:
        return null;
    }

    public void clearPassword()
    {
        javax.security.auth.callback.PasswordCallback r0;
        char[] $r1, $r2;

        r0 := @this: javax.security.auth.callback.PasswordCallback;

        $r1 = r0.<javax.security.auth.callback.PasswordCallback: char[] inputPassword>;

        if $r1 == null goto label1;

        $r2 = r0.<javax.security.auth.callback.PasswordCallback: char[] inputPassword>;

        staticinvoke <java.util.Arrays: void fill(char[],char)>($r2, 0);

     label1:
        return;
    }

    public static void <clinit>()
    {
        <javax.security.auth.callback.PasswordCallback: long serialVersionUID> = 2267422647454909926L;

        return;
    }
}
