public class java.util.LinkedHashSet extends java.util.HashSet implements java.util.Set, java.lang.Cloneable, java.io.Serializable
{
    private static final long serialVersionUID;

    public void <init>()
    {
        java.util.LinkedHashSet r0;
        java.util.LinkedHashMap $r1;

        r0 := @this: java.util.LinkedHashSet;

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        specialinvoke r0.<java.util.HashSet: void <init>(java.util.HashMap)>($r1);

        return;
    }

    public void <init>(int)
    {
        java.util.LinkedHashSet r0;
        int i0;
        java.util.LinkedHashMap $r1;

        r0 := @this: java.util.LinkedHashSet;

        i0 := @parameter0: int;

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>(int)>(i0);

        specialinvoke r0.<java.util.HashSet: void <init>(java.util.HashMap)>($r1);

        return;
    }

    public void <init>(int, float)
    {
        java.util.LinkedHashSet r0;
        int i0;
        float f0;
        java.util.LinkedHashMap $r1;

        r0 := @this: java.util.LinkedHashSet;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>(int,float)>(i0, f0);

        specialinvoke r0.<java.util.HashSet: void <init>(java.util.HashMap)>($r1);

        return;
    }

    public void <init>(java.util.Collection)
    {
        java.util.LinkedHashSet r0;
        java.util.Collection r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        java.util.LinkedHashMap $r4;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: java.util.LinkedHashSet;

        r1 := @parameter0: java.util.Collection;

        $r4 = new java.util.LinkedHashMap;

        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if $i0 >= 6 goto label1;

        $i2 = 11;

        goto label2;

     label1:
        $i1 = interfaceinvoke r1.<java.util.Collection: int size()>();

        $i2 = $i1 * 2;

     label2:
        specialinvoke $r4.<java.util.LinkedHashMap: void <init>(int)>($i2);

        specialinvoke r0.<java.util.HashSet: void <init>(java.util.HashMap)>($r4);

        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r0.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r3);

        goto label3;

     label4:
        return;
    }

    java.util.HashMap createBackingMap(int, float)
    {
        java.util.LinkedHashSet r0;
        int i0;
        float f0;
        java.util.LinkedHashMap $r1;

        r0 := @this: java.util.LinkedHashSet;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>(int,float)>(i0, f0);

        return $r1;
    }

    public static void <clinit>()
    {
        <java.util.LinkedHashSet: long serialVersionUID> = -2851667679971038690L;

        return;
    }
}
