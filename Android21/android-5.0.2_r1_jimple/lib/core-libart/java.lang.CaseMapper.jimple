class java.lang.CaseMapper extends java.lang.Object
{
    private static final char[] upperValues;
    private static final char[] upperValues2;
    private static final char LATIN_CAPITAL_I_WITH_DOT;
    private static final char GREEK_CAPITAL_SIGMA;
    private static final char GREEK_SMALL_FINAL_SIGMA;
    private static final java.lang.ThreadLocal EL_UPPER;

    private void <init>()
    {
        java.lang.CaseMapper r0;

        r0 := @this: java.lang.CaseMapper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String toLowerCase(java.util.Locale, java.lang.String, char[], int, int)
    {
        java.util.Locale r0;
        java.lang.String r1, r3, $r5, $r6, $r7;
        char[] r2, r4;
        int i0, i1, i2, i3, i4, $i7;
        char c5, c6;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @parameter0: java.util.Locale;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: char[];

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r3 = virtualinvoke r0.<java.util.Locale: java.lang.String getLanguage()>();

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("tr");

        if $z0 != 0 goto label01;

        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("az");

        if $z1 != 0 goto label01;

        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("lt");

        if $z2 == 0 goto label02;

     label01:
        $r5 = staticinvoke <libcore.icu.ICU: java.lang.String toLowerCase(java.lang.String,java.util.Locale)>(r1, r0);

        return $r5;

     label02:
        r4 = null;

        i2 = 0;

        i3 = i0;

        i4 = i0 + i1;

     label03:
        if i3 >= i4 goto label10;

        c5 = r2[i3];

        if c5 == 304 goto label04;

        $z3 = staticinvoke <java.lang.Character: boolean isHighSurrogate(char)>(c5);

        if $z3 == 0 goto label05;

     label04:
        $r7 = staticinvoke <libcore.icu.ICU: java.lang.String toLowerCase(java.lang.String,java.util.Locale)>(r1, r0);

        return $r7;

     label05:
        if c5 != 931 goto label06;

        $z4 = staticinvoke <java.lang.CaseMapper: boolean isFinalSigma(char[],int,int,int)>(r2, i0, i1, i3);

        if $z4 == 0 goto label06;

        c6 = 962;

        goto label07;

     label06:
        c6 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c5);

     label07:
        if r4 != null goto label08;

        if c5 == c6 goto label08;

        r4 = newarray (char)[i1];

        i2 = i3 - i0;

        staticinvoke <java.lang.System: void arraycopy(char[],int,char[],int,int)>(r2, i0, r4, 0, i2);

     label08:
        if r4 == null goto label09;

        $i7 = i2;

        i2 = i2 + 1;

        r4[$i7] = c6;

     label09:
        i3 = i3 + 1;

        goto label03;

     label10:
        if r4 == null goto label11;

        $r6 = new java.lang.String;

        specialinvoke $r6.<java.lang.String: void <init>(int,int,char[])>(0, i2, r4);

        goto label12;

     label11:
        $r6 = r1;

     label12:
        return $r6;
    }

    private static boolean isFinalSigma(char[], int, int, int)
    {
        char[] r0;
        int i0, i1, i2, $i5, $i6, $i7, $i8;
        char c3, c4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        if i2 > i0 goto label1;

        return 0;

     label1:
        $i5 = i2 - 1;

        c3 = r0[$i5];

        $z0 = staticinvoke <java.lang.Character: boolean isLowerCase(char)>(c3);

        if $z0 != 0 goto label2;

        $z4 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>(c3);

        if $z4 != 0 goto label2;

        $z5 = staticinvoke <java.lang.Character: boolean isTitleCase(char)>(c3);

        if $z5 != 0 goto label2;

        return 0;

     label2:
        $i7 = i2 + 1;

        $i6 = i0 + i1;

        if $i7 < $i6 goto label3;

        return 1;

     label3:
        $i8 = i2 + 1;

        c4 = r0[$i8];

        $z1 = staticinvoke <java.lang.Character: boolean isLowerCase(char)>(c4);

        if $z1 != 0 goto label4;

        $z2 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>(c4);

        if $z2 != 0 goto label4;

        $z3 = staticinvoke <java.lang.Character: boolean isTitleCase(char)>(c4);

        if $z3 == 0 goto label5;

     label4:
        return 0;

     label5:
        return 1;
    }

    private static int upperIndex(int)
    {
        int i0, i1, $i2, $i3, $i4, $i5;
        char[] $r0;

        i0 := @parameter0: int;

        i1 = -1;

        if i0 < 223 goto label12;

        if i0 > 1415 goto label08;

        lookupswitch(i0)
        {
            case 223: goto label01;
            case 329: goto label02;
            case 496: goto label03;
            case 912: goto label04;
            case 944: goto label05;
            case 1415: goto label06;
            default: goto label07;
        };

     label01:
        return 0;

     label02:
        return 1;

     label03:
        return 2;

     label04:
        return 3;

     label05:
        return 4;

     label06:
        return 5;

     label07:
        goto label12;

     label08:
        if i0 < 7830 goto label12;

        if i0 > 7834 goto label09;

        $i5 = 6 + i0;

        i1 = $i5 - 7830;

        goto label12;

     label09:
        if i0 < 8016 goto label10;

        if i0 > 8188 goto label10;

        $r0 = <java.lang.CaseMapper: char[] upperValues2>;

        $i4 = i0 - 8016;

        i1 = $r0[$i4];

        if i1 != 0 goto label12;

        i1 = -1;

        goto label12;

     label10:
        if i0 < 64256 goto label12;

        if i0 > 64262 goto label11;

        $i3 = 90 + i0;

        i1 = $i3 - 64256;

        goto label12;

     label11:
        if i0 < 64275 goto label12;

        if i0 > 64279 goto label12;

        $i2 = 97 + i0;

        i1 = $i2 - 64275;

     label12:
        return i1;
    }

    public static java.lang.String toUpperCase(java.util.Locale, java.lang.String, char[], int, int)
    {
        java.util.Locale r0;
        java.lang.String r1, r3, $r7, $r8, $r15, $r16;
        char[] r2, r4, r5, r6, $r9, $r10, $r11;
        int i0, i1, i2, i3, i4, i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, i34, i36;
        char c5, c7, c33, c35, c37;
        boolean $z0, $z1, $z2, $z3, $z4;
        byte $b19;
        libcore.icu.Transliterator $r12;
        java.lang.Object $r13;
        java.lang.ThreadLocal $r14;

        r0 := @parameter0: java.util.Locale;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: char[];

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r3 = virtualinvoke r0.<java.util.Locale: java.lang.String getLanguage()>();

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("tr");

        if $z0 != 0 goto label01;

        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("az");

        if $z2 != 0 goto label01;

        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("lt");

        if $z1 == 0 goto label02;

     label01:
        $r7 = staticinvoke <libcore.icu.ICU: java.lang.String toUpperCase(java.lang.String,java.util.Locale)>(r1, r0);

        return $r7;

     label02:
        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("el");

        if $z3 == 0 goto label03;

        $r14 = <java.lang.CaseMapper: java.lang.ThreadLocal EL_UPPER>;

        $r13 = virtualinvoke $r14.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r12 = (libcore.icu.Transliterator) $r13;

        $r16 = virtualinvoke $r12.<libcore.icu.Transliterator: java.lang.String transliterate(java.lang.String)>(r1);

        return $r16;

     label03:
        r4 = null;

        i2 = 0;

        i3 = i0;

        i4 = i0 + i1;

     label04:
        if i3 >= i4 goto label16;

        c5 = r2[i3];

        $z4 = staticinvoke <java.lang.Character: boolean isHighSurrogate(char)>(c5);

        if $z4 == 0 goto label05;

        $r15 = staticinvoke <libcore.icu.ICU: java.lang.String toUpperCase(java.lang.String,java.util.Locale)>(r1, r0);

        return $r15;

     label05:
        i6 = staticinvoke <java.lang.CaseMapper: int upperIndex(int)>(c5);

        if i6 != -1 goto label10;

        if r4 == null goto label06;

        $i26 = lengthof r4;

        if i2 < $i26 goto label06;

        $i32 = lengthof r4;

        $i25 = i1 / 6;

        $i31 = $i32 + $i25;

        $i30 = $i31 + 2;

        r5 = newarray (char)[$i30];

        $i29 = lengthof r4;

        staticinvoke <java.lang.System: void arraycopy(char[],int,char[],int,int)>(r4, 0, r5, 0, $i29);

        r4 = r5;

     label06:
        c33 = staticinvoke <java.lang.Character: char toUpperCase(char)>(c5);

        if c5 == c33 goto label08;

        if r4 != null goto label07;

        r4 = newarray (char)[i1];

        i2 = i3 - i0;

        staticinvoke <java.lang.System: void arraycopy(char[],int,char[],int,int)>(r2, i0, r4, 0, i2);

     label07:
        $i27 = i2;

        i2 = i2 + 1;

        r4[$i27] = c33;

        goto label09;

     label08:
        if r4 == null goto label09;

        $i28 = i2;

        i2 = i2 + 1;

        r4[$i28] = c5;

     label09:
        goto label15;

     label10:
        i34 = i6 * 3;

        $r9 = <java.lang.CaseMapper: char[] upperValues>;

        $i11 = i34 + 2;

        c7 = $r9[$i11];

        if r4 != null goto label11;

        $i23 = i1 / 6;

        $i24 = i1 + $i23;

        $i22 = $i24 + 2;

        r4 = newarray (char)[$i22];

        i2 = i3 - i0;

        staticinvoke <java.lang.System: void arraycopy(char[],int,char[],int,int)>(r2, i0, r4, 0, i2);

        goto label14;

     label11:
        if c7 != 0 goto label12;

        $b19 = 1;

        goto label13;

     label12:
        $b19 = 2;

     label13:
        $i12 = i2 + $b19;

        $i13 = lengthof r4;

        if $i12 < $i13 goto label14;

        $i16 = lengthof r4;

        $i15 = i1 / 6;

        $i20 = $i16 + $i15;

        $i21 = $i20 + 3;

        r6 = newarray (char)[$i21];

        $i18 = lengthof r4;

        staticinvoke <java.lang.System: void arraycopy(char[],int,char[],int,int)>(r4, 0, r6, 0, $i18);

        r4 = r6;

     label14:
        $r11 = <java.lang.CaseMapper: char[] upperValues>;

        c35 = $r11[i34];

        i36 = i2 + 1;

        r4[i2] = c35;

        $r10 = <java.lang.CaseMapper: char[] upperValues>;

        $i14 = i34 + 1;

        c37 = $r10[$i14];

        i2 = i36 + 1;

        r4[i36] = c37;

        if c7 == 0 goto label15;

        $i17 = i2;

        i2 = i2 + 1;

        r4[$i17] = c7;

     label15:
        i3 = i3 + 1;

        goto label04;

     label16:
        if r4 != null goto label17;

        return r1;

     label17:
        $i8 = lengthof r4;

        if $i8 == i2 goto label18;

        $i9 = lengthof r4;

        $i10 = $i9 - i2;

        if $i10 >= 8 goto label19;

     label18:
        $r8 = new java.lang.String;

        specialinvoke $r8.<java.lang.String: void <init>(int,int,char[])>(0, i2, r4);

        goto label20;

     label19:
        $r8 = new java.lang.String;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>(r4, 0, i2);

     label20:
        return $r8;
    }

    static void <clinit>()
    {
        java.lang.String $r0, $r2;
        char[] $r1, $r3;
        java.lang.CaseMapper$1 $r4;

        <java.lang.CaseMapper: char GREEK_SMALL_FINAL_SIGMA> = 962;

        <java.lang.CaseMapper: char GREEK_CAPITAL_SIGMA> = 931;

        <java.lang.CaseMapper: char LATIN_CAPITAL_I_WITH_DOT> = 304;

        $r0 = "SS\u0000\u02bcN\u0000J\u030c\u0000\u0399\u0308\u0301\u03a5\u0308\u0301\u0535\u0552\u0000H\u0331\u0000T\u0308\u0000W\u030a\u0000Y\u030a\u0000A\u02be\u0000\u03a5\u0313\u0000\u03a5\u0313\u0300\u03a5\u0313\u0301\u03a5\u0313\u0342\u1f08\u0399\u0000\u1f09\u0399\u0000\u1f0a\u0399\u0000\u1f0b\u0399\u0000\u1f0c\u0399\u0000\u1f0d\u0399\u0000\u1f0e\u0399\u0000\u1f0f\u0399\u0000\u1f08\u0399\u0000\u1f09\u0399\u0000\u1f0a\u0399\u0000\u1f0b\u0399\u0000\u1f0c\u0399\u0000\u1f0d\u0399\u0000\u1f0e\u0399\u0000\u1f0f\u0399\u0000\u1f28\u0399\u0000\u1f29\u0399\u0000\u1f2a\u0399\u0000\u1f2b\u0399\u0000\u1f2c\u0399\u0000\u1f2d\u0399\u0000\u1f2e\u0399\u0000\u1f2f\u0399\u0000\u1f28\u0399\u0000\u1f29\u0399\u0000\u1f2a\u0399\u0000\u1f2b\u0399\u0000\u1f2c\u0399\u0000\u1f2d\u0399\u0000\u1f2e\u0399\u0000\u1f2f\u0399\u0000\u1f68\u0399\u0000\u1f69\u0399\u0000\u1f6a\u0399\u0000\u1f6b\u0399\u0000\u1f6c\u0399\u0000\u1f6d\u0399\u0000\u1f6e\u0399\u0000\u1f6f\u0399\u0000\u1f68\u0399\u0000\u1f69\u0399\u0000\u1f6a\u0399\u0000\u1f6b\u0399\u0000\u1f6c\u0399\u0000\u1f6d\u0399\u0000\u1f6e\u0399\u0000\u1f6f\u0399\u0000\u1fba\u0399\u0000\u0391\u0399\u0000\u0386\u0399\u0000\u0391\u0342\u0000\u0391\u0342\u0399\u0391\u0399\u0000\u1fca\u0399\u0000\u0397\u0399\u0000\u0389\u0399\u0000\u0397\u0342\u0000\u0397\u0342\u0399\u0397\u0399\u0000\u0399\u0308\u0300\u0399\u0308\u0301\u0399\u0342\u0000\u0399\u0308\u0342\u03a5\u0308\u0300\u03a5\u0308\u0301\u03a1\u0313\u0000\u03a5\u0342\u0000\u03a5\u0308\u0342\u1ffa\u0399\u0000\u03a9\u0399\u0000\u038f\u0399\u0000\u03a9\u0342\u0000\u03a9\u0342\u0399\u03a9\u0399\u0000FF\u0000FI\u0000FL\u0000FFIFFLST\u0000ST\u0000\u0544\u0546\u0000\u0544\u0535\u0000\u0544\u053b\u0000\u054e\u0546\u0000\u0544\u053d\u0000";

        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        <java.lang.CaseMapper: char[] upperValues> = $r1;

        $r2 = "\u000b\u0000\f\u0000\r\u0000\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$%&\'()*+,-./0123456789:;<=>\u0000\u0000?@A\u0000BC\u0000\u0000\u0000\u0000D\u0000\u0000\u0000\u0000\u0000EFG\u0000HI\u0000\u0000\u0000\u0000J\u0000\u0000\u0000\u0000\u0000KL\u0000\u0000MN\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000OPQ\u0000RS\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000TUV\u0000WX\u0000\u0000\u0000\u0000Y";

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        <java.lang.CaseMapper: char[] upperValues2> = $r3;

        $r4 = new java.lang.CaseMapper$1;

        specialinvoke $r4.<java.lang.CaseMapper$1: void <init>()>();

        <java.lang.CaseMapper: java.lang.ThreadLocal EL_UPPER> = $r4;

        return;
    }
}
