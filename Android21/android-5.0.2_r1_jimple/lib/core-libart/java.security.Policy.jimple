public abstract class java.security.Policy extends java.lang.Object
{
    public static final java.security.PermissionCollection UNSUPPORTED_EMPTY_COLLECTION;

    public void <init>()
    {
        java.security.Policy r0;

        r0 := @this: java.security.Policy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.security.Policy getInstance(java.lang.String, java.security.Policy$Parameters) throws java.security.NoSuchAlgorithmException
    {
        java.lang.String r0;
        java.security.Policy$Parameters r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.security.Policy$Parameters;

        return null;
    }

    public static java.security.Policy getInstance(java.lang.String, java.security.Policy$Parameters, java.lang.String) throws java.security.NoSuchProviderException, java.security.NoSuchAlgorithmException
    {
        java.lang.String r0, r2;
        java.security.Policy$Parameters r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.security.Policy$Parameters;

        r2 := @parameter2: java.lang.String;

        return null;
    }

    public static java.security.Policy getInstance(java.lang.String, java.security.Policy$Parameters, java.security.Provider) throws java.security.NoSuchAlgorithmException
    {
        java.lang.String r0;
        java.security.Policy$Parameters r1;
        java.security.Provider r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.security.Policy$Parameters;

        r2 := @parameter2: java.security.Provider;

        return null;
    }

    public java.security.Policy$Parameters getParameters()
    {
        java.security.Policy r0;

        r0 := @this: java.security.Policy;

        return null;
    }

    public java.security.Provider getProvider()
    {
        java.security.Policy r0;

        r0 := @this: java.security.Policy;

        return null;
    }

    public java.lang.String getType()
    {
        java.security.Policy r0;

        r0 := @this: java.security.Policy;

        return null;
    }

    public java.security.PermissionCollection getPermissions(java.security.CodeSource)
    {
        java.security.Policy r0;
        java.security.CodeSource r1;

        r0 := @this: java.security.Policy;

        r1 := @parameter0: java.security.CodeSource;

        return null;
    }

    public void refresh()
    {
        java.security.Policy r0;

        r0 := @this: java.security.Policy;

        return;
    }

    public java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)
    {
        java.security.Policy r0;
        java.security.ProtectionDomain r1;

        r0 := @this: java.security.Policy;

        r1 := @parameter0: java.security.ProtectionDomain;

        return null;
    }

    public boolean implies(java.security.ProtectionDomain, java.security.Permission)
    {
        java.security.Policy r0;
        java.security.ProtectionDomain r1;
        java.security.Permission r2;

        r0 := @this: java.security.Policy;

        r1 := @parameter0: java.security.ProtectionDomain;

        r2 := @parameter1: java.security.Permission;

        return 1;
    }

    public static java.security.Policy getPolicy()
    {
        return null;
    }

    public static void setPolicy(java.security.Policy)
    {
        java.security.Policy r0;

        r0 := @parameter0: java.security.Policy;

        return;
    }

    static void <clinit>()
    {
        java.security.AllPermissionCollection $r0;

        $r0 = new java.security.AllPermissionCollection;

        specialinvoke $r0.<java.security.AllPermissionCollection: void <init>()>();

        <java.security.Policy: java.security.PermissionCollection UNSUPPORTED_EMPTY_COLLECTION> = $r0;

        return;
    }
}
