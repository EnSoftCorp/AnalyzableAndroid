public class java.util.zip.ZipFile$RAFStream extends java.io.InputStream
{
    private final java.io.RandomAccessFile sharedRaf;
    private long endOffset;
    private long offset;

    public void <init>(java.io.RandomAccessFile, long, long)
    {
        java.util.zip.ZipFile$RAFStream r0;
        java.io.RandomAccessFile r1;
        long l0, l1;

        r0 := @this: java.util.zip.ZipFile$RAFStream;

        r1 := @parameter0: java.io.RandomAccessFile;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<java.util.zip.ZipFile$RAFStream: java.io.RandomAccessFile sharedRaf> = r1;

        r0.<java.util.zip.ZipFile$RAFStream: long offset> = l0;

        r0.<java.util.zip.ZipFile$RAFStream: long endOffset> = l1;

        return;
    }

    public void <init>(java.io.RandomAccessFile, long) throws java.io.IOException
    {
        java.util.zip.ZipFile$RAFStream r0;
        java.io.RandomAccessFile r1;
        long l0, $l1;

        r0 := @this: java.util.zip.ZipFile$RAFStream;

        r1 := @parameter0: java.io.RandomAccessFile;

        l0 := @parameter1: long;

        $l1 = virtualinvoke r1.<java.io.RandomAccessFile: long length()>();

        specialinvoke r0.<java.util.zip.ZipFile$RAFStream: void <init>(java.io.RandomAccessFile,long,long)>(r1, l0, $l1);

        return;
    }

    public int available() throws java.io.IOException
    {
        java.util.zip.ZipFile$RAFStream r0;
        long $l0, $l1;
        byte $b2, $b3;

        r0 := @this: java.util.zip.ZipFile$RAFStream;

        $l1 = r0.<java.util.zip.ZipFile$RAFStream: long offset>;

        $l0 = r0.<java.util.zip.ZipFile$RAFStream: long endOffset>;

        $b2 = $l1 cmp $l0;

        if $b2 >= 0 goto label1;

        $b3 = 1;

        goto label2;

     label1:
        $b3 = 0;

     label2:
        return $b3;
    }

    public int read() throws java.io.IOException
    {
        java.util.zip.ZipFile$RAFStream r0;
        int $i0;

        r0 := @this: java.util.zip.ZipFile$RAFStream;

        $i0 = staticinvoke <libcore.io.Streams: int readSingleByte(java.io.InputStream)>(r0);

        return $i0;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        java.util.zip.ZipFile$RAFStream r0;
        byte[] r1;
        int i0, i1, i3;
        java.io.RandomAccessFile r2, $r4, $r5, $r6;
        long l2, $l4, $l5, $l6, $l8, $l9, $l10, $l11;
        java.lang.Throwable r3, $r7;
        byte $b7;

        r0 := @this: java.util.zip.ZipFile$RAFStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r4 = r0.<java.util.zip.ZipFile$RAFStream: java.io.RandomAccessFile sharedRaf>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $l5 = r0.<java.util.zip.ZipFile$RAFStream: long endOffset>;

        $l4 = r0.<java.util.zip.ZipFile$RAFStream: long offset>;

        l2 = $l5 - $l4;

        $l6 = (long) i1;

        $b7 = $l6 cmp l2;

        if $b7 <= 0 goto label2;

        i1 = (int) l2;

     label2:
        $r5 = r0.<java.util.zip.ZipFile$RAFStream: java.io.RandomAccessFile sharedRaf>;

        $l8 = r0.<java.util.zip.ZipFile$RAFStream: long offset>;

        virtualinvoke $r5.<java.io.RandomAccessFile: void seek(long)>($l8);

        $r6 = r0.<java.util.zip.ZipFile$RAFStream: java.io.RandomAccessFile sharedRaf>;

        i3 = virtualinvoke $r6.<java.io.RandomAccessFile: int read(byte[],int,int)>(r1, i0, i1);

        if i3 <= 0 goto label4;

        $l11 = r0.<java.util.zip.ZipFile$RAFStream: long offset>;

        $l9 = (long) i3;

        $l10 = $l11 + $l9;

        r0.<java.util.zip.ZipFile$RAFStream: long offset> = $l10;

        exitmonitor r2;

     label3:
        return i3;

     label4:
        exitmonitor r2;

     label5:
        return -1;

     label6:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label7:
        throw r3;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public long skip(long) throws java.io.IOException
    {
        java.util.zip.ZipFile$RAFStream r0;
        long l0, $l1, $l2, $l3, $l5, $l6, $l7, $l8;
        byte $b4;

        r0 := @this: java.util.zip.ZipFile$RAFStream;

        l0 := @parameter0: long;

        $l2 = r0.<java.util.zip.ZipFile$RAFStream: long endOffset>;

        $l1 = r0.<java.util.zip.ZipFile$RAFStream: long offset>;

        $l3 = $l2 - $l1;

        $b4 = l0 cmp $l3;

        if $b4 <= 0 goto label1;

        $l8 = r0.<java.util.zip.ZipFile$RAFStream: long endOffset>;

        $l7 = r0.<java.util.zip.ZipFile$RAFStream: long offset>;

        l0 = $l8 - $l7;

     label1:
        $l5 = r0.<java.util.zip.ZipFile$RAFStream: long offset>;

        $l6 = $l5 + l0;

        r0.<java.util.zip.ZipFile$RAFStream: long offset> = $l6;

        return l0;
    }

    public int fill(java.util.zip.Inflater, int) throws java.io.IOException
    {
        java.util.zip.ZipFile$RAFStream r0;
        java.util.zip.Inflater r1;
        int i0, i1, i2, $i6;
        java.io.RandomAccessFile r2, $r4, $r5;
        java.lang.Throwable r3, $r7;
        long $l3, $l4, $l5, $l7, $l8;
        java.io.FileDescriptor $r6;

        r0 := @this: java.util.zip.ZipFile$RAFStream;

        r1 := @parameter0: java.util.zip.Inflater;

        i0 := @parameter1: int;

        $r4 = r0.<java.util.zip.ZipFile$RAFStream: java.io.RandomAccessFile sharedRaf>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $l4 = r0.<java.util.zip.ZipFile$RAFStream: long endOffset>;

        $l3 = r0.<java.util.zip.ZipFile$RAFStream: long offset>;

        $l5 = $l4 - $l3;

        $i6 = (int) $l5;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>($i6, i0);

        $r5 = r0.<java.util.zip.ZipFile$RAFStream: java.io.RandomAccessFile sharedRaf>;

        $r6 = virtualinvoke $r5.<java.io.RandomAccessFile: java.io.FileDescriptor getFD()>();

        $l7 = r0.<java.util.zip.ZipFile$RAFStream: long offset>;

        i2 = virtualinvoke r1.<java.util.zip.Inflater: int setFileInput(java.io.FileDescriptor,long,int)>($r6, $l7, i0);

        $l8 = (long) i2;

        virtualinvoke r0.<java.util.zip.ZipFile$RAFStream: long skip(long)>($l8);

        exitmonitor r2;

     label2:
        return i1;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static long access$102(java.util.zip.ZipFile$RAFStream, long)
    {
        java.util.zip.ZipFile$RAFStream r0;
        long l0;

        r0 := @parameter0: java.util.zip.ZipFile$RAFStream;

        l0 := @parameter1: long;

        r0.<java.util.zip.ZipFile$RAFStream: long endOffset> = l0;

        return l0;
    }

    static long access$200(java.util.zip.ZipFile$RAFStream)
    {
        java.util.zip.ZipFile$RAFStream r0;
        long $l0;

        r0 := @parameter0: java.util.zip.ZipFile$RAFStream;

        $l0 = r0.<java.util.zip.ZipFile$RAFStream: long offset>;

        return $l0;
    }
}
