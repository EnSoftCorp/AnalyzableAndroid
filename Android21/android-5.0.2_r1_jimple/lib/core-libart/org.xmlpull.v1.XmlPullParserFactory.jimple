public class org.xmlpull.v1.XmlPullParserFactory extends java.lang.Object
{
    public static final java.lang.String PROPERTY_NAME;
    protected java.util.ArrayList parserClasses;
    protected java.util.ArrayList serializerClasses;
    protected java.lang.String classNamesLocation;
    protected java.util.HashMap features;

    protected void <init>()
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.util.HashMap $r2;
        java.util.ArrayList $r3, $r4, $r5, $r7;
        java.lang.Class $r6, $r8;
        java.lang.ClassNotFoundException $r9;
        java.lang.AssertionError $r10;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.xmlpull.v1.XmlPullParserFactory: java.lang.String classNamesLocation> = null;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.HashMap features> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList parserClasses> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList serializerClasses> = $r4;

     label1:
        $r5 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList parserClasses>;

        $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.kxml2.io.KXmlParser");

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $r7 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList serializerClasses>;

        $r8 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.kxml2.io.KXmlSerializer");

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label4:
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public void setFeature(java.lang.String, boolean) throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.lang.String r1;
        boolean z0;
        java.util.HashMap $r2;
        java.lang.Boolean $r3;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.HashMap features>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return;
    }

    public boolean getFeature(java.lang.String)
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.lang.String r1;
        java.lang.Boolean r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.HashMap features>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.Boolean) $r4;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setNamespaceAware(boolean)
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        boolean z0;
        java.util.HashMap $r1;
        java.lang.Boolean $r2;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.HashMap features>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xmlpull.org/v1/doc/features.html#process-namespaces", $r2);

        return;
    }

    public boolean isNamespaceAware()
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $z0 = virtualinvoke r0.<org.xmlpull.v1.XmlPullParserFactory: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#process-namespaces");

        return $z0;
    }

    public void setValidating(boolean)
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        boolean z0;
        java.util.HashMap $r1;
        java.lang.Boolean $r2;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.HashMap features>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xmlpull.org/v1/doc/features.html#validation", $r2);

        return;
    }

    public boolean isValidating()
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        boolean $z0;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $z0 = virtualinvoke r0.<org.xmlpull.v1.XmlPullParserFactory: boolean getFeature(java.lang.String)>("http://xmlpull.org/v1/doc/features.html#validation");

        return $z0;
    }

    public org.xmlpull.v1.XmlPullParser newPullParser() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.HashMap $r4;
        java.util.Set $r5;
        boolean $z0, $z1, $z2;
        java.lang.Object $r6, $r7, $r9, $r11;
        java.lang.Boolean $r8, $r12;
        java.lang.String $r10;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        r1 = specialinvoke r0.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParser getParserInstance()>();

        $r4 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.HashMap features>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = (java.lang.Boolean) $r7;

        $z1 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label2;

        $r9 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = (java.lang.String) $r9;

        $r11 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (java.lang.Boolean) $r11;

        $z2 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: void setFeature(java.lang.String,boolean)>($r10, $z2);

     label2:
        goto label1;

     label3:
        return r1;
    }

    private org.xmlpull.v1.XmlPullParser getParserInstance() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.util.ArrayList r1, $r5, $r7, $r8, $r9;
        java.util.Iterator r2;
        java.lang.Object r3, $r10;
        java.lang.Class r4;
        org.xmlpull.v1.XmlPullParserException $r6;
        boolean $z0, $z1;
        org.xmlpull.v1.XmlPullParser $r11;
        java.lang.InstantiationException $r12, r15;
        java.lang.IllegalAccessException $r13, r16;
        java.lang.ClassCastException $r14, r17;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        r1 = null;

        $r5 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList parserClasses>;

        if $r5 == null goto label9;

        $r7 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList parserClasses>;

        $z0 = virtualinvoke $r7.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label9;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r1 = $r8;

        $r9 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList parserClasses>;

        r2 = virtualinvoke $r9.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label9;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

     label2:
        if r3 == null goto label4;

        r4 = (java.lang.Class) r3;

        $r10 = virtualinvoke r4.<java.lang.Class: java.lang.Object newInstance()>();

        $r11 = (org.xmlpull.v1.XmlPullParser) $r10;

     label3:
        return $r11;

     label4:
        goto label8;

     label5:
        $r12 := @caughtexception;

        r15 = $r12;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r15);

        goto label8;

     label6:
        $r13 := @caughtexception;

        r16 = $r13;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r16);

        goto label8;

     label7:
        $r14 := @caughtexception;

        r17 = $r14;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r17);

     label8:
        goto label1;

     label9:
        $r6 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserException newInstantiationException(java.lang.String,java.util.ArrayList)>("Invalid parser class list", r1);

        throw $r6;

        catch java.lang.InstantiationException from label2 to label3 with label5;
        catch java.lang.IllegalAccessException from label2 to label3 with label6;
        catch java.lang.ClassCastException from label2 to label3 with label7;
    }

    private org.xmlpull.v1.XmlSerializer getSerializerInstance() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        java.util.ArrayList r1, $r5, $r7, $r8, $r9;
        java.util.Iterator r2;
        java.lang.Object r3, $r10;
        java.lang.Class r4;
        org.xmlpull.v1.XmlPullParserException $r6;
        boolean $z0, $z1;
        org.xmlpull.v1.XmlSerializer $r11;
        java.lang.IllegalAccessException $r12, r16;
        java.lang.InstantiationException $r13, r15;
        java.lang.ClassCastException $r14, r17;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        r1 = null;

        $r5 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList serializerClasses>;

        if $r5 == null goto label9;

        $r7 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList serializerClasses>;

        $z0 = virtualinvoke $r7.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label9;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r1 = $r8;

        $r9 = r0.<org.xmlpull.v1.XmlPullParserFactory: java.util.ArrayList serializerClasses>;

        r2 = virtualinvoke $r9.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label9;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

     label2:
        if r3 == null goto label4;

        r4 = (java.lang.Class) r3;

        $r10 = virtualinvoke r4.<java.lang.Class: java.lang.Object newInstance()>();

        $r11 = (org.xmlpull.v1.XmlSerializer) $r10;

     label3:
        return $r11;

     label4:
        goto label8;

     label5:
        $r13 := @caughtexception;

        r15 = $r13;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r15);

        goto label8;

     label6:
        $r12 := @caughtexception;

        r16 = $r12;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r16);

        goto label8;

     label7:
        $r14 := @caughtexception;

        r17 = $r14;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r17);

     label8:
        goto label1;

     label9:
        $r6 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserException newInstantiationException(java.lang.String,java.util.ArrayList)>("Invalid serializer class list", r1);

        throw $r6;

        catch java.lang.InstantiationException from label2 to label3 with label5;
        catch java.lang.IllegalAccessException from label2 to label3 with label6;
        catch java.lang.ClassCastException from label2 to label3 with label7;
    }

    private static org.xmlpull.v1.XmlPullParserException newInstantiationException(java.lang.String, java.util.ArrayList)
    {
        java.lang.String r0;
        java.util.ArrayList r1;
        org.xmlpull.v1.XmlPullParserException r2, $r5, $r6;
        java.util.Iterator r3;
        java.lang.Exception r4;
        boolean $z0, $z1;
        java.lang.Object $r7;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.ArrayList;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $r5 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r5.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>(r0);

        return $r5;

     label2:
        $r6 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r6.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>(r0);

        r2 = $r6;

        r3 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.Exception) $r7;

        virtualinvoke r2.<org.xmlpull.v1.XmlPullParserException: void addSuppressed(java.lang.Throwable)>(r4);

        goto label3;

     label4:
        return r2;
    }

    public org.xmlpull.v1.XmlSerializer newSerializer() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParserFactory r0;
        org.xmlpull.v1.XmlSerializer $r1;

        r0 := @this: org.xmlpull.v1.XmlPullParserFactory;

        $r1 = specialinvoke r0.<org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlSerializer getSerializerInstance()>();

        return $r1;
    }

    public static org.xmlpull.v1.XmlPullParserFactory newInstance() throws org.xmlpull.v1.XmlPullParserException
    {
        org.xmlpull.v1.XmlPullParserFactory $r0;

        $r0 = new org.xmlpull.v1.XmlPullParserFactory;

        specialinvoke $r0.<org.xmlpull.v1.XmlPullParserFactory: void <init>()>();

        return $r0;
    }

    public static org.xmlpull.v1.XmlPullParserFactory newInstance(java.lang.String, java.lang.Class) throws org.xmlpull.v1.XmlPullParserException
    {
        java.lang.String r0;
        java.lang.Class r1;
        org.xmlpull.v1.XmlPullParserFactory $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        $r2 = staticinvoke <org.xmlpull.v1.XmlPullParserFactory: org.xmlpull.v1.XmlPullParserFactory newInstance()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <org.xmlpull.v1.XmlPullParserFactory: java.lang.String PROPERTY_NAME> = "org.xmlpull.v1.XmlPullParserFactory";

        return;
    }
}
