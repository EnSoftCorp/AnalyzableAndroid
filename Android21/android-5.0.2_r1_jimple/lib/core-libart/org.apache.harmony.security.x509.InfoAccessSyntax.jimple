public final class org.apache.harmony.security.x509.InfoAccessSyntax extends org.apache.harmony.security.x509.ExtensionValue
{
    private final java.util.List accessDescriptions;
    public static final org.apache.harmony.security.asn1.ASN1Type ASN1;

    private void <init>(java.util.List, byte[]) throws java.io.IOException
    {
        org.apache.harmony.security.x509.InfoAccessSyntax r0;
        java.util.List r1;
        byte[] r2;
        java.io.IOException $r3;
        boolean $z0;

        r0 := @this: org.apache.harmony.security.x509.InfoAccessSyntax;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: byte[];

        specialinvoke r0.<org.apache.harmony.security.x509.ExtensionValue: void <init>()>();

        if r1 == null goto label1;

        $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("AccessDescriptions list is null or empty");

        throw $r3;

     label2:
        r0.<org.apache.harmony.security.x509.InfoAccessSyntax: java.util.List accessDescriptions> = r1;

        r0.<org.apache.harmony.security.x509.InfoAccessSyntax: byte[] encoding> = r2;

        return;
    }

    public byte[] getEncoded()
    {
        org.apache.harmony.security.x509.InfoAccessSyntax r0;
        byte[] $r1, $r2, $r4;
        org.apache.harmony.security.asn1.ASN1Type $r3;

        r0 := @this: org.apache.harmony.security.x509.InfoAccessSyntax;

        $r1 = r0.<org.apache.harmony.security.x509.InfoAccessSyntax: byte[] encoding>;

        if $r1 != null goto label1;

        $r3 = <org.apache.harmony.security.x509.InfoAccessSyntax: org.apache.harmony.security.asn1.ASN1Type ASN1>;

        $r4 = virtualinvoke $r3.<org.apache.harmony.security.asn1.ASN1Type: byte[] encode(java.lang.Object)>(r0);

        r0.<org.apache.harmony.security.x509.InfoAccessSyntax: byte[] encoding> = $r4;

     label1:
        $r2 = r0.<org.apache.harmony.security.x509.InfoAccessSyntax: byte[] encoding>;

        return $r2;
    }

    public static org.apache.harmony.security.x509.InfoAccessSyntax decode(byte[]) throws java.io.IOException
    {
        byte[] r0;
        org.apache.harmony.security.asn1.ASN1Type $r1;
        java.lang.Object $r2;
        org.apache.harmony.security.x509.InfoAccessSyntax $r3;

        r0 := @parameter0: byte[];

        $r1 = <org.apache.harmony.security.x509.InfoAccessSyntax: org.apache.harmony.security.asn1.ASN1Type ASN1>;

        $r2 = virtualinvoke $r1.<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(byte[])>(r0);

        $r3 = (org.apache.harmony.security.x509.InfoAccessSyntax) $r2;

        return $r3;
    }

    public java.lang.String toString()
    {
        org.apache.harmony.security.x509.InfoAccessSyntax r0;
        java.lang.StringBuilder r1, $r4;
        java.util.Iterator r2;
        java.lang.Object r3;
        java.util.List $r6, $r9;
        java.lang.String $r8;
        boolean $z0;

        r0 := @this: org.apache.harmony.security.x509.InfoAccessSyntax;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r1 = $r4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n---- InfoAccessSyntax:");

        $r6 = r0.<org.apache.harmony.security.x509.InfoAccessSyntax: java.util.List accessDescriptions>;

        if $r6 == null goto label2;

        $r9 = r0.<org.apache.harmony.security.x509.InfoAccessSyntax: java.util.List accessDescriptions>;

        r2 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        goto label1;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n---- InfoAccessSyntax END\n");

        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public void dumpValue(java.lang.StringBuilder, java.lang.String)
    {
        org.apache.harmony.security.x509.InfoAccessSyntax r0;
        java.lang.StringBuilder r1, $r5;
        java.lang.String r2, $r11;
        java.util.Iterator r3;
        java.lang.Object r4;
        java.util.List $r7, $r9, $r10;
        boolean $z0, $z1;

        r0 := @this: org.apache.harmony.security.x509.InfoAccessSyntax;

        r1 := @parameter0: java.lang.StringBuilder;

        r2 := @parameter1: java.lang.String;

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AccessDescriptions:\n");

        $r7 = r0.<org.apache.harmony.security.x509.InfoAccessSyntax: java.util.List accessDescriptions>;

        if $r7 == null goto label1;

        $r9 = r0.<org.apache.harmony.security.x509.InfoAccessSyntax: java.util.List accessDescriptions>;

        $z0 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NULL\n");

        goto label4;

     label2:
        $r10 = r0.<org.apache.harmony.security.x509.InfoAccessSyntax: java.util.List accessDescriptions>;

        r3 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r11 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        goto label3;

     label4:
        return;
    }

    void <init>(java.util.List, byte[], org.apache.harmony.security.x509.InfoAccessSyntax$1) throws java.io.IOException
    {
        org.apache.harmony.security.x509.InfoAccessSyntax r0;
        java.util.List r1;
        byte[] r2;
        org.apache.harmony.security.x509.InfoAccessSyntax$1 r3;

        r0 := @this: org.apache.harmony.security.x509.InfoAccessSyntax;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: byte[];

        r3 := @parameter2: org.apache.harmony.security.x509.InfoAccessSyntax$1;

        specialinvoke r0.<org.apache.harmony.security.x509.InfoAccessSyntax: void <init>(java.util.List,byte[])>(r1, r2);

        return;
    }

    static java.util.List access$100(org.apache.harmony.security.x509.InfoAccessSyntax)
    {
        org.apache.harmony.security.x509.InfoAccessSyntax r0;
        java.util.List $r1;

        r0 := @parameter0: org.apache.harmony.security.x509.InfoAccessSyntax;

        $r1 = r0.<org.apache.harmony.security.x509.InfoAccessSyntax: java.util.List accessDescriptions>;

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.harmony.security.x509.InfoAccessSyntax$1 $r0;
        org.apache.harmony.security.asn1.ASN1Sequence $r1;

        $r0 = new org.apache.harmony.security.x509.InfoAccessSyntax$1;

        $r1 = <org.apache.harmony.security.x509.AccessDescription: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        specialinvoke $r0.<org.apache.harmony.security.x509.InfoAccessSyntax$1: void <init>(org.apache.harmony.security.asn1.ASN1Type)>($r1);

        <org.apache.harmony.security.x509.InfoAccessSyntax: org.apache.harmony.security.asn1.ASN1Type ASN1> = $r0;

        return;
    }
}
