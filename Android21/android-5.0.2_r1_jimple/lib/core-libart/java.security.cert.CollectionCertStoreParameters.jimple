public class java.security.cert.CollectionCertStoreParameters extends java.lang.Object implements java.security.cert.CertStoreParameters
{
    private static final java.util.Collection defaultCollection;
    private final java.util.Collection collection;

    public void <init>()
    {
        java.security.cert.CollectionCertStoreParameters r0;
        java.util.Collection $r1;

        r0 := @this: java.security.cert.CollectionCertStoreParameters;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <java.security.cert.CollectionCertStoreParameters: java.util.Collection defaultCollection>;

        r0.<java.security.cert.CollectionCertStoreParameters: java.util.Collection collection> = $r1;

        return;
    }

    public void <init>(java.util.Collection)
    {
        java.security.cert.CollectionCertStoreParameters r0;
        java.util.Collection r1;
        java.lang.NullPointerException $r2;

        r0 := @this: java.security.cert.CollectionCertStoreParameters;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("collection == null");

        throw $r2;

     label1:
        r0.<java.security.cert.CollectionCertStoreParameters: java.util.Collection collection> = r1;

        return;
    }

    public java.lang.Object clone()
    {
        java.security.cert.CollectionCertStoreParameters r0;
        java.lang.Object $r2;
        java.lang.CloneNotSupportedException $r3;

        r0 := @this: java.security.cert.CollectionCertStoreParameters;

     label1:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        return null;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public java.util.Collection getCollection()
    {
        java.security.cert.CollectionCertStoreParameters r0;
        java.util.Collection $r1;

        r0 := @this: java.security.cert.CollectionCertStoreParameters;

        $r1 = r0.<java.security.cert.CollectionCertStoreParameters: java.util.Collection collection>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.security.cert.CollectionCertStoreParameters r0;
        java.lang.StringBuilder r1, $r2;
        java.util.Collection $r3;
        java.lang.String $r4, $r7;

        r0 := @this: java.security.cert.CollectionCertStoreParameters;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("CollectionCertStoreParameters: [\ncollection: ");

        r1 = $r2;

        $r3 = virtualinvoke r0.<java.security.cert.CollectionCertStoreParameters: java.util.Collection getCollection()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n]");

        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    static void <clinit>()
    {
        java.util.Set $r0;

        $r0 = <java.util.Collections: java.util.Set EMPTY_SET>;

        <java.security.cert.CollectionCertStoreParameters: java.util.Collection defaultCollection> = $r0;

        return;
    }
}
