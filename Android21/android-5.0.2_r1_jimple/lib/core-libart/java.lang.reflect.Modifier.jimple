public class java.lang.reflect.Modifier extends java.lang.Object
{
    public static final int PUBLIC;
    public static final int PRIVATE;
    public static final int PROTECTED;
    public static final int STATIC;
    public static final int FINAL;
    public static final int SYNCHRONIZED;
    public static final int VOLATILE;
    public static final int TRANSIENT;
    public static final int NATIVE;
    public static final int INTERFACE;
    public static final int ABSTRACT;
    public static final int STRICT;
    static final int BRIDGE;
    static final int VARARGS;
    public static final int SYNTHETIC;
    static final int ANNOTATION;
    static final int ENUM;
    public static final int MIRANDA;
    public static final int CONSTRUCTOR;

    public void <init>()
    {
        java.lang.reflect.Modifier r0;

        r0 := @this: java.lang.reflect.Modifier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int classModifiers()
    {
        return 3103;
    }

    public static int constructorModifiers()
    {
        return 7;
    }

    public static int fieldModifiers()
    {
        return 223;
    }

    public static int interfaceModifiers()
    {
        return 3087;
    }

    public static int methodModifiers()
    {
        return 3391;
    }

    public static boolean isAbstract(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 1024;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isFinal(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 16;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isInterface(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 512;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isNative(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 256;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isPrivate(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isProtected(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isPublic(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isStatic(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 8;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isStrict(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 2048;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isSynchronized(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 32;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isTransient(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 128;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isVolatile(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 64;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isConstructor(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 65536;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static java.lang.String toString(int)
    {
        int i0, $i1, $i2, $i3;
        java.lang.StringBuilder r0, $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.lang.String $r3;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        r0 = $r1;

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>(i0);

        if $z0 == 0 goto label01;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("public ");

     label01:
        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isProtected(int)>(i0);

        if $z1 == 0 goto label02;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("protected ");

     label02:
        $z2 = staticinvoke <java.lang.reflect.Modifier: boolean isPrivate(int)>(i0);

        if $z2 == 0 goto label03;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("private ");

     label03:
        $z3 = staticinvoke <java.lang.reflect.Modifier: boolean isAbstract(int)>(i0);

        if $z3 == 0 goto label04;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("abstract ");

     label04:
        $z4 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>(i0);

        if $z4 == 0 goto label05;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("static ");

     label05:
        $z5 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>(i0);

        if $z5 == 0 goto label06;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("final ");

     label06:
        $z6 = staticinvoke <java.lang.reflect.Modifier: boolean isTransient(int)>(i0);

        if $z6 == 0 goto label07;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("transient ");

     label07:
        $z7 = staticinvoke <java.lang.reflect.Modifier: boolean isVolatile(int)>(i0);

        if $z7 == 0 goto label08;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("volatile ");

     label08:
        $z8 = staticinvoke <java.lang.reflect.Modifier: boolean isSynchronized(int)>(i0);

        if $z8 == 0 goto label09;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("synchronized ");

     label09:
        $z9 = staticinvoke <java.lang.reflect.Modifier: boolean isNative(int)>(i0);

        if $z9 == 0 goto label10;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("native ");

     label10:
        $z10 = staticinvoke <java.lang.reflect.Modifier: boolean isStrict(int)>(i0);

        if $z10 == 0 goto label11;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("strictfp ");

     label11:
        $z11 = staticinvoke <java.lang.reflect.Modifier: boolean isInterface(int)>(i0);

        if $z11 == 0 goto label12;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("interface ");

     label12:
        $i1 = virtualinvoke r0.<java.lang.StringBuilder: int length()>();

        if $i1 != 0 goto label13;

        return "";

     label13:
        $i3 = virtualinvoke r0.<java.lang.StringBuilder: int length()>();

        $i2 = $i3 - 1;

        virtualinvoke r0.<java.lang.StringBuilder: void setLength(int)>($i2);

        $r3 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static void <clinit>()
    {
        <java.lang.reflect.Modifier: int CONSTRUCTOR> = 65536;

        <java.lang.reflect.Modifier: int MIRANDA> = 2097152;

        <java.lang.reflect.Modifier: int ENUM> = 16384;

        <java.lang.reflect.Modifier: int ANNOTATION> = 8192;

        <java.lang.reflect.Modifier: int SYNTHETIC> = 4096;

        <java.lang.reflect.Modifier: int VARARGS> = 128;

        <java.lang.reflect.Modifier: int BRIDGE> = 64;

        <java.lang.reflect.Modifier: int STRICT> = 2048;

        <java.lang.reflect.Modifier: int ABSTRACT> = 1024;

        <java.lang.reflect.Modifier: int INTERFACE> = 512;

        <java.lang.reflect.Modifier: int NATIVE> = 256;

        <java.lang.reflect.Modifier: int TRANSIENT> = 128;

        <java.lang.reflect.Modifier: int VOLATILE> = 64;

        <java.lang.reflect.Modifier: int SYNCHRONIZED> = 32;

        <java.lang.reflect.Modifier: int FINAL> = 16;

        <java.lang.reflect.Modifier: int STATIC> = 8;

        <java.lang.reflect.Modifier: int PROTECTED> = 4;

        <java.lang.reflect.Modifier: int PRIVATE> = 2;

        <java.lang.reflect.Modifier: int PUBLIC> = 1;

        return;
    }
}
