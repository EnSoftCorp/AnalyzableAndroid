public class javax.xml.transform.TransformerException extends java.lang.Exception
{
    private static final long serialVersionUID;
    javax.xml.transform.SourceLocator locator;
    java.lang.Throwable containedException;

    public javax.xml.transform.SourceLocator getLocator()
    {
        javax.xml.transform.TransformerException r0;
        javax.xml.transform.SourceLocator $r1;

        r0 := @this: javax.xml.transform.TransformerException;

        $r1 = r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator>;

        return $r1;
    }

    public void setLocator(javax.xml.transform.SourceLocator)
    {
        javax.xml.transform.TransformerException r0;
        javax.xml.transform.SourceLocator r1;

        r0 := @this: javax.xml.transform.TransformerException;

        r1 := @parameter0: javax.xml.transform.SourceLocator;

        r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator> = r1;

        return;
    }

    public java.lang.Throwable getException()
    {
        javax.xml.transform.TransformerException r0;
        java.lang.Throwable $r1;

        r0 := @this: javax.xml.transform.TransformerException;

        $r1 = r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException>;

        return $r1;
    }

    public java.lang.Throwable getCause()
    {
        javax.xml.transform.TransformerException r0;
        java.lang.Throwable $r1, $r2;

        r0 := @this: javax.xml.transform.TransformerException;

        $r1 = r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException>;

        if $r1 != r0 goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException>;

     label2:
        return $r2;
    }

    public synchronized java.lang.Throwable initCause(java.lang.Throwable)
    {
        javax.xml.transform.TransformerException r0;
        java.lang.Throwable r1, $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: javax.xml.transform.TransformerException;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException>;

        if $r2 == null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t overwrite cause");

        throw $r4;

     label1:
        if r1 != r0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Self-causation not permitted");

        throw $r3;

     label2:
        r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException> = r1;

        return r0;
    }

    public void <init>(java.lang.String)
    {
        javax.xml.transform.TransformerException r0;
        java.lang.String r1;

        r0 := @this: javax.xml.transform.TransformerException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException> = null;

        r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator> = null;

        return;
    }

    public void <init>(java.lang.Throwable)
    {
        javax.xml.transform.TransformerException r0;
        java.lang.Throwable r1;
        java.lang.String $r2;

        r0 := @this: javax.xml.transform.TransformerException;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = virtualinvoke r1.<java.lang.Throwable: java.lang.String toString()>();

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>($r2);

        r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException> = r1;

        r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator> = null;

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        javax.xml.transform.TransformerException r0;
        java.lang.String r1, $r3;
        java.lang.Throwable r2;
        int $i0;

        r0 := @this: javax.xml.transform.TransformerException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r3 = virtualinvoke r2.<java.lang.Throwable: java.lang.String toString()>();

        goto label3;

     label2:
        $r3 = r1;

     label3:
        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>($r3);

        r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException> = r2;

        r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator> = null;

        return;
    }

    public void <init>(java.lang.String, javax.xml.transform.SourceLocator)
    {
        javax.xml.transform.TransformerException r0;
        java.lang.String r1;
        javax.xml.transform.SourceLocator r2;

        r0 := @this: javax.xml.transform.TransformerException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.xml.transform.SourceLocator;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException> = null;

        r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator> = r2;

        return;
    }

    public void <init>(java.lang.String, javax.xml.transform.SourceLocator, java.lang.Throwable)
    {
        javax.xml.transform.TransformerException r0;
        java.lang.String r1;
        javax.xml.transform.SourceLocator r2;
        java.lang.Throwable r3;

        r0 := @this: javax.xml.transform.TransformerException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.xml.transform.SourceLocator;

        r3 := @parameter2: java.lang.Throwable;

        specialinvoke r0.<java.lang.Exception: void <init>(java.lang.String)>(r1);

        r0.<javax.xml.transform.TransformerException: java.lang.Throwable containedException> = r3;

        r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator> = r2;

        return;
    }

    public java.lang.String getMessageAndLocation()
    {
        javax.xml.transform.TransformerException r0;
        java.lang.StringBuilder r1, $r4;
        java.lang.String r2, r3, $r6;
        int i0, i1;
        javax.xml.transform.SourceLocator $r5, $r7, $r8, $r9;

        r0 := @this: javax.xml.transform.TransformerException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r1 = $r4;

        r2 = specialinvoke r0.<java.lang.Exception: java.lang.String getMessage()>();

        if null == r2 goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

     label1:
        $r5 = r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator>;

        if null == $r5 goto label4;

        $r7 = r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator>;

        r3 = interfaceinvoke $r7.<javax.xml.transform.SourceLocator: java.lang.String getSystemId()>();

        $r8 = r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator>;

        i0 = interfaceinvoke $r8.<javax.xml.transform.SourceLocator: int getLineNumber()>();

        $r9 = r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator>;

        i1 = interfaceinvoke $r9.<javax.xml.transform.SourceLocator: int getColumnNumber()>();

        if null == r3 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; SystemID: ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

     label2:
        if 0 == i0 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; Line#: ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

     label3:
        if 0 == i1 goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; Column#: ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

     label4:
        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public java.lang.String getLocationAsString()
    {
        javax.xml.transform.TransformerException r0;
        java.lang.StringBuilder r1, $r4;
        java.lang.String r2, $r8;
        int i0, i1;
        javax.xml.transform.SourceLocator $r3, $r5, $r6, $r7;

        r0 := @this: javax.xml.transform.TransformerException;

        $r3 = r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator>;

        if null == $r3 goto label4;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r1 = $r4;

        $r5 = r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator>;

        r2 = interfaceinvoke $r5.<javax.xml.transform.SourceLocator: java.lang.String getSystemId()>();

        $r6 = r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator>;

        i0 = interfaceinvoke $r6.<javax.xml.transform.SourceLocator: int getLineNumber()>();

        $r7 = r0.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator locator>;

        i1 = interfaceinvoke $r7.<javax.xml.transform.SourceLocator: int getColumnNumber()>();

        if null == r2 goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; SystemID: ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

     label1:
        if 0 == i0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; Line#: ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

     label2:
        if 0 == i1 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; Column#: ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

     label3:
        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;

     label4:
        return null;
    }

    public void printStackTrace()
    {
        javax.xml.transform.TransformerException r0;
        java.io.PrintWriter $r1;
        java.io.PrintStream $r2;

        r0 := @this: javax.xml.transform.TransformerException;

        $r1 = new java.io.PrintWriter;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.OutputStream,boolean)>($r2, 1);

        virtualinvoke r0.<javax.xml.transform.TransformerException: void printStackTrace(java.io.PrintWriter)>($r1);

        return;
    }

    public void printStackTrace(java.io.PrintStream)
    {
        javax.xml.transform.TransformerException r0;
        java.io.PrintStream r1;
        java.io.PrintWriter $r2;

        r0 := @this: javax.xml.transform.TransformerException;

        r1 := @parameter0: java.io.PrintStream;

        $r2 = new java.io.PrintWriter;

        specialinvoke $r2.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(r1);

        virtualinvoke r0.<javax.xml.transform.TransformerException: void printStackTrace(java.io.PrintWriter)>($r2);

        return;
    }

    public void printStackTrace(java.io.PrintWriter)
    {
        javax.xml.transform.TransformerException r0;
        java.io.PrintWriter r1, $r3;
        java.lang.String r2;
        java.io.PrintStream $r4;
        java.lang.Throwable $r5;

        r0 := @this: javax.xml.transform.TransformerException;

        r1 := @parameter0: java.io.PrintWriter;

        if r1 != null goto label1;

        $r3 = new java.io.PrintWriter;

        $r4 = <java.lang.System: java.io.PrintStream err>;

        specialinvoke $r3.<java.io.PrintWriter: void <init>(java.io.OutputStream,boolean)>($r4, 1);

        r1 = $r3;

     label1:
        r2 = virtualinvoke r0.<javax.xml.transform.TransformerException: java.lang.String getLocationAsString()>();

        if null == r2 goto label2;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(r2);

     label2:
        specialinvoke r0.<java.lang.Exception: void printStackTrace(java.io.PrintWriter)>(r1);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

     label5:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public static void <clinit>()
    {
        <javax.xml.transform.TransformerException: long serialVersionUID> = 975798773772956428L;

        return;
    }
}
