abstract class java.util.TreeMap$NavigableSubMap extends java.util.AbstractMap implements java.io.Serializable
{
    private static final long serialVersionUID;
    java.util.TreeMap m;
    java.lang.Object lo;
    java.lang.Object hi;
    boolean fromStart;
    boolean toEnd;
    boolean loInclusive;
    boolean hiInclusive;

    void <init>(java.util.TreeMap, java.lang.Object, java.util.TreeMap$Bound, java.lang.Object, java.util.TreeMap$Bound)
    {
        java.util.TreeMap$NavigableSubMap r0;
        java.util.TreeMap r1;
        java.lang.Object r2, r4;
        java.util.TreeMap$Bound r3, r5, $r6, $r7, $r8, $r9;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: java.util.TreeMap$NavigableSubMap;

        r1 := @parameter0: java.util.TreeMap;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.util.TreeMap$Bound;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.util.TreeMap$Bound;

        specialinvoke r0.<java.util.AbstractMap: void <init>()>();

        r0.<java.util.TreeMap$NavigableSubMap: java.util.TreeMap m> = r1;

        r0.<java.util.TreeMap$NavigableSubMap: java.lang.Object lo> = r2;

        r0.<java.util.TreeMap$NavigableSubMap: java.lang.Object hi> = r4;

        $r6 = <java.util.TreeMap$Bound: java.util.TreeMap$Bound NO_BOUND>;

        if r3 != $r6 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        r0.<java.util.TreeMap$NavigableSubMap: boolean fromStart> = $z3;

        $r7 = <java.util.TreeMap$Bound: java.util.TreeMap$Bound NO_BOUND>;

        if r5 != $r7 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        r0.<java.util.TreeMap$NavigableSubMap: boolean toEnd> = $z2;

        $r8 = <java.util.TreeMap$Bound: java.util.TreeMap$Bound INCLUSIVE>;

        if r3 != $r8 goto label5;

        $z1 = 1;

        goto label6;

     label5:
        $z1 = 0;

     label6:
        r0.<java.util.TreeMap$NavigableSubMap: boolean loInclusive> = $z1;

        $r9 = <java.util.TreeMap$Bound: java.util.TreeMap$Bound INCLUSIVE>;

        if r5 != $r9 goto label7;

        $z0 = 1;

        goto label8;

     label7:
        $z0 = 0;

     label8:
        r0.<java.util.TreeMap$NavigableSubMap: boolean hiInclusive> = $z0;

        return;
    }

    public java.util.Set entrySet()
    {
        java.util.TreeMap$NavigableSubMap r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: java.util.TreeMap$NavigableSubMap;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    protected java.lang.Object readResolve() throws java.io.ObjectStreamException
    {
        java.util.TreeMap$NavigableSubMap r0;
        java.util.TreeMap$Bound r1, r2, $r8, $r9;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.TreeMap$BoundedMap $r3;
        java.util.TreeMap $r4;
        java.lang.Object $r6, $r7;

        r0 := @this: java.util.TreeMap$NavigableSubMap;

        $z1 = r0.<java.util.TreeMap$NavigableSubMap: boolean fromStart>;

        if $z1 == 0 goto label1;

        $r9 = <java.util.TreeMap$Bound: java.util.TreeMap$Bound NO_BOUND>;

        goto label3;

     label1:
        $z2 = r0.<java.util.TreeMap$NavigableSubMap: boolean loInclusive>;

        if $z2 == 0 goto label2;

        $r9 = <java.util.TreeMap$Bound: java.util.TreeMap$Bound INCLUSIVE>;

        goto label3;

     label2:
        $r9 = <java.util.TreeMap$Bound: java.util.TreeMap$Bound EXCLUSIVE>;

     label3:
        r1 = $r9;

        $z3 = r0.<java.util.TreeMap$NavigableSubMap: boolean toEnd>;

        if $z3 == 0 goto label4;

        $r8 = <java.util.TreeMap$Bound: java.util.TreeMap$Bound NO_BOUND>;

        goto label6;

     label4:
        $z4 = r0.<java.util.TreeMap$NavigableSubMap: boolean hiInclusive>;

        if $z4 == 0 goto label5;

        $r8 = <java.util.TreeMap$Bound: java.util.TreeMap$Bound INCLUSIVE>;

        goto label6;

     label5:
        $r8 = <java.util.TreeMap$Bound: java.util.TreeMap$Bound EXCLUSIVE>;

     label6:
        r2 = $r8;

        $z5 = r0 instanceof java.util.TreeMap$DescendingSubMap;

        if $z5 != 0 goto label7;

        $z6 = 1;

        goto label8;

     label7:
        $z6 = 0;

     label8:
        z0 = $z6;

        $r3 = new java.util.TreeMap$BoundedMap;

        $r4 = r0.<java.util.TreeMap$NavigableSubMap: java.util.TreeMap m>;

        virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = r0.<java.util.TreeMap$NavigableSubMap: java.lang.Object lo>;

        $r6 = r0.<java.util.TreeMap$NavigableSubMap: java.lang.Object hi>;

        specialinvoke $r3.<java.util.TreeMap$BoundedMap: void <init>(java.util.TreeMap,boolean,java.lang.Object,java.util.TreeMap$Bound,java.lang.Object,java.util.TreeMap$Bound)>($r4, z0, $r7, r1, $r6, r2);

        return $r3;
    }

    public static void <clinit>()
    {
        <java.util.TreeMap$NavigableSubMap: long serialVersionUID> = -2102997345730753016L;

        return;
    }
}
