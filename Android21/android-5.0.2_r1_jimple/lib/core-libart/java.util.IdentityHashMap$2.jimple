class java.util.IdentityHashMap$2 extends java.util.AbstractCollection
{
    final java.util.IdentityHashMap this$0;

    void <init>(java.util.IdentityHashMap)
    {
        java.util.IdentityHashMap$2 r0;
        java.util.IdentityHashMap r1;

        r0 := @this: java.util.IdentityHashMap$2;

        r1 := @parameter0: java.util.IdentityHashMap;

        r0.<java.util.IdentityHashMap$2: java.util.IdentityHashMap this$0> = r1;

        specialinvoke r0.<java.util.AbstractCollection: void <init>()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.IdentityHashMap$2 r0;
        java.lang.Object r1;
        java.util.IdentityHashMap $r2;
        boolean $z0;

        r0 := @this: java.util.IdentityHashMap$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<java.util.IdentityHashMap$2: java.util.IdentityHashMap this$0>;

        $z0 = virtualinvoke $r2.<java.util.IdentityHashMap: boolean containsValue(java.lang.Object)>(r1);

        return $z0;
    }

    public int size()
    {
        java.util.IdentityHashMap$2 r0;
        java.util.IdentityHashMap $r1;
        int $i0;

        r0 := @this: java.util.IdentityHashMap$2;

        $r1 = r0.<java.util.IdentityHashMap$2: java.util.IdentityHashMap this$0>;

        $i0 = virtualinvoke $r1.<java.util.IdentityHashMap: int size()>();

        return $i0;
    }

    public void clear()
    {
        java.util.IdentityHashMap$2 r0;
        java.util.IdentityHashMap $r1;

        r0 := @this: java.util.IdentityHashMap$2;

        $r1 = r0.<java.util.IdentityHashMap$2: java.util.IdentityHashMap this$0>;

        virtualinvoke $r1.<java.util.IdentityHashMap: void clear()>();

        return;
    }

    public java.util.Iterator iterator()
    {
        java.util.IdentityHashMap$2 r0;
        java.util.IdentityHashMap$IdentityHashMapIterator $r1;
        java.util.IdentityHashMap$2$1 $r2;
        java.util.IdentityHashMap $r3;

        r0 := @this: java.util.IdentityHashMap$2;

        $r1 = new java.util.IdentityHashMap$IdentityHashMapIterator;

        $r2 = new java.util.IdentityHashMap$2$1;

        specialinvoke $r2.<java.util.IdentityHashMap$2$1: void <init>(java.util.IdentityHashMap$2)>(r0);

        $r3 = r0.<java.util.IdentityHashMap$2: java.util.IdentityHashMap this$0>;

        specialinvoke $r1.<java.util.IdentityHashMap$IdentityHashMapIterator: void <init>(java.util.MapEntry$Type,java.util.IdentityHashMap)>($r2, $r3);

        return $r1;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.IdentityHashMap$2 r0;
        java.lang.Object r1, $r3;
        java.util.Iterator r2;
        boolean $z0;

        r0 := @this: java.util.IdentityHashMap$2;

        r1 := @parameter0: java.lang.Object;

        r2 = virtualinvoke r0.<java.util.IdentityHashMap$2: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        if r1 != $r3 goto label1;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        return 1;

     label2:
        return 0;
    }
}
