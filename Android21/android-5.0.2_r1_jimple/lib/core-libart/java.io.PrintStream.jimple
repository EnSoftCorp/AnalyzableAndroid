public class java.io.PrintStream extends java.io.FilterOutputStream implements java.lang.Appendable, java.io.Closeable
{
    private boolean ioError;
    private boolean autoFlush;
    private java.lang.String encoding;

    public void <init>(java.io.OutputStream)
    {
        java.io.PrintStream r0;
        java.io.OutputStream r1;
        java.lang.NullPointerException $r2;

        r0 := @this: java.io.PrintStream;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1);

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("out == null");

        throw $r2;

     label1:
        return;
    }

    public void <init>(java.io.OutputStream, boolean)
    {
        java.io.PrintStream r0;
        java.io.OutputStream r1;
        boolean z0;
        java.lang.NullPointerException $r2;

        r0 := @this: java.io.PrintStream;

        r1 := @parameter0: java.io.OutputStream;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1);

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("out == null");

        throw $r2;

     label1:
        r0.<java.io.PrintStream: boolean autoFlush> = z0;

        return;
    }

    public void <init>(java.io.OutputStream, boolean, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.io.PrintStream r0;
        java.io.OutputStream r1;
        boolean z0, $z1;
        java.lang.String r2;
        java.io.UnsupportedEncodingException $r4, $r8;
        java.lang.NullPointerException $r5, $r6;
        java.nio.charset.IllegalCharsetNameException $r7;

        r0 := @this: java.io.PrintStream;

        r1 := @parameter0: java.io.OutputStream;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1);

        if r1 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("out == null");

        throw $r6;

     label1:
        if r2 != null goto label2;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("charsetName == null");

        throw $r5;

     label2:
        r0.<java.io.PrintStream: boolean autoFlush> = z0;

     label3:
        $z1 = staticinvoke <java.nio.charset.Charset: boolean isSupported(java.lang.String)>(r2);

        if $z1 != 0 goto label4;

        $r4 = new java.io.UnsupportedEncodingException;

        specialinvoke $r4.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>(r2);

        throw $r4;

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;

        $r8 = new java.io.UnsupportedEncodingException;

        specialinvoke $r8.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>(r2);

        throw $r8;

     label6:
        r0.<java.io.PrintStream: java.lang.String encoding> = r2;

        return;

        catch java.nio.charset.IllegalCharsetNameException from label3 to label4 with label5;
    }

    public void <init>(java.io.File) throws java.io.FileNotFoundException
    {
        java.io.PrintStream r0;
        java.io.File r1;
        java.io.FileOutputStream $r2;

        r0 := @this: java.io.PrintStream;

        r1 := @parameter0: java.io.File;

        $r2 = new java.io.FileOutputStream;

        specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>($r2);

        return;
    }

    public void <init>(java.io.File, java.lang.String) throws java.io.FileNotFoundException, java.io.UnsupportedEncodingException
    {
        java.io.PrintStream r0;
        java.io.File r1;
        java.lang.String r2;
        java.io.FileOutputStream $r3;
        boolean $z0;
        java.io.UnsupportedEncodingException $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: java.io.PrintStream;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.io.FileOutputStream;

        specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>($r3);

        if r2 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("charsetName == null");

        throw $r5;

     label1:
        $z0 = staticinvoke <java.nio.charset.Charset: boolean isSupported(java.lang.String)>(r2);

        if $z0 != 0 goto label2;

        $r4 = new java.io.UnsupportedEncodingException;

        specialinvoke $r4.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>(r2);

        throw $r4;

     label2:
        r0.<java.io.PrintStream: java.lang.String encoding> = r2;

        return;
    }

    public void <init>(java.lang.String) throws java.io.FileNotFoundException
    {
        java.io.PrintStream r0;
        java.lang.String r1;
        java.io.File $r2;

        r0 := @this: java.io.PrintStream;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r1);

        specialinvoke r0.<java.io.PrintStream: void <init>(java.io.File)>($r2);

        return;
    }

    public void <init>(java.lang.String, java.lang.String) throws java.io.FileNotFoundException, java.io.UnsupportedEncodingException
    {
        java.io.PrintStream r0;
        java.lang.String r1, r2;
        java.io.File $r3;

        r0 := @this: java.io.PrintStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>(r1);

        specialinvoke r0.<java.io.PrintStream: void <init>(java.io.File,java.lang.String)>($r3, r2);

        return;
    }

    public boolean checkError()
    {
        java.io.PrintStream r0;
        java.io.OutputStream r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: java.io.PrintStream;

        r1 = r0.<java.io.PrintStream: java.io.OutputStream out>;

        if r1 != null goto label1;

        $z3 = r0.<java.io.PrintStream: boolean ioError>;

        return $z3;

     label1:
        virtualinvoke r0.<java.io.PrintStream: void flush()>();

        $z0 = r0.<java.io.PrintStream: boolean ioError>;

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r1.<java.io.OutputStream: boolean checkError()>();

        if $z1 == 0 goto label3;

     label2:
        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    protected void clearError()
    {
        java.io.PrintStream r0;

        r0 := @this: java.io.PrintStream;

        r0.<java.io.PrintStream: boolean ioError> = 0;

        return;
    }

    public synchronized void close()
    {
        java.io.PrintStream r0;
        java.io.OutputStream $r2, $r3;
        java.io.IOException $r4;

        r0 := @this: java.io.PrintStream;

        virtualinvoke r0.<java.io.PrintStream: void flush()>();

        $r2 = r0.<java.io.PrintStream: java.io.OutputStream out>;

        if $r2 == null goto label4;

     label1:
        $r3 = r0.<java.io.PrintStream: java.io.OutputStream out>;

        virtualinvoke $r3.<java.io.OutputStream: void close()>();

        r0.<java.io.PrintStream: java.io.OutputStream out> = null;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        virtualinvoke r0.<java.io.PrintStream: void setError()>();

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public synchronized void flush()
    {
        java.io.PrintStream r0;
        java.io.OutputStream $r2, $r3;
        java.io.IOException $r4;

        r0 := @this: java.io.PrintStream;

        $r2 = r0.<java.io.PrintStream: java.io.OutputStream out>;

        if $r2 == null goto label4;

     label1:
        $r3 = r0.<java.io.PrintStream: java.io.OutputStream out>;

        virtualinvoke $r3.<java.io.OutputStream: void flush()>();

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        virtualinvoke r0.<java.io.PrintStream: void setError()>();

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public transient java.io.PrintStream format(java.lang.String, java.lang.Object[])
    {
        java.io.PrintStream r0, $r4;
        java.lang.String r1;
        java.lang.Object[] r2;
        java.util.Locale $r3;

        r0 := @this: java.io.PrintStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r4 = virtualinvoke r0.<java.io.PrintStream: java.io.PrintStream format(java.util.Locale,java.lang.String,java.lang.Object[])>($r3, r1, r2);

        return $r4;
    }

    public transient java.io.PrintStream format(java.util.Locale, java.lang.String, java.lang.Object[])
    {
        java.io.PrintStream r0;
        java.util.Locale r1;
        java.lang.String r2;
        java.lang.Object[] r3;
        java.util.Formatter $r4;
        java.lang.NullPointerException $r6;

        r0 := @this: java.io.PrintStream;

        r1 := @parameter0: java.util.Locale;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        if r2 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("format == null");

        throw $r6;

     label1:
        $r4 = new java.util.Formatter;

        specialinvoke $r4.<java.util.Formatter: void <init>(java.lang.Appendable,java.util.Locale)>(r0, r1);

        virtualinvoke $r4.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(r2, r3);

        return r0;
    }

    public transient java.io.PrintStream printf(java.lang.String, java.lang.Object[])
    {
        java.io.PrintStream r0, $r3;
        java.lang.String r1;
        java.lang.Object[] r2;

        r0 := @this: java.io.PrintStream;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = virtualinvoke r0.<java.io.PrintStream: java.io.PrintStream format(java.lang.String,java.lang.Object[])>(r1, r2);

        return $r3;
    }

    public transient java.io.PrintStream printf(java.util.Locale, java.lang.String, java.lang.Object[])
    {
        java.io.PrintStream r0, $r4;
        java.util.Locale r1;
        java.lang.String r2;
        java.lang.Object[] r3;

        r0 := @this: java.io.PrintStream;

        r1 := @parameter0: java.util.Locale;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r4 = virtualinvoke r0.<java.io.PrintStream: java.io.PrintStream format(java.util.Locale,java.lang.String,java.lang.Object[])>(r1, r2, r3);

        return $r4;
    }

    private void newline()
    {
        java.io.PrintStream r0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintStream;

        $r1 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>($r1);

        return;
    }

    public void print(char[])
    {
        java.io.PrintStream r0;
        char[] r1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: java.io.PrintStream;

        r1 := @parameter0: char[];

        $r2 = new java.lang.String;

        $i0 = lengthof r1;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>(r1, 0, $i0);

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>($r2);

        return;
    }

    public void print(char)
    {
        java.io.PrintStream r0;
        char c0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintStream;

        c0 := @parameter0: char;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c0);

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>($r1);

        return;
    }

    public void print(double)
    {
        java.io.PrintStream r0;
        double d0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintStream;

        d0 := @parameter0: double;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d0);

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>($r1);

        return;
    }

    public void print(float)
    {
        java.io.PrintStream r0;
        float f0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintStream;

        f0 := @parameter0: float;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>(f0);

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>($r1);

        return;
    }

    public void print(int)
    {
        java.io.PrintStream r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintStream;

        i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>($r1);

        return;
    }

    public void print(long)
    {
        java.io.PrintStream r0;
        long l0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintStream;

        l0 := @parameter0: long;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>($r1);

        return;
    }

    public void print(java.lang.Object)
    {
        java.io.PrintStream r0;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @this: java.io.PrintStream;

        r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>($r2);

        return;
    }

    public synchronized void print(java.lang.String)
    {
        java.io.PrintStream r0;
        java.lang.String r1, $r4, $r5;
        java.io.OutputStream $r3;
        byte[] $r6, $r7;
        java.io.IOException $r8;

        r0 := @this: java.io.PrintStream;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<java.io.PrintStream: java.io.OutputStream out>;

        if $r3 != null goto label1;

        virtualinvoke r0.<java.io.PrintStream: void setError()>();

        return;

     label1:
        if r1 != null goto label2;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("null");

        return;

     label2:
        $r4 = r0.<java.io.PrintStream: java.lang.String encoding>;

        if $r4 != null goto label3;

        $r7 = virtualinvoke r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r0.<java.io.PrintStream: void write(byte[])>($r7);

        goto label4;

     label3:
        $r5 = r0.<java.io.PrintStream: java.lang.String encoding>;

        $r6 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>($r5);

        virtualinvoke r0.<java.io.PrintStream: void write(byte[])>($r6);

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;

        virtualinvoke r0.<java.io.PrintStream: void setError()>();

     label6:
        return;

        catch java.io.IOException from label2 to label4 with label5;
    }

    public void print(boolean)
    {
        java.io.PrintStream r0;
        boolean z0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintStream;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>(z0);

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>($r1);

        return;
    }

    public void println()
    {
        java.io.PrintStream r0;

        r0 := @this: java.io.PrintStream;

        specialinvoke r0.<java.io.PrintStream: void newline()>();

        return;
    }

    public void println(char[])
    {
        java.io.PrintStream r0;
        char[] r1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: java.io.PrintStream;

        r1 := @parameter0: char[];

        $r2 = new java.lang.String;

        $i0 = lengthof r1;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>(r1, 0, $i0);

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>($r2);

        return;
    }

    public void println(char)
    {
        java.io.PrintStream r0;
        char c0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintStream;

        c0 := @parameter0: char;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c0);

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return;
    }

    public void println(double)
    {
        java.io.PrintStream r0;
        double d0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintStream;

        d0 := @parameter0: double;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d0);

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return;
    }

    public void println(float)
    {
        java.io.PrintStream r0;
        float f0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintStream;

        f0 := @parameter0: float;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>(f0);

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return;
    }

    public void println(int)
    {
        java.io.PrintStream r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintStream;

        i0 := @parameter0: int;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return;
    }

    public void println(long)
    {
        java.io.PrintStream r0;
        long l0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintStream;

        l0 := @parameter0: long;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return;
    }

    public void println(java.lang.Object)
    {
        java.io.PrintStream r0;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @this: java.io.PrintStream;

        r1 := @parameter0: java.lang.Object;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>($r2);

        return;
    }

    public synchronized void println(java.lang.String)
    {
        java.io.PrintStream r0;
        java.lang.String r1;

        r0 := @this: java.io.PrintStream;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>(r1);

        specialinvoke r0.<java.io.PrintStream: void newline()>();

        return;
    }

    public void println(boolean)
    {
        java.io.PrintStream r0;
        boolean z0;
        java.lang.String $r1;

        r0 := @this: java.io.PrintStream;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>(z0);

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return;
    }

    protected void setError()
    {
        java.io.PrintStream r0;

        r0 := @this: java.io.PrintStream;

        r0.<java.io.PrintStream: boolean ioError> = 1;

        return;
    }

    public void write(byte[], int, int)
    {
        java.io.PrintStream r0, r2;
        byte[] r1;
        int i0, i1, $i2;
        java.lang.Throwable r4, $r8;
        java.io.OutputStream $r6, $r7;
        boolean $z0;
        java.io.IOException $r9;

        r0 := @this: java.io.PrintStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = lengthof r1;

        staticinvoke <java.util.Arrays: void checkOffsetAndCount(int,int,int)>($i2, i0, i1);

        r2 = r0;

        entermonitor r0;

     label01:
        $r6 = r0.<java.io.PrintStream: java.io.OutputStream out>;

        if $r6 != null goto label03;

        virtualinvoke r0.<java.io.PrintStream: void setError()>();

        exitmonitor r2;

     label02:
        return;

     label03:
        $r7 = r0.<java.io.PrintStream: java.io.OutputStream out>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>(r1, i0, i1);

        $z0 = r0.<java.io.PrintStream: boolean autoFlush>;

        if $z0 == 0 goto label04;

        virtualinvoke r0.<java.io.PrintStream: void flush()>();

     label04:
        goto label06;

     label05:
        $r9 := @caughtexception;

        virtualinvoke r0.<java.io.PrintStream: void setError()>();

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r2;

     label09:
        throw r4;

     label10:
        return;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public synchronized void write(int)
    {
        java.io.PrintStream r0;
        int i0, i1;
        boolean z0, $z1, $z2;
        java.io.OutputStream $r1, $r2;
        java.io.IOException $r3;

        r0 := @this: java.io.PrintStream;

        i0 := @parameter0: int;

        $r1 = r0.<java.io.PrintStream: java.io.OutputStream out>;

        if $r1 != null goto label1;

        virtualinvoke r0.<java.io.PrintStream: void setError()>();

        return;

     label1:
        $r2 = r0.<java.io.PrintStream: java.io.OutputStream out>;

        virtualinvoke $r2.<java.io.OutputStream: void write(int)>(i0);

        i1 = i0 & 255;

        if i1 == 10 goto label2;

        if i1 != 21 goto label3;

     label2:
        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        z0 = $z2;

        $z1 = r0.<java.io.PrintStream: boolean autoFlush>;

        if $z1 == 0 goto label5;

        if z0 == 0 goto label5;

        virtualinvoke r0.<java.io.PrintStream: void flush()>();

     label5:
        goto label7;

     label6:
        $r3 := @caughtexception;

        virtualinvoke r0.<java.io.PrintStream: void setError()>();

     label7:
        return;

        catch java.io.IOException from label1 to label5 with label6;
    }

    public java.io.PrintStream append(char)
    {
        java.io.PrintStream r0;
        char c0;

        r0 := @this: java.io.PrintStream;

        c0 := @parameter0: char;

        virtualinvoke r0.<java.io.PrintStream: void print(char)>(c0);

        return r0;
    }

    public java.io.PrintStream append(java.lang.CharSequence)
    {
        java.io.PrintStream r0;
        java.lang.CharSequence r1;
        java.lang.String $r2;

        r0 := @this: java.io.PrintStream;

        r1 := @parameter0: java.lang.CharSequence;

        if r1 != null goto label1;

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("null");

        goto label2;

     label1:
        $r2 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>($r2);

     label2:
        return r0;
    }

    public java.io.PrintStream append(java.lang.CharSequence, int, int)
    {
        java.io.PrintStream r0;
        java.lang.CharSequence r1, $r2;
        int i0, i1;
        java.lang.String $r3;

        r0 := @this: java.io.PrintStream;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        r1 = "null";

     label1:
        $r2 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i0, i1);

        $r3 = interfaceinvoke $r2.<java.lang.CharSequence: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintStream: void print(java.lang.String)>($r3);

        return r0;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException
    {
        java.io.PrintStream r0, $r2;
        java.lang.CharSequence r1;
        int i0, i1;

        r0 := @this: java.io.PrintStream;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<java.io.PrintStream: java.io.PrintStream append(java.lang.CharSequence,int,int)>(r1, i0, i1);

        return $r2;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException
    {
        java.io.PrintStream r0, $r2;
        java.lang.CharSequence r1;

        r0 := @this: java.io.PrintStream;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<java.io.PrintStream: java.io.PrintStream append(java.lang.CharSequence)>(r1);

        return $r2;
    }

    public volatile java.lang.Appendable append(char) throws java.io.IOException
    {
        java.io.PrintStream r0, $r1;
        char c0;

        r0 := @this: java.io.PrintStream;

        c0 := @parameter0: char;

        $r1 = virtualinvoke r0.<java.io.PrintStream: java.io.PrintStream append(char)>(c0);

        return $r1;
    }
}
