public class java.util.logging.SimpleFormatter extends java.util.logging.Formatter
{

    public void <init>()
    {
        java.util.logging.SimpleFormatter r0;

        r0 := @this: java.util.logging.SimpleFormatter;

        specialinvoke r0.<java.util.logging.Formatter: void <init>()>();

        return;
    }

    public java.lang.String format(java.util.logging.LogRecord)
    {
        java.util.logging.SimpleFormatter r0;
        java.util.logging.LogRecord r1;
        java.lang.StringBuilder r2, $r7, $r14, $r15, $r22, $r23;
        java.lang.Throwable r3, r6, $r28, $r32;
        java.io.PrintWriter r4, $r30;
        java.io.StringWriter r5, $r29;
        java.lang.Object[] $r8;
        java.util.Date $r9;
        long $l0;
        java.lang.String $r10, $r12, $r16, $r18, $r19, $r24, $r26, $r27, $r33;
        java.util.logging.Level $r20;

        r0 := @this: java.util.logging.SimpleFormatter;

        r1 := @parameter0: java.util.logging.LogRecord;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        r2 = $r7;

        $r8 = newarray (java.lang.Object)[1];

        $r9 = new java.util.Date;

        $l0 = virtualinvoke r1.<java.util.logging.LogRecord: long getMillis()>();

        specialinvoke $r9.<java.util.Date: void <init>(long)>($l0);

        $r8[0] = $r9;

        $r10 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("{0, date} {0, time} ", $r8);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getSourceClassName()>();

        $r14 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r16 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.String getSourceMethodName()>();

        $r15 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke r1.<java.util.logging.LogRecord: java.util.logging.Level getLevel()>();

        $r19 = virtualinvoke $r20.<java.util.logging.Level: java.lang.String getName()>();

        $r22 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r24 = virtualinvoke r0.<java.util.logging.SimpleFormatter: java.lang.String formatMessage(java.util.logging.LogRecord)>(r1);

        $r23 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.Throwable getThrown()>();

        if $r28 == null goto label5;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Throwable occurred: ");

        r3 = virtualinvoke r1.<java.util.logging.LogRecord: java.lang.Throwable getThrown()>();

        r4 = null;

     label1:
        $r29 = new java.io.StringWriter;

        specialinvoke $r29.<java.io.StringWriter: void <init>()>();

        r5 = $r29;

        $r30 = new java.io.PrintWriter;

        specialinvoke $r30.<java.io.PrintWriter: void <init>(java.io.Writer)>(r5);

        r4 = $r30;

        virtualinvoke r3.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r4);

        $r33 = virtualinvoke r5.<java.io.StringWriter: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

     label2:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        goto label5;

     label3:
        $r32 := @caughtexception;

        r6 = $r32;

     label4:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        throw r6;

     label5:
        $r27 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r27;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
