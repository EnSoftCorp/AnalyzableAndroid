public class java.io.CharArrayWriter extends java.io.Writer
{
    protected char[] buf;
    protected int count;

    public void <init>()
    {
        java.io.CharArrayWriter r0;
        char[] $r1, $r2;

        r0 := @this: java.io.CharArrayWriter;

        specialinvoke r0.<java.io.Writer: void <init>()>();

        $r1 = newarray (char)[32];

        r0.<java.io.CharArrayWriter: char[] buf> = $r1;

        $r2 = r0.<java.io.CharArrayWriter: char[] buf>;

        r0.<java.io.CharArrayWriter: java.lang.Object lock> = $r2;

        return;
    }

    public void <init>(int)
    {
        java.io.CharArrayWriter r0;
        int i0;
        char[] $r1, $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: java.io.CharArrayWriter;

        i0 := @parameter0: int;

        specialinvoke r0.<java.io.Writer: void <init>()>();

        if i0 >= 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("size < 0");

        throw $r3;

     label1:
        $r1 = newarray (char)[i0];

        r0.<java.io.CharArrayWriter: char[] buf> = $r1;

        $r2 = r0.<java.io.CharArrayWriter: char[] buf>;

        r0.<java.io.CharArrayWriter: java.lang.Object lock> = $r2;

        return;
    }

    public void close()
    {
        java.io.CharArrayWriter r0;

        r0 := @this: java.io.CharArrayWriter;

        return;
    }

    private void expand(int)
    {
        java.io.CharArrayWriter r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        char[] r1, $r2, $r3, $r4;

        r0 := @this: java.io.CharArrayWriter;

        i0 := @parameter0: int;

        $i2 = r0.<java.io.CharArrayWriter: int count>;

        $i4 = $i2 + i0;

        $r2 = r0.<java.io.CharArrayWriter: char[] buf>;

        $i3 = lengthof $r2;

        if $i4 > $i3 goto label1;

        return;

     label1:
        $r3 = r0.<java.io.CharArrayWriter: char[] buf>;

        $i5 = lengthof $r3;

        $i8 = 2 * $i5;

        $i6 = r0.<java.io.CharArrayWriter: int count>;

        $i7 = $i6 + i0;

        i1 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i7);

        r1 = newarray (char)[i1];

        $r4 = r0.<java.io.CharArrayWriter: char[] buf>;

        $i9 = r0.<java.io.CharArrayWriter: int count>;

        staticinvoke <java.lang.System: void arraycopy(char[],int,char[],int,int)>($r4, 0, r1, 0, $i9);

        r0.<java.io.CharArrayWriter: char[] buf> = r1;

        return;
    }

    public void flush()
    {
        java.io.CharArrayWriter r0;

        r0 := @this: java.io.CharArrayWriter;

        return;
    }

    public void reset()
    {
        java.io.CharArrayWriter r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: java.io.CharArrayWriter;

        $r3 = r0.<java.io.CharArrayWriter: java.lang.Object lock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        r0.<java.io.CharArrayWriter: int count> = 0;

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int size()
    {
        java.io.CharArrayWriter r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;
        int $i0;

        r0 := @this: java.io.CharArrayWriter;

        $r3 = r0.<java.io.CharArrayWriter: java.lang.Object lock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $i0 = r0.<java.io.CharArrayWriter: int count>;

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public char[] toCharArray()
    {
        java.io.CharArrayWriter r0;
        java.lang.Object r1, $r4;
        char[] r2, $r5;
        java.lang.Throwable r3, $r6;
        int $i0, $i1;

        r0 := @this: java.io.CharArrayWriter;

        $r4 = r0.<java.io.CharArrayWriter: java.lang.Object lock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $i0 = r0.<java.io.CharArrayWriter: int count>;

        r2 = newarray (char)[$i0];

        $r5 = r0.<java.io.CharArrayWriter: char[] buf>;

        $i1 = r0.<java.io.CharArrayWriter: int count>;

        staticinvoke <java.lang.System: void arraycopy(char[],int,char[],int,int)>($r5, 0, r2, 0, $i1);

        exitmonitor r1;

     label2:
        return r2;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r1;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String toString()
    {
        java.io.CharArrayWriter r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        java.lang.String $r4;
        int $i0;
        char[] $r5;

        r0 := @this: java.io.CharArrayWriter;

        $r3 = r0.<java.io.CharArrayWriter: java.lang.Object lock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = new java.lang.String;

        $r5 = r0.<java.io.CharArrayWriter: char[] buf>;

        $i0 = r0.<java.io.CharArrayWriter: int count>;

        specialinvoke $r4.<java.lang.String: void <init>(char[],int,int)>($r5, 0, $i0);

        exitmonitor r1;

     label2:
        return $r4;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void write(char[], int, int)
    {
        java.io.CharArrayWriter r0;
        char[] r1, $r5;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;

        r0 := @this: java.io.CharArrayWriter;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = lengthof r1;

        staticinvoke <java.util.Arrays: void checkOffsetAndCount(int,int,int)>($i2, i0, i1);

        $r4 = r0.<java.io.CharArrayWriter: java.lang.Object lock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        specialinvoke r0.<java.io.CharArrayWriter: void expand(int)>(i1);

        $r5 = r0.<java.io.CharArrayWriter: char[] buf>;

        $i3 = r0.<java.io.CharArrayWriter: int count>;

        staticinvoke <java.lang.System: void arraycopy(char[],int,char[],int,int)>(r1, i0, $r5, $i3, i1);

        $i4 = r0.<java.io.CharArrayWriter: int count>;

        $i5 = $i4 + i1;

        r0.<java.io.CharArrayWriter: int count> = $i5;

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void write(int)
    {
        java.io.CharArrayWriter r0;
        int i0, $i1, $i2;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        char[] $r4;
        char $c3;

        r0 := @this: java.io.CharArrayWriter;

        i0 := @parameter0: int;

        $r3 = r0.<java.io.CharArrayWriter: java.lang.Object lock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<java.io.CharArrayWriter: void expand(int)>(1);

        $r4 = r0.<java.io.CharArrayWriter: char[] buf>;

        $i1 = r0.<java.io.CharArrayWriter: int count>;

        $i2 = $i1 + 1;

        r0.<java.io.CharArrayWriter: int count> = $i2;

        $c3 = (char) i0;

        $r4[$i1] = $c3;

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void write(java.lang.String, int, int)
    {
        java.io.CharArrayWriter r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.Object r2, $r5;
        java.lang.Throwable r3, $r8;
        java.lang.StringIndexOutOfBoundsException $r4;
        char[] $r6;
        java.lang.NullPointerException $r7;

        r0 := @this: java.io.CharArrayWriter;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("str == null");

        throw $r7;

     label1:
        $i2 = i0 | i1;

        if $i2 < 0 goto label2;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        $i4 = $i3 - i1;

        if i0 <= $i4 goto label3;

     label2:
        $r4 = new java.lang.StringIndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String,int,int)>(r1, i0, i1);

        throw $r4;

     label3:
        $r5 = r0.<java.io.CharArrayWriter: java.lang.Object lock>;

        r2 = $r5;

        entermonitor $r5;

     label4:
        specialinvoke r0.<java.io.CharArrayWriter: void expand(int)>(i1);

        $i6 = i0 + i1;

        $r6 = r0.<java.io.CharArrayWriter: char[] buf>;

        $i5 = r0.<java.io.CharArrayWriter: int count>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(i0, $i6, $r6, $i5);

        $i7 = r0.<java.io.CharArrayWriter: int count>;

        $i8 = $i7 + i1;

        r0.<java.io.CharArrayWriter: int count> = $i8;

        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label7:
        throw r3;

     label8:
        return;

        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void writeTo(java.io.Writer) throws java.io.IOException
    {
        java.io.CharArrayWriter r0;
        java.io.Writer r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;
        int $i0;
        char[] $r5;

        r0 := @this: java.io.CharArrayWriter;

        r1 := @parameter0: java.io.Writer;

        $r4 = r0.<java.io.CharArrayWriter: java.lang.Object lock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<java.io.CharArrayWriter: char[] buf>;

        $i0 = r0.<java.io.CharArrayWriter: int count>;

        virtualinvoke r1.<java.io.Writer: void write(char[],int,int)>($r5, 0, $i0);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.io.CharArrayWriter append(char)
    {
        java.io.CharArrayWriter r0;
        char c0;

        r0 := @this: java.io.CharArrayWriter;

        c0 := @parameter0: char;

        virtualinvoke r0.<java.io.CharArrayWriter: void write(int)>(c0);

        return r0;
    }

    public java.io.CharArrayWriter append(java.lang.CharSequence)
    {
        java.io.CharArrayWriter r0;
        java.lang.CharSequence r1;
        int $i0;

        r0 := @this: java.io.CharArrayWriter;

        r1 := @parameter0: java.lang.CharSequence;

        if r1 != null goto label1;

        r1 = "null";

     label1:
        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        virtualinvoke r0.<java.io.CharArrayWriter: java.io.CharArrayWriter append(java.lang.CharSequence,int,int)>(r1, 0, $i0);

        return r0;
    }

    public java.io.CharArrayWriter append(java.lang.CharSequence, int, int)
    {
        java.io.CharArrayWriter r0;
        java.lang.CharSequence r1, $r3;
        int i0, i1, $i2;
        java.lang.String r2;

        r0 := @this: java.io.CharArrayWriter;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        r1 = "null";

     label1:
        $r3 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i0, i1);

        r2 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.String toString()>();

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        virtualinvoke r0.<java.io.CharArrayWriter: void write(java.lang.String,int,int)>(r2, 0, $i2);

        return r0;
    }

    public volatile java.io.Writer append(java.lang.CharSequence, int, int) throws java.io.IOException
    {
        java.io.CharArrayWriter r0, $r2;
        java.lang.CharSequence r1;
        int i0, i1;

        r0 := @this: java.io.CharArrayWriter;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<java.io.CharArrayWriter: java.io.CharArrayWriter append(java.lang.CharSequence,int,int)>(r1, i0, i1);

        return $r2;
    }

    public volatile java.io.Writer append(java.lang.CharSequence) throws java.io.IOException
    {
        java.io.CharArrayWriter r0, $r2;
        java.lang.CharSequence r1;

        r0 := @this: java.io.CharArrayWriter;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<java.io.CharArrayWriter: java.io.CharArrayWriter append(java.lang.CharSequence)>(r1);

        return $r2;
    }

    public volatile java.io.Writer append(char) throws java.io.IOException
    {
        java.io.CharArrayWriter r0, $r1;
        char c0;

        r0 := @this: java.io.CharArrayWriter;

        c0 := @parameter0: char;

        $r1 = virtualinvoke r0.<java.io.CharArrayWriter: java.io.CharArrayWriter append(char)>(c0);

        return $r1;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException
    {
        java.io.CharArrayWriter r0, $r2;
        java.lang.CharSequence r1;
        int i0, i1;

        r0 := @this: java.io.CharArrayWriter;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<java.io.CharArrayWriter: java.io.CharArrayWriter append(java.lang.CharSequence,int,int)>(r1, i0, i1);

        return $r2;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException
    {
        java.io.CharArrayWriter r0, $r2;
        java.lang.CharSequence r1;

        r0 := @this: java.io.CharArrayWriter;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<java.io.CharArrayWriter: java.io.CharArrayWriter append(java.lang.CharSequence)>(r1);

        return $r2;
    }

    public volatile java.lang.Appendable append(char) throws java.io.IOException
    {
        java.io.CharArrayWriter r0, $r1;
        char c0;

        r0 := @this: java.io.CharArrayWriter;

        c0 := @parameter0: char;

        $r1 = virtualinvoke r0.<java.io.CharArrayWriter: java.io.CharArrayWriter append(char)>(c0);

        return $r1;
    }
}
