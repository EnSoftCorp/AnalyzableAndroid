public final class org.apache.harmony.security.asn1.ASN1Integer extends org.apache.harmony.security.asn1.ASN1Primitive
{
    private static final org.apache.harmony.security.asn1.ASN1Integer ASN1;

    public void <init>()
    {
        org.apache.harmony.security.asn1.ASN1Integer r0;

        r0 := @this: org.apache.harmony.security.asn1.ASN1Integer;

        specialinvoke r0.<org.apache.harmony.security.asn1.ASN1Primitive: void <init>(int)>(2);

        return;
    }

    public static org.apache.harmony.security.asn1.ASN1Integer getInstance()
    {
        org.apache.harmony.security.asn1.ASN1Integer $r0;

        $r0 = <org.apache.harmony.security.asn1.ASN1Integer: org.apache.harmony.security.asn1.ASN1Integer ASN1>;

        return $r0;
    }

    public java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.ASN1Integer r0;
        org.apache.harmony.security.asn1.BerInputStream r1;
        boolean $z0;
        java.lang.Object $r2;

        r0 := @this: org.apache.harmony.security.asn1.ASN1Integer;

        r1 := @parameter0: org.apache.harmony.security.asn1.BerInputStream;

        virtualinvoke r1.<org.apache.harmony.security.asn1.BerInputStream: void readInteger()>();

        $z0 = r1.<org.apache.harmony.security.asn1.BerInputStream: boolean isVerify>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<org.apache.harmony.security.asn1.ASN1Integer: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>(r1);

        return $r2;
    }

    public java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.ASN1Integer r0;
        org.apache.harmony.security.asn1.BerInputStream r1;
        byte[] r2, $r3;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.harmony.security.asn1.ASN1Integer;

        r1 := @parameter0: org.apache.harmony.security.asn1.BerInputStream;

        $i0 = r1.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        r2 = newarray (byte)[$i0];

        $r3 = r1.<org.apache.harmony.security.asn1.BerInputStream: byte[] buffer>;

        $i2 = r1.<org.apache.harmony.security.asn1.BerInputStream: int contentOffset>;

        $i1 = r1.<org.apache.harmony.security.asn1.BerInputStream: int length>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r3, $i2, r2, 0, $i1);

        return r2;
    }

    public void encodeContent(org.apache.harmony.security.asn1.BerOutputStream)
    {
        org.apache.harmony.security.asn1.ASN1Integer r0;
        org.apache.harmony.security.asn1.BerOutputStream r1;

        r0 := @this: org.apache.harmony.security.asn1.ASN1Integer;

        r1 := @parameter0: org.apache.harmony.security.asn1.BerOutputStream;

        virtualinvoke r1.<org.apache.harmony.security.asn1.BerOutputStream: void encodeInteger()>();

        return;
    }

    public void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)
    {
        org.apache.harmony.security.asn1.ASN1Integer r0;
        org.apache.harmony.security.asn1.BerOutputStream r1;
        java.lang.Object $r2;
        byte[] $r3, $r4;
        int $i0;

        r0 := @this: org.apache.harmony.security.asn1.ASN1Integer;

        r1 := @parameter0: org.apache.harmony.security.asn1.BerOutputStream;

        $r2 = r1.<org.apache.harmony.security.asn1.BerOutputStream: java.lang.Object content>;

        $r3 = (byte[]) $r2;

        $r4 = (byte[]) $r3;

        $i0 = lengthof $r4;

        r1.<org.apache.harmony.security.asn1.BerOutputStream: int length> = $i0;

        return;
    }

    public static int toIntValue(java.lang.Object)
    {
        java.lang.Object r0;
        java.math.BigInteger $r1;
        byte[] $r2, $r3;
        int $i0;

        r0 := @parameter0: java.lang.Object;

        $r1 = new java.math.BigInteger;

        $r2 = (byte[]) r0;

        $r3 = (byte[]) $r2;

        specialinvoke $r1.<java.math.BigInteger: void <init>(byte[])>($r3);

        $i0 = virtualinvoke $r1.<java.math.BigInteger: int intValue()>();

        return $i0;
    }

    public static java.math.BigInteger toBigIntegerValue(java.lang.Object)
    {
        java.lang.Object r0;
        java.math.BigInteger $r1;
        byte[] $r2, $r3;

        r0 := @parameter0: java.lang.Object;

        $r1 = new java.math.BigInteger;

        $r2 = (byte[]) r0;

        $r3 = (byte[]) $r2;

        specialinvoke $r1.<java.math.BigInteger: void <init>(byte[])>($r3);

        return $r1;
    }

    public static java.lang.Object fromIntValue(int)
    {
        int i0;
        long $l1;
        java.math.BigInteger $r0;
        byte[] $r1;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        $r1 = virtualinvoke $r0.<java.math.BigInteger: byte[] toByteArray()>();

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.harmony.security.asn1.ASN1Integer $r0;

        $r0 = new org.apache.harmony.security.asn1.ASN1Integer;

        specialinvoke $r0.<org.apache.harmony.security.asn1.ASN1Integer: void <init>()>();

        <org.apache.harmony.security.asn1.ASN1Integer: org.apache.harmony.security.asn1.ASN1Integer ASN1> = $r0;

        return;
    }
}
