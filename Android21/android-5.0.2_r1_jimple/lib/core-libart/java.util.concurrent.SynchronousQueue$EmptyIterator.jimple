class java.util.concurrent.SynchronousQueue$EmptyIterator extends java.lang.Object implements java.util.Iterator
{
    static final java.util.concurrent.SynchronousQueue$EmptyIterator EMPTY_ITERATOR;

    private void <init>()
    {
        java.util.concurrent.SynchronousQueue$EmptyIterator r0;

        r0 := @this: java.util.concurrent.SynchronousQueue$EmptyIterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean hasNext()
    {
        java.util.concurrent.SynchronousQueue$EmptyIterator r0;

        r0 := @this: java.util.concurrent.SynchronousQueue$EmptyIterator;

        return 0;
    }

    public java.lang.Object next()
    {
        java.util.concurrent.SynchronousQueue$EmptyIterator r0;
        java.util.NoSuchElementException $r1;

        r0 := @this: java.util.concurrent.SynchronousQueue$EmptyIterator;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;
    }

    public void remove()
    {
        java.util.concurrent.SynchronousQueue$EmptyIterator r0;
        java.lang.IllegalStateException $r1;

        r0 := @this: java.util.concurrent.SynchronousQueue$EmptyIterator;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;
    }

    static void <clinit>()
    {
        java.util.concurrent.SynchronousQueue$EmptyIterator $r0;

        $r0 = new java.util.concurrent.SynchronousQueue$EmptyIterator;

        specialinvoke $r0.<java.util.concurrent.SynchronousQueue$EmptyIterator: void <init>()>();

        <java.util.concurrent.SynchronousQueue$EmptyIterator: java.util.concurrent.SynchronousQueue$EmptyIterator EMPTY_ITERATOR> = $r0;

        return;
    }
}
