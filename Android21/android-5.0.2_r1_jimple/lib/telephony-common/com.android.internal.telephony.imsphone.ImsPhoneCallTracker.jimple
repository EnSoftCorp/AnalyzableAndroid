public final class com.android.internal.telephony.imsphone.ImsPhoneCallTracker extends com.android.internal.telephony.CallTracker
{
    static final java.lang.String LOG_TAG;
    private static final boolean DBG;
    private boolean mIsVolteEnabled;
    private boolean mIsVtEnabled;
    private android.content.BroadcastReceiver mReceiver;
    static final int MAX_CONNECTIONS;
    static final int MAX_CONNECTIONS_PER_CALL;
    private static final int EVENT_HANGUP_PENDINGMO;
    private static final int EVENT_RESUME_BACKGROUND;
    private static final int EVENT_DIAL_PENDINGMO;
    private static final int TIMEOUT_HANGUP_PENDINGMO;
    private java.util.ArrayList mConnections;
    private android.os.RegistrantList mVoiceCallEndedRegistrants;
    private android.os.RegistrantList mVoiceCallStartedRegistrants;
    com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall;
    com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall;
    com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall;
    com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall;
    private com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO;
    private int mClirMode;
    private java.lang.Object mSyncHold;
    private com.android.ims.ImsCall mUssdSession;
    private android.os.Message mPendingUssd;
    com.android.internal.telephony.imsphone.ImsPhone mPhone;
    private boolean mDesiredMute;
    private boolean mOnHoldToneStarted;
    com.android.internal.telephony.PhoneConstants$State mState;
    private com.android.ims.ImsManager mImsManager;
    private int mServiceId;
    private com.android.internal.telephony.Call$SrvccState mSrvccState;
    private boolean mIsInEmergencyCall;
    private int pendingCallClirMode;
    private int pendingCallVideoState;
    private boolean pendingCallInEcm;
    private com.android.ims.ImsCall$Listener mImsCallListener;
    private com.android.ims.ImsCall$Listener mImsUssdListener;
    private com.android.ims.ImsConnectionStateListener mImsConnectionStateListener;

    void <init>(com.android.internal.telephony.imsphone.ImsPhone)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhone r1, $r18;
        android.content.IntentFilter r2, $r19;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$2 r3, $r22;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$1 $r4;
        java.util.ArrayList $r5;
        android.os.RegistrantList $r6, $r7;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r8, $r9, $r10, $r11;
        java.lang.Object $r12;
        com.android.internal.telephony.PhoneConstants$State $r13;
        com.android.internal.telephony.Call$SrvccState $r14;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$3 $r15;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$5 $r16;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker$4 $r17;
        android.content.BroadcastReceiver $r20;
        android.content.Context $r21;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.internal.telephony.imsphone.ImsPhone;

        specialinvoke r0.<com.android.internal.telephony.CallTracker: void <init>()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsVolteEnabled> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsVtEnabled> = 0;

        $r4 = new com.android.internal.telephony.imsphone.ImsPhoneCallTracker$1;

        specialinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$1: void <init>(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)>(r0);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.content.BroadcastReceiver mReceiver> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.ArrayList mConnections> = $r5;

        $r6 = new android.os.RegistrantList;

        specialinvoke $r6.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.RegistrantList mVoiceCallEndedRegistrants> = $r6;

        $r7 = new android.os.RegistrantList;

        specialinvoke $r7.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.RegistrantList mVoiceCallStartedRegistrants> = $r7;

        $r8 = new com.android.internal.telephony.imsphone.ImsPhoneCall;

        specialinvoke $r8.<com.android.internal.telephony.imsphone.ImsPhoneCall: void <init>(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)>(r0);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall> = $r8;

        $r9 = new com.android.internal.telephony.imsphone.ImsPhoneCall;

        specialinvoke $r9.<com.android.internal.telephony.imsphone.ImsPhoneCall: void <init>(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)>(r0);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall> = $r9;

        $r10 = new com.android.internal.telephony.imsphone.ImsPhoneCall;

        specialinvoke $r10.<com.android.internal.telephony.imsphone.ImsPhoneCall: void <init>(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)>(r0);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall> = $r10;

        $r11 = new com.android.internal.telephony.imsphone.ImsPhoneCall;

        specialinvoke $r11.<com.android.internal.telephony.imsphone.ImsPhoneCall: void <init>(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)>(r0);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall> = $r11;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mClirMode> = 0;

        $r12 = new java.lang.Object;

        specialinvoke $r12.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.lang.Object mSyncHold> = $r12;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall mUssdSession> = null;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.Message mPendingUssd> = null;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mDesiredMute> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mOnHoldToneStarted> = 0;

        $r13 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState> = $r13;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mServiceId> = -1;

        $r14 = <com.android.internal.telephony.Call$SrvccState: com.android.internal.telephony.Call$SrvccState NONE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.Call$SrvccState mSrvccState> = $r14;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsInEmergencyCall> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean pendingCallInEcm> = 0;

        $r15 = new com.android.internal.telephony.imsphone.ImsPhoneCallTracker$3;

        specialinvoke $r15.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$3: void <init>(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)>(r0);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall$Listener mImsCallListener> = $r15;

        $r17 = new com.android.internal.telephony.imsphone.ImsPhoneCallTracker$4;

        specialinvoke $r17.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$4: void <init>(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)>(r0);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall$Listener mImsUssdListener> = $r17;

        $r16 = new com.android.internal.telephony.imsphone.ImsPhoneCallTracker$5;

        specialinvoke $r16.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$5: void <init>(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)>(r0);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsConnectionStateListener mImsConnectionStateListener> = $r16;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone> = r1;

        $r19 = new android.content.IntentFilter;

        specialinvoke $r19.<android.content.IntentFilter: void <init>()>();

        r2 = $r19;

        virtualinvoke r2.<android.content.IntentFilter: void addAction(java.lang.String)>("com.android.ims.IMS_INCOMING_CALL");

        $r18 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r21 = virtualinvoke $r18.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        $r20 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.content.BroadcastReceiver mReceiver>;

        virtualinvoke $r21.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r20, r2);

        $r22 = new com.android.internal.telephony.imsphone.ImsPhoneCallTracker$2;

        specialinvoke $r22.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker$2: void <init>(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)>(r0);

        r3 = $r22;

        virtualinvoke r3.<java.lang.Thread: void start()>();

        return;
    }

    private android.app.PendingIntent createIncomingCallPendingIntent()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.content.Intent r1, $r2;
        com.android.internal.telephony.imsphone.ImsPhone $r4;
        android.content.Context $r5;
        android.app.PendingIntent $r6;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("com.android.ims.IMS_INCOMING_CALL");

        r1 = $r2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        $r6 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r5, 0, r1, 134217728);

        return $r6;
    }

    private void getImsService()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsException r1, $r15;
        com.android.internal.telephony.imsphone.ImsPhone $r2, $r4, $r10, $r12, $r13;
        android.content.Context $r3;
        long $l0;
        com.android.ims.ImsManager $r5, $r6;
        android.app.PendingIntent $r7;
        com.android.ims.ImsConnectionStateListener $r8;
        int $i1;
        com.android.ims.ImsEcbm $r9;
        com.android.ims.ImsEcbmStateListener $r11;
        boolean $z0;
        java.lang.StringBuilder $r14, $r16, $r17;
        java.lang.String $r18;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("getImsService");

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $l0 = virtualinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhone: long getSubId()>();

        $r5 = staticinvoke <com.android.ims.ImsManager: com.android.ims.ImsManager getInstance(android.content.Context,long)>($r3, $l0);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager> = $r5;

     label1:
        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        $r7 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.app.PendingIntent createIncomingCallPendingIntent()>();

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsConnectionStateListener mImsConnectionStateListener>;

        $i1 = virtualinvoke $r6.<com.android.ims.ImsManager: int open(int,android.app.PendingIntent,com.android.ims.ImsConnectionStateListener)>(1, $r7, $r8);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mServiceId> = $i1;

        $r9 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsEcbm getEcbmInterface()>();

        $r10 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r11 = $r10.<com.android.internal.telephony.imsphone.ImsPhone: com.android.ims.ImsEcbmStateListener mImsEcbmStateListener>;

        virtualinvoke $r9.<com.android.ims.ImsEcbm: void setEcbmStateListener(com.android.ims.ImsEcbmStateListener)>($r11);

        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $z0 = virtualinvoke $r12.<com.android.internal.telephony.imsphone.ImsPhone: boolean isInEcm()>();

        if $z0 == 0 goto label2;

        $r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r13.<com.android.internal.telephony.imsphone.ImsPhone: void exitEmergencyCallbackMode()>();

     label2:
        goto label4;

     label3:
        $r15 := @caughtexception;

        r1 = $r15;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getImsService: ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void loge(java.lang.String)>($r18);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager> = null;

     label4:
        return;

        catch com.android.ims.ImsException from label1 to label2 with label3;
    }

    public void dispose()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r1, $r2, $r3, $r4;
        com.android.internal.telephony.imsphone.ImsPhone $r5;
        android.content.Context $r6;
        android.content.BroadcastReceiver $r7;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("dispose");

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        virtualinvoke $r1.<com.android.internal.telephony.imsphone.ImsPhoneCall: void dispose()>();

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhoneCall: void dispose()>();

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        virtualinvoke $r3.<com.android.internal.telephony.imsphone.ImsPhoneCall: void dispose()>();

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall>;

        virtualinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhoneCall: void dispose()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void clearDisconnected()>();

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.content.BroadcastReceiver mReceiver>;

        virtualinvoke $r6.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r7);

        return;
    }

    protected void finalize()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("ImsPhoneCallTracker finalized");

        return;
    }

    public void registerForVoiceCallStarted(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.RegistrantList mVoiceCallStartedRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForVoiceCallStarted(android.os.Handler)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.RegistrantList mVoiceCallStartedRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForVoiceCallEnded(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.RegistrantList mVoiceCallEndedRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForVoiceCallEnded(android.os.Handler)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.RegistrantList mVoiceCallEndedRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    com.android.internal.telephony.Connection dial(java.lang.String, int) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.lang.String r1;
        int i0, i1;
        android.content.SharedPreferences r2;
        com.android.internal.telephony.imsphone.ImsPhone $r3;
        android.content.Context $r4;
        com.android.internal.telephony.Connection $r5;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        r2 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r4);

        i1 = interfaceinvoke r2.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("clir_key", 0);

        $r5 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,int,int)>(r1, i1, i0);

        return $r5;
    }

    synchronized com.android.internal.telephony.Connection dial(java.lang.String, int, int) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.lang.String r1, $r10, $r19;
        int i0, i1;
        boolean z0, z1, z2, $z3;
        com.android.internal.telephony.Call$State r2, r3, $r12, $r13, $r27, $r30, $r31, $r35, r40, r41;
        java.lang.Object r4, $r15;
        java.lang.Throwable r5, $r39;
        java.lang.StringBuilder $r6, $r7, $r8;
        com.android.ims.ImsManager $r9;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r11, $r18, $r24, $r28, $r29;
        com.android.internal.telephony.imsphone.ImsPhoneConnection $r14, $r20, $r21, $r25;
        android.content.Context $r16;
        com.android.internal.telephony.imsphone.ImsPhone $r17, $r22, $r23;
        com.android.ims.ImsEcbm $r26;
        com.android.internal.telephony.CallStateException $r32, $r33, $r34, $r36, $r37;
        com.android.ims.ImsException $r38, r42;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("ril.cdma.inecmmode", 0);

        z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(java.lang.String)>(r1);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dial clirMode=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r10);

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void clearDisconnected()>();

        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        if $r9 != null goto label01;

        $r34 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r34.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("service not available");

        throw $r34;

     label01:
        $z3 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean canDial()>();

        if $z3 != 0 goto label02;

        $r33 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r33.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("cannot dial in current state");

        throw $r33;

     label02:
        if z0 == 0 goto label03;

        if z1 == 0 goto label03;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void handleEcmTimer(int)>(1);

     label03:
        z2 = 0;

        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r13 = virtualinvoke $r11.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $r12 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if $r13 != $r12 goto label05;

        $r29 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $r30 = virtualinvoke $r29.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $r35 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        if $r30 == $r35 goto label04;

        $r36 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r36.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("cannot dial in current state");

        throw $r36;

     label04:
        z2 = 1;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void switchWaitingOrHoldingAndActive()>();

     label05:
        r2 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        r3 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mClirMode> = i0;

        $r15 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.lang.Object mSyncHold>;

        r4 = $r15;

        entermonitor $r15;

     label06:
        if z2 == 0 goto label08;

        $r24 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        r40 = virtualinvoke $r24.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $r28 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        r41 = virtualinvoke $r28.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $r27 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if r40 != $r27 goto label07;

        $r32 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r32.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("cannot dial in current state");

        throw $r32;

     label07:
        $r31 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if r41 != $r31 goto label08;

        z2 = 0;

     label08:
        $r14 = new com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r17 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r16 = virtualinvoke $r17.<com.android.internal.telephony.imsphone.ImsPhone: android.content.Context getContext()>();

        $r19 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.lang.String checkForTestEmergencyNumber(java.lang.String)>(r1);

        $r18 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        specialinvoke $r14.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void <init>(android.content.Context,java.lang.String,com.android.internal.telephony.imsphone.ImsPhoneCallTracker,com.android.internal.telephony.imsphone.ImsPhoneCall)>($r16, $r19, r0, $r18);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO> = $r14;

        exitmonitor r4;

     label09:
        goto label12;

     label10:
        $r39 := @caughtexception;

        r5 = $r39;

        exitmonitor r4;

     label11:
        throw r5;

     label12:
        $r20 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void addConnection(com.android.internal.telephony.imsphone.ImsPhoneConnection)>($r20);

        if z2 != 0 goto label18;

        if z0 == 0 goto label13;

        if z0 == 0 goto label14;

        if z1 == 0 goto label14;

     label13:
        $r25 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void dialInternal(com.android.internal.telephony.imsphone.ImsPhoneConnection,int,int)>($r25, i0, i1);

        goto label18;

     label14:
        $r26 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsEcbm getEcbmInterface()>();

        virtualinvoke $r26.<com.android.ims.ImsEcbm: void exitEmergencyCallbackMode()>();

     label15:
        goto label17;

     label16:
        $r38 := @caughtexception;

        r42 = $r38;

        virtualinvoke r42.<com.android.ims.ImsException: void printStackTrace()>();

        $r37 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r37.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("service not available");

        throw $r37;

     label17:
        $r23 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r23.<com.android.internal.telephony.imsphone.ImsPhone: void setOnEcbModeExitResponse(android.os.Handler,int,java.lang.Object)>(r0, 14, null);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int pendingCallClirMode> = i0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int pendingCallVideoState> = i1;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean pendingCallInEcm> = 1;

     label18:
        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void updatePhoneState()>();

        $r22 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r22.<com.android.internal.telephony.imsphone.ImsPhone: void notifyPreciseCallStateChanged()>();

        $r21 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        return $r21;

        catch java.lang.Throwable from label06 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch com.android.ims.ImsException from label14 to label15 with label16;
    }

    private void handleEcmTimer(int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        int i0;
        com.android.internal.telephony.imsphone.ImsPhone $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r1.<com.android.internal.telephony.imsphone.ImsPhone: void handleTimerInEmergencyCallbackMode(int)>(i0);

        lookupswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label1;
            default: goto label3;
        };

     label1:
        goto label4;

     label2:
        goto label4;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleEcmTimer, unsupported action ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r5);

     label4:
        return;
    }

    private void dialInternal(com.android.internal.telephony.imsphone.ImsPhoneConnection, int, int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r1;
        int i0, i1, i3, $i4, $i5, $i6, $i7;
        byte b2, $b8;
        java.lang.String[] r2, $r11;
        com.android.ims.ImsCallProfile r3;
        com.android.ims.ImsCall r4;
        com.android.ims.internal.IImsVideoCallProvider r5;
        com.android.ims.internal.ImsVideoCallProviderWrapper r6, $r19;
        java.lang.String $r7, $r8, $r9, $r10, $r12, $r21;
        boolean $z1;
        com.android.ims.ImsManager $r13, $r15;
        com.android.ims.ImsCall$Listener $r14;
        com.android.ims.internal.ImsCallSession $r16;
        android.os.RemoteException $r17;
        com.android.ims.ImsException $r18, r24;
        java.lang.StringBuilder $r20, $r22, $r23;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label01;

        return;

     label01:
        $r7 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String getAddress()>();

        if $r7 == null goto label02;

        $r8 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String getAddress()>();

        $i4 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i4 == 0 goto label02;

        $r9 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String getAddress()>();

        $i5 = virtualinvoke $r9.<java.lang.String: int indexOf(int)>(78);

        if $i5 < 0 goto label03;

     label02:
        virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setDisconnectCause(int)>(7);

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean sendEmptyMessageDelayed(int,long)>(18, 500L);

        return;

     label03:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void setMute(boolean)>(0);

        $r10 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String getAddress()>();

        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(java.lang.String)>($r10);

        if $z1 == 0 goto label04;

        $b8 = 2;

        goto label05;

     label04:
        $b8 = 1;

     label05:
        b2 = $b8;

        i3 = staticinvoke <com.android.ims.ImsCallProfile: int getCallTypeFromVideoState(int)>(i1);

        virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setVideoState(int)>(i1);

     label06:
        $r11 = newarray (java.lang.String)[1];

        $r12 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String getAddress()>();

        $r11[0] = $r12;

        r2 = $r11;

        $r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        $i6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mServiceId>;

        r3 = virtualinvoke $r13.<com.android.ims.ImsManager: com.android.ims.ImsCallProfile createCallProfile(int,int,int)>($i6, b2, i3);

        virtualinvoke r3.<com.android.ims.ImsCallProfile: void setCallExtraInt(java.lang.String,int)>("oir", i0);

        $r15 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        $i7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mServiceId>;

        $r14 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall$Listener mImsCallListener>;

        r4 = virtualinvoke $r15.<com.android.ims.ImsManager: com.android.ims.ImsCall makeCall(int,com.android.ims.ImsCallProfile,java.lang.String[],com.android.ims.ImsCall$Listener)>($i7, r3, r2, $r14);

        virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setImsCall(com.android.ims.ImsCall)>(r4);

        $r16 = virtualinvoke r4.<com.android.ims.ImsCall: com.android.ims.internal.ImsCallSession getCallSession()>();

        r5 = virtualinvoke $r16.<com.android.ims.internal.ImsCallSession: com.android.ims.internal.IImsVideoCallProvider getVideoCallProvider()>();

        if r5 == null goto label07;

        $r19 = new com.android.ims.internal.ImsVideoCallProviderWrapper;

        specialinvoke $r19.<com.android.ims.internal.ImsVideoCallProviderWrapper: void <init>(com.android.ims.internal.IImsVideoCallProvider)>(r5);

        r6 = $r19;

        virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setVideoProvider(android.telecom.Connection$VideoProvider)>(r6);

     label07:
        goto label10;

     label08:
        $r18 := @caughtexception;

        r24 = $r18;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dialInternal : ");

        $r20 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r24);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void loge(java.lang.String)>($r21);

        virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setDisconnectCause(int)>(36);

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean sendEmptyMessageDelayed(int,long)>(18, 500L);

        goto label10;

     label09:
        $r17 := @caughtexception;

     label10:
        return;

        catch com.android.ims.ImsException from label06 to label07 with label08;
        catch android.os.RemoteException from label06 to label07 with label09;
    }

    void acceptCall(int) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        int i0, $i1;
        com.android.ims.ImsCall r1;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r2, $r4, $r7, $r10, $r12, $r15;
        com.android.internal.telephony.Call$State $r3, $r5, $r6, $r8, $r13, $r14;
        boolean $z0, $z1, $z2, $z3;
        com.android.internal.telephony.CallStateException $r9, $r11, $r16, $r17;
        com.android.ims.ImsException $r18;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("acceptCall");

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $z0 = virtualinvoke $r3.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z0 == 0 goto label1;

        $r15 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $r14 = virtualinvoke $r15.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $z3 = virtualinvoke $r14.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z3 == 0 goto label1;

        $r16 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r16.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("cannot accept call");

        throw $r16;

     label1:
        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $r6 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State WAITING>;

        if $r5 != $r6 goto label2;

        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r13 = virtualinvoke $r12.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $z2 = virtualinvoke $r13.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z2 == 0 goto label2;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void setMute(boolean)>(0);

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void switchWaitingOrHoldingAndActive()>();

        goto label8;

     label2:
        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        $r8 = virtualinvoke $r7.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $z1 = virtualinvoke $r8.<com.android.internal.telephony.Call$State: boolean isRinging()>();

        if $z1 == 0 goto label7;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("acceptCall: incoming...");

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void setMute(boolean)>(0);

     label3:
        $r10 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        r1 = virtualinvoke $r10.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        if r1 == null goto label4;

        $i1 = staticinvoke <com.android.ims.ImsCallProfile: int getCallTypeFromVideoState(int)>(i0);

        virtualinvoke r1.<com.android.ims.ImsCall: void accept(int)>($i1);

        goto label5;

     label4:
        $r11 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r11.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("no valid ims call");

        throw $r11;

     label5:
        goto label8;

     label6:
        $r18 := @caughtexception;

        $r17 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r17.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("cannot accept call");

        throw $r17;

     label7:
        $r9 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r9.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("phone not ringing");

        throw $r9;

     label8:
        return;

        catch com.android.ims.ImsException from label3 to label5 with label6;
    }

    void rejectCall() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r1, $r4;
        com.android.internal.telephony.Call$State $r2;
        boolean $z0;
        com.android.internal.telephony.CallStateException $r3;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("rejectCall");

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.Call$State: boolean isRinging()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void hangup(com.android.internal.telephony.imsphone.ImsPhoneCall)>($r4);

        goto label2;

     label1:
        $r3 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r3.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("phone not ringing");

        throw $r3;

     label2:
        return;
    }

    void switchWaitingOrHoldingAndActive() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall r1;
        com.android.ims.ImsException r2, $r18;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r3, $r6, $r9, $r12, $r13, $r14, $r17, $r20;
        com.android.internal.telephony.Call$State $r4, $r5, $r7, $r8, $r10, $r11;
        com.android.internal.telephony.CallStateException $r15, $r16, $r19;
        java.lang.String $r21;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("switchWaitingOrHoldingAndActive");

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $r5 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State INCOMING>;

        if $r4 != $r5 goto label1;

        $r15 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r15.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("cannot be in the incoming state");

        throw $r15;

     label1:
        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $r8 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if $r7 != $r8 goto label7;

        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        r1 = virtualinvoke $r12.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        if r1 != null goto label2;

        $r16 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r16.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("no ims call");

        throw $r16;

     label2:
        $r14 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        virtualinvoke $r14.<com.android.internal.telephony.imsphone.ImsPhoneCall: void switchWith(com.android.internal.telephony.imsphone.ImsPhoneCall)>($r13);

     label3:
        virtualinvoke r1.<com.android.ims.ImsCall: void hold()>();

     label4:
        goto label6;

     label5:
        $r18 := @caughtexception;

        r2 = $r18;

        $r20 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r17 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        virtualinvoke $r20.<com.android.internal.telephony.imsphone.ImsPhoneCall: void switchWith(com.android.internal.telephony.imsphone.ImsPhoneCall)>($r17);

        $r19 = new com.android.internal.telephony.CallStateException;

        $r21 = virtualinvoke r2.<com.android.ims.ImsException: java.lang.String getMessage()>();

        specialinvoke $r19.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>($r21);

        throw $r19;

     label6:
        goto label8;

     label7:
        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $r10 = virtualinvoke $r9.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $r11 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if $r10 != $r11 goto label8;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void resumeWaitingOrHolding()>();

     label8:
        return;

        catch com.android.ims.ImsException from label3 to label4 with label5;
    }

    void conference()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall r1, r2;
        com.android.ims.ImsException r3, $r6;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r4, $r5;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r9, $r11;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("conference");

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        r1 = virtualinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        if r1 != null goto label1;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("conference no foreground ims call");

        return;

     label1:
        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        r2 = virtualinvoke $r5.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        if r2 != null goto label2;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("conference no background ims call");

        return;

     label2:
        virtualinvoke r1.<com.android.ims.ImsCall: void merge(com.android.ims.ImsCall)>(r2);

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("conference ");

        $r9 = virtualinvoke r3.<com.android.ims.ImsException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r11);

     label5:
        return;

        catch com.android.ims.ImsException from label2 to label3 with label4;
    }

    void explicitCallTransfer()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        return;
    }

    void clearDisconnected()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhone $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("clearDisconnected");

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void internalClearDisconnected()>();

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void updatePhoneState()>();

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r1.<com.android.internal.telephony.imsphone.ImsPhone: void notifyPreciseCallStateChanged()>();

        return;
    }

    boolean canConference()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r1, $r4, $r7, $r8;
        com.android.internal.telephony.Call$State $r2, $r3, $r5, $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $r3 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if $r2 != $r3 goto label1;

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $r6 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if $r5 != $r6 goto label1;

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $z0 = virtualinvoke $r7.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean isFull()>();

        if $z0 != 0 goto label1;

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $z1 = virtualinvoke $r8.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean isFull()>();

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    boolean canDial()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        int i0;
        java.lang.String r1;
        com.android.internal.telephony.imsphone.ImsPhone $r2;
        android.telephony.ServiceState $r3;
        com.android.internal.telephony.imsphone.ImsPhoneConnection $r4;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r5, $r6, $r9;
        com.android.internal.telephony.Call$State $r7, $r8;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhone: android.telephony.ServiceState getServiceState()>();

        i0 = virtualinvoke $r3.<android.telephony.ServiceState: int getState()>();

        r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.telephony.disable-call", "false");

        if i0 == 3 goto label2;

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        if $r4 != null goto label2;

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        $z1 = virtualinvoke $r5.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean isRinging()>();

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("true");

        if $z2 != 0 goto label2;

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $z3 = virtualinvoke $r7.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z3 == 0 goto label1;

        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $r8 = virtualinvoke $r9.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $z5 = virtualinvoke $r8.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z5 != 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        z0 = $z4;

        return z0;
    }

    boolean canTransfer()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r1, $r4;
        com.android.internal.telephony.Call$State $r2, $r3, $r5, $r6;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $r3 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if $r2 != $r3 goto label1;

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $r6 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if $r5 != $r6 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void internalClearDisconnected()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r1, $r2, $r3, $r4;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        virtualinvoke $r1.<com.android.internal.telephony.imsphone.ImsPhoneCall: void clearDisconnected()>();

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhoneCall: void clearDisconnected()>();

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        virtualinvoke $r3.<com.android.internal.telephony.imsphone.ImsPhoneCall: void clearDisconnected()>();

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall>;

        virtualinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhoneCall: void clearDisconnected()>();

        return;
    }

    private void updatePhoneState()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.PhoneConstants$State r1, $r4, $r5, $r6, $r7, $r12, $r16, $r18, $r19, $r25, $r26;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r2, $r23, $r24;
        boolean $z0, $z1, $z2;
        com.android.internal.telephony.imsphone.ImsPhoneConnection $r3;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r13;
        java.lang.String $r14;
        com.android.internal.telephony.imsphone.ImsPhone $r15;
        android.os.AsyncResult $r17, $r22;
        android.os.RegistrantList $r20, $r21;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean isRinging()>();

        if $z0 == 0 goto label1;

        $r25 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State RINGING>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState> = $r25;

        goto label4;

     label1:
        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        if $r3 != null goto label2;

        $r23 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $z1 = virtualinvoke $r23.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean isIdle()>();

        if $z1 == 0 goto label2;

        $r24 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $z2 = virtualinvoke $r24.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean isIdle()>();

        if $z2 != 0 goto label3;

     label2:
        $r4 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State OFFHOOK>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState> = $r4;

        goto label4;

     label3:
        $r26 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState> = $r26;

     label4:
        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        $r5 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        if $r6 != $r5 goto label5;

        $r19 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        if r1 == $r19 goto label5;

        $r21 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.RegistrantList mVoiceCallEndedRegistrants>;

        $r22 = new android.os.AsyncResult;

        specialinvoke $r22.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r21.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r22);

        goto label6;

     label5:
        $r7 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        if r1 != $r7 goto label6;

        $r18 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        if r1 == $r18 goto label6;

        $r20 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.RegistrantList mVoiceCallStartedRegistrants>;

        $r17 = new android.os.AsyncResult;

        specialinvoke $r17.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r20.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r17);

     label6:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updatePhoneState oldState=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newState=");

        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r14);

        $r16 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        if $r16 == r1 goto label7;

        $r15 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r15.<com.android.internal.telephony.imsphone.ImsPhone: void notifyPhoneStateChanged()>();

     label7:
        return;
    }

    private void handleRadioNotAvailable()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void pollCallsWhenSafe()>();

        return;
    }

    private void dumpState()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.util.List r1, r34, r35;
        int i0, i1, i2, i3, i4, i5;
        java.lang.StringBuilder $r2, $r3, $r5, $r7, $r8, $r11, $r14, $r15, $r19, $r21, $r23, $r24;
        com.android.internal.telephony.PhoneConstants$State $r4;
        java.lang.String $r6, $r10, $r12, $r16, $r18, $r25, $r26, $r29, $r31, $r33;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r9, $r13, $r17, $r20, $r22, $r27;
        java.lang.Object $r28, $r30, $r32;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Phone State:");

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ringing call: ");

        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        $r10 = virtualinvoke $r9.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.lang.String toString()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r12);

        $r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        r1 = virtualinvoke $r13.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.List getConnections()>();

        i0 = 0;

        i1 = interfaceinvoke r1.<java.util.List: int size()>();

     label1:
        if i0 >= i1 goto label2;

        $r32 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r33 = virtualinvoke $r32.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r33);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Foreground call: ");

        $r17 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r16 = virtualinvoke $r17.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.lang.String toString()>();

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r18);

        $r20 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        r34 = virtualinvoke $r20.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.List getConnections()>();

        i2 = 0;

        i3 = interfaceinvoke r34.<java.util.List: int size()>();

     label3:
        if i2 >= i3 goto label4;

        $r28 = interfaceinvoke r34.<java.util.List: java.lang.Object get(int)>(i2);

        $r29 = virtualinvoke $r28.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r29);

        i2 = i2 + 1;

        goto label3;

     label4:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Background call: ");

        $r22 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $r25 = virtualinvoke $r22.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.lang.String toString()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r26);

        $r27 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        r35 = virtualinvoke $r27.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.List getConnections()>();

        i4 = 0;

        i5 = interfaceinvoke r35.<java.util.List: int size()>();

     label5:
        if i4 >= i5 goto label6;

        $r30 = interfaceinvoke r35.<java.util.List: java.lang.Object get(int)>(i4);

        $r31 = virtualinvoke $r30.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r31);

        i4 = i4 + 1;

        goto label5;

     label6:
        return;
    }

    void setMute(boolean)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean z0;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mDesiredMute> = z0;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        virtualinvoke $r1.<com.android.internal.telephony.imsphone.ImsPhoneCall: void setMute(boolean)>(z0);

        return;
    }

    boolean getMute()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mDesiredMute>;

        return $z0;
    }

    void sendDtmf(char)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        char c0;
        com.android.ims.ImsCall r1;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        c0 := @parameter0: char;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("sendDtmf");

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        r1 = virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.ims.ImsCall: void sendDtmf(char)>(c0);

     label1:
        return;
    }

    void hangup(com.android.internal.telephony.imsphone.ImsPhoneConnection) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0, $r2;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r1;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r3;
        com.android.internal.telephony.CallStateException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("hangup connection");

        $r2 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker getOwner()>();

        if $r2 == r0 goto label1;

        $r4 = new com.android.internal.telephony.CallStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImsPhoneConnection ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("does not belong to ImsPhoneCallTracker ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>($r10);

        throw $r4;

     label1:
        $r3 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall getCall()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void hangup(com.android.internal.telephony.imsphone.ImsPhoneCall)>($r3);

        return;
    }

    void hangup(com.android.internal.telephony.imsphone.ImsPhoneCall) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneCall r1, $r5, $r6, $r7, $r18;
        com.android.ims.ImsCall r2;
        boolean z0, $z3;
        com.android.ims.ImsException r3, $r22;
        java.util.List $r4;
        int $i0;
        com.android.internal.telephony.CallStateException $r8, $r23, $r25;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r14;
        java.lang.String $r13, $r24;
        com.android.internal.telephony.imsphone.ImsPhone $r15;
        com.android.internal.telephony.imsphone.ImsPhoneConnection $r16, $r19, $r20, $r21;
        com.android.internal.telephony.Call$State $r17;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCall;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("hangup call");

        $r4 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.List getConnections()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 != 0 goto label01;

        $r23 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r23.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("no connections");

        throw $r23;

     label01:
        r2 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        z0 = 0;

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        if r1 != $r5 goto label02;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("(ringing) hangup incoming");

        z0 = 1;

        goto label06;

     label02:
        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        if r1 != $r6 goto label04;

        $z3 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean isDialingOrAlerting()>();

        if $z3 == 0 goto label03;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("(foregnd) hangup dialing or alerting...");

        goto label06;

     label03:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("(foregnd) hangup foreground");

        goto label06;

     label04:
        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        if r1 != $r7 goto label05;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("(backgnd) hangup waiting or background");

        goto label06;

     label05:
        $r8 = new com.android.internal.telephony.CallStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImsPhoneCall ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("does not belong to ImsPhoneCallTracker ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label06:
        virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhoneCall: void onHangupLocal()>();

     label07:
        if r2 == null goto label09;

        if z0 == 0 goto label08;

        virtualinvoke r2.<com.android.ims.ImsCall: void reject(int)>(504);

        goto label10;

     label08:
        virtualinvoke r2.<com.android.ims.ImsCall: void terminate(int)>(501);

        goto label10;

     label09:
        $r16 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        if $r16 == null goto label10;

        $r18 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        if r1 != $r18 goto label10;

        $r19 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        $r17 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        virtualinvoke $r19.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean update(com.android.ims.ImsCall,com.android.internal.telephony.Call$State)>(null, $r17);

        $r20 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        virtualinvoke $r20.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean onDisconnect()>();

        $r21 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void removeConnection(com.android.internal.telephony.imsphone.ImsPhoneConnection)>($r21);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO> = null;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void updatePhoneState()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void removeMessages(int)>(20);

     label10:
        goto label12;

     label11:
        $r22 := @caughtexception;

        r3 = $r22;

        $r25 = new com.android.internal.telephony.CallStateException;

        $r24 = virtualinvoke r3.<com.android.ims.ImsException: java.lang.String getMessage()>();

        specialinvoke $r25.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>($r24);

        throw $r25;

     label12:
        $r15 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r15.<com.android.internal.telephony.imsphone.ImsPhone: void notifyPreciseCallStateChanged()>();

        return;

        catch com.android.ims.ImsException from label07 to label10 with label11;
    }

    void resumeWaitingOrHolding() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall r1, r13, r14;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r2, $r4, $r7, $r8, $r9;
        com.android.internal.telephony.Call$State $r3, $r5, $r6;
        boolean $z0;
        com.android.ims.ImsException $r10, r15;
        com.android.internal.telephony.CallStateException $r11;
        java.lang.String $r12;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("resumeWaitingOrHolding");

     label1:
        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $z0 = virtualinvoke $r3.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z0 == 0 goto label3;

        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        r1 = virtualinvoke $r9.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        if r1 == null goto label2;

        virtualinvoke r1.<com.android.ims.ImsCall: void resume()>();

     label2:
        goto label6;

     label3:
        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $r6 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State WAITING>;

        if $r5 != $r6 goto label5;

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        r13 = virtualinvoke $r8.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        if r13 == null goto label4;

        virtualinvoke r13.<com.android.ims.ImsCall: void accept(int)>(2);

     label4:
        goto label6;

     label5:
        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        r14 = virtualinvoke $r7.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.ims.ImsCall getImsCall()>();

        if r14 == null goto label6;

        virtualinvoke r14.<com.android.ims.ImsCall: void resume()>();

     label6:
        goto label8;

     label7:
        $r10 := @caughtexception;

        r15 = $r10;

        $r11 = new com.android.internal.telephony.CallStateException;

        $r12 = virtualinvoke r15.<com.android.ims.ImsException: java.lang.String getMessage()>();

        specialinvoke $r11.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label8:
        return;

        catch com.android.ims.ImsException from label1 to label6 with label7;
    }

    void sendUSSD(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.lang.String r1, $r18;
        android.os.Message r2;
        java.lang.String[] r3, $r6;
        com.android.ims.ImsCallProfile r4;
        com.android.ims.ImsCall $r5, $r10, $r11;
        int $i0, $i1;
        com.android.ims.ImsManager $r7, $r9;
        com.android.ims.ImsCall$Listener $r8;
        java.lang.StringBuilder $r13, $r15, $r16;
        com.android.ims.ImsException $r14, r19;
        com.android.internal.telephony.imsphone.ImsPhone $r17;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>("sendUSSD");

     label1:
        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall mUssdSession>;

        if $r5 == null goto label3;

        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall mUssdSession>;

        virtualinvoke $r11.<com.android.ims.ImsCall: void sendUssd(java.lang.String)>(r1);

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r2, null, null);

        virtualinvoke r2.<android.os.Message: void sendToTarget()>();

     label2:
        return;

     label3:
        $r6 = newarray (java.lang.String)[1];

        $r6[0] = r1;

        r3 = $r6;

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        $i0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mServiceId>;

        r4 = virtualinvoke $r7.<com.android.ims.ImsManager: com.android.ims.ImsCallProfile createCallProfile(int,int,int)>($i0, 1, 2);

        virtualinvoke r4.<com.android.ims.ImsCallProfile: void setCallExtraInt(java.lang.String,int)>("dialstring", 2);

        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        $i1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mServiceId>;

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall$Listener mImsUssdListener>;

        $r10 = virtualinvoke $r9.<com.android.ims.ImsManager: com.android.ims.ImsCall makeCall(int,com.android.ims.ImsCallProfile,java.lang.String[],com.android.ims.ImsCall$Listener)>($i1, r4, r3, $r8);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall mUssdSession> = $r10;

     label4:
        goto label6;

     label5:
        $r14 := @caughtexception;

        r19 = $r14;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendUSSD : ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void loge(java.lang.String)>($r18);

        $r17 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r17.<com.android.internal.telephony.imsphone.ImsPhone: void sendErrorResponse(android.os.Message,java.lang.Throwable)>(r2, r19);

     label6:
        return;

        catch com.android.ims.ImsException from label1 to label2 with label5;
        catch com.android.ims.ImsException from label3 to label4 with label5;
    }

    void cancelUSSD()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall $r2, $r3;
        com.android.ims.ImsException $r4;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall mUssdSession>;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall mUssdSession>;

        virtualinvoke $r3.<com.android.ims.ImsCall: void terminate(int)>(501);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch com.android.ims.ImsException from label1 to label2 with label3;
    }

    private synchronized com.android.internal.telephony.imsphone.ImsPhoneConnection findConnection(com.android.ims.ImsCall)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall r1, $r6;
        java.util.Iterator r2;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r3;
        java.util.ArrayList $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.ims.ImsCall;

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.ArrayList mConnections>;

        r2 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.internal.telephony.imsphone.ImsPhoneConnection) $r5;

        $r6 = virtualinvoke r3.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall getImsCall()>();

        if $r6 != r1 goto label2;

        return r3;

     label2:
        goto label1;

     label3:
        return null;
    }

    private synchronized void removeConnection(com.android.internal.telephony.imsphone.ImsPhoneConnection)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.ArrayList mConnections>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    private synchronized void addConnection(com.android.internal.telephony.imsphone.ImsPhoneConnection)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.util.ArrayList mConnections>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    private void processCallStateChange(com.android.ims.ImsCall, com.android.internal.telephony.Call$State, int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall r1;
        com.android.internal.telephony.Call$State r2, $r10;
        int i0;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r11, $r13;
        com.android.internal.telephony.imsphone.ImsPhone $r12;
        boolean $z1, $z2, z3;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.ims.ImsCall;

        r2 := @parameter1: com.android.internal.telephony.Call$State;

        i0 := @parameter2: int;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processCallStateChange state=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cause=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r9);

        if r1 != null goto label1;

        return;

     label1:
        r3 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection findConnection(com.android.ims.ImsCall)>(r1);

        if r3 != null goto label2;

        return;

     label2:
        z3 = virtualinvoke r3.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean update(com.android.ims.ImsCall,com.android.internal.telephony.Call$State)>(r1, r2);

        $r10 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        if r2 != $r10 goto label6;

        $z2 = virtualinvoke r3.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean onDisconnect(int)>(i0);

        if $z2 != 0 goto label3;

        if z3 == 0 goto label4;

     label3:
        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        z3 = $z1;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void removeConnection(com.android.internal.telephony.imsphone.ImsPhoneConnection)>(r3);

     label6:
        if z3 == 0 goto label8;

        $r11 = virtualinvoke r3.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall getCall()>();

        $r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall>;

        if $r11 != $r13 goto label7;

        return;

     label7:
        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void updatePhoneState()>();

        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r12.<com.android.internal.telephony.imsphone.ImsPhone: void notifyPreciseCallStateChanged()>();

     label8:
        return;
    }

    private int getDisconnectCauseFromReasonInfo(com.android.ims.ImsReasonInfo)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsReasonInfo r1;
        byte b0;
        int i1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.ims.ImsReasonInfo;

        b0 = 36;

        i1 = virtualinvoke r1.<com.android.ims.ImsReasonInfo: int getCode()>();

        lookupswitch(i1)
        {
            case 106: goto label07;
            case 111: goto label09;
            case 112: goto label09;
            case 121: goto label07;
            case 122: goto label07;
            case 123: goto label07;
            case 124: goto label07;
            case 131: goto label07;
            case 132: goto label07;
            case 144: goto label07;
            case 201: goto label08;
            case 202: goto label08;
            case 203: goto label08;
            case 321: goto label05;
            case 331: goto label05;
            case 332: goto label05;
            case 333: goto label06;
            case 335: goto label08;
            case 337: goto label01;
            case 338: goto label02;
            case 340: goto label05;
            case 341: goto label01;
            case 352: goto label06;
            case 354: goto label06;
            case 361: goto label05;
            case 362: goto label05;
            case 501: goto label03;
            case 510: goto label04;
            default: goto label10;
        };

     label01:
        return 8;

     label02:
        return 4;

     label03:
        return 3;

     label04:
        return 2;

     label05:
        return 12;

     label06:
        return 9;

     label07:
        return 18;

     label08:
        return 13;

     label09:
        return 17;

     label10:
        return b0;
    }

    com.android.ims.ImsUtInterface getUtInterface() throws com.android.ims.ImsException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsUtInterface r1;
        com.android.ims.ImsManager $r2, $r3;
        int $i0;
        com.android.ims.ImsException $r4;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        if $r2 != null goto label1;

        $r4 = new com.android.ims.ImsException;

        specialinvoke $r4.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("no ims manager", 0);

        throw $r4;

     label1:
        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        $i0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mServiceId>;

        r1 = virtualinvoke $r3.<com.android.ims.ImsManager: com.android.ims.ImsUtInterface getSupplementaryServiceConfiguration(int)>($i0);

        return r1;
    }

    void notifySrvccState(com.android.internal.telephony.Call$SrvccState)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.Call$SrvccState r1, $r7, $r8;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r9, $r11, $r13, $r14, $r15, $r16, $r17;
        java.util.List $r10, $r12;
        int $i0, $i1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: com.android.internal.telephony.Call$SrvccState;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifySrvccState state=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r6);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.Call$SrvccState mSrvccState> = r1;

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.Call$SrvccState mSrvccState>;

        $r7 = <com.android.internal.telephony.Call$SrvccState: com.android.internal.telephony.Call$SrvccState COMPLETED>;

        if $r8 != $r7 goto label3;

        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r10 = virtualinvoke $r9.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.List getConnections()>();

        $i0 = interfaceinvoke $r10.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        $r17 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall>;

        $r15 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        virtualinvoke $r17.<com.android.internal.telephony.imsphone.ImsPhoneCall: void switchWith(com.android.internal.telephony.imsphone.ImsPhoneCall)>($r15);

        goto label2;

     label1:
        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $r12 = virtualinvoke $r11.<com.android.internal.telephony.imsphone.ImsPhoneCall: java.util.List getConnections()>();

        $i1 = interfaceinvoke $r12.<java.util.List: int size()>();

        if $i1 <= 0 goto label2;

        $r16 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall>;

        $r14 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        virtualinvoke $r16.<com.android.internal.telephony.imsphone.ImsPhoneCall: void switchWith(com.android.internal.telephony.imsphone.ImsPhoneCall)>($r14);

     label2:
        $r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall>;

        r2 = virtualinvoke $r13.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.imsphone.ImsPhoneConnection getHandoverConnection()>();

        if r2 == null goto label3;

        virtualinvoke r2.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void releaseWakeLock()>();

     label3:
        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.os.Message r1;
        com.android.internal.telephony.CallStateException r2, $r15;
        java.lang.StringBuilder $r3, $r4, $r5, $r14, $r16, $r17;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r6, $r18;
        com.android.internal.telephony.imsphone.ImsPhoneConnection $r7, $r9, $r10, $r11, $r13;
        com.android.internal.telephony.imsphone.ImsPhone $r8, $r12;
        boolean $z1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: android.os.Message;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleMessage what=");

        $i0 = r1.<android.os.Message: int what>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void log(java.lang.String)>($r6);

        $i1 = r1.<android.os.Message: int what>;

        tableswitch($i1)
        {
            case 14: goto label7;
            case 15: goto label9;
            case 16: goto label9;
            case 17: goto label9;
            case 18: goto label1;
            case 19: goto label3;
            case 20: goto label6;
            default: goto label9;
        };

     label1:
        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        if $r7 == null goto label2;

        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        virtualinvoke $r9.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean onDisconnect()>();

        $r10 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void removeConnection(com.android.internal.telephony.imsphone.ImsPhoneConnection)>($r10);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO> = null;

     label2:
        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void updatePhoneState()>();

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r8.<com.android.internal.telephony.imsphone.ImsPhone: void notifyPreciseCallStateChanged()>();

        goto label9;

     label3:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void resumeWaitingOrHolding()>();

     label4:
        goto label9;

     label5:
        $r15 := @caughtexception;

        r2 = $r15;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleMessage EVENT_RESUME_BACKGROUND exception=");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void loge(java.lang.String)>($r18);

        goto label9;

     label6:
        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        $i2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mClirMode>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void dialInternal(com.android.internal.telephony.imsphone.ImsPhoneConnection,int,int)>($r11, $i2, 0);

        goto label9;

     label7:
        $z1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean pendingCallInEcm>;

        if $z1 == 0 goto label8;

        $r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        $i4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int pendingCallClirMode>;

        $i3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int pendingCallVideoState>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void dialInternal(com.android.internal.telephony.imsphone.ImsPhoneConnection,int,int)>($r13, $i4, $i3);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean pendingCallInEcm> = 0;

     label8:
        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r12.<com.android.internal.telephony.imsphone.ImsPhone: void unsetOnEcbModeExitResponse(android.os.Handler)>(r0);

     label9:
        return;

        catch com.android.internal.telephony.CallStateException from label3 to label4 with label5;
    }

    protected void log(java.lang.String)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[ImsPhoneCallTracker] ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneCallTracker", $r5);

        return;
    }

    protected void loge(java.lang.String)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[ImsPhoneCallTracker] ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("ImsPhoneCallTracker", $r5);

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.lang.StringBuilder $r4, $r5, $r7, $r9, $r10, $r12, $r14, $r15, $r16, $r18, $r21, $r23, $r24, $r25, $r26, $r28, $r31, $r32, $r33, $r34, $r37, $r39, $r40, $r42, $r44, $r45, $r46, $r48, $r49, $r52;
        android.os.RegistrantList $r6, $r11;
        java.lang.String $r8, $r13, $r19, $r22, $r29, $r35, $r36, $r41, $r50, $r51;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r17, $r20, $r27, $r30;
        com.android.internal.telephony.imsphone.ImsPhoneConnection $r38;
        com.android.internal.telephony.imsphone.ImsPhone $r43;
        boolean $z0;
        com.android.internal.telephony.PhoneConstants$State $r47;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("ImsPhoneCallTracker extends:");

        specialinvoke r0.<com.android.internal.telephony.CallTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mVoiceCallEndedRegistrants=");

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.RegistrantList mVoiceCallEndedRegistrants>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mVoiceCallStartedRegistrants=");

        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.RegistrantList mVoiceCallStartedRegistrants>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRingingCall=");

        $r17 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mRingingCall>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r19);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mForegroundCall=");

        $r20 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r22);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mBackgroundCall=");

        $r27 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r29);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mHandoverCall=");

        $r30 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mHandoverCall>;

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r35);

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPendingMO=");

        $r38 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        $r39 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);

        $r36 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r36);

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPhone=");

        $r43 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        $r40 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r41);

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mDesiredMute=");

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mDesiredMute>;

        $r44 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r50 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r50);

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mState=");

        $r47 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        $r52 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r47);

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r51);

        return;
    }

    protected void handlePollCalls(android.os.AsyncResult)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.os.AsyncResult r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter0: android.os.AsyncResult;

        return;
    }

    com.android.ims.ImsEcbm getEcbmInterface() throws com.android.ims.ImsException
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsEcbm r1;
        com.android.ims.ImsManager $r2, $r3;
        int $i0;
        com.android.ims.ImsException $r4;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        if $r2 != null goto label1;

        $r4 = new com.android.ims.ImsException;

        specialinvoke $r4.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("no ims manager", 0);

        throw $r4;

     label1:
        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        $i0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mServiceId>;

        r1 = virtualinvoke $r3.<com.android.ims.ImsManager: com.android.ims.ImsEcbm getEcbmInterface(int)>($i0);

        return r1;
    }

    public boolean isInEmergencyCall()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsInEmergencyCall>;

        return $z0;
    }

    public boolean isVolteEnabled()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsVolteEnabled>;

        return $z0;
    }

    public boolean isVtEnabled()
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsVtEnabled>;

        return $z0;
    }

    static com.android.ims.ImsManager access$000(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsManager $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsManager mImsManager>;

        return $r1;
    }

    static int access$100(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        int $i0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $i0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int mServiceId>;

        return $i0;
    }

    static com.android.ims.ImsCall access$202(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, com.android.ims.ImsCall)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter1: com.android.ims.ImsCall;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall mUssdSession> = r1;

        return r1;
    }

    static com.android.ims.ImsCall$Listener access$300(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall$Listener $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall$Listener mImsUssdListener>;

        return $r1;
    }

    static com.android.ims.ImsCall access$200(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall mUssdSession>;

        return $r1;
    }

    static com.android.ims.ImsCall$Listener access$400(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall$Listener $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.ims.ImsCall$Listener mImsCallListener>;

        return $r1;
    }

    static void access$500(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, com.android.internal.telephony.imsphone.ImsPhoneConnection)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter1: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void addConnection(com.android.internal.telephony.imsphone.ImsPhoneConnection)>(r1);

        return;
    }

    static void access$600(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void updatePhoneState()>();

        return;
    }

    static void access$700(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void getImsService()>();

        return;
    }

    static com.android.internal.telephony.imsphone.ImsPhoneConnection access$802(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, com.android.internal.telephony.imsphone.ImsPhoneConnection)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter1: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO> = r1;

        return r1;
    }

    static void access$900(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, com.android.ims.ImsCall, com.android.internal.telephony.Call$State, int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall r1;
        com.android.internal.telephony.Call$State r2;
        int i0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter1: com.android.ims.ImsCall;

        r2 := @parameter2: com.android.internal.telephony.Call$State;

        i0 := @parameter3: int;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void processCallStateChange(com.android.ims.ImsCall,com.android.internal.telephony.Call$State,int)>(r1, r2, i0);

        return;
    }

    static com.android.internal.telephony.imsphone.ImsPhoneConnection access$800(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneConnection $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection mPendingMO>;

        return $r1;
    }

    static void access$1000(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, com.android.internal.telephony.imsphone.ImsPhoneConnection)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.internal.telephony.imsphone.ImsPhoneConnection r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter1: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void removeConnection(com.android.internal.telephony.imsphone.ImsPhoneConnection)>(r1);

        return;
    }

    static int access$1100(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, com.android.ims.ImsReasonInfo)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsReasonInfo r1;
        int $i0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter1: com.android.ims.ImsReasonInfo;

        $i0 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int getDisconnectCauseFromReasonInfo(com.android.ims.ImsReasonInfo)>(r1);

        return $i0;
    }

    static com.android.internal.telephony.imsphone.ImsPhoneConnection access$1200(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, com.android.ims.ImsCall)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        com.android.ims.ImsCall r1;
        com.android.internal.telephony.imsphone.ImsPhoneConnection $r2;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter1: com.android.ims.ImsCall;

        $r2 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneConnection findConnection(com.android.ims.ImsCall)>(r1);

        return $r2;
    }

    static java.lang.Object access$1300(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.lang.Object mSyncHold>;

        return $r1;
    }

    static boolean access$1400(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mOnHoldToneStarted>;

        return $z0;
    }

    static boolean access$1402(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, boolean)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mOnHoldToneStarted> = z0;

        return z0;
    }

    static android.os.Message access$1500(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.os.Message $r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.Message mPendingUssd>;

        return $r1;
    }

    static android.os.Message access$1502(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, android.os.Message)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r1 := @parameter1: android.os.Message;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.Message mPendingUssd> = r1;

        return r1;
    }

    static boolean access$1602(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, boolean)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsVolteEnabled> = z0;

        return z0;
    }

    static boolean access$1702(com.android.internal.telephony.imsphone.ImsPhoneCallTracker, boolean)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsVtEnabled> = z0;

        return z0;
    }

    static boolean access$1600(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsVolteEnabled>;

        return $z0;
    }

    static boolean access$1700(com.android.internal.telephony.imsphone.ImsPhoneCallTracker)
    {
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean mIsVtEnabled>;

        return $z0;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int TIMEOUT_HANGUP_PENDINGMO> = 500;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int EVENT_DIAL_PENDINGMO> = 20;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int EVENT_RESUME_BACKGROUND> = 19;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int EVENT_HANGUP_PENDINGMO> = 18;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int MAX_CONNECTIONS_PER_CALL> = 5;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: int MAX_CONNECTIONS> = 7;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: boolean DBG> = 1;

        <com.android.internal.telephony.imsphone.ImsPhoneCallTracker: java.lang.String LOG_TAG> = "ImsPhoneCallTracker";

        return;
    }
}
