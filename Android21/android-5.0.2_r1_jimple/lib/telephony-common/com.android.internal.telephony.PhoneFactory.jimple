public class com.android.internal.telephony.PhoneFactory extends java.lang.Object
{
    static final java.lang.String LOG_TAG;
    static final int SOCKET_OPEN_RETRY_MILLIS;
    static final int SOCKET_OPEN_MAX_RETRY;
    static final java.lang.Object sLockProxyPhones;
    private static com.android.internal.telephony.PhoneProxy[] sProxyPhones;
    private static com.android.internal.telephony.PhoneProxy sProxyPhone;
    private static com.android.internal.telephony.CommandsInterface[] sCommandsInterfaces;
    private static com.android.internal.telephony.ProxyController mProxyController;
    private static com.android.internal.telephony.uicc.UiccController mUiccController;
    private static com.android.internal.telephony.CommandsInterface sCommandsInterface;
    private static com.android.internal.telephony.SubInfoRecordUpdater sSubInfoRecordUpdater;
    private static boolean sMadeDefaults;
    private static com.android.internal.telephony.PhoneNotifier sPhoneNotifier;
    private static android.content.Context sContext;

    public void <init>()
    {
        com.android.internal.telephony.PhoneFactory r0;

        r0 := @this: com.android.internal.telephony.PhoneFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void makeDefaultPhones(android.content.Context)
    {
        android.content.Context r0;

        r0 := @parameter0: android.content.Context;

        staticinvoke <com.android.internal.telephony.PhoneFactory: void makeDefaultPhone(android.content.Context)>(r0);

        return;
    }

    public static void makeDefaultPhone(android.content.Context)
    {
        android.content.Context r0;
        java.lang.Object r1, $r6;
        int i0, i1, i2, i3, $i4, $i9, $i11, $i13, $i15, i17, i18;
        boolean z0, $z1;
        int[] r3;
        java.lang.Throwable r5, $r63;
        android.net.LocalServerSocket $r8;
        com.android.internal.telephony.DefaultPhoneNotifier $r9;
        java.lang.RuntimeException $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r30, $r31, $r32, $r39, $r40, $r41, $r42, $r47, $r52, $r58, $r60;
        java.lang.String $r14, $r34, $r48, $r57, $r61, r71;
        android.telephony.TelephonyManager $r15;
        com.android.internal.telephony.RIL[] $r16;
        com.android.internal.telephony.PhoneProxy[] $r17, $r24, $r26, $r35, $r37, $r43;
        com.android.internal.telephony.CommandsInterface[] $r18, $r20, $r22, $r29, $r38, $r45, $r55, $r65;
        com.android.internal.telephony.uicc.UiccController $r19, $r25;
        com.android.internal.telephony.ProxyController $r23;
        com.android.internal.telephony.CommandsInterface $r27, $r50, $r53;
        com.android.internal.telephony.PhoneProxy $r28, $r49;
        com.android.internal.telephony.SubInfoRecordUpdater $r33;
        com.android.internal.telephony.SubscriptionController $r36;
        com.android.internal.telephony.cdma.CDMALTEPhone $r44;
        com.android.internal.telephony.PhoneNotifier $r46, $r56;
        android.content.ContentResolver $r51;
        com.android.internal.telephony.gsm.GSMPhone $r54;
        com.android.internal.telephony.RIL $r59;
        android.provider.Settings$SettingNotFoundException $r62;
        java.io.IOException $r64;
        java.lang.InterruptedException $r66;
        java.lang.Integer $r67;
        byte b16;
        com.android.internal.telephony.PhoneBase r69;
        android.content.ComponentName r70;

        r0 := @parameter0: android.content.Context;

        $r6 = <com.android.internal.telephony.PhoneFactory: java.lang.Object sLockProxyPhones>;

        r1 = $r6;

        entermonitor $r6;

     label01:
        $z1 = <com.android.internal.telephony.PhoneFactory: boolean sMadeDefaults>;

        if $z1 != 0 goto label25;

        <com.android.internal.telephony.PhoneFactory: android.content.Context sContext> = r0;

        staticinvoke <com.android.internal.telephony.TelephonyDevController: com.android.internal.telephony.TelephonyDevController create()>();

        i0 = 0;

     label02:
        z0 = 0;

        i0 = i0 + 1;

     label03:
        $r8 = new android.net.LocalServerSocket;

        specialinvoke $r8.<android.net.LocalServerSocket: void <init>(java.lang.String)>("com.android.internal.telephony");

     label04:
        goto label06;

     label05:
        $r64 := @caughtexception;

        z0 = 1;

     label06:
        if z0 != 0 goto label07;

        goto label12;

     label07:
        if i0 <= 3 goto label08;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>("PhoneFactory probably already running");

        throw $r10;

     label08:
        staticinvoke <java.lang.Thread: void sleep(long)>(2000L);

     label09:
        goto label11;

     label10:
        $r66 := @caughtexception;

     label11:
        goto label02;

     label12:
        $r9 = new com.android.internal.telephony.DefaultPhoneNotifier;

        specialinvoke $r9.<com.android.internal.telephony.DefaultPhoneNotifier: void <init>()>();

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneNotifier sPhoneNotifier> = $r9;

        b16 = 0;

        $i4 = staticinvoke <android.telephony.TelephonyManager: int getLteOnCdmaModeStatic()>();

        if $i4 != 1 goto label13;

        b16 = 7;

     label13:
        i17 = staticinvoke <com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: int getDefault(android.content.Context)>(r0);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cdma Subscription set to ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("PhoneFactory", $r14);

        $r15 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        i1 = virtualinvoke $r15.<android.telephony.TelephonyManager: int getPhoneCount()>();

        r3 = newarray (int)[i1];

        $r17 = newarray (com.android.internal.telephony.PhoneProxy)[i1];

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneProxy[] sProxyPhones> = $r17;

        $r16 = newarray (com.android.internal.telephony.RIL)[i1];

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface[] sCommandsInterfaces> = $r16;

        i2 = 0;

     label14:
        if i2 >= i1 goto label19;

     label15:
        $r51 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i11 = staticinvoke <android.telephony.TelephonyManager: int getIntAtIndex(android.content.ContentResolver,java.lang.String,int)>($r51, "preferred_network_mode", i2);

        r3[i2] = $i11;

     label16:
        goto label18;

     label17:
        $r62 := @caughtexception;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("PhoneFactory", "Settings Exception Reading Value At Index for Settings.Global.PREFERRED_NETWORK_MODE");

        r3[i2] = b16;

     label18:
        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Network Mode set to ");

        $i13 = r3[i2];

        $r61 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i13);

        $r58 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r57 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("PhoneFactory", $r57);

        $r65 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface[] sCommandsInterfaces>;

        $r59 = new com.android.internal.telephony.RIL;

        $i15 = r3[i2];

        $r67 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        specialinvoke $r59.<com.android.internal.telephony.RIL: void <init>(android.content.Context,int,int,java.lang.Integer)>(r0, $i15, i17, $r67);

        $r65[i2] = $r59;

        i2 = i2 + 1;

        goto label14;

     label19:
        staticinvoke <android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("PhoneFactory", "Creating SubscriptionController");

        $r18 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface[] sCommandsInterfaces>;

        staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController init(android.content.Context,com.android.internal.telephony.CommandsInterface[])>(r0, $r18);

        $r22 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface[] sCommandsInterfaces>;

        $r19 = staticinvoke <com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccController make(android.content.Context,com.android.internal.telephony.CommandsInterface[])>(r0, $r22);

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.uicc.UiccController mUiccController> = $r19;

        i18 = 0;

     label20:
        if i18 >= i1 goto label23;

        r69 = null;

        $i9 = r3[i18];

        i3 = staticinvoke <android.telephony.TelephonyManager: int getPhoneType(int)>($i9);

        if i3 != 1 goto label21;

        $r54 = new com.android.internal.telephony.gsm.GSMPhone;

        $r55 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface[] sCommandsInterfaces>;

        $r50 = $r55[i18];

        $r56 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneNotifier sPhoneNotifier>;

        specialinvoke $r54.<com.android.internal.telephony.gsm.GSMPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int)>(r0, $r50, $r56, i18);

        r69 = $r54;

        goto label22;

     label21:
        if i3 != 2 goto label22;

        $r44 = new com.android.internal.telephony.cdma.CDMALTEPhone;

        $r45 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface[] sCommandsInterfaces>;

        $r53 = $r45[i18];

        $r46 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneNotifier sPhoneNotifier>;

        specialinvoke $r44.<com.android.internal.telephony.cdma.CDMALTEPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int)>(r0, $r53, $r46, i18);

        r69 = $r44;

     label22:
        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating Phone with type = ");

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sub = ");

        $r47 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("PhoneFactory", $r48);

        $r43 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneProxy[] sProxyPhones>;

        $r49 = new com.android.internal.telephony.PhoneProxy;

        specialinvoke $r49.<com.android.internal.telephony.PhoneProxy: void <init>(com.android.internal.telephony.PhoneBase)>(r69);

        $r43[i18] = $r49;

        i18 = i18 + 1;

        goto label20;

     label23:
        $r26 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneProxy[] sProxyPhones>;

        $r25 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $r20 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface[] sCommandsInterfaces>;

        $r23 = staticinvoke <com.android.internal.telephony.ProxyController: com.android.internal.telephony.ProxyController getInstance(android.content.Context,com.android.internal.telephony.Phone[],com.android.internal.telephony.uicc.UiccController,com.android.internal.telephony.CommandsInterface[])>(r0, $r26, $r25, $r20);

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.ProxyController mProxyController> = $r23;

        $r24 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneProxy[] sProxyPhones>;

        $r28 = $r24[0];

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneProxy sProxyPhone> = $r28;

        $r29 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface[] sCommandsInterfaces>;

        $r27 = $r29[0];

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface sCommandsInterface> = $r27;

        r70 = staticinvoke <com.android.internal.telephony.SmsApplication: android.content.ComponentName getDefaultSmsApplication(android.content.Context,boolean)>(r0, 1);

        r71 = "NONE";

        if r70 == null goto label24;

        r71 = virtualinvoke r70.<android.content.ComponentName: java.lang.String getPackageName()>();

     label24:
        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("defaultSmsApplication: ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71);

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("PhoneFactory", $r34);

        staticinvoke <com.android.internal.telephony.SmsApplication: void initSmsPackageMonitor(android.content.Context)>(r0);

        <com.android.internal.telephony.PhoneFactory: boolean sMadeDefaults> = 1;

        staticinvoke <android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("PhoneFactory", "Creating SubInfoRecordUpdater ");

        $r33 = new com.android.internal.telephony.SubInfoRecordUpdater;

        $r37 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneProxy[] sProxyPhones>;

        $r38 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface[] sCommandsInterfaces>;

        specialinvoke $r33.<com.android.internal.telephony.SubInfoRecordUpdater: void <init>(android.content.Context,com.android.internal.telephony.Phone[],com.android.internal.telephony.CommandsInterface[])>(r0, $r37, $r38);

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.SubInfoRecordUpdater sSubInfoRecordUpdater> = $r33;

        $r36 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        $r35 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneProxy[] sProxyPhones>;

        virtualinvoke $r36.<com.android.internal.telephony.SubscriptionController: void updatePhonesAvailability(com.android.internal.telephony.PhoneProxy[])>($r35);

     label25:
        exitmonitor r1;

     label26:
        goto label29;

     label27:
        $r63 := @caughtexception;

        r5 = $r63;

        exitmonitor r1;

     label28:
        throw r5;

     label29:
        return;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.lang.InterruptedException from label08 to label09 with label10;
        catch android.provider.Settings$SettingNotFoundException from label15 to label16 with label17;
        catch java.lang.Throwable from label01 to label26 with label27;
        catch java.lang.Throwable from label27 to label28 with label27;
    }

    public static com.android.internal.telephony.Phone getCdmaPhone(int)
    {
        int i0;
        com.android.internal.telephony.cdma.CDMALTEPhone r0, $r4;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r9;
        com.android.internal.telephony.CommandsInterface[] $r5;
        com.android.internal.telephony.PhoneNotifier $r6;
        com.android.internal.telephony.CommandsInterface $r7;
        android.content.Context $r8;

        i0 := @parameter0: int;

        $r3 = <com.android.internal.telephony.PhoneProxy: java.lang.Object lockForRadioTechnologyChange>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = new com.android.internal.telephony.cdma.CDMALTEPhone;

        $r8 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r5 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface[] sCommandsInterfaces>;

        $r7 = $r5[i0];

        $r6 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneNotifier sPhoneNotifier>;

        specialinvoke $r4.<com.android.internal.telephony.cdma.CDMALTEPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int)>($r8, $r7, $r6, i0);

        r0 = $r4;

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return r0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static com.android.internal.telephony.Phone getGsmPhone(int)
    {
        int i0;
        java.lang.Object r0, $r3;
        com.android.internal.telephony.gsm.GSMPhone r1, $r4;
        java.lang.Throwable r2, $r9;
        com.android.internal.telephony.CommandsInterface[] $r5;
        com.android.internal.telephony.PhoneNotifier $r6;
        com.android.internal.telephony.CommandsInterface $r7;
        android.content.Context $r8;

        i0 := @parameter0: int;

        $r3 = <com.android.internal.telephony.PhoneProxy: java.lang.Object lockForRadioTechnologyChange>;

        r0 = $r3;

        entermonitor $r3;

     label1:
        $r4 = new com.android.internal.telephony.gsm.GSMPhone;

        $r8 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r5 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface[] sCommandsInterfaces>;

        $r7 = $r5[i0];

        $r6 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneNotifier sPhoneNotifier>;

        specialinvoke $r4.<com.android.internal.telephony.gsm.GSMPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int)>($r8, $r7, $r6, i0);

        r1 = $r4;

        exitmonitor r0;

     label2:
        return r1;

     label3:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r0;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static com.android.internal.telephony.Phone getDefaultPhone()
    {
        java.lang.Object r0, $r2;
        java.lang.Throwable r1, $r5;
        boolean $z0;
        com.android.internal.telephony.PhoneProxy $r3;
        java.lang.IllegalStateException $r4;

        $r2 = <com.android.internal.telephony.PhoneFactory: java.lang.Object sLockProxyPhones>;

        r0 = $r2;

        entermonitor $r2;

     label1:
        $z0 = <com.android.internal.telephony.PhoneFactory: boolean sMadeDefaults>;

        if $z0 != 0 goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Default phones haven\'t been made yet!");

        throw $r4;

     label2:
        $r3 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneProxy sProxyPhone>;

        exitmonitor r0;

     label3:
        return $r3;

     label4:
        $r5 := @caughtexception;

        r1 = $r5;

        exitmonitor r0;

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static com.android.internal.telephony.Phone getPhone(int)
    {
        int i0, $i3;
        com.android.internal.telephony.PhoneProxy r0, $r9;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r12;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        android.telephony.TelephonyManager $r8;
        com.android.internal.telephony.PhoneProxy[] $r10;
        java.lang.IllegalStateException $r11;

        i0 := @parameter0: int;

        $r3 = <com.android.internal.telephony.PhoneFactory: java.lang.Object sLockProxyPhones>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $z0 = <com.android.internal.telephony.PhoneFactory: boolean sMadeDefaults>;

        if $z0 != 0 goto label2;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Default phones haven\'t been made yet!");

        throw $r11;

     label2:
        if i0 != 2147483647 goto label3;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("PhoneFactory", "getPhone: phoneId == DEFAULT_PHONE_ID");

        r0 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneProxy sProxyPhone>;

        goto label6;

     label3:
        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("PhoneFactory", "getPhone: phoneId != DEFAULT_PHONE_ID");

        if i0 < 0 goto label4;

        $r8 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        $i3 = virtualinvoke $r8.<android.telephony.TelephonyManager: int getPhoneCount()>();

        if i0 >= $i3 goto label4;

        $r10 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneProxy[] sProxyPhones>;

        $r9 = $r10[i0];

        goto label5;

     label4:
        $r9 = null;

     label5:
        r0 = $r9;

     label6:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getPhone:- phone=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("PhoneFactory", $r7);

        exitmonitor r1;

     label7:
        return r0;

     label8:
        $r12 := @caughtexception;

        r2 = $r12;

        exitmonitor r1;

     label9:
        throw r2;

        catch java.lang.Throwable from label1 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public static com.android.internal.telephony.Phone[] getPhones()
    {
        java.lang.Object r0, $r2;
        java.lang.Throwable r1, $r5;
        boolean $z0;
        com.android.internal.telephony.PhoneProxy[] $r3;
        java.lang.IllegalStateException $r4;

        $r2 = <com.android.internal.telephony.PhoneFactory: java.lang.Object sLockProxyPhones>;

        r0 = $r2;

        entermonitor $r2;

     label1:
        $z0 = <com.android.internal.telephony.PhoneFactory: boolean sMadeDefaults>;

        if $z0 != 0 goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Default phones haven\'t been made yet!");

        throw $r4;

     label2:
        $r3 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneProxy[] sProxyPhones>;

        exitmonitor r0;

     label3:
        return $r3;

     label4:
        $r5 := @caughtexception;

        r1 = $r5;

        exitmonitor r0;

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static com.android.internal.telephony.Phone getCdmaPhone()
    {
        com.android.internal.telephony.cdma.CDMAPhone r0, $r8;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r13;
        boolean $z0;
        int $i0;
        com.android.internal.telephony.cdma.CDMALTEPhone $r4;
        com.android.internal.telephony.PhoneNotifier $r5, $r9;
        com.android.internal.telephony.CommandsInterface $r6, $r10;
        android.content.Context $r7, $r11;
        java.lang.IllegalStateException $r12;

        $z0 = <com.android.internal.telephony.PhoneFactory: boolean sMadeDefaults>;

        if $z0 != 0 goto label1;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Default phones haven\'t been made yet!");

        throw $r12;

     label1:
        $r3 = <com.android.internal.telephony.PhoneProxy: java.lang.Object lockForRadioTechnologyChange>;

        r1 = $r3;

        entermonitor $r3;

     label2:
        $i0 = staticinvoke <android.telephony.TelephonyManager: int getLteOnCdmaModeStatic()>();

        tableswitch($i0)
        {
            case -1: goto label4;
            case 0: goto label4;
            case 1: goto label3;
            default: goto label4;
        };

     label3:
        $r4 = new com.android.internal.telephony.cdma.CDMALTEPhone;

        $r7 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r6 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface sCommandsInterface>;

        $r5 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneNotifier sPhoneNotifier>;

        specialinvoke $r4.<com.android.internal.telephony.cdma.CDMALTEPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier)>($r7, $r6, $r5);

        r0 = $r4;

        goto label5;

     label4:
        $r8 = new com.android.internal.telephony.cdma.CDMAPhone;

        $r11 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r10 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface sCommandsInterface>;

        $r9 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneNotifier sPhoneNotifier>;

        specialinvoke $r8.<com.android.internal.telephony.cdma.CDMAPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier)>($r11, $r10, $r9);

        r0 = $r8;

     label5:
        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r13 := @caughtexception;

        r2 = $r13;

        exitmonitor r1;

     label8:
        throw r2;

     label9:
        return r0;

        catch java.lang.Throwable from label2 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public static com.android.internal.telephony.Phone getGsmPhone()
    {
        int i0, $i2;
        com.android.internal.telephony.SubscriptionController $r0;
        long $l1;
        com.android.internal.telephony.Phone $r1;
        android.telephony.TelephonyManager $r2;

        $r0 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        $l1 = staticinvoke <com.android.internal.telephony.PhoneFactory: long getDefaultSubscription()>();

        i0 = virtualinvoke $r0.<com.android.internal.telephony.SubscriptionController: int getPhoneId(long)>($l1);

        if i0 < 0 goto label1;

        $r2 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        $i2 = virtualinvoke $r2.<android.telephony.TelephonyManager: int getPhoneCount()>();

        if i0 < $i2 goto label2;

     label1:
        i0 = 0;

     label2:
        $r1 = staticinvoke <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getGsmPhone(int)>(i0);

        return $r1;
    }

    public static com.android.internal.telephony.sip.SipPhone makeSipPhone(java.lang.String)
    {
        java.lang.String r0;
        com.android.internal.telephony.PhoneNotifier $r1;
        android.content.Context $r2;
        com.android.internal.telephony.sip.SipPhone $r3;

        r0 := @parameter0: java.lang.String;

        $r2 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r1 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneNotifier sPhoneNotifier>;

        $r3 = staticinvoke <com.android.internal.telephony.sip.SipPhoneFactory: com.android.internal.telephony.sip.SipPhone makePhone(java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier)>(r0, $r2, $r1);

        return $r3;
    }

    public static void setDefaultSubscription(int)
    {
        int i0, i1, $i6;
        java.lang.Object r0, $r4;
        java.lang.Throwable r1, $r23;
        java.lang.String $r2, $r9, $r17, r26;
        com.android.internal.telephony.SubscriptionController $r3;
        long $l2, $l3;
        android.telephony.TelephonyManager $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r12, $r14, $r15, $r16;
        android.content.Intent $r10, r27;
        android.content.Context $r11, $r18;
        android.os.UserHandle $r19;
        com.android.internal.telephony.PhoneProxy[] $r20, $r22;
        com.android.internal.telephony.PhoneProxy $r21;
        com.android.internal.telephony.CommandsInterface[] $r24;
        com.android.internal.telephony.CommandsInterface $r25;

        i0 := @parameter0: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("persist.radio.default.sub", $r2);

        $r3 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        $l2 = (long) i0;

        i1 = virtualinvoke $r3.<com.android.internal.telephony.SubscriptionController: int getPhoneId(long)>($l2);

        $r4 = <com.android.internal.telephony.PhoneFactory: java.lang.Object sLockProxyPhones>;

        r0 = $r4;

        entermonitor $r4;

     label1:
        if i1 < 0 goto label2;

        $r22 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneProxy[] sProxyPhones>;

        $i6 = lengthof $r22;

        if i1 >= $i6 goto label2;

        $r20 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneProxy[] sProxyPhones>;

        $r21 = $r20[i1];

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneProxy sProxyPhone> = $r21;

        $r24 = <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface[] sCommandsInterfaces>;

        $r25 = $r24[i1];

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface sCommandsInterface> = $r25;

        <com.android.internal.telephony.PhoneFactory: boolean sMadeDefaults> = 1;

     label2:
        exitmonitor r0;

     label3:
        goto label6;

     label4:
        $r23 := @caughtexception;

        r1 = $r23;

        exitmonitor r0;

     label5:
        throw r1;

     label6:
        $r5 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        $l3 = (long) i1;

        r26 = virtualinvoke $r5.<android.telephony.TelephonyManager: java.lang.String getSimOperator(long)>($l3);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("update mccmnc=");

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("PhoneFactory", $r9);

        $r11 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        staticinvoke <com.android.internal.telephony.MccTable: void updateMccMncConfiguration(android.content.Context,java.lang.String,boolean)>($r11, r26, 0);

        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.ACTION_DEFAULT_SUBSCRIPTION_CHANGED");

        r27 = $r10;

        virtualinvoke r27.<android.content.Intent: android.content.Intent addFlags(int)>(536870912);

        staticinvoke <android.telephony.SubscriptionManager: void putPhoneIdAndSubIdExtra(android.content.Intent,int)>(r27, i1);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setDefaultSubscription : ");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Broadcasting Default Subscription Changed...");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("PhoneFactory", $r17);

        $r18 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r19 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r18.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r27, $r19);

        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static int calculatePreferredNetworkType(android.content.Context)
    {
        android.content.Context r0;
        byte b0;
        int i1, $i2;
        android.content.ContentResolver $r1;

        r0 := @parameter0: android.content.Context;

        b0 = 0;

        $i2 = staticinvoke <android.telephony.TelephonyManager: int getLteOnCdmaModeStatic()>();

        if $i2 != 1 goto label1;

        b0 = 7;

     label1:
        $r1 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i1 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r1, "preferred_network_mode", b0);

        return i1;
    }

    public static long getDefaultSubscription()
    {
        com.android.internal.telephony.SubscriptionController $r0;
        long $l0;

        $r0 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        $l0 = virtualinvoke $r0.<com.android.internal.telephony.SubscriptionController: long getDefaultSubId()>();

        return $l0;
    }

    public static int getVoiceSubscription()
    {
        int i0, $i3, i5;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        com.android.internal.telephony.SubscriptionController $r3;
        long $l1;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r8;
        android.telephony.TelephonyManager $r9;
        android.provider.Settings$SettingNotFoundException $r10;

        i0 = 0;

     label1:
        $r1 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String)>($r2, "multi_sim_voice_call");

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("PhoneFactory", "Settings Exception Reading Dual Sim Voice Call Values");

     label4:
        $r3 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        $l1 = (long) i0;

        i5 = virtualinvoke $r3.<com.android.internal.telephony.SubscriptionController: int getPhoneId(long)>($l1);

        if i5 < 0 goto label5;

        $r9 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        $i3 = virtualinvoke $r9.<android.telephony.TelephonyManager: int getPhoneCount()>();

        if i5 < $i3 goto label6;

     label5:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Subscription is invalid...");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Set to 0");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("PhoneFactory", $r8);

        i0 = 0;

        staticinvoke <com.android.internal.telephony.PhoneFactory: void setVoiceSubscription(int)>(i0);

     label6:
        return i0;

        catch android.provider.Settings$SettingNotFoundException from label1 to label2 with label3;
    }

    public static boolean isPromptEnabled()
    {
        int i0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        boolean $z1, z2;
        android.provider.Settings$SettingNotFoundException $r7;

        i0 = 0;

     label1:
        $r1 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String)>($r2, "multi_sim_voice_prompt");

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("PhoneFactory", "Settings Exception Reading Dual Sim Voice Prompt Values");

     label4:
        if i0 != 0 goto label5;

        $z1 = 0;

        goto label6;

     label5:
        $z1 = 1;

     label6:
        z2 = $z1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Prompt option:");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("PhoneFactory", $r6);

        return z2;

        catch android.provider.Settings$SettingNotFoundException from label1 to label2 with label3;
    }

    public static void setPromptEnabled(boolean)
    {
        boolean z0;
        byte b0, $b2;
        android.content.Context $r0;
        android.content.ContentResolver $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        $b2 = 0;

        goto label2;

     label1:
        $b2 = 1;

     label2:
        b0 = $b2;

        $r0 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r1, "multi_sim_voice_prompt", b0);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setVoicePromptOption to ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("PhoneFactory", $r5);

        return;
    }

    public static boolean isSMSPromptEnabled()
    {
        int i0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        boolean $z1, z2;
        android.provider.Settings$SettingNotFoundException $r7;

        i0 = 0;

     label1:
        $r1 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String)>($r2, "multi_sim_sms_prompt");

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("PhoneFactory", "Settings Exception Reading Dual Sim SMS Prompt Values");

     label4:
        if i0 != 0 goto label5;

        $z1 = 0;

        goto label6;

     label5:
        $z1 = 1;

     label6:
        z2 = $z1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SMS Prompt option:");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("PhoneFactory", $r6);

        return z2;

        catch android.provider.Settings$SettingNotFoundException from label1 to label2 with label3;
    }

    public static void setSMSPromptEnabled(boolean)
    {
        boolean z0;
        byte b0, $b2;
        android.content.Context $r0;
        android.content.ContentResolver $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        $b2 = 0;

        goto label2;

     label1:
        $b2 = 1;

     label2:
        b0 = $b2;

        $r0 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r1, "multi_sim_sms_prompt", b0);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setSMSPromptOption to ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("PhoneFactory", $r5);

        return;
    }

    public static long getDataSubscription()
    {
        long l0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        com.android.internal.telephony.SubscriptionController $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r8;
        android.telephony.TelephonyManager $r9;
        android.provider.Settings$SettingNotFoundException $r10;
        int $i2, i4;

        l0 = 1L;

     label1:
        $r1 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        l0 = staticinvoke <android.provider.Settings$Global: long getLong(android.content.ContentResolver,java.lang.String)>($r2, "multi_sim_data_call");

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("PhoneFactory", "Settings Exception Reading Dual Sim Data Call Values");

     label4:
        $r3 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        i4 = virtualinvoke $r3.<com.android.internal.telephony.SubscriptionController: int getPhoneId(long)>(l0);

        if i4 < 0 goto label5;

        $r9 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        $i2 = virtualinvoke $r9.<android.telephony.TelephonyManager: int getPhoneCount()>();

        if i4 < $i2 goto label6;

     label5:
        l0 = 1L;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Subscription is invalid...");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Set to 0");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("PhoneFactory", $r8);

        staticinvoke <com.android.internal.telephony.PhoneFactory: void setDataSubscription(long)>(l0);

     label6:
        return l0;

        catch android.provider.Settings$SettingNotFoundException from label1 to label2 with label3;
    }

    public static int getSMSSubscription()
    {
        int i0, $i3, i5;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        com.android.internal.telephony.SubscriptionController $r3;
        long $l1;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r8;
        android.telephony.TelephonyManager $r9;
        android.provider.Settings$SettingNotFoundException $r10;

        i0 = 0;

     label1:
        $r1 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String)>($r2, "multi_sim_sms");

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("PhoneFactory", "Settings Exception Reading Dual Sim SMS Values");

     label4:
        $r3 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        $l1 = (long) i0;

        i5 = virtualinvoke $r3.<com.android.internal.telephony.SubscriptionController: int getPhoneId(long)>($l1);

        if i5 < 0 goto label5;

        $r9 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        $i3 = virtualinvoke $r9.<android.telephony.TelephonyManager: int getPhoneCount()>();

        if i5 < $i3 goto label6;

     label5:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Subscription is invalid...");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Set to 0");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("PhoneFactory", $r8);

        i0 = 0;

        staticinvoke <com.android.internal.telephony.PhoneFactory: void setSMSSubscription(int)>(i0);

     label6:
        return i0;

        catch android.provider.Settings$SettingNotFoundException from label1 to label2 with label3;
    }

    public static void setVoiceSubscription(int)
    {
        int i0;
        android.content.Context $r0;
        android.content.ContentResolver $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        $r0 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r1, "multi_sim_voice_call", i0);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setVoiceSubscription : ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("PhoneFactory", $r5);

        return;
    }

    public static void setDataSubscription(long)
    {
        long l0;
        boolean z0, $z4, $z5, z6;
        android.content.Context $r0, $r6, $r12, $r19, $r22;
        android.content.ContentResolver $r1, $r7, $r13, $r18, $r26;
        java.lang.StringBuilder $r2, $r3, $r4, $r8, $r9, $r11, $r14, $r15, $r16, $r20, $r21, $r23, $r25, $r28, $r29;
        java.lang.String $r5, $r10, $r17, $r24, $r27;
        int $i2, $i4;
        byte $b6, $b7;

        l0 := @parameter0: long;

        $r0 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Global: boolean putLong(android.content.ContentResolver,java.lang.String,long)>($r1, "multi_sim_data_call", l0);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setDataSubscription: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("PhoneFactory", $r5);

        $r6 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mobile_data");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r7, $r10, 0);

        if $i2 == 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z0 = $z4;

        $r12 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r13 = virtualinvoke $r12.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        if z0 == 0 goto label3;

        $b6 = 1;

        goto label4;

     label3:
        $b6 = 0;

     label4:
        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r13, "mobile_data", $b6);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("set mobile_data: ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("PhoneFactory", $r17);

        $r19 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r18 = virtualinvoke $r19.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data_roaming");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $i4 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r18, $r24, 0);

        if $i4 == 0 goto label5;

        $z5 = 1;

        goto label6;

     label5:
        $z5 = 0;

     label6:
        z6 = $z5;

        $r22 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r26 = virtualinvoke $r22.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        if z6 == 0 goto label7;

        $b7 = 1;

        goto label8;

     label7:
        $b7 = 0;

     label8:
        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r26, "data_roaming", $b7);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("set data_roaming: ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z6);

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("PhoneFactory", $r27);

        return;
    }

    public static void setSMSSubscription(int)
    {
        int i0;
        android.content.Intent r0, $r3;
        android.content.Context $r1, $r4;
        android.content.ContentResolver $r2;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        i0 := @parameter0: int;

        $r1 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r2, "multi_sim_sms", i0);

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("com.android.mms.transaction.SEND_MESSAGE");

        r0 = $r3;

        $r4 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        virtualinvoke $r4.<android.content.Context: void sendBroadcast(android.content.Intent)>(r0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setSMSSubscription : ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("PhoneFactory", $r8);

        return;
    }

    public static com.android.internal.telephony.imsphone.ImsPhone makeImsPhone(com.android.internal.telephony.PhoneNotifier, com.android.internal.telephony.Phone)
    {
        com.android.internal.telephony.PhoneNotifier r0;
        com.android.internal.telephony.Phone r1;
        android.content.Context $r2;
        com.android.internal.telephony.imsphone.ImsPhone $r3;

        r0 := @parameter0: com.android.internal.telephony.PhoneNotifier;

        r1 := @parameter1: com.android.internal.telephony.Phone;

        $r2 = <com.android.internal.telephony.PhoneFactory: android.content.Context sContext>;

        $r3 = staticinvoke <com.android.internal.telephony.imsphone.ImsPhoneFactory: com.android.internal.telephony.imsphone.ImsPhone makePhone(android.content.Context,com.android.internal.telephony.PhoneNotifier,com.android.internal.telephony.Phone)>($r2, r0, r1);

        return $r3;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        <com.android.internal.telephony.PhoneFactory: int SOCKET_OPEN_MAX_RETRY> = 3;

        <com.android.internal.telephony.PhoneFactory: int SOCKET_OPEN_RETRY_MILLIS> = 2000;

        <com.android.internal.telephony.PhoneFactory: java.lang.String LOG_TAG> = "PhoneFactory";

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.android.internal.telephony.PhoneFactory: java.lang.Object sLockProxyPhones> = $r0;

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneProxy[] sProxyPhones> = null;

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.PhoneProxy sProxyPhone> = null;

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface[] sCommandsInterfaces> = null;

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.CommandsInterface sCommandsInterface> = null;

        <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.SubInfoRecordUpdater sSubInfoRecordUpdater> = null;

        <com.android.internal.telephony.PhoneFactory: boolean sMadeDefaults> = 0;

        return;
    }
}
