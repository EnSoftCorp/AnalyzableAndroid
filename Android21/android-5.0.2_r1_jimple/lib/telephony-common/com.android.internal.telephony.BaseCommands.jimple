public abstract class com.android.internal.telephony.BaseCommands extends java.lang.Object implements com.android.internal.telephony.CommandsInterface
{
    protected android.content.Context mContext;
    protected com.android.internal.telephony.CommandsInterface$RadioState mState;
    protected java.lang.Object mStateMonitor;
    protected android.os.RegistrantList mRadioStateChangedRegistrants;
    protected android.os.RegistrantList mOnRegistrants;
    protected android.os.RegistrantList mAvailRegistrants;
    protected android.os.RegistrantList mOffOrNotAvailRegistrants;
    protected android.os.RegistrantList mNotAvailRegistrants;
    protected android.os.RegistrantList mCallStateRegistrants;
    protected android.os.RegistrantList mVoiceNetworkStateRegistrants;
    protected android.os.RegistrantList mDataNetworkStateRegistrants;
    protected android.os.RegistrantList mVoiceRadioTechChangedRegistrants;
    protected android.os.RegistrantList mImsNetworkStateChangedRegistrants;
    protected android.os.RegistrantList mIccStatusChangedRegistrants;
    protected android.os.RegistrantList mVoicePrivacyOnRegistrants;
    protected android.os.RegistrantList mVoicePrivacyOffRegistrants;
    protected android.os.Registrant mUnsolOemHookRawRegistrant;
    protected android.os.RegistrantList mOtaProvisionRegistrants;
    protected android.os.RegistrantList mCallWaitingInfoRegistrants;
    protected android.os.RegistrantList mDisplayInfoRegistrants;
    protected android.os.RegistrantList mSignalInfoRegistrants;
    protected android.os.RegistrantList mNumberInfoRegistrants;
    protected android.os.RegistrantList mRedirNumInfoRegistrants;
    protected android.os.RegistrantList mLineControlInfoRegistrants;
    protected android.os.RegistrantList mT53ClirInfoRegistrants;
    protected android.os.RegistrantList mT53AudCntrlInfoRegistrants;
    protected android.os.RegistrantList mRingbackToneRegistrants;
    protected android.os.RegistrantList mResendIncallMuteRegistrants;
    protected android.os.RegistrantList mCdmaSubscriptionChangedRegistrants;
    protected android.os.RegistrantList mCdmaPrlChangedRegistrants;
    protected android.os.RegistrantList mExitEmergencyCallbackModeRegistrants;
    protected android.os.RegistrantList mRilConnectedRegistrants;
    protected android.os.RegistrantList mIccRefreshRegistrants;
    protected android.os.RegistrantList mRilCellInfoListRegistrants;
    protected android.os.RegistrantList mSubscriptionStatusRegistrants;
    protected android.os.RegistrantList mSrvccStateRegistrants;
    protected android.os.RegistrantList mHardwareConfigChangeRegistrants;
    protected android.os.Registrant mGsmSmsRegistrant;
    protected android.os.Registrant mCdmaSmsRegistrant;
    protected android.os.Registrant mNITZTimeRegistrant;
    protected android.os.Registrant mSignalStrengthRegistrant;
    protected android.os.Registrant mUSSDRegistrant;
    protected android.os.Registrant mSmsOnSimRegistrant;
    protected android.os.Registrant mSmsStatusRegistrant;
    protected android.os.Registrant mSsnRegistrant;
    protected android.os.Registrant mCatSessionEndRegistrant;
    protected android.os.Registrant mCatProCmdRegistrant;
    protected android.os.Registrant mCatEventRegistrant;
    protected android.os.Registrant mCatCallSetUpRegistrant;
    protected android.os.Registrant mIccSmsFullRegistrant;
    protected android.os.Registrant mEmergencyCallbackModeRegistrant;
    protected android.os.Registrant mRingRegistrant;
    protected android.os.Registrant mRestrictedStateRegistrant;
    protected android.os.Registrant mGsmBroadcastSmsRegistrant;
    protected int mPreferredNetworkType;
    protected int mCdmaSubscription;
    protected int mPhoneType;
    protected int mRilVersion;

    public void <init>(android.content.Context)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.content.Context r1;
        com.android.internal.telephony.CommandsInterface$RadioState $r2;
        java.lang.Object $r3;
        android.os.RegistrantList $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <com.android.internal.telephony.CommandsInterface$RadioState: com.android.internal.telephony.CommandsInterface$RadioState RADIO_UNAVAILABLE>;

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.CommandsInterface$RadioState mState> = $r2;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor> = $r3;

        $r4 = new android.os.RegistrantList;

        specialinvoke $r4.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mRadioStateChangedRegistrants> = $r4;

        $r5 = new android.os.RegistrantList;

        specialinvoke $r5.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mOnRegistrants> = $r5;

        $r6 = new android.os.RegistrantList;

        specialinvoke $r6.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mAvailRegistrants> = $r6;

        $r7 = new android.os.RegistrantList;

        specialinvoke $r7.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mOffOrNotAvailRegistrants> = $r7;

        $r8 = new android.os.RegistrantList;

        specialinvoke $r8.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mNotAvailRegistrants> = $r8;

        $r9 = new android.os.RegistrantList;

        specialinvoke $r9.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mCallStateRegistrants> = $r9;

        $r10 = new android.os.RegistrantList;

        specialinvoke $r10.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mVoiceNetworkStateRegistrants> = $r10;

        $r11 = new android.os.RegistrantList;

        specialinvoke $r11.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mDataNetworkStateRegistrants> = $r11;

        $r12 = new android.os.RegistrantList;

        specialinvoke $r12.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mVoiceRadioTechChangedRegistrants> = $r12;

        $r13 = new android.os.RegistrantList;

        specialinvoke $r13.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mImsNetworkStateChangedRegistrants> = $r13;

        $r14 = new android.os.RegistrantList;

        specialinvoke $r14.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mIccStatusChangedRegistrants> = $r14;

        $r15 = new android.os.RegistrantList;

        specialinvoke $r15.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mVoicePrivacyOnRegistrants> = $r15;

        $r17 = new android.os.RegistrantList;

        specialinvoke $r17.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mVoicePrivacyOffRegistrants> = $r17;

        $r16 = new android.os.RegistrantList;

        specialinvoke $r16.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mOtaProvisionRegistrants> = $r16;

        $r19 = new android.os.RegistrantList;

        specialinvoke $r19.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mCallWaitingInfoRegistrants> = $r19;

        $r18 = new android.os.RegistrantList;

        specialinvoke $r18.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mDisplayInfoRegistrants> = $r18;

        $r21 = new android.os.RegistrantList;

        specialinvoke $r21.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mSignalInfoRegistrants> = $r21;

        $r20 = new android.os.RegistrantList;

        specialinvoke $r20.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mNumberInfoRegistrants> = $r20;

        $r23 = new android.os.RegistrantList;

        specialinvoke $r23.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mRedirNumInfoRegistrants> = $r23;

        $r22 = new android.os.RegistrantList;

        specialinvoke $r22.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mLineControlInfoRegistrants> = $r22;

        $r25 = new android.os.RegistrantList;

        specialinvoke $r25.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mT53ClirInfoRegistrants> = $r25;

        $r24 = new android.os.RegistrantList;

        specialinvoke $r24.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mT53AudCntrlInfoRegistrants> = $r24;

        $r27 = new android.os.RegistrantList;

        specialinvoke $r27.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mRingbackToneRegistrants> = $r27;

        $r26 = new android.os.RegistrantList;

        specialinvoke $r26.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mResendIncallMuteRegistrants> = $r26;

        $r29 = new android.os.RegistrantList;

        specialinvoke $r29.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mCdmaSubscriptionChangedRegistrants> = $r29;

        $r28 = new android.os.RegistrantList;

        specialinvoke $r28.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mCdmaPrlChangedRegistrants> = $r28;

        $r31 = new android.os.RegistrantList;

        specialinvoke $r31.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mExitEmergencyCallbackModeRegistrants> = $r31;

        $r30 = new android.os.RegistrantList;

        specialinvoke $r30.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mRilConnectedRegistrants> = $r30;

        $r34 = new android.os.RegistrantList;

        specialinvoke $r34.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mIccRefreshRegistrants> = $r34;

        $r35 = new android.os.RegistrantList;

        specialinvoke $r35.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mRilCellInfoListRegistrants> = $r35;

        $r32 = new android.os.RegistrantList;

        specialinvoke $r32.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mSubscriptionStatusRegistrants> = $r32;

        $r33 = new android.os.RegistrantList;

        specialinvoke $r33.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mSrvccStateRegistrants> = $r33;

        $r36 = new android.os.RegistrantList;

        specialinvoke $r36.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mHardwareConfigChangeRegistrants> = $r36;

        r0.<com.android.internal.telephony.BaseCommands: int mRilVersion> = -1;

        r0.<com.android.internal.telephony.BaseCommands: android.content.Context mContext> = r1;

        return;
    }

    public com.android.internal.telephony.CommandsInterface$RadioState getRadioState()
    {
        com.android.internal.telephony.BaseCommands r0;
        com.android.internal.telephony.CommandsInterface$RadioState $r1;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        $r1 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.CommandsInterface$RadioState mState>;

        return $r1;
    }

    public void registerForRadioStateChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2, r4, $r7;
        android.os.Registrant r3, $r6;
        java.lang.Throwable r5, $r9;
        android.os.RegistrantList $r8;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r6 = new android.os.Registrant;

        specialinvoke $r6.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r6;

        $r7 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor>;

        r4 = $r7;

        entermonitor $r7;

     label1:
        $r8 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mRadioStateChangedRegistrants>;

        virtualinvoke $r8.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        virtualinvoke r3.<android.os.Registrant: void notifyRegistrant()>();

        exitmonitor r4;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        r5 = $r9;

        exitmonitor r4;

     label4:
        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void unregisterForRadioStateChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r4 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mRadioStateChangedRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void registerForImsNetworkStateChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mImsNetworkStateChangedRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForImsNetworkStateChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mImsNetworkStateChangedRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForOn(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2, r4, $r7;
        android.os.Registrant r3, $r6;
        java.lang.Throwable r5, $r11;
        android.os.RegistrantList $r8;
        com.android.internal.telephony.CommandsInterface$RadioState $r9;
        boolean $z0;
        android.os.AsyncResult $r10;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r6 = new android.os.Registrant;

        specialinvoke $r6.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r6;

        $r7 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor>;

        r4 = $r7;

        entermonitor $r7;

     label1:
        $r8 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mOnRegistrants>;

        virtualinvoke $r8.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        $r9 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.CommandsInterface$RadioState mState>;

        $z0 = virtualinvoke $r9.<com.android.internal.telephony.CommandsInterface$RadioState: boolean isOn()>();

        if $z0 == 0 goto label2;

        $r10 = new android.os.AsyncResult;

        specialinvoke $r10.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke r3.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r10);

     label2:
        exitmonitor r4;

     label3:
        goto label6;

     label4:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r4;

     label5:
        throw r5;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unregisterForOn(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r4 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mOnRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void registerForAvailable(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2, r4, $r7;
        android.os.Registrant r3, $r6;
        java.lang.Throwable r5, $r11;
        android.os.RegistrantList $r8;
        com.android.internal.telephony.CommandsInterface$RadioState $r9;
        boolean $z0;
        android.os.AsyncResult $r10;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r6 = new android.os.Registrant;

        specialinvoke $r6.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r6;

        $r7 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor>;

        r4 = $r7;

        entermonitor $r7;

     label1:
        $r8 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mAvailRegistrants>;

        virtualinvoke $r8.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        $r9 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.CommandsInterface$RadioState mState>;

        $z0 = virtualinvoke $r9.<com.android.internal.telephony.CommandsInterface$RadioState: boolean isAvailable()>();

        if $z0 == 0 goto label2;

        $r10 = new android.os.AsyncResult;

        specialinvoke $r10.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke r3.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r10);

     label2:
        exitmonitor r4;

     label3:
        goto label6;

     label4:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r4;

     label5:
        throw r5;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unregisterForAvailable(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r4 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mAvailRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void registerForNotAvailable(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2, r4, $r7;
        android.os.Registrant r3, $r6;
        java.lang.Throwable r5, $r11;
        android.os.RegistrantList $r8;
        com.android.internal.telephony.CommandsInterface$RadioState $r9;
        boolean $z0;
        android.os.AsyncResult $r10;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r6 = new android.os.Registrant;

        specialinvoke $r6.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r6;

        $r7 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor>;

        r4 = $r7;

        entermonitor $r7;

     label1:
        $r8 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mNotAvailRegistrants>;

        virtualinvoke $r8.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        $r9 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.CommandsInterface$RadioState mState>;

        $z0 = virtualinvoke $r9.<com.android.internal.telephony.CommandsInterface$RadioState: boolean isAvailable()>();

        if $z0 != 0 goto label2;

        $r10 = new android.os.AsyncResult;

        specialinvoke $r10.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke r3.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r10);

     label2:
        exitmonitor r4;

     label3:
        goto label6;

     label4:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r4;

     label5:
        throw r5;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unregisterForNotAvailable(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r4 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mNotAvailRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void registerForOffOrNotAvailable(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2, r4, $r7;
        android.os.Registrant r3, $r6;
        java.lang.Throwable r5, $r13;
        android.os.RegistrantList $r8;
        com.android.internal.telephony.CommandsInterface$RadioState $r9, $r10, $r12;
        android.os.AsyncResult $r11;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r6 = new android.os.Registrant;

        specialinvoke $r6.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r6;

        $r7 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor>;

        r4 = $r7;

        entermonitor $r7;

     label1:
        $r8 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mOffOrNotAvailRegistrants>;

        virtualinvoke $r8.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        $r10 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.CommandsInterface$RadioState mState>;

        $r9 = <com.android.internal.telephony.CommandsInterface$RadioState: com.android.internal.telephony.CommandsInterface$RadioState RADIO_OFF>;

        if $r10 == $r9 goto label2;

        $r12 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.CommandsInterface$RadioState mState>;

        $z0 = virtualinvoke $r12.<com.android.internal.telephony.CommandsInterface$RadioState: boolean isAvailable()>();

        if $z0 != 0 goto label3;

     label2:
        $r11 = new android.os.AsyncResult;

        specialinvoke $r11.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke r3.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r11);

     label3:
        exitmonitor r4;

     label4:
        goto label7;

     label5:
        $r13 := @caughtexception;

        r5 = $r13;

        exitmonitor r4;

     label6:
        throw r5;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void unregisterForOffOrNotAvailable(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r4 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mOffOrNotAvailRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void registerForCallStateChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mCallStateRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForCallStateChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mCallStateRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForVoiceNetworkStateChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mVoiceNetworkStateRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForVoiceNetworkStateChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mVoiceNetworkStateRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForDataNetworkStateChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mDataNetworkStateRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForDataNetworkStateChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mDataNetworkStateRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForVoiceRadioTechChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mVoiceRadioTechChangedRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForVoiceRadioTechChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mVoiceRadioTechChangedRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForIccStatusChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mIccStatusChangedRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForIccStatusChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mIccStatusChangedRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void setOnNewGsmSms(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mGsmSmsRegistrant> = $r3;

        return;
    }

    public void unSetOnNewGsmSms(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r4;
        android.os.Registrant $r2, $r3, $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mGsmSmsRegistrant>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mGsmSmsRegistrant>;

        $r4 = virtualinvoke $r3.<android.os.Registrant: android.os.Handler getHandler()>();

        if $r4 != r1 goto label1;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mGsmSmsRegistrant>;

        virtualinvoke $r5.<android.os.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mGsmSmsRegistrant> = null;

     label1:
        return;
    }

    public void setOnNewCdmaSms(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mCdmaSmsRegistrant> = $r3;

        return;
    }

    public void unSetOnNewCdmaSms(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r4;
        android.os.Registrant $r2, $r3, $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mCdmaSmsRegistrant>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mCdmaSmsRegistrant>;

        $r4 = virtualinvoke $r3.<android.os.Registrant: android.os.Handler getHandler()>();

        if $r4 != r1 goto label1;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mCdmaSmsRegistrant>;

        virtualinvoke $r5.<android.os.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mCdmaSmsRegistrant> = null;

     label1:
        return;
    }

    public void setOnNewGsmBroadcastSms(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mGsmBroadcastSmsRegistrant> = $r3;

        return;
    }

    public void unSetOnNewGsmBroadcastSms(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r4;
        android.os.Registrant $r2, $r3, $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mGsmBroadcastSmsRegistrant>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mGsmBroadcastSmsRegistrant>;

        $r4 = virtualinvoke $r3.<android.os.Registrant: android.os.Handler getHandler()>();

        if $r4 != r1 goto label1;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mGsmBroadcastSmsRegistrant>;

        virtualinvoke $r5.<android.os.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mGsmBroadcastSmsRegistrant> = null;

     label1:
        return;
    }

    public void setOnSmsOnSim(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mSmsOnSimRegistrant> = $r3;

        return;
    }

    public void unSetOnSmsOnSim(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r4;
        android.os.Registrant $r2, $r3, $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mSmsOnSimRegistrant>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mSmsOnSimRegistrant>;

        $r4 = virtualinvoke $r3.<android.os.Registrant: android.os.Handler getHandler()>();

        if $r4 != r1 goto label1;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mSmsOnSimRegistrant>;

        virtualinvoke $r5.<android.os.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mSmsOnSimRegistrant> = null;

     label1:
        return;
    }

    public void setOnSmsStatus(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mSmsStatusRegistrant> = $r3;

        return;
    }

    public void unSetOnSmsStatus(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r4;
        android.os.Registrant $r2, $r3, $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mSmsStatusRegistrant>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mSmsStatusRegistrant>;

        $r4 = virtualinvoke $r3.<android.os.Registrant: android.os.Handler getHandler()>();

        if $r4 != r1 goto label1;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mSmsStatusRegistrant>;

        virtualinvoke $r5.<android.os.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mSmsStatusRegistrant> = null;

     label1:
        return;
    }

    public void setOnSignalStrengthUpdate(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mSignalStrengthRegistrant> = $r3;

        return;
    }

    public void unSetOnSignalStrengthUpdate(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r4;
        android.os.Registrant $r2, $r3, $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mSignalStrengthRegistrant>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mSignalStrengthRegistrant>;

        $r4 = virtualinvoke $r3.<android.os.Registrant: android.os.Handler getHandler()>();

        if $r4 != r1 goto label1;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mSignalStrengthRegistrant>;

        virtualinvoke $r5.<android.os.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mSignalStrengthRegistrant> = null;

     label1:
        return;
    }

    public void setOnNITZTime(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mNITZTimeRegistrant> = $r3;

        return;
    }

    public void unSetOnNITZTime(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r4;
        android.os.Registrant $r2, $r3, $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mNITZTimeRegistrant>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mNITZTimeRegistrant>;

        $r4 = virtualinvoke $r3.<android.os.Registrant: android.os.Handler getHandler()>();

        if $r4 != r1 goto label1;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mNITZTimeRegistrant>;

        virtualinvoke $r5.<android.os.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mNITZTimeRegistrant> = null;

     label1:
        return;
    }

    public void setOnUSSD(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mUSSDRegistrant> = $r3;

        return;
    }

    public void unSetOnUSSD(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r4;
        android.os.Registrant $r2, $r3, $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mUSSDRegistrant>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mUSSDRegistrant>;

        $r4 = virtualinvoke $r3.<android.os.Registrant: android.os.Handler getHandler()>();

        if $r4 != r1 goto label1;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mUSSDRegistrant>;

        virtualinvoke $r5.<android.os.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mUSSDRegistrant> = null;

     label1:
        return;
    }

    public void setOnSuppServiceNotification(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mSsnRegistrant> = $r3;

        return;
    }

    public void unSetOnSuppServiceNotification(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r4;
        android.os.Registrant $r2, $r3, $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mSsnRegistrant>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mSsnRegistrant>;

        $r4 = virtualinvoke $r3.<android.os.Registrant: android.os.Handler getHandler()>();

        if $r4 != r1 goto label1;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mSsnRegistrant>;

        virtualinvoke $r5.<android.os.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mSsnRegistrant> = null;

     label1:
        return;
    }

    public void setOnCatSessionEnd(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mCatSessionEndRegistrant> = $r3;

        return;
    }

    public void unSetOnCatSessionEnd(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r4;
        android.os.Registrant $r2, $r3, $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mCatSessionEndRegistrant>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mCatSessionEndRegistrant>;

        $r4 = virtualinvoke $r3.<android.os.Registrant: android.os.Handler getHandler()>();

        if $r4 != r1 goto label1;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mCatSessionEndRegistrant>;

        virtualinvoke $r5.<android.os.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mCatSessionEndRegistrant> = null;

     label1:
        return;
    }

    public void setOnCatProactiveCmd(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mCatProCmdRegistrant> = $r3;

        return;
    }

    public void unSetOnCatProactiveCmd(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r4;
        android.os.Registrant $r2, $r3, $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mCatProCmdRegistrant>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mCatProCmdRegistrant>;

        $r4 = virtualinvoke $r3.<android.os.Registrant: android.os.Handler getHandler()>();

        if $r4 != r1 goto label1;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mCatProCmdRegistrant>;

        virtualinvoke $r5.<android.os.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mCatProCmdRegistrant> = null;

     label1:
        return;
    }

    public void setOnCatEvent(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mCatEventRegistrant> = $r3;

        return;
    }

    public void unSetOnCatEvent(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r4;
        android.os.Registrant $r2, $r3, $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mCatEventRegistrant>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mCatEventRegistrant>;

        $r4 = virtualinvoke $r3.<android.os.Registrant: android.os.Handler getHandler()>();

        if $r4 != r1 goto label1;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mCatEventRegistrant>;

        virtualinvoke $r5.<android.os.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mCatEventRegistrant> = null;

     label1:
        return;
    }

    public void setOnCatCallSetUp(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mCatCallSetUpRegistrant> = $r3;

        return;
    }

    public void unSetOnCatCallSetUp(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r4;
        android.os.Registrant $r2, $r3, $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mCatCallSetUpRegistrant>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mCatCallSetUpRegistrant>;

        $r4 = virtualinvoke $r3.<android.os.Registrant: android.os.Handler getHandler()>();

        if $r4 != r1 goto label1;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mCatCallSetUpRegistrant>;

        virtualinvoke $r5.<android.os.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mCatCallSetUpRegistrant> = null;

     label1:
        return;
    }

    public void setOnIccSmsFull(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mIccSmsFullRegistrant> = $r3;

        return;
    }

    public void unSetOnIccSmsFull(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r4;
        android.os.Registrant $r2, $r3, $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mIccSmsFullRegistrant>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mIccSmsFullRegistrant>;

        $r4 = virtualinvoke $r3.<android.os.Registrant: android.os.Handler getHandler()>();

        if $r4 != r1 goto label1;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mIccSmsFullRegistrant>;

        virtualinvoke $r5.<android.os.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mIccSmsFullRegistrant> = null;

     label1:
        return;
    }

    public void registerForIccRefresh(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mIccRefreshRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void setOnIccRefresh(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        virtualinvoke r0.<com.android.internal.telephony.BaseCommands: void registerForIccRefresh(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void setEmergencyCallbackMode(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mEmergencyCallbackModeRegistrant> = $r3;

        return;
    }

    public void unregisterForIccRefresh(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mIccRefreshRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void unsetOnIccRefresh(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        virtualinvoke r0.<com.android.internal.telephony.BaseCommands: void unregisterForIccRefresh(android.os.Handler)>(r1);

        return;
    }

    public void setOnCallRing(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mRingRegistrant> = $r3;

        return;
    }

    public void unSetOnCallRing(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r4;
        android.os.Registrant $r2, $r3, $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mRingRegistrant>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mRingRegistrant>;

        $r4 = virtualinvoke $r3.<android.os.Registrant: android.os.Handler getHandler()>();

        if $r4 != r1 goto label1;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mRingRegistrant>;

        virtualinvoke $r5.<android.os.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mRingRegistrant> = null;

     label1:
        return;
    }

    public void registerForInCallVoicePrivacyOn(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mVoicePrivacyOnRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForInCallVoicePrivacyOn(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mVoicePrivacyOnRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForInCallVoicePrivacyOff(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mVoicePrivacyOffRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForInCallVoicePrivacyOff(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mVoicePrivacyOffRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void setOnRestrictedStateChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mRestrictedStateRegistrant> = $r3;

        return;
    }

    public void unSetOnRestrictedStateChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r4;
        android.os.Registrant $r2, $r3, $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mRestrictedStateRegistrant>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mRestrictedStateRegistrant>;

        $r4 = virtualinvoke $r3.<android.os.Registrant: android.os.Handler getHandler()>();

        if $r4 == r1 goto label1;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mRestrictedStateRegistrant>;

        virtualinvoke $r5.<android.os.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mRestrictedStateRegistrant> = null;

     label1:
        return;
    }

    public void registerForDisplayInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mDisplayInfoRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForDisplayInfo(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mDisplayInfoRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForCallWaitingInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mCallWaitingInfoRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForCallWaitingInfo(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mCallWaitingInfoRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForSignalInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mSignalInfoRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void setOnUnsolOemHookRaw(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant $r3;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mUnsolOemHookRawRegistrant> = $r3;

        return;
    }

    public void unSetOnUnsolOemHookRaw(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1, $r4;
        android.os.Registrant $r2, $r3, $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mUnsolOemHookRawRegistrant>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mUnsolOemHookRawRegistrant>;

        $r4 = virtualinvoke $r3.<android.os.Registrant: android.os.Handler getHandler()>();

        if $r4 != r1 goto label1;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mUnsolOemHookRawRegistrant>;

        virtualinvoke $r5.<android.os.Registrant: void clear()>();

        r0.<com.android.internal.telephony.BaseCommands: android.os.Registrant mUnsolOemHookRawRegistrant> = null;

     label1:
        return;
    }

    public void unregisterForSignalInfo(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mSignalInfoRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForCdmaOtaProvision(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mOtaProvisionRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForCdmaOtaProvision(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mOtaProvisionRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForNumberInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mNumberInfoRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForNumberInfo(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mNumberInfoRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForRedirectedNumberInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mRedirNumInfoRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForRedirectedNumberInfo(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mRedirNumInfoRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForLineControlInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mLineControlInfoRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForLineControlInfo(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mLineControlInfoRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerFoT53ClirlInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mT53ClirInfoRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForT53ClirInfo(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mT53ClirInfoRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForT53AudioControlInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mT53AudCntrlInfoRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForT53AudioControlInfo(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mT53AudCntrlInfoRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForRingbackTone(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mRingbackToneRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForRingbackTone(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mRingbackToneRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForResendIncallMute(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mResendIncallMuteRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForResendIncallMute(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mResendIncallMuteRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForCdmaSubscriptionChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mCdmaSubscriptionChangedRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForCdmaSubscriptionChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mCdmaSubscriptionChangedRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForCdmaPrlChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mCdmaPrlChangedRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForCdmaPrlChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mCdmaPrlChangedRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForExitEmergencyCallbackMode(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mExitEmergencyCallbackModeRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForExitEmergencyCallbackMode(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mExitEmergencyCallbackModeRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForHardwareConfigChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mHardwareConfigChangeRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForHardwareConfigChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mHardwareConfigChangeRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForRilConnected(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0, $i1, $i2;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;
        android.os.AsyncResult $r6;
        java.lang.Integer $r7;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mRilConnectedRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        $i1 = r0.<com.android.internal.telephony.BaseCommands: int mRilVersion>;

        if $i1 == -1 goto label1;

        $r6 = new android.os.AsyncResult;

        $r7 = new java.lang.Integer;

        $i2 = r0.<com.android.internal.telephony.BaseCommands: int mRilVersion>;

        specialinvoke $r7.<java.lang.Integer: void <init>(int)>($i2);

        specialinvoke $r6.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r7, null);

        virtualinvoke r3.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r6);

     label1:
        return;
    }

    public void unregisterForRilConnected(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mRilConnectedRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForSubscriptionStatusChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mSubscriptionStatusRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForSubscriptionStatusChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mSubscriptionStatusRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    protected void setRadioState(com.android.internal.telephony.CommandsInterface$RadioState)
    {
        com.android.internal.telephony.BaseCommands r0;
        com.android.internal.telephony.CommandsInterface$RadioState r1, r2, $r6, $r8, $r9, $r10, $r11, $r13;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r17;
        android.os.RegistrantList $r7, $r12, $r14, $r15, $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: com.android.internal.telephony.CommandsInterface$RadioState;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: java.lang.Object mStateMonitor>;

        r3 = $r5;

        entermonitor $r5;

     label01:
        r2 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.CommandsInterface$RadioState mState>;

        r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.CommandsInterface$RadioState mState> = r1;

        $r6 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.CommandsInterface$RadioState mState>;

        if r2 != $r6 goto label03;

        exitmonitor r3;

     label02:
        return;

     label03:
        $r7 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mRadioStateChangedRegistrants>;

        virtualinvoke $r7.<android.os.RegistrantList: void notifyRegistrants()>();

        $r8 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.CommandsInterface$RadioState mState>;

        $z0 = virtualinvoke $r8.<com.android.internal.telephony.CommandsInterface$RadioState: boolean isAvailable()>();

        if $z0 == 0 goto label04;

        $z9 = virtualinvoke r2.<com.android.internal.telephony.CommandsInterface$RadioState: boolean isAvailable()>();

        if $z9 != 0 goto label04;

        $r16 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mAvailRegistrants>;

        virtualinvoke $r16.<android.os.RegistrantList: void notifyRegistrants()>();

        virtualinvoke r0.<com.android.internal.telephony.BaseCommands: void onRadioAvailable()>();

     label04:
        $r9 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.CommandsInterface$RadioState mState>;

        $z1 = virtualinvoke $r9.<com.android.internal.telephony.CommandsInterface$RadioState: boolean isAvailable()>();

        if $z1 != 0 goto label05;

        $z8 = virtualinvoke r2.<com.android.internal.telephony.CommandsInterface$RadioState: boolean isAvailable()>();

        if $z8 == 0 goto label05;

        $r15 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mNotAvailRegistrants>;

        virtualinvoke $r15.<android.os.RegistrantList: void notifyRegistrants()>();

     label05:
        $r10 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.CommandsInterface$RadioState mState>;

        $z2 = virtualinvoke $r10.<com.android.internal.telephony.CommandsInterface$RadioState: boolean isOn()>();

        if $z2 == 0 goto label06;

        $z7 = virtualinvoke r2.<com.android.internal.telephony.CommandsInterface$RadioState: boolean isOn()>();

        if $z7 != 0 goto label06;

        $r14 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mOnRegistrants>;

        virtualinvoke $r14.<android.os.RegistrantList: void notifyRegistrants()>();

     label06:
        $r11 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.CommandsInterface$RadioState mState>;

        $z3 = virtualinvoke $r11.<com.android.internal.telephony.CommandsInterface$RadioState: boolean isOn()>();

        if $z3 == 0 goto label07;

        $r13 = r0.<com.android.internal.telephony.BaseCommands: com.android.internal.telephony.CommandsInterface$RadioState mState>;

        $z6 = virtualinvoke $r13.<com.android.internal.telephony.CommandsInterface$RadioState: boolean isAvailable()>();

        if $z6 != 0 goto label08;

     label07:
        $z4 = virtualinvoke r2.<com.android.internal.telephony.CommandsInterface$RadioState: boolean isOn()>();

        if $z4 == 0 goto label08;

        $z5 = virtualinvoke r2.<com.android.internal.telephony.CommandsInterface$RadioState: boolean isAvailable()>();

        if $z5 == 0 goto label08;

        $r12 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mOffOrNotAvailRegistrants>;

        virtualinvoke $r12.<android.os.RegistrantList: void notifyRegistrants()>();

     label08:
        exitmonitor r3;

     label09:
        goto label12;

     label10:
        $r17 := @caughtexception;

        r4 = $r17;

        exitmonitor r3;

     label11:
        throw r4;

     label12:
        return;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    protected void onRadioAvailable()
    {
        com.android.internal.telephony.BaseCommands r0;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        return;
    }

    public int getLteOnCdmaMode()
    {
        com.android.internal.telephony.BaseCommands r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        $i0 = staticinvoke <android.telephony.TelephonyManager: int getLteOnCdmaModeStatic()>();

        return $i0;
    }

    public void registerForCellInfoList(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mRilCellInfoListRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForCellInfoList(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mRilCellInfoListRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForSrvccStateChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mSrvccStateRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForSrvccStateChanged(android.os.Handler)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.BaseCommands: android.os.RegistrantList mSrvccStateRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void testingEmergencyCall()
    {
        com.android.internal.telephony.BaseCommands r0;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        return;
    }

    public int getRilVersion()
    {
        com.android.internal.telephony.BaseCommands r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        $i0 = r0.<com.android.internal.telephony.BaseCommands: int mRilVersion>;

        return $i0;
    }

    public void setUiccSubscription(int, int, int, int, android.os.Message)
    {
        com.android.internal.telephony.BaseCommands r0;
        int i0, i1, i2, i3;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: android.os.Message;

        return;
    }

    public void setDataAllowed(boolean, android.os.Message)
    {
        com.android.internal.telephony.BaseCommands r0;
        boolean z0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        return;
    }

    public void requestShutdown(android.os.Message)
    {
        com.android.internal.telephony.BaseCommands r0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.BaseCommands;

        r1 := @parameter0: android.os.Message;

        return;
    }
}
