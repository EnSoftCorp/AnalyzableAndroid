public class com.android.internal.telephony.IccSmsInterfaceManager extends java.lang.Object
{
    static final java.lang.String LOG_TAG;
    static final boolean DBG;
    protected final java.lang.Object mLock;
    protected boolean mSuccess;
    private java.util.List mSms;
    private com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager mCellBroadcastRangeManager;
    private com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager mCdmaBroadcastRangeManager;
    private static final int EVENT_LOAD_DONE;
    private static final int EVENT_UPDATE_DONE;
    protected static final int EVENT_SET_BROADCAST_ACTIVATION_DONE;
    protected static final int EVENT_SET_BROADCAST_CONFIG_DONE;
    private static final int SMS_CB_CODE_SCHEME_MIN;
    private static final int SMS_CB_CODE_SCHEME_MAX;
    protected com.android.internal.telephony.PhoneBase mPhone;
    protected final android.content.Context mContext;
    protected final android.app.AppOpsManager mAppOps;
    private final android.os.UserManager mUserManager;
    protected com.android.internal.telephony.SMSDispatcher mDispatcher;
    protected android.os.Handler mHandler;

    protected void <init>(com.android.internal.telephony.PhoneBase)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        com.android.internal.telephony.PhoneBase r1;
        java.lang.Object $r2, $r8, $r11;
        com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager $r3;
        com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager $r4;
        com.android.internal.telephony.IccSmsInterfaceManager$1 $r5;
        android.content.Context $r6, $r7, $r10;
        android.app.AppOpsManager $r9;
        android.os.UserManager $r12;
        com.android.internal.telephony.ImsSMSDispatcher $r13;
        com.android.internal.telephony.SmsUsageMonitor $r14;
        com.android.internal.telephony.SmsStorageMonitor $r15;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: com.android.internal.telephony.PhoneBase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock> = $r2;

        $r3 = new com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager;

        specialinvoke $r3.<com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager: void <init>(com.android.internal.telephony.IccSmsInterfaceManager)>(r0);

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager mCellBroadcastRangeManager> = $r3;

        $r4 = new com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager;

        specialinvoke $r4.<com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager: void <init>(com.android.internal.telephony.IccSmsInterfaceManager)>(r0);

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager mCdmaBroadcastRangeManager> = $r4;

        $r5 = new com.android.internal.telephony.IccSmsInterfaceManager$1;

        specialinvoke $r5.<com.android.internal.telephony.IccSmsInterfaceManager$1: void <init>(com.android.internal.telephony.IccSmsInterfaceManager)>(r0);

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.os.Handler mHandler> = $r5;

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone> = r1;

        $r6 = virtualinvoke r1.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.content.Context mContext> = $r6;

        $r7 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("appops");

        $r9 = (android.app.AppOpsManager) $r8;

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.app.AppOpsManager mAppOps> = $r9;

        $r10 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("user");

        $r12 = (android.os.UserManager) $r11;

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.os.UserManager mUserManager> = $r12;

        $r13 = new com.android.internal.telephony.ImsSMSDispatcher;

        $r15 = r1.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.SmsStorageMonitor mSmsStorageMonitor>;

        $r14 = r1.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.SmsUsageMonitor mSmsUsageMonitor>;

        specialinvoke $r13.<com.android.internal.telephony.ImsSMSDispatcher: void <init>(com.android.internal.telephony.PhoneBase,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.SmsUsageMonitor)>(r1, $r15, $r14);

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.SMSDispatcher mDispatcher> = $r13;

        return;
    }

    protected void markMessagesAsRead(java.util.ArrayList)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.util.ArrayList r1;
        com.android.internal.telephony.uicc.IccFileHandler r2;
        int i0, i1, i2, $i4, $i5, $i6, $i7;
        byte[] r3, r4, r5;
        com.android.internal.telephony.PhoneBase $r6;
        java.lang.Object $r7;
        byte $b3;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;
        boolean $z0, $z1;
        java.lang.String $r12;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.util.ArrayList;

        if r1 != null goto label1;

        return;

     label1:
        $r6 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        r2 = virtualinvoke $r6.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.uicc.IccFileHandler getIccFileHandler()>();

        if r2 != null goto label3;

        $z1 = staticinvoke <android.telephony.Rlog: boolean isLoggable(java.lang.String,int)>("SMS", 3);

        if $z1 == 0 goto label2;

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>("markMessagesAsRead - aborting, no icc card present.");

     label2:
        return;

     label3:
        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label4:
        if i1 >= i0 goto label6;

        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (byte[]) $r7;

        $b3 = r3[0];

        if $b3 != 3 goto label5;

        i2 = lengthof r3;

        $i4 = i2 - 1;

        r4 = newarray (byte)[$i4];

        $i5 = i2 - 1;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r3, 1, r4, 0, $i5);

        r5 = virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: byte[] makeSmsRecordData(int,byte[])>(1, r4);

        $i6 = i1 + 1;

        virtualinvoke r2.<com.android.internal.telephony.uicc.IccFileHandler: void updateEFLinearFixed(int,int,byte[],java.lang.String,android.os.Message)>(28476, $i6, r5, null, null);

        $z0 = staticinvoke <android.telephony.Rlog: boolean isLoggable(java.lang.String,int)>("SMS", 3);

        if $z0 == 0 goto label5;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SMS ");

        $i7 = i1 + 1;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" marked as read");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r12);

     label5:
        i1 = i1 + 1;

        goto label4;

     label6:
        return;
    }

    protected void updatePhoneObject(com.android.internal.telephony.PhoneBase)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        com.android.internal.telephony.PhoneBase r1;
        com.android.internal.telephony.SMSDispatcher $r2;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: com.android.internal.telephony.PhoneBase;

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone> = r1;

        $r2 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.SMSDispatcher mDispatcher>;

        virtualinvoke $r2.<com.android.internal.telephony.SMSDispatcher: void updatePhoneObject(com.android.internal.telephony.PhoneBase)>(r1);

        return;
    }

    protected void enforceReceiveAndSend(java.lang.String)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.lang.String r1;
        android.content.Context $r2, $r3;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.RECEIVE_SMS", r1);

        $r3 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SEND_SMS", r1);

        return;
    }

    public boolean updateMessageOnIccEf(java.lang.String, int, int, byte[])
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.lang.String r1, $r14, $r19;
        int i0, i1, $i2, $i3, $i4;
        byte[] r2, r6;
        java.lang.Object r3, $r20, $r23;
        android.os.Message r4;
        com.android.internal.telephony.uicc.IccFileHandler r5;
        java.lang.Throwable r7, $r27;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r16, $r17;
        android.app.AppOpsManager $r18;
        android.os.Handler $r21;
        com.android.internal.telephony.PhoneBase $r22, $r24, $r25, $r29;
        boolean $z0, $z1;
        com.android.internal.telephony.CommandsInterface $r26, $r28;
        java.lang.InterruptedException $r30;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: byte[];

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateMessageOnIccEf: index=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" status=");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ==> ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r14 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>(r2);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r19);

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void enforceReceiveAndSend(java.lang.String)>("Updating message on Icc");

        $r18 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.app.AppOpsManager mAppOps>;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = virtualinvoke $r18.<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>(22, $i2, r1);

        if $i3 == 0 goto label01;

        return 0;

     label01:
        $r20 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        r3 = $r20;

        entermonitor $r20;

     label02:
        r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean mSuccess> = 0;

        $r21 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.os.Handler mHandler>;

        r4 = virtualinvoke $r21.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        if i1 != 0 goto label04;

        $r25 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $i4 = virtualinvoke $r25.<com.android.internal.telephony.PhoneBase: int getPhoneType()>();

        if 1 != $i4 goto label03;

        $r29 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r26 = $r29.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r26.<com.android.internal.telephony.CommandsInterface: void deleteSmsOnSim(int,android.os.Message)>(i0, r4);

        goto label07;

     label03:
        $r24 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r28 = $r24.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r28.<com.android.internal.telephony.CommandsInterface: void deleteSmsOnRuim(int,android.os.Message)>(i0, r4);

        goto label07;

     label04:
        $r22 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        r5 = virtualinvoke $r22.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.uicc.IccFileHandler getIccFileHandler()>();

        if r5 != null goto label06;

        virtualinvoke r4.<android.os.Message: void recycle()>();

        $z0 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean mSuccess>;

        exitmonitor r3;

     label05:
        return $z0;

     label06:
        r6 = virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: byte[] makeSmsRecordData(int,byte[])>(i1, r2);

        virtualinvoke r5.<com.android.internal.telephony.uicc.IccFileHandler: void updateEFLinearFixed(int,int,byte[],java.lang.String,android.os.Message)>(28476, i0, r6, null, r4);

     label07:
        $r23 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        virtualinvoke $r23.<java.lang.Object: void wait()>();

     label08:
        goto label10;

     label09:
        $r30 := @caughtexception;

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>("interrupted while trying to update by index");

     label10:
        exitmonitor r3;

     label11:
        goto label14;

     label12:
        $r27 := @caughtexception;

        r7 = $r27;

        exitmonitor r3;

     label13:
        throw r7;

     label14:
        $z1 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean mSuccess>;

        return $z1;

        catch java.lang.InterruptedException from label07 to label08 with label09;
        catch java.lang.Throwable from label02 to label05 with label12;
        catch java.lang.Throwable from label06 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public boolean copyMessageToIccEf(java.lang.String, int, byte[], byte[])
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.lang.String r1, $r13, $r15, $r20, $r27, $r29, $r32;
        int i0, $i1, $i2, $i3;
        byte[] r2, r3;
        java.lang.Object r4, $r21, $r25;
        android.os.Message r5;
        java.lang.Throwable r7, $r31;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r14, $r16, $r17, $r18;
        android.app.AppOpsManager $r19;
        android.os.Handler $r22;
        com.android.internal.telephony.PhoneBase $r23, $r24, $r30;
        com.android.internal.telephony.CommandsInterface $r26, $r28;
        boolean $z0;
        java.lang.InterruptedException $r33;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: byte[];

        r3 := @parameter3: byte[];

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("copyMessageToIccEf: status=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ==> ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pdu=(");

        $r13 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>(r2);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), smsc=(");

        $r15 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>(r3);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r20);

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void enforceReceiveAndSend(java.lang.String)>("Copying message to Icc");

        $r19 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.app.AppOpsManager mAppOps>;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = virtualinvoke $r19.<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>(22, $i1, r1);

        if $i2 == 0 goto label01;

        return 0;

     label01:
        $r21 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        r4 = $r21;

        entermonitor $r21;

     label02:
        r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean mSuccess> = 0;

        $r22 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.os.Handler mHandler>;

        r5 = virtualinvoke $r22.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        $r23 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $i3 = virtualinvoke $r23.<com.android.internal.telephony.PhoneBase: int getPhoneType()>();

        if 1 != $i3 goto label03;

        $r30 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r28 = $r30.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        $r29 = staticinvoke <com.android.internal.telephony.IccUtils: java.lang.String bytesToHexString(byte[])>(r3);

        $r32 = staticinvoke <com.android.internal.telephony.IccUtils: java.lang.String bytesToHexString(byte[])>(r2);

        interfaceinvoke $r28.<com.android.internal.telephony.CommandsInterface: void writeSmsToSim(int,java.lang.String,java.lang.String,android.os.Message)>(i0, $r29, $r32, r5);

        goto label04;

     label03:
        $r24 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r26 = $r24.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        $r27 = staticinvoke <com.android.internal.telephony.IccUtils: java.lang.String bytesToHexString(byte[])>(r2);

        interfaceinvoke $r26.<com.android.internal.telephony.CommandsInterface: void writeSmsToRuim(int,java.lang.String,android.os.Message)>(i0, $r27, r5);

     label04:
        $r25 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        virtualinvoke $r25.<java.lang.Object: void wait()>();

     label05:
        goto label07;

     label06:
        $r33 := @caughtexception;

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>("interrupted while trying to update by index");

     label07:
        exitmonitor r4;

     label08:
        goto label11;

     label09:
        $r31 := @caughtexception;

        r7 = $r31;

        exitmonitor r4;

     label10:
        throw r7;

     label11:
        $z0 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean mSuccess>;

        return $z0;

        catch java.lang.InterruptedException from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public java.util.List getAllMessagesFromIccEf(java.lang.String)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.lang.String r1;
        java.lang.Object r2, $r9, $r12;
        com.android.internal.telephony.uicc.IccFileHandler r3;
        android.os.Message r4;
        java.lang.Throwable r6, $r18;
        android.content.Context $r7;
        android.app.AppOpsManager $r8;
        int $i0, $i1;
        com.android.internal.telephony.PhoneBase $r10;
        android.os.Handler $r11;
        java.util.List $r13, $r14, $r15, $r17;
        java.util.ArrayList $r16;
        java.lang.InterruptedException $r19;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>("getAllMessagesFromEF");

        $r7 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.content.Context mContext>;

        virtualinvoke $r7.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.RECEIVE_SMS", "Reading messages from Icc");

        $r8 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.app.AppOpsManager mAppOps>;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = virtualinvoke $r8.<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>(21, $i0, r1);

        if $i1 == 0 goto label01;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        return $r16;

     label01:
        $r9 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        r2 = $r9;

        entermonitor $r9;

     label02:
        $r10 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        r3 = virtualinvoke $r10.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.uicc.IccFileHandler getIccFileHandler()>();

        if r3 != null goto label04;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("IccSmsInterfaceManager", "Cannot load Sms records. No icc card?");

        $r14 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.util.List mSms>;

        if $r14 == null goto label04;

        $r15 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.util.List mSms>;

        interfaceinvoke $r15.<java.util.List: void clear()>();

        $r17 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.util.List mSms>;

        exitmonitor r2;

     label03:
        return $r17;

     label04:
        $r11 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.os.Handler mHandler>;

        r4 = virtualinvoke $r11.<android.os.Handler: android.os.Message obtainMessage(int)>(1);

        virtualinvoke r3.<com.android.internal.telephony.uicc.IccFileHandler: void loadEFLinearFixedAll(int,android.os.Message)>(28476, r4);

     label05:
        $r12 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        virtualinvoke $r12.<java.lang.Object: void wait()>();

     label06:
        goto label08;

     label07:
        $r19 := @caughtexception;

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>("interrupted while trying to load from the Icc");

     label08:
        exitmonitor r2;

     label09:
        goto label12;

     label10:
        $r18 := @caughtexception;

        r6 = $r18;

        exitmonitor r2;

     label11:
        throw r6;

     label12:
        $r13 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.util.List mSms>;

        return $r13;

        catch java.lang.InterruptedException from label05 to label06 with label07;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void sendData(java.lang.String, java.lang.String, java.lang.String, int, byte[], android.app.PendingIntent, android.app.PendingIntent)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.lang.String r1, r2, r3, $r18, $r24, r26;
        int i0, $i1, $i2;
        byte[] r4;
        android.app.PendingIntent r5, r6;
        com.android.internal.telephony.PhoneBase $r7;
        android.content.Context $r8;
        boolean $z0;
        android.app.AppOpsManager $r9;
        java.lang.StringBuilder $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r23, $r25;
        com.android.internal.telephony.SMSDispatcher $r11;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r4 := @parameter4: byte[];

        r5 := @parameter5: android.app.PendingIntent;

        r6 := @parameter6: android.app.PendingIntent;

        $r7 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r8 = virtualinvoke $r7.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        virtualinvoke $r8.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SEND_SMS", "Sending SMS message");

        $z0 = staticinvoke <android.telephony.Rlog: boolean isLoggable(java.lang.String,int)>("SMS", 2);

        if $z0 == 0 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendData: destAddr=");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" scAddr=");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" destPort=");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data=\'");

        $r18 = staticinvoke <com.android.internal.util.HexDump: java.lang.String toHexString(byte[])>(r4);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' sentIntent=");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" deliveryIntent=");

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r24);

     label1:
        $r9 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.app.AppOpsManager mAppOps>;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = virtualinvoke $r9.<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>(20, $i1, r1);

        if $i2 == 0 goto label2;

        return;

     label2:
        r26 = specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.String filterDestAddress(java.lang.String)>(r2);

        $r11 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.SMSDispatcher mDispatcher>;

        virtualinvoke $r11.<com.android.internal.telephony.SMSDispatcher: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>(r26, r3, i0, r4, r5, r6);

        return;
    }

    public void sendText(java.lang.String, java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.lang.String r1, r2, r3, r4, $r21, r23;
        android.app.PendingIntent r5, r6;
        com.android.internal.telephony.PhoneBase $r7;
        android.content.Context $r8;
        boolean $z0;
        android.app.AppOpsManager $r9;
        int $i0, $i1;
        com.android.internal.telephony.SMSDispatcher $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r22;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.app.PendingIntent;

        r6 := @parameter5: android.app.PendingIntent;

        $r7 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r8 = virtualinvoke $r7.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        virtualinvoke $r8.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SEND_SMS", "Sending SMS message");

        $z0 = staticinvoke <android.telephony.Rlog: boolean isLoggable(java.lang.String,int)>("SMS", 2);

        if $z0 == 0 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendText: destAddr=");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" scAddr=");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" text=\'");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' sentIntent=");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" deliveryIntent=");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r21);

     label1:
        $r9 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.app.AppOpsManager mAppOps>;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = virtualinvoke $r9.<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>(20, $i0, r1);

        if $i1 == 0 goto label2;

        return;

     label2:
        r23 = specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.String filterDestAddress(java.lang.String)>(r2);

        $r10 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.SMSDispatcher mDispatcher>;

        virtualinvoke $r10.<com.android.internal.telephony.SMSDispatcher: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,android.net.Uri,java.lang.String)>(r23, r3, r4, r5, r6, null, r1);

        return;
    }

    public void injectSmsPdu(byte[], java.lang.String, android.app.PendingIntent)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        byte[] r1;
        java.lang.String r2, $r12;
        android.app.PendingIntent r3;
        boolean $z0;
        com.android.internal.telephony.SMSDispatcher $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.app.PendingIntent;

        specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void enforceCarrierPrivilege()>();

        $z0 = staticinvoke <android.telephony.Rlog: boolean isLoggable(java.lang.String,int)>("SMS", 2);

        if $z0 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pdu: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n format=");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n receivedIntent=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r12);

     label1:
        $r4 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.SMSDispatcher mDispatcher>;

        virtualinvoke $r4.<com.android.internal.telephony.SMSDispatcher: void injectSmsPdu(byte[],java.lang.String,android.app.PendingIntent)>(r1, r2, r3);

        return;
    }

    public void updateSmsSendStatus(int, boolean)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        int i0;
        boolean z0;
        com.android.internal.telephony.SMSDispatcher $r1;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void enforceCarrierPrivilege()>();

        $r1 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.SMSDispatcher mDispatcher>;

        virtualinvoke $r1.<com.android.internal.telephony.SMSDispatcher: void updateSmsSendStatus(int,boolean)>(i0, z0);

        return;
    }

    public void sendMultipartText(java.lang.String, java.lang.String, java.lang.String, java.util.List, java.util.List, java.util.List)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.lang.String r1, r2, r3, r8, $r20, $r25, $r31, $r45, r46, r47;
        java.util.List r4, r5, r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        java.util.Iterator r7;
        android.app.PendingIntent r9, r48;
        com.android.internal.telephony.PhoneBase $r10;
        android.content.Context $r11;
        boolean $z0, $z1, $z2, $z3;
        android.app.AppOpsManager $r12;
        java.util.ArrayList $r13, $r14, $r15;
        com.android.internal.telephony.SMSDispatcher $r16, $r24;
        java.lang.Object $r17, $r26, $r28, $r35;
        java.lang.StringBuilder $r18, $r19, $r21, $r22, $r23, $r27, $r29, $r30, $r32, $r33, $r34, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.List;

        r5 := @parameter4: java.util.List;

        r6 := @parameter5: java.util.List;

        $r10 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r11 = virtualinvoke $r10.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        virtualinvoke $r11.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SEND_SMS", "Sending SMS message");

        $z0 = staticinvoke <android.telephony.Rlog: boolean isLoggable(java.lang.String,int)>("SMS", 2);

        if $z0 == 0 goto label02;

        i0 = 0;

        r7 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label02;

        $r35 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r35;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendMultipartText: destAddr=");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", srAddr=");

        $r42 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", part[");

        $i12 = i0;

        i0 = i0 + 1;

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r45);

        goto label01;

     label02:
        $r12 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.app.AppOpsManager mAppOps>;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = virtualinvoke $r12.<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>(20, $i2, r1);

        if $i1 == 0 goto label03;

        return;

     label03:
        $i3 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i3 <= 1 goto label10;

        $i4 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i4 >= 10 goto label10;

        $z1 = staticinvoke <android.telephony.SmsMessage: boolean hasEmsSupport()>();

        if $z1 != 0 goto label10;

        i13 = 0;

     label04:
        $i5 = interfaceinvoke r4.<java.util.List: int size()>();

        if i13 >= $i5 goto label09;

        $r17 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i13);

        r46 = (java.lang.String) $r17;

        $z2 = staticinvoke <android.telephony.SmsMessage: boolean shouldAppendPageNumberAsPrefix()>();

        if $z2 == 0 goto label05;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $i10 = i13 + 1;

        $r31 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i10);

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $i11 = interfaceinvoke r4.<java.util.List: int size()>();

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r46);

        r47 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label06;

     label05:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $i6 = i13 + 1;

        $r20 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i6);

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $i7 = interfaceinvoke r4.<java.util.List: int size()>();

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        r47 = virtualinvoke r46.<java.lang.String: java.lang.String concat(java.lang.String)>($r25);

     label06:
        r48 = null;

        if r5 == null goto label07;

        $i9 = interfaceinvoke r5.<java.util.List: int size()>();

        if $i9 <= i13 goto label07;

        $r26 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i13);

        r48 = (android.app.PendingIntent) $r26;

     label07:
        r9 = null;

        if r6 == null goto label08;

        $i8 = interfaceinvoke r6.<java.util.List: int size()>();

        if $i8 <= i13 goto label08;

        $r28 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i13);

        r9 = (android.app.PendingIntent) $r28;

     label08:
        $r24 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.SMSDispatcher mDispatcher>;

        virtualinvoke $r24.<com.android.internal.telephony.SMSDispatcher: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,android.net.Uri,java.lang.String)>(r2, r3, r47, r48, r9, null, r1);

        i13 = i13 + 1;

        goto label04;

     label09:
        return;

     label10:
        $r16 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.SMSDispatcher mDispatcher>;

        $r14 = (java.util.ArrayList) r4;

        $r15 = (java.util.ArrayList) r5;

        $r13 = (java.util.ArrayList) r6;

        virtualinvoke $r16.<com.android.internal.telephony.SMSDispatcher: void sendMultipartText(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,android.net.Uri,java.lang.String)>(r2, r3, $r14, $r15, $r13, null, r1);

        return;
    }

    public int getPremiumSmsPermission(java.lang.String)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.lang.String r1;
        com.android.internal.telephony.SMSDispatcher $r2;
        int $i0;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.SMSDispatcher mDispatcher>;

        $i0 = virtualinvoke $r2.<com.android.internal.telephony.SMSDispatcher: int getPremiumSmsPermission(java.lang.String)>(r1);

        return $i0;
    }

    public void setPremiumSmsPermission(java.lang.String, int)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.lang.String r1;
        int i0;
        com.android.internal.telephony.SMSDispatcher $r2;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.SMSDispatcher mDispatcher>;

        virtualinvoke $r2.<com.android.internal.telephony.SMSDispatcher: void setPremiumSmsPermission(java.lang.String,int)>(r1, i0);

        return;
    }

    protected java.util.ArrayList buildValidRawData(java.util.ArrayList)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.util.ArrayList r1, r2, $r4;
        int i0, i1;
        byte[] r3, $r8;
        java.lang.Object $r5, $r7;
        byte $b2;
        com.android.internal.telephony.SmsRawData $r6;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.util.ArrayList;

        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(i0);

        r2 = $r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r5 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (byte[]) $r5;

        $b2 = r3[0];

        if $b2 != 0 goto label2;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        goto label3;

     label2:
        $r6 = new com.android.internal.telephony.SmsRawData;

        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r8 = (byte[]) $r7;

        specialinvoke $r6.<com.android.internal.telephony.SmsRawData: void <init>(byte[])>($r8);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return r2;
    }

    protected byte[] makeSmsRecordData(int, byte[])
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        int i0, i1, $i2, $i3, $i5, $i6, $i7;
        byte[] r1, r2;
        com.android.internal.telephony.PhoneBase $r3;
        byte $b4;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        $r3 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $i2 = virtualinvoke $r3.<com.android.internal.telephony.PhoneBase: int getPhoneType()>();

        if 1 != $i2 goto label1;

        r2 = newarray (byte)[176];

        goto label2;

     label1:
        r2 = newarray (byte)[255];

     label2:
        $i3 = i0 & 7;

        $b4 = (byte) $i3;

        r2[0] = $b4;

        $i5 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, 0, r2, 1, $i5);

        $i6 = lengthof r1;

        i1 = $i6 + 1;

     label3:
        $i7 = lengthof r2;

        if i1 >= $i7 goto label4;

        r2[i1] = -1;

        i1 = i1 + 1;

        goto label3;

     label4:
        return r2;
    }

    public boolean enableCellBroadcast(int)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean enableCellBroadcastRange(int,int)>(i0, i0);

        return $z0;
    }

    public boolean disableCellBroadcast(int)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean disableCellBroadcastRange(int,int)>(i0, i0);

        return $z0;
    }

    public boolean enableCellBroadcastRange(int, int)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        int i0, i1, $i2;
        com.android.internal.telephony.PhoneBase $r1;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $i2 = virtualinvoke $r1.<com.android.internal.telephony.PhoneBase: int getPhoneType()>();

        if 1 != $i2 goto label1;

        $z1 = virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean enableGsmBroadcastRange(int,int)>(i0, i1);

        return $z1;

     label1:
        $z0 = virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean enableCdmaBroadcastRange(int,int)>(i0, i1);

        return $z0;
    }

    public boolean disableCellBroadcastRange(int, int)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        int i0, i1, $i2;
        com.android.internal.telephony.PhoneBase $r1;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $i2 = virtualinvoke $r1.<com.android.internal.telephony.PhoneBase: int getPhoneType()>();

        if 1 != $i2 goto label1;

        $z1 = virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean disableGsmBroadcastRange(int,int)>(i0, i1);

        return $z1;

     label1:
        $z0 = virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean disableCdmaBroadcastRange(int,int)>(i0, i1);

        return $z0;
    }

    public synchronized boolean enableGsmBroadcastRange(int, int)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        int i0, i1, $i2;
        android.content.Context r1;
        java.lang.String r2, $r12, $r21;
        com.android.internal.telephony.PhoneBase $r3;
        android.content.pm.PackageManager $r4;
        com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager $r5, $r14;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r22;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>("enableGsmBroadcastRange");

        $r3 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        r1 = virtualinvoke $r3.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        virtualinvoke r1.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.RECEIVE_SMS", "Enabling cell broadcast SMS");

        $r4 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r2 = virtualinvoke $r4.<android.content.pm.PackageManager: java.lang.String getNameForUid(int)>($i2);

        $r5 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager mCellBroadcastRangeManager>;

        $z0 = virtualinvoke $r5.<com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager: boolean enableRange(int,int,java.lang.String)>(i0, i1, r2);

        if $z0 != 0 goto label1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to add cell broadcast subscription for MID range ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from client ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r21);

        return 0;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added cell broadcast subscription for MID range ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from client ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r12);

        $r14 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager mCellBroadcastRangeManager>;

        $z1 = virtualinvoke $r14.<com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean setCellBroadcastActivation(boolean)>($z2);

        return 1;
    }

    public synchronized boolean disableGsmBroadcastRange(int, int)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        int i0, i1, $i2;
        android.content.Context r1;
        java.lang.String r2, $r12, $r21;
        com.android.internal.telephony.PhoneBase $r3;
        android.content.pm.PackageManager $r4;
        com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager $r5, $r14;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r22;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>("disableGsmBroadcastRange");

        $r3 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        r1 = virtualinvoke $r3.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        virtualinvoke r1.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.RECEIVE_SMS", "Disabling cell broadcast SMS");

        $r4 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r2 = virtualinvoke $r4.<android.content.pm.PackageManager: java.lang.String getNameForUid(int)>($i2);

        $r5 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager mCellBroadcastRangeManager>;

        $z0 = virtualinvoke $r5.<com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager: boolean disableRange(int,int,java.lang.String)>(i0, i1, r2);

        if $z0 != 0 goto label1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to remove cell broadcast subscription for MID range ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from client ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r21);

        return 0;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removed cell broadcast subscription for MID range ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from client ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r12);

        $r14 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager mCellBroadcastRangeManager>;

        $z1 = virtualinvoke $r14.<com.android.internal.telephony.IccSmsInterfaceManager$CellBroadcastRangeManager: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean setCellBroadcastActivation(boolean)>($z2);

        return 1;
    }

    public synchronized boolean enableCdmaBroadcastRange(int, int)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        int i0, i1, $i2;
        android.content.Context r1;
        java.lang.String r2, $r12, $r21;
        com.android.internal.telephony.PhoneBase $r3;
        android.content.pm.PackageManager $r4;
        com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager $r5, $r14;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r22;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>("enableCdmaBroadcastRange");

        $r3 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        r1 = virtualinvoke $r3.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        virtualinvoke r1.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.RECEIVE_SMS", "Enabling cdma broadcast SMS");

        $r4 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r2 = virtualinvoke $r4.<android.content.pm.PackageManager: java.lang.String getNameForUid(int)>($i2);

        $r5 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager mCdmaBroadcastRangeManager>;

        $z0 = virtualinvoke $r5.<com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager: boolean enableRange(int,int,java.lang.String)>(i0, i1, r2);

        if $z0 != 0 goto label1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to add cdma broadcast subscription for MID range ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from client ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r21);

        return 0;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added cdma broadcast subscription for MID range ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from client ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r12);

        $r14 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager mCdmaBroadcastRangeManager>;

        $z1 = virtualinvoke $r14.<com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean setCdmaBroadcastActivation(boolean)>($z2);

        return 1;
    }

    public synchronized boolean disableCdmaBroadcastRange(int, int)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        int i0, i1, $i2;
        android.content.Context r1;
        java.lang.String r2, $r12, $r21;
        com.android.internal.telephony.PhoneBase $r3;
        android.content.pm.PackageManager $r4;
        com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager $r5, $r14;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r22;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>("disableCdmaBroadcastRange");

        $r3 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        r1 = virtualinvoke $r3.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        virtualinvoke r1.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.RECEIVE_SMS", "Disabling cell broadcast SMS");

        $r4 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r2 = virtualinvoke $r4.<android.content.pm.PackageManager: java.lang.String getNameForUid(int)>($i2);

        $r5 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager mCdmaBroadcastRangeManager>;

        $z0 = virtualinvoke $r5.<com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager: boolean disableRange(int,int,java.lang.String)>(i0, i1, r2);

        if $z0 != 0 goto label1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to remove cdma broadcast subscription for MID range ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from client ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r21);

        return 0;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removed cdma broadcast subscription for MID range ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from client ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r12);

        $r14 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager mCdmaBroadcastRangeManager>;

        $z1 = virtualinvoke $r14.<com.android.internal.telephony.IccSmsInterfaceManager$CdmaBroadcastRangeManager: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean setCdmaBroadcastActivation(boolean)>($z2);

        return 1;
    }

    private boolean setCellBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[])
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[] r1;
        java.lang.Object r2, $r11, $r14;
        android.os.Message r3;
        java.lang.Throwable r5, $r16;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        int $i0;
        java.lang.String $r10;
        android.os.Handler $r12;
        com.android.internal.telephony.PhoneBase $r13;
        com.android.internal.telephony.CommandsInterface $r15;
        boolean $z0;
        java.lang.InterruptedException $r17;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[];

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling setGsmBroadcastConfig with ");

        $i0 = lengthof r1;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" configurations");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r10);

        $r11 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        r2 = $r11;

        entermonitor $r11;

     label1:
        $r12 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.os.Handler mHandler>;

        r3 = virtualinvoke $r12.<android.os.Handler: android.os.Message obtainMessage(int)>(4);

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean mSuccess> = 0;

        $r13 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r15 = $r13.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r15.<com.android.internal.telephony.CommandsInterface: void setGsmBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[],android.os.Message)>(r1, r3);

     label2:
        $r14 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        virtualinvoke $r14.<java.lang.Object: void wait()>();

     label3:
        goto label5;

     label4:
        $r17 := @caughtexception;

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>("interrupted while trying to set cell broadcast config");

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r16 := @caughtexception;

        r5 = $r16;

        exitmonitor r2;

     label8:
        throw r5;

     label9:
        $z0 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean mSuccess>;

        return $z0;

        catch java.lang.InterruptedException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private boolean setCellBroadcastActivation(boolean)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        boolean z0, $z1;
        java.lang.Object r1, $r10, $r14;
        android.os.Message r2;
        java.lang.Throwable r4, $r16;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;
        android.os.Handler $r11;
        com.android.internal.telephony.PhoneBase $r12;
        com.android.internal.telephony.CommandsInterface $r13;
        java.lang.InterruptedException $r15;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        z0 := @parameter0: boolean;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling setCellBroadcastActivation(");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r9);

        $r10 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        r1 = $r10;

        entermonitor $r10;

     label1:
        $r11 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.os.Handler mHandler>;

        r2 = virtualinvoke $r11.<android.os.Handler: android.os.Message obtainMessage(int)>(3);

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean mSuccess> = 0;

        $r12 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r13 = $r12.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r13.<com.android.internal.telephony.CommandsInterface: void setGsmBroadcastActivation(boolean,android.os.Message)>(z0, r2);

     label2:
        $r14 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        virtualinvoke $r14.<java.lang.Object: void wait()>();

     label3:
        goto label5;

     label4:
        $r15 := @caughtexception;

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>("interrupted while trying to set cell broadcast activation");

     label5:
        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r16 := @caughtexception;

        r4 = $r16;

        exitmonitor r1;

     label8:
        throw r4;

     label9:
        $z1 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean mSuccess>;

        return $z1;

        catch java.lang.InterruptedException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private boolean setCdmaBroadcastConfig(com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[])
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[] r1;
        java.lang.Object r2, $r11, $r14;
        android.os.Message r3;
        java.lang.Throwable r5, $r16;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        int $i0;
        java.lang.String $r10;
        android.os.Handler $r12;
        com.android.internal.telephony.PhoneBase $r13;
        com.android.internal.telephony.CommandsInterface $r15;
        boolean $z0;
        java.lang.InterruptedException $r17;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[];

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling setCdmaBroadcastConfig with ");

        $i0 = lengthof r1;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" configurations");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r10);

        $r11 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        r2 = $r11;

        entermonitor $r11;

     label1:
        $r12 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.os.Handler mHandler>;

        r3 = virtualinvoke $r12.<android.os.Handler: android.os.Message obtainMessage(int)>(4);

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean mSuccess> = 0;

        $r13 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r15 = $r13.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r15.<com.android.internal.telephony.CommandsInterface: void setCdmaBroadcastConfig(com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[],android.os.Message)>(r1, r3);

     label2:
        $r14 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        virtualinvoke $r14.<java.lang.Object: void wait()>();

     label3:
        goto label5;

     label4:
        $r17 := @caughtexception;

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>("interrupted while trying to set cdma broadcast config");

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r16 := @caughtexception;

        r5 = $r16;

        exitmonitor r2;

     label8:
        throw r5;

     label9:
        $z0 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean mSuccess>;

        return $z0;

        catch java.lang.InterruptedException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private boolean setCdmaBroadcastActivation(boolean)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        boolean z0, $z1;
        java.lang.Object r1, $r10, $r14;
        android.os.Message r2;
        java.lang.Throwable r4, $r16;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;
        android.os.Handler $r11;
        com.android.internal.telephony.PhoneBase $r12;
        com.android.internal.telephony.CommandsInterface $r13;
        java.lang.InterruptedException $r15;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        z0 := @parameter0: boolean;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling setCdmaBroadcastActivation(");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r9);

        $r10 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        r1 = $r10;

        entermonitor $r10;

     label1:
        $r11 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.os.Handler mHandler>;

        r2 = virtualinvoke $r11.<android.os.Handler: android.os.Message obtainMessage(int)>(3);

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean mSuccess> = 0;

        $r12 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r13 = $r12.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r13.<com.android.internal.telephony.CommandsInterface: void setCdmaBroadcastActivation(boolean,android.os.Message)>(z0, r2);

     label2:
        $r14 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.Object mLock>;

        virtualinvoke $r14.<java.lang.Object: void wait()>();

     label3:
        goto label5;

     label4:
        $r15 := @caughtexception;

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>("interrupted while trying to set cdma broadcast activation");

     label5:
        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r16 := @caughtexception;

        r4 = $r16;

        exitmonitor r1;

     label8:
        throw r4;

     label9:
        $z1 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean mSuccess>;

        return $z1;

        catch java.lang.InterruptedException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    protected void log(java.lang.String)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[IccSmsInterfaceManager] ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("IccSmsInterfaceManager", $r5);

        return;
    }

    public boolean isImsSmsSupported()
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        com.android.internal.telephony.SMSDispatcher $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        $r1 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.SMSDispatcher mDispatcher>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.SMSDispatcher: boolean isIms()>();

        return $z0;
    }

    public java.lang.String getImsSmsFormat()
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        com.android.internal.telephony.SMSDispatcher $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        $r1 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.SMSDispatcher mDispatcher>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.SMSDispatcher: java.lang.String getImsSmsFormat()>();

        return $r2;
    }

    public void sendStoredText(java.lang.String, android.net.Uri, java.lang.String, android.app.PendingIntent, android.app.PendingIntent)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.lang.String r1, r3, $r13, $r14, $r15, $r17, $r27;
        android.net.Uri r2;
        android.app.PendingIntent r4, r5;
        android.content.ContentResolver r6;
        java.lang.String[] r7;
        com.android.internal.telephony.PhoneBase $r8, $r11;
        android.content.Context $r9, $r12;
        boolean $z0, $z1;
        android.app.AppOpsManager $r10;
        int $i0, $i1;
        com.android.internal.telephony.SMSDispatcher $r16;
        java.lang.StringBuilder $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.app.PendingIntent;

        r5 := @parameter4: android.app.PendingIntent;

        $r8 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r9 = virtualinvoke $r8.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        virtualinvoke $r9.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SEND_SMS", "Sending SMS message");

        $z0 = staticinvoke <android.telephony.Rlog: boolean isLoggable(java.lang.String,int)>("SMS", 2);

        if $z0 == 0 goto label1;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendStoredText: scAddr=");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" messageUri=");

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sentIntent=");

        $r22 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" deliveryIntent=");

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void log(java.lang.String)>($r27);

     label1:
        $r10 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.app.AppOpsManager mAppOps>;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = virtualinvoke $r10.<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>(20, $i0, r1);

        if $i1 == 0 goto label2;

        return;

     label2:
        $r11 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r12 = virtualinvoke $r11.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        r6 = virtualinvoke $r12.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $z1 = specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean isFailedOrDraft(android.content.ContentResolver,android.net.Uri)>(r6, r2);

        if $z1 != 0 goto label3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("IccSmsInterfaceManager", "[IccSmsInterfaceManager]sendStoredText: not FAILED or DRAFT message");

        specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void returnUnspecifiedFailure(android.app.PendingIntent)>(r4);

        return;

     label3:
        r7 = specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.String[] loadTextAndAddress(android.content.ContentResolver,android.net.Uri)>(r6, r2);

        if r7 != null goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("IccSmsInterfaceManager", "[IccSmsInterfaceManager]sendStoredText: can not load text");

        specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void returnUnspecifiedFailure(android.app.PendingIntent)>(r4);

        return;

     label4:
        $r13 = r7[1];

        $r15 = specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.String filterDestAddress(java.lang.String)>($r13);

        r7[1] = $r15;

        $r16 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.SMSDispatcher mDispatcher>;

        $r17 = r7[1];

        $r14 = r7[0];

        virtualinvoke $r16.<com.android.internal.telephony.SMSDispatcher: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,android.net.Uri,java.lang.String)>($r17, r3, $r14, r4, r5, r2, r1);

        return;
    }

    public void sendStoredMultipartText(java.lang.String, android.net.Uri, java.lang.String, java.util.List, java.util.List)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.lang.String r1, r3, r9, $r17, $r19, $r21, $r22, $r30, $r31, $r35, $r40, r44;
        android.net.Uri r2;
        java.util.List r4, r5;
        android.content.ContentResolver r6;
        java.lang.String[] r7;
        java.util.ArrayList r8, $r20, $r23;
        int i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        android.app.PendingIntent r10, r11;
        com.android.internal.telephony.PhoneBase $r12, $r15;
        android.content.Context $r13, $r16;
        android.app.AppOpsManager $r14;
        boolean $z0, $z1, $z2;
        android.telephony.SmsManager $r18;
        com.android.internal.telephony.SMSDispatcher $r24, $r34;
        java.lang.StringBuilder $r25, $r26, $r28, $r29, $r32, $r36, $r38, $r39, $r41, $r42, $r43;
        java.lang.Object $r27, $r33, $r37;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.List;

        r5 := @parameter4: java.util.List;

        $r12 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r13 = virtualinvoke $r12.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        virtualinvoke $r13.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.SEND_SMS", "Sending SMS message");

        $r14 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.app.AppOpsManager mAppOps>;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i2 = virtualinvoke $r14.<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>(20, $i1, r1);

        if $i2 == 0 goto label01;

        return;

     label01:
        $r15 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        $r16 = virtualinvoke $r15.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        r6 = virtualinvoke $r16.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $z0 = specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean isFailedOrDraft(android.content.ContentResolver,android.net.Uri)>(r6, r2);

        if $z0 != 0 goto label02;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("IccSmsInterfaceManager", "[IccSmsInterfaceManager]sendStoredMultipartText: not FAILED or DRAFT message");

        specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void returnUnspecifiedFailure(java.util.List)>(r4);

        return;

     label02:
        r7 = specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.String[] loadTextAndAddress(android.content.ContentResolver,android.net.Uri)>(r6, r2);

        if r7 != null goto label03;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("IccSmsInterfaceManager", "[IccSmsInterfaceManager]sendStoredMultipartText: can not load text");

        specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void returnUnspecifiedFailure(java.util.List)>(r4);

        return;

     label03:
        $r18 = staticinvoke <android.telephony.SmsManager: android.telephony.SmsManager getDefault()>();

        $r17 = r7[0];

        r8 = virtualinvoke $r18.<android.telephony.SmsManager: java.util.ArrayList divideMessage(java.lang.String)>($r17);

        if r8 == null goto label04;

        $i5 = virtualinvoke r8.<java.util.ArrayList: int size()>();

        if $i5 >= 1 goto label05;

     label04:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("IccSmsInterfaceManager", "[IccSmsInterfaceManager]sendStoredMultipartText: can not divide text");

        specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void returnUnspecifiedFailure(java.util.List)>(r4);

        return;

     label05:
        $i4 = virtualinvoke r8.<java.util.ArrayList: int size()>();

        if $i4 <= 1 goto label12;

        $i7 = virtualinvoke r8.<java.util.ArrayList: int size()>();

        if $i7 >= 10 goto label12;

        $z1 = staticinvoke <android.telephony.SmsMessage: boolean hasEmsSupport()>();

        if $z1 != 0 goto label12;

        i0 = 0;

     label06:
        $i6 = virtualinvoke r8.<java.util.ArrayList: int size()>();

        if i0 >= $i6 goto label11;

        $r27 = virtualinvoke r8.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r9 = (java.lang.String) $r27;

        $z2 = staticinvoke <android.telephony.SmsMessage: boolean shouldAppendPageNumberAsPrefix()>();

        if $z2 == 0 goto label07;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $i11 = i0 + 1;

        $r40 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i11);

        $r39 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $i13 = virtualinvoke r8.<java.util.ArrayList: int size()>();

        $r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label08;

     label07:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $i8 = i0 + 1;

        $r30 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i8);

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $i9 = virtualinvoke r8.<java.util.ArrayList: int size()>();

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        r44 = virtualinvoke r9.<java.lang.String: java.lang.String concat(java.lang.String)>($r31);

     label08:
        r10 = null;

        if r4 == null goto label09;

        $i12 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i12 <= i0 goto label09;

        $r37 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i0);

        r10 = (android.app.PendingIntent) $r37;

     label09:
        r11 = null;

        if r5 == null goto label10;

        $i10 = interfaceinvoke r5.<java.util.List: int size()>();

        if $i10 <= i0 goto label10;

        $r33 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i0);

        r11 = (android.app.PendingIntent) $r33;

     label10:
        $r34 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.SMSDispatcher mDispatcher>;

        $r35 = r7[1];

        virtualinvoke $r34.<com.android.internal.telephony.SMSDispatcher: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,android.net.Uri,java.lang.String)>($r35, r3, r44, r10, r11, r2, r1);

        i0 = i0 + 1;

        goto label06;

     label11:
        return;

     label12:
        $r19 = r7[1];

        $r22 = specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.lang.String filterDestAddress(java.lang.String)>($r19);

        r7[1] = $r22;

        $r24 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.SMSDispatcher mDispatcher>;

        $r21 = r7[1];

        $r20 = (java.util.ArrayList) r4;

        $r23 = (java.util.ArrayList) r5;

        virtualinvoke $r24.<com.android.internal.telephony.SMSDispatcher: void sendMultipartText(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,android.net.Uri,java.lang.String)>($r21, r3, r8, $r20, $r23, r2, r1);

        return;
    }

    private boolean isFailedOrDraft(android.content.ContentResolver, android.net.Uri)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        android.content.ContentResolver r1;
        android.net.Uri r2;
        long l0;
        android.database.Cursor r3;
        int i1;
        boolean z0, $z1, $z2;
        java.lang.Throwable r4, $r7;
        java.lang.String[] $r5;
        android.database.sqlite.SQLiteException $r6, r8;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: android.content.ContentResolver;

        r2 := @parameter1: android.net.Uri;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        r3 = null;

     label01:
        $r5 = newarray (java.lang.String)[1];

        $r5[0] = "type";

        r3 = virtualinvoke r1.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r2, $r5, null, null, null);

        if r3 == null goto label07;

        $z1 = interfaceinvoke r3.<android.database.Cursor: boolean moveToFirst()>();

        if $z1 == 0 goto label07;

        i1 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(0);

        if i1 == 3 goto label02;

        if i1 != 5 goto label03;

     label02:
        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        z0 = $z2;

     label05:
        if r3 == null goto label06;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label06:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return z0;

     label07:
        if r3 == null goto label08;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label15;

     label09:
        $r6 := @caughtexception;

        r8 = $r6;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IccSmsInterfaceManager", "[IccSmsInterfaceManager]isFailedOrDraft: query message type failed", r8);

     label10:
        if r3 == null goto label11;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label15;

     label12:
        $r7 := @caughtexception;

        r4 = $r7;

     label13:
        if r3 == null goto label14;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label14:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r4;

     label15:
        return 0;

        catch android.database.sqlite.SQLiteException from label01 to label05 with label09;
        catch java.lang.Throwable from label01 to label05 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private java.lang.String[] loadTextAndAddress(android.content.ContentResolver, android.net.Uri)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        android.content.ContentResolver r1;
        android.net.Uri r2;
        long l0;
        android.database.Cursor r3;
        java.lang.String[] r4, $r6, $r7;
        java.lang.Throwable r5, $r11;
        boolean $z0;
        java.lang.String $r8, $r10;
        android.database.sqlite.SQLiteException $r9, r12;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: android.content.ContentResolver;

        r2 := @parameter1: android.net.Uri;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        r3 = null;

     label01:
        $r6 = newarray (java.lang.String)[2];

        $r6[0] = "body";

        $r6[1] = "address";

        r3 = virtualinvoke r1.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r2, $r6, null, null, null);

        if r3 == null goto label04;

        $z0 = interfaceinvoke r3.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label04;

        $r7 = newarray (java.lang.String)[2];

        $r8 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r7[0] = $r8;

        $r10 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(1);

        $r7[1] = $r10;

        r4 = $r7;

     label02:
        if r3 == null goto label03;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label03:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return r4;

     label04:
        if r3 == null goto label05;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label12;

     label06:
        $r9 := @caughtexception;

        r12 = $r9;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IccSmsInterfaceManager", "[IccSmsInterfaceManager]loadText: query message text failed", r12);

     label07:
        if r3 == null goto label08;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label08:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        goto label12;

     label09:
        $r11 := @caughtexception;

        r5 = $r11;

     label10:
        if r3 == null goto label11;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r5;

     label12:
        return null;

        catch android.database.sqlite.SQLiteException from label01 to label02 with label06;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private void returnUnspecifiedFailure(android.app.PendingIntent)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        android.app.PendingIntent r1;
        android.app.PendingIntent$CanceledException $r3;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: android.app.PendingIntent;

        if r1 == null goto label4;

     label1:
        virtualinvoke r1.<android.app.PendingIntent: void send(int)>(1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.app.PendingIntent$CanceledException from label1 to label2 with label3;
    }

    private void returnUnspecifiedFailure(java.util.List)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.util.List r1;
        java.util.Iterator r2;
        android.app.PendingIntent r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.util.List;

        if r1 != null goto label1;

        return;

     label1:
        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.app.PendingIntent) $r4;

        specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: void returnUnspecifiedFailure(android.app.PendingIntent)>(r3);

        goto label2;

     label3:
        return;
    }

    private void enforceCarrierPrivilege()
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        com.android.internal.telephony.uicc.UiccController r1;
        java.lang.SecurityException $r2, $r7;
        com.android.internal.telephony.uicc.UiccCard $r3, $r4;
        android.content.Context $r5;
        android.content.pm.PackageManager $r6;
        int $i0;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 = staticinvoke <com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccController getInstance()>();

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCard getUiccCard()>();

        if $r3 != null goto label2;

     label1:
        $r2 = new java.lang.SecurityException;

        specialinvoke $r2.<java.lang.SecurityException: void <init>(java.lang.String)>("No Carrier Privilege: No UICC");

        throw $r2;

     label2:
        $r4 = virtualinvoke r1.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCard getUiccCard()>();

        $r5 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i0 = virtualinvoke $r4.<com.android.internal.telephony.uicc.UiccCard: int getCarrierPrivilegeStatusForCurrentTransaction(android.content.pm.PackageManager)>($r6);

        if $i0 == 1 goto label3;

        $r7 = new java.lang.SecurityException;

        specialinvoke $r7.<java.lang.SecurityException: void <init>(java.lang.String)>("No Carrier Privilege.");

        throw $r7;

     label3:
        return;
    }

    private java.lang.String filterDestAddress(java.lang.String)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.lang.String r1, $r3, r4;
        com.android.internal.telephony.PhoneBase $r2;

        r0 := @this: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: com.android.internal.telephony.PhoneBase mPhone>;

        r4 = staticinvoke <com.android.internal.telephony.SmsNumberUtils: java.lang.String filterDestAddr(com.android.internal.telephony.PhoneBase,java.lang.String)>($r2, r1);

        if r4 == null goto label1;

        $r3 = r4;

        goto label2;

     label1:
        $r3 = r1;

     label2:
        return $r3;
    }

    static java.util.List access$002(com.android.internal.telephony.IccSmsInterfaceManager, java.util.List)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.util.List r1;

        r0 := @parameter0: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter1: java.util.List;

        r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.util.List mSms> = r1;

        return r1;
    }

    static java.util.List access$000(com.android.internal.telephony.IccSmsInterfaceManager)
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        java.util.List $r1;

        r0 := @parameter0: com.android.internal.telephony.IccSmsInterfaceManager;

        $r1 = r0.<com.android.internal.telephony.IccSmsInterfaceManager: java.util.List mSms>;

        return $r1;
    }

    static boolean access$100(com.android.internal.telephony.IccSmsInterfaceManager, com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[])
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[] r1;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter1: com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[];

        $z0 = specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean setCellBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[])>(r1);

        return $z0;
    }

    static boolean access$200(com.android.internal.telephony.IccSmsInterfaceManager, com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[])
    {
        com.android.internal.telephony.IccSmsInterfaceManager r0;
        com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[] r1;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.IccSmsInterfaceManager;

        r1 := @parameter1: com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[];

        $z0 = specialinvoke r0.<com.android.internal.telephony.IccSmsInterfaceManager: boolean setCdmaBroadcastConfig(com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[])>(r1);

        return $z0;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.IccSmsInterfaceManager: int SMS_CB_CODE_SCHEME_MAX> = 255;

        <com.android.internal.telephony.IccSmsInterfaceManager: int SMS_CB_CODE_SCHEME_MIN> = 0;

        <com.android.internal.telephony.IccSmsInterfaceManager: int EVENT_SET_BROADCAST_CONFIG_DONE> = 4;

        <com.android.internal.telephony.IccSmsInterfaceManager: int EVENT_SET_BROADCAST_ACTIVATION_DONE> = 3;

        <com.android.internal.telephony.IccSmsInterfaceManager: int EVENT_UPDATE_DONE> = 2;

        <com.android.internal.telephony.IccSmsInterfaceManager: int EVENT_LOAD_DONE> = 1;

        <com.android.internal.telephony.IccSmsInterfaceManager: boolean DBG> = 1;

        <com.android.internal.telephony.IccSmsInterfaceManager: java.lang.String LOG_TAG> = "IccSmsInterfaceManager";

        return;
    }
}
