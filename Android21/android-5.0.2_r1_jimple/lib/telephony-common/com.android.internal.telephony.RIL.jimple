public final class com.android.internal.telephony.RIL extends com.android.internal.telephony.BaseCommands implements com.android.internal.telephony.CommandsInterface
{
    static final java.lang.String RILJ_LOG_TAG;
    static final boolean RILJ_LOGD;
    static final boolean RILJ_LOGV;
    private static final int DEFAULT_WAKE_LOCK_TIMEOUT;
    android.net.LocalSocket mSocket;
    android.os.HandlerThread mSenderThread;
    com.android.internal.telephony.RIL$RILSender mSender;
    java.lang.Thread mReceiverThread;
    com.android.internal.telephony.RIL$RILReceiver mReceiver;
    android.view.Display mDefaultDisplay;
    int mDefaultDisplayState;
    android.os.PowerManager$WakeLock mWakeLock;
    final int mWakeLockTimeout;
    int mWakeLockCount;
    android.util.SparseArray mRequestList;
    java.lang.Object mLastNITZTimeInfo;
    java.util.concurrent.atomic.AtomicBoolean mTestingEmergencyCall;
    private java.lang.Integer mInstanceId;
    static final int EVENT_SEND;
    static final int EVENT_WAKE_LOCK_TIMEOUT;
    static final int RIL_MAX_COMMAND_BYTES;
    static final int RESPONSE_SOLICITED;
    static final int RESPONSE_UNSOLICITED;
    static final java.lang.String[] SOCKET_NAME_RIL;
    static final int SOCKET_OPEN_RETRY_MILLIS;
    private static final int CDMA_BSI_NO_OF_INTS_STRUCT;
    private static final int CDMA_BROADCAST_SMS_NO_OF_SERVICE_CATEGORIES;
    private final android.hardware.display.DisplayManager$DisplayListener mDisplayListener;

    private static int readRilMessage(java.io.InputStream, byte[]) throws java.io.IOException
    {
        java.io.InputStream r0;
        byte[] r1;
        int i0, i1, i2, i3, $i8, $i9, $i12, $i14, $i15, i19, i20, i21;
        byte $b4, $b6, $b10, $b13;
        short $s5, $s7, $s11, $s16;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r7;
        java.lang.String $r6;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: byte[];

        i1 = 0;

        i2 = 4;

     label1:
        i0 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r1, i1, i2);

        if i0 >= 0 goto label2;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("RILJ", "Hit EOS reading message length");

        return -1;

     label2:
        i1 = i1 + i0;

        i2 = i2 - i0;

        if i2 > 0 goto label1;

        $b4 = r1[0];

        $s5 = $b4 & 255;

        $i9 = $s5 << 24;

        $b6 = r1[1];

        $s7 = $b6 & 255;

        $i8 = $s7 << 16;

        $i14 = $i9 | $i8;

        $b10 = r1[2];

        $s11 = $b10 & 255;

        $i12 = $s11 << 8;

        $i15 = $i14 | $i12;

        $b13 = r1[3];

        $s16 = $b13 & 255;

        i3 = $i15 | $s16;

        i19 = 0;

        i20 = i3;

     label3:
        i21 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r1, i19, i20);

        if i21 >= 0 goto label4;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hit EOS reading message.  messageLength=");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" remaining=");

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i20);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("RILJ", $r6);

        return -1;

     label4:
        i19 = i19 + i21;

        i20 = i20 - i21;

        if i20 > 0 goto label3;

        return i3;
    }

    public void <init>(android.content.Context, int, int)
    {
        com.android.internal.telephony.RIL r0;
        android.content.Context r1;
        int i0, i1;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.internal.telephony.RIL: void <init>(android.content.Context,int,int,java.lang.Integer)>(r1, i0, i1, null);

        return;
    }

    public void <init>(android.content.Context, int, int, java.lang.Integer)
    {
        com.android.internal.telephony.RIL r0;
        android.content.Context r1;
        int i0, i1, $i2;
        java.lang.Integer r2;
        android.os.PowerManager r3;
        android.os.Looper r4;
        android.net.ConnectivityManager r5;
        android.hardware.display.DisplayManager r6;
        android.util.SparseArray $r7;
        java.util.concurrent.atomic.AtomicBoolean $r8;
        com.android.internal.telephony.RIL$1 $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r15;
        java.lang.Object $r16, $r24, $r27;
        java.lang.String $r17;
        android.os.PowerManager$WakeLock $r18, $r19;
        android.os.HandlerThread $r20, $r21, $r22;
        com.android.internal.telephony.RIL$RILSender $r23;
        boolean $z0;
        java.lang.Thread $r25, $r30;
        com.android.internal.telephony.RIL$RILReceiver $r26, $r29;
        android.view.Display $r28;
        android.hardware.display.DisplayManager$DisplayListener $r31;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.Integer;

        specialinvoke r0.<com.android.internal.telephony.BaseCommands: void <init>(android.content.Context)>(r1);

        r0.<com.android.internal.telephony.RIL: int mDefaultDisplayState> = 0;

        $r7 = new android.util.SparseArray;

        specialinvoke $r7.<android.util.SparseArray: void <init>()>();

        r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList> = $r7;

        $r8 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r8.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.android.internal.telephony.RIL: java.util.concurrent.atomic.AtomicBoolean mTestingEmergencyCall> = $r8;

        $r9 = new com.android.internal.telephony.RIL$1;

        specialinvoke $r9.<com.android.internal.telephony.RIL$1: void <init>(com.android.internal.telephony.RIL)>(r0);

        r0.<com.android.internal.telephony.RIL: android.hardware.display.DisplayManager$DisplayListener mDisplayListener> = $r9;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RIL(context, preferredNetworkType=");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cdmaSubscription=");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r17);

        r0.<com.android.internal.telephony.RIL: android.content.Context mContext> = r1;

        r0.<com.android.internal.telephony.RIL: int mCdmaSubscription> = i1;

        r0.<com.android.internal.telephony.RIL: int mPreferredNetworkType> = i0;

        r0.<com.android.internal.telephony.RIL: int mPhoneType> = 0;

        r0.<com.android.internal.telephony.RIL: java.lang.Integer mInstanceId> = r2;

        $r16 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        r3 = (android.os.PowerManager) $r16;

        $r19 = virtualinvoke r3.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "RILJ");

        r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock> = $r19;

        $r18 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r18.<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>(0);

        $i2 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("ro.ril.wake_lock_timeout", 60000);

        r0.<com.android.internal.telephony.RIL: int mWakeLockTimeout> = $i2;

        r0.<com.android.internal.telephony.RIL: int mWakeLockCount> = 0;

        $r20 = new android.os.HandlerThread;

        specialinvoke $r20.<android.os.HandlerThread: void <init>(java.lang.String)>("RILSender");

        r0.<com.android.internal.telephony.RIL: android.os.HandlerThread mSenderThread> = $r20;

        $r22 = r0.<com.android.internal.telephony.RIL: android.os.HandlerThread mSenderThread>;

        virtualinvoke $r22.<android.os.HandlerThread: void start()>();

        $r21 = r0.<com.android.internal.telephony.RIL: android.os.HandlerThread mSenderThread>;

        r4 = virtualinvoke $r21.<android.os.HandlerThread: android.os.Looper getLooper()>();

        $r23 = new com.android.internal.telephony.RIL$RILSender;

        specialinvoke $r23.<com.android.internal.telephony.RIL$RILSender: void <init>(com.android.internal.telephony.RIL,android.os.Looper)>(r0, r4);

        r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RILSender mSender> = $r23;

        $r24 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r5 = (android.net.ConnectivityManager) $r24;

        $z0 = virtualinvoke r5.<android.net.ConnectivityManager: boolean isNetworkSupported(int)>(0);

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("Not starting RILReceiver: wifi-only");

        goto label2;

     label1:
        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("Starting RILReceiver");

        $r26 = new com.android.internal.telephony.RIL$RILReceiver;

        specialinvoke $r26.<com.android.internal.telephony.RIL$RILReceiver: void <init>(com.android.internal.telephony.RIL)>(r0);

        r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RILReceiver mReceiver> = $r26;

        $r25 = new java.lang.Thread;

        $r29 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RILReceiver mReceiver>;

        specialinvoke $r25.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r29, "RILReceiver");

        r0.<com.android.internal.telephony.RIL: java.lang.Thread mReceiverThread> = $r25;

        $r30 = r0.<com.android.internal.telephony.RIL: java.lang.Thread mReceiverThread>;

        virtualinvoke $r30.<java.lang.Thread: void start()>();

        $r27 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("display");

        r6 = (android.hardware.display.DisplayManager) $r27;

        $r28 = virtualinvoke r6.<android.hardware.display.DisplayManager: android.view.Display getDisplay(int)>(0);

        r0.<com.android.internal.telephony.RIL: android.view.Display mDefaultDisplay> = $r28;

        $r31 = r0.<com.android.internal.telephony.RIL: android.hardware.display.DisplayManager$DisplayListener mDisplayListener>;

        virtualinvoke r6.<android.hardware.display.DisplayManager: void registerDisplayListener(android.hardware.display.DisplayManager$DisplayListener,android.os.Handler)>($r31, null);

     label2:
        staticinvoke <com.android.internal.telephony.TelephonyDevController: com.android.internal.telephony.TelephonyDevController getInstance()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void registerRIL(com.android.internal.telephony.CommandsInterface)>(r0);

        return;
    }

    public void getVoiceRadioTechnology(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(108, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getImsRegistrationState(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(112, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setOnNITZTime(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2, $r3, $r5;
        android.os.AsyncResult $r4;
        android.os.Registrant $r6;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        specialinvoke r0.<com.android.internal.telephony.BaseCommands: void setOnNITZTime(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        $r3 = r0.<com.android.internal.telephony.RIL: java.lang.Object mLastNITZTimeInfo>;

        if $r3 == null goto label1;

        $r6 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mNITZTimeRegistrant>;

        $r4 = new android.os.AsyncResult;

        $r5 = r0.<com.android.internal.telephony.RIL: java.lang.Object mLastNITZTimeInfo>;

        specialinvoke $r4.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r5, null);

        virtualinvoke $r6.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r4);

        r0.<com.android.internal.telephony.RIL: java.lang.Object mLastNITZTimeInfo> = null;

     label1:
        return;
    }

    public void getIccCardStatus(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(1, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setUiccSubscription(int, int, int, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, i2, i3, $i4;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17;
        java.lang.String $r4, $r7, $r16;
        android.os.Parcel $r18, $r19, $r20, $r21;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(122, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i4 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i4);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" slot: ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" appIndex: ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" subId: ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" subStatus: ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r16);

        $r19 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r19.<android.os.Parcel: void writeInt(int)>(i0);

        $r18 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r18.<android.os.Parcel: void writeInt(int)>(i1);

        $r21 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r21.<android.os.Parcel: void writeInt(int)>(i2);

        $r20 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r20.<android.os.Parcel: void writeInt(int)>(i3);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setDataAllowed(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;
        android.os.Parcel $r10, $r11;
        byte $b1;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(123, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        $r10 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r10.<android.os.Parcel: void writeInt(int)>(1);

        $r11 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if z0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        virtualinvoke $r11.<android.os.Parcel: void writeInt(int)>($b1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void supplyIccPin(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1;
        android.os.Message r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void supplyIccPinForApp(java.lang.String,java.lang.String,android.os.Message)>(r1, null, r2);

        return;
    }

    public void supplyIccPinForApp(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, $r6, $r9, $r11;
        android.os.Message r3;
        com.android.internal.telephony.RILRequest r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10;
        int $i0;
        android.os.Parcel $r12, $r13, $r14;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        r4 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(2, r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r4.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r4.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        $r12 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r12.<android.os.Parcel: void writeInt(int)>(2);

        $r13 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r13.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r14 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r14.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r4);

        return;
    }

    public void supplyIccPuk(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2;
        android.os.Message r3;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void supplyIccPukForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>(r1, r2, null, r3);

        return;
    }

    public void supplyIccPukForApp(java.lang.String, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, r3, $r7, $r10, $r12;
        android.os.Message r4;
        com.android.internal.telephony.RILRequest r5;
        java.lang.StringBuilder $r6, $r8, $r9, $r11;
        int $i0;
        android.os.Parcel $r13, $r14, $r15, $r16;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Message;

        r5 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(3, r4);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r5.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r5.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

        $r13 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r13.<android.os.Parcel: void writeInt(int)>(3);

        $r15 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r15.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r14 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r14.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r16 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r16.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r5);

        return;
    }

    public void supplyIccPin2(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1;
        android.os.Message r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void supplyIccPin2ForApp(java.lang.String,java.lang.String,android.os.Message)>(r1, null, r2);

        return;
    }

    public void supplyIccPin2ForApp(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, $r6, $r9, $r11;
        android.os.Message r3;
        com.android.internal.telephony.RILRequest r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10;
        int $i0;
        android.os.Parcel $r12, $r13, $r14;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        r4 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(4, r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r4.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r4.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        $r12 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r12.<android.os.Parcel: void writeInt(int)>(2);

        $r13 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r13.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r14 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r14.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r4);

        return;
    }

    public void supplyIccPuk2(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2;
        android.os.Message r3;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void supplyIccPuk2ForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>(r1, r2, null, r3);

        return;
    }

    public void supplyIccPuk2ForApp(java.lang.String, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, r3, $r7, $r10, $r12;
        android.os.Message r4;
        com.android.internal.telephony.RILRequest r5;
        java.lang.StringBuilder $r6, $r8, $r9, $r11;
        int $i0;
        android.os.Parcel $r13, $r14, $r15, $r16;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Message;

        r5 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(5, r4);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r5.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r5.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

        $r13 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r13.<android.os.Parcel: void writeInt(int)>(3);

        $r15 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r15.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r14 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r14.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r16 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r16.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r5);

        return;
    }

    public void changeIccPin(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2;
        android.os.Message r3;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void changeIccPinForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>(r1, r2, null, r3);

        return;
    }

    public void changeIccPinForApp(java.lang.String, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, r3, $r7, $r10, $r12;
        android.os.Message r4;
        com.android.internal.telephony.RILRequest r5;
        java.lang.StringBuilder $r6, $r8, $r9, $r11;
        int $i0;
        android.os.Parcel $r13, $r14, $r15, $r16;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Message;

        r5 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(6, r4);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r5.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r5.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

        $r13 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r13.<android.os.Parcel: void writeInt(int)>(3);

        $r15 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r15.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r14 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r14.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r16 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r16.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r5);

        return;
    }

    public void changeIccPin2(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2;
        android.os.Message r3;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void changeIccPin2ForApp(java.lang.String,java.lang.String,java.lang.String,android.os.Message)>(r1, r2, null, r3);

        return;
    }

    public void changeIccPin2ForApp(java.lang.String, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, r3, $r7, $r10, $r12;
        android.os.Message r4;
        com.android.internal.telephony.RILRequest r5;
        java.lang.StringBuilder $r6, $r8, $r9, $r11;
        int $i0;
        android.os.Parcel $r13, $r14, $r15, $r16;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Message;

        r5 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(7, r4);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r5.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r5.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

        $r13 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r13.<android.os.Parcel: void writeInt(int)>(3);

        $r15 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r15.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r14 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r14.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r16 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r16.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r5);

        return;
    }

    public void changeBarringPassword(java.lang.String, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, r3, $r7, $r10, $r12;
        android.os.Message r4;
        com.android.internal.telephony.RILRequest r5;
        java.lang.StringBuilder $r6, $r8, $r9, $r11;
        int $i0;
        android.os.Parcel $r13, $r14, $r15, $r16;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Message;

        r5 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(44, r4);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r5.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r5.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

        $r13 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r13.<android.os.Parcel: void writeInt(int)>(3);

        $r15 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r15.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r14 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r14.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r16 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r16.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r5);

        return;
    }

    public void supplyNetworkDepersonalization(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r5, $r8, $r10;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r9;
        int $i0;
        android.os.Parcel $r11, $r12;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(8, r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r10);

        $r11 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r11.<android.os.Parcel: void writeInt(int)>(1);

        $r12 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r12.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void getCurrentCalls(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(9, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getPDPContextList(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void getDataCallList(android.os.Message)>(r1);

        return;
    }

    public void getDataCallList(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(57, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void dial(java.lang.String, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1;
        int i0;
        android.os.Message r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void dial(java.lang.String,int,com.android.internal.telephony.UUSInfo,android.os.Message)>(r1, i0, null, r2);

        return;
    }

    public void dial(java.lang.String, int, com.android.internal.telephony.UUSInfo, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r12, $r16, $r17;
        int i0, $i1, $i2, $i3;
        com.android.internal.telephony.UUSInfo r2;
        android.os.Message r3;
        com.android.internal.telephony.RILRequest r4;
        android.os.Parcel $r5, $r6, $r7, $r8, $r9, $r10, $r19;
        byte[] $r11;
        java.lang.StringBuilder $r13, $r14, $r15, $r18;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.internal.telephony.UUSInfo;

        r3 := @parameter3: android.os.Message;

        r4 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(10, r3);

        $r5 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r5.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r6 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r6.<android.os.Parcel: void writeInt(int)>(i0);

        if r2 != null goto label1;

        $r19 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r19.<android.os.Parcel: void writeInt(int)>(0);

        goto label2;

     label1:
        $r7 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r7.<android.os.Parcel: void writeInt(int)>(1);

        $r8 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i1 = virtualinvoke r2.<com.android.internal.telephony.UUSInfo: int getType()>();

        virtualinvoke $r8.<android.os.Parcel: void writeInt(int)>($i1);

        $r9 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i2 = virtualinvoke r2.<com.android.internal.telephony.UUSInfo: int getDcs()>();

        virtualinvoke $r9.<android.os.Parcel: void writeInt(int)>($i2);

        $r10 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r11 = virtualinvoke r2.<com.android.internal.telephony.UUSInfo: byte[] getUserData()>();

        virtualinvoke $r10.<android.os.Parcel: void writeByteArray(byte[])>($r11);

     label2:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r4.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i3 = r4.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r16 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i3);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r17);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r4);

        return;
    }

    public void getIMSI(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void getIMSIForApp(java.lang.String,android.os.Message)>(null, r1);

        return;
    }

    public void getIMSIForApp(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r7, $r10, $r14;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        android.os.Parcel $r4, $r5;
        java.lang.StringBuilder $r6, $r8, $r9, $r11, $r12, $r13;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(11, r2);

        $r4 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(1);

        $r5 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r5.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> getIMSI: ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" aid: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r14);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void getIMEI(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(38, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getIMEISV(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(39, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void hangupConnection(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r9, $r10, $r12, $r13, $r14;
        java.lang.String $r6, $r8, $r11, $r16;
        android.os.Parcel $r15, $r17;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hangupConnection: gsmIndex=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r6);

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(12, r1);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r11 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r16);

        $r15 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r15.<android.os.Parcel: void writeInt(int)>(1);

        $r17 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r17.<android.os.Parcel: void writeInt(int)>(i0);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void hangupWaitingOrBackground(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(13, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void hangupForegroundResumeBackground(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(14, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void switchWaitingOrHoldingAndActive(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(15, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void conference(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(16, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setPreferredVoicePrivacy(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;
        byte $b0;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(82, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>($b0);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getPreferredVoicePrivacy(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(83, r1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void separateConnection(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8, $r9, $r10;
        java.lang.String $r4, $r7, $r11;
        android.os.Parcel $r12, $r13;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(52, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        $r12 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r12.<android.os.Parcel: void writeInt(int)>(1);

        $r13 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r13.<android.os.Parcel: void writeInt(int)>(i0);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void acceptCall(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(40, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void rejectCall(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(17, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void explicitCallTransfer(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(72, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getLastCallFailCause(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(18, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getLastPdpFailCause(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void getLastDataCallFailCause(android.os.Message)>(r1);

        return;
    }

    public void getLastDataCallFailCause(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(56, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setMute(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8, $r9, $r10;
        java.lang.String $r4, $r7, $r11;
        int $i0;
        android.os.Parcel $r12, $r13;
        byte $b1;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(53, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        $r12 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r12.<android.os.Parcel: void writeInt(int)>(1);

        $r13 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if z0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        virtualinvoke $r13.<android.os.Parcel: void writeInt(int)>($b1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getMute(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(54, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getSignalStrength(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(19, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getVoiceRegistrationState(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(20, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getDataRegistrationState(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(21, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getOperator(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(22, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getHardwareConfig(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(124, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void sendDtmf(char, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        char c0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9, $r11;
        int $i1;
        android.os.Parcel $r10;

        r0 := @this: com.android.internal.telephony.RIL;

        c0 := @parameter0: char;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(24, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        $r10 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r11 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(c0);

        virtualinvoke $r10.<android.os.Parcel: void writeString(java.lang.String)>($r11);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void startDtmf(char, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        char c0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9, $r11;
        int $i1;
        android.os.Parcel $r10;

        r0 := @this: com.android.internal.telephony.RIL;

        c0 := @parameter0: char;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(49, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        $r10 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r11 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(c0);

        virtualinvoke $r10.<android.os.Parcel: void writeString(java.lang.String)>($r11);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void stopDtmf(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(50, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void sendBurstDtmf(java.lang.String, int, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r7, $r9, $r11, $r15, $r18;
        int i0, i1, $i2;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        android.os.Parcel $r4, $r5, $r6, $r8;
        java.lang.StringBuilder $r10, $r12, $r13, $r14, $r16, $r17;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(85, r2);

        $r4 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(3);

        $r5 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r5.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r6 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        virtualinvoke $r6.<android.os.Parcel: void writeString(java.lang.String)>($r7);

        $r8 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        virtualinvoke $r8.<android.os.Parcel: void writeString(java.lang.String)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i2 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r15 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r18);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    private void constructGsmSendSmsRilRequest(com.android.internal.telephony.RILRequest, java.lang.String, java.lang.String)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.RILRequest r1;
        java.lang.String r2, r3;
        android.os.Parcel $r4, $r5, $r6;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: com.android.internal.telephony.RILRequest;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(2);

        $r5 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r5.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r6 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r6.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        return;
    }

    public void sendSMS(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, $r6, $r9, $r11;
        android.os.Message r3;
        com.android.internal.telephony.RILRequest r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        r4 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(25, r3);

        specialinvoke r0.<com.android.internal.telephony.RIL: void constructGsmSendSmsRilRequest(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.String)>(r4, r1, r2);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r4.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r4.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r4);

        return;
    }

    public void sendSMSExpectMore(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, $r6, $r9, $r11;
        android.os.Message r3;
        com.android.internal.telephony.RILRequest r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        r4 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(26, r3);

        specialinvoke r0.<com.android.internal.telephony.RIL: void constructGsmSendSmsRilRequest(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.String)>(r4, r1, r2);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r4.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r4.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r4);

        return;
    }

    private void constructCdmaSendSmsRilRequest(com.android.internal.telephony.RILRequest, byte[])
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.RILRequest r1;
        byte[] r2;
        byte b0, b1, $b6, $b12, $b16, $b18, $b19, $b20, $b21;
        int i2, i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i17, i22, i23;
        java.io.ByteArrayInputStream r3, $r5;
        java.io.DataInputStream r4, $r6;
        android.os.Parcel $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;
        java.lang.StringBuilder $r22, $r23, $r26;
        java.io.IOException $r24, r27;
        java.lang.String $r25;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: com.android.internal.telephony.RILRequest;

        r2 := @parameter1: byte[];

        $r5 = new java.io.ByteArrayInputStream;

        specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[])>(r2);

        r3 = $r5;

        $r6 = new java.io.DataInputStream;

        specialinvoke $r6.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r3);

        r4 = $r6;

     label1:
        $r7 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i4 = virtualinvoke r4.<java.io.DataInputStream: int readInt()>();

        virtualinvoke $r7.<android.os.Parcel: void writeInt(int)>($i4);

        $r8 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i5 = virtualinvoke r4.<java.io.DataInputStream: int readInt()>();

        $b6 = (byte) $i5;

        virtualinvoke $r8.<android.os.Parcel: void writeByte(byte)>($b6);

        $r9 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i7 = virtualinvoke r4.<java.io.DataInputStream: int readInt()>();

        virtualinvoke $r9.<android.os.Parcel: void writeInt(int)>($i7);

        $r10 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i8 = virtualinvoke r4.<java.io.DataInputStream: int read()>();

        virtualinvoke $r10.<android.os.Parcel: void writeInt(int)>($i8);

        $r11 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i9 = virtualinvoke r4.<java.io.DataInputStream: int read()>();

        virtualinvoke $r11.<android.os.Parcel: void writeInt(int)>($i9);

        $r12 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i10 = virtualinvoke r4.<java.io.DataInputStream: int read()>();

        virtualinvoke $r12.<android.os.Parcel: void writeInt(int)>($i10);

        $r13 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i11 = virtualinvoke r4.<java.io.DataInputStream: int read()>();

        virtualinvoke $r13.<android.os.Parcel: void writeInt(int)>($i11);

        $i13 = virtualinvoke r4.<java.io.DataInputStream: int read()>();

        b0 = (byte) $i13;

        $r15 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $b12 = (byte) b0;

        virtualinvoke $r15.<android.os.Parcel: void writeByte(byte)>($b12);

        i3 = 0;

     label2:
        if i3 >= b0 goto label3;

        $r20 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $b21 = virtualinvoke r4.<java.io.DataInputStream: byte readByte()>();

        virtualinvoke $r20.<android.os.Parcel: void writeByte(byte)>($b21);

        i3 = i3 + 1;

        goto label2;

     label3:
        $r14 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i14 = virtualinvoke r4.<java.io.DataInputStream: int read()>();

        virtualinvoke $r14.<android.os.Parcel: void writeInt(int)>($i14);

        $r16 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i17 = virtualinvoke r4.<java.io.DataInputStream: int read()>();

        $b18 = (byte) $i17;

        virtualinvoke $r16.<android.os.Parcel: void writeByte(byte)>($b18);

        $i15 = virtualinvoke r4.<java.io.DataInputStream: int read()>();

        b1 = (byte) $i15;

        $r19 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $b16 = (byte) b1;

        virtualinvoke $r19.<android.os.Parcel: void writeByte(byte)>($b16);

        i22 = 0;

     label4:
        if i22 >= b1 goto label5;

        $r21 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $b19 = virtualinvoke r4.<java.io.DataInputStream: byte readByte()>();

        virtualinvoke $r21.<android.os.Parcel: void writeByte(byte)>($b19);

        i22 = i22 + 1;

        goto label4;

     label5:
        i2 = virtualinvoke r4.<java.io.DataInputStream: int read()>();

        $r17 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r17.<android.os.Parcel: void writeInt(int)>(i2);

        i23 = 0;

     label6:
        if i23 >= i2 goto label7;

        $r18 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $b20 = virtualinvoke r4.<java.io.DataInputStream: byte readByte()>();

        virtualinvoke $r18.<android.os.Parcel: void writeByte(byte)>($b20);

        i23 = i23 + 1;

        goto label6;

     label7:
        goto label9;

     label8:
        $r24 := @caughtexception;

        r27 = $r24;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendSmsCdma: conversion from input stream to object failed: ");

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r27);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r25);

     label9:
        return;

        catch java.io.IOException from label1 to label7 with label8;
    }

    public void sendCdmaSms(byte[], android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        byte[] r1;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r9;
        java.lang.String $r5, $r8, $r10;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: byte[];

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(87, r2);

        specialinvoke r0.<com.android.internal.telephony.RIL: void constructCdmaSendSmsRilRequest(com.android.internal.telephony.RILRequest,byte[])>(r3, r1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r10);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void sendImsGsmSms(java.lang.String, java.lang.String, int, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, $r9, $r12, $r13;
        int i0, i1, $i3;
        android.os.Message r3;
        com.android.internal.telephony.RILRequest r4;
        android.os.Parcel $r5, $r6, $r7;
        byte $b2;
        java.lang.StringBuilder $r8, $r10, $r11, $r14;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: android.os.Message;

        r4 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(113, r3);

        $r5 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r5.<android.os.Parcel: void writeInt(int)>(1);

        $r6 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $b2 = (byte) i0;

        virtualinvoke $r6.<android.os.Parcel: void writeByte(byte)>($b2);

        $r7 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r7.<android.os.Parcel: void writeInt(int)>(i1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void constructGsmSendSmsRilRequest(com.android.internal.telephony.RILRequest,java.lang.String,java.lang.String)>(r4, r1, r2);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r4.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i3 = r4.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r12 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i3);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r4);

        return;
    }

    public void sendImsCdmaSms(byte[], int, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        byte[] r1;
        int i0, i1, $i3;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        android.os.Parcel $r4, $r5, $r6;
        byte $b2;
        java.lang.StringBuilder $r7, $r9, $r10, $r11;
        java.lang.String $r8, $r12, $r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(113, r2);

        $r4 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(2);

        $r5 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $b2 = (byte) i0;

        virtualinvoke $r5.<android.os.Parcel: void writeByte(byte)>($b2);

        $r6 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r6.<android.os.Parcel: void writeInt(int)>(i1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void constructCdmaSendSmsRilRequest(com.android.internal.telephony.RILRequest,byte[])>(r3, r1);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i3 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r12 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void deleteSmsOnSim(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(64, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i0);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void deleteSmsOnRuim(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(97, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i0);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void writeSmsToSim(int, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1;
        java.lang.String r1, r2;
        android.os.Message r3;
        com.android.internal.telephony.RILRequest r4;
        android.os.Parcel $r5, $r6, $r7;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.os.Message;

        i1 = specialinvoke r0.<com.android.internal.telephony.RIL: int translateStatus(int)>(i0);

        r4 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(63, r3);

        $r5 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r5.<android.os.Parcel: void writeInt(int)>(i1);

        $r6 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r6.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r7 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r7.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r4);

        return;
    }

    public void writeSmsToRuim(int, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1;
        java.lang.String r1;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        android.os.Parcel $r4, $r5;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Message;

        i1 = specialinvoke r0.<com.android.internal.telephony.RIL: int translateStatus(int)>(i0);

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(96, r2);

        $r4 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i1);

        $r5 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r5.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    private int translateStatus(int)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        $i1 = i0 & 7;

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label5;
            case 3: goto label2;
            case 4: goto label5;
            case 5: goto label3;
            case 6: goto label5;
            case 7: goto label4;
            default: goto label5;
        };

     label1:
        return 1;

     label2:
        return 0;

     label3:
        return 3;

     label4:
        return 2;

     label5:
        return 1;
    }

    public void setupDataCall(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, r3, r4, r5, r6, r7, $r20, $r23, $r38;
        android.os.Message r8;
        com.android.internal.telephony.RILRequest r9;
        android.os.Parcel $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18;
        java.lang.StringBuilder $r17, $r19, $r21, $r22, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.lang.String;

        r7 := @parameter6: java.lang.String;

        r8 := @parameter7: android.os.Message;

        r9 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(27, r8);

        $r10 = r9.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r10.<android.os.Parcel: void writeInt(int)>(7);

        $r11 = r9.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r11.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r12 = r9.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r12.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r13 = r9.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r13.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        $r14 = r9.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r14.<android.os.Parcel: void writeString(java.lang.String)>(r4);

        $r16 = r9.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r16.<android.os.Parcel: void writeString(java.lang.String)>(r5);

        $r15 = r9.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r15.<android.os.Parcel: void writeString(java.lang.String)>(r6);

        $r18 = r9.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r18.<android.os.Parcel: void writeString(java.lang.String)>(r7);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke r9.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r9.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r23 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r30 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r34 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r38);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r9);

        return;
    }

    public void deactivateDataCall(int, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, $i2;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4, $r6;
        java.lang.String $r5, $r7, $r9, $r13, $r18;
        java.lang.StringBuilder $r8, $r10, $r11, $r12, $r14, $r15, $r16, $r17;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(41, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(2);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        virtualinvoke $r4.<android.os.Parcel: void writeString(java.lang.String)>($r5);

        $r6 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        virtualinvoke $r6.<android.os.Parcel: void writeString(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i2 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r13 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r18);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setRadioPower(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11;
        java.lang.String $r6, $r9, $r12, $r13;
        int $i0;
        byte $b1;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(23, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if z0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>($b1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        if z0 == 0 goto label3;

        $r13 = " on";

        goto label4;

     label3:
        $r13 = " off";

     label4:
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void requestShutdown(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(129, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setSuppServiceNotifications(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10;
        java.lang.String $r6, $r9, $r11;
        int $i0;
        byte $b1;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(62, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if z0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>($b1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void acknowledgeLastIncomingGsmSms(boolean, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        int i0, $i1;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4, $r5;
        java.lang.StringBuilder $r6, $r8, $r9, $r11, $r12, $r13, $r14, $r15;
        java.lang.String $r7, $r10, $r16;
        byte $b2;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(37, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(2);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if z0 == 0 goto label1;

        $b2 = 1;

        goto label2;

     label1:
        $b2 = 0;

     label2:
        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>($b2);

        $r5 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r5.<android.os.Parcel: void writeInt(int)>(i0);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r16);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void acknowledgeLastIncomingCdmaSms(boolean, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        int i0, $i1;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r12, $r13, $r15;
        java.lang.String $r6, $r9, $r14;
        byte $b2;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(88, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if z0 == 0 goto label1;

        $b2 = 0;

        goto label2;

     label1:
        $b2 = 1;

     label2:
        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>($b2);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r14);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void acknowledgeIncomingGsmSmsWithPdu(boolean, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        java.lang.String r1, $r8, $r11, $r17, $r19;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        android.os.Parcel $r4, $r5, $r6;
        java.lang.StringBuilder $r7, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r18;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(106, r2);

        $r4 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(2);

        $r5 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if z0 == 0 goto label1;

        $r19 = "1";

        goto label2;

     label1:
        $r19 = "0";

     label2:
        virtualinvoke $r5.<android.os.Parcel: void writeString(java.lang.String)>($r19);

        $r6 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r6.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r11 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r17);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void iccIO(int, int, java.lang.String, int, int, int, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, i2, i3, i4;
        java.lang.String r1, r2, r3;
        android.os.Message r4;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        r2 := @parameter6: java.lang.String;

        r3 := @parameter7: java.lang.String;

        r4 := @parameter8: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void iccIOForApp(int,int,java.lang.String,int,int,int,java.lang.String,java.lang.String,java.lang.String,android.os.Message)>(i0, i1, r1, i2, i3, i4, r2, r3, null, r4);

        return;
    }

    public void iccIOForApp(int, int, java.lang.String, int, int, int, java.lang.String, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, i2, i3, i4, $i5;
        java.lang.String r1, r2, r3, r4, $r16, $r20, $r24, $r28, $r37;
        android.os.Message r5;
        com.android.internal.telephony.RILRequest r6;
        android.os.Parcel $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        java.lang.StringBuilder $r17, $r18, $r19, $r21, $r22, $r23, $r25, $r26, $r27, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r38, $r39;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        r2 := @parameter6: java.lang.String;

        r3 := @parameter7: java.lang.String;

        r4 := @parameter8: java.lang.String;

        r5 := @parameter9: android.os.Message;

        r6 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(28, r5);

        $r7 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r7.<android.os.Parcel: void writeInt(int)>(i0);

        $r8 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r8.<android.os.Parcel: void writeInt(int)>(i1);

        $r9 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r9.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r11 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r11.<android.os.Parcel: void writeInt(int)>(i2);

        $r10 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r10.<android.os.Parcel: void writeInt(int)>(i3);

        $r13 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r13.<android.os.Parcel: void writeInt(int)>(i4);

        $r12 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r12.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r15 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r15.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        $r14 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r14.<android.os.Parcel: void writeString(java.lang.String)>(r4);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke r6.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> iccIO: ");

        $i5 = r6.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r20 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i5);

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" 0x");

        $r24 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" 0x");

        $r28 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1);

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" path: ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r29 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r33 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r38 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" aid: ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r37 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r37);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r6);

        return;
    }

    public void getCLIR(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(31, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setCLIR(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r12;
        java.lang.String $r6, $r9, $r13;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(32, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void queryCallWaiting(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r12;
        java.lang.String $r6, $r9, $r13;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(35, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setCallWaiting(boolean, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        int i0, $i1;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4, $r5;
        java.lang.StringBuilder $r6, $r8, $r9, $r11, $r12, $r13, $r14, $r15;
        java.lang.String $r7, $r10, $r16;
        byte $b2;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(36, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(2);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if z0 == 0 goto label1;

        $b2 = 1;

        goto label2;

     label1:
        $b2 = 0;

     label2:
        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>($b2);

        $r5 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r5.<android.os.Parcel: void writeInt(int)>(i0);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r16);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setNetworkSelectionModeAutomatic(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(46, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setNetworkSelectionModeManual(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r5, $r8, $r12;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r9, $r10, $r11;
        int $i0;
        android.os.Parcel $r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(47, r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

        $r13 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r13.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void getNetworkSelectionMode(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(45, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getAvailableNetworks(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(48, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setCallForward(int, int, int, java.lang.String, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, i2, i3, $i4, $i5;
        java.lang.String r1, $r10, $r14, $r23;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        android.os.Parcel $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.StringBuilder $r11, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        i3 := @parameter4: int;

        r2 := @parameter5: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(34, r2);

        $r4 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r5.<android.os.Parcel: void writeInt(int)>(i1);

        $r6 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r6.<android.os.Parcel: void writeInt(int)>(i2);

        $r7 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i4 = staticinvoke <android.telephony.PhoneNumberUtils: int toaFromString(java.lang.String)>(r1);

        virtualinvoke $r7.<android.os.Parcel: void writeInt(int)>($i4);

        $r8 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r8.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r9 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r9.<android.os.Parcel: void writeInt(int)>(i3);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i5 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r14 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i5);

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r23);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void queryCallForwardStatus(int, int, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, $i2, $i3;
        java.lang.String r1, $r11, $r14, $r19;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        android.os.Parcel $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.StringBuilder $r10, $r12, $r13, $r15, $r16, $r17, $r18, $r20;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(33, r2);

        $r4 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(2);

        $r5 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r5.<android.os.Parcel: void writeInt(int)>(i0);

        $r6 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r6.<android.os.Parcel: void writeInt(int)>(i1);

        $r7 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i2 = staticinvoke <android.telephony.PhoneNumberUtils: int toaFromString(java.lang.String)>(r1);

        virtualinvoke $r7.<android.os.Parcel: void writeInt(int)>($i2);

        $r8 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r8.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r9 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r9.<android.os.Parcel: void writeInt(int)>(0);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i3 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r14 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i3);

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r19);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void queryCLIP(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(55, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getBasebandVersion(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(51, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void queryFacilityLock(java.lang.String, java.lang.String, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2;
        int i0;
        android.os.Message r3;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void queryFacilityLockForApp(java.lang.String,java.lang.String,int,java.lang.String,android.os.Message)>(r1, r2, i0, null, r3);

        return;
    }

    public void queryFacilityLockForApp(java.lang.String, java.lang.String, int, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, r3, $r7, $r10, $r20, $r23;
        int i0, $i1;
        android.os.Message r4;
        com.android.internal.telephony.RILRequest r5;
        java.lang.StringBuilder $r6, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        android.os.Parcel $r19, $r21, $r22, $r24, $r25;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.os.Message;

        r5 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(42, r4);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r5.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r5.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r20);

        $r19 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r19.<android.os.Parcel: void writeInt(int)>(4);

        $r22 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r22.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r21 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r21.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r24 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        virtualinvoke $r24.<android.os.Parcel: void writeString(java.lang.String)>($r23);

        $r25 = r5.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r25.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r5);

        return;
    }

    public void setFacilityLock(java.lang.String, boolean, java.lang.String, int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2;
        boolean z0;
        int i0;
        android.os.Message r3;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r3 := @parameter4: android.os.Message;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void setFacilityLockForApp(java.lang.String,boolean,java.lang.String,int,java.lang.String,android.os.Message)>(r1, z0, r2, i0, null, r3);

        return;
    }

    public void setFacilityLockForApp(java.lang.String, boolean, java.lang.String, int, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, r3, r5, $r8, $r11, $r23, $r28, $r29;
        boolean z0;
        int i0, $i1;
        android.os.Message r4;
        com.android.internal.telephony.RILRequest r6;
        java.lang.StringBuilder $r7, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;
        android.os.Parcel $r22, $r24, $r25, $r26, $r27, $r30;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: android.os.Message;

        r6 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(43, r4);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r6.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r6.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r11 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r23);

        $r22 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r22.<android.os.Parcel: void writeInt(int)>(5);

        $r25 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r25.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        if z0 == 0 goto label1;

        $r28 = "1";

        goto label2;

     label1:
        $r28 = "0";

     label2:
        r5 = $r28;

        $r24 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r24.<android.os.Parcel: void writeString(java.lang.String)>(r5);

        $r27 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r27.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r26 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r29 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        virtualinvoke $r26.<android.os.Parcel: void writeString(java.lang.String)>($r29);

        $r30 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r30.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r6);

        return;
    }

    public void sendUSSD(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r4, $r6, $r9, $r13;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r12;
        int $i0;
        android.os.Parcel $r14;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(29, r2);

        r4 = "*******";

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        $r14 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r14.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void cancelPendingUssd(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(30, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void resetRadio(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(58, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void invokeOemRilRequestRaw(byte[], android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        byte[] r1;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r9, $r10, $r12, $r13;
        java.lang.String $r5, $r8, $r11, $r15;
        int $i0;
        android.os.Parcel $r14;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: byte[];

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(59, r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r11 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>(r1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r15);

        $r14 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r14.<android.os.Parcel: void writeByteArray(byte[])>(r1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void invokeOemRilRequestStrings(java.lang.String[], android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String[] r1;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r9;
        java.lang.String $r5, $r8, $r10;
        int $i0;
        android.os.Parcel $r11;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(60, r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r10);

        $r11 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r11.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void setBandMode(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r12;
        java.lang.String $r6, $r9, $r13;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(65, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void queryAvailableBandMode(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(66, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void sendTerminalResponse(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r5, $r8, $r10;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r9;
        int $i0;
        android.os.Parcel $r11;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(70, r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r10);

        $r11 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r11.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void sendEnvelope(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r5, $r8, $r10;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r9;
        int $i0;
        android.os.Parcel $r11;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(69, r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r10);

        $r11 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r11.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void sendEnvelopeWithStatus(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r5, $r8, $r13;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r9, $r10, $r11, $r12;
        int $i0;
        android.os.Parcel $r14;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(107, r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        $r14 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r14.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void handleCallSetupRequestFromSim(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        int[] r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r9;
        java.lang.String $r5, $r8, $r10;
        int $i0;
        android.os.Parcel $r11;
        byte $b1;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(71, r1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r10);

        r3 = newarray (int)[1];

        if z0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        r3[0] = $b1;

        $r11 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r11.<android.os.Parcel: void writeIntArray(int[])>(r3);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setPreferredNetworkType(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r12;
        java.lang.String $r6, $r9, $r13;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(73, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i0);

        r0.<com.android.internal.telephony.RIL: int mPreferredNetworkType> = i0;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getPreferredNetworkType(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(74, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getNeighboringCids(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(75, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setLocationUpdates(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r12;
        java.lang.String $r6, $r9, $r13;
        int $i0;
        byte $b1;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(76, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if z0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>($b1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getSmscAddress(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(100, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setSmscAddress(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r6, $r9, $r13;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        android.os.Parcel $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r12;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(101, r2);

        $r4 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void reportSmsMemoryStatus(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r12;
        java.lang.String $r6, $r9, $r13;
        int $i0;
        byte $b1;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(102, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if z0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>($b1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void reportStkServiceIsRunning(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(103, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getGsmBroadcastConfig(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(89, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setGsmBroadcastConfig(com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[], android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[] r1;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i8;
        android.os.Parcel $r4, $r18, $r19, $r22, $r23, $r25;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r12, $r13;
        java.lang.String $r6, $r9, $r15, $r17;
        com.android.internal.telephony.gsm.SmsBroadcastConfigInfo $r14, $r16, $r20, $r21, $r24, $r26;
        boolean $z0;
        byte $b7;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: com.android.internal.telephony.gsm.SmsBroadcastConfigInfo[];

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(90, r2);

        i0 = lengthof r1;

        $r4 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r18 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r16 = r1[i1];

        $i3 = virtualinvoke $r16.<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getFromServiceId()>();

        virtualinvoke $r18.<android.os.Parcel: void writeInt(int)>($i3);

        $r19 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r20 = r1[i1];

        $i4 = virtualinvoke $r20.<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getToServiceId()>();

        virtualinvoke $r19.<android.os.Parcel: void writeInt(int)>($i4);

        $r22 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r21 = r1[i1];

        $i5 = virtualinvoke $r21.<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getFromCodeScheme()>();

        virtualinvoke $r22.<android.os.Parcel: void writeInt(int)>($i5);

        $r23 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r24 = r1[i1];

        $i6 = virtualinvoke $r24.<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: int getToCodeScheme()>();

        virtualinvoke $r23.<android.os.Parcel: void writeInt(int)>($i6);

        $r25 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r26 = r1[i1];

        $z0 = virtualinvoke $r26.<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: boolean isSelected()>();

        if $z0 == 0 goto label2;

        $b7 = 1;

        goto label3;

     label2:
        $b7 = 0;

     label3:
        virtualinvoke $r25.<android.os.Parcel: void writeInt(int)>($b7);

        i1 = i1 + 1;

        goto label1;

     label4:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i2 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i2);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" configs : ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r15);

        i8 = 0;

     label5:
        if i8 >= i0 goto label6;

        $r14 = r1[i8];

        $r17 = virtualinvoke $r14.<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r17);

        i8 = i8 + 1;

        goto label5;

     label6:
        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void setGsmBroadcastActivation(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10;
        java.lang.String $r6, $r9, $r11;
        int $i0;
        byte $b1;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(91, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if z0 == 0 goto label1;

        $b1 = 0;

        goto label2;

     label1:
        $b1 = 1;

     label2:
        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>($b1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    private void updateScreenState()
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1, $i2, $i3, $i4;
        android.view.Display $r1;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 = r0.<com.android.internal.telephony.RIL: int mDefaultDisplayState>;

        $r1 = r0.<com.android.internal.telephony.RIL: android.view.Display mDefaultDisplay>;

        $i1 = virtualinvoke $r1.<android.view.Display: int getState()>();

        r0.<com.android.internal.telephony.RIL: int mDefaultDisplayState> = $i1;

        $i2 = r0.<com.android.internal.telephony.RIL: int mDefaultDisplayState>;

        if $i2 == i0 goto label3;

        if i0 == 2 goto label1;

        $i4 = r0.<com.android.internal.telephony.RIL: int mDefaultDisplayState>;

        if $i4 != 2 goto label1;

        specialinvoke r0.<com.android.internal.telephony.RIL: void sendScreenState(boolean)>(1);

        goto label3;

     label1:
        if i0 == 2 goto label2;

        if i0 != 0 goto label3;

     label2:
        $i3 = r0.<com.android.internal.telephony.RIL: int mDefaultDisplayState>;

        if $i3 == 2 goto label3;

        specialinvoke r0.<com.android.internal.telephony.RIL: void sendScreenState(boolean)>(0);

     label3:
        return;
    }

    private void sendScreenState(boolean)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        com.android.internal.telephony.RILRequest r1;
        android.os.Parcel $r2, $r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r9, $r10, $r11;
        java.lang.String $r5, $r8, $r12;
        int $i0;
        byte $b1;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(61, null);

        $r2 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r2.<android.os.Parcel: void writeInt(int)>(1);

        $r3 = r1.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if z0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>($b1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r1.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r1.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r1);

        return;
    }

    protected void onRadioAvailable()
    {
        com.android.internal.telephony.RIL r0;

        r0 := @this: com.android.internal.telephony.RIL;

        specialinvoke r0.<com.android.internal.telephony.RIL: void updateScreenState()>();

        return;
    }

    private com.android.internal.telephony.CommandsInterface$RadioState getRadioStateFromInt(int)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        com.android.internal.telephony.CommandsInterface$RadioState r1;
        java.lang.RuntimeException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 10: goto label3;
            default: goto label4;
        };

     label1:
        r1 = <com.android.internal.telephony.CommandsInterface$RadioState: com.android.internal.telephony.CommandsInterface$RadioState RADIO_OFF>;

        goto label5;

     label2:
        r1 = <com.android.internal.telephony.CommandsInterface$RadioState: com.android.internal.telephony.CommandsInterface$RadioState RADIO_UNAVAILABLE>;

        goto label5;

     label3:
        r1 = <com.android.internal.telephony.CommandsInterface$RadioState: com.android.internal.telephony.CommandsInterface$RadioState RADIO_ON>;

        goto label5;

     label4:
        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized RIL_RadioState: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label5:
        return r1;
    }

    private void switchToRadioState(com.android.internal.telephony.CommandsInterface$RadioState)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.CommandsInterface$RadioState r1;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: com.android.internal.telephony.CommandsInterface$RadioState;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void setRadioState(com.android.internal.telephony.CommandsInterface$RadioState)>(r1);

        return;
    }

    private void acquireWakeLock()
    {
        com.android.internal.telephony.RIL r0;
        android.os.PowerManager$WakeLock r1, $r4, $r5;
        android.os.Message r2;
        java.lang.Throwable r3, $r9;
        int $i0, $i1, $i2;
        com.android.internal.telephony.RIL$RILSender $r6, $r7, $r8;
        long $l3;

        r0 := @this: com.android.internal.telephony.RIL;

        $r4 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r5.<android.os.PowerManager$WakeLock: void acquire()>();

        $i0 = r0.<com.android.internal.telephony.RIL: int mWakeLockCount>;

        $i1 = $i0 + 1;

        r0.<com.android.internal.telephony.RIL: int mWakeLockCount> = $i1;

        $r6 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RILSender mSender>;

        virtualinvoke $r6.<com.android.internal.telephony.RIL$RILSender: void removeMessages(int)>(2);

        $r7 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RILSender mSender>;

        r2 = virtualinvoke $r7.<com.android.internal.telephony.RIL$RILSender: android.os.Message obtainMessage(int)>(2);

        $r8 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RILSender mSender>;

        $i2 = r0.<com.android.internal.telephony.RIL: int mWakeLockTimeout>;

        $l3 = (long) $i2;

        virtualinvoke $r8.<com.android.internal.telephony.RIL$RILSender: boolean sendMessageDelayed(android.os.Message,long)>(r2, $l3);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r1;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void decrementWakeLock()
    {
        com.android.internal.telephony.RIL r0;
        android.os.PowerManager$WakeLock r1, $r3, $r4;
        java.lang.Throwable r2, $r6;
        int $i0, $i1, $i2;
        com.android.internal.telephony.RIL$RILSender $r5;

        r0 := @this: com.android.internal.telephony.RIL;

        $r3 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $i0 = r0.<com.android.internal.telephony.RIL: int mWakeLockCount>;

        if $i0 <= 1 goto label2;

        $i1 = r0.<com.android.internal.telephony.RIL: int mWakeLockCount>;

        $i2 = $i1 - 1;

        r0.<com.android.internal.telephony.RIL: int mWakeLockCount> = $i2;

        goto label3;

     label2:
        r0.<com.android.internal.telephony.RIL: int mWakeLockCount> = 0;

        $r4 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r4.<android.os.PowerManager$WakeLock: void release()>();

        $r5 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RILSender mSender>;

        virtualinvoke $r5.<com.android.internal.telephony.RIL$RILSender: void removeMessages(int)>(2);

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private boolean clearWakeLock()
    {
        com.android.internal.telephony.RIL r0;
        android.os.PowerManager$WakeLock r1, $r3, $r9, $r11;
        java.lang.Throwable r2, $r12;
        int $i0, $i1;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r8;
        com.android.internal.telephony.RIL$RILSender $r10;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.RIL;

        $r3 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $i0 = r0.<com.android.internal.telephony.RIL: int mWakeLockCount>;

        if $i0 != 0 goto label3;

        $r11 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        $z0 = virtualinvoke $r11.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 != 0 goto label3;

        exitmonitor r1;

     label2:
        return 0;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NOTE: mWakeLockCount is ");

        $i1 = r0.<com.android.internal.telephony.RIL: int mWakeLockCount>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("at time of clearing");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RILJ", $r8);

        r0.<com.android.internal.telephony.RIL: int mWakeLockCount> = 0;

        $r9 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r9.<android.os.PowerManager$WakeLock: void release()>();

        $r10 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RILSender mSender>;

        virtualinvoke $r10.<com.android.internal.telephony.RIL$RILSender: void removeMessages(int)>(2);

        exitmonitor r1;

     label4:
        return 1;

     label5:
        $r12 := @caughtexception;

        r2 = $r12;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void send(com.android.internal.telephony.RILRequest)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.RILRequest r1;
        android.os.Message r2;
        android.net.LocalSocket $r3;
        com.android.internal.telephony.RIL$RILSender $r4;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: com.android.internal.telephony.RILRequest;

        $r3 = r0.<com.android.internal.telephony.RIL: android.net.LocalSocket mSocket>;

        if $r3 != null goto label1;

        virtualinvoke r1.<com.android.internal.telephony.RILRequest: void onError(int,java.lang.Object)>(1, null);

        virtualinvoke r1.<com.android.internal.telephony.RILRequest: void release()>();

        return;

     label1:
        $r4 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RILSender mSender>;

        r2 = virtualinvoke $r4.<com.android.internal.telephony.RIL$RILSender: android.os.Message obtainMessage(int,java.lang.Object)>(1, r1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void acquireWakeLock()>();

        virtualinvoke r2.<android.os.Message: void sendToTarget()>();

        return;
    }

    private void processResponse(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0;
        com.android.internal.telephony.RILRequest r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 != 1 goto label1;

        specialinvoke r0.<com.android.internal.telephony.RIL: void processUnsolicited(android.os.Parcel)>(r1);

        goto label2;

     label1:
        if i0 != 0 goto label2;

        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest processSolicited(android.os.Parcel)>(r1);

        if r2 == null goto label2;

        virtualinvoke r2.<com.android.internal.telephony.RILRequest: void release()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void decrementWakeLock()>();

     label2:
        return;
    }

    private void clearRequestList(int, boolean)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, i2, $i3, $i4, $i6;
        boolean z0;
        com.android.internal.telephony.RILRequest r1;
        android.util.SparseArray r2, $r4, $r5, $r6, $r7;
        java.lang.Throwable r3, $r23;
        java.lang.Object $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r16, $r17, $r18, $r19, $r21, $r22;
        java.lang.String $r14, $r15, $r20;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r4 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        i1 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        if z0 == 0 goto label2;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clearRequestList  mWakeLockCount=");

        $i6 = r0.<com.android.internal.telephony.RIL: int mWakeLockCount>;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRequestList=");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RILJ", $r20);

     label2:
        i2 = 0;

     label3:
        if i2 >= i1 goto label5;

        $r7 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i2);

        r1 = (com.android.internal.telephony.RILRequest) $r8;

        if z0 == 0 goto label4;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": [");

        $i3 = r1.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $i4 = r1.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r14 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i4);

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RILJ", $r15);

     label4:
        virtualinvoke r1.<com.android.internal.telephony.RILRequest: void onError(int,java.lang.Object)>(i0, null);

        virtualinvoke r1.<com.android.internal.telephony.RILRequest: void release()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void decrementWakeLock()>();

        i2 = i2 + 1;

        goto label3;

     label5:
        $r6 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        virtualinvoke $r6.<android.util.SparseArray: void clear()>();

        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r23 := @caughtexception;

        r3 = $r23;

        exitmonitor r2;

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private com.android.internal.telephony.RILRequest findAndRemoveRequestFromList(int)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        android.util.SparseArray r1, $r3, $r4, $r6;
        java.lang.Throwable r2, $r7;
        java.lang.Object $r5;
        com.android.internal.telephony.RILRequest r8;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r8 = (com.android.internal.telephony.RILRequest) $r5;

        if r8 == null goto label2;

        $r6 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        virtualinvoke $r6.<android.util.SparseArray: void remove(int)>(i0);

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return r8;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private com.android.internal.telephony.RILRequest processSolicited(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        com.android.internal.telephony.RILRequest r2;
        java.lang.Object r3;
        java.lang.Throwable r4, $r56;
        android.os.RegistrantList $r5, $r22, $r25, $r27, $r28, $r31;
        java.lang.String $r6, $r10, $r13, $r14, $r24, $r30, $r38, $r47, $r50, $r53, $r54, $r64;
        java.lang.StringBuilder $r7, $r8, $r9, $r11, $r12, $r15, $r20, $r21, $r23, $r26, $r29, $r32, $r33, $r34, $r35, $r36, $r42, $r44, $r45, $r46, $r48, $r49, $r51, $r52, $r55, $r57, $r58, $r59, $r63;
        android.os.Message $r16, $r17, $r18, $r60, $r62, $r65;
        com.android.internal.telephony.CommandsInterface$RadioState $r37;
        android.os.Registrant $r39, $r40;
        boolean $z1;
        java.util.concurrent.atomic.AtomicBoolean $r41;
        java.lang.RuntimeException $r43;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest findAndRemoveRequestFromList(int)>(i0);

        if r2 != null goto label001;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected solicited response! sn: ");

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r58 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" error: ");

        $r55 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r54 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("RILJ", $r54);

        return null;

     label001:
        r3 = null;

        if i1 == 0 goto label002;

        $i11 = virtualinvoke r1.<android.os.Parcel: int dataAvail()>();

        if $i11 <= 0 goto label135;

     label002:
        $i2 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        tableswitch($i2)
        {
            case 1: goto label003;
            case 2: goto label004;
            case 3: goto label005;
            case 4: goto label006;
            case 5: goto label007;
            case 6: goto label008;
            case 7: goto label009;
            case 8: goto label010;
            case 9: goto label011;
            case 10: goto label012;
            case 11: goto label013;
            case 12: goto label014;
            case 13: goto label015;
            case 14: goto label016;
            case 15: goto label018;
            case 16: goto label019;
            case 17: goto label020;
            case 18: goto label021;
            case 19: goto label022;
            case 20: goto label023;
            case 21: goto label024;
            case 22: goto label025;
            case 23: goto label026;
            case 24: goto label027;
            case 25: goto label028;
            case 26: goto label029;
            case 27: goto label030;
            case 28: goto label031;
            case 29: goto label032;
            case 30: goto label033;
            case 31: goto label034;
            case 32: goto label035;
            case 33: goto label036;
            case 34: goto label037;
            case 35: goto label038;
            case 36: goto label039;
            case 37: goto label040;
            case 38: goto label041;
            case 39: goto label042;
            case 40: goto label043;
            case 41: goto label044;
            case 42: goto label045;
            case 43: goto label046;
            case 44: goto label047;
            case 45: goto label048;
            case 46: goto label049;
            case 47: goto label050;
            case 48: goto label051;
            case 49: goto label052;
            case 50: goto label053;
            case 51: goto label054;
            case 52: goto label055;
            case 53: goto label056;
            case 54: goto label057;
            case 55: goto label058;
            case 56: goto label059;
            case 57: goto label060;
            case 58: goto label061;
            case 59: goto label062;
            case 60: goto label063;
            case 61: goto label064;
            case 62: goto label065;
            case 63: goto label066;
            case 64: goto label067;
            case 65: goto label068;
            case 66: goto label069;
            case 67: goto label070;
            case 68: goto label071;
            case 69: goto label072;
            case 70: goto label073;
            case 71: goto label074;
            case 72: goto label075;
            case 73: goto label076;
            case 74: goto label077;
            case 75: goto label078;
            case 76: goto label079;
            case 77: goto label080;
            case 78: goto label081;
            case 79: goto label082;
            case 80: goto label083;
            case 81: goto label084;
            case 82: goto label085;
            case 83: goto label086;
            case 84: goto label087;
            case 85: goto label088;
            case 86: goto label097;
            case 87: goto label089;
            case 88: goto label090;
            case 89: goto label091;
            case 90: goto label092;
            case 91: goto label093;
            case 92: goto label094;
            case 93: goto label095;
            case 94: goto label096;
            case 95: goto label098;
            case 96: goto label099;
            case 97: goto label100;
            case 98: goto label101;
            case 99: goto label104;
            case 100: goto label102;
            case 101: goto label103;
            case 102: goto label105;
            case 103: goto label106;
            case 104: goto label107;
            case 105: goto label108;
            case 106: goto label109;
            case 107: goto label110;
            case 108: goto label111;
            case 109: goto label112;
            case 110: goto label113;
            case 111: goto label114;
            case 112: goto label116;
            case 113: goto label117;
            case 114: goto label118;
            case 115: goto label119;
            case 116: goto label120;
            case 117: goto label121;
            case 118: goto label122;
            case 119: goto label123;
            case 120: goto label124;
            case 121: goto label125;
            case 122: goto label126;
            case 123: goto label127;
            case 124: goto label128;
            case 125: goto label129;
            case 126: goto label131;
            case 127: goto label131;
            case 128: goto label115;
            case 129: goto label130;
            default: goto label131;
        };

     label003:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseIccCardStatus(android.os.Parcel)>(r1);

        goto label132;

     label004:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label132;

     label005:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label132;

     label006:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label132;

     label007:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label132;

     label008:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label132;

     label009:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label132;

     label010:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label132;

     label011:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseCallList(android.os.Parcel)>(r1);

        goto label132;

     label012:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label013:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseString(android.os.Parcel)>(r1);

        goto label132;

     label014:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label015:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label016:
        $r41 = r0.<com.android.internal.telephony.RIL: java.util.concurrent.atomic.AtomicBoolean mTestingEmergencyCall>;

        $z1 = virtualinvoke $r41.<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>(0);

        if $z1 == 0 goto label017;

        $r40 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mEmergencyCallbackModeRegistrant>;

        if $r40 == null goto label017;

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("testing emergency call, notify ECM Registrants");

        $r39 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mEmergencyCallbackModeRegistrant>;

        virtualinvoke $r39.<android.os.Registrant: void notifyRegistrant()>();

     label017:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label018:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label019:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label020:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label021:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label132;

     label022:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseSignalStrength(android.os.Parcel)>(r1);

        goto label132;

     label023:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseStrings(android.os.Parcel)>(r1);

        goto label132;

     label024:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseStrings(android.os.Parcel)>(r1);

        goto label132;

     label025:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseStrings(android.os.Parcel)>(r1);

        goto label132;

     label026:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label027:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label028:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseSMS(android.os.Parcel)>(r1);

        goto label132;

     label029:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseSMS(android.os.Parcel)>(r1);

        goto label132;

     label030:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseSetupDataCall(android.os.Parcel)>(r1);

        goto label132;

     label031:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseICC_IO(android.os.Parcel)>(r1);

        goto label132;

     label032:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label033:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label034:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label132;

     label035:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label036:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseCallForward(android.os.Parcel)>(r1);

        goto label132;

     label037:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label038:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label132;

     label039:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label040:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label041:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseString(android.os.Parcel)>(r1);

        goto label132;

     label042:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseString(android.os.Parcel)>(r1);

        goto label132;

     label043:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label044:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label045:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label132;

     label046:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label132;

     label047:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label048:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label132;

     label049:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label050:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label051:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseOperatorInfos(android.os.Parcel)>(r1);

        goto label132;

     label052:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label053:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label054:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseString(android.os.Parcel)>(r1);

        goto label132;

     label055:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label056:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label057:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label132;

     label058:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label132;

     label059:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label132;

     label060:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseDataCallList(android.os.Parcel)>(r1);

        goto label132;

     label061:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label062:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseRaw(android.os.Parcel)>(r1);

        goto label132;

     label063:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseStrings(android.os.Parcel)>(r1);

        goto label132;

     label064:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label065:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label066:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label132;

     label067:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label068:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label069:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label132;

     label070:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseString(android.os.Parcel)>(r1);

        goto label132;

     label071:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label072:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseString(android.os.Parcel)>(r1);

        goto label132;

     label073:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label074:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label132;

     label075:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label076:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label077:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseGetPreferredNetworkType(android.os.Parcel)>(r1);

        goto label132;

     label078:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseCellList(android.os.Parcel)>(r1);

        goto label132;

     label079:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label080:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label081:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label082:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label132;

     label083:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label084:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label132;

     label085:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label086:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label132;

     label087:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label088:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label089:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseSMS(android.os.Parcel)>(r1);

        goto label132;

     label090:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label091:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseGmsBroadcastConfig(android.os.Parcel)>(r1);

        goto label132;

     label092:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label093:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label094:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseCdmaBroadcastConfig(android.os.Parcel)>(r1);

        goto label132;

     label095:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label096:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label097:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label098:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseStrings(android.os.Parcel)>(r1);

        goto label132;

     label099:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label132;

     label100:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label101:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseStrings(android.os.Parcel)>(r1);

        goto label132;

     label102:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseString(android.os.Parcel)>(r1);

        goto label132;

     label103:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label104:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label105:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label106:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label107:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label132;

     label108:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseString(android.os.Parcel)>(r1);

        goto label132;

     label109:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label110:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseICC_IO(android.os.Parcel)>(r1);

        goto label132;

     label111:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label132;

     label112:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.util.ArrayList responseCellInfoList(android.os.Parcel)>(r1);

        goto label132;

     label113:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label114:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label115:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label116:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label132;

     label117:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseSMS(android.os.Parcel)>(r1);

        goto label132;

     label118:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseICC_IO(android.os.Parcel)>(r1);

        goto label132;

     label119:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label132;

     label120:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label121:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseICC_IO(android.os.Parcel)>(r1);

        goto label132;

     label122:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseString(android.os.Parcel)>(r1);

        goto label132;

     label123:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label124:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label125:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label126:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label127:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label128:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseHardwareConfig(android.os.Parcel)>(r1);

        goto label132;

     label129:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseICC_IOBase64(android.os.Parcel)>(r1);

        goto label132;

     label130:
        r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label132;

     label131:
        $r43 = new java.lang.RuntimeException;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized solicited response: ");

        $i10 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r46 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r43.<java.lang.RuntimeException: void <init>(java.lang.String)>($r47);

        throw $r43;

     label132:
        goto label135;

     label133:
        $r56 := @caughtexception;

        r4 = $r56;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        $r48 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("< ");

        $i12 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r50 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i12);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r63 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exception, possible invalid RIL response");

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("RILJ", $r64, r4);

        $r65 = r2.<com.android.internal.telephony.RILRequest: android.os.Message mResult>;

        if $r65 == null goto label134;

        $r60 = r2.<com.android.internal.telephony.RILRequest: android.os.Message mResult>;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r60, null, r4);

        $r62 = r2.<com.android.internal.telephony.RILRequest: android.os.Message mResult>;

        virtualinvoke $r62.<android.os.Message: void sendToTarget()>();

     label134:
        return r2;

     label135:
        $i3 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        if $i3 != 129 goto label136;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Response to RIL_REQUEST_SHUTDOWN received. Error is ");

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Setting Radio State to Unavailable regardless of error.");

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r38);

        $r37 = <com.android.internal.telephony.CommandsInterface$RadioState: com.android.internal.telephony.CommandsInterface$RadioState RADIO_UNAVAILABLE>;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void setRadioState(com.android.internal.telephony.CommandsInterface$RadioState)>($r37);

     label136:
        $i4 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        lookupswitch($i4)
        {
            case 3: goto label137;
            case 5: goto label137;
            default: goto label138;
        };

     label137:
        $r5 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mIccStatusChangedRegistrants>;

        if $r5 == null goto label138;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ON enter sim puk fakeSimStatusChanged: reg count=");

        $r27 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mIccStatusChangedRegistrants>;

        $i9 = virtualinvoke $r27.<android.os.RegistrantList: int size()>();

        $r32 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r30);

        $r31 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mIccStatusChangedRegistrants>;

        virtualinvoke $r31.<android.os.RegistrantList: void notifyRegistrants()>();

     label138:
        if i1 == 0 goto label141;

        $i7 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        lookupswitch($i7)
        {
            case 2: goto label139;
            case 4: goto label139;
            case 6: goto label139;
            case 7: goto label139;
            case 43: goto label139;
            default: goto label140;
        };

     label139:
        $r22 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mIccStatusChangedRegistrants>;

        if $r22 == null goto label140;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ON some errors fakeSimStatusChanged: reg count=");

        $r25 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mIccStatusChangedRegistrants>;

        $i8 = virtualinvoke $r25.<android.os.RegistrantList: int size()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r24);

        $r28 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mIccStatusChangedRegistrants>;

        virtualinvoke $r28.<android.os.RegistrantList: void notifyRegistrants()>();

     label140:
        virtualinvoke r2.<com.android.internal.telephony.RILRequest: void onError(int,java.lang.Object)>(i1, r3);

        goto label142;

     label141:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("< ");

        $i5 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i5);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i6 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r13 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String retToString(int,java.lang.Object)>($i6, r3);

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r14);

        $r17 = r2.<com.android.internal.telephony.RILRequest: android.os.Message mResult>;

        if $r17 == null goto label142;

        $r16 = r2.<com.android.internal.telephony.RILRequest: android.os.Message mResult>;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r16, r3, null);

        $r18 = r2.<com.android.internal.telephony.RILRequest: android.os.Message mResult>;

        virtualinvoke $r18.<android.os.Message: void sendToTarget()>();

     label142:
        return r2;

        catch java.lang.Throwable from label002 to label132 with label133;
    }

    static java.lang.String retToString(int, java.lang.Object)
    {
        int i0, i1, $i3, $i4, $i5, $i6, i7, i8, i10;
        java.lang.Object r0, $r6, $r11, $r16;
        java.lang.StringBuilder r1, $r5, $r7, $r8, $r9, $r13, $r14, $r15, $r18, $r19, $r25, $r26, $r32, r34, r36, r39, r43;
        java.lang.String r2, $r21, $r23;
        int[] r3, $r29;
        byte b2, b9;
        com.android.internal.telephony.DriverCall r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String[] $r17, r33;
        java.util.ArrayList r35, r38, r42;
        java.util.Iterator r37, r40, r44;
        android.telephony.NeighboringCellInfo r41;
        com.android.internal.telephony.HardwareConfig r45;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Object;

        if r0 != null goto label01;

        return "";

     label01:
        lookupswitch(i0)
        {
            case 11: goto label02;
            case 38: goto label02;
            case 39: goto label02;
            case 115: goto label02;
            case 117: goto label02;
            default: goto label03;
        };

     label02:
        return "";

     label03:
        $z0 = r0 instanceof int[];

        if $z0 == 0 goto label06;

        $r29 = (int[]) r0;

        r3 = (int[]) $r29;

        i1 = lengthof r3;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>("{");

        r1 = $r26;

        if i1 <= 0 goto label05;

        b2 = 0;

        i7 = b2 + 1;

        $i4 = r3[b2];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

     label04:
        if i7 >= i1 goto label05;

        $r32 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i6 = i7;

        i7 = i7 + 1;

        $i5 = r3[$i6];

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        goto label04;

     label05:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label19;

     label06:
        $z1 = r0 instanceof java.lang.String[];

        if $z1 == 0 goto label09;

        $r17 = (java.lang.String[]) r0;

        r33 = (java.lang.String[]) $r17;

        i8 = lengthof r33;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>("{");

        r34 = $r18;

        if i8 <= 0 goto label08;

        b9 = 0;

        i10 = b9 + 1;

        $r21 = r33[b9];

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

     label07:
        if i10 >= i8 goto label08;

        $r25 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i3 = i10;

        i10 = i10 + 1;

        $r23 = r33[$i3];

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        goto label07;

     label08:
        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        r2 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label19;

     label09:
        if i0 != 9 goto label12;

        r35 = (java.util.ArrayList) r0;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>(" ");

        r36 = $r14;

        r37 = virtualinvoke r35.<java.util.ArrayList: java.util.Iterator iterator()>();

     label10:
        $z4 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label11;

        $r16 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.internal.telephony.DriverCall) $r16;

        $r15 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        goto label10;

     label11:
        r2 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label19;

     label12:
        if i0 != 75 goto label15;

        r38 = (java.util.ArrayList) r0;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>(" ");

        r39 = $r9;

        r40 = virtualinvoke r38.<java.util.ArrayList: java.util.Iterator iterator()>();

     label13:
        $z3 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label14;

        $r11 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>();

        r41 = (android.telephony.NeighboringCellInfo) $r11;

        $r13 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r41);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        goto label13;

     label14:
        r2 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label19;

     label15:
        if i0 != 124 goto label18;

        r42 = (java.util.ArrayList) r0;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(" ");

        r43 = $r5;

        r44 = virtualinvoke r42.<java.util.ArrayList: java.util.Iterator iterator()>();

     label16:
        $z2 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label17;

        $r6 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>();

        r45 = (com.android.internal.telephony.HardwareConfig) $r6;

        $r8 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r45);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        goto label16;

     label17:
        r2 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label19;

     label18:
        r2 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

     label19:
        return r2;
    }

    private void processUnsolicited(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.Object r2, $r51;
        java.lang.Throwable r3, $r141;
        java.lang.String[] r4, $r115, $r120, $r121, r152;
        android.telephony.SmsMessage r5, r7;
        long l1;
        java.lang.Object[] r6;
        boolean z0, $z1, $z2, z3;
        java.util.ArrayList r8;
        java.lang.ClassCastException r9, $r145;
        com.android.internal.telephony.cdma.CdmaInformationRecords r10;
        java.lang.String $r11, $r53, $r110, $r113, $r117, $r135, $r142, $r147, $r149;
        android.os.AsyncResult $r12, $r17, $r18, $r20, $r25, $r26, $r31, $r33, $r39, $r44, $r46, $r55, $r56, $r61, $r67, $r68, $r75, $r76, $r80, $r87, $r89, $r90, $r95, $r96, $r99, $r101, $r105, $r119, $r123, $r125, $r127, $r130, $r133;
        android.os.RegistrantList $r13, $r14, $r15, $r16, $r19, $r21, $r22, $r23, $r24, $r27, $r29, $r30, $r34, $r35, $r36, $r37, $r38, $r40, $r42, $r43, $r45, $r57, $r60, $r62, $r63, $r73, $r78, $r84, $r86, $r98, $r126, $r128;
        int[] $r28, $r32, $r41, $r47, $r109, r151;
        byte[] $r48, $r52;
        java.lang.Boolean $r49;
        android.os.Registrant $r50, $r54, $r58, $r59, $r64, $r65, $r66, $r69, $r70, $r71, $r72, $r74, $r77, $r79, $r81, $r82, $r83, $r85, $r88, $r91, $r92, $r93, $r94, $r97, $r100, $r102, $r103, $r104, $r106, $r108, $r116, $r118, $r122, $r124, $r129, $r131, $r132, $r134;
        java.lang.Long $r107;
        java.lang.StringBuilder $r111, $r112, $r114, $r136, $r137, $r138, $r139, $r140, $r143, $r146, $r148;
        java.lang.RuntimeException $r144;
        com.android.internal.telephony.CommandsInterface$RadioState r150;
        java.util.Iterator r153;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

     label01:
        tableswitch(i0)
        {
            case 1000: goto label02;
            case 1001: goto label03;
            case 1002: goto label04;
            case 1003: goto label05;
            case 1004: goto label06;
            case 1005: goto label07;
            case 1006: goto label08;
            case 1007: goto label42;
            case 1008: goto label09;
            case 1009: goto label10;
            case 1010: goto label11;
            case 1011: goto label12;
            case 1012: goto label13;
            case 1013: goto label14;
            case 1014: goto label15;
            case 1015: goto label16;
            case 1016: goto label17;
            case 1017: goto label18;
            case 1018: goto label19;
            case 1019: goto label21;
            case 1020: goto label22;
            case 1021: goto label23;
            case 1022: goto label24;
            case 1023: goto label20;
            case 1024: goto label25;
            case 1025: goto label26;
            case 1026: goto label27;
            case 1027: goto label28;
            case 1028: goto label29;
            case 1029: goto label30;
            case 1030: goto label31;
            case 1031: goto label32;
            case 1032: goto label33;
            case 1033: goto label34;
            case 1034: goto label35;
            case 1035: goto label36;
            case 1036: goto label37;
            case 1037: goto label38;
            case 1038: goto label39;
            case 1039: goto label40;
            case 1040: goto label41;
            default: goto label42;
        };

     label02:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label43;

     label03:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label43;

     label04:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label43;

     label05:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseString(android.os.Parcel)>(r1);

        goto label43;

     label06:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseString(android.os.Parcel)>(r1);

        goto label43;

     label07:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label43;

     label08:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseStrings(android.os.Parcel)>(r1);

        goto label43;

     label09:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseString(android.os.Parcel)>(r1);

        goto label43;

     label10:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseSignalStrength(android.os.Parcel)>(r1);

        goto label43;

     label11:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseDataCallList(android.os.Parcel)>(r1);

        goto label43;

     label12:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseSuppServiceNotification(android.os.Parcel)>(r1);

        goto label43;

     label13:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label43;

     label14:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseString(android.os.Parcel)>(r1);

        goto label43;

     label15:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseString(android.os.Parcel)>(r1);

        goto label43;

     label16:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label43;

     label17:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label43;

     label18:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseSimRefresh(android.os.Parcel)>(r1);

        goto label43;

     label19:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseCallRing(android.os.Parcel)>(r1);

        goto label43;

     label20:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label43;

     label21:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label43;

     label22:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseCdmaSms(android.os.Parcel)>(r1);

        goto label43;

     label23:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseRaw(android.os.Parcel)>(r1);

        goto label43;

     label24:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label43;

     label25:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label43;

     label26:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseCdmaCallWaiting(android.os.Parcel)>(r1);

        goto label43;

     label27:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label43;

     label28:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.util.ArrayList responseCdmaInformationRecord(android.os.Parcel)>(r1);

        goto label43;

     label29:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseRaw(android.os.Parcel)>(r1);

        goto label43;

     label30:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label43;

     label31:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label43;

     label32:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label43;

     label33:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label43;

     label34:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label43;

     label35:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label43;

     label36:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label43;

     label37:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.util.ArrayList responseCellInfoList(android.os.Parcel)>(r1);

        goto label43;

     label38:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseVoid(android.os.Parcel)>(r1);

        goto label43;

     label39:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label43;

     label40:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        goto label43;

     label41:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseHardwareConfig(android.os.Parcel)>(r1);

        goto label43;

     label42:
        $r144 = new java.lang.RuntimeException;

        $r143 = new java.lang.StringBuilder;

        specialinvoke $r143.<java.lang.StringBuilder: void <init>()>();

        $r140 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized unsol response: ");

        $r139 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r142 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r144.<java.lang.RuntimeException: void <init>(java.lang.String)>($r142);

        throw $r144;

     label43:
        goto label45;

     label44:
        $r141 := @caughtexception;

        r3 = $r141;

        $r136 = new java.lang.StringBuilder;

        specialinvoke $r136.<java.lang.StringBuilder: void <init>()>();

        $r138 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception processing unsol response: ");

        $r137 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r146 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception:");

        $r147 = virtualinvoke r3.<java.lang.Throwable: java.lang.String toString()>();

        $r148 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r147);

        $r149 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("RILJ", $r149);

        return;

     label45:
        tableswitch(i0)
        {
            case 1000: goto label46;
            case 1001: goto label48;
            case 1002: goto label49;
            case 1003: goto label50;
            case 1004: goto label51;
            case 1005: goto label52;
            case 1006: goto label54;
            case 1007: goto label97;
            case 1008: goto label56;
            case 1009: goto label59;
            case 1010: goto label60;
            case 1011: goto label61;
            case 1012: goto label62;
            case 1013: goto label63;
            case 1014: goto label64;
            case 1015: goto label65;
            case 1016: goto label66;
            case 1017: goto label67;
            case 1018: goto label68;
            case 1019: goto label70;
            case 1020: goto label71;
            case 1021: goto label72;
            case 1022: goto label73;
            case 1023: goto label69;
            case 1024: goto label74;
            case 1025: goto label75;
            case 1026: goto label76;
            case 1027: goto label77;
            case 1028: goto label83;
            case 1029: goto label84;
            case 1030: goto label87;
            case 1031: goto label89;
            case 1032: goto label90;
            case 1033: goto label91;
            case 1034: goto label92;
            case 1035: goto label88;
            case 1036: goto label93;
            case 1037: goto label47;
            case 1038: goto label94;
            case 1039: goto label95;
            case 1040: goto label96;
            default: goto label97;
        };

     label46:
        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r150 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.CommandsInterface$RadioState getRadioStateFromInt(int)>($i2);

        $r11 = virtualinvoke r150.<com.android.internal.telephony.CommandsInterface$RadioState: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogMore(int,java.lang.String)>(i0, $r11);

        specialinvoke r0.<com.android.internal.telephony.RIL: void switchToRadioState(com.android.internal.telephony.CommandsInterface$RadioState)>(r150);

        goto label97;

     label47:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLog(int)>(i0);

        $r23 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mImsNetworkStateChangedRegistrants>;

        $r20 = new android.os.AsyncResult;

        specialinvoke $r20.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r23.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r20);

        goto label97;

     label48:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLog(int)>(i0);

        $r128 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mCallStateRegistrants>;

        $r127 = new android.os.AsyncResult;

        specialinvoke $r127.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r128.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r127);

        goto label97;

     label49:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLog(int)>(i0);

        $r126 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mVoiceNetworkStateRegistrants>;

        $r125 = new android.os.AsyncResult;

        specialinvoke $r125.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r126.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r125);

        goto label97;

     label50:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLog(int)>(i0);

        r4 = newarray (java.lang.String)[2];

        $r135 = (java.lang.String) r2;

        r4[1] = $r135;

        r5 = staticinvoke <android.telephony.SmsMessage: android.telephony.SmsMessage newFromCMT(java.lang.String[])>(r4);

        $r122 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mGsmSmsRegistrant>;

        if $r122 == null goto label97;

        $r124 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mGsmSmsRegistrant>;

        $r123 = new android.os.AsyncResult;

        specialinvoke $r123.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r5, null);

        virtualinvoke $r124.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r123);

        goto label97;

     label51:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r2);

        $r132 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mSmsStatusRegistrant>;

        if $r132 == null goto label97;

        $r134 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mSmsStatusRegistrant>;

        $r133 = new android.os.AsyncResult;

        specialinvoke $r133.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r134.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r133);

        goto label97;

     label52:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r2);

        $r109 = (int[]) r2;

        r151 = (int[]) $r109;

        $i7 = lengthof r151;

        if $i7 != 1 goto label53;

        $r129 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mSmsOnSimRegistrant>;

        if $r129 == null goto label97;

        $r131 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mSmsOnSimRegistrant>;

        $r130 = new android.os.AsyncResult;

        specialinvoke $r130.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r151, null);

        virtualinvoke $r131.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r130);

        goto label97;

     label53:
        $r111 = new java.lang.StringBuilder;

        specialinvoke $r111.<java.lang.StringBuilder: void <init>()>();

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" NEW_SMS_ON_SIM ERROR with wrong length ");

        $i8 = lengthof r151;

        $r114 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r113 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r113);

        goto label97;

     label54:
        $r115 = (java.lang.String[]) r2;

        r152 = (java.lang.String[]) $r115;

        $i9 = lengthof r152;

        if $i9 >= 2 goto label55;

        r152 = newarray (java.lang.String)[2];

        $r121 = (java.lang.String[]) r2;

        $r120 = (java.lang.String[]) $r121;

        $r110 = $r120[0];

        r152[0] = $r110;

        r152[1] = null;

     label55:
        $r117 = r152[0];

        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogMore(int,java.lang.String)>(i0, $r117);

        $r116 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mUSSDRegistrant>;

        if $r116 == null goto label97;

        $r118 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mUSSDRegistrant>;

        $r119 = new android.os.AsyncResult;

        specialinvoke $r119.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r152, null);

        virtualinvoke $r118.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r119);

        goto label97;

     label56:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r2);

        l1 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r6 = newarray (java.lang.Object)[2];

        r6[0] = r2;

        $r107 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        r6[1] = $r107;

        z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("telephony.test.ignore.nitz", 0);

        if z0 == 0 goto label57;

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("ignoring UNSOL_NITZ_TIME_RECEIVED");

        goto label97;

     label57:
        $r106 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mNITZTimeRegistrant>;

        if $r106 == null goto label58;

        $r104 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mNITZTimeRegistrant>;

        $r105 = new android.os.AsyncResult;

        specialinvoke $r105.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r6, null);

        virtualinvoke $r104.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r105);

        goto label97;

     label58:
        r0.<com.android.internal.telephony.RIL: java.lang.Object mLastNITZTimeInfo> = r6;

        goto label97;

     label59:
        $r97 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mSignalStrengthRegistrant>;

        if $r97 == null goto label97;

        $r108 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mSignalStrengthRegistrant>;

        $r96 = new android.os.AsyncResult;

        specialinvoke $r96.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r108.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r96);

        goto label97;

     label60:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r2);

        $r98 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mDataNetworkStateRegistrants>;

        $r99 = new android.os.AsyncResult;

        specialinvoke $r99.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r98.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r99);

        goto label97;

     label61:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r2);

        $r102 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mSsnRegistrant>;

        if $r102 == null goto label97;

        $r100 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mSsnRegistrant>;

        $r101 = new android.os.AsyncResult;

        specialinvoke $r101.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r100.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r101);

        goto label97;

     label62:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLog(int)>(i0);

        $r88 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mCatSessionEndRegistrant>;

        if $r88 == null goto label97;

        $r103 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mCatSessionEndRegistrant>;

        $r89 = new android.os.AsyncResult;

        specialinvoke $r89.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r103.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r89);

        goto label97;

     label63:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLog(int)>(i0);

        $r93 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mCatProCmdRegistrant>;

        if $r93 == null goto label97;

        $r91 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mCatProCmdRegistrant>;

        $r90 = new android.os.AsyncResult;

        specialinvoke $r90.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r91.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r90);

        goto label97;

     label64:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLog(int)>(i0);

        $r94 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mCatEventRegistrant>;

        if $r94 == null goto label97;

        $r92 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mCatEventRegistrant>;

        $r95 = new android.os.AsyncResult;

        specialinvoke $r95.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r92.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r95);

        goto label97;

     label65:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r2);

        $r83 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mCatCallSetUpRegistrant>;

        if $r83 == null goto label97;

        $r81 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mCatCallSetUpRegistrant>;

        $r80 = new android.os.AsyncResult;

        specialinvoke $r80.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r81.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r80);

        goto label97;

     label66:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLog(int)>(i0);

        $r85 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mIccSmsFullRegistrant>;

        if $r85 == null goto label97;

        $r82 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mIccSmsFullRegistrant>;

        virtualinvoke $r82.<android.os.Registrant: void notifyRegistrant()>();

        goto label97;

     label67:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r2);

        $r86 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mIccRefreshRegistrants>;

        if $r86 == null goto label97;

        $r84 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mIccRefreshRegistrants>;

        $r87 = new android.os.AsyncResult;

        specialinvoke $r87.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r84.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r87);

        goto label97;

     label68:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r2);

        $r72 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mRingRegistrant>;

        if $r72 == null goto label97;

        $r74 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mRingRegistrant>;

        $r75 = new android.os.AsyncResult;

        specialinvoke $r75.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r74.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r75);

        goto label97;

     label69:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogvRet(int,java.lang.Object)>(i0, r2);

        $r69 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mRestrictedStateRegistrant>;

        if $r69 == null goto label97;

        $r71 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mRestrictedStateRegistrant>;

        $r68 = new android.os.AsyncResult;

        specialinvoke $r68.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r71.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r68);

        goto label97;

     label70:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLog(int)>(i0);

        $r78 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mIccStatusChangedRegistrants>;

        if $r78 == null goto label97;

        $r73 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mIccStatusChangedRegistrants>;

        virtualinvoke $r73.<android.os.RegistrantList: void notifyRegistrants()>();

        goto label97;

     label71:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLog(int)>(i0);

        r7 = (android.telephony.SmsMessage) r2;

        $r77 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mCdmaSmsRegistrant>;

        if $r77 == null goto label97;

        $r79 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mCdmaSmsRegistrant>;

        $r76 = new android.os.AsyncResult;

        specialinvoke $r76.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r7, null);

        virtualinvoke $r79.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r76);

        goto label97;

     label72:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLog(int)>(i0);

        $r64 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mGsmBroadcastSmsRegistrant>;

        if $r64 == null goto label97;

        $r66 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mGsmBroadcastSmsRegistrant>;

        $r67 = new android.os.AsyncResult;

        specialinvoke $r67.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r66.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r67);

        goto label97;

     label73:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLog(int)>(i0);

        $r70 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mIccSmsFullRegistrant>;

        if $r70 == null goto label97;

        $r65 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mIccSmsFullRegistrant>;

        virtualinvoke $r65.<android.os.Registrant: void notifyRegistrant()>();

        goto label97;

     label74:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLog(int)>(i0);

        $r58 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mEmergencyCallbackModeRegistrant>;

        if $r58 == null goto label97;

        $r59 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mEmergencyCallbackModeRegistrant>;

        virtualinvoke $r59.<android.os.Registrant: void notifyRegistrant()>();

        goto label97;

     label75:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r2);

        $r63 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mCallWaitingInfoRegistrants>;

        if $r63 == null goto label97;

        $r57 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mCallWaitingInfoRegistrants>;

        $r56 = new android.os.AsyncResult;

        specialinvoke $r56.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r57.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r56);

        goto label97;

     label76:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r2);

        $r60 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mOtaProvisionRegistrants>;

        if $r60 == null goto label97;

        $r62 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mOtaProvisionRegistrants>;

        $r61 = new android.os.AsyncResult;

        specialinvoke $r61.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r62.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r61);

        goto label97;

     label77:
        r8 = (java.util.ArrayList) r2;

     label78:
        goto label80;

     label79:
        $r145 := @caughtexception;

        r9 = $r145;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RILJ", "Unexpected exception casting to listInfoRecs", r9);

        goto label97;

     label80:
        r153 = virtualinvoke r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label81:
        $z2 = interfaceinvoke r153.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label82;

        $r51 = interfaceinvoke r153.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.android.internal.telephony.cdma.CdmaInformationRecords) $r51;

        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r10);

        specialinvoke r0.<com.android.internal.telephony.RIL: void notifyRegistrantsCdmaInfoRec(com.android.internal.telephony.cdma.CdmaInformationRecords)>(r10);

        goto label81;

     label82:
        goto label97;

     label83:
        $r48 = (byte[]) r2;

        $r52 = (byte[]) $r48;

        $r53 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>($r52);

        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogvRet(int,java.lang.Object)>(i0, $r53);

        $r54 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mUnsolOemHookRawRegistrant>;

        if $r54 == null goto label97;

        $r50 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mUnsolOemHookRawRegistrant>;

        $r55 = new android.os.AsyncResult;

        specialinvoke $r55.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r50.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r55);

        goto label97;

     label84:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogvRet(int,java.lang.Object)>(i0, r2);

        $r42 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mRingbackToneRegistrants>;

        if $r42 == null goto label97;

        $r41 = (int[]) r2;

        $r47 = (int[]) $r41;

        $i6 = $r47[0];

        if $i6 != 1 goto label85;

        $z1 = 1;

        goto label86;

     label85:
        $z1 = 0;

     label86:
        z3 = $z1;

        $r45 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mRingbackToneRegistrants>;

        $r46 = new android.os.AsyncResult;

        $r49 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z3);

        specialinvoke $r46.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r49, null);

        virtualinvoke $r45.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r46);

        goto label97;

     label87:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r2);

        $r37 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mResendIncallMuteRegistrants>;

        if $r37 == null goto label97;

        $r43 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mResendIncallMuteRegistrants>;

        $r44 = new android.os.AsyncResult;

        specialinvoke $r44.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r43.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r44);

        goto label97;

     label88:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r2);

        $r24 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mVoiceRadioTechChangedRegistrants>;

        if $r24 == null goto label97;

        $r29 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mVoiceRadioTechChangedRegistrants>;

        $r25 = new android.os.AsyncResult;

        specialinvoke $r25.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r29.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r25);

        goto label97;

     label89:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r2);

        $r40 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mCdmaSubscriptionChangedRegistrants>;

        if $r40 == null goto label97;

        $r38 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mCdmaSubscriptionChangedRegistrants>;

        $r39 = new android.os.AsyncResult;

        specialinvoke $r39.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r38.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r39);

        goto label97;

     label90:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r2);

        $r36 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mCdmaPrlChangedRegistrants>;

        if $r36 == null goto label97;

        $r34 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mCdmaPrlChangedRegistrants>;

        $r33 = new android.os.AsyncResult;

        specialinvoke $r33.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r34.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r33);

        goto label97;

     label91:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r2);

        $r30 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mExitEmergencyCallbackModeRegistrants>;

        if $r30 == null goto label97;

        $r35 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mExitEmergencyCallbackModeRegistrants>;

        $r31 = new android.os.AsyncResult;

        specialinvoke $r31.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r35.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r31);

        goto label97;

     label92:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r2);

        virtualinvoke r0.<com.android.internal.telephony.RIL: void setRadioPower(boolean,android.os.Message)>(0, null);

        $i4 = r0.<com.android.internal.telephony.RIL: int mPreferredNetworkType>;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void setPreferredNetworkType(int,android.os.Message)>($i4, null);

        $i3 = r0.<com.android.internal.telephony.RIL: int mCdmaSubscription>;

        virtualinvoke r0.<com.android.internal.telephony.RIL: void setCdmaSubscriptionSource(int,android.os.Message)>($i3, null);

        virtualinvoke r0.<com.android.internal.telephony.RIL: void setCellInfoListRate(int,android.os.Message)>(2147483647, null);

        $r28 = (int[]) r2;

        $r32 = (int[]) $r28;

        $i5 = $r32[0];

        specialinvoke r0.<com.android.internal.telephony.RIL: void notifyRegistrantsRilConnectionChanged(int)>($i5);

        goto label97;

     label93:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r2);

        $r22 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mRilCellInfoListRegistrants>;

        if $r22 == null goto label97;

        $r27 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mRilCellInfoListRegistrants>;

        $r26 = new android.os.AsyncResult;

        specialinvoke $r26.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r27.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r26);

        goto label97;

     label94:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r2);

        $r19 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mSubscriptionStatusRegistrants>;

        if $r19 == null goto label97;

        $r21 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mSubscriptionStatusRegistrants>;

        $r18 = new android.os.AsyncResult;

        specialinvoke $r18.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r21.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r18);

        goto label97;

     label95:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r2);

        $r14 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mSrvccStateRegistrants>;

        if $r14 == null goto label97;

        $r16 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mSrvccStateRegistrants>;

        $r17 = new android.os.AsyncResult;

        specialinvoke $r17.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r16.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r17);

        goto label97;

     label96:
        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(i0, r2);

        $r13 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mHardwareConfigChangeRegistrants>;

        if $r13 == null goto label97;

        $r15 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mHardwareConfigChangeRegistrants>;

        $r12 = new android.os.AsyncResult;

        specialinvoke $r12.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r15.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r12);

     label97:
        return;

        catch java.lang.Throwable from label01 to label43 with label44;
        catch java.lang.ClassCastException from label77 to label78 with label79;
    }

    private void notifyRegistrantsRilConnectionChanged(int)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        android.os.RegistrantList $r1, $r4;
        android.os.AsyncResult $r2;
        java.lang.Integer $r3;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r0.<com.android.internal.telephony.RIL: int mRilVersion> = i0;

        $r1 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mRilConnectedRegistrants>;

        if $r1 == null goto label1;

        $r4 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mRilConnectedRegistrants>;

        $r2 = new android.os.AsyncResult;

        $r3 = new java.lang.Integer;

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i0);

        specialinvoke $r2.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r3, null);

        virtualinvoke $r4.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r2);

     label1:
        return;
    }

    private java.lang.Object responseInts(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, i1, $i2;
        int[] r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2 = newarray (int)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2[i1] = $i2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r2;
    }

    private java.lang.Object responseVoid(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        return null;
    }

    private java.lang.Object responseCallForward(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        com.android.internal.telephony.CallForwardInfo[] r2;
        com.android.internal.telephony.CallForwardInfo $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2 = newarray (com.android.internal.telephony.CallForwardInfo)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = new com.android.internal.telephony.CallForwardInfo;

        specialinvoke $r3.<com.android.internal.telephony.CallForwardInfo: void <init>()>();

        r2[i1] = $r3;

        $r4 = r2[i1];

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r4.<com.android.internal.telephony.CallForwardInfo: int status> = $i2;

        $r5 = r2[i1];

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r5.<com.android.internal.telephony.CallForwardInfo: int reason> = $i3;

        $r6 = r2[i1];

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r6.<com.android.internal.telephony.CallForwardInfo: int serviceClass> = $i4;

        $r7 = r2[i1];

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r7.<com.android.internal.telephony.CallForwardInfo: int toa> = $i5;

        $r8 = r2[i1];

        $r10 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r8.<com.android.internal.telephony.CallForwardInfo: java.lang.String number> = $r10;

        $r9 = r2[i1];

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r9.<com.android.internal.telephony.CallForwardInfo: int timeSeconds> = $i6;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r2;
    }

    private java.lang.Object responseSuppServiceNotification(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        com.android.internal.telephony.gsm.SuppServiceNotification r2, $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r4;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        $r3 = new com.android.internal.telephony.gsm.SuppServiceNotification;

        specialinvoke $r3.<com.android.internal.telephony.gsm.SuppServiceNotification: void <init>()>();

        r2 = $r3;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.gsm.SuppServiceNotification: int notificationType> = $i0;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.gsm.SuppServiceNotification: int code> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.gsm.SuppServiceNotification: int index> = $i2;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.gsm.SuppServiceNotification: int type> = $i3;

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r2.<com.android.internal.telephony.gsm.SuppServiceNotification: java.lang.String number> = $r4;

        return r2;
    }

    private java.lang.Object responseCdmaSms(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        android.telephony.SmsMessage r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        r2 = staticinvoke <android.telephony.SmsMessage: android.telephony.SmsMessage newFromParcel(android.os.Parcel)>(r1);

        return r2;
    }

    private java.lang.Object responseString(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        java.lang.String r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        return r2;
    }

    private java.lang.Object responseStrings(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        java.lang.String[] r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String[] readStringArray()>();

        return r2;
    }

    private java.lang.Object responseRaw(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        byte[] r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        r2 = virtualinvoke r1.<android.os.Parcel: byte[] createByteArray()>();

        return r2;
    }

    private java.lang.Object responseSMS(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, i1;
        java.lang.String r2;
        com.android.internal.telephony.SmsResponse r3, $r4;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r4 = new com.android.internal.telephony.SmsResponse;

        specialinvoke $r4.<com.android.internal.telephony.SmsResponse: void <init>(int,java.lang.String,int)>(i0, r2, i1);

        r3 = $r4;

        return r3;
    }

    private java.lang.Object responseICC_IO(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, i1;
        java.lang.String r2;
        com.android.internal.telephony.uicc.IccIoResult $r3;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r3 = new com.android.internal.telephony.uicc.IccIoResult;

        specialinvoke $r3.<com.android.internal.telephony.uicc.IccIoResult: void <init>(int,int,java.lang.String)>(i0, i1, r2);

        return $r3;
    }

    private java.lang.Object responseICC_IOBase64(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, i1;
        java.lang.String r2;
        com.android.internal.telephony.uicc.IccIoResult $r3;
        byte[] $r4;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r3 = new com.android.internal.telephony.uicc.IccIoResult;

        $r4 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>(r2, 0);

        specialinvoke $r3.<com.android.internal.telephony.uicc.IccIoResult: void <init>(int,int,byte[])>(i0, i1, $r4);

        return $r3;
    }

    private java.lang.Object responseIccCardStatus(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        com.android.internal.telephony.uicc.IccCardApplicationStatus r2, $r6;
        com.android.internal.telephony.uicc.IccCardStatus r3, $r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        com.android.internal.telephony.uicc.IccCardApplicationStatus[] $r5, $r14;
        com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType $r7;
        com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState $r8;
        java.lang.String $r9, $r11;
        com.android.internal.telephony.uicc.IccCardApplicationStatus$PersoSubState $r10;
        com.android.internal.telephony.uicc.IccCardStatus$PinState $r12, $r13;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        $r4 = new com.android.internal.telephony.uicc.IccCardStatus;

        specialinvoke $r4.<com.android.internal.telephony.uicc.IccCardStatus: void <init>()>();

        r3 = $r4;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r3.<com.android.internal.telephony.uicc.IccCardStatus: void setCardState(int)>($i2);

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r3.<com.android.internal.telephony.uicc.IccCardStatus: void setUniversalPinState(int)>($i3);

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r3.<com.android.internal.telephony.uicc.IccCardStatus: int mGsmUmtsSubscriptionAppIndex> = $i4;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r3.<com.android.internal.telephony.uicc.IccCardStatus: int mCdmaSubscriptionAppIndex> = $i5;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r3.<com.android.internal.telephony.uicc.IccCardStatus: int mImsSubscriptionAppIndex> = $i6;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 <= 8 goto label1;

        i0 = 8;

     label1:
        $r5 = newarray (com.android.internal.telephony.uicc.IccCardApplicationStatus)[i0];

        r3.<com.android.internal.telephony.uicc.IccCardStatus: com.android.internal.telephony.uicc.IccCardApplicationStatus[] mApplications> = $r5;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r6 = new com.android.internal.telephony.uicc.IccCardApplicationStatus;

        specialinvoke $r6.<com.android.internal.telephony.uicc.IccCardApplicationStatus: void <init>()>();

        r2 = $r6;

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r7 = virtualinvoke r2.<com.android.internal.telephony.uicc.IccCardApplicationStatus: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType AppTypeFromRILInt(int)>($i7);

        r2.<com.android.internal.telephony.uicc.IccCardApplicationStatus: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppType app_type> = $r7;

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r8 = virtualinvoke r2.<com.android.internal.telephony.uicc.IccCardApplicationStatus: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState AppStateFromRILInt(int)>($i8);

        r2.<com.android.internal.telephony.uicc.IccCardApplicationStatus: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState app_state> = $r8;

        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r10 = virtualinvoke r2.<com.android.internal.telephony.uicc.IccCardApplicationStatus: com.android.internal.telephony.uicc.IccCardApplicationStatus$PersoSubState PersoSubstateFromRILInt(int)>($i9);

        r2.<com.android.internal.telephony.uicc.IccCardApplicationStatus: com.android.internal.telephony.uicc.IccCardApplicationStatus$PersoSubState perso_substate> = $r10;

        $r9 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r2.<com.android.internal.telephony.uicc.IccCardApplicationStatus: java.lang.String aid> = $r9;

        $r11 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r2.<com.android.internal.telephony.uicc.IccCardApplicationStatus: java.lang.String app_label> = $r11;

        $i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.uicc.IccCardApplicationStatus: int pin1_replaced> = $i10;

        $i11 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r12 = virtualinvoke r2.<com.android.internal.telephony.uicc.IccCardApplicationStatus: com.android.internal.telephony.uicc.IccCardStatus$PinState PinStateFromRILInt(int)>($i11);

        r2.<com.android.internal.telephony.uicc.IccCardApplicationStatus: com.android.internal.telephony.uicc.IccCardStatus$PinState pin1> = $r12;

        $i12 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r13 = virtualinvoke r2.<com.android.internal.telephony.uicc.IccCardApplicationStatus: com.android.internal.telephony.uicc.IccCardStatus$PinState PinStateFromRILInt(int)>($i12);

        r2.<com.android.internal.telephony.uicc.IccCardApplicationStatus: com.android.internal.telephony.uicc.IccCardStatus$PinState pin2> = $r13;

        $r14 = r3.<com.android.internal.telephony.uicc.IccCardStatus: com.android.internal.telephony.uicc.IccCardApplicationStatus[] mApplications>;

        $r14[i1] = r2;

        i1 = i1 + 1;

        goto label2;

     label3:
        return r3;
    }

    private java.lang.Object responseSimRefresh(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        com.android.internal.telephony.uicc.IccRefreshResponse r2, $r3;
        int $i0, $i1;
        java.lang.String $r4;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        $r3 = new com.android.internal.telephony.uicc.IccRefreshResponse;

        specialinvoke $r3.<com.android.internal.telephony.uicc.IccRefreshResponse: void <init>()>();

        r2 = $r3;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.uicc.IccRefreshResponse: int refreshResult> = $i0;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.uicc.IccRefreshResponse: int efId> = $i1;

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r2.<com.android.internal.telephony.uicc.IccRefreshResponse: java.lang.String aid> = $r4;

        return r2;
    }

    private java.lang.Object responseCallList(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        java.util.ArrayList r2, $r5;
        com.android.internal.telephony.DriverCall r3, $r9;
        byte[] r4, $r26, $r30, $r36;
        java.util.concurrent.atomic.AtomicBoolean $r6;
        boolean $z0, $z2, $z3, $z4, $z5, $z6;
        android.os.Registrant $r7, $r8;
        com.android.internal.telephony.DriverCall$State $r10;
        java.lang.String $r11, $r12, $r13, $r14, $r28, $r33, $r37, $r39, $r40;
        android.os.RegistrantList $r15, $r17;
        com.android.internal.telephony.UUSInfo $r16, $r18, $r19, $r20, $r22, $r25, $r27, $r29, $r43;
        java.lang.Object[] $r21;
        java.lang.Integer $r23, $r24, $r32;
        java.lang.StringBuilder $r31, $r34, $r35, $r38, $r41, $r42;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(i0);

        r2 = $r5;

        i2 = 0;

     label01:
        if i2 >= i0 goto label14;

        $r9 = new com.android.internal.telephony.DriverCall;

        specialinvoke $r9.<com.android.internal.telephony.DriverCall: void <init>()>();

        r3 = $r9;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r10 = staticinvoke <com.android.internal.telephony.DriverCall: com.android.internal.telephony.DriverCall$State stateFromCLCC(int)>($i5);

        r3.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.DriverCall$State state> = $r10;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r3.<com.android.internal.telephony.DriverCall: int index> = $i6;

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r3.<com.android.internal.telephony.DriverCall: int TOA> = $i7;

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i8 goto label02;

        $z5 = 1;

        goto label03;

     label02:
        $z5 = 0;

     label03:
        r3.<com.android.internal.telephony.DriverCall: boolean isMpty> = $z5;

        $i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i10 goto label04;

        $z6 = 1;

        goto label05;

     label04:
        $z6 = 0;

     label05:
        r3.<com.android.internal.telephony.DriverCall: boolean isMT> = $z6;

        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r3.<com.android.internal.telephony.DriverCall: int als> = $i9;

        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 != i1 goto label06;

        $z3 = 0;

        goto label07;

     label06:
        $z3 = 1;

     label07:
        r3.<com.android.internal.telephony.DriverCall: boolean isVoice> = $z3;

        $i11 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i11 goto label08;

        $z4 = 1;

        goto label09;

     label08:
        $z4 = 0;

     label09:
        r3.<com.android.internal.telephony.DriverCall: boolean isVoicePrivacy> = $z4;

        $r11 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r3.<com.android.internal.telephony.DriverCall: java.lang.String number> = $r11;

        i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i12 = staticinvoke <com.android.internal.telephony.DriverCall: int presentationFromCLIP(int)>(i3);

        r3.<com.android.internal.telephony.DriverCall: int numberPresentation> = $i12;

        $r12 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r3.<com.android.internal.telephony.DriverCall: java.lang.String name> = $r12;

        $i14 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i13 = staticinvoke <com.android.internal.telephony.DriverCall: int presentationFromCLIP(int)>($i14);

        r3.<com.android.internal.telephony.DriverCall: int namePresentation> = $i13;

        i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i4 != 1 goto label10;

        $r16 = new com.android.internal.telephony.UUSInfo;

        specialinvoke $r16.<com.android.internal.telephony.UUSInfo: void <init>()>();

        r3.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.UUSInfo uusInfo> = $r16;

        $r19 = r3.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.UUSInfo uusInfo>;

        $i17 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke $r19.<com.android.internal.telephony.UUSInfo: void setType(int)>($i17);

        $r18 = r3.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.UUSInfo uusInfo>;

        $i16 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke $r18.<com.android.internal.telephony.UUSInfo: void setDcs(int)>($i16);

        r4 = virtualinvoke r1.<android.os.Parcel: byte[] createByteArray()>();

        $r22 = r3.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.UUSInfo uusInfo>;

        virtualinvoke $r22.<com.android.internal.telephony.UUSInfo: void setUserData(byte[])>(r4);

        $r21 = newarray (java.lang.Object)[3];

        $r20 = r3.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.UUSInfo uusInfo>;

        $i18 = virtualinvoke $r20.<com.android.internal.telephony.UUSInfo: int getType()>();

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i18);

        $r21[0] = $r23;

        $r25 = r3.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.UUSInfo uusInfo>;

        $i19 = virtualinvoke $r25.<com.android.internal.telephony.UUSInfo: int getDcs()>();

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19);

        $r21[1] = $r24;

        $r27 = r3.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.UUSInfo uusInfo>;

        $r26 = virtualinvoke $r27.<com.android.internal.telephony.UUSInfo: byte[] getUserData()>();

        $i20 = lengthof $r26;

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i20);

        $r21[2] = $r32;

        $r33 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Incoming UUS : type=%d, dcs=%d, length=%d", $r21);

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLogv(java.lang.String)>($r33);

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incoming UUS : data (string)=");

        $r28 = new java.lang.String;

        $r29 = r3.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.UUSInfo uusInfo>;

        $r30 = virtualinvoke $r29.<com.android.internal.telephony.UUSInfo: byte[] getUserData()>();

        specialinvoke $r28.<java.lang.String: void <init>(byte[])>($r30);

        $r31 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r40 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLogv(java.lang.String)>($r40);

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incoming UUS : data (hex): ");

        $r43 = r3.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.UUSInfo uusInfo>;

        $r36 = virtualinvoke $r43.<com.android.internal.telephony.UUSInfo: byte[] getUserData()>();

        $r37 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>($r36);

        $r38 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLogv(java.lang.String)>($r39);

        goto label11;

     label10:
        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLogv(java.lang.String)>("Incoming UUS : NOT present!");

     label11:
        $r14 = r3.<com.android.internal.telephony.DriverCall: java.lang.String number>;

        $i15 = r3.<com.android.internal.telephony.DriverCall: int TOA>;

        $r13 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String stringFromStringAndTOA(java.lang.String,int)>($r14, $i15);

        r3.<com.android.internal.telephony.DriverCall: java.lang.String number> = $r13;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        $z2 = r3.<com.android.internal.telephony.DriverCall: boolean isVoicePrivacy>;

        if $z2 == 0 goto label12;

        $r15 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mVoicePrivacyOnRegistrants>;

        virtualinvoke $r15.<android.os.RegistrantList: void notifyRegistrants()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("InCall VoicePrivacy is enabled");

        goto label13;

     label12:
        $r17 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mVoicePrivacyOffRegistrants>;

        virtualinvoke $r17.<android.os.RegistrantList: void notifyRegistrants()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("InCall VoicePrivacy is disabled");

     label13:
        i2 = i2 + 1;

        goto label01;

     label14:
        staticinvoke <java.util.Collections: void sort(java.util.List)>(r2);

        if i0 != 0 goto label15;

        $r6 = r0.<com.android.internal.telephony.RIL: java.util.concurrent.atomic.AtomicBoolean mTestingEmergencyCall>;

        $z0 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>(0);

        if $z0 == 0 goto label15;

        $r7 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mEmergencyCallbackModeRegistrant>;

        if $r7 == null goto label15;

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("responseCallList: call ended, testing emergency call, notify ECM Registrants");

        $r8 = r0.<com.android.internal.telephony.RIL: android.os.Registrant mEmergencyCallbackModeRegistrant>;

        virtualinvoke $r8.<android.os.Registrant: void notifyRegistrant()>();

     label15:
        return r2;
    }

    private com.android.internal.telephony.dataconnection.DataCallResponse getDataCallResponse(android.os.Parcel, int)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        com.android.internal.telephony.dataconnection.DataCallResponse r2, $r7;
        java.lang.String r3, r4, r5, r6, $r8, $r9, $r14, $r18, r19;
        com.android.internal.telephony.dataconnection.DcFailCause $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String[] $r11, $r12, $r13, $r15, $r17;
        java.lang.RuntimeException $r16;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r7 = new com.android.internal.telephony.dataconnection.DataCallResponse;

        specialinvoke $r7.<com.android.internal.telephony.dataconnection.DataCallResponse: void <init>()>();

        r2 = $r7;

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: int version> = i0;

        if i0 >= 5 goto label2;

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: int cid> = $i8;

        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: int active> = $i9;

        $r18 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String type> = $r18;

        r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z5 != 0 goto label1;

        $r17 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String[] addresses> = $r17;

     label1:
        goto label8;

     label2:
        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: int status> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: int suggestedRetryTime> = $i2;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: int cid> = $i3;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: int active> = $i4;

        $r8 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String type> = $r8;

        $r9 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String ifname> = $r9;

        $i6 = r2.<com.android.internal.telephony.dataconnection.DataCallResponse: int status>;

        $r10 = <com.android.internal.telephony.dataconnection.DcFailCause: com.android.internal.telephony.dataconnection.DcFailCause NONE>;

        $i5 = virtualinvoke $r10.<com.android.internal.telephony.dataconnection.DcFailCause: int getErrorCode()>();

        if $i6 != $i5 goto label3;

        $r14 = r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String ifname>;

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r14);

        if $z4 == 0 goto label3;

        $r16 = new java.lang.RuntimeException;

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>("getDataCallResponse, no ifname");

        throw $r16;

     label3:
        r19 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r19);

        if $z0 != 0 goto label4;

        $r15 = virtualinvoke r19.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String[] addresses> = $r15;

     label4:
        r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z1 != 0 goto label5;

        $r12 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String[] dnses> = $r12;

     label5:
        r5 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z2 != 0 goto label6;

        $r13 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String[] gateways> = $r13;

     label6:
        if i0 < 10 goto label7;

        r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z3 != 0 goto label7;

        $r11 = virtualinvoke r6.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String[] pcscf> = $r11;

     label7:
        if i0 < 11 goto label8;

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: int mtu> = $i7;

     label8:
        return r2;
    }

    private java.lang.Object responseDataCallList(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        java.util.ArrayList r2, $r9;
        int i0, i1, i2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8;
        com.android.internal.telephony.dataconnection.DataCallResponse $r10;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("responseDataCallList ver=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" num=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r8);

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>(i1);

        r2 = $r9;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r10 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.dataconnection.DataCallResponse getDataCallResponse(android.os.Parcel,int)>(r1, i0);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        i2 = i2 + 1;

        goto label1;

     label2:
        return r2;
    }

    private java.lang.Object responseSetupDataCall(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, i1, $i2;
        com.android.internal.telephony.dataconnection.DataCallResponse r2, $r10;
        java.lang.String r3, r4, $r9, $r11, $r12, $r13, $r16, $r20, $r28, r31, r32;
        java.lang.RuntimeException $r5, $r30;
        java.lang.StringBuilder $r6, $r7, $r8, $r14, $r15, $r17, $r19, $r21, $r22, $r23, $r24, $r27;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String[] $r18, $r25, $r26, $r29;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 >= 5 goto label6;

        $r10 = new com.android.internal.telephony.dataconnection.DataCallResponse;

        specialinvoke $r10.<com.android.internal.telephony.dataconnection.DataCallResponse: void <init>()>();

        r2 = $r10;

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: int version> = i0;

        $r11 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: int cid> = $i2;

        $r13 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String ifname> = $r13;

        $r12 = r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String ifname>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r12);

        if $z0 == 0 goto label1;

        $r30 = new java.lang.RuntimeException;

        specialinvoke $r30.<java.lang.RuntimeException: void <init>(java.lang.String)>("RIL_REQUEST_SETUP_DATA_CALL response, no ifname");

        throw $r30;

     label1:
        r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z1 != 0 goto label2;

        $r29 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String[] addresses> = $r29;

     label2:
        if i1 < 4 goto label3;

        r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("responseSetupDataCall got dnses=");

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r28);

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z4 != 0 goto label3;

        $r26 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String[] dnses> = $r26;

     label3:
        if i1 < 5 goto label4;

        r31 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("responseSetupDataCall got gateways=");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r20);

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r31);

        if $z3 != 0 goto label4;

        $r25 = virtualinvoke r31.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String[] gateways> = $r25;

     label4:
        if i1 < 6 goto label5;

        r32 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("responseSetupDataCall got pcscf=");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r16);

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r32);

        if $z2 != 0 goto label5;

        $r18 = virtualinvoke r32.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r2.<com.android.internal.telephony.dataconnection.DataCallResponse: java.lang.String[] pcscf> = $r18;

     label5:
        goto label8;

     label6:
        if i1 == 1 goto label7;

        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RIL_REQUEST_SETUP_DATA_CALL response expecting 1 RIL_Data_Call_response_v5 got ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label7:
        r2 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.dataconnection.DataCallResponse getDataCallResponse(android.os.Parcel,int)>(r1, i0);

     label8:
        return r2;
    }

    private java.lang.Object responseOperatorInfos(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        java.lang.String[] r2, $r5;
        java.util.ArrayList r3, $r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.Object $r4;
        com.android.internal.telephony.OperatorInfo $r7;
        java.lang.String $r8, $r9, $r10, $r11, $r16;
        java.lang.RuntimeException $r12;
        java.lang.StringBuilder $r13, $r14, $r15, $r17;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        $r4 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseStrings(android.os.Parcel)>(r1);

        $r5 = (java.lang.String[]) $r4;

        r2 = (java.lang.String[]) $r5;

        $i1 = lengthof r2;

        $i2 = $i1 % 4;

        if $i2 == 0 goto label1;

        $r12 = new java.lang.RuntimeException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RIL_REQUEST_QUERY_AVAILABLE_NETWORKS: invalid response. Got ");

        $i10 = lengthof r2;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" strings, expected multible of 4");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r16);

        throw $r12;

     label1:
        $r6 = new java.util.ArrayList;

        $i3 = lengthof r2;

        $i4 = $i3 / 4;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i4);

        r3 = $r6;

        i0 = 0;

     label2:
        $i5 = lengthof r2;

        if i0 >= $i5 goto label3;

        $r7 = new com.android.internal.telephony.OperatorInfo;

        $i6 = i0 + 0;

        $r10 = r2[$i6];

        $i7 = i0 + 1;

        $r11 = r2[$i7];

        $i9 = i0 + 2;

        $r8 = r2[$i9];

        $i8 = i0 + 3;

        $r9 = r2[$i8];

        specialinvoke $r7.<com.android.internal.telephony.OperatorInfo: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r10, $r11, $r8, $r9);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        i0 = i0 + 4;

        goto label2;

     label3:
        return r3;
    }

    private java.lang.Object responseCellList(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, i1, i3;
        java.lang.String r2, r5;
        java.util.ArrayList r3, $r6;
        android.telephony.NeighboringCellInfo r4, $r7;
        byte b2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r3 = $r6;

        r5 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("gsm.network.type", "unknown");

        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("GPRS");

        if $z0 == 0 goto label1;

        b2 = 1;

        goto label7;

     label1:
        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("EDGE");

        if $z1 == 0 goto label2;

        b2 = 2;

        goto label7;

     label2:
        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("UMTS");

        if $z2 == 0 goto label3;

        b2 = 3;

        goto label7;

     label3:
        $z4 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("HSDPA");

        if $z4 == 0 goto label4;

        b2 = 8;

        goto label7;

     label4:
        $z3 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("HSUPA");

        if $z3 == 0 goto label5;

        b2 = 9;

        goto label7;

     label5:
        $z5 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("HSPA");

        if $z5 == 0 goto label6;

        b2 = 10;

        goto label7;

     label6:
        b2 = 0;

     label7:
        if b2 == 0 goto label9;

        i3 = 0;

     label8:
        if i3 >= i0 goto label9;

        i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r7 = new android.telephony.NeighboringCellInfo;

        specialinvoke $r7.<android.telephony.NeighboringCellInfo: void <init>(int,java.lang.String,int)>(i1, r2, b2);

        r4 = $r7;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        i3 = i3 + 1;

        goto label8;

     label9:
        return r3;
    }

    private java.lang.Object responseGetPreferredNetworkType(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int[] r2, $r4;
        java.lang.Object $r3;
        int $i0, $i1;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        $r3 = specialinvoke r0.<com.android.internal.telephony.RIL: java.lang.Object responseInts(android.os.Parcel)>(r1);

        $r4 = (int[]) $r3;

        r2 = (int[]) $r4;

        $i0 = lengthof r2;

        if $i0 < 1 goto label1;

        $i1 = r2[0];

        r0.<com.android.internal.telephony.RIL: int mPreferredNetworkType> = $i1;

     label1:
        return r2;
    }

    private java.lang.Object responseGmsBroadcastConfig(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, i1, i2, i3, i4, i5, $i6;
        java.util.ArrayList r2, $r4;
        com.android.internal.telephony.gsm.SmsBroadcastConfigInfo r3, $r5;
        boolean z0, $z2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(i0);

        r2 = $r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i6 != 1 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z0 = $z2;

        $r5 = new com.android.internal.telephony.gsm.SmsBroadcastConfigInfo;

        specialinvoke $r5.<com.android.internal.telephony.gsm.SmsBroadcastConfigInfo: void <init>(int,int,int,int,boolean)>(i2, i3, i4, i5, z0);

        r3 = $r5;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        i1 = i1 + 1;

        goto label1;

     label4:
        return r2;
    }

    private java.lang.Object responseCdmaBroadcastConfig(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        int[] r2;
        byte b1;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 != 0 goto label3;

        b1 = 94;

        r2 = newarray (int)[b1];

        r2[0] = 31;

        i2 = 1;

     label1:
        if i2 >= b1 goto label2;

        $i6 = i2 + 0;

        $i5 = i2 / 3;

        r2[$i6] = $i5;

        $i7 = i2 + 1;

        r2[$i7] = 1;

        $i8 = i2 + 2;

        r2[$i8] = 0;

        i2 = i2 + 3;

        goto label1;

     label2:
        goto label5;

     label3:
        $i3 = i0 * 3;

        i9 = $i3 + 1;

        r2 = newarray (int)[i9];

        r2[0] = i0;

        i10 = 1;

     label4:
        if i10 >= i9 goto label5;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2[i10] = $i4;

        i10 = i10 + 1;

        goto label4;

     label5:
        return r2;
    }

    private java.lang.Object responseSignalStrength(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        android.telephony.SignalStrength r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        r2 = staticinvoke <android.telephony.SignalStrength: android.telephony.SignalStrength makeSignalStrengthFromRilParcel(android.os.Parcel)>(r1);

        return r2;
    }

    private java.util.ArrayList responseCdmaInformationRecord(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, i1;
        java.util.ArrayList r2, $r4;
        com.android.internal.telephony.cdma.CdmaInformationRecords r3, $r5;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(i0);

        r2 = $r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r5 = new com.android.internal.telephony.cdma.CdmaInformationRecords;

        specialinvoke $r5.<com.android.internal.telephony.cdma.CdmaInformationRecords: void <init>(android.os.Parcel)>(r1);

        r3 = $r5;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r2;
    }

    private java.lang.Object responseCdmaCallWaiting(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        com.android.internal.telephony.cdma.CdmaCallWaitingNotification r2, $r3;
        java.lang.String $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        $r3 = new com.android.internal.telephony.cdma.CdmaCallWaitingNotification;

        specialinvoke $r3.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: void <init>()>();

        r2 = $r3;

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: java.lang.String number> = $r4;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i1 = staticinvoke <com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int presentationFromCLIP(int)>($i0);

        r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int numberPresentation> = $i1;

        $r5 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: java.lang.String name> = $r5;

        $i2 = r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int numberPresentation>;

        r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int namePresentation> = $i2;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int isPresent> = $i3;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int signalType> = $i4;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int alertPitch> = $i5;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int signal> = $i6;

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int numberType> = $i7;

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int numberPlan> = $i8;

        return r2;
    }

    private java.lang.Object responseCallRing(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        char[] r2;
        int $i0, $i2, $i4, $i6;
        char $c1, $c3, $c5, $c7;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        r2 = newarray (char)[4];

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $c1 = (char) $i0;

        r2[0] = $c1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $c3 = (char) $i2;

        r2[1] = $c3;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $c5 = (char) $i4;

        r2[2] = $c5;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $c7 = (char) $i6;

        r2[3] = $c7;

        return r2;
    }

    private void notifyRegistrantsCdmaInfoRec(com.android.internal.telephony.cdma.CdmaInformationRecords)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.cdma.CdmaInformationRecords r1;
        short s0;
        java.lang.Object $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r11, $r13, $r14, $r16, $r21, $r23, $r25, $r27, $r28, $r33, $r34, $r39, $r41, $r43;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.os.RegistrantList $r9, $r12, $r15, $r18, $r19, $r22, $r26, $r30, $r31, $r32, $r35, $r36, $r37, $r40;
        android.os.AsyncResult $r10, $r17, $r20, $r24, $r29, $r38, $r42;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: com.android.internal.telephony.cdma.CdmaInformationRecords;

        s0 = 1027;

        $r2 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        $z0 = $r2 instanceof com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaDisplayInfoRec;

        if $z0 == 0 goto label1;

        $r37 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mDisplayInfoRegistrants>;

        if $r37 == null goto label7;

        $r43 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(s0, $r43);

        $r40 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mDisplayInfoRegistrants>;

        $r42 = new android.os.AsyncResult;

        $r41 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke $r42.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r41, null);

        virtualinvoke $r40.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r42);

        goto label7;

     label1:
        $r3 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        $z1 = $r3 instanceof com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaSignalInfoRec;

        if $z1 == 0 goto label2;

        $r32 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mSignalInfoRegistrants>;

        if $r32 == null goto label7;

        $r33 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(s0, $r33);

        $r36 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mSignalInfoRegistrants>;

        $r38 = new android.os.AsyncResult;

        $r39 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke $r38.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r39, null);

        virtualinvoke $r36.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r38);

        goto label7;

     label2:
        $r4 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        $z2 = $r4 instanceof com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaNumberInfoRec;

        if $z2 == 0 goto label3;

        $r31 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mNumberInfoRegistrants>;

        if $r31 == null goto label7;

        $r28 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(s0, $r28);

        $r35 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mNumberInfoRegistrants>;

        $r29 = new android.os.AsyncResult;

        $r34 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke $r29.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r34, null);

        virtualinvoke $r35.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r29);

        goto label7;

     label3:
        $r5 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        $z3 = $r5 instanceof com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaRedirectingNumberInfoRec;

        if $z3 == 0 goto label4;

        $r26 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mRedirNumInfoRegistrants>;

        if $r26 == null goto label7;

        $r27 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(s0, $r27);

        $r30 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mRedirNumInfoRegistrants>;

        $r24 = new android.os.AsyncResult;

        $r25 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke $r24.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r25, null);

        virtualinvoke $r30.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r24);

        goto label7;

     label4:
        $r6 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        $z4 = $r6 instanceof com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaLineControlInfoRec;

        if $z4 == 0 goto label5;

        $r18 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mLineControlInfoRegistrants>;

        if $r18 == null goto label7;

        $r21 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(s0, $r21);

        $r22 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mLineControlInfoRegistrants>;

        $r20 = new android.os.AsyncResult;

        $r23 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke $r20.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r23, null);

        virtualinvoke $r22.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r20);

        goto label7;

     label5:
        $r7 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        $z5 = $r7 instanceof com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaT53ClirInfoRec;

        if $z5 == 0 goto label6;

        $r15 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mT53ClirInfoRegistrants>;

        if $r15 == null goto label7;

        $r14 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(s0, $r14);

        $r19 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mT53ClirInfoRegistrants>;

        $r17 = new android.os.AsyncResult;

        $r16 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke $r17.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r16, null);

        virtualinvoke $r19.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r17);

        goto label7;

     label6:
        $r8 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        $z6 = $r8 instanceof com.android.internal.telephony.cdma.CdmaInformationRecords$CdmaT53AudioControlInfoRec;

        if $z6 == 0 goto label7;

        $r9 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mT53AudCntrlInfoRegistrants>;

        if $r9 == null goto label7;

        $r11 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke r0.<com.android.internal.telephony.RIL: void unsljLogRet(int,java.lang.Object)>(s0, $r11);

        $r12 = r0.<com.android.internal.telephony.RIL: android.os.RegistrantList mT53AudCntrlInfoRegistrants>;

        $r10 = new android.os.AsyncResult;

        $r13 = r1.<com.android.internal.telephony.cdma.CdmaInformationRecords: java.lang.Object record>;

        specialinvoke $r10.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, $r13, null);

        virtualinvoke $r12.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r10);

     label7:
        return;
    }

    private java.util.ArrayList responseCellInfoList(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, i1;
        java.util.ArrayList r2, $r4;
        android.telephony.CellInfo r3;
        android.os.Parcelable$Creator $r5;
        java.lang.Object $r6;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(i0);

        r2 = $r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r5 = <android.telephony.CellInfo: android.os.Parcelable$Creator CREATOR>;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r3 = (android.telephony.CellInfo) $r6;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r2;
    }

    private java.lang.Object responseHardwareConfig(android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.util.ArrayList r2, $r4;
        com.android.internal.telephony.HardwareConfig r3, $r5, $r8;
        java.lang.String $r6, $r7, $r9, $r13;
        java.lang.RuntimeException $r10;
        java.lang.StringBuilder $r11, $r12, $r14;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Parcel;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(i0);

        r2 = $r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        lookupswitch(i2)
        {
            case 0: goto label2;
            case 1: goto label3;
            default: goto label4;
        };

     label2:
        $r8 = new com.android.internal.telephony.HardwareConfig;

        specialinvoke $r8.<com.android.internal.telephony.HardwareConfig: void <init>(int)>(i2);

        r3 = $r8;

        $r9 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r3.<com.android.internal.telephony.HardwareConfig: void assignModem(java.lang.String,int,int,int,int,int,int)>($r9, $i4, $i6, $i5, $i8, $i7, $i9);

        goto label5;

     label3:
        $r5 = new com.android.internal.telephony.HardwareConfig;

        specialinvoke $r5.<com.android.internal.telephony.HardwareConfig: void <init>(int)>(i2);

        r3 = $r5;

        $r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r7 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r3.<com.android.internal.telephony.HardwareConfig: void assignSim(java.lang.String,int,java.lang.String)>($r6, $i3, $r7);

        goto label5;

     label4:
        $r10 = new java.lang.RuntimeException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RIL_REQUEST_GET_HARDWARE_CONFIG invalid hardward type:");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13);

        throw $r10;

     label5:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        i1 = i1 + 1;

        goto label1;

     label6:
        return r2;
    }

    static java.lang.String requestToString(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label001;
            case 2: goto label002;
            case 3: goto label003;
            case 4: goto label004;
            case 5: goto label005;
            case 6: goto label006;
            case 7: goto label007;
            case 8: goto label008;
            case 9: goto label009;
            case 10: goto label010;
            case 11: goto label011;
            case 12: goto label012;
            case 13: goto label013;
            case 14: goto label014;
            case 15: goto label015;
            case 16: goto label016;
            case 17: goto label017;
            case 18: goto label018;
            case 19: goto label019;
            case 20: goto label020;
            case 21: goto label021;
            case 22: goto label022;
            case 23: goto label023;
            case 24: goto label024;
            case 25: goto label025;
            case 26: goto label026;
            case 27: goto label027;
            case 28: goto label028;
            case 29: goto label029;
            case 30: goto label030;
            case 31: goto label031;
            case 32: goto label032;
            case 33: goto label033;
            case 34: goto label034;
            case 35: goto label035;
            case 36: goto label036;
            case 37: goto label037;
            case 38: goto label038;
            case 39: goto label039;
            case 40: goto label040;
            case 41: goto label041;
            case 42: goto label042;
            case 43: goto label043;
            case 44: goto label044;
            case 45: goto label045;
            case 46: goto label046;
            case 47: goto label047;
            case 48: goto label048;
            case 49: goto label049;
            case 50: goto label050;
            case 51: goto label051;
            case 52: goto label052;
            case 53: goto label053;
            case 54: goto label054;
            case 55: goto label055;
            case 56: goto label056;
            case 57: goto label057;
            case 58: goto label058;
            case 59: goto label059;
            case 60: goto label060;
            case 61: goto label061;
            case 62: goto label062;
            case 63: goto label063;
            case 64: goto label064;
            case 65: goto label065;
            case 66: goto label066;
            case 67: goto label067;
            case 68: goto label068;
            case 69: goto label069;
            case 70: goto label070;
            case 71: goto label071;
            case 72: goto label072;
            case 73: goto label073;
            case 74: goto label074;
            case 75: goto label075;
            case 76: goto label076;
            case 77: goto label077;
            case 78: goto label078;
            case 79: goto label079;
            case 80: goto label080;
            case 81: goto label081;
            case 82: goto label082;
            case 83: goto label083;
            case 84: goto label084;
            case 85: goto label085;
            case 86: goto label093;
            case 87: goto label086;
            case 88: goto label087;
            case 89: goto label088;
            case 90: goto label089;
            case 91: goto label092;
            case 92: goto label090;
            case 93: goto label091;
            case 94: goto label094;
            case 95: goto label095;
            case 96: goto label096;
            case 97: goto label097;
            case 98: goto label098;
            case 99: goto label101;
            case 100: goto label099;
            case 101: goto label100;
            case 102: goto label102;
            case 103: goto label103;
            case 104: goto label104;
            case 105: goto label105;
            case 106: goto label106;
            case 107: goto label107;
            case 108: goto label108;
            case 109: goto label109;
            case 110: goto label110;
            case 111: goto label111;
            case 112: goto label113;
            case 113: goto label114;
            case 114: goto label115;
            case 115: goto label116;
            case 116: goto label117;
            case 117: goto label118;
            case 118: goto label119;
            case 119: goto label120;
            case 120: goto label121;
            case 121: goto label122;
            case 122: goto label123;
            case 123: goto label124;
            case 124: goto label125;
            case 125: goto label126;
            case 126: goto label128;
            case 127: goto label128;
            case 128: goto label112;
            case 129: goto label127;
            default: goto label128;
        };

     label001:
        return "GET_SIM_STATUS";

     label002:
        return "ENTER_SIM_PIN";

     label003:
        return "ENTER_SIM_PUK";

     label004:
        return "ENTER_SIM_PIN2";

     label005:
        return "ENTER_SIM_PUK2";

     label006:
        return "CHANGE_SIM_PIN";

     label007:
        return "CHANGE_SIM_PIN2";

     label008:
        return "ENTER_NETWORK_DEPERSONALIZATION";

     label009:
        return "GET_CURRENT_CALLS";

     label010:
        return "DIAL";

     label011:
        return "GET_IMSI";

     label012:
        return "HANGUP";

     label013:
        return "HANGUP_WAITING_OR_BACKGROUND";

     label014:
        return "HANGUP_FOREGROUND_RESUME_BACKGROUND";

     label015:
        return "REQUEST_SWITCH_WAITING_OR_HOLDING_AND_ACTIVE";

     label016:
        return "CONFERENCE";

     label017:
        return "UDUB";

     label018:
        return "LAST_CALL_FAIL_CAUSE";

     label019:
        return "SIGNAL_STRENGTH";

     label020:
        return "VOICE_REGISTRATION_STATE";

     label021:
        return "DATA_REGISTRATION_STATE";

     label022:
        return "OPERATOR";

     label023:
        return "RADIO_POWER";

     label024:
        return "DTMF";

     label025:
        return "SEND_SMS";

     label026:
        return "SEND_SMS_EXPECT_MORE";

     label027:
        return "SETUP_DATA_CALL";

     label028:
        return "SIM_IO";

     label029:
        return "SEND_USSD";

     label030:
        return "CANCEL_USSD";

     label031:
        return "GET_CLIR";

     label032:
        return "SET_CLIR";

     label033:
        return "QUERY_CALL_FORWARD_STATUS";

     label034:
        return "SET_CALL_FORWARD";

     label035:
        return "QUERY_CALL_WAITING";

     label036:
        return "SET_CALL_WAITING";

     label037:
        return "SMS_ACKNOWLEDGE";

     label038:
        return "GET_IMEI";

     label039:
        return "GET_IMEISV";

     label040:
        return "ANSWER";

     label041:
        return "DEACTIVATE_DATA_CALL";

     label042:
        return "QUERY_FACILITY_LOCK";

     label043:
        return "SET_FACILITY_LOCK";

     label044:
        return "CHANGE_BARRING_PASSWORD";

     label045:
        return "QUERY_NETWORK_SELECTION_MODE";

     label046:
        return "SET_NETWORK_SELECTION_AUTOMATIC";

     label047:
        return "SET_NETWORK_SELECTION_MANUAL";

     label048:
        return "QUERY_AVAILABLE_NETWORKS ";

     label049:
        return "DTMF_START";

     label050:
        return "DTMF_STOP";

     label051:
        return "BASEBAND_VERSION";

     label052:
        return "SEPARATE_CONNECTION";

     label053:
        return "SET_MUTE";

     label054:
        return "GET_MUTE";

     label055:
        return "QUERY_CLIP";

     label056:
        return "LAST_DATA_CALL_FAIL_CAUSE";

     label057:
        return "DATA_CALL_LIST";

     label058:
        return "RESET_RADIO";

     label059:
        return "OEM_HOOK_RAW";

     label060:
        return "OEM_HOOK_STRINGS";

     label061:
        return "SCREEN_STATE";

     label062:
        return "SET_SUPP_SVC_NOTIFICATION";

     label063:
        return "WRITE_SMS_TO_SIM";

     label064:
        return "DELETE_SMS_ON_SIM";

     label065:
        return "SET_BAND_MODE";

     label066:
        return "QUERY_AVAILABLE_BAND_MODE";

     label067:
        return "REQUEST_STK_GET_PROFILE";

     label068:
        return "REQUEST_STK_SET_PROFILE";

     label069:
        return "REQUEST_STK_SEND_ENVELOPE_COMMAND";

     label070:
        return "REQUEST_STK_SEND_TERMINAL_RESPONSE";

     label071:
        return "REQUEST_STK_HANDLE_CALL_SETUP_REQUESTED_FROM_SIM";

     label072:
        return "REQUEST_EXPLICIT_CALL_TRANSFER";

     label073:
        return "REQUEST_SET_PREFERRED_NETWORK_TYPE";

     label074:
        return "REQUEST_GET_PREFERRED_NETWORK_TYPE";

     label075:
        return "REQUEST_GET_NEIGHBORING_CELL_IDS";

     label076:
        return "REQUEST_SET_LOCATION_UPDATES";

     label077:
        return "RIL_REQUEST_CDMA_SET_SUBSCRIPTION_SOURCE";

     label078:
        return "RIL_REQUEST_CDMA_SET_ROAMING_PREFERENCE";

     label079:
        return "RIL_REQUEST_CDMA_QUERY_ROAMING_PREFERENCE";

     label080:
        return "RIL_REQUEST_SET_TTY_MODE";

     label081:
        return "RIL_REQUEST_QUERY_TTY_MODE";

     label082:
        return "RIL_REQUEST_CDMA_SET_PREFERRED_VOICE_PRIVACY_MODE";

     label083:
        return "RIL_REQUEST_CDMA_QUERY_PREFERRED_VOICE_PRIVACY_MODE";

     label084:
        return "RIL_REQUEST_CDMA_FLASH";

     label085:
        return "RIL_REQUEST_CDMA_BURST_DTMF";

     label086:
        return "RIL_REQUEST_CDMA_SEND_SMS";

     label087:
        return "RIL_REQUEST_CDMA_SMS_ACKNOWLEDGE";

     label088:
        return "RIL_REQUEST_GSM_GET_BROADCAST_CONFIG";

     label089:
        return "RIL_REQUEST_GSM_SET_BROADCAST_CONFIG";

     label090:
        return "RIL_REQUEST_CDMA_GET_BROADCAST_CONFIG";

     label091:
        return "RIL_REQUEST_CDMA_SET_BROADCAST_CONFIG";

     label092:
        return "RIL_REQUEST_GSM_BROADCAST_ACTIVATION";

     label093:
        return "RIL_REQUEST_CDMA_VALIDATE_AND_WRITE_AKEY";

     label094:
        return "RIL_REQUEST_CDMA_BROADCAST_ACTIVATION";

     label095:
        return "RIL_REQUEST_CDMA_SUBSCRIPTION";

     label096:
        return "RIL_REQUEST_CDMA_WRITE_SMS_TO_RUIM";

     label097:
        return "RIL_REQUEST_CDMA_DELETE_SMS_ON_RUIM";

     label098:
        return "RIL_REQUEST_DEVICE_IDENTITY";

     label099:
        return "RIL_REQUEST_GET_SMSC_ADDRESS";

     label100:
        return "RIL_REQUEST_SET_SMSC_ADDRESS";

     label101:
        return "REQUEST_EXIT_EMERGENCY_CALLBACK_MODE";

     label102:
        return "RIL_REQUEST_REPORT_SMS_MEMORY_STATUS";

     label103:
        return "RIL_REQUEST_REPORT_STK_SERVICE_IS_RUNNING";

     label104:
        return "RIL_REQUEST_CDMA_GET_SUBSCRIPTION_SOURCE";

     label105:
        return "RIL_REQUEST_ISIM_AUTHENTICATION";

     label106:
        return "RIL_REQUEST_ACKNOWLEDGE_INCOMING_GSM_SMS_WITH_PDU";

     label107:
        return "RIL_REQUEST_STK_SEND_ENVELOPE_WITH_STATUS";

     label108:
        return "RIL_REQUEST_VOICE_RADIO_TECH";

     label109:
        return "RIL_REQUEST_GET_CELL_INFO_LIST";

     label110:
        return "RIL_REQUEST_SET_CELL_INFO_LIST_RATE";

     label111:
        return "RIL_REQUEST_SET_INITIAL_ATTACH_APN";

     label112:
        return "RIL_REQUEST_SET_DATA_PROFILE";

     label113:
        return "RIL_REQUEST_IMS_REGISTRATION_STATE";

     label114:
        return "RIL_REQUEST_IMS_SEND_SMS";

     label115:
        return "RIL_REQUEST_SIM_TRANSMIT_APDU_BASIC";

     label116:
        return "RIL_REQUEST_SIM_OPEN_CHANNEL";

     label117:
        return "RIL_REQUEST_SIM_CLOSE_CHANNEL";

     label118:
        return "RIL_REQUEST_SIM_TRANSMIT_APDU_CHANNEL";

     label119:
        return "RIL_REQUEST_NV_READ_ITEM";

     label120:
        return "RIL_REQUEST_NV_WRITE_ITEM";

     label121:
        return "RIL_REQUEST_NV_WRITE_CDMA_PRL";

     label122:
        return "RIL_REQUEST_NV_RESET_CONFIG";

     label123:
        return "RIL_REQUEST_SET_UICC_SUBSCRIPTION";

     label124:
        return "RIL_REQUEST_ALLOW_DATA";

     label125:
        return "GET_HARDWARE_CONFIG";

     label126:
        return "RIL_REQUEST_SIM_AUTHENTICATION";

     label127:
        return "RIL_REQUEST_SHUTDOWN";

     label128:
        return "<unknown request>";
    }

    static java.lang.String responseToString(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1000: goto label01;
            case 1001: goto label02;
            case 1002: goto label03;
            case 1003: goto label04;
            case 1004: goto label05;
            case 1005: goto label06;
            case 1006: goto label07;
            case 1007: goto label08;
            case 1008: goto label09;
            case 1009: goto label10;
            case 1010: goto label11;
            case 1011: goto label12;
            case 1012: goto label13;
            case 1013: goto label14;
            case 1014: goto label15;
            case 1015: goto label16;
            case 1016: goto label17;
            case 1017: goto label18;
            case 1018: goto label19;
            case 1019: goto label20;
            case 1020: goto label21;
            case 1021: goto label22;
            case 1022: goto label23;
            case 1023: goto label24;
            case 1024: goto label25;
            case 1025: goto label26;
            case 1026: goto label27;
            case 1027: goto label28;
            case 1028: goto label29;
            case 1029: goto label30;
            case 1030: goto label31;
            case 1031: goto label32;
            case 1032: goto label33;
            case 1033: goto label34;
            case 1034: goto label35;
            case 1035: goto label36;
            case 1036: goto label37;
            case 1037: goto label38;
            case 1038: goto label39;
            case 1039: goto label40;
            case 1040: goto label41;
            default: goto label42;
        };

     label01:
        return "UNSOL_RESPONSE_RADIO_STATE_CHANGED";

     label02:
        return "UNSOL_RESPONSE_CALL_STATE_CHANGED";

     label03:
        return "UNSOL_RESPONSE_VOICE_NETWORK_STATE_CHANGED";

     label04:
        return "UNSOL_RESPONSE_NEW_SMS";

     label05:
        return "UNSOL_RESPONSE_NEW_SMS_STATUS_REPORT";

     label06:
        return "UNSOL_RESPONSE_NEW_SMS_ON_SIM";

     label07:
        return "UNSOL_ON_USSD";

     label08:
        return "UNSOL_ON_USSD_REQUEST";

     label09:
        return "UNSOL_NITZ_TIME_RECEIVED";

     label10:
        return "UNSOL_SIGNAL_STRENGTH";

     label11:
        return "UNSOL_DATA_CALL_LIST_CHANGED";

     label12:
        return "UNSOL_SUPP_SVC_NOTIFICATION";

     label13:
        return "UNSOL_STK_SESSION_END";

     label14:
        return "UNSOL_STK_PROACTIVE_COMMAND";

     label15:
        return "UNSOL_STK_EVENT_NOTIFY";

     label16:
        return "UNSOL_STK_CALL_SETUP";

     label17:
        return "UNSOL_SIM_SMS_STORAGE_FULL";

     label18:
        return "UNSOL_SIM_REFRESH";

     label19:
        return "UNSOL_CALL_RING";

     label20:
        return "UNSOL_RESPONSE_SIM_STATUS_CHANGED";

     label21:
        return "UNSOL_RESPONSE_CDMA_NEW_SMS";

     label22:
        return "UNSOL_RESPONSE_NEW_BROADCAST_SMS";

     label23:
        return "UNSOL_CDMA_RUIM_SMS_STORAGE_FULL";

     label24:
        return "UNSOL_RESTRICTED_STATE_CHANGED";

     label25:
        return "UNSOL_ENTER_EMERGENCY_CALLBACK_MODE";

     label26:
        return "UNSOL_CDMA_CALL_WAITING";

     label27:
        return "UNSOL_CDMA_OTA_PROVISION_STATUS";

     label28:
        return "UNSOL_CDMA_INFO_REC";

     label29:
        return "UNSOL_OEM_HOOK_RAW";

     label30:
        return "UNSOL_RINGBACK_TONE";

     label31:
        return "UNSOL_RESEND_INCALL_MUTE";

     label32:
        return "CDMA_SUBSCRIPTION_SOURCE_CHANGED";

     label33:
        return "UNSOL_CDMA_PRL_CHANGED";

     label34:
        return "UNSOL_EXIT_EMERGENCY_CALLBACK_MODE";

     label35:
        return "UNSOL_RIL_CONNECTED";

     label36:
        return "UNSOL_VOICE_RADIO_TECH_CHANGED";

     label37:
        return "UNSOL_CELL_INFO_LIST";

     label38:
        return "UNSOL_RESPONSE_IMS_NETWORK_STATE_CHANGED";

     label39:
        return "RIL_UNSOL_UICC_SUBSCRIPTION_STATUS_CHANGED";

     label40:
        return "UNSOL_SRVCC_STATE_NOTIFY";

     label41:
        return "RIL_UNSOL_HARDWARE_CONFIG_CHANGED";

     label42:
        return "<unknown response>";
    }

    private void riljLog(java.lang.String)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r7, $r13;
        java.lang.StringBuilder $r2, $r4, $r6, $r8, $r9, $r11, $r12;
        java.lang.Integer $r5, $r10;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mInstanceId>;

        if $r5 == null goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [SUB");

        $r10 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mInstanceId>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r13 = "";

     label2:
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RILJ", $r7);

        return;
    }

    private void riljLogv(java.lang.String)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r7, $r13;
        java.lang.StringBuilder $r2, $r4, $r6, $r8, $r9, $r11, $r12;
        java.lang.Integer $r5, $r10;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mInstanceId>;

        if $r5 == null goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [SUB");

        $r10 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mInstanceId>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r13 = "";

     label2:
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("RILJ", $r7);

        return;
    }

    private void unsljLog(int)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[UNSL]< ");

        $r3 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String responseToString(int)>(i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r5);

        return;
    }

    private void unsljLogMore(int, java.lang.String)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        java.lang.String r1, $r4, $r8;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r7;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[UNSL]< ");

        $r4 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String responseToString(int)>(i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r8);

        return;
    }

    private void unsljLogRet(int, java.lang.Object)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        java.lang.Object r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[UNSL]< ");

        $r4 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String responseToString(int)>(i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String retToString(int,java.lang.Object)>(i0, r1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        return;
    }

    private void unsljLogvRet(int, java.lang.Object)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        java.lang.Object r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[UNSL]< ");

        $r4 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String responseToString(int)>(i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String retToString(int,java.lang.Object)>(i0, r1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLogv(java.lang.String)>($r9);

        return;
    }

    public void getDeviceIdentity(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(98, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getCDMASubscription(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(95, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setPhoneType(int)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setPhoneType=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" old value=");

        $i1 = r0.<com.android.internal.telephony.RIL: int mPhoneType>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r6);

        r0.<com.android.internal.telephony.RIL: int mPhoneType> = i0;

        return;
    }

    public void queryCdmaRoamingPreference(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(79, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setCdmaRoamingPreference(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r12;
        java.lang.String $r6, $r9, $r13;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(78, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setCdmaSubscriptionSource(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r12;
        java.lang.String $r6, $r9, $r13;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(77, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void getCdmaSubscriptionSource(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(104, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void queryTTYMode(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(81, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setTTYMode(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r12;
        java.lang.String $r6, $r9, $r13;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(80, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void sendCDMAFeatureCode(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r6, $r9, $r13;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        android.os.Parcel $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r12;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(84, r2);

        $r4 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void getCdmaBroadcastConfig(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(92, r1);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setCdmaBroadcastConfig(com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[], android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[] r1, r5, r29;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        java.util.ArrayList r4, $r7;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, i13, i14;
        com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo r6, $r20, $r21, $r23, $r27, $r28;
        java.lang.Object[] $r8;
        android.os.Parcel $r9, $r24, $r25, $r26;
        java.lang.String $r10, $r14, $r18, $r22;
        java.lang.StringBuilder $r11, $r12, $r13, $r15, $r16, $r17, $r19;
        boolean $z0, $z2;
        byte $b11;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[];

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(93, r2);

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r4 = $r7;

        r5 = r1;

        i0 = lengthof r5;

        i1 = 0;

     label01:
        if i1 >= i0 goto label04;

        r6 = r5[i1];

        i2 = virtualinvoke r6.<com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo: int getFromServiceCategory()>();

     label02:
        $i10 = virtualinvoke r6.<com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo: int getToServiceCategory()>();

        if i2 > $i10 goto label03;

        $r28 = new com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo;

        $i12 = virtualinvoke r6.<com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo: int getLanguage()>();

        $z2 = virtualinvoke r6.<com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo: boolean isSelected()>();

        specialinvoke $r28.<com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo: void <init>(int,int,int,boolean)>(i2, i2, $i12, $z2);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r28);

        i2 = i2 + 1;

        goto label02;

     label03:
        i1 = i1 + 1;

        goto label01;

     label04:
        $r8 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r1);

        r29 = (com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo[]) $r8;

        $r9 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i3 = lengthof r29;

        virtualinvoke $r9.<android.os.Parcel: void writeInt(int)>($i3);

        i13 = 0;

     label05:
        $i4 = lengthof r29;

        if i13 >= $i4 goto label08;

        $r25 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r21 = r29[i13];

        $i8 = virtualinvoke $r21.<com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo: int getFromServiceCategory()>();

        virtualinvoke $r25.<android.os.Parcel: void writeInt(int)>($i8);

        $r24 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r23 = r29[i13];

        $i9 = virtualinvoke $r23.<com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo: int getLanguage()>();

        virtualinvoke $r24.<android.os.Parcel: void writeInt(int)>($i9);

        $r26 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $r27 = r29[i13];

        $z0 = virtualinvoke $r27.<com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo: boolean isSelected()>();

        if $z0 == 0 goto label06;

        $b11 = 1;

        goto label07;

     label06:
        $b11 = 0;

     label07:
        virtualinvoke $r26.<android.os.Parcel: void writeInt(int)>($b11);

        i13 = i13 + 1;

        goto label05;

     label08:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i5 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r14 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i5);

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ");

        $i6 = lengthof r29;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" configs : ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r18);

        i14 = 0;

     label09:
        $i7 = lengthof r29;

        if i14 >= $i7 goto label10;

        $r20 = r29[i14];

        $r22 = virtualinvoke $r20.<com.android.internal.telephony.cdma.CdmaSmsBroadcastConfigInfo: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r22);

        i14 = i14 + 1;

        goto label09;

     label10:
        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void setCdmaBroadcastActivation(boolean, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        boolean z0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10;
        java.lang.String $r6, $r9, $r11;
        int $i0;
        byte $b1;

        r0 := @this: com.android.internal.telephony.RIL;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(94, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if z0 == 0 goto label1;

        $b1 = 0;

        goto label2;

     label1:
        $b1 = 1;

     label2:
        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>($b1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void exitEmergencyCallbackMode(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(99, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void requestIsimAuthentication(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r6, $r9, $r11;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        android.os.Parcel $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(105, r2);

        $r4 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void requestIccSimAuthentication(int, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        java.lang.String r1, r2, $r9, $r12, $r13;
        android.os.Message r3;
        com.android.internal.telephony.RILRequest r4;
        android.os.Parcel $r5, $r6, $r7;
        java.lang.StringBuilder $r8, $r10, $r11, $r14;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.os.Message;

        r4 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(125, r3);

        $r5 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r5.<android.os.Parcel: void writeInt(int)>(i0);

        $r6 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r6.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r7 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r7.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r4.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r4.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r12 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r4);

        return;
    }

    public void getCellInfoList(android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(109, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r9);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setCellInfoListRate(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r9, $r11, $r12, $r13;
        java.lang.String $r6, $r10, $r14, $r15;
        android.os.Parcel $r7, $r8;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setCellInfoListRate: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r6);

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(110, r1);

        $r7 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r7.<android.os.Parcel: void writeInt(int)>(1);

        $r8 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r8.<android.os.Parcel: void writeInt(int)>(i0);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r14 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r15);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void setInitialAttachApn(java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, r2, r3, r4, $r13, $r16, $r27;
        int i0, $i1;
        android.os.Message r5;
        com.android.internal.telephony.RILRequest r6;
        android.os.Parcel $r7, $r8, $r9, $r10, $r11;
        java.lang.StringBuilder $r12, $r14, $r15, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r28;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: android.os.Message;

        r6 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(111, null);

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("Set RIL_REQUEST_SET_INITIAL_ATTACH_APN");

        $r7 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r7.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r8 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r8.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r9 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r9.<android.os.Parcel: void writeInt(int)>(i0);

        $r10 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r10.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        $r11 = r6.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r11.<android.os.Parcel: void writeString(java.lang.String)>(r4);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke r6.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r6.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r16 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", apn:");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", protocol:");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", authType:");

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", username:");

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", password:");

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r27);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r6);

        return;
    }

    public void setDataProfile(com.android.internal.telephony.dataconnection.DataProfile[], android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        com.android.internal.telephony.dataconnection.DataProfile[] r1;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        int i0, $i1, $i2;
        android.os.Parcel $r4;
        java.lang.StringBuilder $r6, $r8, $r9, $r11, $r12, $r13, $r14;
        java.lang.String $r7, $r10, $r15, $r16;
        com.android.internal.telephony.dataconnection.DataProfile $r17;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: com.android.internal.telephony.dataconnection.DataProfile[];

        r2 := @parameter1: android.os.Message;

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("Set RIL_REQUEST_SET_DATA_PROFILE");

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(128, null);

        $r4 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        staticinvoke <com.android.internal.telephony.dataconnection.DataProfile: android.os.Parcel toParcel(android.os.Parcel,com.android.internal.telephony.dataconnection.DataProfile[])>($r4, r1);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Data Profiles : ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r15);

        i0 = 0;

     label1:
        $i2 = lengthof r1;

        if i0 >= $i2 goto label2;

        $r17 = r1[i0];

        $r16 = virtualinvoke $r17.<com.android.internal.telephony.dataconnection.DataProfile: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r16);

        i0 = i0 + 1;

        goto label1;

     label2:
        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void testingEmergencyCall()
    {
        com.android.internal.telephony.RIL r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: com.android.internal.telephony.RIL;

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>("testingEmergencyCall");

        $r1 = r0.<com.android.internal.telephony.RIL: java.util.concurrent.atomic.AtomicBoolean mTestingEmergencyCall>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.RIL r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        android.util.SparseArray r4, $r50, $r55, $r71;
        android.os.PowerManager$WakeLock r5, $r42, $r49;
        java.lang.Throwable r6, r8, $r73, $r75;
        com.android.internal.telephony.RILRequest r7;
        java.lang.StringBuilder $r9, $r10, $r11, $r13, $r14, $r17, $r18, $r19, $r20, $r22, $r25, $r27, $r28, $r29, $r30, $r32, $r35, $r36, $r37, $r38, $r41, $r43, $r44, $r46, $r47, $r48, $r52, $r53, $r54, $r56, $r58, $r59, $r60, $r62, $r64, $r66, $r67, $r68, $r69, $r76, $r77;
        java.lang.String $r12, $r16, $r23, $r26, $r34, $r39, $r40, $r45, $r51, $r57, $r65, $r70, $r74, $r78;
        android.net.LocalSocket $r15;
        android.os.HandlerThread $r21;
        com.android.internal.telephony.RIL$RILSender $r24;
        java.lang.Thread $r31;
        com.android.internal.telephony.RIL$RILReceiver $r33;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.util.concurrent.atomic.AtomicBoolean $r61;
        boolean $z0;
        java.lang.Object $r63, $r72;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RIL: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSocket=");

        $r15 = r0.<com.android.internal.telephony.RIL: android.net.LocalSocket mSocket>;

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSenderThread=");

        $r21 = r0.<com.android.internal.telephony.RIL: android.os.HandlerThread mSenderThread>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r23);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSender=");

        $r24 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RILSender mSender>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r26);

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mReceiverThread=");

        $r31 = r0.<com.android.internal.telephony.RIL: java.lang.Thread mReceiverThread>;

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r34);

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mReceiver=");

        $r33 = r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RIL$RILReceiver mReceiver>;

        $r38 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r39);

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mWakeLock=");

        $r42 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        $r43 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r42);

        $r40 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r40);

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mWakeLockTimeout=");

        $i0 = r0.<com.android.internal.telephony.RIL: int mWakeLockTimeout>;

        $r44 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r45);

        $r50 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        r4 = $r50;

        entermonitor $r50;

     label01:
        $r49 = r0.<com.android.internal.telephony.RIL: android.os.PowerManager$WakeLock mWakeLock>;

        r5 = $r49;

        entermonitor $r49;

     label02:
        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mWakeLockCount=");

        $i1 = r0.<com.android.internal.telephony.RIL: int mWakeLockCount>;

        $r52 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r51);

        exitmonitor r5;

     label03:
        goto label06;

     label04:
        $r73 := @caughtexception;

        r6 = $r73;

        exitmonitor r5;

     label05:
        throw r6;

     label06:
        $r55 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        i4 = virtualinvoke $r55.<android.util.SparseArray: int size()>();

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRequestList count=");

        $r58 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r57 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r57);

        i5 = 0;

     label07:
        if i5 >= i4 goto label08;

        $r71 = r0.<com.android.internal.telephony.RIL: android.util.SparseArray mRequestList>;

        $r72 = virtualinvoke $r71.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        r7 = (com.android.internal.telephony.RILRequest) $r72;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  [");

        $i2 = r7.<com.android.internal.telephony.RILRequest: int mSerial>;

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r76 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $i3 = r7.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r78 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i3);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);

        $r74 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r74);

        i5 = i5 + 1;

        goto label07;

     label08:
        exitmonitor r4;

     label09:
        goto label12;

     label10:
        $r75 := @caughtexception;

        r8 = $r75;

        exitmonitor r4;

     label11:
        throw r8;

     label12:
        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLastNITZTimeInfo=");

        $r63 = r0.<com.android.internal.telephony.RIL: java.lang.Object mLastNITZTimeInfo>;

        $r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r63);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r65);

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mTestingEmergencyCall=");

        $r61 = r0.<com.android.internal.telephony.RIL: java.util.concurrent.atomic.AtomicBoolean mTestingEmergencyCall>;

        $z0 = virtualinvoke $r61.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        $r69 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r70);

        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void iccOpenLogicalChannel(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.String r1, $r6, $r9, $r11;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        android.os.Parcel $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10;
        int $i0;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(115, r2);

        $r4 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void iccCloseLogicalChannel(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10;
        java.lang.String $r6, $r9, $r11;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(116, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r11);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void iccTransmitApduLogicalChannel(int, int, int, int, int, int, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, i2, i3, i4, i5;
        java.lang.String r1, $r7;
        android.os.Message r2;
        java.lang.RuntimeException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        r1 := @parameter6: java.lang.String;

        r2 := @parameter7: android.os.Message;

        if i0 > 0 goto label1;

        $r3 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid channel in iccTransmitApduLogicalChannel: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        specialinvoke r0.<com.android.internal.telephony.RIL: void iccTransmitApduHelper(int,int,int,int,int,int,int,java.lang.String,android.os.Message)>(117, i0, i1, i2, i3, i4, i5, r1, r2);

        return;
    }

    public void iccTransmitApduBasicChannel(int, int, int, int, int, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, i2, i3, i4;
        java.lang.String r1;
        android.os.Message r2;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        r1 := @parameter5: java.lang.String;

        r2 := @parameter6: android.os.Message;

        specialinvoke r0.<com.android.internal.telephony.RIL: void iccTransmitApduHelper(int,int,int,int,int,int,int,java.lang.String,android.os.Message)>(114, 0, i0, i1, i2, i3, i4, r1, r2);

        return;
    }

    private void iccTransmitApduHelper(int, int, int, int, int, int, int, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7;
        java.lang.String r1, $r13, $r16, $r17;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        android.os.Parcel $r4, $r5, $r6, $r7, $r8, $r9, $r11;
        java.lang.StringBuilder $r10, $r12, $r14, $r15;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        r1 := @parameter7: java.lang.String;

        r2 := @parameter8: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(i0, r2);

        $r4 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i1);

        $r5 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r5.<android.os.Parcel: void writeInt(int)>(i2);

        $r6 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r6.<android.os.Parcel: void writeInt(int)>(i3);

        $r7 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r7.<android.os.Parcel: void writeInt(int)>(i4);

        $r9 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r9.<android.os.Parcel: void writeInt(int)>(i5);

        $r8 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r8.<android.os.Parcel: void writeInt(int)>(i6);

        $r11 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r11.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i7 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r16 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i7);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r17);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void nvReadItem(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r9, $r10, $r11;
        java.lang.String $r5, $r8, $r12;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(118, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r8 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r12);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    public void nvWriteItem(int, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        java.lang.String r1, $r7, $r10, $r15;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        android.os.Parcel $r4, $r5;
        java.lang.StringBuilder $r6, $r8, $r9, $r11, $r12, $r13, $r14, $r16;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(119, r2);

        $r4 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r5.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r10 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r15);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void nvWriteCdmaPrl(byte[], android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        byte[] r1;
        android.os.Message r2;
        com.android.internal.telephony.RILRequest r3;
        android.os.Parcel $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r12, $r14;
        java.lang.String $r6, $r9, $r13;
        int $i0, $i1;

        r0 := @this: com.android.internal.telephony.RIL;

        r1 := @parameter0: byte[];

        r2 := @parameter1: android.os.Message;

        r3 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(120, r2);

        $r4 = r3.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeByteArray(byte[])>(r1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r3.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i0 = r3.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i1 = lengthof r1;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes)");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r3);

        return;
    }

    public void nvResetConfig(int, android.os.Message)
    {
        com.android.internal.telephony.RIL r0;
        int i0, $i1;
        android.os.Message r1;
        com.android.internal.telephony.RILRequest r2;
        android.os.Parcel $r3, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r11, $r12;
        java.lang.String $r6, $r9, $r13;

        r0 := @this: com.android.internal.telephony.RIL;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        r2 = staticinvoke <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest obtain(int,android.os.Message)>(121, r1);

        $r3 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r3.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r2.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r4.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $i1 = r2.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r9 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.RIL: void riljLog(java.lang.String)>($r13);

        specialinvoke r0.<com.android.internal.telephony.RIL: void send(com.android.internal.telephony.RILRequest)>(r2);

        return;
    }

    static void access$000(com.android.internal.telephony.RIL)
    {
        com.android.internal.telephony.RIL r0;

        r0 := @parameter0: com.android.internal.telephony.RIL;

        specialinvoke r0.<com.android.internal.telephony.RIL: void updateScreenState()>();

        return;
    }

    static void access$100(com.android.internal.telephony.RIL)
    {
        com.android.internal.telephony.RIL r0;

        r0 := @parameter0: com.android.internal.telephony.RIL;

        specialinvoke r0.<com.android.internal.telephony.RIL: void decrementWakeLock()>();

        return;
    }

    static com.android.internal.telephony.RILRequest access$200(com.android.internal.telephony.RIL, int)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        com.android.internal.telephony.RILRequest $r1;

        r0 := @parameter0: com.android.internal.telephony.RIL;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.internal.telephony.RIL: com.android.internal.telephony.RILRequest findAndRemoveRequestFromList(int)>(i0);

        return $r1;
    }

    static boolean access$300(com.android.internal.telephony.RIL)
    {
        com.android.internal.telephony.RIL r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.RIL;

        $z0 = specialinvoke r0.<com.android.internal.telephony.RIL: boolean clearWakeLock()>();

        return $z0;
    }

    static java.lang.Integer access$400(com.android.internal.telephony.RIL)
    {
        com.android.internal.telephony.RIL r0;
        java.lang.Integer $r1;

        r0 := @parameter0: com.android.internal.telephony.RIL;

        $r1 = r0.<com.android.internal.telephony.RIL: java.lang.Integer mInstanceId>;

        return $r1;
    }

    static int access$500(java.io.InputStream, byte[]) throws java.io.IOException
    {
        java.io.InputStream r0;
        byte[] r1;
        int $i0;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: byte[];

        $i0 = staticinvoke <com.android.internal.telephony.RIL: int readRilMessage(java.io.InputStream,byte[])>(r0, r1);

        return $i0;
    }

    static void access$600(com.android.internal.telephony.RIL, android.os.Parcel)
    {
        com.android.internal.telephony.RIL r0;
        android.os.Parcel r1;

        r0 := @parameter0: com.android.internal.telephony.RIL;

        r1 := @parameter1: android.os.Parcel;

        specialinvoke r0.<com.android.internal.telephony.RIL: void processResponse(android.os.Parcel)>(r1);

        return;
    }

    static void access$700(com.android.internal.telephony.RIL, int, boolean)
    {
        com.android.internal.telephony.RIL r0;
        int i0;
        boolean z0;

        r0 := @parameter0: com.android.internal.telephony.RIL;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.internal.telephony.RIL: void clearRequestList(int,boolean)>(i0, z0);

        return;
    }

    static void access$800(com.android.internal.telephony.RIL, int)
    {
        com.android.internal.telephony.RIL r0;
        int i0;

        r0 := @parameter0: com.android.internal.telephony.RIL;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.internal.telephony.RIL: void notifyRegistrantsRilConnectionChanged(int)>(i0);

        return;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <com.android.internal.telephony.RIL: int CDMA_BROADCAST_SMS_NO_OF_SERVICE_CATEGORIES> = 31;

        <com.android.internal.telephony.RIL: int CDMA_BSI_NO_OF_INTS_STRUCT> = 3;

        <com.android.internal.telephony.RIL: int SOCKET_OPEN_RETRY_MILLIS> = 4000;

        <com.android.internal.telephony.RIL: int RESPONSE_UNSOLICITED> = 1;

        <com.android.internal.telephony.RIL: int RESPONSE_SOLICITED> = 0;

        <com.android.internal.telephony.RIL: int RIL_MAX_COMMAND_BYTES> = 8192;

        <com.android.internal.telephony.RIL: int EVENT_WAKE_LOCK_TIMEOUT> = 2;

        <com.android.internal.telephony.RIL: int EVENT_SEND> = 1;

        <com.android.internal.telephony.RIL: int DEFAULT_WAKE_LOCK_TIMEOUT> = 60000;

        <com.android.internal.telephony.RIL: boolean RILJ_LOGV> = 0;

        <com.android.internal.telephony.RIL: boolean RILJ_LOGD> = 1;

        <com.android.internal.telephony.RIL: java.lang.String RILJ_LOG_TAG> = "RILJ";

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = "rild";

        $r0[1] = "rild2";

        $r0[2] = "rild3";

        <com.android.internal.telephony.RIL: java.lang.String[] SOCKET_NAME_RIL> = $r0;

        return;
    }
}
