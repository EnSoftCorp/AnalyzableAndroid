class com.android.internal.telephony.WakeLockStateMachine$IdleState extends com.android.internal.util.State
{
    final com.android.internal.telephony.WakeLockStateMachine this$0;

    void <init>(com.android.internal.telephony.WakeLockStateMachine)
    {
        com.android.internal.telephony.WakeLockStateMachine$IdleState r0;
        com.android.internal.telephony.WakeLockStateMachine r1;

        r0 := @this: com.android.internal.telephony.WakeLockStateMachine$IdleState;

        r1 := @parameter0: com.android.internal.telephony.WakeLockStateMachine;

        r0.<com.android.internal.telephony.WakeLockStateMachine$IdleState: com.android.internal.telephony.WakeLockStateMachine this$0> = r1;

        specialinvoke r0.<com.android.internal.util.State: void <init>()>();

        return;
    }

    public void enter()
    {
        com.android.internal.telephony.WakeLockStateMachine$IdleState r0;
        com.android.internal.telephony.WakeLockStateMachine $r1;

        r0 := @this: com.android.internal.telephony.WakeLockStateMachine$IdleState;

        $r1 = r0.<com.android.internal.telephony.WakeLockStateMachine$IdleState: com.android.internal.telephony.WakeLockStateMachine this$0>;

        virtualinvoke $r1.<com.android.internal.telephony.WakeLockStateMachine: void sendMessageDelayed(int,long)>(3, 3000L);

        return;
    }

    public void exit()
    {
        com.android.internal.telephony.WakeLockStateMachine$IdleState r0;
        com.android.internal.telephony.WakeLockStateMachine $r1, $r3;
        android.os.PowerManager$WakeLock $r2;

        r0 := @this: com.android.internal.telephony.WakeLockStateMachine$IdleState;

        $r1 = r0.<com.android.internal.telephony.WakeLockStateMachine$IdleState: com.android.internal.telephony.WakeLockStateMachine this$0>;

        $r2 = staticinvoke <com.android.internal.telephony.WakeLockStateMachine: android.os.PowerManager$WakeLock access$000(com.android.internal.telephony.WakeLockStateMachine)>($r1);

        virtualinvoke $r2.<android.os.PowerManager$WakeLock: void acquire()>();

        $r3 = r0.<com.android.internal.telephony.WakeLockStateMachine$IdleState: com.android.internal.telephony.WakeLockStateMachine this$0>;

        virtualinvoke $r3.<com.android.internal.telephony.WakeLockStateMachine: void log(java.lang.String)>("acquired wakelock, leaving Idle state");

        return;
    }

    public boolean processMessage(android.os.Message)
    {
        com.android.internal.telephony.WakeLockStateMachine$IdleState r0;
        android.os.Message r1;
        int $i0;
        com.android.internal.telephony.WakeLockStateMachine $r2, $r4, $r6, $r7, $r8, $r9, $r10;
        android.os.PowerManager$WakeLock $r3, $r5;
        boolean $z0, $z1;
        com.android.internal.telephony.WakeLockStateMachine$WaitingState $r11;

        r0 := @this: com.android.internal.telephony.WakeLockStateMachine$IdleState;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 1: goto label1;
            case 3: goto label3;
            default: goto label6;
        };

     label1:
        $r8 = r0.<com.android.internal.telephony.WakeLockStateMachine$IdleState: com.android.internal.telephony.WakeLockStateMachine this$0>;

        $z1 = virtualinvoke $r8.<com.android.internal.telephony.WakeLockStateMachine: boolean handleSmsMessage(android.os.Message)>(r1);

        if $z1 == 0 goto label2;

        $r10 = r0.<com.android.internal.telephony.WakeLockStateMachine$IdleState: com.android.internal.telephony.WakeLockStateMachine this$0>;

        $r9 = r0.<com.android.internal.telephony.WakeLockStateMachine$IdleState: com.android.internal.telephony.WakeLockStateMachine this$0>;

        $r11 = staticinvoke <com.android.internal.telephony.WakeLockStateMachine: com.android.internal.telephony.WakeLockStateMachine$WaitingState access$100(com.android.internal.telephony.WakeLockStateMachine)>($r9);

        staticinvoke <com.android.internal.telephony.WakeLockStateMachine: void access$200(com.android.internal.telephony.WakeLockStateMachine,com.android.internal.util.IState)>($r10, $r11);

     label2:
        return 1;

     label3:
        $r2 = r0.<com.android.internal.telephony.WakeLockStateMachine$IdleState: com.android.internal.telephony.WakeLockStateMachine this$0>;

        $r3 = staticinvoke <com.android.internal.telephony.WakeLockStateMachine: android.os.PowerManager$WakeLock access$000(com.android.internal.telephony.WakeLockStateMachine)>($r2);

        virtualinvoke $r3.<android.os.PowerManager$WakeLock: void release()>();

        $r4 = r0.<com.android.internal.telephony.WakeLockStateMachine$IdleState: com.android.internal.telephony.WakeLockStateMachine this$0>;

        $r5 = staticinvoke <com.android.internal.telephony.WakeLockStateMachine: android.os.PowerManager$WakeLock access$000(com.android.internal.telephony.WakeLockStateMachine)>($r4);

        $z0 = virtualinvoke $r5.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label4;

        $r7 = r0.<com.android.internal.telephony.WakeLockStateMachine$IdleState: com.android.internal.telephony.WakeLockStateMachine this$0>;

        virtualinvoke $r7.<com.android.internal.telephony.WakeLockStateMachine: void log(java.lang.String)>("mWakeLock is still held after release");

        goto label5;

     label4:
        $r6 = r0.<com.android.internal.telephony.WakeLockStateMachine$IdleState: com.android.internal.telephony.WakeLockStateMachine this$0>;

        virtualinvoke $r6.<com.android.internal.telephony.WakeLockStateMachine: void log(java.lang.String)>("mWakeLock released");

     label5:
        return 1;

     label6:
        return 0;
    }
}
