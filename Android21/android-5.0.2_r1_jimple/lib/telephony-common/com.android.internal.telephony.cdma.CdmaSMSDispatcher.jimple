public class com.android.internal.telephony.cdma.CdmaSMSDispatcher extends com.android.internal.telephony.SMSDispatcher
{
    private static final java.lang.String TAG;
    private static final boolean VDBG;

    public void <init>(com.android.internal.telephony.PhoneBase, com.android.internal.telephony.SmsUsageMonitor, com.android.internal.telephony.ImsSMSDispatcher)
    {
        com.android.internal.telephony.cdma.CdmaSMSDispatcher r0;
        com.android.internal.telephony.PhoneBase r1;
        com.android.internal.telephony.SmsUsageMonitor r2;
        com.android.internal.telephony.ImsSMSDispatcher r3;

        r0 := @this: com.android.internal.telephony.cdma.CdmaSMSDispatcher;

        r1 := @parameter0: com.android.internal.telephony.PhoneBase;

        r2 := @parameter1: com.android.internal.telephony.SmsUsageMonitor;

        r3 := @parameter2: com.android.internal.telephony.ImsSMSDispatcher;

        specialinvoke r0.<com.android.internal.telephony.SMSDispatcher: void <init>(com.android.internal.telephony.PhoneBase,com.android.internal.telephony.SmsUsageMonitor,com.android.internal.telephony.ImsSMSDispatcher)>(r1, r2, r3);

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CdmaSMSDispatcher", "CdmaSMSDispatcher created");

        return;
    }

    protected java.lang.String getFormat()
    {
        com.android.internal.telephony.cdma.CdmaSMSDispatcher r0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaSMSDispatcher;

        return "3gpp2";
    }

    void sendStatusReportMessage(com.android.internal.telephony.cdma.SmsMessage)
    {
        com.android.internal.telephony.cdma.CdmaSMSDispatcher r0;
        com.android.internal.telephony.cdma.SmsMessage r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaSMSDispatcher;

        r1 := @parameter0: com.android.internal.telephony.cdma.SmsMessage;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: android.os.Message obtainMessage(int,java.lang.Object)>(10, r1);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: boolean sendMessage(android.os.Message)>($r2);

        return;
    }

    protected void handleStatusReport(java.lang.Object)
    {
        com.android.internal.telephony.cdma.CdmaSMSDispatcher r0;
        java.lang.Object r1;
        boolean $z0;
        java.lang.StringBuilder $r2, $r3, $r6;
        java.lang.Class $r4;
        java.lang.String $r5, $r7;
        com.android.internal.telephony.cdma.SmsMessage $r8;

        r0 := @this: com.android.internal.telephony.cdma.CdmaSMSDispatcher;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof com.android.internal.telephony.cdma.SmsMessage;

        if $z0 == 0 goto label1;

        $r8 = (com.android.internal.telephony.cdma.SmsMessage) r1;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void handleCdmaStatusReport(com.android.internal.telephony.cdma.SmsMessage)>($r8);

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleStatusReport() called for object type ");

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("CdmaSMSDispatcher", $r7);

     label2:
        return;
    }

    void handleCdmaStatusReport(com.android.internal.telephony.cdma.SmsMessage)
    {
        com.android.internal.telephony.cdma.CdmaSMSDispatcher r0;
        com.android.internal.telephony.cdma.SmsMessage r1;
        int i0, i1, $i2, $i3;
        com.android.internal.telephony.SMSDispatcher$SmsTracker r2;
        android.app.PendingIntent r3;
        android.content.Intent r4, $r11;
        java.util.ArrayList $r6, $r7, $r9;
        java.lang.Object $r8;
        android.content.Context $r12, $r18;
        byte[] $r13;
        java.lang.String $r16;
        android.app.PendingIntent$CanceledException $r17;

        r0 := @this: com.android.internal.telephony.cdma.CdmaSMSDispatcher;

        r1 := @parameter0: com.android.internal.telephony.cdma.SmsMessage;

        i0 = 0;

        $r6 = r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: java.util.ArrayList deliveryPendingList>;

        i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

     label1:
        if i0 >= i1 goto label6;

        $r7 = r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: java.util.ArrayList deliveryPendingList>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (com.android.internal.telephony.SMSDispatcher$SmsTracker) $r8;

        $i3 = r2.<com.android.internal.telephony.SMSDispatcher$SmsTracker: int mMessageRef>;

        $i2 = r1.<com.android.internal.telephony.cdma.SmsMessage: int mMessageRef>;

        if $i3 != $i2 goto label5;

        $r9 = r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: java.util.ArrayList deliveryPendingList>;

        virtualinvoke $r9.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        $r12 = r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: android.content.Context mContext>;

        virtualinvoke r2.<com.android.internal.telephony.SMSDispatcher$SmsTracker: void updateSentMessageStatus(android.content.Context,int)>($r12, 0);

        r3 = r2.<com.android.internal.telephony.SMSDispatcher$SmsTracker: android.app.PendingIntent mDeliveryIntent>;

        $r11 = new android.content.Intent;

        specialinvoke $r11.<android.content.Intent: void <init>()>();

        r4 = $r11;

        $r13 = virtualinvoke r1.<com.android.internal.telephony.cdma.SmsMessage: byte[] getPdu()>();

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>("pdu", $r13);

        $r16 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: java.lang.String getFormat()>();

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("format", $r16);

     label2:
        $r18 = r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: android.content.Context mContext>;

        virtualinvoke r3.<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)>($r18, -1, r4);

     label3:
        goto label6;

     label4:
        $r17 := @caughtexception;

        goto label6;

     label5:
        i0 = i0 + 1;

        goto label1;

     label6:
        return;

        catch android.app.PendingIntent$CanceledException from label2 to label3 with label4;
    }

    protected void sendData(java.lang.String, java.lang.String, int, byte[], android.app.PendingIntent, android.app.PendingIntent)
    {
        com.android.internal.telephony.cdma.CdmaSMSDispatcher r0;
        java.lang.String r1, r2, $r9;
        int i0;
        byte[] r3;
        android.app.PendingIntent r4, r5;
        com.android.internal.telephony.cdma.SmsMessage$SubmitPdu r6;
        java.util.HashMap r7;
        com.android.internal.telephony.SMSDispatcher$SmsTracker r8;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaSMSDispatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: byte[];

        r4 := @parameter4: android.app.PendingIntent;

        r5 := @parameter5: android.app.PendingIntent;

        if r5 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r6 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,int,byte[],boolean)>(r2, r1, i0, r3, $z0);

        r7 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: java.util.HashMap getSmsTrackerMap(java.lang.String,java.lang.String,int,byte[],com.android.internal.telephony.SmsMessageBase$SubmitPduBase)>(r1, r2, i0, r3, r6);

        $r9 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: java.lang.String getFormat()>();

        r8 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: com.android.internal.telephony.SMSDispatcher$SmsTracker getSmsTracker(java.util.HashMap,android.app.PendingIntent,android.app.PendingIntent,java.lang.String,android.net.Uri,boolean)>(r7, r4, r5, $r9, null, 0);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendSubmitPdu(com.android.internal.telephony.SMSDispatcher$SmsTracker)>(r8);

        return;
    }

    protected void sendText(java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent, android.net.Uri, java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaSMSDispatcher r0;
        java.lang.String r1, r2, r3, r7, $r11;
        android.app.PendingIntent r4, r5;
        android.net.Uri r6;
        com.android.internal.telephony.cdma.SmsMessage$SubmitPdu r8;
        java.util.HashMap r9;
        com.android.internal.telephony.SMSDispatcher$SmsTracker r10;
        long $l1, $l2;
        android.content.Context $r12;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaSMSDispatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.app.PendingIntent;

        r5 := @parameter4: android.app.PendingIntent;

        r6 := @parameter5: android.net.Uri;

        r7 := @parameter6: java.lang.String;

        if r5 == null goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r8 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,com.android.internal.telephony.SmsHeader)>(r2, r1, r3, $z2, null);

        if r8 == null goto label7;

        if r6 != null goto label5;

        $r12 = r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: android.content.Context mContext>;

        $z0 = staticinvoke <com.android.internal.telephony.SmsApplication: boolean shouldWriteMessageForPackage(java.lang.String,android.content.Context)>(r7, $r12);

        if $z0 == 0 goto label6;

        $l2 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: long getSubId()>();

        if r5 == null goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        r6 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: android.net.Uri writeOutboxMessage(long,java.lang.String,java.lang.String,boolean,java.lang.String)>($l2, r1, r3, $z1, r7);

        goto label6;

     label5:
        $l1 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: long getSubId()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void moveToOutbox(long,android.net.Uri,java.lang.String)>($l1, r6, r7);

     label6:
        r9 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: java.util.HashMap getSmsTrackerMap(java.lang.String,java.lang.String,java.lang.String,com.android.internal.telephony.SmsMessageBase$SubmitPduBase)>(r1, r2, r3, r8);

        $r11 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: java.lang.String getFormat()>();

        r10 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: com.android.internal.telephony.SMSDispatcher$SmsTracker getSmsTracker(java.util.HashMap,android.app.PendingIntent,android.app.PendingIntent,java.lang.String,android.net.Uri,boolean)>(r9, r4, r5, $r11, r6, 0);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendSubmitPdu(com.android.internal.telephony.SMSDispatcher$SmsTracker)>(r10);

        goto label8;

     label7:
        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("CdmaSMSDispatcher", "CdmaSMSDispatcher.sendText(): getSubmitPdu() returned null");

     label8:
        return;
    }

    protected void injectSmsPdu(byte[], java.lang.String, android.app.PendingIntent)
    {
        com.android.internal.telephony.cdma.CdmaSMSDispatcher r0;
        byte[] r1;
        java.lang.String r2;
        android.app.PendingIntent r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: com.android.internal.telephony.cdma.CdmaSMSDispatcher;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.app.PendingIntent;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This method must be called only on ImsSMSDispatcher");

        throw $r4;
    }

    protected com.android.internal.telephony.GsmAlphabet$TextEncodingDetails calculateLength(java.lang.CharSequence, boolean)
    {
        com.android.internal.telephony.cdma.CdmaSMSDispatcher r0;
        java.lang.CharSequence r1;
        boolean z0;
        com.android.internal.telephony.GsmAlphabet$TextEncodingDetails $r2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaSMSDispatcher;

        r1 := @parameter0: java.lang.CharSequence;

        z0 := @parameter1: boolean;

        $r2 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.GsmAlphabet$TextEncodingDetails calculateLength(java.lang.CharSequence,boolean)>(r1, z0);

        return $r2;
    }

    protected void sendNewSubmitPdu(java.lang.String, java.lang.String, java.lang.String, com.android.internal.telephony.SmsHeader, int, android.app.PendingIntent, android.app.PendingIntent, boolean, java.util.concurrent.atomic.AtomicInteger, java.util.concurrent.atomic.AtomicBoolean, android.net.Uri)
    {
        com.android.internal.telephony.cdma.CdmaSMSDispatcher r0;
        java.lang.String r1, r2, r3, $r15;
        com.android.internal.telephony.SmsHeader r4;
        int i0;
        android.app.PendingIntent r5, r6;
        boolean z0, $z1;
        java.util.concurrent.atomic.AtomicInteger r7;
        java.util.concurrent.atomic.AtomicBoolean r8;
        android.net.Uri r9;
        com.android.internal.telephony.cdma.sms.UserData r10, $r14;
        com.android.internal.telephony.cdma.SmsMessage$SubmitPdu r11;
        java.util.HashMap r12;
        com.android.internal.telephony.SMSDispatcher$SmsTracker r13;

        r0 := @this: com.android.internal.telephony.cdma.CdmaSMSDispatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: com.android.internal.telephony.SmsHeader;

        i0 := @parameter4: int;

        r5 := @parameter5: android.app.PendingIntent;

        r6 := @parameter6: android.app.PendingIntent;

        z0 := @parameter7: boolean;

        r7 := @parameter8: java.util.concurrent.atomic.AtomicInteger;

        r8 := @parameter9: java.util.concurrent.atomic.AtomicBoolean;

        r9 := @parameter10: android.net.Uri;

        $r14 = new com.android.internal.telephony.cdma.sms.UserData;

        specialinvoke $r14.<com.android.internal.telephony.cdma.sms.UserData: void <init>()>();

        r10 = $r14;

        r10.<com.android.internal.telephony.cdma.sms.UserData: java.lang.String payloadStr> = r3;

        r10.<com.android.internal.telephony.cdma.sms.UserData: com.android.internal.telephony.SmsHeader userDataHeader> = r4;

        if i0 != 1 goto label1;

        r10.<com.android.internal.telephony.cdma.sms.UserData: int msgEncoding> = 9;

        goto label2;

     label1:
        r10.<com.android.internal.telephony.cdma.sms.UserData: int msgEncoding> = 4;

     label2:
        r10.<com.android.internal.telephony.cdma.sms.UserData: boolean msgEncodingSet> = 1;

        if r6 == null goto label3;

        if z0 == 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        r11 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,com.android.internal.telephony.cdma.sms.UserData,boolean)>(r1, r10, $z1);

        r12 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: java.util.HashMap getSmsTrackerMap(java.lang.String,java.lang.String,java.lang.String,com.android.internal.telephony.SmsMessageBase$SubmitPduBase)>(r1, r2, r3, r11);

        $r15 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: java.lang.String getFormat()>();

        r13 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: com.android.internal.telephony.SMSDispatcher$SmsTracker getSmsTracker(java.util.HashMap,android.app.PendingIntent,android.app.PendingIntent,java.lang.String,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicBoolean,android.net.Uri,com.android.internal.telephony.SmsHeader,boolean)>(r12, r5, r6, $r15, r7, r8, r9, r4, 0);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendSubmitPdu(com.android.internal.telephony.SMSDispatcher$SmsTracker)>(r13);

        return;
    }

    protected void sendSubmitPdu(com.android.internal.telephony.SMSDispatcher$SmsTracker)
    {
        com.android.internal.telephony.cdma.CdmaSMSDispatcher r0;
        com.android.internal.telephony.SMSDispatcher$SmsTracker r1;
        boolean $z0;
        android.content.Context $r2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaSMSDispatcher;

        r1 := @parameter0: com.android.internal.telephony.SMSDispatcher$SmsTracker;

        $z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("ril.cdma.inecmmode", 0);

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: android.content.Context mContext>;

        virtualinvoke r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: void onFailed(android.content.Context,int,int)>($r2, 4, 0);

        return;

     label1:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendRawPdu(com.android.internal.telephony.SMSDispatcher$SmsTracker)>(r1);

        return;
    }

    protected void sendSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)
    {
        com.android.internal.telephony.cdma.CdmaSMSDispatcher r0;
        com.android.internal.telephony.SMSDispatcher$SmsTracker r1;
        java.util.HashMap r2;
        byte[] r3, $r9;
        com.android.internal.telephony.SMSDispatcher$SMSDispatcherReceiver r4, $r24;
        android.content.Intent r5, $r27;
        java.lang.String r6, $r22, $r25, $r28;
        com.android.internal.telephony.SmsHeader$ConcatRef r7, $r36;
        java.lang.Object $r8;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r23;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i6, $i7, $i8;
        com.android.internal.telephony.PhoneBase $r19;
        android.telephony.ServiceState $r21;
        android.content.Context $r31;
        com.android.internal.telephony.SmsHeader $r32, $r34, $r35;

        r0 := @this: com.android.internal.telephony.cdma.CdmaSMSDispatcher;

        r1 := @parameter0: com.android.internal.telephony.SMSDispatcher$SmsTracker;

        r2 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: java.util.HashMap mData>;

        $r8 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("pdu");

        $r9 = (byte[]) $r8;

        r3 = (byte[]) $r9;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendSms:  isIms()=");

        $z0 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: boolean isIms()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRetryCount=");

        $i0 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: int mRetryCount>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mImsRetry=");

        $i1 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: int mImsRetry>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mMessageRef=");

        $i2 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: int mMessageRef>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" SS=");

        $r19 = r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: com.android.internal.telephony.PhoneBase mPhone>;

        $r21 = virtualinvoke $r19.<com.android.internal.telephony.PhoneBase: android.telephony.ServiceState getServiceState()>();

        $i3 = virtualinvoke $r21.<android.telephony.ServiceState: int getState()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CdmaSMSDispatcher", $r22);

        $r24 = new com.android.internal.telephony.SMSDispatcher$SMSDispatcherReceiver;

        specialinvoke $r24.<com.android.internal.telephony.SMSDispatcher$SMSDispatcherReceiver: void <init>(com.android.internal.telephony.SMSDispatcher,com.android.internal.telephony.SMSDispatcher$SmsTracker)>(r0, r1);

        r4 = $r24;

        $r27 = new android.content.Intent;

        specialinvoke $r27.<android.content.Intent: void <init>(java.lang.String)>("android.provider.Telephony.SMS_SEND");

        r5 = $r27;

        r6 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: java.lang.String getCarrierAppPackageName(android.content.Intent)>(r5);

        if r6 == null goto label2;

        $r25 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: java.lang.String getCarrierAppPackageName(android.content.Intent)>(r5);

        virtualinvoke r5.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r25);

        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>("pdu", r3);

        $r28 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: java.lang.String getFormat()>();

        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("format", $r28);

        $r32 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: com.android.internal.telephony.SmsHeader mSmsHeader>;

        if $r32 == null goto label1;

        $r35 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: com.android.internal.telephony.SmsHeader mSmsHeader>;

        $r36 = $r35.<com.android.internal.telephony.SmsHeader: com.android.internal.telephony.SmsHeader$ConcatRef concatRef>;

        if $r36 == null goto label1;

        $r34 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: com.android.internal.telephony.SmsHeader mSmsHeader>;

        r7 = $r34.<com.android.internal.telephony.SmsHeader: com.android.internal.telephony.SmsHeader$ConcatRef concatRef>;

        $i6 = r7.<com.android.internal.telephony.SmsHeader$ConcatRef: int refNumber>;

        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("concat.refNumber", $i6);

        $i8 = r7.<com.android.internal.telephony.SmsHeader$ConcatRef: int seqNumber>;

        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("concat.seqNumber", $i8);

        $i7 = r7.<com.android.internal.telephony.SmsHeader$ConcatRef: int msgCount>;

        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("concat.msgCount", $i7);

     label1:
        virtualinvoke r5.<android.content.Intent: android.content.Intent addFlags(int)>(134217728);

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CdmaSMSDispatcher", "Sending SMS by carrier app.");

        $r31 = r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: android.content.Context mContext>;

        virtualinvoke $r31.<android.content.Context: void sendOrderedBroadcast(android.content.Intent,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>(r5, "android.permission.RECEIVE_SMS", 16, r4, null, 0, null, null);

        goto label3;

     label2:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendSmsByPstn(com.android.internal.telephony.SMSDispatcher$SmsTracker)>(r1);

     label3:
        return;
    }

    protected void updateSmsSendStatus(int, boolean)
    {
        com.android.internal.telephony.cdma.CdmaSMSDispatcher r0;
        int i0;
        boolean z0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaSMSDispatcher;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("CdmaSMSDispatcher", "updateSmsSendStatus should never be called from here!");

        return;
    }

    protected void sendSmsByPstn(com.android.internal.telephony.SMSDispatcher$SmsTracker)
    {
        com.android.internal.telephony.cdma.CdmaSMSDispatcher r0;
        com.android.internal.telephony.SMSDispatcher$SmsTracker r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.os.Message r2;
        byte[] r3, $r8;
        boolean z0, $z1, $z2, $z3, $z4;
        com.android.internal.telephony.PhoneBase $r4, $r9, $r12, $r15, $r19;
        android.telephony.ServiceState $r5, $r10, $r11;
        java.util.HashMap $r6;
        java.lang.Object $r7;
        com.android.internal.telephony.CommandsInterface $r13, $r14;
        com.android.internal.telephony.PhoneConstants$State $r16, $r17;
        com.android.internal.telephony.ServiceStateTracker $r18;
        android.content.Context $r20;

        r0 := @this: com.android.internal.telephony.cdma.CdmaSMSDispatcher;

        r1 := @parameter0: com.android.internal.telephony.SMSDispatcher$SmsTracker;

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: com.android.internal.telephony.PhoneBase mPhone>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.PhoneBase: android.telephony.ServiceState getServiceState()>();

        i0 = virtualinvoke $r5.<android.telephony.ServiceState: int getState()>();

        $z1 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: boolean isIms()>();

        if $z1 != 0 goto label1;

        if i0 == 0 goto label1;

        $r20 = r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: android.content.Context mContext>;

        $i8 = staticinvoke <com.android.internal.telephony.cdma.CdmaSMSDispatcher: int getNotInServiceError(int)>(i0);

        virtualinvoke r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: void onFailed(android.content.Context,int,int)>($r20, $i8, 0);

        return;

     label1:
        r2 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: android.os.Message obtainMessage(int,java.lang.Object)>(2, r1);

        $r6 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: java.util.HashMap mData>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("pdu");

        $r8 = (byte[]) $r7;

        r3 = (byte[]) $r8;

        $r9 = r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: com.android.internal.telephony.PhoneBase mPhone>;

        $r10 = virtualinvoke $r9.<com.android.internal.telephony.PhoneBase: android.telephony.ServiceState getServiceState()>();

        i1 = virtualinvoke $r10.<android.telephony.ServiceState: int getDataNetworkType()>();

        if i1 == 14 goto label2;

        if i1 != 13 goto label3;

        $r19 = r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: com.android.internal.telephony.PhoneBase mPhone>;

        $r18 = virtualinvoke $r19.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()>();

        $z3 = virtualinvoke $r18.<com.android.internal.telephony.ServiceStateTracker: boolean isConcurrentVoiceAndDataAllowed()>();

        if $z3 != 0 goto label3;

     label2:
        $r12 = r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: com.android.internal.telephony.PhoneBase mPhone>;

        $r11 = virtualinvoke $r12.<com.android.internal.telephony.PhoneBase: android.telephony.ServiceState getServiceState()>();

        $i3 = virtualinvoke $r11.<android.telephony.ServiceState: int getVoiceNetworkType()>();

        if $i3 != 7 goto label3;

        $r15 = r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: com.android.internal.telephony.PhoneBase mPhone>;

        $r17 = virtualinvoke $r15.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.PhoneConstants$State getState()>();

        $r16 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        if $r17 == $r16 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        z0 = $z4;

        $i2 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: int mImsRetry>;

        if 0 != $i2 goto label5;

        $z2 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: boolean isIms()>();

        if $z2 == 0 goto label6;

     label5:
        if z0 == 0 goto label7;

     label6:
        $r14 = r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r14.<com.android.internal.telephony.CommandsInterface: void sendCdmaSms(byte[],android.os.Message)>(r3, r2);

        goto label8;

     label7:
        $r13 = r0.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: com.android.internal.telephony.CommandsInterface mCi>;

        $i4 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: int mImsRetry>;

        $i5 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: int mMessageRef>;

        interfaceinvoke $r13.<com.android.internal.telephony.CommandsInterface: void sendImsCdmaSms(byte[],int,int,android.os.Message)>(r3, $i4, $i5, r2);

        $i6 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: int mImsRetry>;

        $i7 = $i6 + 1;

        r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: int mImsRetry> = $i7;

     label8:
        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.cdma.CdmaSMSDispatcher: boolean VDBG> = 0;

        <com.android.internal.telephony.cdma.CdmaSMSDispatcher: java.lang.String TAG> = "CdmaSMSDispatcher";

        return;
    }
}
