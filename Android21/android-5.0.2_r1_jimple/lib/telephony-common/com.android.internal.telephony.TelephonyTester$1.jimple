class com.android.internal.telephony.TelephonyTester$1 extends android.content.BroadcastReceiver
{
    final com.android.internal.telephony.TelephonyTester this$0;

    void <init>(com.android.internal.telephony.TelephonyTester)
    {
        com.android.internal.telephony.TelephonyTester$1 r0;
        com.android.internal.telephony.TelephonyTester r1;

        r0 := @this: com.android.internal.telephony.TelephonyTester$1;

        r1 := @parameter0: com.android.internal.telephony.TelephonyTester;

        r0.<com.android.internal.telephony.TelephonyTester$1: com.android.internal.telephony.TelephonyTester this$0> = r1;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.android.internal.telephony.TelephonyTester$1 r0;
        android.content.Context r1;
        android.content.Intent r2;
        java.lang.String r3, $r7, $r10, $r13, $r18;
        java.lang.StringBuilder $r4, $r5, $r6, $r14, $r15, $r16;
        com.android.internal.telephony.TelephonyTester $r8, $r11, $r17, $r21;
        com.android.internal.telephony.PhoneBase $r9, $r12, $r20, $r24;
        boolean $z0, $z1;
        com.android.internal.telephony.ServiceStateTracker $r19, $r23;
        android.os.RegistrantList $r22, $r25;

        r0 := @this: com.android.internal.telephony.TelephonyTester$1;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        r3 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sIntentReceiver.onReceive: action=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyTester: void access$000(java.lang.String)>($r7);

        $r8 = r0.<com.android.internal.telephony.TelephonyTester$1: com.android.internal.telephony.TelephonyTester this$0>;

        $r9 = staticinvoke <com.android.internal.telephony.TelephonyTester: com.android.internal.telephony.PhoneBase access$100(com.android.internal.telephony.TelephonyTester)>($r8);

        $r10 = virtualinvoke $r9.<com.android.internal.telephony.PhoneBase: java.lang.String getActionDetached()>();

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label1;

        staticinvoke <com.android.internal.telephony.TelephonyTester: void access$000(java.lang.String)>("simulate detaching");

        $r21 = r0.<com.android.internal.telephony.TelephonyTester$1: com.android.internal.telephony.TelephonyTester this$0>;

        $r24 = staticinvoke <com.android.internal.telephony.TelephonyTester: com.android.internal.telephony.PhoneBase access$100(com.android.internal.telephony.TelephonyTester)>($r21);

        $r23 = virtualinvoke $r24.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()>();

        $r25 = $r23.<com.android.internal.telephony.ServiceStateTracker: android.os.RegistrantList mDetachedRegistrants>;

        virtualinvoke $r25.<android.os.RegistrantList: void notifyRegistrants()>();

        goto label3;

     label1:
        $r11 = r0.<com.android.internal.telephony.TelephonyTester$1: com.android.internal.telephony.TelephonyTester this$0>;

        $r12 = staticinvoke <com.android.internal.telephony.TelephonyTester: com.android.internal.telephony.PhoneBase access$100(com.android.internal.telephony.TelephonyTester)>($r11);

        $r13 = virtualinvoke $r12.<com.android.internal.telephony.PhoneBase: java.lang.String getActionAttached()>();

        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 == 0 goto label2;

        staticinvoke <com.android.internal.telephony.TelephonyTester: void access$000(java.lang.String)>("simulate attaching");

        $r17 = r0.<com.android.internal.telephony.TelephonyTester$1: com.android.internal.telephony.TelephonyTester this$0>;

        $r20 = staticinvoke <com.android.internal.telephony.TelephonyTester: com.android.internal.telephony.PhoneBase access$100(com.android.internal.telephony.TelephonyTester)>($r17);

        $r19 = virtualinvoke $r20.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()>();

        $r22 = $r19.<com.android.internal.telephony.ServiceStateTracker: android.os.RegistrantList mAttachedRegistrants>;

        virtualinvoke $r22.<android.os.RegistrantList: void notifyRegistrants()>();

        goto label3;

     label2:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onReceive: unknown action=");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyTester: void access$000(java.lang.String)>($r18);

     label3:
        return;
    }
}
