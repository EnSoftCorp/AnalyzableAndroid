public class com.android.internal.telephony.DriverCall extends java.lang.Object implements java.lang.Comparable
{
    static final java.lang.String LOG_TAG;
    public int index;
    public boolean isMT;
    public com.android.internal.telephony.DriverCall$State state;
    public boolean isMpty;
    public java.lang.String number;
    public int TOA;
    public boolean isVoice;
    public boolean isVoicePrivacy;
    public int als;
    public int numberPresentation;
    public java.lang.String name;
    public int namePresentation;
    public com.android.internal.telephony.UUSInfo uusInfo;

    static com.android.internal.telephony.DriverCall fromCLCCLine(java.lang.String)
    {
        java.lang.String r0, $r7, $r8, $r9, $r10, $r11, $r16;
        com.android.internal.telephony.DriverCall r1, $r4;
        com.android.internal.telephony.ATResponseParser r2, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2, $z3;
        com.android.internal.telephony.DriverCall$State $r6;
        com.android.internal.telephony.ATParseEx $r12;
        java.lang.StringBuilder $r13, $r14, $r15, $r17;

        r0 := @parameter0: java.lang.String;

        $r4 = new com.android.internal.telephony.DriverCall;

        specialinvoke $r4.<com.android.internal.telephony.DriverCall: void <init>()>();

        r1 = $r4;

        $r5 = new com.android.internal.telephony.ATResponseParser;

        specialinvoke $r5.<com.android.internal.telephony.ATResponseParser: void <init>(java.lang.String)>(r0);

        r2 = $r5;

     label1:
        $i0 = virtualinvoke r2.<com.android.internal.telephony.ATResponseParser: int nextInt()>();

        r1.<com.android.internal.telephony.DriverCall: int index> = $i0;

        $z0 = virtualinvoke r2.<com.android.internal.telephony.ATResponseParser: boolean nextBoolean()>();

        r1.<com.android.internal.telephony.DriverCall: boolean isMT> = $z0;

        $i1 = virtualinvoke r2.<com.android.internal.telephony.ATResponseParser: int nextInt()>();

        $r6 = staticinvoke <com.android.internal.telephony.DriverCall: com.android.internal.telephony.DriverCall$State stateFromCLCC(int)>($i1);

        r1.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.DriverCall$State state> = $r6;

        $i2 = virtualinvoke r2.<com.android.internal.telephony.ATResponseParser: int nextInt()>();

        if 0 != $i2 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        r1.<com.android.internal.telephony.DriverCall: boolean isVoice> = $z3;

        $z1 = virtualinvoke r2.<com.android.internal.telephony.ATResponseParser: boolean nextBoolean()>();

        r1.<com.android.internal.telephony.DriverCall: boolean isMpty> = $z1;

        r1.<com.android.internal.telephony.DriverCall: int numberPresentation> = 1;

        $z2 = virtualinvoke r2.<com.android.internal.telephony.ATResponseParser: boolean hasMore()>();

        if $z2 == 0 goto label5;

        $r7 = virtualinvoke r2.<com.android.internal.telephony.ATResponseParser: java.lang.String nextString()>();

        $r8 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortionAlt(java.lang.String)>($r7);

        r1.<com.android.internal.telephony.DriverCall: java.lang.String number> = $r8;

        $r9 = r1.<com.android.internal.telephony.DriverCall: java.lang.String number>;

        $i3 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i3 != 0 goto label4;

        r1.<com.android.internal.telephony.DriverCall: java.lang.String number> = null;

     label4:
        $i5 = virtualinvoke r2.<com.android.internal.telephony.ATResponseParser: int nextInt()>();

        r1.<com.android.internal.telephony.DriverCall: int TOA> = $i5;

        $r11 = r1.<com.android.internal.telephony.DriverCall: java.lang.String number>;

        $i4 = r1.<com.android.internal.telephony.DriverCall: int TOA>;

        $r10 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String stringFromStringAndTOA(java.lang.String,int)>($r11, $i4);

        r1.<com.android.internal.telephony.DriverCall: java.lang.String number> = $r10;

     label5:
        goto label7;

     label6:
        $r12 := @caughtexception;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid CLCC line: \'");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("DriverCall", $r16);

        return null;

     label7:
        return r1;

        catch com.android.internal.telephony.ATParseEx from label1 to label5 with label6;
    }

    public void <init>()
    {
        com.android.internal.telephony.DriverCall r0;

        r0 := @this: com.android.internal.telephony.DriverCall;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String toString()
    {
        com.android.internal.telephony.DriverCall r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r26;
        int $i0, $i1, $i2, $i3, $i4;
        com.android.internal.telephony.DriverCall$State $r5;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r25, $r27, $r28, $r29, $r30;

        r0 := @this: com.android.internal.telephony.DriverCall;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("id=");

        $i0 = r0.<com.android.internal.telephony.DriverCall: int index>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r5 = r0.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.DriverCall$State state>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("toa=");

        $i1 = r0.<com.android.internal.telephony.DriverCall: int TOA>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $z0 = r0.<com.android.internal.telephony.DriverCall: boolean isMpty>;

        if $z0 == 0 goto label1;

        $r28 = "conf";

        goto label2;

     label1:
        $r28 = "norm";

     label2:
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $z1 = r0.<com.android.internal.telephony.DriverCall: boolean isMT>;

        if $z1 == 0 goto label3;

        $r27 = "mt";

        goto label4;

     label3:
        $r27 = "mo";

     label4:
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i2 = r0.<com.android.internal.telephony.DriverCall: int als>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $z2 = r0.<com.android.internal.telephony.DriverCall: boolean isVoice>;

        if $z2 == 0 goto label5;

        $r30 = "voc";

        goto label6;

     label5:
        $r30 = "nonvoc";

     label6:
        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $z3 = r0.<com.android.internal.telephony.DriverCall: boolean isVoicePrivacy>;

        if $z3 == 0 goto label7;

        $r29 = "evp";

        goto label8;

     label7:
        $r29 = "noevp";

     label8:
        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",cli=");

        $i3 = r0.<com.android.internal.telephony.DriverCall: int numberPresentation>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i4 = r0.<com.android.internal.telephony.DriverCall: int namePresentation>;

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r25;
    }

    public static com.android.internal.telephony.DriverCall$State stateFromCLCC(int) throws com.android.internal.telephony.ATParseEx
    {
        int i0;
        com.android.internal.telephony.DriverCall$State $r0, $r1, $r2, $r3, $r4, $r5;
        com.android.internal.telephony.ATParseEx $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            default: goto label7;
        };

     label1:
        $r0 = <com.android.internal.telephony.DriverCall$State: com.android.internal.telephony.DriverCall$State ACTIVE>;

        return $r0;

     label2:
        $r5 = <com.android.internal.telephony.DriverCall$State: com.android.internal.telephony.DriverCall$State HOLDING>;

        return $r5;

     label3:
        $r4 = <com.android.internal.telephony.DriverCall$State: com.android.internal.telephony.DriverCall$State DIALING>;

        return $r4;

     label4:
        $r3 = <com.android.internal.telephony.DriverCall$State: com.android.internal.telephony.DriverCall$State ALERTING>;

        return $r3;

     label5:
        $r2 = <com.android.internal.telephony.DriverCall$State: com.android.internal.telephony.DriverCall$State INCOMING>;

        return $r2;

     label6:
        $r1 = <com.android.internal.telephony.DriverCall$State: com.android.internal.telephony.DriverCall$State WAITING>;

        return $r1;

     label7:
        $r6 = new com.android.internal.telephony.ATParseEx;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal call state ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.android.internal.telephony.ATParseEx: void <init>(java.lang.String)>($r10);

        throw $r6;
    }

    public static int presentationFromCLIP(int) throws com.android.internal.telephony.ATParseEx
    {
        int i0;
        com.android.internal.telephony.ATParseEx $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label1:
        return 1;

     label2:
        return 2;

     label3:
        return 3;

     label4:
        return 4;

     label5:
        $r0 = new com.android.internal.telephony.ATParseEx;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal presentation ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<com.android.internal.telephony.ATParseEx: void <init>(java.lang.String)>($r4);

        throw $r0;
    }

    public int compareTo(com.android.internal.telephony.DriverCall)
    {
        com.android.internal.telephony.DriverCall r0, r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.internal.telephony.DriverCall;

        r1 := @parameter0: com.android.internal.telephony.DriverCall;

        $i1 = r0.<com.android.internal.telephony.DriverCall: int index>;

        $i0 = r1.<com.android.internal.telephony.DriverCall: int index>;

        if $i1 >= $i0 goto label1;

        return -1;

     label1:
        $i3 = r0.<com.android.internal.telephony.DriverCall: int index>;

        $i2 = r1.<com.android.internal.telephony.DriverCall: int index>;

        if $i3 != $i2 goto label2;

        return 0;

     label2:
        return 1;
    }

    public volatile int compareTo(java.lang.Object)
    {
        com.android.internal.telephony.DriverCall r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.DriverCall;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.android.internal.telephony.DriverCall) r1;

        $i0 = virtualinvoke r0.<com.android.internal.telephony.DriverCall: int compareTo(com.android.internal.telephony.DriverCall)>($r2);

        return $i0;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.DriverCall: java.lang.String LOG_TAG> = "DriverCall";

        return;
    }
}
