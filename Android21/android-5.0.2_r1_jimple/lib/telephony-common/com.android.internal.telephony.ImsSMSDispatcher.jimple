public final class com.android.internal.telephony.ImsSMSDispatcher extends com.android.internal.telephony.SMSDispatcher
{
    private static final java.lang.String TAG;
    private com.android.internal.telephony.SMSDispatcher mCdmaDispatcher;
    private com.android.internal.telephony.SMSDispatcher mGsmDispatcher;
    private com.android.internal.telephony.gsm.GsmInboundSmsHandler mGsmInboundSmsHandler;
    private com.android.internal.telephony.cdma.CdmaInboundSmsHandler mCdmaInboundSmsHandler;
    private boolean mIms;
    private java.lang.String mImsSmsFormat;

    public void <init>(com.android.internal.telephony.PhoneBase, com.android.internal.telephony.SmsStorageMonitor, com.android.internal.telephony.SmsUsageMonitor)
    {
        com.android.internal.telephony.ImsSMSDispatcher r0;
        com.android.internal.telephony.PhoneBase r1;
        com.android.internal.telephony.SmsStorageMonitor r2;
        com.android.internal.telephony.SmsUsageMonitor r3;
        java.lang.Thread r4, $r14;
        com.android.internal.telephony.cdma.CdmaSMSDispatcher $r5, $r10;
        android.content.Context $r6, $r8, $r15;
        com.android.internal.telephony.gsm.GsmInboundSmsHandler $r7, $r13, $r17;
        com.android.internal.telephony.SMSDispatcher $r9;
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler $r11, $r18;
        com.android.internal.telephony.gsm.GsmSMSDispatcher $r12;
        com.android.internal.telephony.SmsBroadcastUndelivered $r16;
        com.android.internal.telephony.CommandsInterface $r19, $r20;

        r0 := @this: com.android.internal.telephony.ImsSMSDispatcher;

        r1 := @parameter0: com.android.internal.telephony.PhoneBase;

        r2 := @parameter1: com.android.internal.telephony.SmsStorageMonitor;

        r3 := @parameter2: com.android.internal.telephony.SmsUsageMonitor;

        specialinvoke r0.<com.android.internal.telephony.SMSDispatcher: void <init>(com.android.internal.telephony.PhoneBase,com.android.internal.telephony.SmsUsageMonitor,com.android.internal.telephony.ImsSMSDispatcher)>(r1, r3, null);

        r0.<com.android.internal.telephony.ImsSMSDispatcher: boolean mIms> = 0;

        r0.<com.android.internal.telephony.ImsSMSDispatcher: java.lang.String mImsSmsFormat> = "unknown";

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RIL_ImsSms", "ImsSMSDispatcher created");

        $r5 = new com.android.internal.telephony.cdma.CdmaSMSDispatcher;

        specialinvoke $r5.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void <init>(com.android.internal.telephony.PhoneBase,com.android.internal.telephony.SmsUsageMonitor,com.android.internal.telephony.ImsSMSDispatcher)>(r1, r3, r0);

        r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.SMSDispatcher mCdmaDispatcher> = $r5;

        $r6 = virtualinvoke r1.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        $r7 = staticinvoke <com.android.internal.telephony.gsm.GsmInboundSmsHandler: com.android.internal.telephony.gsm.GsmInboundSmsHandler makeInboundSmsHandler(android.content.Context,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.PhoneBase)>($r6, r2, r1);

        r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.gsm.GsmInboundSmsHandler mGsmInboundSmsHandler> = $r7;

        $r8 = virtualinvoke r1.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        $r9 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.SMSDispatcher mCdmaDispatcher>;

        $r10 = (com.android.internal.telephony.cdma.CdmaSMSDispatcher) $r9;

        $r11 = staticinvoke <com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.cdma.CdmaInboundSmsHandler makeInboundSmsHandler(android.content.Context,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.PhoneBase,com.android.internal.telephony.cdma.CdmaSMSDispatcher)>($r8, r2, r1, $r10);

        r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.cdma.CdmaInboundSmsHandler mCdmaInboundSmsHandler> = $r11;

        $r12 = new com.android.internal.telephony.gsm.GsmSMSDispatcher;

        $r13 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.gsm.GsmInboundSmsHandler mGsmInboundSmsHandler>;

        specialinvoke $r12.<com.android.internal.telephony.gsm.GsmSMSDispatcher: void <init>(com.android.internal.telephony.PhoneBase,com.android.internal.telephony.SmsUsageMonitor,com.android.internal.telephony.ImsSMSDispatcher,com.android.internal.telephony.gsm.GsmInboundSmsHandler)>(r1, r3, r0, $r13);

        r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.SMSDispatcher mGsmDispatcher> = $r12;

        $r14 = new java.lang.Thread;

        $r16 = new com.android.internal.telephony.SmsBroadcastUndelivered;

        $r15 = virtualinvoke r1.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        $r17 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.gsm.GsmInboundSmsHandler mGsmInboundSmsHandler>;

        $r18 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.cdma.CdmaInboundSmsHandler mCdmaInboundSmsHandler>;

        specialinvoke $r16.<com.android.internal.telephony.SmsBroadcastUndelivered: void <init>(android.content.Context,com.android.internal.telephony.gsm.GsmInboundSmsHandler,com.android.internal.telephony.cdma.CdmaInboundSmsHandler)>($r15, $r17, $r18);

        specialinvoke $r14.<java.lang.Thread: void <init>(java.lang.Runnable)>($r16);

        r4 = $r14;

        virtualinvoke r4.<java.lang.Thread: void start()>();

        $r20 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r20.<com.android.internal.telephony.CommandsInterface: void registerForOn(android.os.Handler,int,java.lang.Object)>(r0, 11, null);

        $r19 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r19.<com.android.internal.telephony.CommandsInterface: void registerForImsNetworkStateChanged(android.os.Handler,int,java.lang.Object)>(r0, 12, null);

        return;
    }

    protected void updatePhoneObject(com.android.internal.telephony.PhoneBase)
    {
        com.android.internal.telephony.ImsSMSDispatcher r0;
        com.android.internal.telephony.PhoneBase r1;
        com.android.internal.telephony.SMSDispatcher $r2, $r3;
        com.android.internal.telephony.gsm.GsmInboundSmsHandler $r4;
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler $r5;

        r0 := @this: com.android.internal.telephony.ImsSMSDispatcher;

        r1 := @parameter0: com.android.internal.telephony.PhoneBase;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RIL_ImsSms", "In IMS updatePhoneObject ");

        specialinvoke r0.<com.android.internal.telephony.SMSDispatcher: void updatePhoneObject(com.android.internal.telephony.PhoneBase)>(r1);

        $r2 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.SMSDispatcher mCdmaDispatcher>;

        virtualinvoke $r2.<com.android.internal.telephony.SMSDispatcher: void updatePhoneObject(com.android.internal.telephony.PhoneBase)>(r1);

        $r3 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.SMSDispatcher mGsmDispatcher>;

        virtualinvoke $r3.<com.android.internal.telephony.SMSDispatcher: void updatePhoneObject(com.android.internal.telephony.PhoneBase)>(r1);

        $r4 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.gsm.GsmInboundSmsHandler mGsmInboundSmsHandler>;

        virtualinvoke $r4.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void updatePhoneObject(com.android.internal.telephony.PhoneBase)>(r1);

        $r5 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.cdma.CdmaInboundSmsHandler mCdmaInboundSmsHandler>;

        virtualinvoke $r5.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void updatePhoneObject(com.android.internal.telephony.PhoneBase)>(r1);

        return;
    }

    public void dispose()
    {
        com.android.internal.telephony.ImsSMSDispatcher r0;
        com.android.internal.telephony.CommandsInterface $r1, $r2;
        com.android.internal.telephony.SMSDispatcher $r3, $r4;
        com.android.internal.telephony.gsm.GsmInboundSmsHandler $r5;
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler $r6;

        r0 := @this: com.android.internal.telephony.ImsSMSDispatcher;

        $r1 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void unregisterForOn(android.os.Handler)>(r0);

        $r2 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void unregisterForImsNetworkStateChanged(android.os.Handler)>(r0);

        $r3 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.SMSDispatcher mGsmDispatcher>;

        virtualinvoke $r3.<com.android.internal.telephony.SMSDispatcher: void dispose()>();

        $r4 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.SMSDispatcher mCdmaDispatcher>;

        virtualinvoke $r4.<com.android.internal.telephony.SMSDispatcher: void dispose()>();

        $r5 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.gsm.GsmInboundSmsHandler mGsmInboundSmsHandler>;

        virtualinvoke $r5.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void dispose()>();

        $r6 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.cdma.CdmaInboundSmsHandler mCdmaInboundSmsHandler>;

        virtualinvoke $r6.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void dispose()>();

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.ImsSMSDispatcher r0;
        android.os.Message r1, $r4;
        android.os.AsyncResult r2;
        int $i0;
        com.android.internal.telephony.CommandsInterface $r3;
        java.lang.Object $r5;
        java.lang.Throwable $r6, $r9;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r11;

        r0 := @this: com.android.internal.telephony.ImsSMSDispatcher;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        tableswitch($i0)
        {
            case 11: goto label1;
            case 12: goto label1;
            case 13: goto label2;
            default: goto label4;
        };

     label1:
        $r3 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.CommandsInterface mCi>;

        $r4 = virtualinvoke r0.<com.android.internal.telephony.ImsSMSDispatcher: android.os.Message obtainMessage(int)>(13);

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void getImsRegistrationState(android.os.Message)>($r4);

        goto label5;

     label2:
        $r5 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (android.os.AsyncResult) $r5;

        $r6 = r2.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r6 != null goto label3;

        specialinvoke r0.<com.android.internal.telephony.ImsSMSDispatcher: void updateImsInfo(android.os.AsyncResult)>(r2);

        goto label5;

     label3:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IMS State query failed with exp ");

        $r9 = r2.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("RIL_ImsSms", $r11);

        goto label5;

     label4:
        specialinvoke r0.<com.android.internal.telephony.SMSDispatcher: void handleMessage(android.os.Message)>(r1);

     label5:
        return;
    }

    private void setImsSmsFormat(int)
    {
        com.android.internal.telephony.ImsSMSDispatcher r0;
        int i0;

        r0 := @this: com.android.internal.telephony.ImsSMSDispatcher;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        r0.<com.android.internal.telephony.ImsSMSDispatcher: java.lang.String mImsSmsFormat> = "3gpp";

        goto label4;

     label2:
        r0.<com.android.internal.telephony.ImsSMSDispatcher: java.lang.String mImsSmsFormat> = "3gpp2";

        goto label4;

     label3:
        r0.<com.android.internal.telephony.ImsSMSDispatcher: java.lang.String mImsSmsFormat> = "unknown";

     label4:
        return;
    }

    private void updateImsInfo(android.os.AsyncResult)
    {
        com.android.internal.telephony.ImsSMSDispatcher r0;
        android.os.AsyncResult r1;
        int[] r2, $r4;
        java.lang.Object $r3;
        int $i0, $i2;
        java.lang.String $r5, $r6;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.ImsSMSDispatcher;

        r1 := @parameter0: android.os.AsyncResult;

        $r3 = r1.<android.os.AsyncResult: java.lang.Object result>;

        $r4 = (int[]) $r3;

        r2 = (int[]) $r4;

        r0.<com.android.internal.telephony.ImsSMSDispatcher: boolean mIms> = 0;

        $i0 = r2[0];

        if $i0 != 1 goto label1;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RIL_ImsSms", "IMS is registered!");

        r0.<com.android.internal.telephony.ImsSMSDispatcher: boolean mIms> = 1;

        goto label2;

     label1:
        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RIL_ImsSms", "IMS is NOT registered!");

     label2:
        $i2 = r2[1];

        specialinvoke r0.<com.android.internal.telephony.ImsSMSDispatcher: void setImsSmsFormat(int)>($i2);

        $r6 = "unknown";

        $r5 = r0.<com.android.internal.telephony.ImsSMSDispatcher: java.lang.String mImsSmsFormat>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label3;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("RIL_ImsSms", "IMS format was unknown!");

        r0.<com.android.internal.telephony.ImsSMSDispatcher: boolean mIms> = 0;

     label3:
        return;
    }

    protected void sendData(java.lang.String, java.lang.String, int, byte[], android.app.PendingIntent, android.app.PendingIntent)
    {
        com.android.internal.telephony.ImsSMSDispatcher r0;
        java.lang.String r1, r2;
        int i0;
        byte[] r3;
        android.app.PendingIntent r4, r5;
        boolean $z0;
        com.android.internal.telephony.SMSDispatcher $r6, $r7;

        r0 := @this: com.android.internal.telephony.ImsSMSDispatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: byte[];

        r4 := @parameter4: android.app.PendingIntent;

        r5 := @parameter5: android.app.PendingIntent;

        $z0 = specialinvoke r0.<com.android.internal.telephony.ImsSMSDispatcher: boolean isCdmaMo()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.SMSDispatcher mCdmaDispatcher>;

        virtualinvoke $r7.<com.android.internal.telephony.SMSDispatcher: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>(r1, r2, i0, r3, r4, r5);

        goto label2;

     label1:
        $r6 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.SMSDispatcher mGsmDispatcher>;

        virtualinvoke $r6.<com.android.internal.telephony.SMSDispatcher: void sendData(java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>(r1, r2, i0, r3, r4, r5);

     label2:
        return;
    }

    protected void sendMultipartText(java.lang.String, java.lang.String, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, android.net.Uri, java.lang.String)
    {
        com.android.internal.telephony.ImsSMSDispatcher r0;
        java.lang.String r1, r2, r7;
        java.util.ArrayList r3, r4, r5;
        android.net.Uri r6;
        boolean $z0;
        com.android.internal.telephony.SMSDispatcher $r8, $r9;

        r0 := @this: com.android.internal.telephony.ImsSMSDispatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.ArrayList;

        r4 := @parameter3: java.util.ArrayList;

        r5 := @parameter4: java.util.ArrayList;

        r6 := @parameter5: android.net.Uri;

        r7 := @parameter6: java.lang.String;

        $z0 = specialinvoke r0.<com.android.internal.telephony.ImsSMSDispatcher: boolean isCdmaMo()>();

        if $z0 == 0 goto label1;

        $r9 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.SMSDispatcher mCdmaDispatcher>;

        virtualinvoke $r9.<com.android.internal.telephony.SMSDispatcher: void sendMultipartText(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,android.net.Uri,java.lang.String)>(r1, r2, r3, r4, r5, r6, r7);

        goto label2;

     label1:
        $r8 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.SMSDispatcher mGsmDispatcher>;

        virtualinvoke $r8.<com.android.internal.telephony.SMSDispatcher: void sendMultipartText(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,android.net.Uri,java.lang.String)>(r1, r2, r3, r4, r5, r6, r7);

     label2:
        return;
    }

    protected void sendSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)
    {
        com.android.internal.telephony.ImsSMSDispatcher r0;
        com.android.internal.telephony.SMSDispatcher$SmsTracker r1;

        r0 := @this: com.android.internal.telephony.ImsSMSDispatcher;

        r1 := @parameter0: com.android.internal.telephony.SMSDispatcher$SmsTracker;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("RIL_ImsSms", "sendSms should never be called from here!");

        return;
    }

    protected void sendSmsByPstn(com.android.internal.telephony.SMSDispatcher$SmsTracker)
    {
        com.android.internal.telephony.ImsSMSDispatcher r0;
        com.android.internal.telephony.SMSDispatcher$SmsTracker r1;

        r0 := @this: com.android.internal.telephony.ImsSMSDispatcher;

        r1 := @parameter0: com.android.internal.telephony.SMSDispatcher$SmsTracker;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("RIL_ImsSms", "sendSmsByPstn should never be called from here!");

        return;
    }

    protected void updateSmsSendStatus(int, boolean)
    {
        com.android.internal.telephony.ImsSMSDispatcher r0;
        int i0;
        boolean z0, $z1;
        com.android.internal.telephony.SMSDispatcher $r1, $r2, $r4, $r6, $r7, $r9;
        java.util.List $r3, $r5, $r8, $r10;

        r0 := @this: com.android.internal.telephony.ImsSMSDispatcher;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $z1 = specialinvoke r0.<com.android.internal.telephony.ImsSMSDispatcher: boolean isCdmaMo()>();

        if $z1 == 0 goto label1;

        $r6 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.SMSDispatcher mCdmaDispatcher>;

        $r8 = $r6.<com.android.internal.telephony.SMSDispatcher: java.util.List sendPendingList>;

        $r7 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.SMSDispatcher mCdmaDispatcher>;

        specialinvoke r0.<com.android.internal.telephony.ImsSMSDispatcher: void updateSmsSendStatusHelper(int,java.util.List,com.android.internal.telephony.SMSDispatcher,boolean)>(i0, $r8, $r7, z0);

        $r9 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.SMSDispatcher mGsmDispatcher>;

        $r10 = $r9.<com.android.internal.telephony.SMSDispatcher: java.util.List sendPendingList>;

        specialinvoke r0.<com.android.internal.telephony.ImsSMSDispatcher: void updateSmsSendStatusHelper(int,java.util.List,com.android.internal.telephony.SMSDispatcher,boolean)>(i0, $r10, null, z0);

        goto label2;

     label1:
        $r1 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.SMSDispatcher mGsmDispatcher>;

        $r3 = $r1.<com.android.internal.telephony.SMSDispatcher: java.util.List sendPendingList>;

        $r2 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.SMSDispatcher mGsmDispatcher>;

        specialinvoke r0.<com.android.internal.telephony.ImsSMSDispatcher: void updateSmsSendStatusHelper(int,java.util.List,com.android.internal.telephony.SMSDispatcher,boolean)>(i0, $r3, $r2, z0);

        $r4 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.SMSDispatcher mCdmaDispatcher>;

        $r5 = $r4.<com.android.internal.telephony.SMSDispatcher: java.util.List sendPendingList>;

        specialinvoke r0.<com.android.internal.telephony.ImsSMSDispatcher: void updateSmsSendStatusHelper(int,java.util.List,com.android.internal.telephony.SMSDispatcher,boolean)>(i0, $r5, null, z0);

     label2:
        return;
    }

    private void updateSmsSendStatusHelper(int, java.util.List, com.android.internal.telephony.SMSDispatcher, boolean)
    {
        com.android.internal.telephony.ImsSMSDispatcher r0;
        int i0, i1, i2, $i3;
        java.util.List r1, r3;
        com.android.internal.telephony.SMSDispatcher r2;
        boolean z0;
        com.android.internal.telephony.SMSDispatcher$SmsTracker r4;
        java.lang.Throwable r5, $r11;
        java.lang.Object $r7;
        android.os.AsyncResult $r9;
        android.os.Message $r10;

        r0 := @this: com.android.internal.telephony.ImsSMSDispatcher;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: com.android.internal.telephony.SMSDispatcher;

        z0 := @parameter3: boolean;

        r3 = r1;

        entermonitor r1;

     label01:
        i1 = 0;

        i2 = interfaceinvoke r1.<java.util.List: int size()>();

     label02:
        if i1 >= i2 goto label06;

        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (com.android.internal.telephony.SMSDispatcher$SmsTracker) $r7;

        $i3 = r4.<com.android.internal.telephony.SMSDispatcher$SmsTracker: int mMessageRef>;

        if $i3 != i0 goto label05;

        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(i1);

        if z0 == 0 goto label03;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RIL_ImsSms", "Sending SMS by IP succeeded.");

        $r9 = new android.os.AsyncResult;

        specialinvoke $r9.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(r4, null, null);

        $r10 = virtualinvoke r0.<com.android.internal.telephony.ImsSMSDispatcher: android.os.Message obtainMessage(int,java.lang.Object)>(2, $r9);

        virtualinvoke r0.<com.android.internal.telephony.ImsSMSDispatcher: boolean sendMessage(android.os.Message)>($r10);

        goto label06;

     label03:
        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RIL_ImsSms", "Sending SMS by IP failed.");

        if r2 == null goto label04;

        virtualinvoke r2.<com.android.internal.telephony.SMSDispatcher: void sendSmsByPstn(com.android.internal.telephony.SMSDispatcher$SmsTracker)>(r4);

        goto label06;

     label04:
        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("RIL_ImsSms", "No feasible way to send this SMS.");

        goto label06;

     label05:
        i1 = i1 + 1;

        goto label02;

     label06:
        exitmonitor r3;

     label07:
        goto label10;

     label08:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r3;

     label09:
        throw r5;

     label10:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    protected void sendText(java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent, android.net.Uri, java.lang.String)
    {
        com.android.internal.telephony.ImsSMSDispatcher r0;
        java.lang.String r1, r2, r3, r7;
        android.app.PendingIntent r4, r5;
        android.net.Uri r6;
        boolean $z0;
        com.android.internal.telephony.SMSDispatcher $r8, $r9;

        r0 := @this: com.android.internal.telephony.ImsSMSDispatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.app.PendingIntent;

        r5 := @parameter4: android.app.PendingIntent;

        r6 := @parameter5: android.net.Uri;

        r7 := @parameter6: java.lang.String;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RIL_ImsSms", "sendText");

        $z0 = specialinvoke r0.<com.android.internal.telephony.ImsSMSDispatcher: boolean isCdmaMo()>();

        if $z0 == 0 goto label1;

        $r9 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.SMSDispatcher mCdmaDispatcher>;

        virtualinvoke $r9.<com.android.internal.telephony.SMSDispatcher: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,android.net.Uri,java.lang.String)>(r1, r2, r3, r4, r5, r6, r7);

        goto label2;

     label1:
        $r8 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.SMSDispatcher mGsmDispatcher>;

        virtualinvoke $r8.<com.android.internal.telephony.SMSDispatcher: void sendText(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent,android.net.Uri,java.lang.String)>(r1, r2, r3, r4, r5, r6, r7);

     label2:
        return;
    }

    protected void injectSmsPdu(byte[], java.lang.String, android.app.PendingIntent)
    {
        com.android.internal.telephony.ImsSMSDispatcher r0;
        byte[] r1;
        java.lang.String r2, $r11, $r19, $r29;
        android.app.PendingIntent r3;
        android.telephony.SmsMessage r4;
        android.os.AsyncResult r5, $r8;
        android.telephony.SmsMessage$MessageClass $r6, $r7;
        boolean $z0, $z1;
        java.lang.StringBuilder $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r22, $r23, $r24, $r25, $r26;
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler $r21;
        com.android.internal.telephony.gsm.GsmInboundSmsHandler $r27;
        android.app.PendingIntent$CanceledException $r28;
        java.lang.Exception $r30, r31;

        r0 := @this: com.android.internal.telephony.ImsSMSDispatcher;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.app.PendingIntent;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RIL_ImsSms", "ImsSMSDispatcher:injectSmsPdu");

     label01:
        r4 = staticinvoke <android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[],java.lang.String)>(r1, r2);

        $r6 = virtualinvoke r4.<android.telephony.SmsMessage: android.telephony.SmsMessage$MessageClass getMessageClass()>();

        $r7 = <android.telephony.SmsMessage$MessageClass: android.telephony.SmsMessage$MessageClass CLASS_1>;

        if $r6 == $r7 goto label03;

        if r3 == null goto label02;

        virtualinvoke r3.<android.app.PendingIntent: void send(int)>(2);

     label02:
        return;

     label03:
        $r8 = new android.os.AsyncResult;

        specialinvoke $r8.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(r3, r4, null);

        r5 = $r8;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("3gpp");

        if $z0 == 0 goto label04;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImsSMSDispatcher:injectSmsText Sending msg=");

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", format=");

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("to mGsmInboundSmsHandler");

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("RIL_ImsSms", $r29);

        $r27 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.gsm.GsmInboundSmsHandler mGsmInboundSmsHandler>;

        virtualinvoke $r27.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void sendMessage(int,java.lang.Object)>(8, r5);

        goto label06;

     label04:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("3gpp2");

        if $z1 == 0 goto label05;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImsSMSDispatcher:injectSmsText Sending msg=");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", format=");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("to mCdmaInboundSmsHandler");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("RIL_ImsSms", $r19);

        $r21 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.cdma.CdmaInboundSmsHandler mCdmaInboundSmsHandler>;

        virtualinvoke $r21.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void sendMessage(int,java.lang.Object)>(8, r5);

        goto label06;

     label05:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid pdu format: ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("RIL_ImsSms", $r11);

        if r3 == null goto label06;

        virtualinvoke r3.<android.app.PendingIntent: void send(int)>(2);

     label06:
        goto label11;

     label07:
        $r30 := @caughtexception;

        r31 = $r30;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RIL_ImsSms", "injectSmsPdu failed: ", r31);

     label08:
        if r3 == null goto label09;

        virtualinvoke r3.<android.app.PendingIntent: void send(int)>(2);

     label09:
        goto label11;

     label10:
        $r28 := @caughtexception;

     label11:
        return;

        catch java.lang.Exception from label01 to label02 with label07;
        catch java.lang.Exception from label03 to label06 with label07;
        catch android.app.PendingIntent$CanceledException from label08 to label09 with label10;
    }

    public void sendRetrySms(com.android.internal.telephony.SMSDispatcher$SmsTracker)
    {
        com.android.internal.telephony.ImsSMSDispatcher r0;
        com.android.internal.telephony.SMSDispatcher$SmsTracker r1;
        java.lang.String r2, r3, r5, r6, r8, $r12, $r21;
        java.util.HashMap r4;
        com.android.internal.telephony.SmsMessageBase$SubmitPduBase r7;
        java.lang.Integer r9;
        com.android.internal.telephony.PhoneBase $r10;
        int $i0, $i3, $i6;
        com.android.internal.telephony.SMSDispatcher $r11, $r20, $r30, $r31, $r32, r34;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        android.content.Context $r13;
        java.lang.Object $r14, $r15, $r23, $r24, $r28;
        byte[] $r16, $r17, $r22, r33;
        android.app.PendingIntent $r25, $r26, $r27, $r29;

        r0 := @this: com.android.internal.telephony.ImsSMSDispatcher;

        r1 := @parameter0: com.android.internal.telephony.SMSDispatcher$SmsTracker;

        r2 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: java.lang.String mFormat>;

        $r10 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.PhoneBase mPhone>;

        $i0 = virtualinvoke $r10.<com.android.internal.telephony.PhoneBase: int getPhoneType()>();

        if 2 != $i0 goto label01;

        $r32 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.SMSDispatcher mCdmaDispatcher>;

        $r12 = virtualinvoke $r32.<com.android.internal.telephony.SMSDispatcher: java.lang.String getFormat()>();

        goto label02;

     label01:
        $r11 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.SMSDispatcher mGsmDispatcher>;

        $r12 = virtualinvoke $r11.<com.android.internal.telephony.SMSDispatcher: java.lang.String getFormat()>();

     label02:
        r3 = $r12;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label04;

        $z15 = specialinvoke r0.<com.android.internal.telephony.ImsSMSDispatcher: boolean isCdmaFormat(java.lang.String)>(r3);

        if $z15 == 0 goto label03;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RIL_ImsSms", "old format matched new format (cdma)");

        $r31 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.SMSDispatcher mCdmaDispatcher>;

        virtualinvoke $r31.<com.android.internal.telephony.SMSDispatcher: void sendSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>(r1);

        return;

     label03:
        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RIL_ImsSms", "old format matched new format (gsm)");

        $r30 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.SMSDispatcher mGsmDispatcher>;

        virtualinvoke $r30.<com.android.internal.telephony.SMSDispatcher: void sendSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>(r1);

        return;

     label04:
        r4 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: java.util.HashMap mData>;

        $z1 = virtualinvoke r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>("scAddr");

        if $z1 == 0 goto label05;

        $z2 = virtualinvoke r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>("destAddr");

        if $z2 == 0 goto label05;

        $z3 = virtualinvoke r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>("text");

        if $z3 != 0 goto label06;

        $z13 = virtualinvoke r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>("data");

        if $z13 == 0 goto label05;

        $z12 = virtualinvoke r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>("destPort");

        if $z12 != 0 goto label06;

     label05:
        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("RIL_ImsSms", "sendRetrySms failed to re-encode per missing fields!");

        $r13 = r0.<com.android.internal.telephony.ImsSMSDispatcher: android.content.Context mContext>;

        virtualinvoke r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: void onFailed(android.content.Context,int,int)>($r13, 1, 0);

        return;

     label06:
        $r14 = virtualinvoke r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("scAddr");

        r5 = (java.lang.String) $r14;

        $r15 = virtualinvoke r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("destAddr");

        r6 = (java.lang.String) $r15;

        r7 = null;

        $z4 = virtualinvoke r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>("text");

        if $z4 == 0 goto label13;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RIL_ImsSms", "sms failed was text");

        $r28 = virtualinvoke r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("text");

        r8 = (java.lang.String) $r28;

        $z10 = specialinvoke r0.<com.android.internal.telephony.ImsSMSDispatcher: boolean isCdmaFormat(java.lang.String)>(r3);

        if $z10 == 0 goto label09;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RIL_ImsSms", "old format (gsm) ==> new format (cdma)");

        $r29 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: android.app.PendingIntent mDeliveryIntent>;

        if $r29 == null goto label07;

        $z14 = 1;

        goto label08;

     label07:
        $z14 = 0;

     label08:
        r7 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,com.android.internal.telephony.SmsHeader)>(r5, r6, r8, $z14, null);

        goto label12;

     label09:
        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RIL_ImsSms", "old format (cdma) ==> new format (gsm)");

        $r27 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: android.app.PendingIntent mDeliveryIntent>;

        if $r27 == null goto label10;

        $z11 = 1;

        goto label11;

     label10:
        $z11 = 0;

     label11:
        r7 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,byte[])>(r5, r6, r8, $z11, null);

     label12:
        goto label19;

     label13:
        $z5 = virtualinvoke r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>("data");

        if $z5 == 0 goto label19;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RIL_ImsSms", "sms failed was data");

        $r24 = virtualinvoke r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("data");

        $r22 = (byte[]) $r24;

        r33 = (byte[]) $r22;

        $r23 = virtualinvoke r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("destPort");

        r9 = (java.lang.Integer) $r23;

        $z7 = specialinvoke r0.<com.android.internal.telephony.ImsSMSDispatcher: boolean isCdmaFormat(java.lang.String)>(r3);

        if $z7 == 0 goto label16;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RIL_ImsSms", "old format (gsm) ==> new format (cdma)");

        $i6 = virtualinvoke r9.<java.lang.Integer: int intValue()>();

        $r26 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: android.app.PendingIntent mDeliveryIntent>;

        if $r26 == null goto label14;

        $z9 = 1;

        goto label15;

     label14:
        $z9 = 0;

     label15:
        r7 = staticinvoke <com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.cdma.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,int,byte[],boolean)>(r5, r6, $i6, r33, $z9);

        goto label19;

     label16:
        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RIL_ImsSms", "old format (cdma) ==> new format (gsm)");

        $i3 = virtualinvoke r9.<java.lang.Integer: int intValue()>();

        $r25 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: android.app.PendingIntent mDeliveryIntent>;

        if $r25 == null goto label17;

        $z8 = 1;

        goto label18;

     label17:
        $z8 = 0;

     label18:
        r7 = staticinvoke <com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,int,byte[],boolean)>(r5, r6, $i3, r33, $z8);

     label19:
        $r16 = r7.<com.android.internal.telephony.SmsMessageBase$SubmitPduBase: byte[] encodedScAddress>;

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("smsc", $r16);

        $r17 = r7.<com.android.internal.telephony.SmsMessageBase$SubmitPduBase: byte[] encodedMessage>;

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("pdu", $r17);

        $z6 = specialinvoke r0.<com.android.internal.telephony.ImsSMSDispatcher: boolean isCdmaFormat(java.lang.String)>(r3);

        if $z6 == 0 goto label20;

        $r20 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.SMSDispatcher mCdmaDispatcher>;

        goto label21;

     label20:
        $r20 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.SMSDispatcher mGsmDispatcher>;

     label21:
        r34 = $r20;

        $r21 = virtualinvoke r34.<com.android.internal.telephony.SMSDispatcher: java.lang.String getFormat()>();

        r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: java.lang.String mFormat> = $r21;

        virtualinvoke r34.<com.android.internal.telephony.SMSDispatcher: void sendSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>(r1);

        return;
    }

    protected java.lang.String getFormat()
    {
        com.android.internal.telephony.ImsSMSDispatcher r0;

        r0 := @this: com.android.internal.telephony.ImsSMSDispatcher;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("RIL_ImsSms", "getFormat should never be called from here!");

        return "unknown";
    }

    protected com.android.internal.telephony.GsmAlphabet$TextEncodingDetails calculateLength(java.lang.CharSequence, boolean)
    {
        com.android.internal.telephony.ImsSMSDispatcher r0;
        java.lang.CharSequence r1;
        boolean z0;

        r0 := @this: com.android.internal.telephony.ImsSMSDispatcher;

        r1 := @parameter0: java.lang.CharSequence;

        z0 := @parameter1: boolean;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("RIL_ImsSms", "Error! Not implemented for IMS.");

        return null;
    }

    protected void sendNewSubmitPdu(java.lang.String, java.lang.String, java.lang.String, com.android.internal.telephony.SmsHeader, int, android.app.PendingIntent, android.app.PendingIntent, boolean, java.util.concurrent.atomic.AtomicInteger, java.util.concurrent.atomic.AtomicBoolean, android.net.Uri)
    {
        com.android.internal.telephony.ImsSMSDispatcher r0;
        java.lang.String r1, r2, r3;
        com.android.internal.telephony.SmsHeader r4;
        int i0;
        android.app.PendingIntent r5, r6;
        boolean z0;
        java.util.concurrent.atomic.AtomicInteger r7;
        java.util.concurrent.atomic.AtomicBoolean r8;
        android.net.Uri r9;

        r0 := @this: com.android.internal.telephony.ImsSMSDispatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: com.android.internal.telephony.SmsHeader;

        i0 := @parameter4: int;

        r5 := @parameter5: android.app.PendingIntent;

        r6 := @parameter6: android.app.PendingIntent;

        z0 := @parameter7: boolean;

        r7 := @parameter8: java.util.concurrent.atomic.AtomicInteger;

        r8 := @parameter9: java.util.concurrent.atomic.AtomicBoolean;

        r9 := @parameter10: android.net.Uri;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("RIL_ImsSms", "Error! Not implemented for IMS.");

        return;
    }

    public boolean isIms()
    {
        com.android.internal.telephony.ImsSMSDispatcher r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.ImsSMSDispatcher;

        $z0 = r0.<com.android.internal.telephony.ImsSMSDispatcher: boolean mIms>;

        return $z0;
    }

    public java.lang.String getImsSmsFormat()
    {
        com.android.internal.telephony.ImsSMSDispatcher r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.ImsSMSDispatcher;

        $r1 = r0.<com.android.internal.telephony.ImsSMSDispatcher: java.lang.String mImsSmsFormat>;

        return $r1;
    }

    private boolean isCdmaMo()
    {
        com.android.internal.telephony.ImsSMSDispatcher r0;
        boolean $z0, $z1, $z2;
        java.lang.String $r1;
        com.android.internal.telephony.PhoneBase $r2;
        int $i0;

        r0 := @this: com.android.internal.telephony.ImsSMSDispatcher;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.ImsSMSDispatcher: boolean isIms()>();

        if $z0 != 0 goto label3;

        $r2 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.PhoneBase mPhone>;

        $i0 = virtualinvoke $r2.<com.android.internal.telephony.PhoneBase: int getPhoneType()>();

        if 2 != $i0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;

     label3:
        $r1 = r0.<com.android.internal.telephony.ImsSMSDispatcher: java.lang.String mImsSmsFormat>;

        $z1 = specialinvoke r0.<com.android.internal.telephony.ImsSMSDispatcher: boolean isCdmaFormat(java.lang.String)>($r1);

        return $z1;
    }

    private boolean isCdmaFormat(java.lang.String)
    {
        com.android.internal.telephony.ImsSMSDispatcher r0;
        java.lang.String r1, $r3;
        com.android.internal.telephony.SMSDispatcher $r2;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.ImsSMSDispatcher;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.ImsSMSDispatcher: com.android.internal.telephony.SMSDispatcher mCdmaDispatcher>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.SMSDispatcher: java.lang.String getFormat()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.ImsSMSDispatcher: java.lang.String TAG> = "RIL_ImsSms";

        return;
    }
}
