public class com.android.internal.telephony.cdma.CdmaServiceStateTracker extends com.android.internal.telephony.ServiceStateTracker
{
    static final java.lang.String LOG_TAG;
    com.android.internal.telephony.cdma.CDMAPhone mPhone;
    android.telephony.cdma.CdmaCellLocation mCellLoc;
    android.telephony.cdma.CdmaCellLocation mNewCellLoc;
    private static final java.lang.String UNACTIVATED_MIN2_VALUE;
    private static final java.lang.String UNACTIVATED_MIN_VALUE;
    private static final int MS_PER_HOUR;
    int mCurrentOtaspMode;
    private static final int NITZ_UPDATE_SPACING_DEFAULT;
    private int mNitzUpdateSpacing;
    private static final int NITZ_UPDATE_DIFF_DEFAULT;
    private int mNitzUpdateDiff;
    private boolean mCdmaRoaming;
    private int mRoamingIndicator;
    private boolean mIsInPrl;
    private int mDefaultRoamingIndicator;
    protected int mRegistrationState;
    protected android.os.RegistrantList mCdmaForSubscriptionInfoReadyRegistrants;
    protected boolean mNeedFixZone;
    private int mZoneOffset;
    private boolean mZoneDst;
    private long mZoneTime;
    protected boolean mGotCountryCode;
    java.lang.String mSavedTimeZone;
    long mSavedTime;
    long mSavedAtTime;
    private android.os.PowerManager$WakeLock mWakeLock;
    private static final java.lang.String WAKELOCK_TAG;
    protected java.lang.String mCurPlmn;
    protected java.lang.String mMdn;
    protected int[] mHomeSystemId;
    protected int[] mHomeNetworkId;
    protected java.lang.String mMin;
    protected java.lang.String mPrlVersion;
    protected boolean mIsMinInfoReady;
    private boolean mIsEriTextLoaded;
    protected boolean mIsSubscriptionFromRuim;
    private com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager mCdmaSSM;
    protected static final java.lang.String INVALID_MCC;
    protected static final java.lang.String DEFAULT_MNC;
    protected com.android.internal.telephony.HbpcdUtils mHbpcdUtils;
    private java.lang.String mRegistrationDeniedReason;
    private android.content.ContentResolver mCr;
    private java.lang.String mCurrentCarrier;
    private android.database.ContentObserver mAutoTimeObserver;
    private android.database.ContentObserver mAutoTimeZoneObserver;

    public void <init>(com.android.internal.telephony.cdma.CDMAPhone)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        com.android.internal.telephony.cdma.CDMAPhone r1;
        android.telephony.CellInfoCdma $r2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: com.android.internal.telephony.cdma.CDMAPhone;

        $r2 = new android.telephony.CellInfoCdma;

        specialinvoke $r2.<android.telephony.CellInfoCdma: void <init>()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void <init>(com.android.internal.telephony.cdma.CDMAPhone,android.telephony.CellInfo)>(r1, $r2);

        return;
    }

    protected void <init>(com.android.internal.telephony.cdma.CDMAPhone, android.telephony.CellInfo)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        com.android.internal.telephony.cdma.CDMAPhone r1;
        android.telephony.CellInfo r2;
        android.os.PowerManager r3;
        int i0, $i1, $i2, $i3;
        com.android.internal.telephony.CommandsInterface $r4, $r16, $r20, $r22, $r23, $r24, $r25;
        android.os.RegistrantList $r5;
        com.android.internal.telephony.cdma.CdmaServiceStateTracker$1 $r6;
        android.os.Handler $r7, $r9;
        com.android.internal.telephony.cdma.CdmaServiceStateTracker$2 $r8;
        android.content.Context $r10, $r13, $r19, $r32;
        android.content.ContentResolver $r11, $r26, $r28, $r29;
        android.telephony.cdma.CdmaCellLocation $r12, $r14;
        com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager $r15, $r17;
        java.lang.Object $r18;
        android.os.PowerManager$WakeLock $r21;
        android.database.ContentObserver $r27, $r34;
        android.net.Uri $r30, $r33;
        com.android.internal.telephony.HbpcdUtils $r31;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: com.android.internal.telephony.cdma.CDMAPhone;

        r2 := @parameter1: android.telephony.CellInfo;

        $r4 = r1.<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.CommandsInterface mCi>;

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void <init>(com.android.internal.telephony.PhoneBase,com.android.internal.telephony.CommandsInterface,android.telephony.CellInfo)>(r1, $r4, r2);

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mCurrentOtaspMode> = 0;

        $i1 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("ro.nitz_update_spacing", 600000);

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mNitzUpdateSpacing> = $i1;

        $i2 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("ro.nitz_update_diff", 2000);

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mNitzUpdateDiff> = $i2;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mCdmaRoaming> = 0;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mRegistrationState> = -1;

        $r5 = new android.os.RegistrantList;

        specialinvoke $r5.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.RegistrantList mCdmaForSubscriptionInfoReadyRegistrants> = $r5;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mNeedFixZone> = 0;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mGotCountryCode> = 0;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mCurPlmn> = null;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeSystemId> = null;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeNetworkId> = null;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsMinInfoReady> = 0;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsEriTextLoaded> = 0;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsSubscriptionFromRuim> = 0;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.HbpcdUtils mHbpcdUtils> = null;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mCurrentCarrier> = null;

        $r6 = new com.android.internal.telephony.cdma.CdmaServiceStateTracker$1;

        $r7 = new android.os.Handler;

        specialinvoke $r7.<android.os.Handler: void <init>()>();

        specialinvoke $r6.<com.android.internal.telephony.cdma.CdmaServiceStateTracker$1: void <init>(com.android.internal.telephony.cdma.CdmaServiceStateTracker,android.os.Handler)>(r0, $r7);

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.database.ContentObserver mAutoTimeObserver> = $r6;

        $r8 = new com.android.internal.telephony.cdma.CdmaServiceStateTracker$2;

        $r9 = new android.os.Handler;

        specialinvoke $r9.<android.os.Handler: void <init>()>();

        specialinvoke $r8.<com.android.internal.telephony.cdma.CdmaServiceStateTracker$2: void <init>(com.android.internal.telephony.cdma.CdmaServiceStateTracker,android.os.Handler)>(r0, $r9);

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.database.ContentObserver mAutoTimeZoneObserver> = $r8;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone> = r1;

        $r10 = virtualinvoke r1.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        $r11 = virtualinvoke $r10.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.content.ContentResolver mCr> = $r11;

        $r12 = new android.telephony.cdma.CdmaCellLocation;

        specialinvoke $r12.<android.telephony.cdma.CdmaCellLocation: void <init>()>();

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mCellLoc> = $r12;

        $r14 = new android.telephony.cdma.CdmaCellLocation;

        specialinvoke $r14.<android.telephony.cdma.CdmaCellLocation: void <init>()>();

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mNewCellLoc> = $r14;

        $r13 = virtualinvoke r1.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        $r16 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r15 = staticinvoke <com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager getInstance(android.content.Context,com.android.internal.telephony.CommandsInterface,android.os.Handler,int,java.lang.Object)>($r13, $r16, r0, 39, null);

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager mCdmaSSM> = $r15;

        $r17 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager mCdmaSSM>;

        $i3 = virtualinvoke $r17.<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: int getCdmaSubscriptionSource()>();

        if $i3 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsSubscriptionFromRuim> = $z1;

        $r19 = virtualinvoke r1.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        $r18 = virtualinvoke $r19.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        r3 = (android.os.PowerManager) $r18;

        $r21 = virtualinvoke r3.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "ServiceStateTracker");

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.PowerManager$WakeLock mWakeLock> = $r21;

        $r20 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r20.<com.android.internal.telephony.CommandsInterface: void registerForRadioStateChanged(android.os.Handler,int,java.lang.Object)>(r0, 1, null);

        $r23 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r23.<com.android.internal.telephony.CommandsInterface: void registerForVoiceNetworkStateChanged(android.os.Handler,int,java.lang.Object)>(r0, 30, null);

        $r22 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r22.<com.android.internal.telephony.CommandsInterface: void setOnNITZTime(android.os.Handler,int,java.lang.Object)>(r0, 11, null);

        $r25 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r25.<com.android.internal.telephony.CommandsInterface: void registerForCdmaPrlChanged(android.os.Handler,int,java.lang.Object)>(r0, 40, null);

        virtualinvoke r1.<com.android.internal.telephony.cdma.CDMAPhone: void registerForEriFileLoaded(android.os.Handler,int,java.lang.Object)>(r0, 36, null);

        $r24 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r24.<com.android.internal.telephony.CommandsInterface: void registerForCdmaOtaProvision(android.os.Handler,int,java.lang.Object)>(r0, 37, null);

        $r26 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.content.ContentResolver mCr>;

        i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r26, "airplane_mode_on", 0);

        if i0 > 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mDesiredPowerState> = $z0;

        $r29 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.content.ContentResolver mCr>;

        $r30 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("auto_time");

        $r27 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.database.ContentObserver mAutoTimeObserver>;

        virtualinvoke $r29.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r30, 1, $r27);

        $r28 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.content.ContentResolver mCr>;

        $r33 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("auto_time_zone");

        $r34 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.database.ContentObserver mAutoTimeZoneObserver>;

        virtualinvoke $r28.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r33, 1, $r34);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setSignalStrengthDefaultValues()>();

        $r31 = new com.android.internal.telephony.HbpcdUtils;

        $r32 = virtualinvoke r1.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        specialinvoke $r31.<com.android.internal.telephony.HbpcdUtils: void <init>(android.content.Context)>($r32);

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.HbpcdUtils mHbpcdUtils> = $r31;

        virtualinvoke r1.<com.android.internal.telephony.cdma.CDMAPhone: void notifyOtaspChanged(int)>(0);

        return;
    }

    public void dispose()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        com.android.internal.telephony.CommandsInterface $r1, $r2, $r3, $r7, $r13;
        com.android.internal.telephony.cdma.CDMAPhone $r4;
        com.android.internal.telephony.uicc.UiccCardApplication $r5, $r15;
        com.android.internal.telephony.uicc.IccRecords $r6, $r14;
        android.database.ContentObserver $r8, $r10;
        android.content.ContentResolver $r9, $r11;
        com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager $r12;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void checkCorrectThread()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("ServiceStateTracker dispose");

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void unregisterForRadioStateChanged(android.os.Handler)>(r0);

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void unregisterForVoiceNetworkStateChanged(android.os.Handler)>(r0);

        $r3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void unregisterForCdmaOtaProvision(android.os.Handler)>(r0);

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r4.<com.android.internal.telephony.cdma.CDMAPhone: void unregisterForEriFileLoaded(android.os.Handler)>(r0);

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation>;

        if $r5 == null goto label1;

        $r15 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation>;

        virtualinvoke $r15.<com.android.internal.telephony.uicc.UiccCardApplication: void unregisterForReady(android.os.Handler)>(r0);

     label1:
        $r6 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        if $r6 == null goto label2;

        $r14 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        virtualinvoke $r14.<com.android.internal.telephony.uicc.IccRecords: void unregisterForRecordsLoaded(android.os.Handler)>(r0);

     label2:
        $r7 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r7.<com.android.internal.telephony.CommandsInterface: void unSetOnNITZTime(android.os.Handler)>(r0);

        $r9 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.content.ContentResolver mCr>;

        $r8 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.database.ContentObserver mAutoTimeObserver>;

        virtualinvoke $r9.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>($r8);

        $r11 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.content.ContentResolver mCr>;

        $r10 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.database.ContentObserver mAutoTimeZoneObserver>;

        virtualinvoke $r11.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>($r10);

        $r12 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager mCdmaSSM>;

        virtualinvoke $r12.<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: void dispose(android.os.Handler)>(r0);

        $r13 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r13.<com.android.internal.telephony.CommandsInterface: void unregisterForCdmaPrlChanged(android.os.Handler)>(r0);

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void dispose()>();

        return;
    }

    protected void finalize()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("CdmaServiceStateTracker finalized");

        return;
    }

    public void registerForSubscriptionInfoReady(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.RegistrantList mCdmaForSubscriptionInfoReadyRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        $z0 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean isMinInfoReady()>();

        if $z0 == 0 goto label1;

        virtualinvoke r3.<android.os.Registrant: void notifyRegistrant()>();

     label1:
        return;
    }

    public void unregisterForSubscriptionInfoReady(android.os.Handler)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.RegistrantList mCdmaForSubscriptionInfoReadyRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    private void saveCdmaSubscriptionSource(int)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        com.android.internal.telephony.cdma.CDMAPhone $r5;
        android.content.Context $r6;
        android.content.ContentResolver $r7;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storing cdma subscription source: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r4);

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r7, "subscription_mode", i0);

        return;
    }

    private void getSubscriptionInfoAndStartPollingThreads()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        com.android.internal.telephony.CommandsInterface $r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.Message obtainMessage(int)>(34);

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void getCDMASubscription(android.os.Message)>($r2);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void pollState()>();

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        android.os.Message r1, $r17, $r65, $r81;
        android.os.AsyncResult r2, r105, r106, r107, r109, r111, r112, r113, r114;
        int[] r3, $r10, $r15, r115;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i18;
        java.lang.String[] r4, $r21, $r42, r108;
        java.lang.NumberFormatException r5, $r101;
        com.android.internal.telephony.cdma.CDMAPhone $r6, $r20, $r47, $r60, $r64, $r68, $r69;
        boolean $z0, $z1, $z4;
        com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager $r7, $r86;
        java.lang.Throwable $r8, $r13, $r23, $r44, $r70;
        java.lang.Object $r9, $r11, $r14, $r16, $r19, $r24, $r38, $r43, $r67, $r71, $r74, $r75, $r78, $r79, $r82, $r84, $r90;
        java.lang.String $r12, $r26, $r28, $r29, $r30, $r33, $r34, $r35, $r37, $r39, $r45, $r46, $r49, $r50, $r51, $r52, $r53, $r54, $r57, $r58, $r61, $r98, $r104, r110;
        com.android.internal.telephony.CommandsInterface $r18, $r59, $r66, $r80, $r83, $r89;
        java.lang.StringBuilder $r22, $r25, $r27, $r31, $r32, $r36, $r55, $r56, $r62, $r92, $r93, $r94, $r95, $r96, $r97, $r99, $r100, $r102, $r103;
        com.android.internal.telephony.uicc.IccRecords $r40, $r41;
        android.telephony.cdma.CdmaCellLocation $r48;
        android.content.Context $r63;
        java.lang.Object[] $r72, $r73, $r76, $r77;
        java.lang.Long $r85;
        com.android.internal.telephony.CommandsInterface$RadioState $r87, $r88, $r91;
        long l17;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: android.os.Message;

        $r6 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $z0 = $r6.<com.android.internal.telephony.cdma.CDMAPhone: boolean mIsTheCurrentActivePhone>;

        if $z0 != 0 goto label01;

        $r97 = new java.lang.StringBuilder;

        specialinvoke $r97.<java.lang.StringBuilder: void <init>()>();

        $r96 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received message ");

        $r95 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r94 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $i15 = r1.<android.os.Message: int what>;

        $r93 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r92 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r99 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" while being destroyed. Ignoring.");

        $r98 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>($r98);

        return;

     label01:
        $i6 = r1.<android.os.Message: int what>;

        tableswitch($i6)
        {
            case 1: goto label07;
            case 2: goto label39;
            case 3: goto label10;
            case 4: goto label39;
            case 5: goto label23;
            case 6: goto label39;
            case 7: goto label39;
            case 8: goto label39;
            case 9: goto label39;
            case 10: goto label28;
            case 11: goto label29;
            case 12: goto label30;
            case 13: goto label39;
            case 14: goto label39;
            case 15: goto label39;
            case 16: goto label39;
            case 17: goto label39;
            case 18: goto label32;
            case 19: goto label39;
            case 20: goto label39;
            case 21: goto label39;
            case 22: goto label39;
            case 23: goto label39;
            case 24: goto label23;
            case 25: goto label23;
            case 26: goto label03;
            case 27: goto label31;
            case 28: goto label39;
            case 29: goto label39;
            case 30: goto label09;
            case 31: goto label12;
            case 32: goto label39;
            case 33: goto label39;
            case 34: goto label24;
            case 35: goto label06;
            case 36: goto label33;
            case 37: goto label34;
            case 38: goto label39;
            case 39: goto label02;
            case 40: goto label37;
            case 41: goto label39;
            case 42: goto label39;
            case 43: goto label39;
            case 44: goto label39;
            case 45: goto label38;
            default: goto label39;
        };

     label02:
        $r7 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager mCdmaSSM>;

        $i7 = virtualinvoke $r7.<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: int getCdmaSubscriptionSource()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void handleCdmaSubscriptionSource(int)>($i7);

        goto label40;

     label03:
        $r64 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r63 = virtualinvoke $r64.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        i0 = staticinvoke <com.android.internal.telephony.PhoneFactory: int calculatePreferredNetworkType(android.content.Context)>($r63);

        $r59 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r59.<com.android.internal.telephony.CommandsInterface: void setPreferredNetworkType(int,android.os.Message)>(i0, null);

        $r60 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $i13 = virtualinvoke $r60.<com.android.internal.telephony.cdma.CDMAPhone: int getLteOnCdmaMode()>();

        if $i13 != 1 goto label04;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("Receive EVENT_RUIM_READY");

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void pollState()>();

        goto label05;

     label04:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("Receive EVENT_RUIM_READY and Send Request getCDMASubscription.");

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void getSubscriptionInfoAndStartPollingThreads()>();

     label05:
        $r69 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r69.<com.android.internal.telephony.cdma.CDMAPhone: void setNetworkSelectionModeAutomatic(android.os.Message)>(null);

        $r68 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r68.<com.android.internal.telephony.cdma.CDMAPhone: void prepareEri()>();

        goto label40;

     label06:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void updatePhoneObject()>();

        $r20 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r20.<com.android.internal.telephony.cdma.CDMAPhone: void setNetworkSelectionModeAutomatic(android.os.Message)>(null);

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void getSubscriptionInfoAndStartPollingThreads()>();

        goto label40;

     label07:
        $r89 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r88 = interfaceinvoke $r89.<com.android.internal.telephony.CommandsInterface: com.android.internal.telephony.CommandsInterface$RadioState getRadioState()>();

        $r87 = <com.android.internal.telephony.CommandsInterface$RadioState: com.android.internal.telephony.CommandsInterface$RadioState RADIO_ON>;

        if $r88 != $r87 goto label08;

        $r86 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager mCdmaSSM>;

        $i16 = virtualinvoke $r86.<com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: int getCdmaSubscriptionSource()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void handleCdmaSubscriptionSource(int)>($i16);

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void queueNextSignalStrengthPoll()>();

     label08:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setPowerStateToDesired()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void pollState()>();

        goto label40;

     label09:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void pollState()>();

        goto label40;

     label10:
        $r80 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r91 = interfaceinvoke $r80.<com.android.internal.telephony.CommandsInterface: com.android.internal.telephony.CommandsInterface$RadioState getRadioState()>();

        $z4 = virtualinvoke $r91.<com.android.internal.telephony.CommandsInterface$RadioState: boolean isOn()>();

        if $z4 != 0 goto label11;

        return;

     label11:
        $r90 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (android.os.AsyncResult) $r90;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean onSignalStrengthResult(android.os.AsyncResult,boolean)>(r2, 0);

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void queueNextSignalStrengthPoll()>();

        goto label40;

     label12:
        $r38 = r1.<android.os.Message: java.lang.Object obj>;

        r105 = (android.os.AsyncResult) $r38;

        $r44 = r105.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r44 != null goto label22;

        $r43 = r105.<android.os.AsyncResult: java.lang.Object result>;

        $r42 = (java.lang.String[]) $r43;

        r4 = (java.lang.String[]) $r42;

        i1 = -1;

        i2 = 2147483647;

        i3 = 2147483647;

        i4 = -1;

        i5 = -1;

        $i11 = lengthof r4;

        if $i11 <= 9 goto label21;

     label13:
        $r46 = r4[4];

        if $r46 == null goto label14;

        $r58 = r4[4];

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r58);

     label14:
        $r45 = r4[5];

        if $r45 == null goto label15;

        $r57 = r4[5];

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r57);

     label15:
        $r51 = r4[6];

        if $r51 == null goto label16;

        $r50 = r4[6];

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r50);

     label16:
        if i2 != 0 goto label17;

        if i3 != 0 goto label17;

        i2 = 2147483647;

        i3 = 2147483647;

     label17:
        $r52 = r4[8];

        if $r52 == null goto label18;

        $r49 = r4[8];

        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r49);

     label18:
        $r53 = r4[9];

        if $r53 == null goto label19;

        $r54 = r4[9];

        i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r54);

     label19:
        goto label21;

     label20:
        $r101 := @caughtexception;

        r5 = $r101;

        $r100 = new java.lang.StringBuilder;

        specialinvoke $r100.<java.lang.StringBuilder: void <init>()>();

        $r103 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error parsing cell location data: ");

        $r102 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r104 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>($r104);

     label21:
        $r48 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mCellLoc>;

        virtualinvoke $r48.<android.telephony.cdma.CdmaCellLocation: void setCellLocationData(int,int,int,int,int)>(i1, i2, i3, i4, i5);

        $r47 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r47.<com.android.internal.telephony.cdma.CDMAPhone: void notifyLocationChanged()>();

     label22:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void disableSingleLocationUpdate()>();

        goto label40;

     label23:
        $r82 = r1.<android.os.Message: java.lang.Object obj>;

        r106 = (android.os.AsyncResult) $r82;

        $i14 = r1.<android.os.Message: int what>;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void handlePollStateResult(int,android.os.AsyncResult)>($i14, r106);

        goto label40;

     label24:
        $r19 = r1.<android.os.Message: java.lang.Object obj>;

        r107 = (android.os.AsyncResult) $r19;

        $r23 = r107.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r23 != null goto label40;

        $r24 = r107.<android.os.AsyncResult: java.lang.Object result>;

        $r21 = (java.lang.String[]) $r24;

        r108 = (java.lang.String[]) $r21;

        if r108 == null goto label26;

        $i10 = lengthof r108;

        if $i10 < 5 goto label26;

        $r30 = r108[0];

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mMdn> = $r30;

        $r29 = r108[1];

        $r28 = r108[2];

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void parseSidNid(java.lang.String,java.lang.String)>($r29, $r28);

        $r33 = r108[3];

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mMin> = $r33;

        $r34 = r108[4];

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mPrlVersion> = $r34;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GET_CDMA_SUBSCRIPTION: MDN=");

        $r37 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mMdn>;

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r35);

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsMinInfoReady> = 1;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void updateOtaspState()>();

        $z1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsSubscriptionFromRuim>;

        if $z1 != 0 goto label25;

        $r41 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        if $r41 == null goto label25;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("GET_CDMA_SUBSCRIPTION set imsi in mIccRecords");

        $r40 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        $r39 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String getImsi()>();

        virtualinvoke $r40.<com.android.internal.telephony.uicc.IccRecords: void setImsi(java.lang.String)>($r39);

        goto label27;

     label25:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("GET_CDMA_SUBSCRIPTION either mIccRecords is null  or NV type device - not setting Imsi in mIccRecords");

        goto label27;

     label26:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GET_CDMA_SUBSCRIPTION: error parsing cdmaSubscription params num=");

        $i9 = lengthof r108;

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r26);

     label27:
        goto label40;

     label28:
        $r83 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r81 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.Message obtainMessage(int)>(3);

        interfaceinvoke $r83.<com.android.internal.telephony.CommandsInterface: void getSignalStrength(android.os.Message)>($r81);

        goto label40;

     label29:
        $r78 = r1.<android.os.Message: java.lang.Object obj>;

        r109 = (android.os.AsyncResult) $r78;

        $r79 = r109.<android.os.AsyncResult: java.lang.Object result>;

        $r76 = (java.lang.Object[]) $r79;

        $r77 = (java.lang.Object[]) $r76;

        $r74 = $r77[0];

        r110 = (java.lang.String) $r74;

        $r75 = r109.<android.os.AsyncResult: java.lang.Object result>;

        $r72 = (java.lang.Object[]) $r75;

        $r73 = (java.lang.Object[]) $r72;

        $r84 = $r73[1];

        $r85 = (java.lang.Long) $r84;

        l17 = virtualinvoke $r85.<java.lang.Long: long longValue()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setTimeFromNITZString(java.lang.String,long)>(r110, l17);

        goto label40;

     label30:
        $r67 = r1.<android.os.Message: java.lang.Object obj>;

        r111 = (android.os.AsyncResult) $r67;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mDontPollSignalStrength> = 1;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean onSignalStrengthResult(android.os.AsyncResult,boolean)>(r111, 0);

        goto label40;

     label31:
        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EVENT_RUIM_RECORDS_LOADED: what=");

        $i12 = r1.<android.os.Message: int what>;

        $r62 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r61 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r61);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void updatePhoneObject()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void updateSpnDisplay()>();

        goto label40;

     label32:
        $r71 = r1.<android.os.Message: java.lang.Object obj>;

        r112 = (android.os.AsyncResult) $r71;

        $r70 = r112.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r70 != null goto label40;

        $r66 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r65 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.Message obtainMessage(int,java.lang.Object)>(31, null);

        interfaceinvoke $r66.<com.android.internal.telephony.CommandsInterface: void getVoiceRegistrationState(android.os.Message)>($r65);

        goto label40;

     label33:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("[CdmaServiceStateTracker] ERI file has been loaded, repolling.");

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void pollState()>();

        goto label40;

     label34:
        $r14 = r1.<android.os.Message: java.lang.Object obj>;

        r113 = (android.os.AsyncResult) $r14;

        $r13 = r113.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r13 != null goto label40;

        $r16 = r113.<android.os.AsyncResult: java.lang.Object result>;

        $r15 = (int[]) $r16;

        r3 = (int[]) $r15;

        i18 = r3[0];

        if i18 == 8 goto label35;

        if i18 != 10 goto label36;

     label35:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("EVENT_OTA_PROVISION_STATUS_CHANGE: Complete, Reload MDN");

        $r18 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r17 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.Message obtainMessage(int)>(34);

        interfaceinvoke $r18.<com.android.internal.telephony.CommandsInterface: void getCDMASubscription(android.os.Message)>($r17);

     label36:
        goto label40;

     label37:
        $r9 = r1.<android.os.Message: java.lang.Object obj>;

        r114 = (android.os.AsyncResult) $r9;

        $r8 = r114.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r8 != null goto label40;

        $r11 = r114.<android.os.AsyncResult: java.lang.Object result>;

        $r10 = (int[]) $r11;

        r115 = (int[]) $r10;

        $i8 = r115[0];

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i8);

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mPrlVersion> = $r12;

        goto label40;

     label38:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("EVENT_CHANGE_IMS_STATE");

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setPowerStateToDesired()>();

        goto label40;

     label39:
        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void handleMessage(android.os.Message)>(r1);

     label40:
        return;

        catch java.lang.NumberFormatException from label13 to label19 with label20;
    }

    private void handleCdmaSubscriptionSource(int)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        boolean $z0, $z2;
        android.os.Message $r5;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Subscription Source : ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r4);

        if i0 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsSubscriptionFromRuim> = $z2;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void saveCdmaSubscriptionSource(int)>(i0);

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsSubscriptionFromRuim>;

        if $z0 != 0 goto label3;

        $r5 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.Message obtainMessage(int)>(35);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean sendMessage(android.os.Message)>($r5);

     label3:
        return;
    }

    protected void setPowerStateToDesired()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        com.android.internal.telephony.dataconnection.DcTrackerBase r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.internal.telephony.CommandsInterface $r2, $r4, $r5, $r8, $r11;
        com.android.internal.telephony.CommandsInterface$RadioState $r3, $r6, $r9, $r10;
        com.android.internal.telephony.cdma.CDMAPhone $r7;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mDesiredPowerState>;

        if $z0 == 0 goto label1;

        $r8 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r9 = interfaceinvoke $r8.<com.android.internal.telephony.CommandsInterface: com.android.internal.telephony.CommandsInterface$RadioState getRadioState()>();

        $r10 = <com.android.internal.telephony.CommandsInterface$RadioState: com.android.internal.telephony.CommandsInterface$RadioState RADIO_OFF>;

        if $r9 != $r10 goto label1;

        $r11 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r11.<com.android.internal.telephony.CommandsInterface: void setRadioPower(boolean,android.os.Message)>(1, null);

        goto label3;

     label1:
        $z1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mDesiredPowerState>;

        if $z1 != 0 goto label2;

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r6 = interfaceinvoke $r5.<com.android.internal.telephony.CommandsInterface: com.android.internal.telephony.CommandsInterface$RadioState getRadioState()>();

        $z4 = virtualinvoke $r6.<com.android.internal.telephony.CommandsInterface$RadioState: boolean isOn()>();

        if $z4 == 0 goto label2;

        $r7 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        r1 = $r7.<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void powerOffRadioSafely(com.android.internal.telephony.dataconnection.DcTrackerBase)>(r1);

        goto label3;

     label2:
        $z2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mDeviceShuttingDown>;

        if $z2 == 0 goto label3;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r3 = interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: com.android.internal.telephony.CommandsInterface$RadioState getRadioState()>();

        $z3 = virtualinvoke $r3.<com.android.internal.telephony.CommandsInterface$RadioState: boolean isAvailable()>();

        if $z3 == 0 goto label3;

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r4.<com.android.internal.telephony.CommandsInterface: void requestShutdown(android.os.Message)>(null);

     label3:
        return;
    }

    protected void updateSpnDisplay()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String r1, $r4, $r7;
        boolean z0, $z1, $z2;
        android.content.Intent r2, $r8;
        android.telephony.ServiceState $r3;
        java.lang.Object[] $r5;
        java.lang.Boolean $r6;
        com.android.internal.telephony.cdma.CDMAPhone $r13, $r15;
        int $i0;
        android.os.UserHandle $r16;
        android.content.Context $r17;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        r1 = virtualinvoke $r3.<android.telephony.ServiceState: java.lang.String getOperatorAlphaLong()>();

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mCurPlmn>;

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, $r4);

        if $z1 != 0 goto label3;

        if r1 == null goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        $r5 = newarray (java.lang.Object)[2];

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r5[0] = $r6;

        $r5[1] = r1;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("updateSpnDisplay: changed sending intent showPlmn=\'%b\' plmn=\'%s\'", $r5);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r7);

        $r8 = new android.content.Intent;

        specialinvoke $r8.<android.content.Intent: void <init>(java.lang.String)>("android.provider.Telephony.SPN_STRINGS_UPDATED");

        r2 = $r8;

        virtualinvoke r2.<android.content.Intent: android.content.Intent addFlags(int)>(536870912);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("showSpn", 0);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("spn", "");

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("showPlmn", z0);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("plmn", r1);

        $r13 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $i0 = virtualinvoke $r13.<com.android.internal.telephony.cdma.CDMAPhone: int getPhoneId()>();

        staticinvoke <android.telephony.SubscriptionManager: void putPhoneIdAndSubIdExtra(android.content.Intent,int)>(r2, $i0);

        $r15 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r17 = virtualinvoke $r15.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        $r16 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r17.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r2, $r16);

     label3:
        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mCurPlmn> = r1;

        return;
    }

    protected com.android.internal.telephony.Phone getPhone()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        com.android.internal.telephony.cdma.CDMAPhone $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        return $r1;
    }

    protected void handlePollStateResultMessage(int, android.os.AsyncResult)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, i23, i24;
        android.os.AsyncResult r1;
        java.lang.String[] r2, $r7, $r35, $r78, r110, r111;
        java.lang.NumberFormatException r3, r4, $r102, $r107;
        java.lang.Object $r5, $r36, $r79;
        java.lang.String r6, $r8, $r9, $r10, $r14, $r15, $r19, $r20, $r21, $r23, $r27, $r28, $r29, $r31, $r32, $r33, $r37, $r41, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r54, $r55, $r56, $r57, $r61, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r80, $r81, $r82, $r87, $r89, $r90, $r91, $r101, $r106;
        java.lang.StringBuilder $r11, $r12, $r13, $r16, $r18, $r38, $r39, $r42, $r43, $r58, $r59, $r60, $r77, $r83, $r84, $r85, $r86, $r88, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r103, $r104, $r105, $r108, $r109;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.android.internal.telephony.uicc.UiccController $r17, $r25;
        com.android.internal.telephony.uicc.UiccCard $r22, $r30;
        android.telephony.ServiceState $r24, $r26, $r34, $r52, $r53, $r62, $r63, $r92, $r93;
        java.lang.RuntimeException $r40;
        android.telephony.cdma.CdmaCellLocation $r64;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.AsyncResult;

        lookupswitch(i0)
        {
            case 5: goto label01;
            case 24: goto label06;
            case 25: goto label31;
            default: goto label40;
        };

     label01:
        $r79 = r1.<android.os.AsyncResult: java.lang.Object result>;

        $r78 = (java.lang.String[]) $r79;

        r2 = (java.lang.String[]) $r78;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r86 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handlePollStateResultMessage: EVENT_POLL_STATE_GPRS states.length=");

        $i19 = lengthof r2;

        $r85 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r84 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" states=");

        $r83 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r82 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r82);

        i1 = 4;

        i2 = 0;

        $i18 = lengthof r2;

        if $i18 <= 0 goto label05;

     label02:
        $r89 = r2[0];

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r89);

        $i20 = lengthof r2;

        if $i20 < 4 goto label03;

        $r90 = r2[3];

        if $r90 == null goto label03;

        $r91 = r2[3];

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r91);

     label03:
        goto label05;

     label04:
        $r107 := @caughtexception;

        r3 = $r107;

        $r108 = new java.lang.StringBuilder;

        specialinvoke $r108.<java.lang.StringBuilder: void <init>()>();

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handlePollStateResultMessage: error parsing GprsRegistrationState: ");

        $r100 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>($r101);

     label05:
        i21 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int regCodeToServiceState(int)>(i1);

        $r93 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r93.<android.telephony.ServiceState: void setDataRegState(int)>(i21);

        $r92 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r92.<android.telephony.ServiceState: void setRilDataRadioTechnology(int)>(i2);

        $r95 = new java.lang.StringBuilder;

        specialinvoke $r95.<java.lang.StringBuilder: void <init>()>();

        $r94 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handlPollStateResultMessage: cdma setDataRegState=");

        $r97 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i21);

        $r96 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" regState=");

        $r99 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r98 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dataRadioTechnology=");

        $r88 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r87 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r87);

        goto label41;

     label06:
        $r36 = r1.<android.os.AsyncResult: java.lang.Object result>;

        $r35 = (java.lang.String[]) $r36;

        r110 = (java.lang.String[]) $r35;

        i22 = 4;

        i23 = -1;

        i24 = -1;

        i3 = 2147483647;

        i4 = 2147483647;

        i5 = 0;

        i6 = 0;

        i7 = 0;

        i8 = -1;

        i9 = 0;

        i10 = 0;

        i11 = 0;

        $i14 = lengthof r110;

        if $i14 < 14 goto label22;

     label07:
        $r48 = r110[0];

        if $r48 == null goto label08;

        $r80 = r110[0];

        i22 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r80);

     label08:
        $r49 = r110[3];

        if $r49 == null goto label09;

        $r81 = r110[3];

        i23 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r81);

     label09:
        $r50 = r110[4];

        if $r50 == null goto label10;

        $r73 = r110[4];

        i24 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r73);

     label10:
        $r51 = r110[5];

        if $r51 == null goto label11;

        $r74 = r110[5];

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r74);

     label11:
        $r44 = r110[6];

        if $r44 == null goto label12;

        $r75 = r110[6];

        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r75);

     label12:
        if i3 != 0 goto label13;

        if i4 != 0 goto label13;

        i3 = 2147483647;

        i4 = 2147483647;

     label13:
        $r45 = r110[7];

        if $r45 == null goto label14;

        $r76 = r110[7];

        i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r76);

     label14:
        $r46 = r110[8];

        if $r46 == null goto label15;

        $r69 = r110[8];

        i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r69);

     label15:
        $r47 = r110[9];

        if $r47 == null goto label16;

        $r70 = r110[9];

        i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r70);

     label16:
        $r54 = r110[10];

        if $r54 == null goto label17;

        $r71 = r110[10];

        i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r71);

     label17:
        $r55 = r110[11];

        if $r55 == null goto label18;

        $r72 = r110[11];

        i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r72);

     label18:
        $r56 = r110[12];

        if $r56 == null goto label19;

        $r66 = r110[12];

        i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r66);

     label19:
        $r57 = r110[13];

        if $r57 == null goto label20;

        $r65 = r110[13];

        i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r65);

     label20:
        goto label23;

     label21:
        $r102 := @caughtexception;

        r4 = $r102;

        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();

        $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EVENT_POLL_STATE_REGISTRATION_CDMA: error parsing: ");

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>($r106);

        goto label23;

     label22:
        $r40 = new java.lang.RuntimeException;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Warning! Wrong number of parameters returned from RIL_REQUEST_REGISTRATION_STATE: expected 14 or more strings and got ");

        $i15 = lengthof r110;

        $r43 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" strings");

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<java.lang.RuntimeException: void <init>(java.lang.String)>($r41);

        throw $r40;

     label23:
        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mRegistrationState> = i22;

        $z2 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean regCodeIsRoaming(int)>(i22);

        if $z2 == 0 goto label24;

        $r68 = r110[10];

        $z5 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean isRoamIndForHomeSystem(java.lang.String)>($r68);

        if $z5 != 0 goto label24;

        $z3 = 1;

        goto label25;

     label24:
        $z3 = 0;

     label25:
        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mCdmaRoaming> = $z3;

        $r52 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i16 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int regCodeToServiceState(int)>(i22);

        virtualinvoke $r52.<android.telephony.ServiceState: void setState(int)>($i16);

        $r53 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r53.<android.telephony.ServiceState: void setRilVoiceRadioTechnology(int)>(i23);

        $r63 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r63.<android.telephony.ServiceState: void setCssIndicator(int)>(i5);

        $r62 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r62.<android.telephony.ServiceState: void setSystemAndNetworkId(int,int)>(i6, i7);

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mRoamingIndicator> = i8;

        if i9 != 0 goto label26;

        $z4 = 0;

        goto label27;

     label26:
        $z4 = 1;

     label27:
        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsInPrl> = $z4;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mDefaultRoamingIndicator> = i10;

        $r64 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mNewCellLoc>;

        virtualinvoke $r64.<android.telephony.cdma.CdmaCellLocation: void setCellLocationData(int,int,int,int,int)>(i24, i3, i4, i6, i7);

        if i11 != 0 goto label28;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mRegistrationDeniedReason> = "General";

        goto label30;

     label28:
        if i11 != 1 goto label29;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mRegistrationDeniedReason> = "Authentication Failure";

        goto label30;

     label29:
        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mRegistrationDeniedReason> = "";

     label30:
        $i17 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mRegistrationState>;

        if $i17 != 3 goto label41;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Registration denied, ");

        $r61 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mRegistrationDeniedReason>;

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r67 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r67);

        goto label41;

     label31:
        $r5 = r1.<android.os.AsyncResult: java.lang.Object result>;

        $r7 = (java.lang.String[]) $r5;

        r111 = (java.lang.String[]) $r7;

        if r111 == null goto label39;

        $i12 = lengthof r111;

        if $i12 < 3 goto label39;

        $r9 = r111[2];

        if $r9 == null goto label32;

        $r33 = r111[2];

        $i13 = virtualinvoke $r33.<java.lang.String: int length()>();

        if $i13 < 5 goto label32;

        $r37 = "00000";

        $r32 = r111[2];

        $z1 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>($r32);

        if $z1 == 0 goto label33;

     label32:
        $r8 = <com.android.internal.telephony.cdma.CDMAPhone: java.lang.String PROPERTY_CDMA_HOME_OPERATOR_NUMERIC>;

        $r10 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>($r8, "00000");

        r111[2] = $r10;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RIL_REQUEST_OPERATOR.response[2], the numeric,  is bad. Using SystemProperties \'");

        $r14 = <com.android.internal.telephony.cdma.CDMAPhone: java.lang.String PROPERTY_CDMA_HOME_OPERATOR_NUMERIC>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'= ");

        $r15 = r111[2];

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r19);

     label33:
        $z0 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsSubscriptionFromRuim>;

        if $z0 != 0 goto label34;

        $r34 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r29 = r111[1];

        $r28 = r111[2];

        virtualinvoke $r34.<android.telephony.ServiceState: void setOperatorName(java.lang.String,java.lang.String,java.lang.String)>(null, $r29, $r28);

        goto label41;

     label34:
        $r17 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $r22 = virtualinvoke $r17.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCard getUiccCard()>();

        if $r22 == null goto label35;

        $r25 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $r30 = virtualinvoke $r25.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCard getUiccCard()>();

        $r31 = virtualinvoke $r30.<com.android.internal.telephony.uicc.UiccCard: java.lang.String getOperatorBrandOverride()>();

        goto label36;

     label35:
        $r31 = null;

     label36:
        r6 = $r31;

        if r6 == null goto label37;

        $r24 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r27 = r111[2];

        virtualinvoke $r24.<android.telephony.ServiceState: void setOperatorName(java.lang.String,java.lang.String,java.lang.String)>(r6, r6, $r27);

        goto label38;

     label37:
        $r26 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r21 = r111[0];

        $r20 = r111[1];

        $r23 = r111[2];

        virtualinvoke $r26.<android.telephony.ServiceState: void setOperatorName(java.lang.String,java.lang.String,java.lang.String)>($r21, $r20, $r23);

     label38:
        goto label41;

     label39:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("EVENT_POLL_STATE_OPERATOR_CDMA: error parsing opNames");

        goto label41;

     label40:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>("handlePollStateResultMessage: RIL response handle in wrong phone! Expected CDMA RIL request and get GSM RIL request.");

     label41:
        return;

        catch java.lang.NumberFormatException from label02 to label03 with label04;
        catch java.lang.NumberFormatException from label07 to label20 with label21;
    }

    protected void handlePollStateResult(int, android.os.AsyncResult)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        android.os.AsyncResult r1;
        com.android.internal.telephony.CommandException$Error r2, $r49, $r57;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, z16;
        int[] $r3, $r6, $r7;
        java.lang.Object $r4;
        java.lang.Throwable $r5, $r47, $r51, $r63;
        android.telephony.ServiceState $r8, $r9, $r10, $r12, $r13, $r16, $r18, $r21, $r35, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r50;
        java.lang.String $r11, $r36, $r53, $r65;
        com.android.internal.telephony.cdma.CDMAPhone $r14, $r19;
        com.android.internal.telephony.cdma.EriManager $r15, $r17;
        java.lang.StringBuilder $r20, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r37, $r52, $r54, $r56, $r58, $r59, $r61;
        com.android.internal.telephony.CommandsInterface $r48;
        com.android.internal.telephony.CommandsInterface$RadioState $r55;
        java.lang.RuntimeException $r60, r66;
        com.android.internal.telephony.CommandException $r62, $r64;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.AsyncResult;

        $r4 = r1.<android.os.AsyncResult: java.lang.Object userObj>;

        $r3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mPollingContext>;

        if $r4 == $r3 goto label01;

        return;

     label01:
        $r5 = r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r5 == null goto label06;

        r2 = null;

        $r47 = r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        $z12 = $r47 instanceof com.android.internal.telephony.CommandException;

        if $z12 == 0 goto label02;

        $r63 = r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r64 = (com.android.internal.telephony.CommandException) $r63;

        $r62 = (com.android.internal.telephony.CommandException) $r64;

        r2 = virtualinvoke $r62.<com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException$Error getCommandError()>();

     label02:
        $r49 = <com.android.internal.telephony.CommandException$Error: com.android.internal.telephony.CommandException$Error RADIO_NOT_AVAILABLE>;

        if r2 != $r49 goto label03;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void cancelPollState()>();

        return;

     label03:
        $r48 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r55 = interfaceinvoke $r48.<com.android.internal.telephony.CommandsInterface: com.android.internal.telephony.CommandsInterface$RadioState getRadioState()>();

        $z15 = virtualinvoke $r55.<com.android.internal.telephony.CommandsInterface$RadioState: boolean isOn()>();

        if $z15 != 0 goto label04;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void cancelPollState()>();

        return;

     label04:
        $r57 = <com.android.internal.telephony.CommandException$Error: com.android.internal.telephony.CommandException$Error OP_NOT_ALLOWED_BEFORE_REG_NW>;

        if r2 == $r57 goto label05;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handlePollStateResult: RIL returned an error where it must succeed");

        $r51 = r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r51);

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>($r53);

     label05:
        goto label09;

     label06:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void handlePollStateResultMessage(int,android.os.AsyncResult)>(i0, r1);

     label07:
        goto label09;

     label08:
        $r60 := @caughtexception;

        r66 = $r60;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handlePollStateResult: Exception while polling service state. Probably malformed RIL response.");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r66);

        $r65 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>($r65);

     label09:
        $r6 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mPollingContext>;

        $i2 = $r6[0];

        $i3 = $i2 - 1;

        $r6[0] = $i3;

        $r7 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mPollingContext>;

        $i4 = $r7[0];

        if $i4 != 0 goto label22;

        z16 = 0;

        $z1 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean isSidsAllZeros()>();

        if $z1 != 0 goto label10;

        $r50 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i20 = virtualinvoke $r50.<android.telephony.ServiceState: int getSystemId()>();

        $z14 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean isHomeSid(int)>($i20);

        if $z14 == 0 goto label10;

        z16 = 1;

     label10:
        $z2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsSubscriptionFromRuim>;

        if $z2 == 0 goto label11;

        $r44 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $z10 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mCdmaRoaming>;

        $r43 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $z13 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean isRoamingBetweenOperators(boolean,android.telephony.ServiceState)>($z10, $r43);

        virtualinvoke $r44.<android.telephony.ServiceState: void setRoaming(boolean)>($z13);

        goto label12;

     label11:
        $r8 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $z3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mCdmaRoaming>;

        virtualinvoke $r8.<android.telephony.ServiceState: void setRoaming(boolean)>($z3);

     label12:
        $r9 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mDefaultRoamingIndicator>;

        virtualinvoke $r9.<android.telephony.ServiceState: void setCdmaDefaultRoamingIndicator(int)>($i5);

        $r10 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i6 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mRoamingIndicator>;

        virtualinvoke $r10.<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)>($i6);

        z0 = 1;

        $r11 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mPrlVersion>;

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r11);

        if $z4 == 0 goto label13;

        z0 = 0;

     label13:
        if z0 == 0 goto label14;

        $r35 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i16 = virtualinvoke $r35.<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>();

        if $i16 != 0 goto label15;

     label14:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("Turn off roaming indicator if !isPrlLoaded or voice RAT is unknown");

        $r13 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r13.<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)>(1);

        goto label21;

     label15:
        $z7 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean isSidsAllZeros()>();

        if $z7 != 0 goto label21;

        if z16 != 0 goto label16;

        $z11 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsInPrl>;

        if $z11 != 0 goto label16;

        $r42 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i19 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mDefaultRoamingIndicator>;

        virtualinvoke $r42.<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)>($i19);

        goto label21;

     label16:
        if z16 == 0 goto label18;

        $z8 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsInPrl>;

        if $z8 != 0 goto label18;

        $r39 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i17 = virtualinvoke $r39.<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>();

        if $i17 != 14 goto label17;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("Turn off roaming indicator as voice is LTE");

        $r46 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r46.<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)>(1);

        goto label21;

     label17:
        $r45 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r45.<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)>(2);

        goto label21;

     label18:
        if z16 != 0 goto label19;

        $z9 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsInPrl>;

        if $z9 == 0 goto label19;

        $r38 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i18 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mRoamingIndicator>;

        virtualinvoke $r38.<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)>($i18);

        goto label21;

     label19:
        $i15 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mRoamingIndicator>;

        if $i15 > 2 goto label20;

        $r41 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r41.<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)>(1);

        goto label21;

     label20:
        $r40 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i14 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mRoamingIndicator>;

        virtualinvoke $r40.<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)>($i14);

     label21:
        $r12 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        i1 = virtualinvoke $r12.<android.telephony.ServiceState: int getCdmaRoamingIndicator()>();

        $r16 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r14 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r15 = $r14.<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.cdma.EriManager mEriManager>;

        $i7 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mDefaultRoamingIndicator>;

        $i8 = virtualinvoke $r15.<com.android.internal.telephony.cdma.EriManager: int getCdmaEriIconIndex(int,int)>(i1, $i7);

        virtualinvoke $r16.<android.telephony.ServiceState: void setCdmaEriIconIndex(int)>($i8);

        $r18 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r19 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r17 = $r19.<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.cdma.EriManager mEriManager>;

        $i9 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mDefaultRoamingIndicator>;

        $i10 = virtualinvoke $r17.<com.android.internal.telephony.cdma.EriManager: int getCdmaEriIconMode(int,int)>(i1, $i9);

        virtualinvoke $r18.<android.telephony.ServiceState: void setCdmaEriIconMode(int)>($i10);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Set CDMA Roaming Indicator to: ");

        $r21 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i11 = virtualinvoke $r21.<android.telephony.ServiceState: int getCdmaRoamingIndicator()>();

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". mCdmaRoaming = ");

        $z5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mCdmaRoaming>;

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isPrlLoaded = ");

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". namMatch = ");

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z16);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , mIsInPrl = ");

        $z6 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsInPrl>;

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mRoamingIndicator = ");

        $i12 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mRoamingIndicator>;

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mDefaultRoamingIndicator= ");

        $i13 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mDefaultRoamingIndicator>;

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r36);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void pollStateDone()>();

     label22:
        return;

        catch java.lang.RuntimeException from label06 to label07 with label08;
    }

    protected void setSignalStrengthDefaultValues()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        android.telephony.SignalStrength $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r1 = new android.telephony.SignalStrength;

        specialinvoke $r1.<android.telephony.SignalStrength: void <init>(boolean)>(0);

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.SignalStrength mSignalStrength> = $r1;

        return;
    }

    public void pollState()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int[] $r1, $r2, $r4, $r10, $r11, $r14, $r15, $r18, $r19;
        com.android.internal.telephony.CommandsInterface $r3, $r13, $r17, $r21;
        com.android.internal.telephony.CommandsInterface$RadioState $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.telephony.ServiceState $r6, $r8;
        android.telephony.cdma.CdmaCellLocation $r7, $r9;
        android.os.Message $r12, $r16, $r20;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r1 = newarray (int)[1];

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mPollingContext> = $r1;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mPollingContext>;

        $r2[0] = 0;

        $r4 = <com.android.internal.telephony.cdma.CdmaServiceStateTracker$3: int[] $SwitchMap$com$android$internal$telephony$CommandsInterface$RadioState>;

        $r3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r5 = interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: com.android.internal.telephony.CommandsInterface$RadioState getRadioState()>();

        $i0 = virtualinvoke $r5.<com.android.internal.telephony.CommandsInterface$RadioState: int ordinal()>();

        $i1 = $r4[$i0];

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r8 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r8.<android.telephony.ServiceState: void setStateOutOfService()>();

        $r9 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mNewCellLoc>;

        virtualinvoke $r9.<android.telephony.cdma.CdmaCellLocation: void setStateInvalid()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setSignalStrengthDefaultValues()>();

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mGotCountryCode> = 0;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void pollStateDone()>();

        goto label4;

     label2:
        $r6 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r6.<android.telephony.ServiceState: void setStateOff()>();

        $r7 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mNewCellLoc>;

        virtualinvoke $r7.<android.telephony.cdma.CdmaCellLocation: void setStateInvalid()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setSignalStrengthDefaultValues()>();

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mGotCountryCode> = 0;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void pollStateDone()>();

        goto label4;

     label3:
        $r10 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mPollingContext>;

        $i2 = $r10[0];

        $i3 = $i2 + 1;

        $r10[0] = $i3;

        $r13 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r11 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mPollingContext>;

        $r12 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.Message obtainMessage(int,java.lang.Object)>(25, $r11);

        interfaceinvoke $r13.<com.android.internal.telephony.CommandsInterface: void getOperator(android.os.Message)>($r12);

        $r14 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mPollingContext>;

        $i4 = $r14[0];

        $i5 = $i4 + 1;

        $r14[0] = $i5;

        $r17 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r15 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mPollingContext>;

        $r16 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.Message obtainMessage(int,java.lang.Object)>(24, $r15);

        interfaceinvoke $r17.<com.android.internal.telephony.CommandsInterface: void getVoiceRegistrationState(android.os.Message)>($r16);

        $r18 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mPollingContext>;

        $i6 = $r18[0];

        $i7 = $i6 + 1;

        $r18[0] = $i7;

        $r21 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r19 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mPollingContext>;

        $r20 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.Message obtainMessage(int,java.lang.Object)>(5, $r19);

        interfaceinvoke $r21.<com.android.internal.telephony.CommandsInterface: void getDataRegistrationState(android.os.Message)>($r20);

     label4:
        return;
    }

    protected void fixTimeZone(java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String r1, r2, $r15, $r17, $r19, $r21, $r22, $r27, $r29, $r34, $r38, $r39;
        long l0, l1, l2, $l6, $l9, $l13, $l14, $l15;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r16, $r18, $r20, $r24, $r25, $r26, $r28, $r30, $r31, $r32, $r33, $r35, $r36, $r37;
        int $i3, $i4, $i5, $i7, $i8, $i10, $i11, $i12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.String[] $r12, $r23;
        java.util.TimeZone r40;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("persist.sys.timezone");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fixTimeZone zoneName=\'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' mZoneOffset=");

        $i3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mZoneOffset>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mZoneDst=");

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mZoneDst>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" iso-cc=\'");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' iso-cc-idx=");

        $r12 = <com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String[] GMT_COUNTRY_CODES>;

        $i4 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>($r12, r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r15);

        $i5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mZoneOffset>;

        if $i5 != 0 goto label3;

        $z5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mZoneDst>;

        if $z5 != 0 goto label3;

        if r2 == null goto label3;

        $i10 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i10 <= 0 goto label3;

        $r23 = <com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String[] GMT_COUNTRY_CODES>;

        $i11 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>($r23, r1);

        if $i11 >= 0 goto label3;

        r40 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $z6 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mNeedFixZone>;

        if $z6 == 0 goto label2;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i12 = virtualinvoke r40.<java.util.TimeZone: int getOffset(long)>(l0);

        l1 = (long) $i12;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fixTimeZone: tzOffset=");

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r30 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ltod=");

        $r29 = staticinvoke <android.util.TimeUtils: java.lang.String logTimeOfDay(long)>(l0);

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r27);

        $z7 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean getAutoTime()>();

        if $z7 == 0 goto label1;

        l2 = l0 - l1;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fixTimeZone: adj ltod=");

        $r34 = staticinvoke <android.util.TimeUtils: java.lang.String logTimeOfDay(long)>(l2);

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r39 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r39);

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setAndBroadcastNetworkSetTime(long)>(l2);

        goto label2;

     label1:
        $l14 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedTime>;

        $l13 = $l14 - l1;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedTime> = $l13;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fixTimeZone: adj mSavedTime=");

        $l15 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedTime>;

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l15);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r38);

     label2:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("fixTimeZone: using default TimeZone");

        goto label5;

     label3:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label4;

        $i8 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mZoneOffset>;

        $z4 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mZoneDst>;

        $l9 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mZoneTime>;

        r40 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.util.TimeZone getNitzTimeZone(int,boolean,long)>($i8, $z4, $l9);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("fixTimeZone: using NITZ TimeZone");

        goto label5;

     label4:
        $i7 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mZoneOffset>;

        $z2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mZoneDst>;

        $l6 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mZoneTime>;

        r40 = staticinvoke <android.util.TimeUtils: java.util.TimeZone getTimeZone(int,boolean,long,java.lang.String)>($i7, $z2, $l6, r1);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("fixTimeZone: using getTimeZone(off, dst, time, iso)");

     label5:
        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mNeedFixZone> = 0;

        if r40 == null goto label8;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fixTimeZone: zone != null zone.getID=");

        $r17 = virtualinvoke r40.<java.util.TimeZone: java.lang.String getID()>();

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r21);

        $z3 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean getAutoTimeZone()>();

        if $z3 == 0 goto label6;

        $r22 = virtualinvoke r40.<java.util.TimeZone: java.lang.String getID()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setAndBroadcastNetworkSetTimeZone(java.lang.String)>($r22);

        goto label7;

     label6:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("fixTimeZone: skip changing zone as getAutoTimeZone was false");

     label7:
        $r19 = virtualinvoke r40.<java.util.TimeZone: java.lang.String getID()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void saveNitzTimeZone(java.lang.String)>($r19);

        goto label9;

     label8:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("fixTimeZone: zone == null, do nothing for zone");

     label9:
        return;
    }

    protected void pollStateDone()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        boolean z0, z2, z3, z4, z5, z6, z7, z8, z9, z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z32, $z33, $z34, $z35, $z36;
        android.telephony.ServiceState r1, $r8, $r13, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r34, $r36, $r37, $r39, $r41, $r47, $r48, $r51, $r58, $r64, $r67, $r69, $r77, $r79, $r82, $r86, $r88, $r89, $r90, $r91, $r93, $r94, $r95, $r96;
        android.telephony.cdma.CdmaCellLocation r2, $r31, $r32, $r43;
        java.lang.String r3, r4, $r14, $r59, $r61, $r71, $r76, $r87, $r97, $r99, r106, r107;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        java.lang.StringBuilder $r6, $r9, $r10, $r11, $r12, $r15, $r72, $r73, $r74, $r75, $r98, $r100, $r101, $r102, $r103, $r105;
        java.lang.NumberFormatException r7, $r92;
        java.lang.Object[] $r33;
        java.lang.Integer $r35, $r38, $r40, $r46;
        com.android.internal.telephony.cdma.CDMAPhone $r42, $r45, $r50, $r56, $r57, $r60, $r63, $r66, $r68, $r70, $r78, $r81, $r83;
        android.os.RegistrantList $r44, $r52, $r53, $r55, $r80;
        com.android.internal.telephony.CommandsInterface$RadioState $r49;
        com.android.internal.telephony.CommandsInterface $r54;
        android.content.Context $r62, $r85;
        java.lang.CharSequence $r84;
        java.lang.StringIndexOutOfBoundsException $r104, r108;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pollStateDone: cdma oldSS=[");

        $r8 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] newSS=[");

        $r13 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r14);

        $z11 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z11 == 0 goto label01;

        $z32 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("telephony.test.forceRoaming", 0);

        if $z32 == 0 goto label01;

        $r93 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r93.<android.telephony.ServiceState: void setRoaming(boolean)>(1);

     label01:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void useDataRegStateForDataOnlyDevices()>();

        $r16 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i1 = virtualinvoke $r16.<android.telephony.ServiceState: int getVoiceRegState()>();

        if $i1 == 0 goto label02;

        $r91 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i23 = virtualinvoke $r91.<android.telephony.ServiceState: int getVoiceRegState()>();

        if $i23 != 0 goto label02;

        $z33 = 1;

        goto label03;

     label02:
        $z33 = 0;

     label03:
        z0 = $z33;

        $r17 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i3 = virtualinvoke $r17.<android.telephony.ServiceState: int getVoiceRegState()>();

        if $i3 != 0 goto label04;

        $r95 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i24 = virtualinvoke $r95.<android.telephony.ServiceState: int getVoiceRegState()>();

        if $i24 == 0 goto label04;

        goto label04;

     label04:
        $r19 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i2 = virtualinvoke $r19.<android.telephony.ServiceState: int getDataRegState()>();

        if $i2 == 0 goto label05;

        $r96 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i26 = virtualinvoke $r96.<android.telephony.ServiceState: int getDataRegState()>();

        if $i26 != 0 goto label05;

        $z36 = 1;

        goto label06;

     label05:
        $z36 = 0;

     label06:
        z2 = $z36;

        $r18 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i5 = virtualinvoke $r18.<android.telephony.ServiceState: int getDataRegState()>();

        if $i5 != 0 goto label07;

        $r94 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i25 = virtualinvoke $r94.<android.telephony.ServiceState: int getDataRegState()>();

        if $i25 == 0 goto label07;

        $z34 = 1;

        goto label08;

     label07:
        $z34 = 0;

     label08:
        z3 = $z34;

        $r21 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i4 = virtualinvoke $r21.<android.telephony.ServiceState: int getDataRegState()>();

        $r20 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i7 = virtualinvoke $r20.<android.telephony.ServiceState: int getDataRegState()>();

        if $i4 == $i7 goto label09;

        $z35 = 1;

        goto label10;

     label09:
        $z35 = 0;

     label10:
        z4 = $z35;

        $r23 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i6 = virtualinvoke $r23.<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>();

        $r22 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i9 = virtualinvoke $r22.<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>();

        if $i6 == $i9 goto label11;

        $z29 = 1;

        goto label12;

     label11:
        $z29 = 0;

     label12:
        z5 = $z29;

        $r25 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i8 = virtualinvoke $r25.<android.telephony.ServiceState: int getRilDataRadioTechnology()>();

        $r24 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i10 = virtualinvoke $r24.<android.telephony.ServiceState: int getRilDataRadioTechnology()>();

        if $i8 == $i10 goto label13;

        $z28 = 1;

        goto label14;

     label13:
        $z28 = 0;

     label14:
        z6 = $z28;

        $r26 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r27 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $z12 = virtualinvoke $r26.<android.telephony.ServiceState: boolean equals(java.lang.Object)>($r27);

        if $z12 != 0 goto label15;

        $z27 = 1;

        goto label16;

     label15:
        $z27 = 0;

     label16:
        z7 = $z27;

        $r29 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $z14 = virtualinvoke $r29.<android.telephony.ServiceState: boolean getRoaming()>();

        if $z14 != 0 goto label17;

        $r86 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $z25 = virtualinvoke $r86.<android.telephony.ServiceState: boolean getRoaming()>();

        if $z25 == 0 goto label17;

        $z26 = 1;

        goto label18;

     label17:
        $z26 = 0;

     label18:
        z8 = $z26;

        $r28 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $z13 = virtualinvoke $r28.<android.telephony.ServiceState: boolean getRoaming()>();

        if $z13 == 0 goto label19;

        $r90 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $z23 = virtualinvoke $r90.<android.telephony.ServiceState: boolean getRoaming()>();

        if $z23 != 0 goto label19;

        $z24 = 1;

        goto label20;

     label19:
        $z24 = 0;

     label20:
        z9 = $z24;

        $r31 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mNewCellLoc>;

        $r32 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mCellLoc>;

        $z15 = virtualinvoke $r31.<android.telephony.cdma.CdmaCellLocation: boolean equals(java.lang.Object)>($r32);

        if $z15 != 0 goto label21;

        $z30 = 1;

        goto label22;

     label21:
        $z30 = 0;

     label22:
        z10 = $z30;

        $r30 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i12 = virtualinvoke $r30.<android.telephony.ServiceState: int getVoiceRegState()>();

        $r34 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i11 = virtualinvoke $r34.<android.telephony.ServiceState: int getVoiceRegState()>();

        if $i12 != $i11 goto label23;

        $r88 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i21 = virtualinvoke $r88.<android.telephony.ServiceState: int getDataRegState()>();

        $r89 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i22 = virtualinvoke $r89.<android.telephony.ServiceState: int getDataRegState()>();

        if $i21 == $i22 goto label24;

     label23:
        $r33 = newarray (java.lang.Object)[4];

        $r37 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i14 = virtualinvoke $r37.<android.telephony.ServiceState: int getVoiceRegState()>();

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        $r33[0] = $r35;

        $r36 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i13 = virtualinvoke $r36.<android.telephony.ServiceState: int getDataRegState()>();

        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        $r33[1] = $r40;

        $r41 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i16 = virtualinvoke $r41.<android.telephony.ServiceState: int getVoiceRegState()>();

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i16);

        $r33[2] = $r38;

        $r39 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $i15 = virtualinvoke $r39.<android.telephony.ServiceState: int getDataRegState()>();

        $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i15);

        $r33[3] = $r46;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(50116, $r33);

     label24:
        r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $r48 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS> = $r48;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS> = r1;

        $r47 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        virtualinvoke $r47.<android.telephony.ServiceState: void setStateOutOfService()>();

        r2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mCellLoc>;

        $r43 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mNewCellLoc>;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mCellLoc> = $r43;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mNewCellLoc> = r2;

        if z5 == 0 goto label25;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void updatePhoneObject()>();

     label25:
        if z6 == 0 goto label26;

        $r81 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r79 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i20 = virtualinvoke $r79.<android.telephony.ServiceState: int getRilDataRadioTechnology()>();

        $r87 = staticinvoke <android.telephony.ServiceState: java.lang.String rilRadioTechnologyToString(int)>($i20);

        virtualinvoke $r81.<com.android.internal.telephony.cdma.CDMAPhone: void setSystemProperty(java.lang.String,java.lang.String)>("gsm.network.type", $r87);

     label26:
        if z0 == 0 goto label27;

        $r80 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.RegistrantList mNetworkAttachedRegistrants>;

        virtualinvoke $r80.<android.os.RegistrantList: void notifyRegistrants()>();

     label27:
        if z7 == 0 goto label41;

        $r54 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r49 = interfaceinvoke $r54.<com.android.internal.telephony.CommandsInterface: com.android.internal.telephony.CommandsInterface$RadioState getRadioState()>();

        $z16 = virtualinvoke $r49.<com.android.internal.telephony.CommandsInterface$RadioState: boolean isOn()>();

        if $z16 == 0 goto label30;

        $z22 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsSubscriptionFromRuim>;

        if $z22 != 0 goto label30;

        $r82 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i19 = virtualinvoke $r82.<android.telephony.ServiceState: int getVoiceRegState()>();

        if $i19 != 0 goto label28;

        $r78 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        r3 = virtualinvoke $r78.<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getCdmaEriText()>();

        goto label29;

     label28:
        $r83 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r85 = virtualinvoke $r83.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        $r84 = virtualinvoke $r85.<android.content.Context: java.lang.CharSequence getText(int)>(17039557);

        r3 = interfaceinvoke $r84.<java.lang.CharSequence: java.lang.String toString()>();

     label29:
        $r77 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        virtualinvoke $r77.<android.telephony.ServiceState: void setOperatorAlphaLong(java.lang.String)>(r3);

     label30:
        $r50 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r51 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $r59 = virtualinvoke $r51.<android.telephony.ServiceState: java.lang.String getOperatorAlphaLong()>();

        virtualinvoke $r50.<com.android.internal.telephony.cdma.CDMAPhone: void setSystemProperty(java.lang.String,java.lang.String)>("gsm.operator.alpha", $r59);

        r4 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("gsm.operator.numeric", "");

        $r58 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        r106 = virtualinvoke $r58.<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>();

        $z17 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean isInvalidOperatorNumeric(java.lang.String)>(r106);

        if $z17 == 0 goto label31;

        $r69 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        i0 = virtualinvoke $r69.<android.telephony.ServiceState: int getSystemId()>();

        r106 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String fixUnknownMcc(java.lang.String,int)>(r106, i0);

     label31:
        $r56 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r56.<com.android.internal.telephony.cdma.CDMAPhone: void setSystemProperty(java.lang.String,java.lang.String)>("gsm.operator.numeric", r106);

        $r57 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r62 = virtualinvoke $r57.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void updateCarrierMccMncConfiguration(java.lang.String,java.lang.String,android.content.Context)>(r106, r4, $r62);

        $z19 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean isInvalidOperatorNumeric(java.lang.String)>(r106);

        if $z19 == 0 goto label32;

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $r74 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("operatorNumeric ");

        $r73 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r106);

        $r72 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("is invalid");

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r71);

        $r70 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r70.<com.android.internal.telephony.cdma.CDMAPhone: void setSystemProperty(java.lang.String,java.lang.String)>("gsm.operator.iso-country", "");

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mGotCountryCode> = 0;

        goto label38;

     label32:
        r107 = "";

        virtualinvoke r106.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

     label33:
        $r61 = virtualinvoke r106.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        $i18 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r61);

        r107 = staticinvoke <com.android.internal.telephony.MccTable: java.lang.String countryCodeForMcc(int)>($i18);

     label34:
        goto label37;

     label35:
        $r92 := @caughtexception;

        r7 = $r92;

        $r100 = new java.lang.StringBuilder;

        specialinvoke $r100.<java.lang.StringBuilder: void <init>()>();

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pollStateDone: countryCodeForMcc error");

        $r98 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>($r99);

        goto label37;

     label36:
        $r104 := @caughtexception;

        r108 = $r104;

        $r105 = new java.lang.StringBuilder;

        specialinvoke $r105.<java.lang.StringBuilder: void <init>()>();

        $r102 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pollStateDone: countryCodeForMcc error");

        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r108);

        $r97 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>($r97);

     label37:
        $r60 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r60.<com.android.internal.telephony.cdma.CDMAPhone: void setSystemProperty(java.lang.String,java.lang.String)>("gsm.operator.iso-country", r107);

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mGotCountryCode> = 1;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setOperatorIdd(java.lang.String)>(r106);

        $r68 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $z18 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mNeedFixZone>;

        $z21 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean shouldFixTimeZoneNow(com.android.internal.telephony.PhoneBase,java.lang.String,java.lang.String,boolean)>($r68, r106, r4, $z18);

        if $z21 == 0 goto label38;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void fixTimeZone(java.lang.String)>(r107);

     label38:
        $r66 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r67 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $z20 = virtualinvoke $r67.<android.telephony.ServiceState: boolean getRoaming()>();

        if $z20 == 0 goto label39;

        $r76 = "true";

        goto label40;

     label39:
        $r76 = "false";

     label40:
        virtualinvoke $r66.<com.android.internal.telephony.cdma.CDMAPhone: void setSystemProperty(java.lang.String,java.lang.String)>("gsm.operator.isroaming", $r76);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void updateSpnDisplay()>();

        $r63 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r64 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        virtualinvoke $r63.<com.android.internal.telephony.cdma.CDMAPhone: void notifyServiceStateChanged(android.telephony.ServiceState)>($r64);

     label41:
        if z2 == 0 goto label42;

        $r55 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.RegistrantList mAttachedRegistrants>;

        virtualinvoke $r55.<android.os.RegistrantList: void notifyRegistrants()>();

     label42:
        if z3 == 0 goto label43;

        $r52 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.RegistrantList mDetachedRegistrants>;

        virtualinvoke $r52.<android.os.RegistrantList: void notifyRegistrants()>();

     label43:
        if z4 != 0 goto label44;

        if z6 == 0 goto label45;

     label44:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void notifyDataRegStateRilRadioTechnologyChanged()>();

        $r42 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r42.<com.android.internal.telephony.cdma.CDMAPhone: void notifyDataConnection(java.lang.String)>(null);

     label45:
        if z8 == 0 goto label46;

        $r53 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.RegistrantList mRoamingOnRegistrants>;

        virtualinvoke $r53.<android.os.RegistrantList: void notifyRegistrants()>();

     label46:
        if z9 == 0 goto label47;

        $r44 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.RegistrantList mRoamingOffRegistrants>;

        virtualinvoke $r44.<android.os.RegistrantList: void notifyRegistrants()>();

     label47:
        if z10 == 0 goto label48;

        $r45 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r45.<com.android.internal.telephony.cdma.CDMAPhone: void notifyLocationChanged()>();

     label48:
        return;

        catch java.lang.NumberFormatException from label33 to label34 with label35;
        catch java.lang.StringIndexOutOfBoundsException from label33 to label34 with label36;
    }

    protected boolean isInvalidOperatorNumeric(java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String r1;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 < 5 goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("000");

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    protected java.lang.String fixUnknownMcc(java.lang.String, int)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String r1, $r2, $r6, $r9;
        int i0, i1, i2, $i4, $i5, $i7;
        boolean z0, $z1, $z2;
        long $l3;
        com.android.internal.telephony.HbpcdUtils $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        byte $b6;
        java.util.TimeZone $r8, r10;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if i0 > 0 goto label1;

        return r1;

     label1:
        z0 = 0;

        i1 = 0;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mSavedTimeZone>;

        if $r2 == null goto label2;

        $r9 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mSavedTimeZone>;

        $r8 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>($r9);

        $i7 = virtualinvoke $r8.<java.util.TimeZone: int getRawOffset()>();

        i1 = $i7 / 3600000;

        z0 = 1;

        goto label3;

     label2:
        $i4 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mZoneOffset>;

        $z1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mZoneDst>;

        $l3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mZoneTime>;

        r10 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.util.TimeZone getNitzTimeZone(int,boolean,long)>($i4, $z1, $l3);

        if r10 == null goto label3;

        $i5 = virtualinvoke r10.<java.util.TimeZone: int getRawOffset()>();

        i1 = $i5 / 3600000;

     label3:
        $r3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.HbpcdUtils mHbpcdUtils>;

        $z2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mZoneDst>;

        if $z2 == 0 goto label4;

        $b6 = 1;

        goto label5;

     label4:
        $b6 = 0;

     label5:
        i2 = virtualinvoke $r3.<com.android.internal.telephony.HbpcdUtils: int getMcc(int,int,int,boolean)>(i0, i1, $b6, z0);

        if i2 <= 0 goto label6;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("00");

        r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        return r1;
    }

    protected void setOperatorIdd(java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String r1, r2, $r4;
        com.android.internal.telephony.HbpcdUtils $r3;
        int $i0;
        com.android.internal.telephony.cdma.CDMAPhone $r5, $r6;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.HbpcdUtils mHbpcdUtils>;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        r2 = virtualinvoke $r3.<com.android.internal.telephony.HbpcdUtils: java.lang.String getIddByMcc(int)>($i0);

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r6 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r6.<com.android.internal.telephony.cdma.CDMAPhone: void setSystemProperty(java.lang.String,java.lang.String)>("gsm.operator.idpstring", r2);

        goto label2;

     label1:
        $r5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r5.<com.android.internal.telephony.cdma.CDMAPhone: void setSystemProperty(java.lang.String,java.lang.String)>("gsm.operator.idpstring", "+");

     label2:
        return;
    }

    private java.util.TimeZone getNitzTimeZone(int, boolean, long)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int i0;
        boolean z0, $z1;
        long l1;
        java.util.TimeZone r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.io.Serializable $r4;
        java.lang.String $r6;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        l1 := @parameter2: long;

        r1 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.util.TimeZone findTimeZone(int,boolean,long)>(i0, z0, l1);

        if r1 != null goto label3;

        if z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r1 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.util.TimeZone findTimeZone(int,boolean,long)>(i0, $z1, l1);

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getNitzTimeZone returning ");

        if r1 != null goto label4;

        $r4 = r1;

        goto label5;

     label4:
        $r4 = virtualinvoke r1.<java.util.TimeZone: java.lang.String getID()>();

     label5:
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r6);

        return r1;
    }

    private java.util.TimeZone findTimeZone(int, boolean, long)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int i0, i2, i3, i4, $i5;
        boolean z0, $z1;
        long l1;
        java.lang.String[] r1, r4;
        java.util.TimeZone r2, r6;
        java.util.Date r3, $r7;
        java.lang.String r5;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        l1 := @parameter2: long;

        i2 = i0;

        if z0 == 0 goto label1;

        i2 = i2 - 3600000;

     label1:
        r1 = staticinvoke <java.util.TimeZone: java.lang.String[] getAvailableIDs(int)>(i2);

        r2 = null;

        $r7 = new java.util.Date;

        specialinvoke $r7.<java.util.Date: void <init>(long)>(l1);

        r3 = $r7;

        r4 = r1;

        i3 = lengthof r4;

        i4 = 0;

     label2:
        if i4 >= i3 goto label4;

        r5 = r4[i4];

        r6 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(r5);

        $i5 = virtualinvoke r6.<java.util.TimeZone: int getOffset(long)>(l1);

        if $i5 != i0 goto label3;

        $z1 = virtualinvoke r6.<java.util.TimeZone: boolean inDaylightTime(java.util.Date)>(r3);

        if $z1 != z0 goto label3;

        r2 = r6;

        goto label4;

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        return r2;
    }

    private void queueNextSignalStrengthPoll()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        android.os.Message r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mDontPollSignalStrength>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r1 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.Message obtainMessage()>();

        r1.<android.os.Message: int what> = 10;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean sendMessageDelayed(android.os.Message,long)>(r1, 20000L);

        return;
    }

    protected int radioTechnologyToDataServiceState(int)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int i0;
        byte b1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        i0 := @parameter0: int;

        b1 = 1;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label1;
            case 5: goto label1;
            case 6: goto label2;
            case 7: goto label2;
            case 8: goto label2;
            case 9: goto label3;
            case 10: goto label3;
            case 11: goto label3;
            case 12: goto label2;
            case 13: goto label2;
            default: goto label3;
        };

     label1:
        goto label4;

     label2:
        b1 = 0;

        goto label4;

     label3:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>("radioTechnologyToDataServiceState: Wrong radioTechnology code.");

     label4:
        return b1;
    }

    protected int regCodeToServiceState(int)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label3;
            case 4: goto label3;
            case 5: goto label4;
            default: goto label5;
        };

     label1:
        return 1;

     label2:
        return 0;

     label3:
        return 1;

     label4:
        return 0;

     label5:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("regCodeToServiceState: unexpected service state ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>($r4);

        return 1;
    }

    public int getCurrentDataConnectionState()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        android.telephony.ServiceState $r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $i0 = virtualinvoke $r1.<android.telephony.ServiceState: int getDataRegState()>();

        return $i0;
    }

    private boolean regCodeIsRoaming(int)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        i0 := @parameter0: int;

        if 5 != i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private boolean isRoamIndForHomeSystem(java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String r1, r4;
        java.lang.String[] r2, r3;
        int i0, i1;
        com.android.internal.telephony.cdma.CDMAPhone $r5;
        android.content.Context $r6;
        android.content.res.Resources $r7;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: java.lang.String;

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke $r7.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236023);

        if r2 == null goto label4;

        r3 = r2;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r4 = r3[i1];

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;

     label4:
        return 0;
    }

    private boolean isRoamingBetweenOperators(boolean, android.telephony.ServiceState)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7;
        android.telephony.ServiceState r1;
        java.lang.String r2, r3, r4;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.telephony.ServiceState;

        r2 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("gsm.sim.operator.alpha", "empty");

        r3 = virtualinvoke r1.<android.telephony.ServiceState: java.lang.String getOperatorAlphaLong()>();

        r4 = virtualinvoke r1.<android.telephony.ServiceState: java.lang.String getOperatorAlphaShort()>();

        if r3 == null goto label1;

        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z6 == 0 goto label1;

        $z7 = 1;

        goto label2;

     label1:
        $z7 = 0;

     label2:
        z1 = $z7;

        if r4 == null goto label3;

        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z4 == 0 goto label3;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        z2 = $z5;

        if z0 == 0 goto label5;

        if z1 != 0 goto label5;

        if z2 != 0 goto label5;

        $z3 = 1;

        goto label6;

     label5:
        $z3 = 0;

     label6:
        return $z3;
    }

    private void setTimeFromNITZString(java.lang.String, long)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String r1, r5, r6, $r17, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r36, $r45, $r46, $r64, $r68, $r74, $r80, $r81, $r93, $r95, $r96, $r98, $r100, $r102, $r104, $r108, $r115, r119;
        long l0, l1, l10, l11, l12, l15, l16, $l17, $l22, $l28, $l29, $l32, $l33, $l34, $l35, $l36, $l37, $l38, $l40, $l44, $l46, $l47, $l48, $l49, $l50, $l51, $l53, $l56, $l57, $l59, l61, l62, l63;
        java.util.Calendar r2;
        java.lang.String[] r3;
        int i2, i3, i4, i5, i6, i7, i8, i9, i13, i14, $i18, $i19, $i20, $i21, $i23, $i24, $i25, $i26, $i27, $i41, $i42, $i52, $i54, $i58, i60;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.util.TimeZone r4, $r18;
        java.lang.Throwable r7, $r103;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r37, $r38, $r39, $r41, $r42, $r43, $r44, $r48, $r51, $r52, $r53, $r54, $r55, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r65, $r66, $r67, $r70, $r71, $r72, $r73, $r75, $r76, $r77, $r78, $r79, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r94, $r97, $r99, $r105, $r106, $r107, $r111, $r112, $r113, $r114, $r116, $r117, $r118;
        android.os.PowerManager$WakeLock $r40, $r47, $r69, $r92, $r101, $r109;
        byte $b30, $b31, $b39, $b43, $b45, $b55;
        android.content.ContentResolver $r49, $r50;
        java.util.Date $r56;
        java.lang.RuntimeException $r110, r120;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NITZ: ");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r10 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" start=");

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" delay=");

        $l17 = l1 - l0;

        $r14 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l17);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r17);

     label01:
        $r18 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r18);

        virtualinvoke r2.<java.util.Calendar: void clear()>();

        virtualinvoke r2.<java.util.Calendar: void set(int,int)>(16, 0);

        r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("[/:,+-]");

        $r20 = r3[0];

        $i18 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r20);

        i2 = 2000 + $i18;

        virtualinvoke r2.<java.util.Calendar: void set(int,int)>(1, i2);

        $r19 = r3[1];

        $i19 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r19);

        i3 = $i19 - 1;

        virtualinvoke r2.<java.util.Calendar: void set(int,int)>(2, i3);

        $r22 = r3[2];

        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r22);

        virtualinvoke r2.<java.util.Calendar: void set(int,int)>(5, i4);

        $r21 = r3[3];

        i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r21);

        virtualinvoke r2.<java.util.Calendar: void set(int,int)>(10, i5);

        $r24 = r3[4];

        i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r24);

        virtualinvoke r2.<java.util.Calendar: void set(int,int)>(12, i6);

        $r23 = r3[5];

        i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r23);

        virtualinvoke r2.<java.util.Calendar: void set(int,int)>(13, i7);

        $i20 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(45);

        if $i20 != -1 goto label02;

        $z11 = 1;

        goto label03;

     label02:
        $z11 = 0;

     label03:
        z0 = $z11;

        $r25 = r3[6];

        i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r25);

        $i23 = lengthof r3;

        if $i23 < 8 goto label04;

        $r102 = r3[7];

        $i54 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r102);

        goto label05;

     label04:
        $i54 = 0;

     label05:
        i9 = $i54;

        if z0 == 0 goto label06;

        $b55 = 1;

        goto label07;

     label06:
        $b55 = -1;

     label07:
        $i24 = $b55 * i8;

        $i25 = $i24 * 15;

        $i26 = $i25 * 60;

        i60 = $i26 * 1000;

        r4 = null;

        $i21 = lengthof r3;

        if $i21 < 9 goto label08;

        $r104 = r3[8];

        r6 = virtualinvoke $r104.<java.lang.String: java.lang.String replace(char,char)>(33, 47);

        r4 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(r6);

     label08:
        r119 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("gsm.operator.iso-country", "");

        if r4 != null goto label14;

        $z5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mGotCountryCode>;

        if $z5 == 0 goto label14;

        if r119 == null goto label11;

        $i58 = virtualinvoke r119.<java.lang.String: int length()>();

        if $i58 <= 0 goto label11;

        if i9 == 0 goto label09;

        $z12 = 1;

        goto label10;

     label09:
        $z12 = 0;

     label10:
        $l56 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>();

        r4 = staticinvoke <android.util.TimeUtils: java.util.TimeZone getTimeZone(int,boolean,long,java.lang.String)>(i60, $z12, $l56, r119);

        goto label14;

     label11:
        if i9 == 0 goto label12;

        $z6 = 1;

        goto label13;

     label12:
        $z6 = 0;

     label13:
        $l57 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>();

        r4 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.util.TimeZone getNitzTimeZone(int,boolean,long)>(i60, $z6, $l57);

     label14:
        if r4 == null goto label17;

        $i52 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mZoneOffset>;

        if $i52 != i60 goto label17;

        $z7 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mZoneDst>;

        if i9 == 0 goto label15;

        $z8 = 1;

        goto label16;

     label15:
        $z8 = 0;

     label16:
        if $z7 == $z8 goto label20;

     label17:
        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mNeedFixZone> = 1;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mZoneOffset> = i60;

        if i9 == 0 goto label18;

        $z4 = 1;

        goto label19;

     label18:
        $z4 = 0;

     label19:
        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mZoneDst> = $z4;

        $l22 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>();

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mZoneTime> = $l22;

     label20:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NITZ: tzOffset=");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i60);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dst=");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r27 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" zone=");

        if r4 == null goto label21;

        $r96 = virtualinvoke r4.<java.util.TimeZone: java.lang.String getID()>();

        goto label22;

     label21:
        $r96 = "NULL";

     label22:
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r96);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" iso=");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r119);

        $r37 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mGotCountryCode=");

        $z2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mGotCountryCode>;

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNeedFixZone=");

        $z1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mNeedFixZone>;

        $r35 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r36);

        if r4 == null goto label24;

        $z9 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean getAutoTimeZone()>();

        if $z9 == 0 goto label23;

        $r95 = virtualinvoke r4.<java.util.TimeZone: java.lang.String getID()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setAndBroadcastNetworkSetTimeZone(java.lang.String)>($r95);

     label23:
        $r100 = virtualinvoke r4.<java.util.TimeZone: java.lang.String getID()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void saveNitzTimeZone(java.lang.String)>($r100);

     label24:
        r5 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("gsm.ignore-nitz");

        if r5 == null goto label26;

        $z10 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("yes");

        if $z10 == 0 goto label26;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("NITZ: Not setting clock because gsm.ignore-nitz is set");

     label25:
        return;

     label26:
        $r40 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r40.<android.os.PowerManager$WakeLock: void acquire()>();

        $l29 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l10 = $l29 - l0;

        $b31 = l10 cmp 0L;

        if $b31 >= 0 goto label29;

        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NITZ: not setting time, clock has rolled backwards since NITZ time was received, ");

        $r82 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r81 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r81);

     label27:
        l11 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r86 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NITZ: end=");

        $r85 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l11);

        $r99 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dur=");

        $l53 = l11 - l1;

        $r97 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l53);

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r98);

        $r101 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r101.<android.os.PowerManager$WakeLock: void release()>();

     label28:
        return;

     label29:
        $b30 = l10 cmp 2147483647L;

        if $b30 <= 0 goto label32;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NITZ: not setting time, processing has taken ");

        $l49 = l10 / 86400000L;

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l49);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" days");

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r74);

     label30:
        l61 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();

        $r90 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NITZ: end=");

        $r89 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l61);

        $r88 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dur=");

        $l51 = l61 - l1;

        $r94 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l51);

        $r93 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r93);

        $r92 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r92.<android.os.PowerManager$WakeLock: void release()>();

     label31:
        return;

     label32:
        $i27 = (int) l10;

        virtualinvoke r2.<java.util.Calendar: void add(int,int)>(14, $i27);

        $z3 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean getAutoTime()>();

        if $z3 == 0 goto label37;

        $l36 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>();

        $l37 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l62 = $l36 - $l37;

        $l34 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l35 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedAtTime>;

        l12 = $l34 - $l35;

        $r50 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.content.ContentResolver mCr>;

        $i42 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mNitzUpdateSpacing>;

        i14 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r50, "nitz_update_spacing", $i42);

        $r49 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.content.ContentResolver mCr>;

        $i41 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mNitzUpdateDiff>;

        i13 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r49, "nitz_update_diff", $i41);

        $l40 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedAtTime>;

        $b39 = $l40 cmp 0L;

        if $b39 == 0 goto label33;

        $l46 = (long) i14;

        $b45 = l12 cmp $l46;

        if $b45 > 0 goto label33;

        $l48 = staticinvoke <java.lang.Math: long abs(long)>(l62);

        $l47 = (long) i13;

        $b43 = $l48 cmp $l47;

        if $b43 <= 0 goto label34;

     label33:
        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NITZ: Auto updating time of day to ");

        $r56 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>();

        $r55 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r56);

        $r54 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" NITZ receive delay=");

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l10);

        $r52 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms gained=");

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l62);

        $r67 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms from ");

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r68);

        $l44 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setAndBroadcastNetworkSetTime(long)>($l44);

        goto label37;

     label34:
        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NITZ: ignore, a previous update was ");

        $r60 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l12);

        $r63 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms ago and gained=");

        $r62 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l62);

        $r65 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r64 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r64);

     label35:
        l15 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NITZ: end=");

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l15);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dur=");

        $l50 = l15 - l1;

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l50);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r80);

        $r69 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r69.<android.os.PowerManager$WakeLock: void release()>();

     label36:
        return;

     label37:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("NITZ: update nitz time property");

        $l28 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>();

        $r45 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l28);

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("gsm.nitz.time", $r45);

        $l33 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>();

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedTime> = $l33;

        $l32 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedAtTime> = $l32;

     label38:
        l63 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NITZ: end=");

        $r41 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l63);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dur=");

        $l38 = l63 - l1;

        $r48 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l38);

        $r46 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r46);

        $r47 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r47.<android.os.PowerManager$WakeLock: void release()>();

        goto label41;

     label39:
        $r103 := @caughtexception;

        r7 = $r103;

     label40:
        l16 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r116 = new java.lang.StringBuilder;

        specialinvoke $r116.<java.lang.StringBuilder: void <init>()>();

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NITZ: end=");

        $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l16);

        $r113 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dur=");

        $l59 = l16 - l1;

        $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l59);

        $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r115);

        $r109 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r109.<android.os.PowerManager$WakeLock: void release()>();

        throw r7;

     label41:
        goto label43;

     label42:
        $r110 := @caughtexception;

        r120 = $r110;

        $r111 = new java.lang.StringBuilder;

        specialinvoke $r111.<java.lang.StringBuilder: void <init>()>();

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NITZ: Parsing NITZ time ");

        $r105 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ex=");

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r120);

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>($r108);

     label43:
        return;

        catch java.lang.Throwable from label26 to label27 with label39;
        catch java.lang.Throwable from label29 to label30 with label39;
        catch java.lang.Throwable from label32 to label35 with label39;
        catch java.lang.Throwable from label37 to label38 with label39;
        catch java.lang.Throwable from label39 to label40 with label39;
        catch java.lang.RuntimeException from label01 to label25 with label42;
        catch java.lang.RuntimeException from label26 to label28 with label42;
        catch java.lang.RuntimeException from label29 to label31 with label42;
        catch java.lang.RuntimeException from label32 to label36 with label42;
        catch java.lang.RuntimeException from label37 to label41 with label42;
    }

    private boolean getAutoTime()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        android.content.ContentResolver $r2;
        int $i0;
        boolean $z0;
        android.provider.Settings$SettingNotFoundException $r3;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

     label1:
        $r2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.content.ContentResolver mCr>;

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String)>($r2, "auto_time");

        if $i0 <= 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        $r3 := @caughtexception;

        return 1;

        catch android.provider.Settings$SettingNotFoundException from label1 to label3 with label4;
    }

    private boolean getAutoTimeZone()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        android.content.ContentResolver $r2;
        int $i0;
        boolean $z0;
        android.provider.Settings$SettingNotFoundException $r3;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

     label1:
        $r2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.content.ContentResolver mCr>;

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String)>($r2, "auto_time_zone");

        if $i0 <= 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        $r3 := @caughtexception;

        return 1;

        catch android.provider.Settings$SettingNotFoundException from label1 to label3 with label4;
    }

    private void saveNitzTimeZone(java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: java.lang.String;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mSavedTimeZone> = r1;

        return;
    }

    private void setAndBroadcastNetworkSetTimeZone(java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String r1, $r7;
        android.app.AlarmManager r2;
        android.content.Intent r3, $r11;
        java.lang.StringBuilder $r4, $r5, $r6;
        com.android.internal.telephony.cdma.CDMAPhone $r8, $r14;
        android.content.Context $r9, $r15;
        java.lang.Object $r10;
        android.os.UserHandle $r16;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setAndBroadcastNetworkSetTimeZone: setTimeZone=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r7);

        $r8 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r9 = virtualinvoke $r8.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        $r10 = virtualinvoke $r9.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        r2 = (android.app.AlarmManager) $r10;

        virtualinvoke r2.<android.app.AlarmManager: void setTimeZone(java.lang.String)>(r1);

        $r11 = new android.content.Intent;

        specialinvoke $r11.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.NETWORK_SET_TIMEZONE");

        r3 = $r11;

        virtualinvoke r3.<android.content.Intent: android.content.Intent addFlags(int)>(536870912);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("time-zone", r1);

        $r14 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r15 = virtualinvoke $r14.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        $r16 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r15.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r3, $r16);

        return;
    }

    private void setAndBroadcastNetworkSetTime(long)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        long l0;
        android.content.Intent r1, $r7;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6;
        com.android.internal.telephony.cdma.CDMAPhone $r10;
        android.content.Context $r11;
        android.os.UserHandle $r12;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        l0 := @parameter0: long;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setAndBroadcastNetworkSetTime: time=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r6);

        staticinvoke <android.os.SystemClock: boolean setCurrentTimeMillis(long)>(l0);

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.NETWORK_SET_TIME");

        r1 = $r7;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(536870912);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("time", l0);

        $r10 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r11 = virtualinvoke $r10.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        $r12 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r11.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r1, $r12);

        return;
    }

    private void revertToNitzTime()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        android.content.ContentResolver $r1;
        int $i0;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        long $l1, $l2, $l3, $l5, $l7, $l8, $l9, $l10, $l11;
        java.lang.String $r7;
        byte $b4, $b6;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.content.ContentResolver mCr>;

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r1, "auto_time", 0);

        if $i0 != 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("revertToNitzTime: mSavedTime=");

        $l1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedTime>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSavedAtTime=");

        $l2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedAtTime>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r7);

        $l3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedTime>;

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label2;

        $l5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedAtTime>;

        $b6 = $l5 cmp 0L;

        if $b6 == 0 goto label2;

        $l7 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedTime>;

        $l9 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l8 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedAtTime>;

        $l11 = $l9 - $l8;

        $l10 = $l7 + $l11;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setAndBroadcastNetworkSetTime(long)>($l10);

     label2:
        return;
    }

    private void revertToNitzTimeZone()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        com.android.internal.telephony.cdma.CDMAPhone $r1;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        int $i0;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8, $r9, $r10;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r3, "auto_time_zone", 0);

        if $i0 != 0 goto label1;

        return;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("revertToNitzTimeZone: tz=\'");

        $r6 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mSavedTimeZone>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r8);

        $r9 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mSavedTimeZone>;

        if $r9 == null goto label2;

        $r10 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mSavedTimeZone>;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setAndBroadcastNetworkSetTimeZone(java.lang.String)>($r10);

     label2:
        return;
    }

    protected boolean isSidsAllZeros()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int i0, $i1, $i2;
        int[] $r1, $r2, $r3;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeSystemId>;

        if $r1 == null goto label3;

        i0 = 0;

     label1:
        $r2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeSystemId>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label3;

        $r3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeSystemId>;

        $i2 = $r3[i0];

        if $i2 == 0 goto label2;

        return 0;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 1;
    }

    private boolean isHomeSid(int)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int i0, i1, $i2, $i3;
        int[] $r1, $r2, $r3;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeSystemId>;

        if $r1 == null goto label3;

        i1 = 0;

     label1:
        $r2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeSystemId>;

        $i2 = lengthof $r2;

        if i1 >= $i2 goto label3;

        $r3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeSystemId>;

        $i3 = $r3[i1];

        if i0 != $i3 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public boolean isConcurrentVoiceAndDataAllowed()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        return 0;
    }

    public java.lang.String getMdnNumber()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mMdn>;

        return $r1;
    }

    public java.lang.String getCdmaMin()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mMin>;

        return $r1;
    }

    public java.lang.String getPrlVersion()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mPrlVersion>;

        return $r1;
    }

    java.lang.String getImsi()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String r1, $r2, $r5, $r7;
        boolean $z0;
        java.lang.StringBuilder $r3, $r4, $r6;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("gsm.sim.operator.numeric", "");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String getCdmaMin()>();

        if $r2 == null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String getCdmaMin()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;

     label1:
        return null;
    }

    public boolean isMinInfoReady()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsMinInfoReady>;

        return $z0;
    }

    int getOtasp()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        byte b0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r1, $r4, $r7, $r11, $r12, $r13, $r14, $r15, $r16;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r8, $r9, $r10;
        int $i1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsSubscriptionFromRuim>;

        if $z0 == 0 goto label1;

        $r16 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mMin>;

        if $r16 != null goto label1;

        return 2;

     label1:
        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mMin>;

        if $r1 == null goto label2;

        $r12 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mMin>;

        $i1 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i1 >= 6 goto label3;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getOtasp: bad mMin=\'");

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mMin>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r7);

        b0 = 1;

        goto label6;

     label3:
        $r13 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mMin>;

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("1111110111");

        if $z1 != 0 goto label4;

        $r15 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mMin>;

        $r14 = virtualinvoke $r15.<java.lang.String: java.lang.String substring(int,int)>(0, 6);

        $z3 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("000000");

        if $z3 != 0 goto label4;

        $z2 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("test_cdma_setup", 0);

        if $z2 == 0 goto label5;

     label4:
        b0 = 2;

        goto label6;

     label5:
        b0 = 3;

     label6:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getOtasp: state=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r11);

        return b0;
    }

    protected void hangupAndPowerOff()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        com.android.internal.telephony.cdma.CDMAPhone $r1, $r4, $r7;
        com.android.internal.telephony.cdma.CdmaCallTracker $r2, $r5, $r8;
        com.android.internal.telephony.cdma.CdmaCall $r3, $r6, $r9;
        com.android.internal.telephony.CommandsInterface $r10;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r2 = $r1.<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.cdma.CdmaCallTracker mCT>;

        $r3 = $r2.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall>;

        virtualinvoke $r3.<com.android.internal.telephony.cdma.CdmaCall: void hangupIfAlive()>();

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r5 = $r4.<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.cdma.CdmaCallTracker mCT>;

        $r6 = $r5.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mBackgroundCall>;

        virtualinvoke $r6.<com.android.internal.telephony.cdma.CdmaCall: void hangupIfAlive()>();

        $r7 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r8 = $r7.<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.cdma.CdmaCallTracker mCT>;

        $r9 = $r8.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        virtualinvoke $r9.<com.android.internal.telephony.cdma.CdmaCall: void hangupIfAlive()>();

        $r10 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r10.<com.android.internal.telephony.CommandsInterface: void setRadioPower(boolean,android.os.Message)>(0, null);

        return;
    }

    protected void parseSidNid(java.lang.String, java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String r1, r2, $r8, $r12, $r15, $r17, $r25, $r28;
        java.lang.String[] r3, r29;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        java.lang.NumberFormatException r4, $r20, $r26, r30;
        java.lang.StringBuilder $r5, $r6, $r7, $r9, $r10, $r11, $r19, $r21, $r22, $r23, $r24, $r27;
        int[] $r13, $r14, $r16, $r18;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r1 == null goto label06;

        r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i4 = lengthof r3;

        $r16 = newarray (int)[$i4];

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeSystemId> = $r16;

        i0 = 0;

     label01:
        $i5 = lengthof r3;

        if i0 >= $i5 goto label06;

     label02:
        $r18 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeSystemId>;

        $r17 = r3[i0];

        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r17);

        $r18[i0] = $i6;

     label03:
        goto label05;

     label04:
        $r20 := @caughtexception;

        r4 = $r20;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error parsing system id: ");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>($r25);

     label05:
        i0 = i0 + 1;

        goto label01;

     label06:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CDMA_SUBSCRIPTION: SID=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r8);

        if r2 == null goto label12;

        r29 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i1 = lengthof r29;

        $r13 = newarray (int)[$i1];

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeNetworkId> = $r13;

        i7 = 0;

     label07:
        $i2 = lengthof r29;

        if i7 >= $i2 goto label12;

     label08:
        $r14 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeNetworkId>;

        $r15 = r29[i7];

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r15);

        $r14[i7] = $i3;

     label09:
        goto label11;

     label10:
        $r26 := @caughtexception;

        r30 = $r26;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CDMA_SUBSCRIPTION: error parsing network id: ");

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r30);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void loge(java.lang.String)>($r28);

     label11:
        i7 = i7 + 1;

        goto label07;

     label12:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CDMA_SUBSCRIPTION: NID=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r12);

        return;

        catch java.lang.NumberFormatException from label02 to label03 with label04;
        catch java.lang.NumberFormatException from label08 to label09 with label10;
    }

    protected void updateOtaspState()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        int i0, i1, $i2, $i3, $i4;
        android.os.RegistrantList $r1, $r9;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        java.lang.String $r7;
        com.android.internal.telephony.cdma.CDMAPhone $r8;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        i0 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int getOtasp()>();

        i1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mCurrentOtaspMode>;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mCurrentOtaspMode> = i0;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.RegistrantList mCdmaForSubscriptionInfoReadyRegistrants>;

        if $r1 == null goto label1;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("CDMA_SUBSCRIPTION: call notifyRegistrants()");

        $r9 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.RegistrantList mCdmaForSubscriptionInfoReadyRegistrants>;

        virtualinvoke $r9.<android.os.RegistrantList: void notifyRegistrants()>();

     label1:
        $i2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mCurrentOtaspMode>;

        if i1 == $i2 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CDMA_SUBSCRIPTION: call notifyOtaspChanged old otaspMode=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new otaspMode=");

        $i3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mCurrentOtaspMode>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r7);

        $r8 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $i4 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mCurrentOtaspMode>;

        virtualinvoke $r8.<com.android.internal.telephony.cdma.CDMAPhone: void notifyOtaspChanged(int)>($i4);

     label2:
        return;
    }

    protected com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        com.android.internal.telephony.cdma.CDMAPhone $r1;
        com.android.internal.telephony.uicc.UiccController $r2;
        int $i0;
        com.android.internal.telephony.uicc.UiccCardApplication $r3;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $i0 = virtualinvoke $r1.<com.android.internal.telephony.cdma.CDMAPhone: int getPhoneId()>();

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication(int,int)>($i0, 2);

        return $r3;
    }

    protected void onUpdateIccAvailability()
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        com.android.internal.telephony.uicc.UiccCardApplication r1, $r3, $r4, $r5, $r7, $r10;
        com.android.internal.telephony.uicc.UiccController $r2;
        com.android.internal.telephony.uicc.IccRecords $r6, $r8, $r9, $r11, $r12;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.UiccController mUiccController>;

        if $r2 != null goto label1;

        return;

     label1:
        r1 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication()>();

        $r3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation>;

        if $r3 == r1 goto label4;

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation>;

        if $r4 == null goto label3;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("Removing stale icc objects.");

        $r10 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation>;

        virtualinvoke $r10.<com.android.internal.telephony.uicc.UiccCardApplication: void unregisterForReady(android.os.Handler)>(r0);

        $r11 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        if $r11 == null goto label2;

        $r12 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        virtualinvoke $r12.<com.android.internal.telephony.uicc.IccRecords: void unregisterForRecordsLoaded(android.os.Handler)>(r0);

     label2:
        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords> = null;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation> = null;

     label3:
        if r1 == null goto label4;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>("New card found");

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation> = r1;

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation>;

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccRecords getIccRecords()>();

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords> = $r6;

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsSubscriptionFromRuim>;

        if $z0 == 0 goto label4;

        $r7 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.UiccCardApplication mUiccApplcation>;

        virtualinvoke $r7.<com.android.internal.telephony.uicc.UiccCardApplication: void registerForReady(android.os.Handler,int,java.lang.Object)>(r0, 26, null);

        $r8 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        if $r8 == null goto label4;

        $r9 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.uicc.IccRecords mIccRecords>;

        virtualinvoke $r9.<com.android.internal.telephony.uicc.IccRecords: void registerForRecordsLoaded(android.os.Handler,int,java.lang.Object)>(r0, 27, null);

     label4:
        return;
    }

    protected void log(java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[CdmaSST] ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CdmaSST", $r5);

        return;
    }

    protected void loge(java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[CdmaSST] ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("CdmaSST", $r5);

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.lang.StringBuilder $r4, $r5, $r7, $r9, $r10, $r12, $r14, $r15, $r16, $r18, $r21, $r23, $r24, $r25, $r26, $r28, $r30, $r31, $r32, $r33, $r36, $r37, $r38, $r40, $r41, $r42, $r43, $r44, $r45, $r47, $r48, $r50, $r51, $r53, $r55, $r56, $r58, $r59, $r60, $r61, $r62, $r63, $r65, $r66, $r68, $r69, $r70, $r71, $r72, $r74, $r76, $r78, $r79, $r80, $r81, $r83, $r84, $r86, $r89, $r90, $r91, $r94, $r96, $r97, $r98, $r99, $r101, $r103, $r104, $r106, $r107, $r109, $r110, $r112, $r114, $r115, $r116, $r118, $r120, $r121, $r124, $r126, $r127, $r128, $r129, $r131, $r132, $r134, $r136, $r137, $r138, $r139, $r141, $r142, $r145, $r147;
        com.android.internal.telephony.cdma.CDMAPhone $r6;
        java.lang.String $r8, $r13, $r19, $r22, $r29, $r34, $r35, $r39, $r46, $r49, $r52, $r54, $r57, $r64, $r67, $r73, $r75, $r77, $r82, $r85, $r88, $r92, $r93, $r95, $r100, $r105, $r108, $r111, $r117, $r119, $r122, $r123, $r125, $r130, $r133, $r135, $r140, $r144, $r146;
        android.telephony.ServiceState $r11, $r17;
        android.telephony.cdma.CdmaCellLocation $r20, $r27;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        long $l5, $l6, $l7;
        android.os.PowerManager$WakeLock $r87;
        int[] $r102, $r113;
        com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager $r143;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("CdmaServiceStateTracker extends:");

        specialinvoke r0.<com.android.internal.telephony.ServiceStateTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPhone=");

        $r6 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSS=");

        $r11 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mSS>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNewSS=");

        $r17 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.ServiceState mNewSS>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r19);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCellLoc=");

        $r20 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mCellLoc>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r22);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNewCellLoc=");

        $r27 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.telephony.cdma.CdmaCellLocation mNewCellLoc>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r29);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCurrentOtaspMode=");

        $i0 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mCurrentOtaspMode>;

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r34);

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCdmaRoaming=");

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mCdmaRoaming>;

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r35 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r35);

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRoamingIndicator=");

        $i1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mRoamingIndicator>;

        $r38 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r39);

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIsInPrl=");

        $z1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsInPrl>;

        $r41 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r46 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r46);

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mDefaultRoamingIndicator=");

        $i2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mDefaultRoamingIndicator>;

        $r50 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r49);

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRegistrationState=");

        $i3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mRegistrationState>;

        $r53 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r52 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r52);

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNeedFixZone=");

        $z2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mNeedFixZone>;

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r54 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r54);

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mZoneOffset=");

        $i4 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int mZoneOffset>;

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r57 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r57);

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mZoneDst=");

        $z3 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mZoneDst>;

        $r66 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r67);

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mZoneTime=");

        $l5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mZoneTime>;

        $r63 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r64);

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r74 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mGotCountryCode=");

        $z4 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mGotCountryCode>;

        $r76 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r75);

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSavedTimeZone=");

        $r73 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mSavedTimeZone>;

        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

        $r82 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r82);

        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSavedTime=");

        $l6 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedTime>;

        $r78 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r77 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r77);

        $r80 = new java.lang.StringBuilder;

        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();

        $r79 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSavedAtTime=");

        $l7 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: long mSavedAtTime>;

        $r90 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r88 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r88);

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r86 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mWakeLock=");

        $r87 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.PowerManager$WakeLock mWakeLock>;

        $r84 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r87);

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r85);

        $r97 = new java.lang.StringBuilder;

        specialinvoke $r97.<java.lang.StringBuilder: void <init>()>();

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCurPlmn=");

        $r95 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mCurPlmn>;

        $r96 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r95);

        $r93 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r93);

        $r94 = new java.lang.StringBuilder;

        specialinvoke $r94.<java.lang.StringBuilder: void <init>()>();

        $r91 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mMdn=");

        $r92 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mMdn>;

        $r106 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r92);

        $r105 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r105);

        $r104 = new java.lang.StringBuilder;

        specialinvoke $r104.<java.lang.StringBuilder: void <init>()>();

        $r103 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mHomeSystemId=");

        $r102 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeSystemId>;

        $r101 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r102);

        $r100 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r100);

        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        $r114 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mHomeNetworkId=");

        $r113 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: int[] mHomeNetworkId>;

        $r112 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r113);

        $r111 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r111);

        $r110 = new java.lang.StringBuilder;

        specialinvoke $r110.<java.lang.StringBuilder: void <init>()>();

        $r109 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mMin=");

        $r108 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mMin>;

        $r107 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r108);

        $r122 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r122);

        $r121 = new java.lang.StringBuilder;

        specialinvoke $r121.<java.lang.StringBuilder: void <init>()>();

        $r124 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPrlVersion=");

        $r123 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mPrlVersion>;

        $r126 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r123);

        $r125 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r125);

        $r128 = new java.lang.StringBuilder;

        specialinvoke $r128.<java.lang.StringBuilder: void <init>()>();

        $r127 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIsMinInfoReady=");

        $z5 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsMinInfoReady>;

        $r115 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r117 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r117);

        $r116 = new java.lang.StringBuilder;

        specialinvoke $r116.<java.lang.StringBuilder: void <init>()>();

        $r118 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIsEriTextLoaded=");

        $z6 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsEriTextLoaded>;

        $r120 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r119 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r119);

        $r137 = new java.lang.StringBuilder;

        specialinvoke $r137.<java.lang.StringBuilder: void <init>()>();

        $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIsSubscriptionFromRuim=");

        $z7 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mIsSubscriptionFromRuim>;

        $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z7);

        $r140 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r140);

        $r141 = new java.lang.StringBuilder;

        specialinvoke $r141.<java.lang.StringBuilder: void <init>()>();

        $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCdmaSSM=");

        $r143 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager mCdmaSSM>;

        $r129 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r143);

        $r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r130);

        $r131 = new java.lang.StringBuilder;

        specialinvoke $r131.<java.lang.StringBuilder: void <init>()>();

        $r132 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRegistrationDeniedReason=");

        $r133 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mRegistrationDeniedReason>;

        $r134 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r133);

        $r135 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r135);

        $r136 = new java.lang.StringBuilder;

        specialinvoke $r136.<java.lang.StringBuilder: void <init>()>();

        $r147 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCurrentCarrier=");

        $r146 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String mCurrentCarrier>;

        $r145 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r146);

        $r144 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r144);

        return;
    }

    public void setImsRegistrationState(boolean)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;
        boolean z0, $z1, $z2;
        android.content.Context r1;
        android.app.AlarmManager r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        com.android.internal.telephony.cdma.CDMAPhone $r7;
        java.lang.Object $r8;
        android.app.PendingIntent $r9;
        android.os.Message $r10;

        r0 := @this: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        z0 := @parameter0: boolean;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImsRegistrationState - registered : ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void log(java.lang.String)>($r6);

        $z1 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mImsRegistrationOnOff>;

        if $z1 == 0 goto label1;

        if z0 != 0 goto label1;

        $z2 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mAlarmSwitch>;

        if $z2 == 0 goto label1;

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mImsRegistrationOnOff> = z0;

        $r7 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        r1 = virtualinvoke $r7.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        $r8 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        r2 = (android.app.AlarmManager) $r8;

        $r9 = r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.app.PendingIntent mRadioOffIntent>;

        virtualinvoke r2.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r9);

        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mAlarmSwitch> = 0;

        $r10 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.Message obtainMessage(int)>(45);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean sendMessage(android.os.Message)>($r10);

        return;

     label1:
        r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean mImsRegistrationOnOff> = z0;

        return;
    }

    static void access$000(com.android.internal.telephony.cdma.CdmaServiceStateTracker)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;

        r0 := @parameter0: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void revertToNitzTime()>();

        return;
    }

    static void access$100(com.android.internal.telephony.cdma.CdmaServiceStateTracker)
    {
        com.android.internal.telephony.cdma.CdmaServiceStateTracker r0;

        r0 := @parameter0: com.android.internal.telephony.cdma.CdmaServiceStateTracker;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void revertToNitzTimeZone()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String DEFAULT_MNC> = "00";

        <com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String INVALID_MCC> = "000";

        <com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String WAKELOCK_TAG> = "ServiceStateTracker";

        <com.android.internal.telephony.cdma.CdmaServiceStateTracker: int NITZ_UPDATE_DIFF_DEFAULT> = 2000;

        <com.android.internal.telephony.cdma.CdmaServiceStateTracker: int NITZ_UPDATE_SPACING_DEFAULT> = 600000;

        <com.android.internal.telephony.cdma.CdmaServiceStateTracker: int MS_PER_HOUR> = 3600000;

        <com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String UNACTIVATED_MIN_VALUE> = "1111110111";

        <com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String UNACTIVATED_MIN2_VALUE> = "000000";

        <com.android.internal.telephony.cdma.CdmaServiceStateTracker: java.lang.String LOG_TAG> = "CdmaSST";

        return;
    }
}
