public final class android.telephony.SmsManager extends java.lang.Object
{
    private static final int DEFAULT_SUB_ID;
    private static final android.telephony.SmsManager sInstance;
    private static final java.lang.Object sLockObject;
    private static final java.util.Map sSubInstances;
    private long mSubId;
    public static final java.lang.String MMS_CONFIG_APPEND_TRANSACTION_ID;
    public static final java.lang.String MMS_CONFIG_MMS_ENABLED;
    public static final java.lang.String MMS_CONFIG_GROUP_MMS_ENABLED;
    public static final java.lang.String MMS_CONFIG_NOTIFY_WAP_MMSC_ENABLED;
    public static final java.lang.String MMS_CONFIG_ALIAS_ENABLED;
    public static final java.lang.String MMS_CONFIG_ALLOW_ATTACH_AUDIO;
    public static final java.lang.String MMS_CONFIG_MULTIPART_SMS_ENABLED;
    public static final java.lang.String MMS_CONFIG_SMS_DELIVERY_REPORT_ENABLED;
    public static final java.lang.String MMS_CONFIG_SUPPORT_MMS_CONTENT_DISPOSITION;
    public static final java.lang.String MMS_CONFIG_SEND_MULTIPART_SMS_AS_SEPARATE_MESSAGES;
    public static final java.lang.String MMS_CONFIG_MMS_READ_REPORT_ENABLED;
    public static final java.lang.String MMS_CONFIG_MMS_DELIVERY_REPORT_ENABLED;
    public static final java.lang.String MMS_CONFIG_MAX_MESSAGE_SIZE;
    public static final java.lang.String MMS_CONFIG_MAX_IMAGE_WIDTH;
    public static final java.lang.String MMS_CONFIG_MAX_IMAGE_HEIGHT;
    public static final java.lang.String MMS_CONFIG_RECIPIENT_LIMIT;
    public static final java.lang.String MMS_CONFIG_ALIAS_MIN_CHARS;
    public static final java.lang.String MMS_CONFIG_ALIAS_MAX_CHARS;
    public static final java.lang.String MMS_CONFIG_SMS_TO_MMS_TEXT_THRESHOLD;
    public static final java.lang.String MMS_CONFIG_SMS_TO_MMS_TEXT_LENGTH_THRESHOLD;
    public static final java.lang.String MMS_CONFIG_MESSAGE_TEXT_MAX_SIZE;
    public static final java.lang.String MMS_CONFIG_SUBJECT_MAX_LENGTH;
    public static final java.lang.String MMS_CONFIG_HTTP_SOCKET_TIMEOUT;
    public static final java.lang.String MMS_CONFIG_UA_PROF_TAG_NAME;
    public static final java.lang.String MMS_CONFIG_USER_AGENT;
    public static final java.lang.String MMS_CONFIG_UA_PROF_URL;
    public static final java.lang.String MMS_CONFIG_HTTP_PARAMS;
    public static final java.lang.String MMS_CONFIG_EMAIL_GATEWAY_NUMBER;
    public static final java.lang.String MMS_CONFIG_NAI_SUFFIX;
    public static final int STATUS_ON_ICC_FREE;
    public static final int STATUS_ON_ICC_READ;
    public static final int STATUS_ON_ICC_UNREAD;
    public static final int STATUS_ON_ICC_SENT;
    public static final int STATUS_ON_ICC_UNSENT;
    public static final int RESULT_ERROR_GENERIC_FAILURE;
    public static final int RESULT_ERROR_RADIO_OFF;
    public static final int RESULT_ERROR_NULL_PDU;
    public static final int RESULT_ERROR_NO_SERVICE;
    public static final int RESULT_ERROR_LIMIT_EXCEEDED;
    public static final int RESULT_ERROR_FDN_CHECK_FAILURE;
    private static final java.lang.String PHONE_PACKAGE_NAME;
    public static final int MMS_ERROR_UNSPECIFIED;
    public static final int MMS_ERROR_INVALID_APN;
    public static final int MMS_ERROR_UNABLE_CONNECT_MMS;
    public static final int MMS_ERROR_HTTP_FAILURE;
    public static final int MMS_ERROR_IO_ERROR;
    public static final int MMS_ERROR_RETRY;
    public static final int MMS_ERROR_CONFIGURATION_ERROR;
    public static final java.lang.String EXTRA_MMS_DATA;
    public static final int SMS_TYPE_INCOMING;
    public static final int SMS_TYPE_OUTGOING;
    public static final java.lang.String MESSAGE_STATUS_SEEN;
    public static final java.lang.String MESSAGE_STATUS_READ;

    public void sendTextMessage(java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent)
    {
        android.telephony.SmsManager r0;
        java.lang.String r1, r2, r3, $r7;
        android.app.PendingIntent r4, r5;
        com.android.internal.telephony.ISms r6;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r8, $r9;
        android.os.RemoteException $r10;

        r0 := @this: android.telephony.SmsManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.app.PendingIntent;

        r5 := @parameter4: android.app.PendingIntent;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid destinationAddress");

        throw $r9;

     label1:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z1 == 0 goto label2;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid message body");

        throw $r8;

     label2:
        r6 = staticinvoke <android.telephony.SmsManager: com.android.internal.telephony.ISms getISmsServiceOrThrow()>();

        $r7 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        interfaceinvoke r6.<com.android.internal.telephony.ISms: void sendText(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>($r7, r1, r2, r3, r4, r5);

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void injectSmsPdu(byte[], java.lang.String, android.app.PendingIntent)
    {
        android.telephony.SmsManager r0;
        byte[] r1;
        java.lang.String r2;
        android.app.PendingIntent r3;
        com.android.internal.telephony.ISms r4;
        boolean $z0, $z1;
        android.os.IBinder $r5;
        java.lang.IllegalArgumentException $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.telephony.SmsManager;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.app.PendingIntent;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("3gpp");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("3gpp2");

        if $z1 != 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid pdu format. format must be either 3gpp or 3gpp2");

        throw $r6;

     label1:
        $r5 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isms");

        r4 = staticinvoke <com.android.internal.telephony.ISms$Stub: com.android.internal.telephony.ISms asInterface(android.os.IBinder)>($r5);

        if r4 == null goto label2;

        interfaceinvoke r4.<com.android.internal.telephony.ISms: void injectSmsPdu(byte[],java.lang.String,android.app.PendingIntent)>(r1, r2, r3);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void updateSmsSendStatus(int, boolean)
    {
        android.telephony.SmsManager r0;
        int i0;
        boolean z0;
        com.android.internal.telephony.ISms r1;
        android.os.IBinder $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.telephony.SmsManager;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

     label1:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isms");

        r1 = staticinvoke <com.android.internal.telephony.ISms$Stub: com.android.internal.telephony.ISms asInterface(android.os.IBinder)>($r2);

        if r1 == null goto label2;

        interfaceinvoke r1.<com.android.internal.telephony.ISms: void updateSmsSendStatus(int,boolean)>(i0, z0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.ArrayList divideMessage(java.lang.String)
    {
        android.telephony.SmsManager r0;
        java.lang.String r1;
        java.util.ArrayList $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.telephony.SmsManager;

        r1 := @parameter0: java.lang.String;

        if null != r1 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("text is null");

        throw $r3;

     label1:
        $r2 = staticinvoke <android.telephony.SmsMessage: java.util.ArrayList fragmentText(java.lang.String)>(r1);

        return $r2;
    }

    public void sendMultipartTextMessage(java.lang.String, java.lang.String, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList)
    {
        android.telephony.SmsManager r0;
        java.lang.String r1, r2, $r10, $r13;
        java.util.ArrayList r3, r4, r5;
        com.android.internal.telephony.ISms r6;
        android.app.PendingIntent r7, r17;
        boolean $z0;
        java.lang.IllegalArgumentException $r8, $r15;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r9, $r11, $r12;
        android.os.RemoteException $r14;

        r0 := @this: android.telephony.SmsManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.ArrayList;

        r4 := @parameter3: java.util.ArrayList;

        r5 := @parameter4: java.util.ArrayList;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label01;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid destinationAddress");

        throw $r15;

     label01:
        if r3 == null goto label02;

        $i0 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if $i0 >= 1 goto label03;

     label02:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid message body");

        throw $r8;

     label03:
        $i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if $i1 <= 1 goto label07;

     label04:
        r6 = staticinvoke <android.telephony.SmsManager: com.android.internal.telephony.ISms getISmsServiceOrThrow()>();

        $r13 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        interfaceinvoke r6.<com.android.internal.telephony.ISms: void sendMultipartText(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>($r13, r1, r2, r3, r4, r5);

     label05:
        goto label10;

     label06:
        $r14 := @caughtexception;

        goto label10;

     label07:
        r17 = null;

        r7 = null;

        if r4 == null goto label08;

        $i3 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label08;

        $r12 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r17 = (android.app.PendingIntent) $r12;

     label08:
        if r5 == null goto label09;

        $i2 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        if $i2 <= 0 goto label09;

        $r11 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r7 = (android.app.PendingIntent) $r11;

     label09:
        $r9 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r10 = (java.lang.String) $r9;

        virtualinvoke r0.<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>(r1, r2, $r10, r17, r7);

     label10:
        return;

        catch android.os.RemoteException from label04 to label05 with label06;
    }

    public void sendDataMessage(java.lang.String, java.lang.String, short, byte[], android.app.PendingIntent, android.app.PendingIntent)
    {
        android.telephony.SmsManager r0;
        java.lang.String r1, r2, $r8;
        short s0;
        byte[] r3;
        android.app.PendingIntent r4, r5;
        com.android.internal.telephony.ISms r6;
        boolean $z0;
        java.lang.IllegalArgumentException $r7, $r9;
        int $i1, $i2;
        android.os.RemoteException $r10;

        r0 := @this: android.telephony.SmsManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        s0 := @parameter2: short;

        r3 := @parameter3: byte[];

        r4 := @parameter4: android.app.PendingIntent;

        r5 := @parameter5: android.app.PendingIntent;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid destinationAddress");

        throw $r9;

     label1:
        if r3 == null goto label2;

        $i1 = lengthof r3;

        if $i1 != 0 goto label3;

     label2:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid message data");

        throw $r7;

     label3:
        r6 = staticinvoke <android.telephony.SmsManager: com.android.internal.telephony.ISms getISmsServiceOrThrow()>();

        $r8 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        $i2 = s0 & 65535;

        interfaceinvoke r6.<com.android.internal.telephony.ISms: void sendData(java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>($r8, r1, r2, $i2, r3, r4, r5);

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;

     label6:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public static android.telephony.SmsManager getDefault()
    {
        android.telephony.SmsManager $r0;

        $r0 = <android.telephony.SmsManager: android.telephony.SmsManager sInstance>;

        return $r0;
    }

    public static android.telephony.SmsManager getSmsManagerForSubscriber(long)
    {
        long l0;
        java.lang.Object r0, $r3, $r6;
        android.telephony.SmsManager r1, $r7;
        java.lang.Throwable r2, $r11;
        java.util.Map $r4, $r8;
        java.lang.Long $r5, $r9;

        l0 := @parameter0: long;

        $r3 = <android.telephony.SmsManager: java.lang.Object sLockObject>;

        r0 = $r3;

        entermonitor $r3;

     label1:
        $r4 = <android.telephony.SmsManager: java.util.Map sSubInstances>;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r1 = (android.telephony.SmsManager) $r6;

        if r1 != null goto label2;

        $r7 = new android.telephony.SmsManager;

        specialinvoke $r7.<android.telephony.SmsManager: void <init>(long)>(l0);

        r1 = $r7;

        $r8 = <android.telephony.SmsManager: java.util.Map sSubInstances>;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r1);

     label2:
        exitmonitor r0;

     label3:
        return r1;

     label4:
        $r11 := @caughtexception;

        r2 = $r11;

        exitmonitor r0;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void <init>(long)
    {
        android.telephony.SmsManager r0;
        long l0;

        r0 := @this: android.telephony.SmsManager;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.telephony.SmsManager: long mSubId> = l0;

        return;
    }

    public long getSubId()
    {
        android.telephony.SmsManager r0;
        long $l0, $l2, $l3;
        byte $b1;

        r0 := @this: android.telephony.SmsManager;

        $l0 = r0.<android.telephony.SmsManager: long mSubId>;

        $b1 = $l0 cmp -1002L;

        if $b1 != 0 goto label1;

        $l3 = staticinvoke <android.telephony.SmsManager: long getDefaultSmsSubId()>();

        return $l3;

     label1:
        $l2 = r0.<android.telephony.SmsManager: long mSubId>;

        return $l2;
    }

    private static com.android.internal.telephony.ISms getISmsServiceOrThrow()
    {
        com.android.internal.telephony.ISms r0;
        java.lang.UnsupportedOperationException $r1;

        r0 = staticinvoke <android.telephony.SmsManager: com.android.internal.telephony.ISms getISmsService()>();

        if r0 != null goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Sms is not supported");

        throw $r1;

     label1:
        return r0;
    }

    private static com.android.internal.telephony.ISms getISmsService()
    {
        android.os.IBinder $r0;
        com.android.internal.telephony.ISms $r1;

        $r0 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isms");

        $r1 = staticinvoke <com.android.internal.telephony.ISms$Stub: com.android.internal.telephony.ISms asInterface(android.os.IBinder)>($r0);

        return $r1;
    }

    public boolean copyMessageToIcc(byte[], byte[], int)
    {
        android.telephony.SmsManager r0;
        byte[] r1, r2;
        int i0;
        boolean z0;
        com.android.internal.telephony.ISms r3;
        java.lang.String $r4;
        java.lang.IllegalArgumentException $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.telephony.SmsManager;

        r1 := @parameter0: byte[];

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        z0 = 0;

        if null != r2 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("pdu is NULL");

        throw $r5;

     label1:
        r3 = staticinvoke <android.telephony.SmsManager: com.android.internal.telephony.ISms getISmsService()>();

        if r3 == null goto label2;

        $r4 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        z0 = interfaceinvoke r3.<com.android.internal.telephony.ISms: boolean copyMessageToIccEf(java.lang.String,int,byte[],byte[])>($r4, i0, r2, r1);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        return z0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean deleteMessageFromIcc(int)
    {
        android.telephony.SmsManager r0;
        int i0;
        boolean z0;
        byte[] r1;
        com.android.internal.telephony.ISms r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telephony.SmsManager;

        i0 := @parameter0: int;

        z0 = 0;

        r1 = newarray (byte)[175];

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>(r1, -1);

     label1:
        r2 = staticinvoke <android.telephony.SmsManager: com.android.internal.telephony.ISms getISmsService()>();

        if r2 == null goto label2;

        $r3 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        z0 = interfaceinvoke r2.<com.android.internal.telephony.ISms: boolean updateMessageOnIccEf(java.lang.String,int,int,byte[])>($r3, i0, 0, r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return z0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean updateMessageOnIcc(int, int, byte[])
    {
        android.telephony.SmsManager r0;
        int i0, i1;
        byte[] r1;
        boolean z0;
        com.android.internal.telephony.ISms r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telephony.SmsManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        z0 = 0;

     label1:
        r2 = staticinvoke <android.telephony.SmsManager: com.android.internal.telephony.ISms getISmsService()>();

        if r2 == null goto label2;

        $r3 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        z0 = interfaceinvoke r2.<com.android.internal.telephony.ISms: boolean updateMessageOnIccEf(java.lang.String,int,int,byte[])>($r3, i0, i1, r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return z0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static java.util.ArrayList getAllMessagesFromIcc()
    {
        java.util.List r0;
        com.android.internal.telephony.ISms r1;
        java.util.ArrayList $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;

        r0 = null;

     label1:
        r1 = staticinvoke <android.telephony.SmsManager: com.android.internal.telephony.ISms getISmsService()>();

        if r1 == null goto label2;

        $r3 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        r0 = interfaceinvoke r1.<com.android.internal.telephony.ISms: java.util.List getAllMessagesFromIccEf(java.lang.String)>($r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        $r2 = staticinvoke <android.telephony.SmsManager: java.util.ArrayList createMessageListFromRawRecords(java.util.List)>(r0);

        return $r2;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean enableCellBroadcast(int)
    {
        android.telephony.SmsManager r0;
        int i0;
        boolean z0;
        com.android.internal.telephony.ISms r1;
        android.os.RemoteException $r2;

        r0 := @this: android.telephony.SmsManager;

        i0 := @parameter0: int;

        z0 = 0;

     label1:
        r1 = staticinvoke <android.telephony.SmsManager: com.android.internal.telephony.ISms getISmsService()>();

        if r1 == null goto label2;

        z0 = interfaceinvoke r1.<com.android.internal.telephony.ISms: boolean enableCellBroadcast(int)>(i0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return z0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean disableCellBroadcast(int)
    {
        android.telephony.SmsManager r0;
        int i0;
        boolean z0;
        com.android.internal.telephony.ISms r1;
        android.os.RemoteException $r2;

        r0 := @this: android.telephony.SmsManager;

        i0 := @parameter0: int;

        z0 = 0;

     label1:
        r1 = staticinvoke <android.telephony.SmsManager: com.android.internal.telephony.ISms getISmsService()>();

        if r1 == null goto label2;

        z0 = interfaceinvoke r1.<com.android.internal.telephony.ISms: boolean disableCellBroadcast(int)>(i0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return z0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean enableCellBroadcastRange(int, int)
    {
        android.telephony.SmsManager r0;
        int i0, i1;
        boolean z0;
        com.android.internal.telephony.ISms r1;
        java.lang.IllegalArgumentException $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.telephony.SmsManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 = 0;

        if i1 >= i0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("endMessageId < startMessageId");

        throw $r2;

     label1:
        r1 = staticinvoke <android.telephony.SmsManager: com.android.internal.telephony.ISms getISmsService()>();

        if r1 == null goto label2;

        z0 = interfaceinvoke r1.<com.android.internal.telephony.ISms: boolean enableCellBroadcastRange(int,int)>(i0, i1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return z0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean disableCellBroadcastRange(int, int)
    {
        android.telephony.SmsManager r0;
        int i0, i1;
        boolean z0;
        com.android.internal.telephony.ISms r1;
        java.lang.IllegalArgumentException $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.telephony.SmsManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 = 0;

        if i1 >= i0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("endMessageId < startMessageId");

        throw $r2;

     label1:
        r1 = staticinvoke <android.telephony.SmsManager: com.android.internal.telephony.ISms getISmsService()>();

        if r1 == null goto label2;

        z0 = interfaceinvoke r1.<com.android.internal.telephony.ISms: boolean disableCellBroadcastRange(int,int)>(i0, i1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return z0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private static java.util.ArrayList createMessageListFromRawRecords(java.util.List)
    {
        java.util.List r0;
        java.util.ArrayList r1, $r4;
        int i0, i1, $i2;
        com.android.internal.telephony.SmsRawData r2;
        android.telephony.SmsMessage r3;
        java.lang.Object $r5;
        byte[] $r6;

        r0 := @parameter0: java.util.List;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        if r0 == null goto label3;

        i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        r2 = (com.android.internal.telephony.SmsRawData) $r5;

        if r2 == null goto label2;

        $i2 = i1 + 1;

        $r6 = virtualinvoke r2.<com.android.internal.telephony.SmsRawData: byte[] getBytes()>();

        r3 = staticinvoke <android.telephony.SmsMessage: android.telephony.SmsMessage createFromEfRecord(int,byte[])>($i2, $r6);

        if r3 == null goto label2;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r1;
    }

    public boolean isImsSmsSupported()
    {
        android.telephony.SmsManager r0;
        boolean z0;
        com.android.internal.telephony.ISms r1;
        android.os.RemoteException $r2;

        r0 := @this: android.telephony.SmsManager;

        z0 = 0;

     label1:
        r1 = staticinvoke <android.telephony.SmsManager: com.android.internal.telephony.ISms getISmsService()>();

        if r1 == null goto label2;

        z0 = interfaceinvoke r1.<com.android.internal.telephony.ISms: boolean isImsSmsSupported()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return z0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String getImsSmsFormat()
    {
        android.telephony.SmsManager r0;
        java.lang.String r1;
        com.android.internal.telephony.ISms r2;
        android.os.RemoteException $r3;

        r0 := @this: android.telephony.SmsManager;

        r1 = "unknown";

     label1:
        r2 = staticinvoke <android.telephony.SmsManager: com.android.internal.telephony.ISms getISmsService()>();

        if r2 == null goto label2;

        r1 = interfaceinvoke r2.<com.android.internal.telephony.ISms: java.lang.String getImsSmsFormat()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return r1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static long getDefaultSmsSubId()
    {
        android.os.IBinder $r0;
        long $l0;
        android.os.RemoteException $r1;
        java.lang.NullPointerException $r2;
        com.android.internal.telephony.ISms r3;

     label1:
        $r0 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isms");

        r3 = staticinvoke <com.android.internal.telephony.ISms$Stub: com.android.internal.telephony.ISms asInterface(android.os.IBinder)>($r0);

        $l0 = interfaceinvoke r3.<com.android.internal.telephony.ISms: long getPreferredSmsSubscription()>();

     label2:
        return $l0;

     label3:
        $r1 := @caughtexception;

        return -1002L;

     label4:
        $r2 := @caughtexception;

        return -1002L;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public boolean isSMSPromptEnabled()
    {
        android.telephony.SmsManager r0;
        android.os.IBinder $r1;
        boolean $z0;
        android.os.RemoteException $r2;
        java.lang.NullPointerException $r3;
        com.android.internal.telephony.ISms r4;

        r0 := @this: android.telephony.SmsManager;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("isms");

        r4 = staticinvoke <com.android.internal.telephony.ISms$Stub: com.android.internal.telephony.ISms asInterface(android.os.IBinder)>($r1);

        $z0 = interfaceinvoke r4.<com.android.internal.telephony.ISms: boolean isSMSPromptEnabled()>();

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

        return 0;

     label4:
        $r3 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public void sendMultimediaMessage(android.content.Context, android.net.Uri, java.lang.String, android.os.Bundle, android.app.PendingIntent)
    {
        android.telephony.SmsManager r0;
        android.content.Context r1;
        android.net.Uri r2;
        java.lang.String r3, $r8;
        android.os.Bundle r4;
        android.app.PendingIntent r5;
        com.android.internal.telephony.IMms r6;
        android.os.IBinder $r7;
        long $l0;
        java.lang.IllegalArgumentException $r9;
        android.os.RemoteException $r10;

        r0 := @this: android.telephony.SmsManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Bundle;

        r5 := @parameter4: android.app.PendingIntent;

        if r2 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Uri contentUri null");

        throw $r9;

     label1:
        $r7 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("imms");

        r6 = staticinvoke <com.android.internal.telephony.IMms$Stub: com.android.internal.telephony.IMms asInterface(android.os.IBinder)>($r7);

        if r6 != null goto label3;

     label2:
        return;

     label3:
        virtualinvoke r1.<android.content.Context: void grantUriPermission(java.lang.String,android.net.Uri,int)>("com.android.phone", r2, 1);

        specialinvoke r0.<android.telephony.SmsManager: void grantCarrierPackageUriPermission(android.content.Context,android.net.Uri,java.lang.String,int)>(r1, r2, "android.provider.Telephony.MMS_SEND", 1);

        $l0 = virtualinvoke r0.<android.telephony.SmsManager: long getSubId()>();

        $r8 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        interfaceinvoke r6.<com.android.internal.telephony.IMms: void sendMessage(long,java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent)>($l0, $r8, r2, r3, r4, r5);

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private void grantCarrierPackageUriPermission(android.content.Context, android.net.Uri, java.lang.String, int)
    {
        android.telephony.SmsManager r0;
        android.content.Context r1;
        android.net.Uri r2;
        java.lang.String r3, $r10;
        int i0, $i1;
        android.content.Intent r4, $r7;
        android.telephony.TelephonyManager r5;
        java.util.List r6;
        java.lang.Object $r8, $r9;

        r0 := @this: android.telephony.SmsManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>(r3);

        r4 = $r7;

        $r8 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r5 = (android.telephony.TelephonyManager) $r8;

        r6 = virtualinvoke r5.<android.telephony.TelephonyManager: java.util.List getCarrierPackageNamesForIntent(android.content.Intent)>(r4);

        if r6 == null goto label1;

        $i1 = interfaceinvoke r6.<java.util.List: int size()>();

        if $i1 != 1 goto label1;

        $r9 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0);

        $r10 = (java.lang.String) $r9;

        virtualinvoke r1.<android.content.Context: void grantUriPermission(java.lang.String,android.net.Uri,int)>($r10, r2, i0);

     label1:
        return;
    }

    public void downloadMultimediaMessage(android.content.Context, java.lang.String, android.net.Uri, android.os.Bundle, android.app.PendingIntent)
    {
        android.telephony.SmsManager r0;
        android.content.Context r1;
        java.lang.String r2, $r8;
        android.net.Uri r3;
        android.os.Bundle r4;
        android.app.PendingIntent r5;
        com.android.internal.telephony.IMms r6;
        boolean $z0;
        android.os.IBinder $r7;
        long $l0;
        java.lang.IllegalArgumentException $r9, $r10;
        android.os.RemoteException $r11;

        r0 := @this: android.telephony.SmsManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.net.Uri;

        r4 := @parameter3: android.os.Bundle;

        r5 := @parameter4: android.app.PendingIntent;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Empty MMS location URL");

        throw $r10;

     label1:
        if r3 != null goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Uri contentUri null");

        throw $r9;

     label2:
        $r7 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("imms");

        r6 = staticinvoke <com.android.internal.telephony.IMms$Stub: com.android.internal.telephony.IMms asInterface(android.os.IBinder)>($r7);

        if r6 != null goto label4;

     label3:
        return;

     label4:
        virtualinvoke r1.<android.content.Context: void grantUriPermission(java.lang.String,android.net.Uri,int)>("com.android.phone", r3, 2);

        specialinvoke r0.<android.telephony.SmsManager: void grantCarrierPackageUriPermission(android.content.Context,android.net.Uri,java.lang.String,int)>(r1, r3, "android.provider.Telephony.MMS_DOWNLOAD", 2);

        $l0 = virtualinvoke r0.<android.telephony.SmsManager: long getSubId()>();

        $r8 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        interfaceinvoke r6.<com.android.internal.telephony.IMms: void downloadMessage(long,java.lang.String,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)>($l0, $r8, r2, r3, r4, r5);

     label5:
        goto label7;

     label6:
        $r11 := @caughtexception;

     label7:
        return;

        catch android.os.RemoteException from label2 to label3 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public void updateMmsSendStatus(android.content.Context, int, byte[], int, android.net.Uri)
    {
        android.telephony.SmsManager r0;
        android.content.Context r1;
        int i0, i1;
        byte[] r2;
        android.net.Uri r3;
        com.android.internal.telephony.IMms r4;
        android.os.IBinder $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.telephony.SmsManager;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: byte[];

        i1 := @parameter3: int;

        r3 := @parameter4: android.net.Uri;

     label1:
        $r5 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("imms");

        r4 = staticinvoke <com.android.internal.telephony.IMms$Stub: com.android.internal.telephony.IMms asInterface(android.os.IBinder)>($r5);

        if r4 != null goto label3;

     label2:
        return;

     label3:
        interfaceinvoke r4.<com.android.internal.telephony.IMms: void updateMmsSendStatus(int,byte[],int)>(i0, r2, i1);

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;

     label6:
        if r3 == null goto label7;

        virtualinvoke r1.<android.content.Context: void revokeUriPermission(android.net.Uri,int)>(r3, 1);

     label7:
        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void updateMmsDownloadStatus(android.content.Context, int, int, android.net.Uri)
    {
        android.telephony.SmsManager r0;
        android.content.Context r1;
        int i0, i1;
        android.net.Uri r2;
        com.android.internal.telephony.IMms r3;
        android.os.IBinder $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.telephony.SmsManager;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.net.Uri;

     label1:
        $r4 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("imms");

        r3 = staticinvoke <com.android.internal.telephony.IMms$Stub: com.android.internal.telephony.IMms asInterface(android.os.IBinder)>($r4);

        if r3 != null goto label3;

     label2:
        return;

     label3:
        interfaceinvoke r3.<com.android.internal.telephony.IMms: void updateMmsDownloadStatus(int,int)>(i0, i1);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

     label6:
        if r2 == null goto label7;

        virtualinvoke r1.<android.content.Context: void revokeUriPermission(android.net.Uri,int)>(r2, 2);

     label7:
        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public android.net.Uri importTextMessage(java.lang.String, int, java.lang.String, long, boolean, boolean)
    {
        android.telephony.SmsManager r0;
        java.lang.String r1, r2, $r5;
        int i0;
        long l1;
        boolean z0, z1;
        com.android.internal.telephony.IMms r3;
        android.os.IBinder $r4;
        android.net.Uri $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.telephony.SmsManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        l1 := @parameter3: long;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

     label1:
        $r4 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("imms");

        r3 = staticinvoke <com.android.internal.telephony.IMms$Stub: com.android.internal.telephony.IMms asInterface(android.os.IBinder)>($r4);

        if r3 == null goto label3;

        $r5 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        $r6 = interfaceinvoke r3.<com.android.internal.telephony.IMms: android.net.Uri importTextMessage(java.lang.String,java.lang.String,int,java.lang.String,long,boolean,boolean)>($r5, r1, i0, r2, l1, z0, z1);

     label2:
        return $r6;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public android.net.Uri importMultimediaMessage(android.net.Uri, java.lang.String, long, boolean, boolean)
    {
        android.telephony.SmsManager r0;
        android.net.Uri r1, $r6;
        java.lang.String r2, $r5;
        long l0;
        boolean z0, z1;
        com.android.internal.telephony.IMms r3;
        android.os.IBinder $r4;
        java.lang.IllegalArgumentException $r7;
        android.os.RemoteException $r8;

        r0 := @this: android.telephony.SmsManager;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Uri contentUri null");

        throw $r7;

     label1:
        $r4 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("imms");

        r3 = staticinvoke <com.android.internal.telephony.IMms$Stub: com.android.internal.telephony.IMms asInterface(android.os.IBinder)>($r4);

        if r3 == null goto label3;

        $r5 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        $r6 = interfaceinvoke r3.<com.android.internal.telephony.IMms: android.net.Uri importMultimediaMessage(java.lang.String,android.net.Uri,java.lang.String,long,boolean,boolean)>($r5, r1, r2, l0, z0, z1);

     label2:
        return $r6;

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean deleteStoredMessage(android.net.Uri)
    {
        android.telephony.SmsManager r0;
        android.net.Uri r1;
        com.android.internal.telephony.IMms r2;
        android.os.IBinder $r3;
        java.lang.String $r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.telephony.SmsManager;

        r1 := @parameter0: android.net.Uri;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Empty message URI");

        throw $r5;

     label1:
        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("imms");

        r2 = staticinvoke <com.android.internal.telephony.IMms$Stub: com.android.internal.telephony.IMms asInterface(android.os.IBinder)>($r3);

        if r2 == null goto label3;

        $r4 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        $z0 = interfaceinvoke r2.<com.android.internal.telephony.IMms: boolean deleteStoredMessage(java.lang.String,android.net.Uri)>($r4, r1);

     label2:
        return $z0;

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean deleteStoredConversation(long)
    {
        android.telephony.SmsManager r0;
        long l0;
        com.android.internal.telephony.IMms r1;
        android.os.IBinder $r2;
        java.lang.String $r3;
        boolean $z0;
        android.os.RemoteException $r4;

        r0 := @this: android.telephony.SmsManager;

        l0 := @parameter0: long;

     label1:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("imms");

        r1 = staticinvoke <com.android.internal.telephony.IMms$Stub: com.android.internal.telephony.IMms asInterface(android.os.IBinder)>($r2);

        if r1 == null goto label3;

        $r3 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        $z0 = interfaceinvoke r1.<com.android.internal.telephony.IMms: boolean deleteStoredConversation(java.lang.String,long)>($r3, l0);

     label2:
        return $z0;

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean updateStoredMessageStatus(android.net.Uri, android.content.ContentValues)
    {
        android.telephony.SmsManager r0;
        android.net.Uri r1;
        android.content.ContentValues r2;
        com.android.internal.telephony.IMms r3;
        android.os.IBinder $r4;
        java.lang.String $r5;
        boolean $z0;
        java.lang.IllegalArgumentException $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.telephony.SmsManager;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Empty message URI");

        throw $r6;

     label1:
        $r4 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("imms");

        r3 = staticinvoke <com.android.internal.telephony.IMms$Stub: com.android.internal.telephony.IMms asInterface(android.os.IBinder)>($r4);

        if r3 == null goto label3;

        $r5 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        $z0 = interfaceinvoke r3.<com.android.internal.telephony.IMms: boolean updateStoredMessageStatus(java.lang.String,android.net.Uri,android.content.ContentValues)>($r5, r1, r2);

     label2:
        return $z0;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public boolean archiveStoredConversation(long, boolean)
    {
        android.telephony.SmsManager r0;
        long l0;
        boolean z0, $z1;
        com.android.internal.telephony.IMms r1;
        android.os.IBinder $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telephony.SmsManager;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

     label1:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("imms");

        r1 = staticinvoke <com.android.internal.telephony.IMms$Stub: com.android.internal.telephony.IMms asInterface(android.os.IBinder)>($r2);

        if r1 == null goto label3;

        $r3 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        $z1 = interfaceinvoke r1.<com.android.internal.telephony.IMms: boolean archiveStoredConversation(java.lang.String,long,boolean)>($r3, l0, z0);

     label2:
        return $z1;

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public android.net.Uri addTextMessageDraft(java.lang.String, java.lang.String)
    {
        android.telephony.SmsManager r0;
        java.lang.String r1, r2, $r5;
        com.android.internal.telephony.IMms r3;
        android.os.IBinder $r4;
        android.net.Uri $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.telephony.SmsManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        $r4 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("imms");

        r3 = staticinvoke <com.android.internal.telephony.IMms$Stub: com.android.internal.telephony.IMms asInterface(android.os.IBinder)>($r4);

        if r3 == null goto label3;

        $r5 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        $r6 = interfaceinvoke r3.<com.android.internal.telephony.IMms: android.net.Uri addTextMessageDraft(java.lang.String,java.lang.String,java.lang.String)>($r5, r1, r2);

     label2:
        return $r6;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public android.net.Uri addMultimediaMessageDraft(android.net.Uri)
    {
        android.telephony.SmsManager r0;
        android.net.Uri r1, $r5;
        com.android.internal.telephony.IMms r2;
        android.os.IBinder $r3;
        java.lang.String $r4;
        java.lang.IllegalArgumentException $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.telephony.SmsManager;

        r1 := @parameter0: android.net.Uri;

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Uri contentUri null");

        throw $r6;

     label1:
        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("imms");

        r2 = staticinvoke <com.android.internal.telephony.IMms$Stub: com.android.internal.telephony.IMms asInterface(android.os.IBinder)>($r3);

        if r2 == null goto label3;

        $r4 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        $r5 = interfaceinvoke r2.<com.android.internal.telephony.IMms: android.net.Uri addMultimediaMessageDraft(java.lang.String,android.net.Uri)>($r4, r1);

     label2:
        return $r5;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public void sendStoredTextMessage(android.net.Uri, java.lang.String, android.app.PendingIntent, android.app.PendingIntent)
    {
        android.telephony.SmsManager r0;
        android.net.Uri r1;
        java.lang.String r2, $r6;
        android.app.PendingIntent r3, r4;
        com.android.internal.telephony.ISms r5;
        long $l0;
        java.lang.IllegalArgumentException $r7;
        android.os.RemoteException $r8;

        r0 := @this: android.telephony.SmsManager;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.app.PendingIntent;

        r4 := @parameter3: android.app.PendingIntent;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Empty message URI");

        throw $r7;

     label1:
        r5 = staticinvoke <android.telephony.SmsManager: com.android.internal.telephony.ISms getISmsServiceOrThrow()>();

        $l0 = virtualinvoke r0.<android.telephony.SmsManager: long getSubId()>();

        $r6 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        interfaceinvoke r5.<com.android.internal.telephony.ISms: void sendStoredText(long,java.lang.String,android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>($l0, $r6, r1, r2, r3, r4);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void sendStoredMultipartTextMessage(android.net.Uri, java.lang.String, java.util.ArrayList, java.util.ArrayList)
    {
        android.telephony.SmsManager r0;
        android.net.Uri r1;
        java.lang.String r2, $r6;
        java.util.ArrayList r3, r4;
        com.android.internal.telephony.ISms r5;
        long $l0;
        java.lang.IllegalArgumentException $r7;
        android.os.RemoteException $r8;

        r0 := @this: android.telephony.SmsManager;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.ArrayList;

        r4 := @parameter3: java.util.ArrayList;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Empty message URI");

        throw $r7;

     label1:
        r5 = staticinvoke <android.telephony.SmsManager: com.android.internal.telephony.ISms getISmsServiceOrThrow()>();

        $l0 = virtualinvoke r0.<android.telephony.SmsManager: long getSubId()>();

        $r6 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        interfaceinvoke r5.<com.android.internal.telephony.ISms: void sendStoredMultipartText(long,java.lang.String,android.net.Uri,java.lang.String,java.util.List,java.util.List)>($l0, $r6, r1, r2, r3, r4);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void sendStoredMultimediaMessage(android.net.Uri, android.os.Bundle, android.app.PendingIntent)
    {
        android.telephony.SmsManager r0;
        android.net.Uri r1;
        android.os.Bundle r2;
        android.app.PendingIntent r3;
        com.android.internal.telephony.IMms r4;
        android.os.IBinder $r5;
        long $l0;
        java.lang.String $r6;
        java.lang.IllegalArgumentException $r7;
        android.os.RemoteException $r8;

        r0 := @this: android.telephony.SmsManager;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: android.app.PendingIntent;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Empty message URI");

        throw $r7;

     label1:
        $r5 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("imms");

        r4 = staticinvoke <com.android.internal.telephony.IMms$Stub: com.android.internal.telephony.IMms asInterface(android.os.IBinder)>($r5);

        if r4 == null goto label2;

        $l0 = virtualinvoke r0.<android.telephony.SmsManager: long getSubId()>();

        $r6 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        interfaceinvoke r4.<com.android.internal.telephony.IMms: void sendStoredMessage(long,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)>($l0, $r6, r1, r2, r3);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setAutoPersisting(boolean)
    {
        android.telephony.SmsManager r0;
        boolean z0;
        com.android.internal.telephony.IMms r1;
        android.os.IBinder $r2;
        java.lang.String $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telephony.SmsManager;

        z0 := @parameter0: boolean;

     label1:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("imms");

        r1 = staticinvoke <com.android.internal.telephony.IMms$Stub: com.android.internal.telephony.IMms asInterface(android.os.IBinder)>($r2);

        if r1 == null goto label2;

        $r3 = staticinvoke <android.app.ActivityThread: java.lang.String currentPackageName()>();

        interfaceinvoke r1.<com.android.internal.telephony.IMms: void setAutoPersisting(java.lang.String,boolean)>($r3, z0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean getAutoPersisting()
    {
        android.telephony.SmsManager r0;
        com.android.internal.telephony.IMms r1;
        android.os.IBinder $r2;
        boolean $z0;
        android.os.RemoteException $r3;

        r0 := @this: android.telephony.SmsManager;

     label1:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("imms");

        r1 = staticinvoke <com.android.internal.telephony.IMms$Stub: com.android.internal.telephony.IMms asInterface(android.os.IBinder)>($r2);

        if r1 == null goto label3;

        $z0 = interfaceinvoke r1.<com.android.internal.telephony.IMms: boolean getAutoPersisting()>();

     label2:
        return $z0;

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

     label5:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    public android.os.Bundle getCarrierConfigValues()
    {
        android.telephony.SmsManager r0;
        com.android.internal.telephony.IMms r1;
        android.os.IBinder $r2;
        long $l0;
        android.os.Bundle $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.telephony.SmsManager;

     label1:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("imms");

        r1 = staticinvoke <com.android.internal.telephony.IMms$Stub: com.android.internal.telephony.IMms asInterface(android.os.IBinder)>($r2);

        if r1 == null goto label3;

        $l0 = virtualinvoke r0.<android.telephony.SmsManager: long getSubId()>();

        $r3 = interfaceinvoke r1.<com.android.internal.telephony.IMms: android.os.Bundle getCarrierConfigValues(long)>($l0);

     label2:
        return $r3;

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

     label5:
        return null;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    static void <clinit>()
    {
        android.telephony.SmsManager $r0;
        java.lang.Object $r1;
        android.util.ArrayMap $r2;

        <android.telephony.SmsManager: java.lang.String MESSAGE_STATUS_READ> = "read";

        <android.telephony.SmsManager: java.lang.String MESSAGE_STATUS_SEEN> = "seen";

        <android.telephony.SmsManager: int SMS_TYPE_OUTGOING> = 1;

        <android.telephony.SmsManager: int SMS_TYPE_INCOMING> = 0;

        <android.telephony.SmsManager: java.lang.String EXTRA_MMS_DATA> = "android.telephony.extra.MMS_DATA";

        <android.telephony.SmsManager: int MMS_ERROR_CONFIGURATION_ERROR> = 7;

        <android.telephony.SmsManager: int MMS_ERROR_RETRY> = 6;

        <android.telephony.SmsManager: int MMS_ERROR_IO_ERROR> = 5;

        <android.telephony.SmsManager: int MMS_ERROR_HTTP_FAILURE> = 4;

        <android.telephony.SmsManager: int MMS_ERROR_UNABLE_CONNECT_MMS> = 3;

        <android.telephony.SmsManager: int MMS_ERROR_INVALID_APN> = 2;

        <android.telephony.SmsManager: int MMS_ERROR_UNSPECIFIED> = 1;

        <android.telephony.SmsManager: java.lang.String PHONE_PACKAGE_NAME> = "com.android.phone";

        <android.telephony.SmsManager: int RESULT_ERROR_FDN_CHECK_FAILURE> = 6;

        <android.telephony.SmsManager: int RESULT_ERROR_LIMIT_EXCEEDED> = 5;

        <android.telephony.SmsManager: int RESULT_ERROR_NO_SERVICE> = 4;

        <android.telephony.SmsManager: int RESULT_ERROR_NULL_PDU> = 3;

        <android.telephony.SmsManager: int RESULT_ERROR_RADIO_OFF> = 2;

        <android.telephony.SmsManager: int RESULT_ERROR_GENERIC_FAILURE> = 1;

        <android.telephony.SmsManager: int STATUS_ON_ICC_UNSENT> = 7;

        <android.telephony.SmsManager: int STATUS_ON_ICC_SENT> = 5;

        <android.telephony.SmsManager: int STATUS_ON_ICC_UNREAD> = 3;

        <android.telephony.SmsManager: int STATUS_ON_ICC_READ> = 1;

        <android.telephony.SmsManager: int STATUS_ON_ICC_FREE> = 0;

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_NAI_SUFFIX> = "naiSuffix";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_EMAIL_GATEWAY_NUMBER> = "emailGatewayNumber";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_HTTP_PARAMS> = "httpParams";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_UA_PROF_URL> = "uaProfUrl";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_USER_AGENT> = "userAgent";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_UA_PROF_TAG_NAME> = "uaProfTagName";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_HTTP_SOCKET_TIMEOUT> = "httpSocketTimeout";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_SUBJECT_MAX_LENGTH> = "maxSubjectLength";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_MESSAGE_TEXT_MAX_SIZE> = "maxMessageTextSize";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_SMS_TO_MMS_TEXT_LENGTH_THRESHOLD> = "smsToMmsTextLengthThreshold";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_SMS_TO_MMS_TEXT_THRESHOLD> = "smsToMmsTextThreshold";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_ALIAS_MAX_CHARS> = "aliasMaxChars";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_ALIAS_MIN_CHARS> = "aliasMinChars";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_RECIPIENT_LIMIT> = "recipientLimit";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_MAX_IMAGE_HEIGHT> = "maxImageHeight";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_MAX_IMAGE_WIDTH> = "maxImageWidth";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_MAX_MESSAGE_SIZE> = "maxMessageSize";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_MMS_DELIVERY_REPORT_ENABLED> = "enableMMSDeliveryReports";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_MMS_READ_REPORT_ENABLED> = "enableMMSReadReports";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_SEND_MULTIPART_SMS_AS_SEPARATE_MESSAGES> = "sendMultipartSmsAsSeparateMessages";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_SUPPORT_MMS_CONTENT_DISPOSITION> = "supportMmsContentDisposition";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_SMS_DELIVERY_REPORT_ENABLED> = "enableSMSDeliveryReports";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_MULTIPART_SMS_ENABLED> = "enableMultipartSMS";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_ALLOW_ATTACH_AUDIO> = "allowAttachAudio";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_ALIAS_ENABLED> = "aliasEnabled";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_NOTIFY_WAP_MMSC_ENABLED> = "enabledNotifyWapMMSC";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_GROUP_MMS_ENABLED> = "enableGroupMms";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_MMS_ENABLED> = "enabledMMS";

        <android.telephony.SmsManager: java.lang.String MMS_CONFIG_APPEND_TRANSACTION_ID> = "enabledTransID";

        <android.telephony.SmsManager: int DEFAULT_SUB_ID> = -1002;

        $r0 = new android.telephony.SmsManager;

        specialinvoke $r0.<android.telephony.SmsManager: void <init>(long)>(-1002L);

        <android.telephony.SmsManager: android.telephony.SmsManager sInstance> = $r0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <android.telephony.SmsManager: java.lang.Object sLockObject> = $r1;

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        <android.telephony.SmsManager: java.util.Map sSubInstances> = $r2;

        return;
    }
}
