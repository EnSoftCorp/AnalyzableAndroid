public class com.android.internal.telephony.IccUtils extends java.lang.Object
{
    static final java.lang.String LOG_TAG;

    public void <init>()
    {
        com.android.internal.telephony.IccUtils r0;

        r0 := @this: com.android.internal.telephony.IccUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String bcdToString(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, i2, $i4, $i5, $i7, $i10;
        java.lang.StringBuilder r1, $r2;
        byte b3, $b6, $b9, $b11, b13;
        java.lang.String $r3;
        char $c8, $c12;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.StringBuilder;

        $i4 = i1 * 2;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i4);

        r1 = $r2;

        i2 = i0;

     label1:
        $i5 = i0 + i1;

        if i2 >= $i5 goto label6;

        $b6 = r0[i2];

        b3 = $b6 & 15;

        if b3 <= 9 goto label2;

        goto label6;

     label2:
        $i7 = 48 + b3;

        $c8 = (char) $i7;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c8);

        $b9 = r0[i2];

        $b11 = $b9 >> 4;

        b13 = $b11 & 15;

        if b13 != 15 goto label3;

        goto label5;

     label3:
        if b13 <= 9 goto label4;

        goto label6;

     label4:
        $i10 = 48 + b13;

        $c12 = (char) $i10;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c12);

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.String cdmaBcdToString(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, i2, i3, $i6, $i10, i12;
        java.lang.StringBuilder r1, $r2;
        byte b4, $b5, $b8, $b9, b13;
        java.lang.String $r3;
        char $c7, $c11;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(i1);

        r1 = $r2;

        i2 = 0;

        i3 = i0;

     label1:
        if i2 >= i1 goto label5;

        $b5 = r0[i3];

        b4 = $b5 & 15;

        if b4 <= 9 goto label2;

        b4 = 0;

     label2:
        $i6 = 48 + b4;

        $c7 = (char) $i6;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7);

        i12 = i2 + 1;

        if i12 != i1 goto label3;

        goto label5;

     label3:
        $b8 = r0[i3];

        $b9 = $b8 >> 4;

        b13 = $b9 & 15;

        if b13 <= 9 goto label4;

        b13 = 0;

     label4:
        $i10 = 48 + b13;

        $c11 = (char) $i10;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c11);

        i2 = i12 + 1;

        i3 = i3 + 1;

        goto label1;

     label5:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static int gsmBcdByteToInt(byte)
    {
        byte b0, $b3, $b4, $b6;
        int i1, $i5;
        short $s2;

        b0 := @parameter0: byte;

        i1 = 0;

        $s2 = b0 & 240;

        if $s2 > 144 goto label1;

        $b6 = b0 >> 4;

        i1 = $b6 & 15;

     label1:
        $b3 = b0 & 15;

        if $b3 > 9 goto label2;

        $b4 = b0 & 15;

        $i5 = $b4 * 10;

        i1 = i1 + $i5;

     label2:
        return i1;
    }

    public static int cdmaBcdByteToInt(byte)
    {
        byte b0, $b3, $b4, $b5, $b6;
        int i1;
        short $s2;

        b0 := @parameter0: byte;

        i1 = 0;

        $s2 = b0 & 240;

        if $s2 > 144 goto label1;

        $b5 = b0 >> 4;

        $b6 = $b5 & 15;

        i1 = $b6 * 10;

     label1:
        $b3 = b0 & 15;

        if $b3 > 9 goto label2;

        $b4 = b0 & 15;

        i1 = i1 + $b4;

     label2:
        return i1;
    }

    public static java.lang.String adnStringFieldToString(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, i2, i3, $i6, $i10, $i13, $i14, $i15, $i19, $i20, $i22, $i24, $i28, $i29, $i30, $i31, $i33, $i34, $i37, i38, i40;
        java.lang.String r1, $r5, $r6, $r8, $r10, $r12, $r13, r17;
        java.io.UnsupportedEncodingException r2, $r14;
        java.lang.StringBuilder r3, $r7;
        byte $b4, $b5, $b7, $b8, $b11, $b12, $b17, $b21, $b23, $b25, $b26, $b32;
        char $c9, $c36, c39;
        short $s16, $s18, $s27;
        android.content.res.Resources$NotFoundException $r15;
        boolean z0;
        android.content.res.Resources r16;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i1 != 0 goto label01;

        return "";

     label01:
        if i1 < 1 goto label08;

        $b32 = r0[i0];

        if $b32 != -128 goto label08;

        $i30 = i1 - 1;

        i2 = $i30 / 2;

        r1 = null;

     label02:
        $r12 = new java.lang.String;

        $i33 = i0 + 1;

        $i34 = i2 * 2;

        specialinvoke $r12.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r0, $i33, $i34, "utf-16be");

        r1 = $r12;

     label03:
        goto label05;

     label04:
        $r14 := @caughtexception;

        r2 = $r14;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IccUtils", "implausible UnsupportedEncodingException", r2);

     label05:
        if r1 == null goto label08;

        i38 = virtualinvoke r1.<java.lang.String: int length()>();

     label06:
        if i38 <= 0 goto label07;

        $i37 = i38 - 1;

        $c36 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i37);

        if $c36 != 65535 goto label07;

        i38 = i38 + -1;

        goto label06;

     label07:
        $r13 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i38);

        return $r13;

     label08:
        z0 = 0;

        c39 = 0;

        i40 = 0;

        if i1 < 3 goto label10;

        $b25 = r0[i0];

        if $b25 != -127 goto label10;

        $i22 = i0 + 1;

        $b23 = r0[$i22];

        i40 = $b23 & 255;

        $i28 = i1 - 3;

        if i40 <= $i28 goto label09;

        i40 = i1 - 3;

     label09:
        $i29 = i0 + 2;

        $b26 = r0[$i29];

        $s27 = $b26 & 255;

        $i31 = $s27 << 7;

        c39 = (char) $i31;

        i0 = i0 + 3;

        z0 = 1;

        goto label12;

     label10:
        if i1 < 4 goto label12;

        $b11 = r0[i0];

        if $b11 != -126 goto label12;

        $i13 = i0 + 1;

        $b12 = r0[$i13];

        i40 = $b12 & 255;

        $i15 = i1 - 4;

        if i40 <= $i15 goto label11;

        i40 = i1 - 4;

     label11:
        $i14 = i0 + 2;

        $b17 = r0[$i14];

        $s16 = $b17 & 255;

        $i19 = $s16 << 8;

        $i20 = i0 + 3;

        $b21 = r0[$i20];

        $s18 = $b21 & 255;

        $i24 = $i19 | $s18;

        c39 = (char) $i24;

        i0 = i0 + 4;

        z0 = 1;

     label12:
        if z0 == 0 goto label18;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        r3 = $r7;

     label13:
        if i40 <= 0 goto label17;

        $b4 = r0[i0];

        if $b4 >= 0 goto label14;

        $b8 = r0[i0];

        $b7 = $b8 & 127;

        $i10 = c39 + $b7;

        $c9 = (char) $i10;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c9);

        i0 = i0 + 1;

        i40 = i40 + -1;

     label14:
        i3 = 0;

     label15:
        if i3 >= i40 goto label16;

        $i6 = i0 + i3;

        $b5 = r0[$i6];

        if $b5 < 0 goto label16;

        i3 = i3 + 1;

        goto label15;

     label16:
        $r10 = staticinvoke <com.android.internal.telephony.GsmAlphabet: java.lang.String gsm8BitUnpackedToString(byte[],int,int)>(r0, i0, i3);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        i0 = i0 + i3;

        i40 = i40 - i3;

        goto label13;

     label17:
        $r8 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;

     label18:
        r16 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        r17 = "";

     label19:
        r17 = virtualinvoke r16.<android.content.res.Resources: java.lang.String getString(int)>(17039404);

     label20:
        goto label22;

     label21:
        $r15 := @caughtexception;

     label22:
        $r5 = virtualinvoke r17.<java.lang.String: java.lang.String trim()>();

        $r6 = staticinvoke <com.android.internal.telephony.GsmAlphabet: java.lang.String gsm8BitUnpackedToString(byte[],int,int,java.lang.String)>(r0, i0, i1, $r5);

        return $r6;

        catch java.io.UnsupportedEncodingException from label02 to label03 with label04;
        catch android.content.res.Resources$NotFoundException from label19 to label20 with label21;
    }

    static int hexCharToInt(char)
    {
        char c0;
        java.lang.RuntimeException $r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        java.lang.String $r5;
        int $i1, $i2, $i3, $i4, $i5;

        c0 := @parameter0: char;

        if c0 < 48 goto label1;

        if c0 > 57 goto label1;

        $i5 = c0 - 48;

        return $i5;

     label1:
        if c0 < 65 goto label2;

        if c0 > 70 goto label2;

        $i3 = c0 - 65;

        $i4 = $i3 + 10;

        return $i4;

     label2:
        if c0 < 97 goto label3;

        if c0 > 102 goto label3;

        $i1 = c0 - 97;

        $i2 = $i1 + 10;

        return $i2;

     label3:
        $r0 = new java.lang.RuntimeException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid hex char \'");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r5);

        throw $r0;
    }

    public static byte[] hexStringToBytes(java.lang.String)
    {
        java.lang.String r0;
        byte[] r1;
        int i0, i1, $i2, $i3, $i5, $i6, $i7, $i9, $i10;
        char $c4, $c8;
        byte $b11;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = i0 / 2;

        r1 = newarray (byte)[$i2];

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $i3 = i1 / 2;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        $i5 = staticinvoke <com.android.internal.telephony.IccUtils: int hexCharToInt(char)>($c4);

        $i7 = $i5 << 4;

        $i6 = i1 + 1;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);

        $i9 = staticinvoke <com.android.internal.telephony.IccUtils: int hexCharToInt(char)>($c8);

        $i10 = $i7 | $i9;

        $b11 = (byte) $i10;

        r1[$i3] = $b11;

        i1 = i1 + 2;

        goto label2;

     label3:
        return r1;
    }

    public static java.lang.String bytesToHexString(byte[])
    {
        byte[] r0;
        java.lang.StringBuilder r1, $r2;
        int i0, $i2, $i3, $i4;
        byte b1, $b5, $b6, $b8, b10;
        java.lang.String $r3, $r4, $r6;
        char $c7, $c9;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.StringBuilder;

        $i2 = lengthof r0;

        $i3 = 2 * $i2;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i3);

        r1 = $r2;

        i0 = 0;

     label2:
        $i4 = lengthof r0;

        if i0 >= $i4 goto label3;

        $b5 = r0[i0];

        $b6 = $b5 >> 4;

        b1 = 15 & $b6;

        $r4 = "0123456789abcdef";

        $c7 = virtualinvoke $r4.<java.lang.String: char charAt(int)>(b1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7);

        $b8 = r0[i0];

        b10 = 15 & $b8;

        $r6 = "0123456789abcdef";

        $c9 = virtualinvoke $r6.<java.lang.String: char charAt(int)>(b10);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c9);

        i0 = i0 + 1;

        goto label2;

     label3:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.String networkNameToString(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, i2, $i9, $i10, $i14, $i15, $i16, $i17;
        java.lang.String r1, $r3;
        byte b3, $b4, $b6, $b7, $b8, $b11, $b12, $b13;
        java.io.UnsupportedEncodingException r2, $r4;
        short $s5;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $b4 = r0[i0];

        $s5 = $b4 & 128;

        if $s5 != 128 goto label1;

        if i1 >= 1 goto label2;

     label1:
        return "";

     label2:
        $b6 = r0[i0];

        $b7 = $b6 >>> 4;

        $b8 = $b7 & 7;

        lookupswitch($b8)
        {
            case 0: goto label3;
            case 1: goto label4;
            default: goto label7;
        };

     label3:
        $b12 = r0[i0];

        b3 = $b12 & 7;

        $i15 = i1 - 1;

        $i14 = $i15 * 8;

        $i17 = $i14 - b3;

        i2 = $i17 / 7;

        $i16 = i0 + 1;

        r1 = staticinvoke <com.android.internal.telephony.GsmAlphabet: java.lang.String gsm7BitPackedToString(byte[],int,int)>(r0, $i16, i2);

        goto label8;

     label4:
        $r3 = new java.lang.String;

        $i10 = i0 + 1;

        $i9 = i1 - 1;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r0, $i10, $i9, "utf-16");

        r1 = $r3;

     label5:
        goto label8;

     label6:
        $r4 := @caughtexception;

        r2 = $r4;

        r1 = "";

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("IccUtils", "implausible UnsupportedEncodingException", r2);

        goto label8;

     label7:
        r1 = "";

     label8:
        $b11 = r0[i0];

        $b13 = $b11 & 64;

        if $b13 == 0 goto label9;

     label9:
        return r1;

        catch java.io.UnsupportedEncodingException from label4 to label5 with label6;
    }

    public static android.graphics.Bitmap parseToBnW(byte[], int)
    {
        byte[] r0;
        int i0, i4, i5, i6, $i10, $i12, $i13, $i16, $i17, i18, i19;
        byte b1, b7, $b8, $b9, $b14, $b15;
        short s2, s3;
        int[] r1;
        android.graphics.Bitmap$Config $r2;
        android.graphics.Bitmap $r3;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        b1 = 0;

        i18 = b1 + 1;

        $b8 = r0[b1];

        s2 = $b8 & 255;

        i19 = i18 + 1;

        $b9 = r0[i18];

        s3 = $b9 & 255;

        i4 = s2 * s3;

        r1 = newarray (int)[i4];

        i5 = 0;

        i6 = 7;

        b7 = 0;

     label1:
        if i5 >= i4 goto label3;

        $i10 = i5 % 8;

        if $i10 != 0 goto label2;

        $i16 = i19;

        i19 = i19 + 1;

        b7 = r0[$i16];

        i6 = 7;

     label2:
        $i13 = i5;

        i5 = i5 + 1;

        $i12 = i6;

        i6 = i6 + -1;

        $b15 = b7 >> $i12;

        $b14 = $b15 & 1;

        $i17 = staticinvoke <com.android.internal.telephony.IccUtils: int bitToRGB(int)>($b14);

        r1[$i13] = $i17;

        goto label1;

     label3:
        if i5 == i4 goto label4;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("IccUtils", "parse end and size error");

     label4:
        $r2 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)>(r1, s2, s3, $r2);

        return $r3;
    }

    private static int bitToRGB(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 != 1 goto label1;

        return -1;

     label1:
        return -16777216;
    }

    public static android.graphics.Bitmap parseToRGB(byte[], int, boolean)
    {
        byte[] r0;
        int i0, i5, $i13, $i15, $i16, $i17, $i18;
        boolean z0;
        short s1, s2, s3, s4, $s10, $s14;
        int[] r1, r4;
        byte $b6, $b7, $b8, $b9, $b11, $b12;
        android.graphics.Bitmap $r2;
        android.graphics.Bitmap$Config $r3;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $b6 = r0[0];

        s1 = $b6 & 255;

        $b7 = r0[1];

        s2 = $b7 & 255;

        $b8 = r0[2];

        s3 = $b8 & 255;

        $b9 = r0[3];

        s4 = $b9 & 255;

        $b11 = r0[4];

        $s10 = $b11 & 255;

        $i13 = $s10 << 8;

        $b12 = r0[5];

        $s14 = $b12 & 255;

        i5 = $i13 | $s14;

        r1 = staticinvoke <com.android.internal.telephony.IccUtils: int[] getCLUT(byte[],int,int)>(r0, i5, s4);

        if 1 != z0 goto label1;

        $i17 = s4 - 1;

        r1[$i17] = 0;

     label1:
        $i15 = 8 % s3;

        if 0 != $i15 goto label2;

        $i18 = s1 * s2;

        r4 = staticinvoke <com.android.internal.telephony.IccUtils: int[] mapTo2OrderBitColor(byte[],int,int,int[],int)>(r0, 6, $i18, r1, s3);

        goto label3;

     label2:
        $i16 = s1 * s2;

        r4 = staticinvoke <com.android.internal.telephony.IccUtils: int[] mapToNon2OrderBitColor(byte[],int,int,int[],int)>(r0, 6, $i16, r1, s3);

     label3:
        $r3 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        $r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)>(r4, s1, s2, $r3);

        return $r2;
    }

    private static int[] mapTo2OrderBitColor(byte[], int, int, int[], int)
    {
        byte[] r0;
        int i0, i1, i2, i4, i5, i7, i8, $i9, $i10, $i11, $i12, $i14, $i15;
        int[] r1, r2, $r3;
        short s3, $s16;
        byte b6, $b13;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: int[];

        i2 := @parameter4: int;

        $i9 = 8 % i2;

        if 0 == $i9 goto label01;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("IccUtils", "not event number of color");

        $r3 = staticinvoke <com.android.internal.telephony.IccUtils: int[] mapToNon2OrderBitColor(byte[],int,int,int[],int)>(r0, i0, i1, r1, i2);

        return $r3;

     label01:
        s3 = 1;

        tableswitch(i2)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label06;
            case 4: goto label04;
            case 5: goto label06;
            case 6: goto label06;
            case 7: goto label06;
            case 8: goto label05;
            default: goto label06;
        };

     label02:
        s3 = 1;

        goto label06;

     label03:
        s3 = 3;

        goto label06;

     label04:
        s3 = 15;

        goto label06;

     label05:
        s3 = 255;

     label06:
        r2 = newarray (int)[i1];

        i4 = 0;

        i5 = 8 / i2;

     label07:
        if i4 >= i1 goto label10;

        $i10 = i0;

        i0 = i0 + 1;

        b6 = r0[$i10];

        i7 = 0;

     label08:
        if i7 >= i5 goto label09;

        $i11 = i5 - i7;

        i8 = $i11 - 1;

        $i12 = i4;

        i4 = i4 + 1;

        $i14 = i8 * i2;

        $b13 = b6 >> $i14;

        $s16 = $b13 & s3;

        $i15 = r1[$s16];

        r2[$i12] = $i15;

        i7 = i7 + 1;

        goto label08;

     label09:
        goto label07;

     label10:
        return r2;
    }

    private static int[] mapToNon2OrderBitColor(byte[], int, int, int[], int)
    {
        byte[] r0;
        int i0, i1, i2, $i3;
        int[] r1, r2, $r3;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: int[];

        i2 := @parameter4: int;

        $i3 = 8 % i2;

        if 0 != $i3 goto label1;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("IccUtils", "not odd number of color");

        $r3 = staticinvoke <com.android.internal.telephony.IccUtils: int[] mapTo2OrderBitColor(byte[],int,int,int[],int)>(r0, i0, i1, r1, i2);

        return $r3;

     label1:
        r2 = newarray (int)[i1];

        return r2;
    }

    private static int[] getCLUT(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i10, $i12, $i14, $i17, $i18, i19, i20;
        int[] r1;
        byte $b8, $b11, $b16;
        short $s9, $s13, $s15;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if null != r0 goto label1;

        return null;

     label1:
        r1 = newarray (int)[i1];

        $i6 = i1 * 3;

        i2 = i0 + $i6;

        i3 = i0;

        i4 = 0;

        i5 = -16777216;

     label2:
        $i7 = i4;

        i4 = i4 + 1;

        i19 = i3 + 1;

        $b8 = r0[i3];

        $s9 = $b8 & 255;

        $i10 = $s9 << 16;

        $i14 = i5 | $i10;

        i20 = i19 + 1;

        $b11 = r0[i19];

        $s13 = $b11 & 255;

        $i12 = $s13 << 8;

        $i18 = $i14 | $i12;

        i3 = i20 + 1;

        $b16 = r0[i20];

        $s15 = $b16 & 255;

        $i17 = $i18 | $s15;

        r1[$i7] = $i17;

        if i3 < i2 goto label2;

        return r1;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.IccUtils: java.lang.String LOG_TAG> = "IccUtils";

        return;
    }
}
