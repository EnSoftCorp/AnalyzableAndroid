public final class com.android.internal.telephony.cdma.CdmaCallTracker extends com.android.internal.telephony.CallTracker
{
    static final java.lang.String LOG_TAG;
    private static final boolean REPEAT_POLLING;
    private static final boolean DBG_POLL;
    static final int MAX_CONNECTIONS;
    static final int MAX_CONNECTIONS_PER_CALL;
    com.android.internal.telephony.cdma.CdmaConnection[] mConnections;
    android.os.RegistrantList mVoiceCallEndedRegistrants;
    android.os.RegistrantList mVoiceCallStartedRegistrants;
    android.os.RegistrantList mCallWaitingRegistrants;
    java.util.ArrayList mDroppedDuringPoll;
    com.android.internal.telephony.cdma.CdmaCall mRingingCall;
    com.android.internal.telephony.cdma.CdmaCall mForegroundCall;
    com.android.internal.telephony.cdma.CdmaCall mBackgroundCall;
    com.android.internal.telephony.cdma.CdmaConnection mPendingMO;
    boolean mHangupPendingMO;
    boolean mPendingCallInEcm;
    boolean mIsInEmergencyCall;
    com.android.internal.telephony.cdma.CDMAPhone mPhone;
    boolean mDesiredMute;
    int mPendingCallClirMode;
    com.android.internal.telephony.PhoneConstants$State mState;
    private boolean mIsEcmTimerCanceled;
    private int m3WayCallFlashDelay;

    void <init>(com.android.internal.telephony.cdma.CDMAPhone)
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        com.android.internal.telephony.cdma.CDMAPhone r1;
        com.android.internal.telephony.cdma.CdmaConnection[] $r2;
        android.os.RegistrantList $r3, $r4, $r5;
        java.util.ArrayList $r6;
        com.android.internal.telephony.cdma.CdmaCall $r7, $r8, $r9, $r16;
        com.android.internal.telephony.PhoneConstants$State $r10;
        com.android.internal.telephony.CommandsInterface $r11, $r12, $r13, $r14, $r15;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        r1 := @parameter0: com.android.internal.telephony.cdma.CDMAPhone;

        specialinvoke r0.<com.android.internal.telephony.CallTracker: void <init>()>();

        $r2 = newarray (com.android.internal.telephony.cdma.CdmaConnection)[8];

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection[] mConnections> = $r2;

        $r3 = new android.os.RegistrantList;

        specialinvoke $r3.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.RegistrantList mVoiceCallEndedRegistrants> = $r3;

        $r4 = new android.os.RegistrantList;

        specialinvoke $r4.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.RegistrantList mVoiceCallStartedRegistrants> = $r4;

        $r5 = new android.os.RegistrantList;

        specialinvoke $r5.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.RegistrantList mCallWaitingRegistrants> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>(8);

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: java.util.ArrayList mDroppedDuringPoll> = $r6;

        $r7 = new com.android.internal.telephony.cdma.CdmaCall;

        specialinvoke $r7.<com.android.internal.telephony.cdma.CdmaCall: void <init>(com.android.internal.telephony.cdma.CdmaCallTracker)>(r0);

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall> = $r7;

        $r8 = new com.android.internal.telephony.cdma.CdmaCall;

        specialinvoke $r8.<com.android.internal.telephony.cdma.CdmaCall: void <init>(com.android.internal.telephony.cdma.CdmaCallTracker)>(r0);

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall> = $r8;

        $r9 = new com.android.internal.telephony.cdma.CdmaCall;

        specialinvoke $r9.<com.android.internal.telephony.cdma.CdmaCall: void <init>(com.android.internal.telephony.cdma.CdmaCallTracker)>(r0);

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mBackgroundCall> = $r9;

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mPendingCallInEcm> = 0;

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mIsInEmergencyCall> = 0;

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mDesiredMute> = 0;

        $r10 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState> = $r10;

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mIsEcmTimerCanceled> = 0;

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: int m3WayCallFlashDelay> = 0;

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone> = r1;

        $r11 = r1.<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.CommandsInterface mCi>;

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi> = $r11;

        $r12 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r12.<com.android.internal.telephony.CommandsInterface: void registerForCallStateChanged(android.os.Handler,int,java.lang.Object)>(r0, 2, null);

        $r13 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r13.<com.android.internal.telephony.CommandsInterface: void registerForOn(android.os.Handler,int,java.lang.Object)>(r0, 9, null);

        $r14 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r14.<com.android.internal.telephony.CommandsInterface: void registerForNotAvailable(android.os.Handler,int,java.lang.Object)>(r0, 10, null);

        $r15 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r15.<com.android.internal.telephony.CommandsInterface: void registerForCallWaitingInfo(android.os.Handler,int,java.lang.Object)>(r0, 15, null);

        $r16 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        virtualinvoke $r16.<com.android.internal.telephony.cdma.CdmaCall: void setGeneric(boolean)>(0);

        return;
    }

    public void dispose()
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        com.android.internal.telephony.CommandsInterface $r1, $r2, $r3, $r4, $r5;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CdmaCallTracker", "CdmaCallTracker dispose");

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void unregisterForLineControlInfo(android.os.Handler)>(r0);

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void unregisterForCallStateChanged(android.os.Handler)>(r0);

        $r3 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void unregisterForOn(android.os.Handler)>(r0);

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r4.<com.android.internal.telephony.CommandsInterface: void unregisterForNotAvailable(android.os.Handler)>(r0);

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r5.<com.android.internal.telephony.CommandsInterface: void unregisterForCallWaitingInfo(android.os.Handler)>(r0);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void clearDisconnected()>();

        return;
    }

    protected void finalize()
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CdmaCallTracker", "CdmaCallTracker finalized");

        return;
    }

    public void registerForVoiceCallStarted(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;
        com.android.internal.telephony.PhoneConstants$State $r6, $r7;
        android.os.AsyncResult $r8;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.RegistrantList mVoiceCallStartedRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        $r7 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        $r6 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        if $r7 == $r6 goto label1;

        $r8 = new android.os.AsyncResult;

        specialinvoke $r8.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke r3.<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>($r8);

     label1:
        return;
    }

    public void unregisterForVoiceCallStarted(android.os.Handler)
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.RegistrantList mVoiceCallStartedRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForVoiceCallEnded(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.RegistrantList mVoiceCallEndedRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForVoiceCallEnded(android.os.Handler)
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.RegistrantList mVoiceCallEndedRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForCallWaiting(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant r3, $r4;
        android.os.RegistrantList $r5;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = new android.os.Registrant;

        specialinvoke $r4.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.RegistrantList mCallWaitingRegistrants>;

        virtualinvoke $r5.<android.os.RegistrantList: void add(android.os.Registrant)>(r3);

        return;
    }

    public void unregisterForCallWaiting(android.os.Handler)
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.RegistrantList mCallWaitingRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    com.android.internal.telephony.Connection dial(java.lang.String, int) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        java.lang.String r1, r2, r3, r4, r5, $r18, $r19, $r24, $r29, $r33, $r37, $r38, $r39, $r40;
        int i0, $i1, $i2;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        com.android.internal.telephony.cdma.CDMAPhone $r6, $r7, $r9, $r16, $r21, $r31, $r34, $r36;
        android.content.Context $r8, $r15;
        com.android.internal.telephony.cdma.CdmaCall $r10, $r12, $r17;
        com.android.internal.telephony.Call$State $r11, $r14;
        com.android.internal.telephony.cdma.CdmaConnection $r13, $r20, $r22, $r23, $r25, $r26, $r27, $r28;
        android.os.Message $r30;
        com.android.internal.telephony.CommandsInterface $r32;
        com.android.internal.telephony.Connection $r35;
        com.android.internal.telephony.CallStateException $r41;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void clearDisconnected()>();

        $z3 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean canDial()>();

        if $z3 != 0 goto label01;

        $r41 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r41.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("cannot dial in current state");

        throw $r41;

     label01:
        r2 = r1;

        $r6 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        r3 = virtualinvoke $r6.<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("gsm.operator.iso-country", "");

        $r7 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        r4 = virtualinvoke $r7.<com.android.internal.telephony.cdma.CDMAPhone: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>("gsm.sim.operator.iso-country", "");

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z4 != 0 goto label02;

        $z11 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z11 != 0 goto label02;

        $z10 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z10 != 0 goto label02;

        $z14 = 1;

        goto label03;

     label02:
        $z14 = 0;

     label03:
        z0 = $z14;

        if z0 == 0 goto label09;

        $r38 = "us";

        $z7 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z7 == 0 goto label06;

        if z0 == 0 goto label04;

        $r39 = "vi";

        $z13 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z13 != 0 goto label04;

        $z12 = 1;

        goto label05;

     label04:
        $z12 = 0;

     label05:
        z0 = $z12;

        goto label09;

     label06:
        $r37 = "vi";

        $z6 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z6 == 0 goto label09;

        if z0 == 0 goto label07;

        $r40 = "us";

        $z9 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z9 != 0 goto label07;

        $z8 = 1;

        goto label08;

     label07:
        $z8 = 0;

     label08:
        z0 = $z8;

     label09:
        if z0 == 0 goto label10;

        $r34 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        r1 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: java.lang.String convertNumberIfNecessary(com.android.internal.telephony.PhoneBase,java.lang.String)>($r34, r1);

     label10:
        r5 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ril.cdma.inecmmode", "false");

        z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("true");

        $r9 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r8 = virtualinvoke $r9.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        z2 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isLocalEmergencyNumber(android.content.Context,java.lang.String)>($r8, r1);

        if z1 == 0 goto label11;

        if z2 == 0 goto label11;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void handleEcmTimer(int)>(1);

     label11:
        $r10 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        virtualinvoke $r10.<com.android.internal.telephony.cdma.CdmaCall: void setGeneric(boolean)>(0);

        $r12 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        $r11 = virtualinvoke $r12.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r14 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if $r11 != $r14 goto label12;

        $r35 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.Connection dialThreeWay(java.lang.String)>(r1);

        return $r35;

     label12:
        $r13 = new com.android.internal.telephony.cdma.CdmaConnection;

        $r16 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r15 = virtualinvoke $r16.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        $r18 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: java.lang.String checkForTestEmergencyNumber(java.lang.String)>(r1);

        $r17 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        specialinvoke $r13.<com.android.internal.telephony.cdma.CdmaConnection: void <init>(android.content.Context,java.lang.String,com.android.internal.telephony.cdma.CdmaCallTracker,com.android.internal.telephony.cdma.CdmaCall)>($r15, $r18, r0, $r17);

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO> = $r13;

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mHangupPendingMO> = 0;

        $r20 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO>;

        $r19 = virtualinvoke $r20.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String getAddress()>();

        if $r19 == null goto label13;

        $r26 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO>;

        $r24 = virtualinvoke $r26.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String getAddress()>();

        $i1 = virtualinvoke $r24.<java.lang.String: int length()>();

        if $i1 == 0 goto label13;

        $r28 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO>;

        $r29 = virtualinvoke $r28.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String getAddress()>();

        $i2 = virtualinvoke $r29.<java.lang.String: int indexOf(int)>(78);

        if $i2 < 0 goto label14;

     label13:
        $r23 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO>;

        $r23.<com.android.internal.telephony.cdma.CdmaConnection: int mCause> = 7;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void pollCallsWhenSafe()>();

        goto label17;

     label14:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void setMute(boolean)>(0);

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void disableDataCallInEmergencyCall(java.lang.String)>(r1);

        if z1 == 0 goto label15;

        if z1 == 0 goto label16;

        if z2 == 0 goto label16;

     label15:
        $r32 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r27 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO>;

        $r33 = virtualinvoke $r27.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String getAddress()>();

        $r30 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Message obtainCompleteMessage()>();

        interfaceinvoke $r32.<com.android.internal.telephony.CommandsInterface: void dial(java.lang.String,int,android.os.Message)>($r33, i0, $r30);

        goto label17;

     label16:
        $r31 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r31.<com.android.internal.telephony.cdma.CDMAPhone: void exitEmergencyCallbackMode()>();

        $r36 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r36.<com.android.internal.telephony.cdma.CDMAPhone: void setOnEcbModeExitResponse(android.os.Handler,int,java.lang.Object)>(r0, 14, null);

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: int mPendingCallClirMode> = i0;

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mPendingCallInEcm> = 1;

     label17:
        $z5 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mNumberConverted>;

        if $z5 == 0 goto label18;

        $r25 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO>;

        virtualinvoke $r25.<com.android.internal.telephony.cdma.CdmaConnection: void setConverted(java.lang.String)>(r2);

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mNumberConverted> = 0;

     label18:
        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void updatePhoneState()>();

        $r21 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r21.<com.android.internal.telephony.cdma.CDMAPhone: void notifyPreciseCallStateChanged()>();

        $r22 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO>;

        return $r22;
    }

    com.android.internal.telephony.Connection dial(java.lang.String) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        java.lang.String r1;
        com.android.internal.telephony.Connection $r2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,int)>(r1, 0);

        return $r2;
    }

    private com.android.internal.telephony.Connection dialThreeWay(java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        java.lang.String r1, $r6, $r14;
        com.android.internal.telephony.cdma.CdmaCall $r2, $r7;
        boolean $z0;
        com.android.internal.telephony.cdma.CdmaConnection $r3, $r11, $r16;
        com.android.internal.telephony.cdma.CDMAPhone $r4, $r8;
        android.content.Context $r5, $r9;
        android.content.res.Resources $r10;
        int $i0, $i1;
        com.android.internal.telephony.CommandsInterface $r12, $r15;
        android.os.Message $r13, $r17;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.cdma.CdmaCall: boolean isIdle()>();

        if $z0 != 0 goto label3;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void disableDataCallInEmergencyCall(java.lang.String)>(r1);

        $r3 = new com.android.internal.telephony.cdma.CdmaConnection;

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        $r6 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: java.lang.String checkForTestEmergencyNumber(java.lang.String)>(r1);

        $r7 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        specialinvoke $r3.<com.android.internal.telephony.cdma.CdmaConnection: void <init>(android.content.Context,java.lang.String,com.android.internal.telephony.cdma.CdmaCallTracker,com.android.internal.telephony.cdma.CdmaCall)>($r5, $r6, r0, $r7);

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO> = $r3;

        $r8 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r9 = virtualinvoke $r8.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        $r10 = virtualinvoke $r9.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r10.<android.content.res.Resources: int getInteger(int)>(17694837);

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: int m3WayCallFlashDelay> = $i0;

        $i1 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: int m3WayCallFlashDelay>;

        if $i1 <= 0 goto label1;

        $r15 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r17 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Message obtainMessage(int)>(20);

        interfaceinvoke $r15.<com.android.internal.telephony.CommandsInterface: void sendCDMAFeatureCode(java.lang.String,android.os.Message)>("", $r17);

        goto label2;

     label1:
        $r12 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r11 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO>;

        $r14 = virtualinvoke $r11.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String getAddress()>();

        $r13 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Message obtainMessage(int)>(16);

        interfaceinvoke $r12.<com.android.internal.telephony.CommandsInterface: void sendCDMAFeatureCode(java.lang.String,android.os.Message)>($r14, $r13);

     label2:
        $r16 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO>;

        return $r16;

     label3:
        return null;
    }

    void acceptCall() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        com.android.internal.telephony.cdma.CdmaConnection r1, $r11;
        com.android.internal.telephony.cdma.CdmaCall $r2, $r5, $r9, $r12, $r13;
        com.android.internal.telephony.Call$State $r3, $r4, $r6, $r7;
        com.android.internal.telephony.CallStateException $r8;
        com.android.internal.telephony.Connection $r10;
        com.android.internal.telephony.CommandsInterface $r14;
        android.os.Message $r15;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r4 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State INCOMING>;

        if $r3 != $r4 goto label1;

        staticinvoke <android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("phone", "acceptCall: incoming...");

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void setMute(boolean)>(0);

        $r14 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r15 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Message obtainCompleteMessage()>();

        interfaceinvoke $r14.<com.android.internal.telephony.CommandsInterface: void acceptCall(android.os.Message)>($r15);

        goto label3;

     label1:
        $r5 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall>;

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r7 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State WAITING>;

        if $r6 != $r7 goto label2;

        $r9 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall>;

        $r10 = virtualinvoke $r9.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Connection getLatestConnection()>();

        $r11 = (com.android.internal.telephony.cdma.CdmaConnection) $r10;

        r1 = (com.android.internal.telephony.cdma.CdmaConnection) $r11;

        $r13 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall>;

        $r12 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        virtualinvoke r1.<com.android.internal.telephony.cdma.CdmaConnection: void updateParent(com.android.internal.telephony.cdma.CdmaCall,com.android.internal.telephony.cdma.CdmaCall)>($r13, $r12);

        virtualinvoke r1.<com.android.internal.telephony.cdma.CdmaConnection: void onConnectedInOrOut()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void updatePhoneState()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void switchWaitingOrHoldingAndActive()>();

        goto label3;

     label2:
        $r8 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r8.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("phone not ringing");

        throw $r8;

     label3:
        return;
    }

    void rejectCall() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        com.android.internal.telephony.cdma.CdmaCall $r1;
        com.android.internal.telephony.Call$State $r2;
        boolean $z0;
        com.android.internal.telephony.CallStateException $r3;
        com.android.internal.telephony.CommandsInterface $r4;
        android.os.Message $r5;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State getState()>();

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.Call$State: boolean isRinging()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r5 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Message obtainCompleteMessage()>();

        interfaceinvoke $r4.<com.android.internal.telephony.CommandsInterface: void rejectCall(android.os.Message)>($r5);

        goto label2;

     label1:
        $r3 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r3.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("phone not ringing");

        throw $r3;

     label2:
        return;
    }

    void switchWaitingOrHoldingAndActive() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        com.android.internal.telephony.cdma.CdmaCall $r1, $r4;
        com.android.internal.telephony.Call$State $r2, $r3;
        java.util.List $r5;
        int $i0;
        com.android.internal.telephony.CommandsInterface $r6;
        android.os.Message $r7;
        com.android.internal.telephony.CallStateException $r8;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r3 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State INCOMING>;

        if $r2 != $r3 goto label1;

        $r8 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r8.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("cannot be in the incoming state");

        throw $r8;

     label1:
        $r4 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.cdma.CdmaCall: java.util.List getConnections()>();

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 <= 1 goto label2;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void flashAndSetGenericTrue()>();

        goto label3;

     label2:
        $r6 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r7 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Message obtainMessage(int)>(8);

        interfaceinvoke $r6.<com.android.internal.telephony.CommandsInterface: void sendCDMAFeatureCode(java.lang.String,android.os.Message)>("", $r7);

     label3:
        return;
    }

    void conference()
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void flashAndSetGenericTrue()>();

        return;
    }

    void explicitCallTransfer()
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        com.android.internal.telephony.CommandsInterface $r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r2 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Message obtainCompleteMessage(int)>(13);

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void explicitCallTransfer(android.os.Message)>($r2);

        return;
    }

    void clearDisconnected()
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        com.android.internal.telephony.cdma.CDMAPhone $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void internalClearDisconnected()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void updatePhoneState()>();

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r1.<com.android.internal.telephony.cdma.CDMAPhone: void notifyPreciseCallStateChanged()>();

        return;
    }

    boolean canConference()
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        com.android.internal.telephony.cdma.CdmaCall $r1, $r4, $r7, $r8;
        com.android.internal.telephony.Call$State $r2, $r3, $r5, $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r3 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if $r2 != $r3 goto label1;

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mBackgroundCall>;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r6 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if $r5 != $r6 goto label1;

        $r7 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mBackgroundCall>;

        $z0 = virtualinvoke $r7.<com.android.internal.telephony.cdma.CdmaCall: boolean isFull()>();

        if $z0 != 0 goto label1;

        $r8 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        $z1 = virtualinvoke $r8.<com.android.internal.telephony.cdma.CdmaCall: boolean isFull()>();

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    boolean canDial()
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        int i0;
        java.lang.String r1, $r22;
        com.android.internal.telephony.cdma.CDMAPhone $r2;
        android.telephony.ServiceState $r3;
        java.lang.Object[] $r4;
        java.lang.Integer $r6;
        java.lang.Boolean $r7, $r10, $r11, $r12, $r16, $r20, $r21;
        com.android.internal.telephony.cdma.CdmaConnection $r8, $r24;
        com.android.internal.telephony.cdma.CdmaCall $r9, $r13, $r15, $r18, $r25, $r26, $r27, $r30;
        com.android.internal.telephony.Call$State $r14, $r17, $r19, $r23, $r28, $r29, $r31, $r32;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.cdma.CDMAPhone: android.telephony.ServiceState getServiceState()>();

        i0 = virtualinvoke $r3.<android.telephony.ServiceState: int getState()>();

        r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.telephony.disable-call", "false");

        if i0 == 3 goto label02;

        $r24 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO>;

        if $r24 != null goto label02;

        $r26 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall>;

        $z13 = virtualinvoke $r26.<com.android.internal.telephony.cdma.CdmaCall: boolean isRinging()>();

        if $z13 != 0 goto label02;

        $z12 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("true");

        if $z12 != 0 goto label02;

        $r25 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        $r28 = virtualinvoke $r25.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State getState()>();

        $z15 = virtualinvoke $r28.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z15 == 0 goto label01;

        $r27 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        $r32 = virtualinvoke $r27.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r31 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if $r32 == $r31 goto label01;

        $r30 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mBackgroundCall>;

        $r29 = virtualinvoke $r30.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State getState()>();

        $z16 = virtualinvoke $r29.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z16 != 0 goto label02;

     label01:
        $z14 = 1;

        goto label03;

     label02:
        $z14 = 0;

     label03:
        z0 = $z14;

        if z0 != 0 goto label18;

        $r4 = newarray (java.lang.Object)[8];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4[0] = $r6;

        if i0 == 3 goto label04;

        $z9 = 1;

        goto label05;

     label04:
        $z9 = 0;

     label05:
        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z9);

        $r4[1] = $r7;

        $r8 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO>;

        if $r8 != null goto label06;

        $z11 = 1;

        goto label07;

     label06:
        $z11 = 0;

     label07:
        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z11);

        $r4[2] = $r10;

        $r9 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall>;

        $z1 = virtualinvoke $r9.<com.android.internal.telephony.cdma.CdmaCall: boolean isRinging()>();

        if $z1 != 0 goto label08;

        $z10 = 1;

        goto label09;

     label08:
        $z10 = 0;

     label09:
        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z10);

        $r4[3] = $r11;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("true");

        if $z2 != 0 goto label10;

        $z6 = 1;

        goto label11;

     label10:
        $z6 = 0;

     label11:
        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6);

        $r4[4] = $r12;

        $r13 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        $r14 = virtualinvoke $r13.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State getState()>();

        $z3 = virtualinvoke $r14.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z3 != 0 goto label12;

        $z5 = 1;

        goto label13;

     label12:
        $z5 = 0;

     label13:
        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5);

        $r4[5] = $r16;

        $r15 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        $r17 = virtualinvoke $r15.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r19 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if $r17 != $r19 goto label14;

        $z8 = 1;

        goto label15;

     label14:
        $z8 = 0;

     label15:
        $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z8);

        $r4[6] = $r20;

        $r18 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mBackgroundCall>;

        $r23 = virtualinvoke $r18.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State getState()>();

        $z4 = virtualinvoke $r23.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z4 != 0 goto label16;

        $z7 = 1;

        goto label17;

     label16:
        $z7 = 0;

     label17:
        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7);

        $r4[7] = $r21;

        $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("canDial is false\n((serviceState=%d) != ServiceState.STATE_POWER_OFF)::=%s\n&& pendingMO == null::=%s\n&& !ringingCall.isRinging()::=%s\n&& !disableCall.equals(\"true\")::=%s\n&& (!foregroundCall.getState().isAlive()::=%s\n   || foregroundCall.getState() == CdmaCall.State.ACTIVE::=%s\n   ||!backgroundCall.getState().isAlive())::=%s)", $r4);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void log(java.lang.String)>($r22);

     label18:
        return z0;
    }

    boolean canTransfer()
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("CdmaCallTracker", "canTransfer: not possible in CDMA");

        return 0;
    }

    private void internalClearDisconnected()
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        com.android.internal.telephony.cdma.CdmaCall $r1, $r2, $r3;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall>;

        virtualinvoke $r1.<com.android.internal.telephony.cdma.CdmaCall: void clearDisconnected()>();

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        virtualinvoke $r2.<com.android.internal.telephony.cdma.CdmaCall: void clearDisconnected()>();

        $r3 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mBackgroundCall>;

        virtualinvoke $r3.<com.android.internal.telephony.cdma.CdmaCall: void clearDisconnected()>();

        return;
    }

    private android.os.Message obtainCompleteMessage()
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        android.os.Message $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        $r1 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Message obtainCompleteMessage(int)>(4);

        return $r1;
    }

    private android.os.Message obtainCompleteMessage(int)
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        int i0, $i1, $i2;
        android.os.Message $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: int mPendingOperations>;

        $i2 = $i1 + 1;

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: int mPendingOperations> = $i2;

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Message mLastRelevantPoll> = null;

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mNeedsPoll> = 1;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Message obtainMessage(int)>(i0);

        return $r1;
    }

    private void operationComplete()
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        android.os.Message $r1, $r2;
        com.android.internal.telephony.CommandsInterface $r3;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        $i0 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: int mPendingOperations>;

        $i1 = $i0 - 1;

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: int mPendingOperations> = $i1;

        $i2 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: int mPendingOperations>;

        if $i2 != 0 goto label1;

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mNeedsPoll>;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Message obtainMessage(int)>(1);

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Message mLastRelevantPoll> = $r1;

        $r3 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Message mLastRelevantPoll>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void getCurrentCalls(android.os.Message)>($r2);

        goto label2;

     label1:
        $i3 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: int mPendingOperations>;

        if $i3 >= 0 goto label2;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("CdmaCallTracker", "CdmaCallTracker.pendingOperations < 0");

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: int mPendingOperations> = 0;

     label2:
        return;
    }

    private void updatePhoneState()
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        com.android.internal.telephony.PhoneConstants$State r1, $r4, $r5, $r6, $r7, $r12, $r16, $r18, $r19, $r25, $r26;
        com.android.internal.telephony.cdma.CdmaCall $r2, $r23, $r24;
        boolean $z0, $z1, $z2;
        com.android.internal.telephony.cdma.CdmaConnection $r3;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r13;
        java.lang.String $r14;
        com.android.internal.telephony.cdma.CDMAPhone $r15;
        android.os.AsyncResult $r17, $r22;
        android.os.RegistrantList $r20, $r21;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        r1 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall>;

        $z0 = virtualinvoke $r2.<com.android.internal.telephony.cdma.CdmaCall: boolean isRinging()>();

        if $z0 == 0 goto label1;

        $r25 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State RINGING>;

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState> = $r25;

        goto label4;

     label1:
        $r3 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO>;

        if $r3 != null goto label2;

        $r23 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        $z1 = virtualinvoke $r23.<com.android.internal.telephony.cdma.CdmaCall: boolean isIdle()>();

        if $z1 == 0 goto label2;

        $r24 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mBackgroundCall>;

        $z2 = virtualinvoke $r24.<com.android.internal.telephony.cdma.CdmaCall: boolean isIdle()>();

        if $z2 != 0 goto label3;

     label2:
        $r4 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State OFFHOOK>;

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState> = $r4;

        goto label4;

     label3:
        $r26 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState> = $r26;

     label4:
        $r6 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        $r5 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        if $r6 != $r5 goto label5;

        $r19 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        if r1 == $r19 goto label5;

        $r21 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.RegistrantList mVoiceCallEndedRegistrants>;

        $r22 = new android.os.AsyncResult;

        specialinvoke $r22.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r21.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r22);

        goto label6;

     label5:
        $r7 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        if r1 != $r7 goto label6;

        $r18 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        if r1 == $r18 goto label6;

        $r20 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.RegistrantList mVoiceCallStartedRegistrants>;

        $r17 = new android.os.AsyncResult;

        specialinvoke $r17.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, null, null);

        virtualinvoke $r20.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r17);

     label6:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("update phone state, old=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new=");

        $r12 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void log(java.lang.String)>($r14);

        $r16 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        if $r16 == r1 goto label7;

        $r15 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r15.<com.android.internal.telephony.cdma.CDMAPhone: void notifyPhoneStateChanged()>();

     label7:
        return;
    }

    protected void handlePollCalls(android.os.AsyncResult)
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        android.os.AsyncResult r1;
        java.util.List r2;
        com.android.internal.telephony.Connection r3, $r79, $r100;
        com.android.internal.telephony.cdma.CdmaConnection r4, r5, r9, $r14, $r42, $r73, $r76, $r83, $r87, $r89, $r91, $r92, $r99, $r102, $r106, r111, r112;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z9, $z10, $z11, $z12, $z13, $z15, $z18, $z20, $z21, z22;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i11, $i12, $i13, $i16, $i17, i19, i20, i21, i22, i23;
        com.android.internal.telephony.DriverCall r6;
        java.lang.Throwable $r8, $r10;
        java.util.ArrayList $r11, $r13, $r15, $r21, $r23, $r31, $r43, $r48, $r50, $r54, $r58, $r60, $r66, $r77;
        com.android.internal.telephony.cdma.CdmaConnection[] $r12, $r40, $r53, $r81, $r88, $r93, $r97, $r101;
        com.android.internal.telephony.cdma.CDMAPhone $r16, $r18, $r35, $r82, $r90, $r94, $r96;
        com.android.internal.telephony.CommandsInterface $r17;
        java.lang.Object $r19, $r57, $r78, $r103, $r104;
        android.os.Message $r20;
        long $l9;
        byte $b10;
        java.lang.StringBuilder $r24, $r25, $r26, $r27, $r29, $r33, $r34, $r36, $r39, $r44, $r45, $r46, $r52, $r61, $r63, $r64, $r67, $r69, $r70, $r71, $r72, $r74, $r75, $r85, $r86, $r107, $r108, $r109;
        java.lang.String $r28, $r32, $r41, $r49, $r62, $r68, $r84, $r110;
        com.android.internal.telephony.Call$State $r37;
        com.android.internal.telephony.cdma.CdmaCall $r38, $r47, $r51, $r55, $r56, $r59, $r65;
        android.content.Context $r80;
        com.android.internal.telephony.Phone $r95;
        com.android.internal.telephony.PhoneBase $r98;
        com.android.internal.telephony.CallStateException $r105;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        r1 := @parameter0: android.os.AsyncResult;

        $r8 = r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r8 != null goto label01;

        $r104 = r1.<android.os.AsyncResult: java.lang.Object result>;

        r2 = (java.util.List) $r104;

        goto label03;

     label01:
        $r10 = r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        $z4 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean isCommandExceptionRadioNotAvailable(java.lang.Throwable)>($r10);

        if $z4 == 0 goto label02;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r2 = $r11;

        goto label03;

     label02:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void pollCallsAfterDelay()>();

        return;

     label03:
        r3 = null;

        r4 = null;

        z0 = 0;

        z1 = 0;

        z2 = 0;

        z3 = 0;

        i0 = 0;

        i1 = 0;

        i2 = interfaceinvoke r2.<java.util.List: int size()>();

     label04:
        $r12 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection[] mConnections>;

        $i4 = lengthof $r12;

        if i0 >= $i4 goto label29;

        $r40 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection[] mConnections>;

        r5 = $r40[i0];

        r6 = null;

        if i1 >= i2 goto label06;

        $r103 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        r6 = (com.android.internal.telephony.DriverCall) $r103;

        $i17 = r6.<com.android.internal.telephony.DriverCall: int index>;

        $i16 = i0 + 1;

        if $i17 != $i16 goto label05;

        i1 = i1 + 1;

        goto label06;

     label05:
        r6 = null;

     label06:
        if r5 != null goto label15;

        if r6 == null goto label15;

        $r76 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO>;

        if $r76 == null goto label11;

        $r89 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO>;

        $z18 = virtualinvoke $r89.<com.android.internal.telephony.cdma.CdmaConnection: boolean compareTo(com.android.internal.telephony.DriverCall)>(r6);

        if $z18 == 0 goto label11;

        $r93 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection[] mConnections>;

        $r91 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO>;

        $r93[i0] = $r91;

        $r92 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO>;

        $r92.<com.android.internal.telephony.cdma.CdmaConnection: int mIndex> = i0;

        $r106 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO>;

        virtualinvoke $r106.<com.android.internal.telephony.cdma.CdmaConnection: boolean update(com.android.internal.telephony.DriverCall)>(r6);

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO> = null;

        $z20 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mHangupPendingMO>;

        if $z20 == 0 goto label14;

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mHangupPendingMO> = 0;

        $z21 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mIsEcmTimerCanceled>;

        if $z21 == 0 goto label07;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void handleEcmTimer(int)>(0);

     label07:
        $r107 = new java.lang.StringBuilder;

        specialinvoke $r107.<java.lang.StringBuilder: void <init>()>();

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("poll: hangupPendingMO, hangup conn ");

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r110 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void log(java.lang.String)>($r110);

        $r101 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection[] mConnections>;

        $r102 = $r101[i0];

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void hangup(com.android.internal.telephony.cdma.CdmaConnection)>($r102);

     label08:
        goto label10;

     label09:
        $r105 := @caughtexception;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("CdmaCallTracker", "unexpected error on hangup");

     label10:
        return;

     label11:
        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $r74 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pendingMo=");

        $r73 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO>;

        $r72 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r73);

        $r86 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", dc=");

        $r85 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r84 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void log(java.lang.String)>($r84);

        $r81 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection[] mConnections>;

        $r83 = new com.android.internal.telephony.cdma.CdmaConnection;

        $r82 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r80 = virtualinvoke $r82.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        specialinvoke $r83.<com.android.internal.telephony.cdma.CdmaConnection: void <init>(android.content.Context,com.android.internal.telephony.DriverCall,com.android.internal.telephony.cdma.CdmaCallTracker,int)>($r80, r6, r0, i0);

        $r81[i0] = $r83;

        $r79 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.Connection mHandoverConnection>;

        if $r79 == null goto label12;

        $r96 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r94 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r95 = virtualinvoke $r94.<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.Phone getImsPhone()>();

        $r98 = (com.android.internal.telephony.PhoneBase) $r95;

        virtualinvoke $r96.<com.android.internal.telephony.cdma.CDMAPhone: void migrateFrom(com.android.internal.telephony.PhoneBase)>($r98);

        $r97 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection[] mConnections>;

        $r99 = $r97[i0];

        $r100 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.Connection mHandoverConnection>;

        virtualinvoke $r99.<com.android.internal.telephony.cdma.CdmaConnection: void migrateFrom(com.android.internal.telephony.Connection)>($r100);

        $r90 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r88 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection[] mConnections>;

        $r87 = $r88[i0];

        virtualinvoke $r90.<com.android.internal.telephony.cdma.CDMAPhone: void notifyHandoverStateChanged(com.android.internal.telephony.Connection)>($r87);

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.Connection mHandoverConnection> = null;

        goto label13;

     label12:
        r3 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.Connection checkMtFindNewRinging(com.android.internal.telephony.DriverCall,int)>(r6, i0);

        if r3 != null goto label13;

        z3 = 1;

     label13:
        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void checkAndEnableDataCallAfterEmergencyCallDropped()>();

     label14:
        z0 = 1;

        goto label28;

     label15:
        if r5 == null goto label21;

        if r6 != null goto label21;

        $r47 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        $r48 = $r47.<com.android.internal.telephony.cdma.CdmaCall: java.util.ArrayList mConnections>;

        i19 = virtualinvoke $r48.<java.util.ArrayList: int size()>();

        i3 = 0;

     label16:
        if i3 >= i19 goto label17;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("adding fgCall cn ");

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r67 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to droppedDuringPoll");

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void log(java.lang.String)>($r68);

        $r65 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        $r66 = $r65.<com.android.internal.telephony.cdma.CdmaCall: java.util.ArrayList mConnections>;

        $r78 = virtualinvoke $r66.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r9 = (com.android.internal.telephony.cdma.CdmaConnection) $r78;

        $r77 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        virtualinvoke $r77.<java.util.ArrayList: boolean add(java.lang.Object)>(r9);

        i3 = i3 + 1;

        goto label16;

     label17:
        $r55 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall>;

        $r54 = $r55.<com.android.internal.telephony.cdma.CdmaCall: java.util.ArrayList mConnections>;

        i20 = virtualinvoke $r54.<java.util.ArrayList: int size()>();

        i21 = 0;

     label18:
        if i21 >= i20 goto label19;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("adding rgCall cn ");

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i21);

        $r61 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to droppedDuringPoll");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void log(java.lang.String)>($r62);

        $r59 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall>;

        $r60 = $r59.<com.android.internal.telephony.cdma.CdmaCall: java.util.ArrayList mConnections>;

        $r57 = virtualinvoke $r60.<java.util.ArrayList: java.lang.Object get(int)>(i21);

        r111 = (com.android.internal.telephony.cdma.CdmaConnection) $r57;

        $r58 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        virtualinvoke $r58.<java.util.ArrayList: boolean add(java.lang.Object)>(r111);

        i21 = i21 + 1;

        goto label18;

     label19:
        $r56 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        virtualinvoke $r56.<com.android.internal.telephony.cdma.CdmaCall: void setGeneric(boolean)>(0);

        $r51 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall>;

        virtualinvoke $r51.<com.android.internal.telephony.cdma.CdmaCall: void setGeneric(boolean)>(0);

        $z15 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mIsEcmTimerCanceled>;

        if $z15 == 0 goto label20;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void handleEcmTimer(int)>(0);

     label20:
        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void checkAndEnableDataCallAfterEmergencyCallDropped()>();

        $r53 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection[] mConnections>;

        $r53[i0] = null;

        goto label28;

     label21:
        if r5 == null goto label28;

        if r6 == null goto label28;

        $z10 = virtualinvoke r5.<com.android.internal.telephony.cdma.CdmaConnection: boolean isIncoming()>();

        $z11 = r6.<com.android.internal.telephony.DriverCall: boolean isMT>;

        if $z10 == $z11 goto label24;

        $z13 = r6.<com.android.internal.telephony.DriverCall: boolean isMT>;

        if $z13 != 1 goto label23;

        $r50 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        virtualinvoke $r50.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        r3 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.Connection checkMtFindNewRinging(com.android.internal.telephony.DriverCall,int)>(r6, i0);

        if r3 != null goto label22;

        z3 = 1;

        r4 = r5;

     label22:
        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void checkAndEnableDataCallAfterEmergencyCallDropped()>();

        goto label28;

     label23:
        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in RIL, Phantom call appeared ");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r49 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("CdmaCallTracker", $r49);

        goto label28;

     label24:
        z22 = virtualinvoke r5.<com.android.internal.telephony.cdma.CdmaConnection: boolean update(com.android.internal.telephony.DriverCall)>(r6);

        if z0 != 0 goto label25;

        if z22 == 0 goto label26;

     label25:
        $z12 = 1;

        goto label27;

     label26:
        $z12 = 0;

     label27:
        z0 = $z12;

     label28:
        i0 = i0 + 1;

        goto label04;

     label29:
        $r14 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO>;

        if $r14 == null goto label30;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pending MO dropped before poll fg state:");

        $r38 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        $r37 = virtualinvoke $r38.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r36 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r37);

        $r41 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CdmaCallTracker", $r41);

        $r43 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        $r42 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO>;

        virtualinvoke $r43.<java.util.ArrayList: boolean add(java.lang.Object)>($r42);

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO> = null;

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mHangupPendingMO> = 0;

        $z9 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mPendingCallInEcm>;

        if $z9 == 0 goto label30;

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mPendingCallInEcm> = 0;

     label30:
        if r3 == null goto label31;

        $r35 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r35.<com.android.internal.telephony.cdma.CDMAPhone: void notifyNewRingingConnection(com.android.internal.telephony.Connection)>(r3);

     label31:
        $r13 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        $i5 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        i22 = $i5 - 1;

     label32:
        if i22 < 0 goto label38;

        $r21 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        $r19 = virtualinvoke $r21.<java.util.ArrayList: java.lang.Object get(int)>(i22);

        r112 = (com.android.internal.telephony.cdma.CdmaConnection) $r19;

        $z5 = virtualinvoke r112.<com.android.internal.telephony.cdma.CdmaConnection: boolean isIncoming()>();

        if $z5 == 0 goto label35;

        $l9 = virtualinvoke r112.<com.android.internal.telephony.cdma.CdmaConnection: long getConnectTime()>();

        $b10 = $l9 cmp 0L;

        if $b10 != 0 goto label35;

        $i13 = r112.<com.android.internal.telephony.cdma.CdmaConnection: int mCause>;

        if $i13 != 3 goto label33;

        i23 = 16;

        goto label34;

     label33:
        i23 = 1;

     label34:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("missed/rejected call, conn.cause=");

        $i12 = r112.<com.android.internal.telephony.cdma.CdmaConnection: int mCause>;

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void log(java.lang.String)>($r28);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setting cause to ");

        $r33 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i23);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void log(java.lang.String)>($r32);

        $r31 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        virtualinvoke $r31.<java.util.ArrayList: java.lang.Object remove(int)>(i22);

        $z7 = virtualinvoke r112.<com.android.internal.telephony.cdma.CdmaConnection: boolean onDisconnect(int)>(i23);

        z1 = z1 | $z7;

        goto label37;

     label35:
        $i8 = r112.<com.android.internal.telephony.cdma.CdmaConnection: int mCause>;

        if $i8 == 3 goto label36;

        $i11 = r112.<com.android.internal.telephony.cdma.CdmaConnection: int mCause>;

        if $i11 != 7 goto label37;

     label36:
        $r23 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        virtualinvoke $r23.<java.util.ArrayList: java.lang.Object remove(int)>(i22);

        $i7 = r112.<com.android.internal.telephony.cdma.CdmaConnection: int mCause>;

        $z6 = virtualinvoke r112.<com.android.internal.telephony.cdma.CdmaConnection: boolean onDisconnect(int)>($i7);

        z1 = z1 | $z6;

     label37:
        i22 = i22 + -1;

        goto label32;

     label38:
        $r15 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        $i6 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

        if $i6 <= 0 goto label39;

        $r17 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r20 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Message obtainNoPollCompleteMessage(int)>(5);

        interfaceinvoke $r17.<com.android.internal.telephony.CommandsInterface: void getLastCallFailCause(android.os.Message)>($r20);

     label39:
        if z2 == 0 goto label40;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void pollCallsAfterDelay()>();

     label40:
        if r3 != null goto label41;

        if z0 != 0 goto label41;

        if z1 == 0 goto label42;

     label41:
        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void internalClearDisconnected()>();

     label42:
        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void updatePhoneState()>();

        if z3 == 0 goto label43;

        $r18 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r18.<com.android.internal.telephony.cdma.CDMAPhone: void notifyUnknownConnection(com.android.internal.telephony.Connection)>(r4);

     label43:
        if z0 != 0 goto label44;

        if r3 != null goto label44;

        if z1 == 0 goto label45;

     label44:
        $r16 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r16.<com.android.internal.telephony.cdma.CDMAPhone: void notifyPreciseCallStateChanged()>();

     label45:
        return;

        catch com.android.internal.telephony.CallStateException from label07 to label08 with label09;
    }

    void hangup(com.android.internal.telephony.cdma.CdmaConnection) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0, $r3;
        com.android.internal.telephony.cdma.CdmaConnection r1, $r4;
        com.android.internal.telephony.cdma.CdmaCall $r5, $r6, $r9;
        com.android.internal.telephony.CommandsInterface $r7;
        int $i0;
        android.os.Message $r8;
        com.android.internal.telephony.Call$State $r10, $r11;
        com.android.internal.telephony.cdma.CDMAPhone $r12;
        com.android.internal.telephony.CallStateException $r13, $r19;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r18, $r21, $r22, $r23;
        java.lang.String $r20, $r24;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        r1 := @parameter0: com.android.internal.telephony.cdma.CdmaConnection;

        $r3 = r1.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        if $r3 == r0 goto label1;

        $r13 = new com.android.internal.telephony.CallStateException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CdmaConnection ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("does not belong to CdmaCallTracker ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>($r20);

        throw $r13;

     label1:
        $r4 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO>;

        if r1 != $r4 goto label2;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void log(java.lang.String)>("hangup: set hangupPendingMO to true");

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mHangupPendingMO> = 1;

        goto label6;

     label2:
        $r5 = virtualinvoke r1.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall getCall()>();

        $r6 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall>;

        if $r5 != $r6 goto label3;

        $r9 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall>;

        $r10 = virtualinvoke $r9.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State getState()>();

        $r11 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State WAITING>;

        if $r10 != $r11 goto label3;

        virtualinvoke r1.<com.android.internal.telephony.cdma.CdmaConnection: void onLocalDisconnect()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void updatePhoneState()>();

        $r12 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r12.<com.android.internal.telephony.cdma.CDMAPhone: void notifyPreciseCallStateChanged()>();

        return;

     label3:
        $r7 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $i0 = virtualinvoke r1.<com.android.internal.telephony.cdma.CdmaConnection: int getCDMAIndex()>();

        $r8 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Message obtainCompleteMessage()>();

        interfaceinvoke $r7.<com.android.internal.telephony.CommandsInterface: void hangupConnection(int,android.os.Message)>($i0, $r8);

     label4:
        goto label6;

     label5:
        $r19 := @caughtexception;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CdmaCallTracker WARN: hangup() on absent connection ");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("CdmaCallTracker", $r24);

     label6:
        virtualinvoke r1.<com.android.internal.telephony.cdma.CdmaConnection: void onHangupLocal()>();

        return;

        catch com.android.internal.telephony.CallStateException from label3 to label4 with label5;
    }

    void separate(com.android.internal.telephony.cdma.CdmaConnection) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0, $r3;
        com.android.internal.telephony.cdma.CdmaConnection r1;
        com.android.internal.telephony.CommandsInterface $r4;
        int $i0;
        android.os.Message $r5;
        com.android.internal.telephony.CallStateException $r6, $r13;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r14, $r15, $r17;
        java.lang.String $r12, $r16;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        r1 := @parameter0: com.android.internal.telephony.cdma.CdmaConnection;

        $r3 = r1.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        if $r3 == r0 goto label1;

        $r6 = new com.android.internal.telephony.CallStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CdmaConnection ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("does not belong to CdmaCallTracker ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>($r12);

        throw $r6;

     label1:
        $r4 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $i0 = virtualinvoke r1.<com.android.internal.telephony.cdma.CdmaConnection: int getCDMAIndex()>();

        $r5 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Message obtainCompleteMessage(int)>(12);

        interfaceinvoke $r4.<com.android.internal.telephony.CommandsInterface: void separateConnection(int,android.os.Message)>($i0, $r5);

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CdmaCallTracker WARN: separate() on absent connection ");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("CdmaCallTracker", $r16);

     label4:
        return;

        catch com.android.internal.telephony.CallStateException from label1 to label2 with label3;
    }

    void setMute(boolean)
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        boolean z0, $z1;
        com.android.internal.telephony.CommandsInterface $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mDesiredMute> = z0;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $z1 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mDesiredMute>;

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void setMute(boolean,android.os.Message)>($z1, null);

        return;
    }

    boolean getMute()
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mDesiredMute>;

        return $z0;
    }

    void hangup(com.android.internal.telephony.cdma.CdmaCall) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        com.android.internal.telephony.cdma.CdmaCall r1, $r3, $r4, $r5, $r13;
        java.util.List $r2, $r16;
        int $i0;
        java.lang.RuntimeException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11;
        java.lang.String $r12;
        boolean $z0, $z1;
        com.android.internal.telephony.cdma.CDMAPhone $r14;
        java.lang.Object $r15;
        com.android.internal.telephony.cdma.CdmaConnection $r17, $r18;
        android.os.Message $r19;
        com.android.internal.telephony.CommandsInterface $r20;
        com.android.internal.telephony.CallStateException $r21;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        r1 := @parameter0: com.android.internal.telephony.cdma.CdmaCall;

        $r2 = virtualinvoke r1.<com.android.internal.telephony.cdma.CdmaCall: java.util.List getConnections()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r21 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r21.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("no connections in call");

        throw $r21;

     label1:
        $r3 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall>;

        if r1 != $r3 goto label2;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void log(java.lang.String)>("(ringing) hangup waiting or background");

        $r20 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r19 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Message obtainCompleteMessage()>();

        interfaceinvoke $r20.<com.android.internal.telephony.CommandsInterface: void hangupWaitingOrBackground(android.os.Message)>($r19);

        goto label7;

     label2:
        $r4 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        if r1 != $r4 goto label4;

        $z1 = virtualinvoke r1.<com.android.internal.telephony.cdma.CdmaCall: boolean isDialingOrAlerting()>();

        if $z1 == 0 goto label3;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void log(java.lang.String)>("(foregnd) hangup dialing or alerting...");

        $r16 = virtualinvoke r1.<com.android.internal.telephony.cdma.CdmaCall: java.util.List getConnections()>();

        $r15 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(0);

        $r18 = (com.android.internal.telephony.cdma.CdmaConnection) $r15;

        $r17 = (com.android.internal.telephony.cdma.CdmaConnection) $r18;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void hangup(com.android.internal.telephony.cdma.CdmaConnection)>($r17);

        goto label7;

     label3:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void hangupForegroundResumeBackground()>();

        goto label7;

     label4:
        $r5 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mBackgroundCall>;

        if r1 != $r5 goto label6;

        $r13 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall>;

        $z0 = virtualinvoke $r13.<com.android.internal.telephony.cdma.CdmaCall: boolean isRinging()>();

        if $z0 == 0 goto label5;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void log(java.lang.String)>("hangup all conns in background call");

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void hangupAllConnections(com.android.internal.telephony.cdma.CdmaCall)>(r1);

        goto label7;

     label5:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void hangupWaitingOrBackground()>();

        goto label7;

     label6:
        $r6 = new java.lang.RuntimeException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CdmaCall ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("does not belong to CdmaCallTracker ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12);

        throw $r6;

     label7:
        virtualinvoke r1.<com.android.internal.telephony.cdma.CdmaCall: void onHangupLocal()>();

        $r14 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r14.<com.android.internal.telephony.cdma.CDMAPhone: void notifyPreciseCallStateChanged()>();

        return;
    }

    void hangupWaitingOrBackground()
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        com.android.internal.telephony.CommandsInterface $r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void log(java.lang.String)>("hangupWaitingOrBackground");

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r2 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Message obtainCompleteMessage()>();

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void hangupWaitingOrBackground(android.os.Message)>($r2);

        return;
    }

    void hangupForegroundResumeBackground()
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        com.android.internal.telephony.CommandsInterface $r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void log(java.lang.String)>("hangupForegroundResumeBackground");

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r2 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Message obtainCompleteMessage()>();

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void hangupForegroundResumeBackground(android.os.Message)>($r2);

        return;
    }

    void hangupConnectionByIndex(com.android.internal.telephony.cdma.CdmaCall, int) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        com.android.internal.telephony.cdma.CdmaCall r1;
        int i0, i1, i2, $i3;
        com.android.internal.telephony.cdma.CdmaConnection r2;
        java.util.ArrayList $r3, $r5;
        com.android.internal.telephony.CallStateException $r4;
        java.lang.Object $r6;
        com.android.internal.telephony.CommandsInterface $r7;
        android.os.Message $r8;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        r1 := @parameter0: com.android.internal.telephony.cdma.CdmaCall;

        i0 := @parameter1: int;

        $r3 = r1.<com.android.internal.telephony.cdma.CdmaCall: java.util.ArrayList mConnections>;

        i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $r5 = r1.<com.android.internal.telephony.cdma.CdmaCall: java.util.ArrayList mConnections>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (com.android.internal.telephony.cdma.CdmaConnection) $r6;

        $i3 = virtualinvoke r2.<com.android.internal.telephony.cdma.CdmaConnection: int getCDMAIndex()>();

        if $i3 != i0 goto label2;

        $r7 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r8 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Message obtainCompleteMessage()>();

        interfaceinvoke $r7.<com.android.internal.telephony.CommandsInterface: void hangupConnection(int,android.os.Message)>(i0, $r8);

        return;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r4 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r4.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("no gsm index found");

        throw $r4;
    }

    void hangupAllConnections(com.android.internal.telephony.cdma.CdmaCall)
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        com.android.internal.telephony.cdma.CdmaCall r1;
        int i0, i1, $i2;
        com.android.internal.telephony.cdma.CdmaConnection r2;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        com.android.internal.telephony.CommandsInterface $r6;
        android.os.Message $r7;
        com.android.internal.telephony.CallStateException $r8, r13;
        java.lang.StringBuilder $r9, $r10, $r12;
        java.lang.String $r11;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        r1 := @parameter0: com.android.internal.telephony.cdma.CdmaCall;

     label1:
        $r3 = r1.<com.android.internal.telephony.cdma.CdmaCall: java.util.ArrayList mConnections>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r4 = r1.<com.android.internal.telephony.cdma.CdmaCall: java.util.ArrayList mConnections>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.internal.telephony.cdma.CdmaConnection) $r5;

        $r6 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $i2 = virtualinvoke r2.<com.android.internal.telephony.cdma.CdmaConnection: int getCDMAIndex()>();

        $r7 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Message obtainCompleteMessage()>();

        interfaceinvoke $r6.<com.android.internal.telephony.CommandsInterface: void hangupConnection(int,android.os.Message)>($i2, $r7);

        i1 = i1 + 1;

        goto label2;

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        r13 = $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hangupConnectionByIndex caught ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("CdmaCallTracker", $r11);

     label5:
        return;

        catch com.android.internal.telephony.CallStateException from label1 to label3 with label4;
    }

    com.android.internal.telephony.cdma.CdmaConnection getConnectionByIndex(com.android.internal.telephony.cdma.CdmaCall, int) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        com.android.internal.telephony.cdma.CdmaCall r1;
        int i0, i1, i2, $i3;
        com.android.internal.telephony.cdma.CdmaConnection r2;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        r1 := @parameter0: com.android.internal.telephony.cdma.CdmaCall;

        i0 := @parameter1: int;

        $r3 = r1.<com.android.internal.telephony.cdma.CdmaCall: java.util.ArrayList mConnections>;

        i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $r4 = r1.<com.android.internal.telephony.cdma.CdmaCall: java.util.ArrayList mConnections>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (com.android.internal.telephony.cdma.CdmaConnection) $r5;

        $i3 = virtualinvoke r2.<com.android.internal.telephony.cdma.CdmaConnection: int getCDMAIndex()>();

        if $i3 != i0 goto label2;

        return r2;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return null;
    }

    private void flashAndSetGenericTrue()
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        com.android.internal.telephony.CommandsInterface $r1;
        android.os.Message $r2;
        com.android.internal.telephony.cdma.CdmaCall $r3;
        com.android.internal.telephony.cdma.CDMAPhone $r4;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Message obtainMessage(int)>(8);

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void sendCDMAFeatureCode(java.lang.String,android.os.Message)>("", $r2);

        $r3 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        virtualinvoke $r3.<com.android.internal.telephony.cdma.CdmaCall: void setGeneric(boolean)>(1);

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r4.<com.android.internal.telephony.cdma.CDMAPhone: void notifyPreciseCallStateChanged()>();

        return;
    }

    private void handleRadioNotAvailable()
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void pollCallsWhenSafe()>();

        return;
    }

    private void notifyCallWaitingInfo(com.android.internal.telephony.cdma.CdmaCallWaitingNotification)
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        com.android.internal.telephony.cdma.CdmaCallWaitingNotification r1;
        android.os.RegistrantList $r2, $r4;
        android.os.AsyncResult $r3;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        r1 := @parameter0: com.android.internal.telephony.cdma.CdmaCallWaitingNotification;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.RegistrantList mCallWaitingRegistrants>;

        if $r2 == null goto label1;

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.RegistrantList mCallWaitingRegistrants>;

        $r3 = new android.os.AsyncResult;

        specialinvoke $r3.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r1, null);

        virtualinvoke $r4.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r3);

     label1:
        return;
    }

    private void handleCallWaitingInfo(com.android.internal.telephony.cdma.CdmaCallWaitingNotification)
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        com.android.internal.telephony.cdma.CdmaCallWaitingNotification r1;
        com.android.internal.telephony.cdma.CdmaCall $r2, $r4, $r8, $r9;
        java.util.ArrayList $r3;
        int $i0;
        com.android.internal.telephony.cdma.CdmaConnection $r5;
        com.android.internal.telephony.cdma.CDMAPhone $r6;
        android.content.Context $r7;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        r1 := @parameter0: com.android.internal.telephony.cdma.CdmaCallWaitingNotification;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        $r3 = $r2.<com.android.internal.telephony.cdma.CdmaCall: java.util.ArrayList mConnections>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 <= 1 goto label1;

        $r9 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        virtualinvoke $r9.<com.android.internal.telephony.cdma.CdmaCall: void setGeneric(boolean)>(1);

     label1:
        $r4 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall>;

        virtualinvoke $r4.<com.android.internal.telephony.cdma.CdmaCall: void setGeneric(boolean)>(0);

        $r5 = new com.android.internal.telephony.cdma.CdmaConnection;

        $r6 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        $r8 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall>;

        specialinvoke $r5.<com.android.internal.telephony.cdma.CdmaConnection: void <init>(android.content.Context,com.android.internal.telephony.cdma.CdmaCallWaitingNotification,com.android.internal.telephony.cdma.CdmaCallTracker,com.android.internal.telephony.cdma.CdmaCall)>($r7, r1, r0, $r8);

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void updatePhoneState()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void notifyCallWaitingInfo(com.android.internal.telephony.cdma.CdmaCallWaitingNotification)>(r1);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        android.os.Message r1, $r6, $r25;
        android.os.AsyncResult r2, $r8, r35, r36, r37, r38;
        int i0, i1, i2, $i3, $i6, $i9;
        com.android.internal.telephony.cdma.CdmaConnection r3, $r15, $r21;
        com.android.internal.telephony.cdma.CDMAPhone $r4, $r19, $r32;
        boolean $z0, $z2;
        java.lang.Object $r5, $r7, $r9, $r13, $r14, $r16, $r24, $r26, $r31;
        java.lang.Throwable $r10, $r12, $r17, $r23;
        com.android.internal.telephony.cdma.CdmaCallTracker$1 $r11;
        long $l7;
        com.android.internal.telephony.cdma.CdmaCallWaitingNotification $r18;
        java.lang.String $r20;
        com.android.internal.telephony.CommandsInterface $r22;
        java.util.ArrayList $r27, $r30, $r33;
        int[] $r28, $r29;
        java.lang.RuntimeException $r34;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        r1 := @parameter0: android.os.Message;

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $z0 = $r4.<com.android.internal.telephony.cdma.CDMAPhone: boolean mIsTheCurrentActivePhone>;

        if $z0 != 0 goto label01;

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("CdmaCallTracker", "Ignoring events received on inactive CdmaPhone");

        return;

     label01:
        $i3 = r1.<android.os.Message: int what>;

        tableswitch($i3)
        {
            case 1: goto label02;
            case 2: goto label10;
            case 3: goto label10;
            case 4: goto label03;
            case 5: goto label05;
            case 6: goto label19;
            case 7: goto label19;
            case 8: goto label04;
            case 9: goto label11;
            case 10: goto label12;
            case 11: goto label19;
            case 12: goto label19;
            case 13: goto label19;
            case 14: goto label13;
            case 15: goto label15;
            case 16: goto label16;
            case 17: goto label19;
            case 18: goto label19;
            case 19: goto label19;
            case 20: goto label17;
            default: goto label19;
        };

     label02:
        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CdmaCallTracker", "Event EVENT_POLL_CALLS_RESULT Received");

        $r5 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (android.os.AsyncResult) $r5;

        $r6 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Message mLastRelevantPoll>;

        if r1 != $r6 goto label20;

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mNeedsPoll> = 0;

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Message mLastRelevantPoll> = null;

        $r7 = r1.<android.os.Message: java.lang.Object obj>;

        $r8 = (android.os.AsyncResult) $r7;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void handlePollCalls(android.os.AsyncResult)>($r8);

        goto label20;

     label03:
        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void operationComplete()>();

        goto label20;

     label04:
        goto label20;

     label05:
        $r26 = r1.<android.os.Message: java.lang.Object obj>;

        r35 = (android.os.AsyncResult) $r26;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void operationComplete()>();

        $r23 = r35.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r23 == null goto label06;

        i0 = 16;

        staticinvoke <android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("CdmaCallTracker", "Exception during getLastCallFailCause, assuming normal disconnect");

        goto label07;

     label06:
        $r24 = r35.<android.os.AsyncResult: java.lang.Object result>;

        $r28 = (int[]) $r24;

        $r29 = (int[]) $r28;

        i0 = $r29[0];

     label07:
        i1 = 0;

        $r27 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        i2 = virtualinvoke $r27.<java.util.ArrayList: int size()>();

     label08:
        if i1 >= i2 goto label09;

        $r30 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        $r31 = virtualinvoke $r30.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.internal.telephony.cdma.CdmaConnection) $r31;

        virtualinvoke r3.<com.android.internal.telephony.cdma.CdmaConnection: void onRemoteDisconnect(int)>(i0);

        i1 = i1 + 1;

        goto label08;

     label09:
        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void updatePhoneState()>();

        $r32 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r32.<com.android.internal.telephony.cdma.CDMAPhone: void notifyPreciseCallStateChanged()>();

        $r33 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        virtualinvoke $r33.<java.util.ArrayList: void clear()>();

        goto label20;

     label10:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void pollCallsWhenSafe()>();

        goto label20;

     label11:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void handleRadioAvailable()>();

        goto label20;

     label12:
        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void handleRadioNotAvailable()>();

        goto label20;

     label13:
        $z2 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mPendingCallInEcm>;

        if $z2 == 0 goto label14;

        $r22 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r21 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO>;

        $r20 = virtualinvoke $r21.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String getAddress()>();

        $i9 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: int mPendingCallClirMode>;

        $r25 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Message obtainCompleteMessage()>();

        interfaceinvoke $r22.<com.android.internal.telephony.CommandsInterface: void dial(java.lang.String,int,android.os.Message)>($r20, $i9, $r25);

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mPendingCallInEcm> = 0;

     label14:
        $r19 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r19.<com.android.internal.telephony.cdma.CDMAPhone: void unsetOnEcbModeExitResponse(android.os.Handler)>(r0);

        goto label20;

     label15:
        $r14 = r1.<android.os.Message: java.lang.Object obj>;

        r36 = (android.os.AsyncResult) $r14;

        $r17 = r36.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r17 != null goto label20;

        $r16 = r36.<android.os.AsyncResult: java.lang.Object result>;

        $r18 = (com.android.internal.telephony.cdma.CdmaCallWaitingNotification) $r16;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void handleCallWaitingInfo(com.android.internal.telephony.cdma.CdmaCallWaitingNotification)>($r18);

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CdmaCallTracker", "Event EVENT_CALL_WAITING_INFO_CDMA Received");

        goto label20;

     label16:
        $r13 = r1.<android.os.Message: java.lang.Object obj>;

        r37 = (android.os.AsyncResult) $r13;

        $r12 = r37.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r12 != null goto label20;

        $r15 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO>;

        virtualinvoke $r15.<com.android.internal.telephony.cdma.CdmaConnection: void onConnectedInOrOut()>();

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO> = null;

        goto label20;

     label17:
        $r9 = r1.<android.os.Message: java.lang.Object obj>;

        r38 = (android.os.AsyncResult) $r9;

        $r10 = r38.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r10 != null goto label18;

        $r11 = new com.android.internal.telephony.cdma.CdmaCallTracker$1;

        specialinvoke $r11.<com.android.internal.telephony.cdma.CdmaCallTracker$1: void <init>(com.android.internal.telephony.cdma.CdmaCallTracker)>(r0);

        $i6 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: int m3WayCallFlashDelay>;

        $l7 = (long) $i6;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean postDelayed(java.lang.Runnable,long)>($r11, $l7);

        goto label20;

     label18:
        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO> = null;

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("CdmaCallTracker", "exception happened on Blank Flash for 3-way call");

        goto label20;

     label19:
        $r34 = new java.lang.RuntimeException;

        specialinvoke $r34.<java.lang.RuntimeException: void <init>(java.lang.String)>("unexpected event not handled");

        throw $r34;

     label20:
        return;
    }

    private void handleEcmTimer(int)
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        int i0;
        com.android.internal.telephony.cdma.CDMAPhone $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r1.<com.android.internal.telephony.cdma.CDMAPhone: void handleTimerInEmergencyCallbackMode(int)>(i0);

        lookupswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label1;
            default: goto label3;
        };

     label1:
        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mIsEcmTimerCanceled> = 1;

        goto label4;

     label2:
        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mIsEcmTimerCanceled> = 0;

        goto label4;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleEcmTimer, unsupported action ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("CdmaCallTracker", $r5);

     label4:
        return;
    }

    private void disableDataCallInEmergencyCall(java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        java.lang.String r1;
        com.android.internal.telephony.cdma.CDMAPhone $r2, $r4;
        android.content.Context $r3;
        boolean $z0;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r5;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.cdma.CDMAPhone: android.content.Context getContext()>();

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isLocalEmergencyNumber(android.content.Context,java.lang.String)>($r3, r1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void log(java.lang.String)>("disableDataCallInEmergencyCall");

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mIsInEmergencyCall> = 1;

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r5 = $r4.<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        virtualinvoke $r5.<com.android.internal.telephony.dataconnection.DcTrackerBase: boolean setInternalDataEnabled(boolean)>(0);

     label1:
        return;
    }

    private void checkAndEnableDataCallAfterEmergencyCallDropped()
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        java.lang.String r1, $r5;
        boolean $z0;
        java.lang.StringBuilder $r2, $r3, $r4;
        int $i0;
        com.android.internal.telephony.cdma.CDMAPhone $r6;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r7;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mIsInEmergencyCall>;

        if $z0 == 0 goto label1;

        r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mIsInEmergencyCall> = 0;

        r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ril.cdma.inecmmode", "false");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("checkAndEnableDataCallAfterEmergencyCallDropped,inEcm=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void log(java.lang.String)>($r5);

        $i0 = virtualinvoke r1.<java.lang.String: int compareTo(java.lang.String)>("false");

        if $i0 != 0 goto label1;

        $r6 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r7 = $r6.<com.android.internal.telephony.cdma.CDMAPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        virtualinvoke $r7.<com.android.internal.telephony.dataconnection.DcTrackerBase: boolean setInternalDataEnabled(boolean)>(1);

     label1:
        return;
    }

    private com.android.internal.telephony.Connection checkMtFindNewRinging(com.android.internal.telephony.DriverCall, int)
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        com.android.internal.telephony.DriverCall r1;
        int i0;
        com.android.internal.telephony.cdma.CdmaConnection r2, $r4, $r15, $r19;
        com.android.internal.telephony.cdma.CdmaConnection[] $r3, $r16, $r20, $r22;
        com.android.internal.telephony.cdma.CdmaCall $r5, $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r21, $r23, $r24;
        java.lang.String $r10, $r25;
        com.android.internal.telephony.DriverCall$State $r11, $r12, $r13, $r14, $r17, $r18;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        r1 := @parameter0: com.android.internal.telephony.DriverCall;

        i0 := @parameter1: int;

        r2 = null;

        $r3 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection[] mConnections>;

        $r4 = $r3[i0];

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall getCall()>();

        $r6 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall>;

        if $r5 != $r6 goto label1;

        $r22 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection[] mConnections>;

        r2 = $r22[i0];

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Notify new ring ");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaCallTracker: void log(java.lang.String)>($r25);

        goto label2;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Phantom call appeared ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("CdmaCallTracker", $r10);

        $r12 = r1.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.DriverCall$State state>;

        $r11 = <com.android.internal.telephony.DriverCall$State: com.android.internal.telephony.DriverCall$State ALERTING>;

        if $r12 == $r11 goto label2;

        $r13 = r1.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.DriverCall$State state>;

        $r14 = <com.android.internal.telephony.DriverCall$State: com.android.internal.telephony.DriverCall$State DIALING>;

        if $r13 == $r14 goto label2;

        $r16 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection[] mConnections>;

        $r15 = $r16[i0];

        virtualinvoke $r15.<com.android.internal.telephony.cdma.CdmaConnection: void onConnectedInOrOut()>();

        $r17 = r1.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.DriverCall$State state>;

        $r18 = <com.android.internal.telephony.DriverCall$State: com.android.internal.telephony.DriverCall$State HOLDING>;

        if $r17 != $r18 goto label2;

        $r20 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection[] mConnections>;

        $r19 = $r20[i0];

        virtualinvoke $r19.<com.android.internal.telephony.cdma.CdmaConnection: void onStartedHolding()>();

     label2:
        return r2;
    }

    boolean isInEmergencyCall()
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mIsInEmergencyCall>;

        return $z0;
    }

    protected void log(java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[CdmaCallTracker] ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CdmaCallTracker", $r5);

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.cdma.CdmaCallTracker r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.StringBuilder $r4, $r5, $r7, $r10, $r11, $r14, $r15, $r16, $r17, $r19, $r22, $r24, $r25, $r26, $r29, $r32, $r33, $r34, $r35, $r38, $r39, $r40, $r41, $r43, $r45, $r48, $r50, $r51, $r52, $r53, $r54, $r55, $r57, $r59, $r60, $r62, $r63, $r64, $r65, $r66, $r67, $r69, $r72, $r73, $r74, $r75, $r77, $r78, $r80, $r81, $r83;
        com.android.internal.telephony.cdma.CdmaConnection[] $r6, $r9, $r91;
        java.lang.String $r8, $r13, $r20, $r23, $r30, $r37, $r42, $r44, $r47, $r56, $r58, $r61, $r70, $r71, $r76, $r79, $r84;
        android.os.RegistrantList $r12, $r18, $r21;
        java.util.ArrayList $r27, $r28, $r87;
        com.android.internal.telephony.cdma.CdmaCall $r31, $r36, $r46;
        com.android.internal.telephony.cdma.CdmaConnection $r49, $r92;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.internal.telephony.cdma.CDMAPhone $r68;
        com.android.internal.telephony.PhoneConstants$State $r82;
        java.lang.Object $r85;
        java.lang.Integer $r88, $r93;
        java.lang.Object[] $r89, $r94;

        r0 := @this: com.android.internal.telephony.cdma.CdmaCallTracker;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("GsmCallTracker extends:");

        specialinvoke r0.<com.android.internal.telephony.CallTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("droppedDuringPoll: length=");

        $r6 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection[] mConnections>;

        $i1 = lengthof $r6;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        i0 = 0;

     label1:
        $r9 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection[] mConnections>;

        $i2 = lengthof $r9;

        if i0 >= $i2 goto label2;

        $r94 = newarray (java.lang.Object)[2];

        $r93 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r94[0] = $r93;

        $r91 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection[] mConnections>;

        $r92 = $r91[i0];

        $r94[1] = $r92;

        virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>(" mConnections[%d]=%s\n", $r94);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mVoiceCallEndedRegistrants=");

        $r12 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.RegistrantList mVoiceCallEndedRegistrants>;

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mVoiceCallStartedRegistrants=");

        $r18 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.RegistrantList mVoiceCallStartedRegistrants>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCallWaitingRegistrants=");

        $r21 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.RegistrantList mCallWaitingRegistrants>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r23);

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("droppedDuringPoll: size=");

        $r27 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        $i3 = virtualinvoke $r27.<java.util.ArrayList: int size()>();

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r30);

        i6 = 0;

     label3:
        $r28 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        $i4 = virtualinvoke $r28.<java.util.ArrayList: int size()>();

        if i6 >= $i4 goto label4;

        $r89 = newarray (java.lang.Object)[2];

        $r88 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        $r89[0] = $r88;

        $r87 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: java.util.ArrayList mDroppedDuringPoll>;

        $r85 = virtualinvoke $r87.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r89[1] = $r85;

        virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter printf(java.lang.String,java.lang.Object[])>(" mDroppedDuringPoll[%d]=%s\n", $r89);

        i6 = i6 + 1;

        goto label3;

     label4:
        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRingingCall=");

        $r31 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall>;

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r37);

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mForegroundCall=");

        $r36 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        $r41 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r36);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r42);

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mBackgroundCall=");

        $r46 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mBackgroundCall>;

        $r45 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r46);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r44);

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPendingMO=");

        $r49 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaConnection mPendingMO>;

        $r48 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r49);

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r47);

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mHangupPendingMO=");

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mHangupPendingMO>;

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r56 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r56);

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPendingCallInEcm=");

        $z1 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mPendingCallInEcm>;

        $r60 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r61);

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIsInEmergencyCall=");

        $z2 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mIsInEmergencyCall>;

        $r57 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r58);

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPhone=");

        $r68 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r69 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r68);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r70);

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mDesiredMute=");

        $z3 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mDesiredMute>;

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r76 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r76);

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPendingCallClirMode=");

        $i5 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: int mPendingCallClirMode>;

        $r72 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r71);

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mState=");

        $r82 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        $r81 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r82);

        $r84 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r84);

        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        $r78 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIsEcmTimerCanceled=");

        $z4 = r0.<com.android.internal.telephony.cdma.CdmaCallTracker: boolean mIsEcmTimerCanceled>;

        $r80 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r79 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r79);

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.cdma.CdmaCallTracker: int MAX_CONNECTIONS_PER_CALL> = 1;

        <com.android.internal.telephony.cdma.CdmaCallTracker: int MAX_CONNECTIONS> = 8;

        <com.android.internal.telephony.cdma.CdmaCallTracker: boolean DBG_POLL> = 0;

        <com.android.internal.telephony.cdma.CdmaCallTracker: boolean REPEAT_POLLING> = 0;

        <com.android.internal.telephony.cdma.CdmaCallTracker: java.lang.String LOG_TAG> = "CdmaCallTracker";

        return;
    }
}
