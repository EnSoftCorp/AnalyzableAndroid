public final class com.android.internal.telephony.CallManager extends java.lang.Object
{
    private static final java.lang.String LOG_TAG;
    private static final boolean DBG;
    private static final boolean VDBG;
    private static final int EVENT_DISCONNECT;
    private static final int EVENT_PRECISE_CALL_STATE_CHANGED;
    private static final int EVENT_NEW_RINGING_CONNECTION;
    private static final int EVENT_UNKNOWN_CONNECTION;
    private static final int EVENT_INCOMING_RING;
    private static final int EVENT_RINGBACK_TONE;
    private static final int EVENT_IN_CALL_VOICE_PRIVACY_ON;
    private static final int EVENT_IN_CALL_VOICE_PRIVACY_OFF;
    private static final int EVENT_CALL_WAITING;
    private static final int EVENT_DISPLAY_INFO;
    private static final int EVENT_SIGNAL_INFO;
    private static final int EVENT_CDMA_OTA_STATUS_CHANGE;
    private static final int EVENT_RESEND_INCALL_MUTE;
    private static final int EVENT_MMI_INITIATE;
    private static final int EVENT_MMI_COMPLETE;
    private static final int EVENT_ECM_TIMER_RESET;
    private static final int EVENT_SUBSCRIPTION_INFO_READY;
    private static final int EVENT_SUPP_SERVICE_FAILED;
    private static final int EVENT_SERVICE_STATE_CHANGED;
    private static final int EVENT_POST_DIAL_CHARACTER;
    private static final int EVENT_ONHOLD_TONE;
    private static final com.android.internal.telephony.CallManager INSTANCE;
    private final java.util.ArrayList mPhones;
    private final java.util.ArrayList mRingingCalls;
    private final java.util.ArrayList mBackgroundCalls;
    private final java.util.ArrayList mForegroundCalls;
    private final java.util.ArrayList mEmptyConnections;
    private final java.util.HashMap mHandlerMap;
    private com.android.internal.telephony.Phone mDefaultPhone;
    private boolean mSpeedUpAudioForMtCall;
    protected final android.os.RegistrantList mPreciseCallStateRegistrants;
    protected final android.os.RegistrantList mNewRingingConnectionRegistrants;
    protected final android.os.RegistrantList mIncomingRingRegistrants;
    protected final android.os.RegistrantList mDisconnectRegistrants;
    protected final android.os.RegistrantList mMmiRegistrants;
    protected final android.os.RegistrantList mUnknownConnectionRegistrants;
    protected final android.os.RegistrantList mRingbackToneRegistrants;
    protected final android.os.RegistrantList mOnHoldToneRegistrants;
    protected final android.os.RegistrantList mInCallVoicePrivacyOnRegistrants;
    protected final android.os.RegistrantList mInCallVoicePrivacyOffRegistrants;
    protected final android.os.RegistrantList mCallWaitingRegistrants;
    protected final android.os.RegistrantList mDisplayInfoRegistrants;
    protected final android.os.RegistrantList mSignalInfoRegistrants;
    protected final android.os.RegistrantList mCdmaOtaStatusChangeRegistrants;
    protected final android.os.RegistrantList mResendIncallMuteRegistrants;
    protected final android.os.RegistrantList mMmiInitiateRegistrants;
    protected final android.os.RegistrantList mMmiCompleteRegistrants;
    protected final android.os.RegistrantList mEcmTimerResetRegistrants;
    protected final android.os.RegistrantList mSubscriptionInfoReadyRegistrants;
    protected final android.os.RegistrantList mSuppServiceFailedRegistrants;
    protected final android.os.RegistrantList mServiceStateChangedRegistrants;
    protected final android.os.RegistrantList mPostDialCharacterRegistrants;

    private void <init>()
    {
        com.android.internal.telephony.CallManager r0;
        java.util.ArrayList $r1, $r24, $r26, $r27, $r28;
        java.util.HashMap $r2;
        android.os.RegistrantList $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r25;

        r0 := @this: com.android.internal.telephony.CallManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mEmptyConnections> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: java.util.HashMap mHandlerMap> = $r2;

        r0.<com.android.internal.telephony.CallManager: boolean mSpeedUpAudioForMtCall> = 0;

        $r3 = new android.os.RegistrantList;

        specialinvoke $r3.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mPreciseCallStateRegistrants> = $r3;

        $r4 = new android.os.RegistrantList;

        specialinvoke $r4.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mNewRingingConnectionRegistrants> = $r4;

        $r5 = new android.os.RegistrantList;

        specialinvoke $r5.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mIncomingRingRegistrants> = $r5;

        $r6 = new android.os.RegistrantList;

        specialinvoke $r6.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mDisconnectRegistrants> = $r6;

        $r7 = new android.os.RegistrantList;

        specialinvoke $r7.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mMmiRegistrants> = $r7;

        $r8 = new android.os.RegistrantList;

        specialinvoke $r8.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mUnknownConnectionRegistrants> = $r8;

        $r9 = new android.os.RegistrantList;

        specialinvoke $r9.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mRingbackToneRegistrants> = $r9;

        $r10 = new android.os.RegistrantList;

        specialinvoke $r10.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mOnHoldToneRegistrants> = $r10;

        $r11 = new android.os.RegistrantList;

        specialinvoke $r11.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mInCallVoicePrivacyOnRegistrants> = $r11;

        $r12 = new android.os.RegistrantList;

        specialinvoke $r12.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mInCallVoicePrivacyOffRegistrants> = $r12;

        $r13 = new android.os.RegistrantList;

        specialinvoke $r13.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mCallWaitingRegistrants> = $r13;

        $r14 = new android.os.RegistrantList;

        specialinvoke $r14.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mDisplayInfoRegistrants> = $r14;

        $r15 = new android.os.RegistrantList;

        specialinvoke $r15.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mSignalInfoRegistrants> = $r15;

        $r17 = new android.os.RegistrantList;

        specialinvoke $r17.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mCdmaOtaStatusChangeRegistrants> = $r17;

        $r16 = new android.os.RegistrantList;

        specialinvoke $r16.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mResendIncallMuteRegistrants> = $r16;

        $r19 = new android.os.RegistrantList;

        specialinvoke $r19.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mMmiInitiateRegistrants> = $r19;

        $r18 = new android.os.RegistrantList;

        specialinvoke $r18.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mMmiCompleteRegistrants> = $r18;

        $r21 = new android.os.RegistrantList;

        specialinvoke $r21.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mEcmTimerResetRegistrants> = $r21;

        $r20 = new android.os.RegistrantList;

        specialinvoke $r20.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mSubscriptionInfoReadyRegistrants> = $r20;

        $r23 = new android.os.RegistrantList;

        specialinvoke $r23.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mSuppServiceFailedRegistrants> = $r23;

        $r22 = new android.os.RegistrantList;

        specialinvoke $r22.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mServiceStateChangedRegistrants> = $r22;

        $r25 = new android.os.RegistrantList;

        specialinvoke $r25.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mPostDialCharacterRegistrants> = $r25;

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones> = $r24;

        $r27 = new java.util.ArrayList;

        specialinvoke $r27.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mRingingCalls> = $r27;

        $r26 = new java.util.ArrayList;

        specialinvoke $r26.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mBackgroundCalls> = $r26;

        $r28 = new java.util.ArrayList;

        specialinvoke $r28.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mForegroundCalls> = $r28;

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone mDefaultPhone> = null;

        return;
    }

    public static com.android.internal.telephony.CallManager getInstance()
    {
        com.android.internal.telephony.CallManager $r0;

        $r0 = <com.android.internal.telephony.CallManager: com.android.internal.telephony.CallManager INSTANCE>;

        return $r0;
    }

    private static com.android.internal.telephony.Phone getPhoneBase(com.android.internal.telephony.Phone)
    {
        com.android.internal.telephony.Phone r0, $r2;
        boolean $z0;
        com.android.internal.telephony.Call $r1;

        r0 := @parameter0: com.android.internal.telephony.Phone;

        $z0 = r0 instanceof com.android.internal.telephony.PhoneProxy;

        if $z0 == 0 goto label1;

        $r1 = interfaceinvoke r0.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getForegroundCall()>();

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        return $r2;

     label1:
        return r0;
    }

    public static boolean isSamePhone(com.android.internal.telephony.Phone, com.android.internal.telephony.Phone)
    {
        com.android.internal.telephony.Phone r0, r1, $r2, $r3;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.Phone;

        r1 := @parameter1: com.android.internal.telephony.Phone;

        $r2 = staticinvoke <com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getPhoneBase(com.android.internal.telephony.Phone)>(r0);

        $r3 = staticinvoke <com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getPhoneBase(com.android.internal.telephony.Phone)>(r1);

        if $r2 != $r3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.util.List getAllPhones()
    {
        com.android.internal.telephony.CallManager r0;
        java.util.ArrayList $r1;
        java.util.List $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r1 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    private com.android.internal.telephony.Phone getPhone(long)
    {
        com.android.internal.telephony.CallManager r0;
        long l0, $l1;
        com.android.internal.telephony.Phone r1, r3;
        java.util.Iterator r2;
        java.util.ArrayList $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;
        byte $b2;

        r0 := @this: com.android.internal.telephony.CallManager;

        l0 := @parameter0: long;

        r1 = null;

        $r4 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        r2 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.internal.telephony.Phone) $r5;

        $l1 = interfaceinvoke r3.<com.android.internal.telephony.Phone: long getSubId()>();

        $b2 = $l1 cmp l0;

        if $b2 != 0 goto label2;

        $z1 = r3 instanceof com.android.internal.telephony.imsphone.ImsPhone;

        if $z1 != 0 goto label2;

        r1 = r3;

        goto label3;

     label2:
        goto label1;

     label3:
        return r1;
    }

    public com.android.internal.telephony.PhoneConstants$State getState()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.PhoneConstants$State r1, $r6, $r7, $r8, $r9, $r10;
        java.util.Iterator r2;
        com.android.internal.telephony.Phone r3;
        java.util.ArrayList $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        $r4 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        r2 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.internal.telephony.Phone) $r5;

        $r6 = interfaceinvoke r3.<com.android.internal.telephony.Phone: com.android.internal.telephony.PhoneConstants$State getState()>();

        $r7 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State RINGING>;

        if $r6 != $r7 goto label2;

        r1 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State RINGING>;

        goto label3;

     label2:
        $r8 = interfaceinvoke r3.<com.android.internal.telephony.Phone: com.android.internal.telephony.PhoneConstants$State getState()>();

        $r9 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State OFFHOOK>;

        if $r8 != $r9 goto label3;

        $r10 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        if r1 != $r10 goto label3;

        r1 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State OFFHOOK>;

     label3:
        goto label1;

     label4:
        return r1;
    }

    public com.android.internal.telephony.PhoneConstants$State getState(long)
    {
        com.android.internal.telephony.CallManager r0;
        long l0, $l1;
        com.android.internal.telephony.PhoneConstants$State r1, $r6, $r7, $r8, $r9, $r10;
        java.util.Iterator r2;
        com.android.internal.telephony.Phone r3;
        java.util.ArrayList $r4;
        boolean $z0;
        java.lang.Object $r5;
        byte $b2;

        r0 := @this: com.android.internal.telephony.CallManager;

        l0 := @parameter0: long;

        r1 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        $r4 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        r2 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.internal.telephony.Phone) $r5;

        $l1 = interfaceinvoke r3.<com.android.internal.telephony.Phone: long getSubId()>();

        $b2 = $l1 cmp l0;

        if $b2 != 0 goto label3;

        $r6 = interfaceinvoke r3.<com.android.internal.telephony.Phone: com.android.internal.telephony.PhoneConstants$State getState()>();

        $r7 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State RINGING>;

        if $r6 != $r7 goto label2;

        r1 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State RINGING>;

        goto label3;

     label2:
        $r8 = interfaceinvoke r3.<com.android.internal.telephony.Phone: com.android.internal.telephony.PhoneConstants$State getState()>();

        $r9 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State OFFHOOK>;

        if $r8 != $r9 goto label3;

        $r10 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        if r1 != $r10 goto label3;

        r1 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State OFFHOOK>;

     label3:
        goto label1;

     label4:
        return r1;
    }

    public int getServiceState()
    {
        com.android.internal.telephony.CallManager r0;
        int i0, i1;
        java.util.Iterator r1;
        com.android.internal.telephony.Phone r2;
        java.util.ArrayList $r3;
        boolean $z0;
        java.lang.Object $r4;
        android.telephony.ServiceState $r5;

        r0 := @this: com.android.internal.telephony.CallManager;

        i0 = 1;

        $r3 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.internal.telephony.Phone) $r4;

        $r5 = interfaceinvoke r2.<com.android.internal.telephony.Phone: android.telephony.ServiceState getServiceState()>();

        i1 = virtualinvoke $r5.<android.telephony.ServiceState: int getState()>();

        if i1 != 0 goto label2;

        i0 = i1;

        goto label6;

     label2:
        if i1 != 1 goto label4;

        if i0 == 2 goto label3;

        if i0 != 3 goto label5;

     label3:
        i0 = i1;

        goto label5;

     label4:
        if i1 != 2 goto label5;

        if i0 != 3 goto label5;

        i0 = i1;

     label5:
        goto label1;

     label6:
        return i0;
    }

    public int getServiceState(long)
    {
        com.android.internal.telephony.CallManager r0;
        long l0, $l3;
        int i1, i2;
        java.util.Iterator r1;
        com.android.internal.telephony.Phone r2;
        java.util.ArrayList $r3;
        boolean $z0;
        java.lang.Object $r4;
        byte $b4;
        android.telephony.ServiceState $r5;

        r0 := @this: com.android.internal.telephony.CallManager;

        l0 := @parameter0: long;

        i1 = 1;

        $r3 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.internal.telephony.Phone) $r4;

        $l3 = interfaceinvoke r2.<com.android.internal.telephony.Phone: long getSubId()>();

        $b4 = $l3 cmp l0;

        if $b4 != 0 goto label5;

        $r5 = interfaceinvoke r2.<com.android.internal.telephony.Phone: android.telephony.ServiceState getServiceState()>();

        i2 = virtualinvoke $r5.<android.telephony.ServiceState: int getState()>();

        if i2 != 0 goto label2;

        i1 = i2;

        goto label6;

     label2:
        if i2 != 1 goto label4;

        if i1 == 2 goto label3;

        if i1 != 3 goto label5;

     label3:
        i1 = i2;

        goto label5;

     label4:
        if i2 != 2 goto label5;

        if i1 != 3 goto label5;

        i1 = i2;

     label5:
        goto label1;

     label6:
        return i1;
    }

    public com.android.internal.telephony.Phone getPhoneInCall()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call $r1, $r2, $r3, $r4, $r5;
        boolean $z0, $z1;
        com.android.internal.telephony.Phone r6;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveRingingCall()>();

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.Call: boolean isIdle()>();

        if $z0 != 0 goto label1;

        $r5 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveRingingCall()>();

        r6 = virtualinvoke $r5.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        goto label3;

     label1:
        $r2 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        $z1 = virtualinvoke $r2.<com.android.internal.telephony.Call: boolean isIdle()>();

        if $z1 != 0 goto label2;

        $r4 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        r6 = virtualinvoke $r4.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        goto label3;

     label2:
        $r3 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveBgCall()>();

        r6 = virtualinvoke $r3.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

     label3:
        return r6;
    }

    public com.android.internal.telephony.Phone getPhoneInCall(long)
    {
        com.android.internal.telephony.CallManager r0;
        long l0;
        com.android.internal.telephony.Call $r1, $r2, $r3, $r4, $r5;
        boolean $z0, $z1;
        com.android.internal.telephony.Phone r6;

        r0 := @this: com.android.internal.telephony.CallManager;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveRingingCall(long)>(l0);

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.Call: boolean isIdle()>();

        if $z0 != 0 goto label1;

        $r5 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveRingingCall(long)>(l0);

        r6 = virtualinvoke $r5.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        goto label3;

     label1:
        $r2 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall(long)>(l0);

        $z1 = virtualinvoke $r2.<com.android.internal.telephony.Call: boolean isIdle()>();

        if $z1 != 0 goto label2;

        $r4 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall(long)>(l0);

        r6 = virtualinvoke $r4.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        goto label3;

     label2:
        $r3 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveBgCall(long)>(l0);

        r6 = virtualinvoke $r3.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

     label3:
        return r6;
    }

    public boolean registerPhone(com.android.internal.telephony.Phone)
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Phone r1, r2;
        java.util.ArrayList $r3, $r12, $r13, $r15, $r16, $r19;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r9, $r10;
        java.lang.String $r6, $r11;
        com.android.internal.telephony.Call $r14, $r17, $r18;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Phone;

        r2 = staticinvoke <com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getPhoneBase(com.android.internal.telephony.Phone)>(r1);

        if r2 == null goto label2;

        $r3 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>(r2);

        if $z0 != 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("registerPhone(");

        $r6 = interfaceinvoke r1.<com.android.internal.telephony.Phone: java.lang.String getPhoneName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CallManager", $r11);

        $r12 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        $z1 = virtualinvoke $r12.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone mDefaultPhone> = r2;

     label1:
        $r13 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        $r15 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mRingingCalls>;

        $r14 = interfaceinvoke r2.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getRingingCall()>();

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

        $r16 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mBackgroundCalls>;

        $r17 = interfaceinvoke r2.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getBackgroundCall()>();

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);

        $r19 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mForegroundCalls>;

        $r18 = interfaceinvoke r2.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getForegroundCall()>();

        virtualinvoke $r19.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

        specialinvoke r0.<com.android.internal.telephony.CallManager: void registerForPhoneStates(com.android.internal.telephony.Phone)>(r2);

        return 1;

     label2:
        return 0;
    }

    public void unregisterPhone(com.android.internal.telephony.Phone)
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Phone r1, r2, r3, $r20, $r22;
        java.util.ArrayList $r4, $r13, $r15, $r16, $r19, $r21, $r23;
        boolean $z0, $z5;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r10, $r11;
        java.lang.String $r7, $r12;
        com.android.internal.telephony.Call $r14, $r17, $r18;
        java.lang.Object $r24;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Phone;

        r2 = staticinvoke <com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getPhoneBase(com.android.internal.telephony.Phone)>(r1);

        if r2 == null goto label3;

        $r4 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean contains(java.lang.Object)>(r2);

        if $z0 == 0 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unregisterPhone(");

        $r7 = interfaceinvoke r1.<com.android.internal.telephony.Phone: java.lang.String getPhoneName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CallManager", $r12);

        r3 = interfaceinvoke r2.<com.android.internal.telephony.Phone: com.android.internal.telephony.Phone getImsPhone()>();

        if r3 == null goto label1;

        virtualinvoke r0.<com.android.internal.telephony.CallManager: void unregisterPhone(com.android.internal.telephony.Phone)>(r3);

     label1:
        $r13 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        virtualinvoke $r13.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

        $r15 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mRingingCalls>;

        $r14 = interfaceinvoke r2.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getRingingCall()>();

        virtualinvoke $r15.<java.util.ArrayList: boolean remove(java.lang.Object)>($r14);

        $r16 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mBackgroundCalls>;

        $r17 = interfaceinvoke r2.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getBackgroundCall()>();

        virtualinvoke $r16.<java.util.ArrayList: boolean remove(java.lang.Object)>($r17);

        $r19 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mForegroundCalls>;

        $r18 = interfaceinvoke r2.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getForegroundCall()>();

        virtualinvoke $r19.<java.util.ArrayList: boolean remove(java.lang.Object)>($r18);

        specialinvoke r0.<com.android.internal.telephony.CallManager: void unregisterForPhoneStates(com.android.internal.telephony.Phone)>(r2);

        $r20 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone mDefaultPhone>;

        if r2 != $r20 goto label3;

        $r21 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        $z5 = virtualinvoke $r21.<java.util.ArrayList: boolean isEmpty()>();

        if $z5 == 0 goto label2;

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone mDefaultPhone> = null;

        goto label3;

     label2:
        $r23 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        $r24 = virtualinvoke $r23.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r22 = (com.android.internal.telephony.Phone) $r24;

        r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone mDefaultPhone> = $r22;

     label3:
        return;
    }

    public com.android.internal.telephony.Phone getDefaultPhone()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r1 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone mDefaultPhone>;

        return $r1;
    }

    public com.android.internal.telephony.Phone getFgPhone()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call $r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        return $r2;
    }

    public com.android.internal.telephony.Phone getFgPhone(long)
    {
        com.android.internal.telephony.CallManager r0;
        long l0;
        com.android.internal.telephony.Call $r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall(long)>(l0);

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        return $r2;
    }

    public com.android.internal.telephony.Phone getBgPhone()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call $r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveBgCall()>();

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        return $r2;
    }

    public com.android.internal.telephony.Phone getBgPhone(long)
    {
        com.android.internal.telephony.CallManager r0;
        long l0;
        com.android.internal.telephony.Call $r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveBgCall(long)>(l0);

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        return $r2;
    }

    public com.android.internal.telephony.Phone getRingingPhone()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call $r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveRingingCall()>();

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        return $r2;
    }

    public com.android.internal.telephony.Phone getRingingPhone(long)
    {
        com.android.internal.telephony.CallManager r0;
        long l0;
        com.android.internal.telephony.Call $r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveRingingCall(long)>(l0);

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        return $r2;
    }

    private android.content.Context getContext()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Phone r1;
        android.content.Context $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getDefaultPhone()>();

        if r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = interfaceinvoke r1.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

     label2:
        return $r2;
    }

    private void registerForPhoneStates(com.android.internal.telephony.Phone)
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Phone r1;
        com.android.internal.telephony.CallManager$CallManagerHandler r2, $r5, r8;
        java.util.HashMap $r3, $r6;
        java.lang.Object $r4;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Phone;

        $r3 = r0.<com.android.internal.telephony.CallManager: java.util.HashMap mHandlerMap>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.internal.telephony.CallManager$CallManagerHandler) $r4;

        if r2 == null goto label1;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CallManager", "This phone has already been registered.");

        return;

     label1:
        $r5 = new com.android.internal.telephony.CallManager$CallManagerHandler;

        specialinvoke $r5.<com.android.internal.telephony.CallManager$CallManagerHandler: void <init>(com.android.internal.telephony.CallManager,com.android.internal.telephony.CallManager$1)>(r0, null);

        r8 = $r5;

        $r6 = r0.<com.android.internal.telephony.CallManager: java.util.HashMap mHandlerMap>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r8);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void registerForPreciseCallStateChanged(android.os.Handler,int,java.lang.Object)>(r8, 101, null);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void registerForDisconnect(android.os.Handler,int,java.lang.Object)>(r8, 100, null);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void registerForNewRingingConnection(android.os.Handler,int,java.lang.Object)>(r8, 102, null);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void registerForUnknownConnection(android.os.Handler,int,java.lang.Object)>(r8, 103, null);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void registerForIncomingRing(android.os.Handler,int,java.lang.Object)>(r8, 104, null);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void registerForRingbackTone(android.os.Handler,int,java.lang.Object)>(r8, 105, null);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void registerForInCallVoicePrivacyOn(android.os.Handler,int,java.lang.Object)>(r8, 106, null);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void registerForInCallVoicePrivacyOff(android.os.Handler,int,java.lang.Object)>(r8, 107, null);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void registerForDisplayInfo(android.os.Handler,int,java.lang.Object)>(r8, 109, null);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void registerForSignalInfo(android.os.Handler,int,java.lang.Object)>(r8, 110, null);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void registerForResendIncallMute(android.os.Handler,int,java.lang.Object)>(r8, 112, null);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void registerForMmiInitiate(android.os.Handler,int,java.lang.Object)>(r8, 113, null);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void registerForMmiComplete(android.os.Handler,int,java.lang.Object)>(r8, 114, null);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void registerForSuppServiceFailed(android.os.Handler,int,java.lang.Object)>(r8, 117, null);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void registerForServiceStateChanged(android.os.Handler,int,java.lang.Object)>(r8, 118, null);

        $i0 = interfaceinvoke r1.<com.android.internal.telephony.Phone: int getPhoneType()>();

        if $i0 == 1 goto label2;

        $i3 = interfaceinvoke r1.<com.android.internal.telephony.Phone: int getPhoneType()>();

        if $i3 == 2 goto label2;

        $i4 = interfaceinvoke r1.<com.android.internal.telephony.Phone: int getPhoneType()>();

        if $i4 != 5 goto label3;

     label2:
        interfaceinvoke r1.<com.android.internal.telephony.Phone: void setOnPostDialCharacter(android.os.Handler,int,java.lang.Object)>(r8, 119, null);

     label3:
        $i1 = interfaceinvoke r1.<com.android.internal.telephony.Phone: int getPhoneType()>();

        if $i1 != 2 goto label4;

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void registerForCdmaOtaStatusChange(android.os.Handler,int,java.lang.Object)>(r8, 111, null);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void registerForSubscriptionInfoReady(android.os.Handler,int,java.lang.Object)>(r8, 116, null);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void registerForCallWaiting(android.os.Handler,int,java.lang.Object)>(r8, 108, null);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void registerForEcmTimerReset(android.os.Handler,int,java.lang.Object)>(r8, 115, null);

     label4:
        $i2 = interfaceinvoke r1.<com.android.internal.telephony.Phone: int getPhoneType()>();

        if $i2 != 5 goto label5;

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void registerForOnHoldTone(android.os.Handler,int,java.lang.Object)>(r8, 120, null);

     label5:
        return;
    }

    private void unregisterForPhoneStates(com.android.internal.telephony.Phone)
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Phone r1;
        com.android.internal.telephony.CallManager$CallManagerHandler r2;
        java.util.HashMap $r3, $r5;
        java.lang.Object $r4;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Phone;

        $r3 = r0.<com.android.internal.telephony.CallManager: java.util.HashMap mHandlerMap>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.internal.telephony.CallManager$CallManagerHandler) $r4;

        if r2 == null goto label1;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("CallManager", "Could not find Phone handler for unregistration");

        return;

     label1:
        $r5 = r0.<com.android.internal.telephony.CallManager: java.util.HashMap mHandlerMap>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void unregisterForPreciseCallStateChanged(android.os.Handler)>(r2);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void unregisterForDisconnect(android.os.Handler)>(r2);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void unregisterForNewRingingConnection(android.os.Handler)>(r2);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void unregisterForUnknownConnection(android.os.Handler)>(r2);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void unregisterForIncomingRing(android.os.Handler)>(r2);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void unregisterForRingbackTone(android.os.Handler)>(r2);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void unregisterForInCallVoicePrivacyOn(android.os.Handler)>(r2);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void unregisterForInCallVoicePrivacyOff(android.os.Handler)>(r2);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void unregisterForDisplayInfo(android.os.Handler)>(r2);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void unregisterForSignalInfo(android.os.Handler)>(r2);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void unregisterForResendIncallMute(android.os.Handler)>(r2);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void unregisterForMmiInitiate(android.os.Handler)>(r2);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void unregisterForMmiComplete(android.os.Handler)>(r2);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void unregisterForSuppServiceFailed(android.os.Handler)>(r2);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void unregisterForServiceStateChanged(android.os.Handler)>(r2);

        $i0 = interfaceinvoke r1.<com.android.internal.telephony.Phone: int getPhoneType()>();

        if $i0 == 1 goto label2;

        $i3 = interfaceinvoke r1.<com.android.internal.telephony.Phone: int getPhoneType()>();

        if $i3 == 2 goto label2;

        $i4 = interfaceinvoke r1.<com.android.internal.telephony.Phone: int getPhoneType()>();

        if $i4 != 5 goto label3;

     label2:
        interfaceinvoke r1.<com.android.internal.telephony.Phone: void setOnPostDialCharacter(android.os.Handler,int,java.lang.Object)>(null, 119, null);

     label3:
        $i1 = interfaceinvoke r1.<com.android.internal.telephony.Phone: int getPhoneType()>();

        if $i1 != 2 goto label4;

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void unregisterForCdmaOtaStatusChange(android.os.Handler)>(r2);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void unregisterForSubscriptionInfoReady(android.os.Handler)>(r2);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void unregisterForCallWaiting(android.os.Handler)>(r2);

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void unregisterForEcmTimerReset(android.os.Handler)>(r2);

     label4:
        $i2 = interfaceinvoke r1.<com.android.internal.telephony.Phone: int getPhoneType()>();

        if $i2 != 5 goto label5;

        interfaceinvoke r1.<com.android.internal.telephony.Phone: void unregisterForOnHoldTone(android.os.Handler)>(r2);

     label5:
        return;
    }

    public void acceptCall(com.android.internal.telephony.Call) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1, $r4, $r5, $r6, $r7;
        com.android.internal.telephony.Phone r2, r3;
        boolean z0, z1, $z2, $z3, $z4, $z5;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Call;

        r2 = virtualinvoke r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $z2 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveFgCall()>();

        if $z2 == 0 goto label7;

        $r4 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        r3 = virtualinvoke $r4.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $r5 = interfaceinvoke r3.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getBackgroundCall()>();

        $z3 = virtualinvoke $r5.<com.android.internal.telephony.Call: boolean isIdle()>();

        if $z3 != 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        z0 = $z5;

        if r3 != r2 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        z1 = $z4;

        if z1 == 0 goto label5;

        if z0 == 0 goto label5;

        $r7 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        virtualinvoke $r7.<com.android.internal.telephony.Call: void hangup()>();

        goto label7;

     label5:
        if z1 != 0 goto label6;

        if z0 != 0 goto label6;

        interfaceinvoke r3.<com.android.internal.telephony.Phone: void switchHoldingAndActive()>();

        goto label7;

     label6:
        if z1 != 0 goto label7;

        if z0 == 0 goto label7;

        $r6 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        virtualinvoke $r6.<com.android.internal.telephony.Call: void hangup()>();

     label7:
        interfaceinvoke r2.<com.android.internal.telephony.Phone: void acceptCall(int)>(0);

        return;
    }

    public void rejectCall(com.android.internal.telephony.Call) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1;
        com.android.internal.telephony.Phone r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Call;

        r2 = virtualinvoke r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        interfaceinvoke r2.<com.android.internal.telephony.Phone: void rejectCall()>();

        return;
    }

    public void switchHoldingAndActive(com.android.internal.telephony.Call) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1, $r4;
        com.android.internal.telephony.Phone r2, r3;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Call;

        r2 = null;

        r3 = null;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveFgCall()>();

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        r2 = virtualinvoke $r4.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

     label1:
        if r1 == null goto label2;

        r3 = virtualinvoke r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

     label2:
        if r2 == null goto label3;

        interfaceinvoke r2.<com.android.internal.telephony.Phone: void switchHoldingAndActive()>();

     label3:
        if r3 == null goto label4;

        if r3 == r2 goto label4;

        interfaceinvoke r3.<com.android.internal.telephony.Phone: void switchHoldingAndActive()>();

     label4:
        return;
    }

    public void hangupForegroundResumeBackground(com.android.internal.telephony.Call) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1, $r2, $r3;
        boolean $z0;
        com.android.internal.telephony.Phone r4, r5;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Call;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveFgCall()>();

        if $z0 == 0 goto label2;

        r4 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getFgPhone()>();

        if r1 == null goto label2;

        r5 = virtualinvoke r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        if r4 != r5 goto label1;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        virtualinvoke $r3.<com.android.internal.telephony.Call: void hangup()>();

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        virtualinvoke $r2.<com.android.internal.telephony.Call: void hangup()>();

        virtualinvoke r0.<com.android.internal.telephony.CallManager: void switchHoldingAndActive(com.android.internal.telephony.Call)>(r1);

     label2:
        return;
    }

    public boolean canConference(com.android.internal.telephony.Call)
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1, $r6;
        com.android.internal.telephony.Phone r2, r3;
        boolean $z0, $z1;
        java.lang.Class $r4, $r5;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Call;

        r2 = null;

        r3 = null;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveFgCall()>();

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        r2 = virtualinvoke $r6.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

     label1:
        if r1 == null goto label2;

        r3 = virtualinvoke r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

     label2:
        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        return $z1;
    }

    public boolean canConference(com.android.internal.telephony.Call, long)
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1, $r6;
        long l0;
        com.android.internal.telephony.Phone r2, r3;
        boolean $z0, $z1;
        java.lang.Class $r4, $r5;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Call;

        l0 := @parameter1: long;

        r2 = null;

        r3 = null;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveFgCall(long)>(l0);

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall(long)>(l0);

        r2 = virtualinvoke $r6.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

     label1:
        if r1 == null goto label2;

        r3 = virtualinvoke r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

     label2:
        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        return $z1;
    }

    public void conference(com.android.internal.telephony.Call) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1;
        long l0;
        com.android.internal.telephony.Phone r2, $r3;
        boolean $z0, $z1;
        com.android.internal.telephony.CallStateException $r4;
        com.android.internal.telephony.sip.SipPhone $r5;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Call;

        $r3 = virtualinvoke r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        l0 = interfaceinvoke $r3.<com.android.internal.telephony.Phone: long getSubId()>();

        r2 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getFgPhone(long)>(l0);

        if r2 == null goto label3;

        $z0 = r2 instanceof com.android.internal.telephony.sip.SipPhone;

        if $z0 == 0 goto label1;

        $r5 = (com.android.internal.telephony.sip.SipPhone) r2;

        virtualinvoke $r5.<com.android.internal.telephony.sip.SipPhone: void conference(com.android.internal.telephony.Call)>(r1);

        goto label4;

     label1:
        $z1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean canConference(com.android.internal.telephony.Call)>(r1);

        if $z1 == 0 goto label2;

        interfaceinvoke r2.<com.android.internal.telephony.Phone: void conference()>();

        goto label4;

     label2:
        $r4 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r4.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("Can\'t conference foreground and selected background call");

        throw $r4;

     label3:
        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CallManager", "conference: fgPhone=null");

     label4:
        return;
    }

    public com.android.internal.telephony.Connection dial(com.android.internal.telephony.Phone, java.lang.String, int) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Phone r1, r3, r6, r18;
        java.lang.String r2, r5, $r15;
        int i0;
        long l1;
        com.android.internal.telephony.Connection r4;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.android.internal.telephony.Call $r7, $r8, $r16;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14;
        com.android.internal.telephony.CallStateException $r17;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Phone;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 = staticinvoke <com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getPhoneBase(com.android.internal.telephony.Phone)>(r1);

        l1 = interfaceinvoke r1.<com.android.internal.telephony.Phone: long getSubId()>();

        $z1 = specialinvoke r0.<com.android.internal.telephony.CallManager: boolean canDial(com.android.internal.telephony.Phone)>(r1);

        if $z1 != 0 goto label2;

        r5 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String stripSeparators(java.lang.String)>(r2);

        $z4 = interfaceinvoke r3.<com.android.internal.telephony.Phone: boolean handleInCallMmiCommands(java.lang.String)>(r5);

        if $z4 == 0 goto label1;

        return null;

     label1:
        $r17 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r17.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("cannot dial in current state");

        throw $r17;

     label2:
        $z2 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveFgCall(long)>(l1);

        if $z2 == 0 goto label9;

        $r7 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall(long)>(l1);

        r18 = virtualinvoke $r7.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $r8 = interfaceinvoke r18.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getBackgroundCall()>();

        $z3 = virtualinvoke $r8.<com.android.internal.telephony.Call: boolean isIdle()>();

        if $z3 != 0 goto label3;

        $z6 = 1;

        goto label4;

     label3:
        $z6 = 0;

     label4:
        z0 = $z6;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hasBgCall: ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sameChannel:");

        if r18 != r3 goto label5;

        $z5 = 1;

        goto label6;

     label5:
        $z5 = 0;

     label6:
        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CallManager", $r15);

        r6 = interfaceinvoke r3.<com.android.internal.telephony.Phone: com.android.internal.telephony.Phone getImsPhone()>();

        if r18 == r3 goto label9;

        if r6 == null goto label7;

        if r6 == r18 goto label9;

     label7:
        if z0 == 0 goto label8;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CallManager", "Hangup");

        $r16 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall(long)>(l1);

        virtualinvoke $r16.<com.android.internal.telephony.Call: void hangup()>();

        goto label9;

     label8:
        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CallManager", "Switch");

        interfaceinvoke r18.<com.android.internal.telephony.Phone: void switchHoldingAndActive()>();

     label9:
        r4 = interfaceinvoke r3.<com.android.internal.telephony.Phone: com.android.internal.telephony.Connection dial(java.lang.String,int)>(r2, i0);

        return r4;
    }

    public com.android.internal.telephony.Connection dial(com.android.internal.telephony.Phone, java.lang.String, com.android.internal.telephony.UUSInfo, int) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Phone r1;
        java.lang.String r2;
        com.android.internal.telephony.UUSInfo r3;
        int i0;
        com.android.internal.telephony.Connection $r4;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Phone;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.android.internal.telephony.UUSInfo;

        i0 := @parameter3: int;

        $r4 = interfaceinvoke r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo,int)>(r2, r3, i0);

        return $r4;
    }

    public void clearDisconnected()
    {
        com.android.internal.telephony.CallManager r0;
        java.util.Iterator r1;
        com.android.internal.telephony.Phone r2;
        java.util.ArrayList $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r3 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.internal.telephony.Phone) $r4;

        interfaceinvoke r2.<com.android.internal.telephony.Phone: void clearDisconnected()>();

        goto label1;

     label2:
        return;
    }

    public void clearDisconnected(long)
    {
        com.android.internal.telephony.CallManager r0;
        long l0, $l1;
        java.util.Iterator r1;
        com.android.internal.telephony.Phone r2;
        java.util.ArrayList $r3;
        boolean $z0;
        java.lang.Object $r4;
        byte $b2;

        r0 := @this: com.android.internal.telephony.CallManager;

        l0 := @parameter0: long;

        $r3 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mPhones>;

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.internal.telephony.Phone) $r4;

        $l1 = interfaceinvoke r2.<com.android.internal.telephony.Phone: long getSubId()>();

        $b2 = $l1 cmp l0;

        if $b2 != 0 goto label2;

        interfaceinvoke r2.<com.android.internal.telephony.Phone: void clearDisconnected()>();

     label2:
        goto label1;

     label3:
        return;
    }

    private boolean canDial(com.android.internal.telephony.Phone)
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Phone r1;
        int i0;
        long l1;
        boolean z0, z1, $z2;
        com.android.internal.telephony.Call$State r2, $r12, $r13, $r14, $r15;
        android.telephony.ServiceState $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r11;
        java.lang.String $r10;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Phone;

        $r3 = interfaceinvoke r1.<com.android.internal.telephony.Phone: android.telephony.ServiceState getServiceState()>();

        i0 = virtualinvoke $r3.<android.telephony.ServiceState: int getState()>();

        l1 = interfaceinvoke r1.<com.android.internal.telephony.Phone: long getSubId()>();

        z0 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveRingingCall()>();

        r2 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call$State getActiveFgCallState(long)>(l1);

        if i0 == 3 goto label2;

        if z0 != 0 goto label2;

        $r12 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if r2 == $r12 goto label1;

        $r13 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        if r2 == $r13 goto label1;

        $r15 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        if r2 == $r15 goto label1;

        $r14 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ALERTING>;

        if r2 != $r14 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z1 = $z2;

        if z1 != 0 goto label4;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("canDial serviceState=");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasRingingCall=");

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fgCallState=");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CallManager", $r10);

     label4:
        return z1;
    }

    public boolean canTransfer(com.android.internal.telephony.Call)
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1, $r4;
        com.android.internal.telephony.Phone r2, r3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Call;

        r2 = null;

        r3 = null;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveFgCall()>();

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        r2 = virtualinvoke $r4.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

     label1:
        if r1 == null goto label2;

        r3 = virtualinvoke r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

     label2:
        if r3 != r2 goto label3;

        $z1 = interfaceinvoke r2.<com.android.internal.telephony.Phone: boolean canTransfer()>();

        if $z1 == 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    public boolean canTransfer(com.android.internal.telephony.Call, long)
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1, $r4;
        long l0;
        com.android.internal.telephony.Phone r2, r3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Call;

        l0 := @parameter1: long;

        r2 = null;

        r3 = null;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveFgCall(long)>(l0);

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall(long)>(l0);

        r2 = virtualinvoke $r4.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

     label1:
        if r1 == null goto label2;

        r3 = virtualinvoke r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

     label2:
        if r3 != r2 goto label3;

        $z1 = interfaceinvoke r2.<com.android.internal.telephony.Phone: boolean canTransfer()>();

        if $z1 == 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    public void explicitCallTransfer(com.android.internal.telephony.Call) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1;
        boolean $z0;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Call;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean canTransfer(com.android.internal.telephony.Call)>(r1);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void explicitCallTransfer()>();

     label1:
        return;
    }

    public java.util.List getPendingMmiCodes(com.android.internal.telephony.Phone)
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Phone r1;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Phone;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("CallManager", "getPendingMmiCodes not implemented");

        return null;
    }

    public boolean sendUssdResponse(com.android.internal.telephony.Phone, java.lang.String)
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Phone r1;
        java.lang.String r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: com.android.internal.telephony.Phone;

        r2 := @parameter1: java.lang.String;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("CallManager", "sendUssdResponse not implemented");

        return 0;
    }

    public void setMute(boolean)
    {
        com.android.internal.telephony.CallManager r0;
        boolean z0, $z1;
        com.android.internal.telephony.Call $r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveFgCall()>();

        if $z1 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void setMute(boolean)>(z0);

     label1:
        return;
    }

    public boolean getMute()
    {
        com.android.internal.telephony.CallManager r0;
        boolean $z0, $z1, $z2, $z3;
        com.android.internal.telephony.Call $r1, $r3;
        com.android.internal.telephony.Phone $r2, $r4;

        r0 := @this: com.android.internal.telephony.CallManager;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveFgCall()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $z3 = interfaceinvoke $r4.<com.android.internal.telephony.Phone: boolean getMute()>();

        return $z3;

     label1:
        $z1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveBgCall()>();

        if $z1 == 0 goto label2;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveBgCall()>();

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $z2 = interfaceinvoke $r2.<com.android.internal.telephony.Phone: boolean getMute()>();

        return $z2;

     label2:
        return 0;
    }

    public void setEchoSuppressionEnabled()
    {
        com.android.internal.telephony.CallManager r0;
        boolean $z0;
        com.android.internal.telephony.Call $r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveFgCall()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void setEchoSuppressionEnabled()>();

     label1:
        return;
    }

    public boolean sendDtmf(char)
    {
        com.android.internal.telephony.CallManager r0;
        char c0;
        boolean z0, $z1;
        com.android.internal.telephony.Call $r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        c0 := @parameter0: char;

        z0 = 0;

        $z1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveFgCall()>();

        if $z1 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void sendDtmf(char)>(c0);

        z0 = 1;

     label1:
        return z0;
    }

    public boolean startDtmf(char)
    {
        com.android.internal.telephony.CallManager r0;
        char c0;
        boolean z0, $z1;
        com.android.internal.telephony.Call $r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        c0 := @parameter0: char;

        z0 = 0;

        $z1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveFgCall()>();

        if $z1 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void startDtmf(char)>(c0);

        z0 = 1;

     label1:
        return z0;
    }

    public void stopDtmf()
    {
        com.android.internal.telephony.CallManager r0;
        boolean $z0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.CallManager;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveFgCall()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getFgPhone()>();

        interfaceinvoke $r1.<com.android.internal.telephony.Phone: void stopDtmf()>();

     label1:
        return;
    }

    public boolean sendBurstDtmf(java.lang.String, int, int, android.os.Message)
    {
        com.android.internal.telephony.CallManager r0;
        java.lang.String r1;
        int i0, i1;
        android.os.Message r2;
        boolean $z0;
        com.android.internal.telephony.Call $r3;
        com.android.internal.telephony.Phone $r4;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.os.Message;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.CallManager: boolean hasActiveFgCall()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        interfaceinvoke $r4.<com.android.internal.telephony.Phone: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>(r1, i0, i1, r2);

        return 1;

     label1:
        return 0;
    }

    public void registerForDisconnect(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mDisconnectRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void unregisterForDisconnect(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mDisconnectRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForPreciseCallStateChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mPreciseCallStateRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void unregisterForPreciseCallStateChanged(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mPreciseCallStateRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForUnknownConnection(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mUnknownConnectionRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void unregisterForUnknownConnection(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mUnknownConnectionRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForNewRingingConnection(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mNewRingingConnectionRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void unregisterForNewRingingConnection(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mNewRingingConnectionRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForIncomingRing(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mIncomingRingRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void unregisterForIncomingRing(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mIncomingRingRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForRingbackTone(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mRingbackToneRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void unregisterForRingbackTone(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mRingbackToneRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForOnHoldTone(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mOnHoldToneRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void unregisterForOnHoldTone(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mOnHoldToneRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForResendIncallMute(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mResendIncallMuteRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void unregisterForResendIncallMute(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mResendIncallMuteRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForMmiInitiate(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mMmiInitiateRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void unregisterForMmiInitiate(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mMmiInitiateRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForMmiComplete(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mMmiCompleteRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void unregisterForMmiComplete(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mMmiCompleteRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForEcmTimerReset(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mEcmTimerResetRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void unregisterForEcmTimerReset(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mEcmTimerResetRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForServiceStateChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mServiceStateChangedRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void unregisterForServiceStateChanged(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mServiceStateChangedRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForSuppServiceFailed(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mSuppServiceFailedRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void unregisterForSuppServiceFailed(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mSuppServiceFailedRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForInCallVoicePrivacyOn(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mInCallVoicePrivacyOnRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void unregisterForInCallVoicePrivacyOn(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mInCallVoicePrivacyOnRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForInCallVoicePrivacyOff(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mInCallVoicePrivacyOffRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void unregisterForInCallVoicePrivacyOff(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mInCallVoicePrivacyOffRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForCallWaiting(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mCallWaitingRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void unregisterForCallWaiting(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mCallWaitingRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForSignalInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mSignalInfoRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void unregisterForSignalInfo(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mSignalInfoRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForDisplayInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mDisplayInfoRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void unregisterForDisplayInfo(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mDisplayInfoRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForCdmaOtaStatusChange(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mCdmaOtaStatusChangeRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void unregisterForCdmaOtaStatusChange(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mCdmaOtaStatusChangeRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForSubscriptionInfoReady(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mSubscriptionInfoReadyRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void unregisterForSubscriptionInfoReady(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mSubscriptionInfoReadyRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void registerForPostDialCharacter(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mPostDialCharacterRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void unregisterForPostDialCharacter(android.os.Handler)
    {
        com.android.internal.telephony.CallManager r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.CallManager: android.os.RegistrantList mPostDialCharacterRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public java.util.List getRingingCalls()
    {
        com.android.internal.telephony.CallManager r0;
        java.util.ArrayList $r1;
        java.util.List $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r1 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mRingingCalls>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public java.util.List getForegroundCalls()
    {
        com.android.internal.telephony.CallManager r0;
        java.util.ArrayList $r1;
        java.util.List $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r1 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mForegroundCalls>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public java.util.List getBackgroundCalls()
    {
        com.android.internal.telephony.CallManager r0;
        java.util.ArrayList $r1;
        java.util.List $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r1 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mBackgroundCalls>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public boolean hasActiveFgCall()
    {
        com.android.internal.telephony.CallManager r0;
        java.util.ArrayList $r1;
        com.android.internal.telephony.Call $r2;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r1 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mForegroundCalls>;

        $r2 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveCall(java.util.ArrayList)>($r1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasActiveFgCall(long)
    {
        com.android.internal.telephony.CallManager r0;
        long l0;
        java.util.ArrayList $r1;
        com.android.internal.telephony.Call $r2;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.CallManager;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mForegroundCalls>;

        $r2 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveCall(java.util.ArrayList,long)>($r1, l0);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasActiveBgCall()
    {
        com.android.internal.telephony.CallManager r0;
        java.util.ArrayList $r1;
        com.android.internal.telephony.Call $r2;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r1 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mBackgroundCalls>;

        $r2 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveCall(java.util.ArrayList)>($r1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasActiveBgCall(long)
    {
        com.android.internal.telephony.CallManager r0;
        long l0;
        java.util.ArrayList $r1;
        com.android.internal.telephony.Call $r2;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.CallManager;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mBackgroundCalls>;

        $r2 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveCall(java.util.ArrayList,long)>($r1, l0);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasActiveRingingCall()
    {
        com.android.internal.telephony.CallManager r0;
        java.util.ArrayList $r1;
        com.android.internal.telephony.Call $r2;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r1 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mRingingCalls>;

        $r2 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveCall(java.util.ArrayList)>($r1);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasActiveRingingCall(long)
    {
        com.android.internal.telephony.CallManager r0;
        long l0;
        java.util.ArrayList $r1;
        com.android.internal.telephony.Call $r2;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.CallManager;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mRingingCalls>;

        $r2 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveCall(java.util.ArrayList,long)>($r1, l0);

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public com.android.internal.telephony.Call getActiveFgCall()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1, $r5;
        java.util.ArrayList $r2;
        com.android.internal.telephony.Phone $r3, $r4;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r2 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mForegroundCalls>;

        r1 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstNonIdleCall(java.util.List)>($r2);

        if r1 != null goto label3;

        $r3 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone mDefaultPhone>;

        if $r3 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r4 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone mDefaultPhone>;

        $r5 = interfaceinvoke $r4.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getForegroundCall()>();

     label2:
        r1 = $r5;

     label3:
        return r1;
    }

    public com.android.internal.telephony.Call getActiveFgCall(long)
    {
        com.android.internal.telephony.CallManager r0;
        long l0;
        com.android.internal.telephony.Call r1, $r4;
        com.android.internal.telephony.Phone r2;
        java.util.ArrayList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        l0 := @parameter0: long;

        $r3 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mForegroundCalls>;

        r1 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstNonIdleCall(java.util.List,long)>($r3, l0);

        if r1 != null goto label3;

        r2 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getPhone(long)>(l0);

        if r2 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r4 = interfaceinvoke r2.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getForegroundCall()>();

     label2:
        r1 = $r4;

     label3:
        return r1;
    }

    private com.android.internal.telephony.Call getFirstNonIdleCall(java.util.List)
    {
        com.android.internal.telephony.CallManager r0;
        java.util.List r1;
        com.android.internal.telephony.Call r2, r4;
        java.util.Iterator r3;
        boolean $z0, $z1;
        java.lang.Object $r5;
        com.android.internal.telephony.Call$State $r6, $r7;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: java.util.List;

        r2 = null;

        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.internal.telephony.Call) $r5;

        $z1 = virtualinvoke r4.<com.android.internal.telephony.Call: boolean isIdle()>();

        if $z1 != 0 goto label2;

        return r4;

     label2:
        $r6 = virtualinvoke r4.<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>();

        $r7 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        if $r6 == $r7 goto label3;

        if r2 != null goto label3;

        r2 = r4;

     label3:
        goto label1;

     label4:
        return r2;
    }

    private com.android.internal.telephony.Call getFirstNonIdleCall(java.util.List, long)
    {
        com.android.internal.telephony.CallManager r0;
        java.util.List r1;
        long l0, $l1;
        com.android.internal.telephony.Call r2, r4;
        java.util.Iterator r3;
        boolean $z0, $z1, $z2;
        java.lang.Object $r5;
        com.android.internal.telephony.Phone $r6, $r9;
        byte $b2;
        com.android.internal.telephony.Call$State $r7, $r8;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: java.util.List;

        l0 := @parameter1: long;

        r2 = null;

        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.internal.telephony.Call) $r5;

        $r6 = virtualinvoke r4.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $l1 = interfaceinvoke $r6.<com.android.internal.telephony.Phone: long getSubId()>();

        $b2 = $l1 cmp l0;

        if $b2 == 0 goto label2;

        $r9 = virtualinvoke r4.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $z2 = $r9 instanceof com.android.internal.telephony.sip.SipPhone;

        if $z2 == 0 goto label4;

     label2:
        $z1 = virtualinvoke r4.<com.android.internal.telephony.Call: boolean isIdle()>();

        if $z1 != 0 goto label3;

        return r4;

     label3:
        $r7 = virtualinvoke r4.<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>();

        $r8 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        if $r7 == $r8 goto label4;

        if r2 != null goto label4;

        r2 = r4;

     label4:
        goto label1;

     label5:
        return r2;
    }

    public com.android.internal.telephony.Call getFirstActiveBgCall()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1, $r5;
        java.util.ArrayList $r2;
        com.android.internal.telephony.Phone $r3, $r4;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r2 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mBackgroundCalls>;

        r1 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstNonIdleCall(java.util.List)>($r2);

        if r1 != null goto label3;

        $r3 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone mDefaultPhone>;

        if $r3 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r4 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone mDefaultPhone>;

        $r5 = interfaceinvoke $r4.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getBackgroundCall()>();

     label2:
        r1 = $r5;

     label3:
        return r1;
    }

    public com.android.internal.telephony.Call getFirstActiveBgCall(long)
    {
        com.android.internal.telephony.CallManager r0;
        long l0;
        com.android.internal.telephony.Phone r1;
        com.android.internal.telephony.Call r2, $r4, $r5;
        boolean $z0;
        java.util.ArrayList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        l0 := @parameter0: long;

        r1 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getPhone(long)>(l0);

        $z0 = specialinvoke r0.<com.android.internal.telephony.CallManager: boolean hasMoreThanOneHoldingCall(long)>(l0);

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getBackgroundCall()>();

        return $r5;

     label1:
        $r3 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mBackgroundCalls>;

        r2 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstNonIdleCall(java.util.List,long)>($r3, l0);

        if r2 != null goto label4;

        if r1 != null goto label2;

        $r4 = null;

        goto label3;

     label2:
        $r4 = interfaceinvoke r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getBackgroundCall()>();

     label3:
        r2 = $r4;

     label4:
        return r2;
    }

    public com.android.internal.telephony.Call getFirstActiveRingingCall()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1, $r5;
        java.util.ArrayList $r2;
        com.android.internal.telephony.Phone $r3, $r4;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r2 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mRingingCalls>;

        r1 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstNonIdleCall(java.util.List)>($r2);

        if r1 != null goto label3;

        $r3 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone mDefaultPhone>;

        if $r3 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r4 = r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone mDefaultPhone>;

        $r5 = interfaceinvoke $r4.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getRingingCall()>();

     label2:
        r1 = $r5;

     label3:
        return r1;
    }

    public com.android.internal.telephony.Call getFirstActiveRingingCall(long)
    {
        com.android.internal.telephony.CallManager r0;
        long l0;
        com.android.internal.telephony.Phone r1;
        com.android.internal.telephony.Call r2, $r4;
        java.util.ArrayList $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        l0 := @parameter0: long;

        r1 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Phone getPhone(long)>(l0);

        $r3 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mRingingCalls>;

        r2 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstNonIdleCall(java.util.List,long)>($r3, l0);

        if r2 != null goto label3;

        if r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r4 = interfaceinvoke r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getRingingCall()>();

     label2:
        r2 = $r4;

     label3:
        return r2;
    }

    public com.android.internal.telephony.Call$State getActiveFgCallState()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1;
        com.android.internal.telephony.Call$State $r2, $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>();

        return $r3;

     label1:
        $r2 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        return $r2;
    }

    public com.android.internal.telephony.Call$State getActiveFgCallState(long)
    {
        com.android.internal.telephony.CallManager r0;
        long l0;
        com.android.internal.telephony.Call r1;
        com.android.internal.telephony.Call$State $r2, $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        l0 := @parameter0: long;

        r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall(long)>(l0);

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>();

        return $r3;

     label1:
        $r2 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        return $r2;
    }

    public java.util.List getFgCallConnections()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1;
        java.util.ArrayList $r2;
        java.util.List $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<com.android.internal.telephony.Call: java.util.List getConnections()>();

        return $r3;

     label1:
        $r2 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mEmptyConnections>;

        return $r2;
    }

    public java.util.List getFgCallConnections(long)
    {
        com.android.internal.telephony.CallManager r0;
        long l0;
        com.android.internal.telephony.Call r1;
        java.util.ArrayList $r2;
        java.util.List $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        l0 := @parameter0: long;

        r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall(long)>(l0);

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<com.android.internal.telephony.Call: java.util.List getConnections()>();

        return $r3;

     label1:
        $r2 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mEmptyConnections>;

        return $r2;
    }

    public java.util.List getBgCallConnections()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1;
        java.util.ArrayList $r2;
        java.util.List $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveBgCall()>();

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<com.android.internal.telephony.Call: java.util.List getConnections()>();

        return $r3;

     label1:
        $r2 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mEmptyConnections>;

        return $r2;
    }

    public java.util.List getBgCallConnections(long)
    {
        com.android.internal.telephony.CallManager r0;
        long l0;
        com.android.internal.telephony.Call r1;
        java.util.ArrayList $r2;
        java.util.List $r3;

        r0 := @this: com.android.internal.telephony.CallManager;

        l0 := @parameter0: long;

        r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveBgCall(long)>(l0);

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<com.android.internal.telephony.Call: java.util.List getConnections()>();

        return $r3;

     label1:
        $r2 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mEmptyConnections>;

        return $r2;
    }

    public com.android.internal.telephony.Connection getFgCallLatestConnection()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1;
        com.android.internal.telephony.Connection $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall()>();

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Connection getLatestConnection()>();

        return $r2;

     label1:
        return null;
    }

    public com.android.internal.telephony.Connection getFgCallLatestConnection(long)
    {
        com.android.internal.telephony.CallManager r0;
        long l0;
        com.android.internal.telephony.Call r1;
        com.android.internal.telephony.Connection $r2;

        r0 := @this: com.android.internal.telephony.CallManager;

        l0 := @parameter0: long;

        r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall(long)>(l0);

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Connection getLatestConnection()>();

        return $r2;

     label1:
        return null;
    }

    public boolean hasDisconnectedFgCall()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call$State $r1;
        java.util.ArrayList $r2;
        com.android.internal.telephony.Call $r3;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r2 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mForegroundCalls>;

        $r1 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        $r3 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstCallOfState(java.util.ArrayList,com.android.internal.telephony.Call$State)>($r2, $r1);

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasDisconnectedFgCall(long)
    {
        com.android.internal.telephony.CallManager r0;
        long l0;
        com.android.internal.telephony.Call$State $r1;
        java.util.ArrayList $r2;
        com.android.internal.telephony.Call $r3;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.CallManager;

        l0 := @parameter0: long;

        $r2 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mForegroundCalls>;

        $r1 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        $r3 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstCallOfState(java.util.ArrayList,com.android.internal.telephony.Call$State,long)>($r2, $r1, l0);

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasDisconnectedBgCall()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call$State $r1;
        java.util.ArrayList $r2;
        com.android.internal.telephony.Call $r3;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r2 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mBackgroundCalls>;

        $r1 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        $r3 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstCallOfState(java.util.ArrayList,com.android.internal.telephony.Call$State)>($r2, $r1);

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasDisconnectedBgCall(long)
    {
        com.android.internal.telephony.CallManager r0;
        long l0;
        com.android.internal.telephony.Call$State $r1;
        java.util.ArrayList $r2;
        com.android.internal.telephony.Call $r3;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.CallManager;

        l0 := @parameter0: long;

        $r2 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mBackgroundCalls>;

        $r1 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        $r3 = specialinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstCallOfState(java.util.ArrayList,com.android.internal.telephony.Call$State,long)>($r2, $r1, l0);

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private com.android.internal.telephony.Call getFirstActiveCall(java.util.ArrayList)
    {
        com.android.internal.telephony.CallManager r0;
        java.util.ArrayList r1;
        java.util.Iterator r2;
        com.android.internal.telephony.Call r3;
        boolean $z0, $z1;
        java.lang.Object $r4;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: java.util.ArrayList;

        r2 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.internal.telephony.Call) $r4;

        $z1 = virtualinvoke r3.<com.android.internal.telephony.Call: boolean isIdle()>();

        if $z1 != 0 goto label2;

        return r3;

     label2:
        goto label1;

     label3:
        return null;
    }

    private com.android.internal.telephony.Call getFirstActiveCall(java.util.ArrayList, long)
    {
        com.android.internal.telephony.CallManager r0;
        java.util.ArrayList r1;
        long l0, $l1;
        java.util.Iterator r2;
        com.android.internal.telephony.Call r3;
        boolean $z0, $z1, $z2;
        java.lang.Object $r4;
        com.android.internal.telephony.Phone $r5, $r6;
        byte $b2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: java.util.ArrayList;

        l0 := @parameter1: long;

        r2 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.internal.telephony.Call) $r4;

        $z1 = virtualinvoke r3.<com.android.internal.telephony.Call: boolean isIdle()>();

        if $z1 != 0 goto label3;

        $r5 = virtualinvoke r3.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $l1 = interfaceinvoke $r5.<com.android.internal.telephony.Phone: long getSubId()>();

        $b2 = $l1 cmp l0;

        if $b2 == 0 goto label2;

        $r6 = virtualinvoke r3.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $z2 = $r6 instanceof com.android.internal.telephony.sip.SipPhone;

        if $z2 == 0 goto label3;

     label2:
        return r3;

     label3:
        goto label1;

     label4:
        return null;
    }

    private com.android.internal.telephony.Call getFirstCallOfState(java.util.ArrayList, com.android.internal.telephony.Call$State)
    {
        com.android.internal.telephony.CallManager r0;
        java.util.ArrayList r1;
        com.android.internal.telephony.Call$State r2, $r6;
        java.util.Iterator r3;
        com.android.internal.telephony.Call r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: com.android.internal.telephony.Call$State;

        r3 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.internal.telephony.Call) $r5;

        $r6 = virtualinvoke r4.<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>();

        if $r6 != r2 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    private com.android.internal.telephony.Call getFirstCallOfState(java.util.ArrayList, com.android.internal.telephony.Call$State, long)
    {
        com.android.internal.telephony.CallManager r0;
        java.util.ArrayList r1;
        com.android.internal.telephony.Call$State r2, $r6;
        long l0, $l1;
        java.util.Iterator r3;
        com.android.internal.telephony.Call r4;
        boolean $z0, $z1;
        java.lang.Object $r5;
        com.android.internal.telephony.Phone $r7, $r8;
        byte $b2;

        r0 := @this: com.android.internal.telephony.CallManager;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: com.android.internal.telephony.Call$State;

        l0 := @parameter2: long;

        r3 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.internal.telephony.Call) $r5;

        $r6 = virtualinvoke r4.<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>();

        if $r6 == r2 goto label2;

        $r7 = virtualinvoke r4.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $l1 = interfaceinvoke $r7.<com.android.internal.telephony.Phone: long getSubId()>();

        $b2 = $l1 cmp l0;

        if $b2 == 0 goto label2;

        $r8 = virtualinvoke r4.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $z1 = $r8 instanceof com.android.internal.telephony.sip.SipPhone;

        if $z1 == 0 goto label3;

     label2:
        return r4;

     label3:
        goto label1;

     label4:
        return null;
    }

    private boolean hasMoreThanOneRingingCall()
    {
        com.android.internal.telephony.CallManager r0;
        int i0;
        java.util.Iterator r1;
        com.android.internal.telephony.Call r2;
        java.util.ArrayList $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        com.android.internal.telephony.Call$State $r5;

        r0 := @this: com.android.internal.telephony.CallManager;

        i0 = 0;

        $r3 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mRingingCalls>;

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.internal.telephony.Call) $r4;

        $r5 = virtualinvoke r2.<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>();

        $z1 = virtualinvoke $r5.<com.android.internal.telephony.Call$State: boolean isRinging()>();

        if $z1 == 0 goto label2;

        i0 = i0 + 1;

        if i0 <= 1 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    private boolean hasMoreThanOneRingingCall(long)
    {
        com.android.internal.telephony.CallManager r0;
        long l0, $l2;
        int i1;
        java.util.Iterator r1;
        com.android.internal.telephony.Call r2;
        java.util.ArrayList $r3;
        boolean $z0, $z1, $z2;
        java.lang.Object $r4;
        com.android.internal.telephony.Call$State $r5;
        com.android.internal.telephony.Phone $r6, $r7;
        byte $b3;

        r0 := @this: com.android.internal.telephony.CallManager;

        l0 := @parameter0: long;

        i1 = 0;

        $r3 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mRingingCalls>;

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.internal.telephony.Call) $r4;

        $r5 = virtualinvoke r2.<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>();

        $z1 = virtualinvoke $r5.<com.android.internal.telephony.Call$State: boolean isRinging()>();

        if $z1 == 0 goto label3;

        $r6 = virtualinvoke r2.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $l2 = interfaceinvoke $r6.<com.android.internal.telephony.Phone: long getSubId()>();

        $b3 = $l2 cmp l0;

        if $b3 == 0 goto label2;

        $r7 = virtualinvoke r2.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $z2 = $r7 instanceof com.android.internal.telephony.sip.SipPhone;

        if $z2 == 0 goto label3;

     label2:
        i1 = i1 + 1;

        if i1 <= 1 goto label3;

        return 1;

     label3:
        goto label1;

     label4:
        return 0;
    }

    private boolean hasMoreThanOneHoldingCall(long)
    {
        com.android.internal.telephony.CallManager r0;
        long l0, $l2;
        int i1;
        java.util.Iterator r1;
        com.android.internal.telephony.Call r2;
        java.util.ArrayList $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        com.android.internal.telephony.Call$State $r5, $r6;
        com.android.internal.telephony.Phone $r7, $r8;
        byte $b3;

        r0 := @this: com.android.internal.telephony.CallManager;

        l0 := @parameter0: long;

        i1 = 0;

        $r3 = r0.<com.android.internal.telephony.CallManager: java.util.ArrayList mBackgroundCalls>;

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.internal.telephony.Call) $r4;

        $r5 = virtualinvoke r2.<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>();

        $r6 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if $r5 != $r6 goto label3;

        $r7 = virtualinvoke r2.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $l2 = interfaceinvoke $r7.<com.android.internal.telephony.Phone: long getSubId()>();

        $b3 = $l2 cmp l0;

        if $b3 == 0 goto label2;

        $r8 = virtualinvoke r2.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $z1 = $r8 instanceof com.android.internal.telephony.sip.SipPhone;

        if $z1 == 0 goto label3;

     label2:
        i1 = i1 + 1;

        if i1 <= 1 goto label3;

        return 1;

     label3:
        goto label1;

     label4:
        return 0;
    }

    public java.lang.String toString()
    {
        com.android.internal.telephony.CallManager r0;
        com.android.internal.telephony.Call r1, r76, r77, r79, r80, r81;
        java.lang.StringBuilder r2, $r4, $r10, $r11, $r12, $r13, $r14, $r17, $r19, $r22, $r23, $r26, $r27, $r30, $r31, $r35, $r36, $r37, $r40, $r42, $r44, $r46, $r48, $r51, $r52, $r54, $r56, $r60, $r63, $r65, $r66, $r68, $r70, $r73, $r75;
        int i0, $i1;
        com.android.internal.telephony.Phone r3, $r43, $r53, $r72;
        android.telephony.TelephonyManager $r5;
        java.util.List $r6, $r45, $r58;
        boolean $z0;
        java.lang.String $r8, $r15, $r18, $r32, $r39, $r41, $r57, $r61, $r64, $r74;
        java.lang.Object $r9;
        com.android.internal.telephony.PhoneConstants$State $r16, $r29;
        long $l2, $l3, $l4, $l5, $l6, $l7, $l8;
        com.android.internal.telephony.Call$State $r34, $r55, $r69;
        java.util.Iterator r78;

        r0 := @this: com.android.internal.telephony.CallManager;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r2 = $r4;

        i0 = 0;

     label1:
        $r5 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        $i1 = virtualinvoke $r5.<android.telephony.TelephonyManager: int getPhoneCount()>();

        if i0 >= $i1 goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CallManager {");

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nstate = ");

        $l2 = (long) i0;

        $r29 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.PhoneConstants$State getState(long)>($l2);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $l3 = (long) i0;

        r1 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getActiveFgCall(long)>($l3);

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n- Foreground: ");

        $l4 = (long) i0;

        $r34 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call$State getActiveFgCallState(long)>($l4);

        $r40 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r34);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r43 = virtualinvoke r1.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $r42 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r46 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  Conn: ");

        $l5 = (long) i0;

        $r45 = virtualinvoke r0.<com.android.internal.telephony.CallManager: java.util.List getFgCallConnections(long)>($l5);

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r45);

        $l6 = (long) i0;

        r76 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveBgCall(long)>($l6);

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n- Background: ");

        $r55 = virtualinvoke r76.<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>();

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r53 = virtualinvoke r76.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $r60 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r53);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r63 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  Conn: ");

        $l7 = (long) i0;

        $r58 = virtualinvoke r0.<com.android.internal.telephony.CallManager: java.util.List getBgCallConnections(long)>($l7);

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r58);

        $l8 = (long) i0;

        r77 = virtualinvoke r0.<com.android.internal.telephony.CallManager: com.android.internal.telephony.Call getFirstActiveRingingCall(long)>($l8);

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n- Ringing: ");

        $r69 = virtualinvoke r77.<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>();

        $r65 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r69);

        $r64 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r72 = virtualinvoke r77.<com.android.internal.telephony.Call: com.android.internal.telephony.Phone getPhone()>();

        $r75 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r72);

        $r74 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r6 = virtualinvoke r0.<com.android.internal.telephony.CallManager: java.util.List getAllPhones()>();

        r78 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r78.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r9 = interfaceinvoke r78.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.internal.telephony.Phone) $r9;

        if r3 == null goto label4;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nPhone: ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", name = ");

        $r15 = interfaceinvoke r3.<com.android.internal.telephony.Phone: java.lang.String getPhoneName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", state = ");

        $r16 = interfaceinvoke r3.<com.android.internal.telephony.Phone: com.android.internal.telephony.PhoneConstants$State getState()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        r79 = interfaceinvoke r3.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getForegroundCall()>();

        $r22 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n- Foreground: ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r79);

        r80 = interfaceinvoke r3.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getBackgroundCall()>();

        $r23 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Background: ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r80);

        r81 = interfaceinvoke r3.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getRingingCall()>();

        $r27 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Ringing: ");

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r81);

     label4:
        goto label3;

     label5:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n}");

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    static boolean access$100(com.android.internal.telephony.CallManager)
    {
        com.android.internal.telephony.CallManager r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.telephony.CallManager;

        $z0 = specialinvoke r0.<com.android.internal.telephony.CallManager: boolean hasMoreThanOneRingingCall()>();

        return $z0;
    }

    static void <clinit>()
    {
        com.android.internal.telephony.CallManager $r0;

        <com.android.internal.telephony.CallManager: int EVENT_ONHOLD_TONE> = 120;

        <com.android.internal.telephony.CallManager: int EVENT_POST_DIAL_CHARACTER> = 119;

        <com.android.internal.telephony.CallManager: int EVENT_SERVICE_STATE_CHANGED> = 118;

        <com.android.internal.telephony.CallManager: int EVENT_SUPP_SERVICE_FAILED> = 117;

        <com.android.internal.telephony.CallManager: int EVENT_SUBSCRIPTION_INFO_READY> = 116;

        <com.android.internal.telephony.CallManager: int EVENT_ECM_TIMER_RESET> = 115;

        <com.android.internal.telephony.CallManager: int EVENT_MMI_COMPLETE> = 114;

        <com.android.internal.telephony.CallManager: int EVENT_MMI_INITIATE> = 113;

        <com.android.internal.telephony.CallManager: int EVENT_RESEND_INCALL_MUTE> = 112;

        <com.android.internal.telephony.CallManager: int EVENT_CDMA_OTA_STATUS_CHANGE> = 111;

        <com.android.internal.telephony.CallManager: int EVENT_SIGNAL_INFO> = 110;

        <com.android.internal.telephony.CallManager: int EVENT_DISPLAY_INFO> = 109;

        <com.android.internal.telephony.CallManager: int EVENT_CALL_WAITING> = 108;

        <com.android.internal.telephony.CallManager: int EVENT_IN_CALL_VOICE_PRIVACY_OFF> = 107;

        <com.android.internal.telephony.CallManager: int EVENT_IN_CALL_VOICE_PRIVACY_ON> = 106;

        <com.android.internal.telephony.CallManager: int EVENT_RINGBACK_TONE> = 105;

        <com.android.internal.telephony.CallManager: int EVENT_INCOMING_RING> = 104;

        <com.android.internal.telephony.CallManager: int EVENT_UNKNOWN_CONNECTION> = 103;

        <com.android.internal.telephony.CallManager: int EVENT_NEW_RINGING_CONNECTION> = 102;

        <com.android.internal.telephony.CallManager: int EVENT_PRECISE_CALL_STATE_CHANGED> = 101;

        <com.android.internal.telephony.CallManager: int EVENT_DISCONNECT> = 100;

        <com.android.internal.telephony.CallManager: boolean VDBG> = 0;

        <com.android.internal.telephony.CallManager: boolean DBG> = 1;

        <com.android.internal.telephony.CallManager: java.lang.String LOG_TAG> = "CallManager";

        $r0 = new com.android.internal.telephony.CallManager;

        specialinvoke $r0.<com.android.internal.telephony.CallManager: void <init>()>();

        <com.android.internal.telephony.CallManager: com.android.internal.telephony.CallManager INSTANCE> = $r0;

        return;
    }
}
