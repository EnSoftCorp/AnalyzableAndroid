public class com.android.internal.telephony.WapPushOverSms extends java.lang.Object implements android.content.ServiceConnection
{
    private static final java.lang.String TAG;
    private static final boolean DBG;
    private final android.content.Context mContext;
    private volatile com.android.internal.telephony.IWapPushManager mWapPushManager;
    private static final java.lang.String THREAD_ID_SELECTION;
    private static final java.lang.String LOCATION_SELECTION;

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        com.android.internal.telephony.WapPushOverSms r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        com.android.internal.telephony.IWapPushManager $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        int $i0;
        java.lang.String $r7;

        r0 := @this: com.android.internal.telephony.WapPushOverSms;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        $r3 = staticinvoke <com.android.internal.telephony.IWapPushManager$Stub: com.android.internal.telephony.IWapPushManager asInterface(android.os.IBinder)>(r2);

        r0.<com.android.internal.telephony.WapPushOverSms: com.android.internal.telephony.IWapPushManager mWapPushManager> = $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wappush manager connected to ");

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("WAP PUSH", $r7);

        return;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        com.android.internal.telephony.WapPushOverSms r0;
        android.content.ComponentName r1;

        r0 := @this: com.android.internal.telephony.WapPushOverSms;

        r1 := @parameter0: android.content.ComponentName;

        r0.<com.android.internal.telephony.WapPushOverSms: com.android.internal.telephony.IWapPushManager mWapPushManager> = null;

        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("WAP PUSH", "wappush manager disconnected.");

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.internal.telephony.WapPushOverSms r0;
        android.content.Context r1;
        android.content.Intent r2, $r4;
        android.content.ComponentName r3;
        java.lang.Class $r5;
        java.lang.String $r6;
        android.content.pm.PackageManager $r7;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.WapPushOverSms;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.WapPushOverSms: android.content.Context mContext> = r1;

        $r4 = new android.content.Intent;

        $r5 = class "com/android/internal/telephony/IWapPushManager";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>($r6);

        r2 = $r4;

        $r7 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r3 = virtualinvoke r2.<android.content.Intent: android.content.ComponentName resolveSystemService(android.content.pm.PackageManager,int)>($r7, 0);

        virtualinvoke r2.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r3);

        if r3 == null goto label1;

        $z0 = virtualinvoke r1.<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>(r2, r0, 1);

        if $z0 != 0 goto label2;

     label1:
        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("WAP PUSH", "bindService() for wappush manager failed");

        goto label3;

     label2:
        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("WAP PUSH", "bindService() for wappush manager succeeded");

     label3:
        return;
    }

    void dispose()
    {
        com.android.internal.telephony.WapPushOverSms r0;
        com.android.internal.telephony.IWapPushManager $r1;
        android.content.Context $r2;

        r0 := @this: com.android.internal.telephony.WapPushOverSms;

        $r1 = r0.<com.android.internal.telephony.WapPushOverSms: com.android.internal.telephony.IWapPushManager mWapPushManager>;

        if $r1 == null goto label1;

        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("WAP PUSH", "dispose: unbind wappush manager");

        $r2 = r0.<com.android.internal.telephony.WapPushOverSms: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r0);

        goto label2;

     label1:
        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("WAP PUSH", "dispose: not bound to a wappush manager");

     label2:
        return;
    }

    public int dispatchWapPdu(byte[], android.content.BroadcastReceiver, com.android.internal.telephony.InboundSmsHandler)
    {
        com.android.internal.telephony.WapPushOverSms r0;
        byte[] r1, r6, r7;
        android.content.BroadcastReceiver r2;
        com.android.internal.telephony.InboundSmsHandler r3;
        byte b0, $b11, $b12, $b37, $b40, b51;
        short s1, s2;
        int i3, i4, i5, i8, i9, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i29, $i31, $i32, $i35, i44, i45, i46, i47, i48, i49, i50;
        com.android.internal.telephony.WspTypeDecoder r4, $r15;
        java.lang.String r5, $r11, $r13, $r28, $r34, $r36, $r39, $r49, $r54, $r57, $r63, $r73, $r78, r80, r81, r83;
        long l6, l7, $l14, $l25, $l28, $l36;
        com.android.internal.telephony.IWapPushManager r8;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z7;
        android.content.Intent r9, $r19, $r46, r84;
        java.lang.StringBuilder $r10, $r12, $r14, $r27, $r29, $r32, $r33, $r35, $r37, $r38, $r40, $r41, $r42, $r50, $r51, $r52, $r58, $r59, $r60, $r61, $r62, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r75, $r76, $r77;
        com.android.internal.telephony.PhoneBase $r16;
        android.telephony.SmsManager $r17;
        android.content.Context $r24, $r56;
        java.util.HashMap $r26, $r45;
        android.os.UserHandle $r30;
        android.content.res.Resources $r55;
        android.os.RemoteException $r72;
        java.lang.ArrayIndexOutOfBoundsException $r74, r86;
        long[] r79;
        android.content.ComponentName r85;

        r0 := @this: com.android.internal.telephony.WapPushOverSms;

        r1 := @parameter0: byte[];

        r2 := @parameter1: android.content.BroadcastReceiver;

        r3 := @parameter2: com.android.internal.telephony.InboundSmsHandler;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rx: ");

        $r11 = staticinvoke <com.android.internal.telephony.uicc.IccUtils: java.lang.String bytesToHexString(byte[])>(r1);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("WAP PUSH", $r13);

     label01:
        b0 = 0;

        i44 = b0 + 1;

        $b11 = r1[b0];

        s1 = $b11 & 255;

        i45 = i44 + 1;

        $b12 = r1[i44];

        s2 = $b12 & 255;

        $r16 = virtualinvoke r3.<com.android.internal.telephony.InboundSmsHandler: com.android.internal.telephony.PhoneBase getPhone()>();

        i3 = virtualinvoke $r16.<com.android.internal.telephony.PhoneBase: int getPhoneId()>();

        if s2 == 6 goto label05;

        if s2 == 7 goto label05;

        $r56 = r0.<com.android.internal.telephony.WapPushOverSms: android.content.Context mContext>;

        $r55 = virtualinvoke $r56.<android.content.Context: android.content.res.Resources getResources()>();

        i46 = virtualinvoke $r55.<android.content.res.Resources: int getInteger(int)>(17694835);

        if i46 == -1 goto label03;

        i47 = i46 + 1;

        $b37 = r1[i46];

        s1 = $b37 & 255;

        i45 = i47 + 1;

        $b40 = r1[i47];

        s2 = $b40 & 255;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index = ");

        $r68 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i45);

        $r71 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" PDU Type = ");

        $r70 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s2);

        $r62 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" transactionID = ");

        $r61 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s1);

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("WAP PUSH", $r63);

        if s2 == 6 goto label05;

        if s2 == 7 goto label05;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received non-PUSH WAP PDU. Type = ");

        $r65 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s2);

        $r73 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("WAP PUSH", $r73);

     label02:
        return 1;

     label03:
        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received non-PUSH WAP PDU. Type = ");

        $r58 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s2);

        $r57 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("WAP PUSH", $r57);

     label04:
        return 1;

     label05:
        $r15 = new com.android.internal.telephony.WspTypeDecoder;

        specialinvoke $r15.<com.android.internal.telephony.WspTypeDecoder: void <init>(byte[])>(r1);

        r4 = $r15;

        $z2 = virtualinvoke r4.<com.android.internal.telephony.WspTypeDecoder: boolean decodeUintvarInteger(int)>(i45);

        if $z2 != 0 goto label07;

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("WAP PUSH", "Received PDU. Header Length error.");

     label06:
        return 2;

     label07:
        $l14 = virtualinvoke r4.<com.android.internal.telephony.WspTypeDecoder: long getValue32()>();

        i4 = (int) $l14;

        $i13 = virtualinvoke r4.<com.android.internal.telephony.WspTypeDecoder: int getDecodedDataLength()>();

        i48 = i45 + $i13;

        i5 = i48;

        $z1 = virtualinvoke r4.<com.android.internal.telephony.WspTypeDecoder: boolean decodeContentType(int)>(i48);

        if $z1 != 0 goto label09;

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("WAP PUSH", "Received PDU. Header Content-Type error.");

     label08:
        return 2;

     label09:
        r5 = virtualinvoke r4.<com.android.internal.telephony.WspTypeDecoder: java.lang.String getValueString()>();

        l6 = virtualinvoke r4.<com.android.internal.telephony.WspTypeDecoder: long getValue32()>();

        $i15 = virtualinvoke r4.<com.android.internal.telephony.WspTypeDecoder: int getDecodedDataLength()>();

        i49 = i48 + $i15;

        r6 = newarray (byte)[i4];

        $i16 = lengthof r6;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, i5, r6, 0, $i16);

        if r5 == null goto label10;

        $z7 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("application/vnd.wap.coc");

        if $z7 == 0 goto label10;

        r7 = r1;

        goto label11;

     label10:
        i8 = i5 + i4;

        $i18 = lengthof r1;

        $i19 = $i18 - i8;

        r7 = newarray (byte)[$i19];

        $i17 = lengthof r7;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, i8, r7, 0, $i17);

     label11:
        $r17 = staticinvoke <android.telephony.SmsManager: android.telephony.SmsManager getDefault()>();

        $z4 = virtualinvoke $r17.<android.telephony.SmsManager: boolean getAutoPersisting()>();

        if $z4 == 0 goto label14;

        r79 = staticinvoke <android.telephony.SubscriptionManager: long[] getSubId(int)>(i3);

        if r79 == null goto label12;

        $i35 = lengthof r79;

        if $i35 <= 0 goto label12;

        $l36 = r79[0];

        goto label13;

     label12:
        $l36 = staticinvoke <android.telephony.SmsManager: long getDefaultSmsSubId()>();

     label13:
        l7 = $l36;

        specialinvoke r0.<com.android.internal.telephony.WapPushOverSms: void writeInboxMessage(long,byte[])>(l7, r7);

     label14:
        $i21 = i49 + i4;

        $i20 = $i21 - 1;

        $z3 = virtualinvoke r4.<com.android.internal.telephony.WspTypeDecoder: boolean seekXWapApplicationId(int,int)>(i49, $i20);

        if $z3 == 0 goto label24;

        $l25 = virtualinvoke r4.<com.android.internal.telephony.WspTypeDecoder: long getValue32()>();

        i50 = (int) $l25;

        virtualinvoke r4.<com.android.internal.telephony.WspTypeDecoder: boolean decodeXWapApplicationId(int)>(i50);

        r80 = virtualinvoke r4.<com.android.internal.telephony.WspTypeDecoder: java.lang.String getValueString()>();

        if r80 != null goto label15;

        $l28 = virtualinvoke r4.<com.android.internal.telephony.WspTypeDecoder: long getValue32()>();

        $i29 = (int) $l28;

        r80 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i29);

     label15:
        if r5 != null goto label16;

        $r54 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l6);

        goto label17;

     label16:
        $r54 = r5;

     label17:
        r81 = $r54;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("appid found: ");

        $r38 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r80);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r40 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r81);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("WAP PUSH", $r39);

     label18:
        z0 = 1;

        r8 = r0.<com.android.internal.telephony.WapPushOverSms: com.android.internal.telephony.IWapPushManager mWapPushManager>;

        if r8 != null goto label19;

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("WAP PUSH", "wap push manager not found!");

        goto label20;

     label19:
        $r46 = new android.content.Intent;

        specialinvoke $r46.<android.content.Intent: void <init>()>();

        r9 = $r46;

        virtualinvoke r9.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("transactionId", s1);

        virtualinvoke r9.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("pduType", s2);

        virtualinvoke r9.<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>("header", r6);

        virtualinvoke r9.<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>("data", r7);

        $r45 = virtualinvoke r4.<com.android.internal.telephony.WspTypeDecoder: java.util.HashMap getContentParameters()>();

        virtualinvoke r9.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("contentTypeParameters", $r45);

        staticinvoke <android.telephony.SubscriptionManager: void putPhoneIdAndSubIdExtra(android.content.Intent,int)>(r9, i3);

        i9 = interfaceinvoke r8.<com.android.internal.telephony.IWapPushManager: int processMessage(java.lang.String,java.lang.String,android.content.Intent)>(r80, r81, r9);

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("procRet:");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r49 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("WAP PUSH", $r49);

        $i31 = i9 & 1;

        if $i31 <= 0 goto label20;

        $i32 = i9 & 32768;

        if $i32 != 0 goto label20;

        z0 = 0;

     label20:
        if z0 != 0 goto label22;

     label21:
        return 1;

     label22:
        goto label24;

     label23:
        $r72 := @caughtexception;

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("WAP PUSH", "remote func failed...");

     label24:
        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("WAP PUSH", "fall back to existing handler");

        if r5 != null goto label26;

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("WAP PUSH", "Header Content-Type error.");

     label25:
        return 2;

     label26:
        $z5 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("application/vnd.wap.mms-message");

        if $z5 == 0 goto label27;

        r83 = "android.permission.RECEIVE_MMS";

        b51 = 18;

        goto label28;

     label27:
        r83 = "android.permission.RECEIVE_WAP_PUSH";

        b51 = 19;

     label28:
        $r19 = new android.content.Intent;

        specialinvoke $r19.<android.content.Intent: void <init>(java.lang.String)>("android.provider.Telephony.WAP_PUSH_DELIVER");

        r84 = $r19;

        virtualinvoke r84.<android.content.Intent: android.content.Intent setType(java.lang.String)>(r5);

        virtualinvoke r84.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("transactionId", s1);

        virtualinvoke r84.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("pduType", s2);

        virtualinvoke r84.<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>("header", r6);

        virtualinvoke r84.<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>("data", r7);

        $r26 = virtualinvoke r4.<com.android.internal.telephony.WspTypeDecoder: java.util.HashMap getContentParameters()>();

        virtualinvoke r84.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>("contentTypeParameters", $r26);

        staticinvoke <android.telephony.SubscriptionManager: void putPhoneIdAndSubIdExtra(android.content.Intent,int)>(r84, i3);

        $r24 = r0.<com.android.internal.telephony.WapPushOverSms: android.content.Context mContext>;

        r85 = staticinvoke <com.android.internal.telephony.SmsApplication: android.content.ComponentName getDefaultMmsApplication(android.content.Context,boolean)>($r24, 1);

        if r85 == null goto label29;

        virtualinvoke r84.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r85);

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Delivering MMS to: ");

        $r28 = virtualinvoke r85.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r34 = virtualinvoke r85.<android.content.ComponentName: java.lang.String getClassName()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int v(java.lang.String,java.lang.String)>("WAP PUSH", $r36);

     label29:
        $r30 = <android.os.UserHandle: android.os.UserHandle OWNER>;

        virtualinvoke r3.<com.android.internal.telephony.InboundSmsHandler: void dispatchIntent(android.content.Intent,java.lang.String,int,android.content.BroadcastReceiver,android.os.UserHandle)>(r84, r83, b51, r2, $r30);

     label30:
        return -1;

     label31:
        $r74 := @caughtexception;

        r86 = $r74;

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ignoring dispatchWapPdu() array index exception: ");

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r86);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("WAP PUSH", $r78);

        return 2;

        catch android.os.RemoteException from label18 to label21 with label23;
        catch java.lang.ArrayIndexOutOfBoundsException from label01 to label02 with label31;
        catch java.lang.ArrayIndexOutOfBoundsException from label03 to label04 with label31;
        catch java.lang.ArrayIndexOutOfBoundsException from label05 to label06 with label31;
        catch java.lang.ArrayIndexOutOfBoundsException from label07 to label08 with label31;
        catch java.lang.ArrayIndexOutOfBoundsException from label09 to label21 with label31;
        catch java.lang.ArrayIndexOutOfBoundsException from label22 to label25 with label31;
        catch java.lang.ArrayIndexOutOfBoundsException from label26 to label30 with label31;
    }

    private void writeInboxMessage(long, byte[])
    {
        com.android.internal.telephony.WapPushOverSms r0;
        long l0, l2;
        byte[] r1, r7, $r23, r33, r34;
        com.google.android.mms.pdu.GenericPdu r2;
        com.google.android.mms.pdu.PduPersister r3;
        int i1, $i5, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i19;
        android.os.Bundle r4;
        android.net.Uri r5, $r11, $r25, r35;
        android.content.ContentValues r6, $r12;
        com.google.android.mms.pdu.PduParser $r8;
        android.content.Context $r9, $r10, $r13, $r16, $r17;
        byte $b3, $b10;
        java.lang.Long $r14;
        android.content.ContentResolver $r15;
        boolean $z0, $z1;
        android.telephony.SmsManager $r18;
        java.lang.StringBuilder $r19, $r21, $r24, $r29, $r30, $r31;
        java.lang.String $r20, $r22, $r28;
        com.google.android.mms.MmsException $r26, r36;
        java.lang.RuntimeException $r27, r37;
        com.google.android.mms.pdu.NotificationInd r32;

        r0 := @this: com.android.internal.telephony.WapPushOverSms;

        l0 := @parameter0: long;

        r1 := @parameter1: byte[];

        $r8 = new com.google.android.mms.pdu.PduParser;

        specialinvoke $r8.<com.google.android.mms.pdu.PduParser: void <init>(byte[])>(r1);

        r2 = virtualinvoke $r8.<com.google.android.mms.pdu.PduParser: com.google.android.mms.pdu.GenericPdu parse()>();

        if r2 != null goto label01;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("WAP PUSH", "Invalid PUSH PDU");

     label01:
        $r9 = r0.<com.android.internal.telephony.WapPushOverSms: android.content.Context mContext>;

        r3 = staticinvoke <com.google.android.mms.pdu.PduPersister: com.google.android.mms.pdu.PduPersister getPduPersister(android.content.Context)>($r9);

        i1 = virtualinvoke r2.<com.google.android.mms.pdu.GenericPdu: int getMessageType()>();

     label02:
        lookupswitch(i1)
        {
            case 130: goto label06;
            case 134: goto label03;
            case 136: goto label03;
            default: goto label10;
        };

     label03:
        $r10 = r0.<com.android.internal.telephony.WapPushOverSms: android.content.Context mContext>;

        l2 = staticinvoke <com.android.internal.telephony.WapPushOverSms: long getDeliveryOrReadReportThreadId(android.content.Context,com.google.android.mms.pdu.GenericPdu)>($r10, r2);

        $b3 = l2 cmp -1L;

        if $b3 != 0 goto label04;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("WAP PUSH", "Failed to find delivery or read report\'s thread id");

        goto label11;

     label04:
        $r11 = <android.provider.Telephony$Mms$Inbox: android.net.Uri CONTENT_URI>;

        r5 = virtualinvoke r3.<com.google.android.mms.pdu.PduPersister: android.net.Uri persist(com.google.android.mms.pdu.GenericPdu,android.net.Uri,boolean,boolean,java.util.HashMap)>(r2, $r11, 1, 1, null);

        if r5 != null goto label05;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("WAP PUSH", "Failed to persist delivery or read report");

        goto label11;

     label05:
        $r12 = new android.content.ContentValues;

        specialinvoke $r12.<android.content.ContentValues: void <init>(int)>(1);

        r6 = $r12;

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        virtualinvoke r6.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("thread_id", $r14);

        $r16 = r0.<com.android.internal.telephony.WapPushOverSms: android.content.Context mContext>;

        $r13 = r0.<com.android.internal.telephony.WapPushOverSms: android.content.Context mContext>;

        $r15 = virtualinvoke $r13.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i5 = staticinvoke <android.database.sqlite.SqliteWrapper: int update(android.content.Context,android.content.ContentResolver,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>($r16, $r15, r5, r6, null, null);

        if $i5 == 1 goto label11;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("WAP PUSH", "Failed to update delivery or read report thread id");

        goto label11;

     label06:
        r32 = (com.google.android.mms.pdu.NotificationInd) r2;

        $r18 = staticinvoke <android.telephony.SmsManager: android.telephony.SmsManager getSmsManagerForSubscriber(long)>(l0);

        r4 = virtualinvoke $r18.<android.telephony.SmsManager: android.os.Bundle getCarrierConfigValues()>();

        if r4 == null goto label07;

        $z1 = virtualinvoke r4.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("enabledTransID", 0);

        if $z1 == 0 goto label07;

        r33 = virtualinvoke r32.<com.google.android.mms.pdu.NotificationInd: byte[] getContentLocation()>();

        $i12 = lengthof r33;

        $i11 = $i12 - 1;

        $b10 = r33[$i11];

        if 61 != $b10 goto label07;

        r34 = virtualinvoke r32.<com.google.android.mms.pdu.NotificationInd: byte[] getTransactionId()>();

        $i14 = lengthof r33;

        $i15 = lengthof r34;

        $i13 = $i14 + $i15;

        r7 = newarray (byte)[$i13];

        $i19 = lengthof r33;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r33, 0, r7, 0, $i19);

        $i17 = lengthof r33;

        $i18 = lengthof r34;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r34, 0, r7, $i17, $i18);

        virtualinvoke r32.<com.google.android.mms.pdu.NotificationInd: void setContentLocation(byte[])>(r7);

     label07:
        $r17 = r0.<com.android.internal.telephony.WapPushOverSms: android.content.Context mContext>;

        $z0 = staticinvoke <com.android.internal.telephony.WapPushOverSms: boolean isDuplicateNotification(android.content.Context,com.google.android.mms.pdu.NotificationInd)>($r17, r32);

        if $z0 != 0 goto label09;

        $r25 = <android.provider.Telephony$Mms$Inbox: android.net.Uri CONTENT_URI>;

        r35 = virtualinvoke r3.<com.google.android.mms.pdu.PduPersister: android.net.Uri persist(com.google.android.mms.pdu.GenericPdu,android.net.Uri,boolean,boolean,java.util.HashMap)>(r2, $r25, 1, 1, null);

        if r35 != null goto label08;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("WAP PUSH", "Failed to save MMS WAP push notification ind");

     label08:
        goto label11;

     label09:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skip storing duplicate MMS WAP push notification ind: ");

        $r20 = new java.lang.String;

        $r23 = virtualinvoke r32.<com.google.android.mms.pdu.NotificationInd: byte[] getContentLocation()>();

        specialinvoke $r20.<java.lang.String: void <init>(byte[])>($r23);

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("WAP PUSH", $r22);

        goto label11;

     label10:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WAP PUSH", "Received unrecognized WAP Push PDU.");

     label11:
        goto label14;

     label12:
        $r26 := @caughtexception;

        r36 = $r26;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to save MMS WAP push data: type=");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r28 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WAP PUSH", $r28, r36);

        goto label14;

     label13:
        $r27 := @caughtexception;

        r37 = $r27;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WAP PUSH", "Unexpected RuntimeException in persisting MMS WAP push data", r37);

     label14:
        return;

        catch com.google.android.mms.MmsException from label02 to label11 with label12;
        catch java.lang.RuntimeException from label02 to label11 with label13;
    }

    private static long getDeliveryOrReadReportThreadId(android.content.Context, com.google.android.mms.pdu.GenericPdu)
    {
        android.content.Context r0;
        com.google.android.mms.pdu.GenericPdu r1;
        java.lang.String r2, $r8, $r10, $r11, $r18, $r19, $r22;
        android.database.Cursor r3;
        long l0;
        java.lang.Throwable r4, $r21;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r5, $r6, $r9;
        java.lang.Class $r7;
        byte[] $r12, $r20;
        com.google.android.mms.pdu.ReadOrigInd $r13;
        java.lang.String[] $r14, $r17;
        android.content.ContentResolver $r15;
        android.net.Uri $r16;
        com.google.android.mms.pdu.DeliveryInd $r23;
        android.database.sqlite.SQLiteException $r24, r25;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.google.android.mms.pdu.GenericPdu;

        $z0 = r1 instanceof com.google.android.mms.pdu.DeliveryInd;

        if $z0 == 0 goto label01;

        $r22 = new java.lang.String;

        $r23 = (com.google.android.mms.pdu.DeliveryInd) r1;

        $r20 = virtualinvoke $r23.<com.google.android.mms.pdu.DeliveryInd: byte[] getMessageId()>();

        specialinvoke $r22.<java.lang.String: void <init>(byte[])>($r20);

        r2 = $r22;

        goto label03;

     label01:
        $z1 = r1 instanceof com.google.android.mms.pdu.ReadOrigInd;

        if $z1 == 0 goto label02;

        $r11 = new java.lang.String;

        $r13 = (com.google.android.mms.pdu.ReadOrigInd) r1;

        $r12 = virtualinvoke $r13.<com.google.android.mms.pdu.ReadOrigInd: byte[] getMessageId()>();

        specialinvoke $r11.<java.lang.String: void <init>(byte[])>($r12);

        r2 = $r11;

        goto label03;

     label02:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WAP Push data is neither delivery or read report type: ");

        $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getCanonicalName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("WAP PUSH", $r10);

        return -1L;

     label03:
        r3 = null;

     label04:
        $r15 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r16 = <android.provider.Telephony$Mms: android.net.Uri CONTENT_URI>;

        $r14 = newarray (java.lang.String)[1];

        $r14[0] = "thread_id";

        $r17 = newarray (java.lang.String)[2];

        $r18 = staticinvoke <android.database.DatabaseUtils: java.lang.String sqlEscapeString(java.lang.String)>(r2);

        $r17[0] = $r18;

        $r19 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(128);

        $r17[1] = $r19;

        r3 = staticinvoke <android.database.sqlite.SqliteWrapper: android.database.Cursor query(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r0, $r15, $r16, $r14, "m_id=? AND m_type=?", $r17, null);

        if r3 == null goto label07;

        $z2 = interfaceinvoke r3.<android.database.Cursor: boolean moveToFirst()>();

        if $z2 == 0 goto label07;

        l0 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(0);

     label05:
        if r3 == null goto label06;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label06:
        return l0;

     label07:
        if r3 == null goto label13;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

        goto label13;

     label08:
        $r24 := @caughtexception;

        r25 = $r24;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WAP PUSH", "Failed to query delivery or read report thread id", r25);

     label09:
        if r3 == null goto label13;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

        goto label13;

     label10:
        $r21 := @caughtexception;

        r4 = $r21;

     label11:
        if r3 == null goto label12;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label12:
        throw r4;

     label13:
        return -1L;

        catch android.database.sqlite.SQLiteException from label04 to label05 with label08;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private static boolean isDuplicateNotification(android.content.Context, com.google.android.mms.pdu.NotificationInd)
    {
        android.content.Context r0;
        com.google.android.mms.pdu.NotificationInd r1;
        byte[] r2;
        java.lang.String r3, $r7, $r13, $r14;
        android.database.Cursor r5;
        boolean z0;
        java.lang.Throwable r6, $r16;
        java.lang.String[] $r8, $r10, $r11;
        android.content.ContentResolver $r9;
        android.net.Uri $r12;
        int $i0;
        android.database.sqlite.SQLiteException $r15, r17;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.google.android.mms.pdu.NotificationInd;

        r2 = virtualinvoke r1.<com.google.android.mms.pdu.NotificationInd: byte[] getContentLocation()>();

        if r2 == null goto label10;

        $r7 = new java.lang.String;

        specialinvoke $r7.<java.lang.String: void <init>(byte[])>(r2);

        r3 = $r7;

        $r8 = newarray (java.lang.String)[1];

        $r8[0] = r3;

        r5 = null;

     label01:
        $r9 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r12 = <android.provider.Telephony$Mms: android.net.Uri CONTENT_URI>;

        $r10 = newarray (java.lang.String)[1];

        $r10[0] = "_id";

        $r11 = newarray (java.lang.String)[2];

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(130);

        $r11[0] = $r13;

        $r14 = new java.lang.String;

        specialinvoke $r14.<java.lang.String: void <init>(byte[])>(r2);

        $r11[1] = $r14;

        r5 = staticinvoke <android.database.sqlite.SqliteWrapper: android.database.Cursor query(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r0, $r9, $r12, $r10, "m_type=? AND ct_l =?", $r11, null);

        if r5 == null goto label04;

        $i0 = interfaceinvoke r5.<android.database.Cursor: int getCount()>();

        if $i0 <= 0 goto label04;

        z0 = 1;

     label02:
        if r5 == null goto label03;

        interfaceinvoke r5.<android.database.Cursor: void close()>();

     label03:
        return z0;

     label04:
        if r5 == null goto label10;

        interfaceinvoke r5.<android.database.Cursor: void close()>();

        goto label10;

     label05:
        $r15 := @caughtexception;

        r17 = $r15;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WAP PUSH", "failed to query existing notification ind", r17);

     label06:
        if r5 == null goto label10;

        interfaceinvoke r5.<android.database.Cursor: void close()>();

        goto label10;

     label07:
        $r16 := @caughtexception;

        r6 = $r16;

     label08:
        if r5 == null goto label09;

        interfaceinvoke r5.<android.database.Cursor: void close()>();

     label09:
        throw r6;

     label10:
        return 0;

        catch android.database.sqlite.SQLiteException from label01 to label02 with label05;
        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.WapPushOverSms: java.lang.String LOCATION_SELECTION> = "m_type=? AND ct_l =?";

        <com.android.internal.telephony.WapPushOverSms: java.lang.String THREAD_ID_SELECTION> = "m_id=? AND m_type=?";

        <com.android.internal.telephony.WapPushOverSms: boolean DBG> = 1;

        <com.android.internal.telephony.WapPushOverSms: java.lang.String TAG> = "WAP PUSH";

        return;
    }
}
