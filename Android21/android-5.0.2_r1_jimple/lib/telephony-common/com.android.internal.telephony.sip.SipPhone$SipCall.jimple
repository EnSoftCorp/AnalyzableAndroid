class com.android.internal.telephony.sip.SipPhone$SipCall extends com.android.internal.telephony.sip.SipCallBase
{
    private static final java.lang.String SC_TAG;
    private static final boolean SC_DBG;
    private static final boolean SC_VDBG;
    final com.android.internal.telephony.sip.SipPhone this$0;

    private void <init>(com.android.internal.telephony.sip.SipPhone)
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0;
        com.android.internal.telephony.sip.SipPhone r1;

        r0 := @this: com.android.internal.telephony.sip.SipPhone$SipCall;

        r1 := @parameter0: com.android.internal.telephony.sip.SipPhone;

        r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.sip.SipPhone this$0> = r1;

        specialinvoke r0.<com.android.internal.telephony.sip.SipCallBase: void <init>()>();

        return;
    }

    void reset()
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0;
        java.util.ArrayList $r1;
        com.android.internal.telephony.Call$State $r2;

        r0 := @this: com.android.internal.telephony.sip.SipPhone$SipCall;

        specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void log(java.lang.String)>("reset");

        $r1 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: java.util.ArrayList mConnections>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r2 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        virtualinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void setState(com.android.internal.telephony.Call$State)>($r2);

        return;
    }

    void switchWith(com.android.internal.telephony.sip.SipPhone$SipCall)
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0, r1, r3, $r5;
        java.lang.Class r2;
        java.lang.Throwable r4, $r7;
        com.android.internal.telephony.sip.SipPhone $r6;

        r0 := @this: com.android.internal.telephony.sip.SipPhone$SipCall;

        r1 := @parameter0: com.android.internal.telephony.sip.SipPhone$SipCall;

        specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void log(java.lang.String)>("switchWith");

        r2 = class "com/android/internal/telephony/sip/SipPhone";

        entermonitor class "com/android/internal/telephony/sip/SipPhone";

     label1:
        $r5 = new com.android.internal.telephony.sip.SipPhone$SipCall;

        $r6 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.sip.SipPhone this$0>;

        specialinvoke $r5.<com.android.internal.telephony.sip.SipPhone$SipCall: void <init>(com.android.internal.telephony.sip.SipPhone)>($r6);

        r3 = $r5;

        specialinvoke r3.<com.android.internal.telephony.sip.SipPhone$SipCall: void takeOver(com.android.internal.telephony.sip.SipPhone$SipCall)>(r0);

        specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void takeOver(com.android.internal.telephony.sip.SipPhone$SipCall)>(r1);

        specialinvoke r1.<com.android.internal.telephony.sip.SipPhone$SipCall: void takeOver(com.android.internal.telephony.sip.SipPhone$SipCall)>(r3);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

        exitmonitor r2;

     label4:
        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void takeOver(com.android.internal.telephony.sip.SipPhone$SipCall)
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0, r1;
        java.util.Iterator r2;
        com.android.internal.telephony.Connection r3;
        java.util.ArrayList $r4, $r6;
        com.android.internal.telephony.Call$State $r5;
        boolean $z0;
        java.lang.Object $r7;
        com.android.internal.telephony.sip.SipPhone$SipConnection $r8;

        r0 := @this: com.android.internal.telephony.sip.SipPhone$SipCall;

        r1 := @parameter0: com.android.internal.telephony.sip.SipPhone$SipCall;

        specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void log(java.lang.String)>("takeOver");

        $r4 = r1.<com.android.internal.telephony.sip.SipPhone$SipCall: java.util.ArrayList mConnections>;

        r0.<com.android.internal.telephony.sip.SipPhone$SipCall: java.util.ArrayList mConnections> = $r4;

        $r5 = r1.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.Call$State mState>;

        r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.Call$State mState> = $r5;

        $r6 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: java.util.ArrayList mConnections>;

        r2 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.internal.telephony.Connection) $r7;

        $r8 = (com.android.internal.telephony.sip.SipPhone$SipConnection) r3;

        virtualinvoke $r8.<com.android.internal.telephony.sip.SipPhone$SipConnection: void changeOwner(com.android.internal.telephony.sip.SipPhone$SipCall)>(r0);

        goto label1;

     label2:
        return;
    }

    public com.android.internal.telephony.Phone getPhone()
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0;
        com.android.internal.telephony.sip.SipPhone $r1;

        r0 := @this: com.android.internal.telephony.sip.SipPhone$SipCall;

        $r1 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.sip.SipPhone this$0>;

        return $r1;
    }

    public java.util.List getConnections()
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0;
        java.lang.Class r1;
        java.lang.Throwable r2, $r4;
        java.util.ArrayList $r3;

        r0 := @this: com.android.internal.telephony.sip.SipPhone$SipCall;

        r1 = class "com/android/internal/telephony/sip/SipPhone";

        entermonitor class "com/android/internal/telephony/sip/SipPhone";

     label1:
        $r3 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: java.util.ArrayList mConnections>;

        exitmonitor r1;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    com.android.internal.telephony.Connection dial(java.lang.String) throws android.net.sip.SipException
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0;
        java.lang.String r1, r2, r3, $r8, $r18, $r19, $r22, $r26;
        com.android.internal.telephony.sip.SipPhone$SipConnection r4, $r10;
        java.lang.StringBuilder $r5, $r6, $r7, $r13, $r17, $r20, $r24, $r25, $r27;
        boolean $z0;
        android.net.sip.SipProfile$Builder $r9;
        com.android.internal.telephony.sip.SipPhone $r11, $r16, $r21;
        java.util.ArrayList $r12;
        com.android.internal.telephony.Call$State $r14;
        android.net.sip.SipProfile $r15, $r23, r30;
        android.net.sip.SipException $r28;
        java.text.ParseException $r29, r31;

        r0 := @this: com.android.internal.telephony.sip.SipPhone$SipCall;

        r1 := @parameter0: java.lang.String;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dial: num=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("xxx");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void log(java.lang.String)>($r8);

        r2 = r1;

        $z0 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("@");

        if $z0 != 0 goto label1;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.sip.SipPhone this$0>;

        $r15 = staticinvoke <com.android.internal.telephony.sip.SipPhone: android.net.sip.SipProfile access$100(com.android.internal.telephony.sip.SipPhone)>($r16);

        $r18 = virtualinvoke $r15.<android.net.sip.SipProfile: java.lang.String getUserName()>();

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>($r19);

        $r21 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.sip.SipPhone this$0>;

        $r23 = staticinvoke <com.android.internal.telephony.sip.SipPhone: android.net.sip.SipProfile access$100(com.android.internal.telephony.sip.SipPhone)>($r21);

        $r22 = virtualinvoke $r23.<android.net.sip.SipProfile: java.lang.String getUriString()>();

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        r2 = virtualinvoke $r22.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>(r3, $r26);

     label1:
        $r9 = new android.net.sip.SipProfile$Builder;

        specialinvoke $r9.<android.net.sip.SipProfile$Builder: void <init>(java.lang.String)>(r2);

        r30 = virtualinvoke $r9.<android.net.sip.SipProfile$Builder: android.net.sip.SipProfile build()>();

        $r10 = new com.android.internal.telephony.sip.SipPhone$SipConnection;

        $r11 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.sip.SipPhone this$0>;

        specialinvoke $r10.<com.android.internal.telephony.sip.SipPhone$SipConnection: void <init>(com.android.internal.telephony.sip.SipPhone,com.android.internal.telephony.sip.SipPhone$SipCall,android.net.sip.SipProfile,java.lang.String)>($r11, r0, r30, r1);

        r4 = $r10;

        virtualinvoke r4.<com.android.internal.telephony.sip.SipPhone$SipConnection: void dial()>();

        $r12 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: java.util.ArrayList mConnections>;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        $r14 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DIALING>;

        virtualinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void setState(com.android.internal.telephony.Call$State)>($r14);

     label2:
        return r4;

     label3:
        $r29 := @caughtexception;

        r31 = $r29;

        $r28 = new android.net.sip.SipException;

        specialinvoke $r28.<android.net.sip.SipException: void <init>(java.lang.String,java.lang.Throwable)>("dial", r31);

        throw $r28;

        catch java.text.ParseException from label1 to label2 with label3;
    }

    public void hangup() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0;
        java.lang.Class r1;
        com.android.internal.telephony.CallStateException r2, r5, $r31;
        java.util.Iterator r3;
        com.android.internal.telephony.Connection r4;
        java.lang.Throwable r6, $r32;
        com.android.internal.telephony.Call$State $r7, $r10, $r21, $r29;
        boolean $z0, $z1;
        java.lang.StringBuilder $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r18, $r19, $r20, $r22, $r23, $r25, $r27;
        com.android.internal.telephony.Phone $r16, $r24;
        java.lang.String $r17, $r26;
        java.util.ArrayList $r28;
        java.lang.Object $r30;

        r0 := @this: com.android.internal.telephony.sip.SipPhone$SipCall;

        r1 = class "com/android/internal/telephony/sip/SipPhone";

        entermonitor class "com/android/internal/telephony/sip/SipPhone";

     label01:
        $r7 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.Call$State mState>;

        $z0 = virtualinvoke $r7.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z0 == 0 goto label09;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hangup: call ");

        $r21 = virtualinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.Call$State getState()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on phone ");

        $r24 = virtualinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.Phone getPhone()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void log(java.lang.String)>($r26);

        $r29 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTING>;

        virtualinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void setState(com.android.internal.telephony.Call$State)>($r29);

        r2 = null;

        $r28 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: java.util.ArrayList mConnections>;

        r3 = virtualinvoke $r28.<java.util.ArrayList: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r30 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.internal.telephony.Connection) $r30;

     label03:
        virtualinvoke r4.<com.android.internal.telephony.Connection: void hangup()>();

     label04:
        goto label06;

     label05:
        $r31 := @caughtexception;

        r5 = $r31;

        r2 = r5;

     label06:
        goto label02;

     label07:
        if r2 == null goto label08;

        throw r2;

     label08:
        goto label10;

     label09:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hangup: dead call ");

        $r10 = virtualinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.Call$State getState()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on phone ");

        $r16 = virtualinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.Phone getPhone()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void log(java.lang.String)>($r17);

     label10:
        exitmonitor r1;

     label11:
        goto label14;

     label12:
        $r32 := @caughtexception;

        r6 = $r32;

        exitmonitor r1;

     label13:
        throw r6;

     label14:
        return;

        catch com.android.internal.telephony.CallStateException from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    com.android.internal.telephony.sip.SipPhone$SipConnection initIncomingCall(android.net.sip.SipAudioCall, boolean)
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0;
        android.net.sip.SipAudioCall r1;
        boolean z0;
        android.net.sip.SipProfile r2;
        com.android.internal.telephony.sip.SipPhone$SipConnection r3, $r5;
        com.android.internal.telephony.Call$State r4, $r9;
        com.android.internal.telephony.sip.SipPhone $r6, $r8;
        java.util.ArrayList $r7;

        r0 := @this: com.android.internal.telephony.sip.SipPhone$SipCall;

        r1 := @parameter0: android.net.sip.SipAudioCall;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r1.<android.net.sip.SipAudioCall: android.net.sip.SipProfile getPeerProfile()>();

        $r5 = new com.android.internal.telephony.sip.SipPhone$SipConnection;

        $r6 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.sip.SipPhone this$0>;

        specialinvoke $r5.<com.android.internal.telephony.sip.SipPhone$SipConnection: void <init>(com.android.internal.telephony.sip.SipPhone,com.android.internal.telephony.sip.SipPhone$SipCall,android.net.sip.SipProfile)>($r6, r0, r2);

        r3 = $r5;

        $r7 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: java.util.ArrayList mConnections>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        if z0 == 0 goto label1;

        $r9 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State WAITING>;

        goto label2;

     label1:
        $r9 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State INCOMING>;

     label2:
        r4 = $r9;

        virtualinvoke r3.<com.android.internal.telephony.sip.SipPhone$SipConnection: void initIncomingCall(android.net.sip.SipAudioCall,com.android.internal.telephony.Call$State)>(r1, r4);

        virtualinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void setState(com.android.internal.telephony.Call$State)>(r4);

        $r8 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.sip.SipPhone this$0>;

        virtualinvoke $r8.<com.android.internal.telephony.sip.SipPhone: void notifyNewRingingConnectionP(com.android.internal.telephony.Connection)>(r3);

        return r3;
    }

    void rejectCall() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0;

        r0 := @this: com.android.internal.telephony.sip.SipPhone$SipCall;

        specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void log(java.lang.String)>("rejectCall:");

        virtualinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void hangup()>();

        return;
    }

    void acceptCall() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0, $r2;
        com.android.internal.telephony.sip.SipPhone $r1;
        java.util.ArrayList $r3, $r4;
        int $i0;
        java.lang.Object $r5;
        com.android.internal.telephony.sip.SipPhone$SipConnection $r6;
        com.android.internal.telephony.CallStateException $r7, $r8;

        r0 := @this: com.android.internal.telephony.sip.SipPhone$SipCall;

        specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void log(java.lang.String)>("acceptCall: accepting");

        $r1 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.sip.SipPhone this$0>;

        $r2 = staticinvoke <com.android.internal.telephony.sip.SipPhone: com.android.internal.telephony.sip.SipPhone$SipCall access$200(com.android.internal.telephony.sip.SipPhone)>($r1);

        if r0 == $r2 goto label1;

        $r8 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r8.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("acceptCall() in a non-ringing call");

        throw $r8;

     label1:
        $r3 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: java.util.ArrayList mConnections>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 == 1 goto label2;

        $r7 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r7.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("acceptCall() in a conf call");

        throw $r7;

     label2:
        $r4 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: java.util.ArrayList mConnections>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r6 = (com.android.internal.telephony.sip.SipPhone$SipConnection) $r5;

        virtualinvoke $r6.<com.android.internal.telephony.sip.SipPhone$SipConnection: void acceptCall()>();

        return;
    }

    private boolean isSpeakerOn()
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0;
        java.lang.Boolean r1;
        com.android.internal.telephony.sip.SipPhone $r2;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.media.AudioManager $r5;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.telephony.sip.SipPhone$SipCall;

        $r2 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.sip.SipPhone this$0>;

        $r3 = staticinvoke <com.android.internal.telephony.sip.SipPhone: android.content.Context access$300(com.android.internal.telephony.sip.SipPhone)>($r2);

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r5 = (android.media.AudioManager) $r4;

        $z0 = virtualinvoke $r5.<android.media.AudioManager: boolean isSpeakerphoneOn()>();

        r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $z1 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;
    }

    void setAudioGroupMode()
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0;
        android.net.rtp.AudioGroup r1;
        int i0, $i1;
        com.android.internal.telephony.Call$State $r2, $r3;
        boolean $z0, $z1;
        java.lang.Object[] $r4;
        java.lang.Integer $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.android.internal.telephony.sip.SipPhone$SipCall;

        r1 = specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: android.net.rtp.AudioGroup getAudioGroup()>();

        if r1 != null goto label1;

        specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void log(java.lang.String)>("setAudioGroupMode: audioGroup == null ignore");

        return;

     label1:
        i0 = virtualinvoke r1.<android.net.rtp.AudioGroup: int getMode()>();

        $r3 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.Call$State mState>;

        $r2 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if $r3 != $r2 goto label2;

        virtualinvoke r1.<android.net.rtp.AudioGroup: void setMode(int)>(0);

        goto label5;

     label2:
        $z0 = virtualinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: boolean getMute()>();

        if $z0 == 0 goto label3;

        virtualinvoke r1.<android.net.rtp.AudioGroup: void setMode(int)>(1);

        goto label5;

     label3:
        $z1 = specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: boolean isSpeakerOn()>();

        if $z1 == 0 goto label4;

        virtualinvoke r1.<android.net.rtp.AudioGroup: void setMode(int)>(3);

        goto label5;

     label4:
        virtualinvoke r1.<android.net.rtp.AudioGroup: void setMode(int)>(2);

     label5:
        $r4 = newarray (java.lang.Object)[2];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4[0] = $r5;

        $i1 = virtualinvoke r1.<android.net.rtp.AudioGroup: int getMode()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4[1] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("setAudioGroupMode change: %d --> %d", $r4);

        specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void log(java.lang.String)>($r7);

        return;
    }

    void hold() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0;
        java.util.Iterator r1;
        com.android.internal.telephony.Connection r2;
        com.android.internal.telephony.Call$State $r3;
        java.util.ArrayList $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.android.internal.telephony.sip.SipPhone$SipConnection $r6;

        r0 := @this: com.android.internal.telephony.sip.SipPhone$SipCall;

        specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void log(java.lang.String)>("hold:");

        $r3 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        virtualinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void setState(com.android.internal.telephony.Call$State)>($r3);

        $r4 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: java.util.ArrayList mConnections>;

        r1 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.internal.telephony.Connection) $r5;

        $r6 = (com.android.internal.telephony.sip.SipPhone$SipConnection) r2;

        virtualinvoke $r6.<com.android.internal.telephony.sip.SipPhone$SipConnection: void hold()>();

        goto label1;

     label2:
        virtualinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void setAudioGroupMode()>();

        return;
    }

    void unhold() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0;
        android.net.rtp.AudioGroup r1, $r5;
        java.util.Iterator r2;
        com.android.internal.telephony.Connection r3;
        com.android.internal.telephony.Call$State $r4;
        java.util.ArrayList $r6;
        boolean $z0;
        java.lang.Object $r7;
        com.android.internal.telephony.sip.SipPhone$SipConnection $r8;

        r0 := @this: com.android.internal.telephony.sip.SipPhone$SipCall;

        specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void log(java.lang.String)>("unhold:");

        $r4 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        virtualinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void setState(com.android.internal.telephony.Call$State)>($r4);

        $r5 = new android.net.rtp.AudioGroup;

        specialinvoke $r5.<android.net.rtp.AudioGroup: void <init>()>();

        r1 = $r5;

        $r6 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: java.util.ArrayList mConnections>;

        r2 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.internal.telephony.Connection) $r7;

        $r8 = (com.android.internal.telephony.sip.SipPhone$SipConnection) r3;

        virtualinvoke $r8.<com.android.internal.telephony.sip.SipPhone$SipConnection: void unhold(android.net.rtp.AudioGroup)>(r1);

        goto label1;

     label2:
        virtualinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void setAudioGroupMode()>();

        return;
    }

    void setMute(boolean)
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0;
        boolean z0, $z1;
        java.util.Iterator r1;
        com.android.internal.telephony.Connection r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        java.util.ArrayList $r7;
        java.lang.Object $r8;
        com.android.internal.telephony.sip.SipPhone$SipConnection $r9;

        r0 := @this: com.android.internal.telephony.sip.SipPhone$SipCall;

        z0 := @parameter0: boolean;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setMute: muted=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void log(java.lang.String)>($r6);

        $r7 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: java.util.ArrayList mConnections>;

        r1 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r8 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.internal.telephony.Connection) $r8;

        $r9 = (com.android.internal.telephony.sip.SipPhone$SipConnection) r2;

        virtualinvoke $r9.<com.android.internal.telephony.sip.SipPhone$SipConnection: void setMute(boolean)>(z0);

        goto label1;

     label2:
        return;
    }

    boolean getMute()
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0;
        boolean z0, $z1, $z2;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        com.android.internal.telephony.sip.SipPhone$SipConnection $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: com.android.internal.telephony.sip.SipPhone$SipCall;

        $r1 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: java.util.ArrayList mConnections>;

        $z1 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $z2 = 0;

        goto label2;

     label1:
        $r2 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: java.util.ArrayList mConnections>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r4 = (com.android.internal.telephony.sip.SipPhone$SipConnection) $r3;

        $z2 = virtualinvoke $r4.<com.android.internal.telephony.sip.SipPhone$SipConnection: boolean getMute()>();

     label2:
        z0 = $z2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getMute: ret=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void log(java.lang.String)>($r8);

        return z0;
    }

    void merge(com.android.internal.telephony.sip.SipPhone$SipCall) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0, r1;
        android.net.rtp.AudioGroup r2;
        com.android.internal.telephony.Connection[] r3, r4, $r9;
        int i0, i1, $i2;
        com.android.internal.telephony.Connection r5;
        com.android.internal.telephony.sip.SipPhone$SipConnection r6;
        java.util.ArrayList $r7, $r8;
        java.lang.Object[] $r10;
        com.android.internal.telephony.Call$State $r11, $r12, $r13;

        r0 := @this: com.android.internal.telephony.sip.SipPhone$SipCall;

        r1 := @parameter0: com.android.internal.telephony.sip.SipPhone$SipCall;

        specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void log(java.lang.String)>("merge:");

        r2 = specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: android.net.rtp.AudioGroup getAudioGroup()>();

        $r8 = r1.<com.android.internal.telephony.sip.SipPhone$SipCall: java.util.ArrayList mConnections>;

        $r7 = r1.<com.android.internal.telephony.sip.SipPhone$SipCall: java.util.ArrayList mConnections>;

        $i2 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        $r9 = newarray (com.android.internal.telephony.Connection)[$i2];

        $r10 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r9);

        r3 = (com.android.internal.telephony.Connection[]) $r10;

        r4 = r3;

        i0 = lengthof r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r5 = r4[i1];

        r6 = (com.android.internal.telephony.sip.SipPhone$SipConnection) r5;

        specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void add(com.android.internal.telephony.sip.SipPhone$SipConnection)>(r6);

        $r13 = virtualinvoke r6.<com.android.internal.telephony.sip.SipPhone$SipConnection: com.android.internal.telephony.Call$State getState()>();

        $r12 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if $r13 != $r12 goto label2;

        virtualinvoke r6.<com.android.internal.telephony.sip.SipPhone$SipConnection: void unhold(android.net.rtp.AudioGroup)>(r2);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r11 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        virtualinvoke r1.<com.android.internal.telephony.sip.SipPhone$SipCall: void setState(com.android.internal.telephony.Call$State)>($r11);

        return;
    }

    private void add(com.android.internal.telephony.sip.SipPhone$SipConnection)
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0, r2;
        com.android.internal.telephony.sip.SipPhone$SipConnection r1;
        java.util.ArrayList $r3, $r4;

        r0 := @this: com.android.internal.telephony.sip.SipPhone$SipCall;

        r1 := @parameter0: com.android.internal.telephony.sip.SipPhone$SipConnection;

        specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void log(java.lang.String)>("add:");

        r2 = virtualinvoke r1.<com.android.internal.telephony.sip.SipPhone$SipConnection: com.android.internal.telephony.sip.SipPhone$SipCall getCall()>();

        if r2 != r0 goto label1;

        return;

     label1:
        if r2 == null goto label2;

        $r4 = r2.<com.android.internal.telephony.sip.SipPhone$SipCall: java.util.ArrayList mConnections>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

     label2:
        $r3 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: java.util.ArrayList mConnections>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        virtualinvoke r1.<com.android.internal.telephony.sip.SipPhone$SipConnection: void changeOwner(com.android.internal.telephony.sip.SipPhone$SipCall)>(r0);

        return;
    }

    void sendDtmf(char)
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0;
        char c0;
        android.net.rtp.AudioGroup r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r7, $r8;
        java.lang.String $r5, $r9;
        int $i1;

        r0 := @this: com.android.internal.telephony.sip.SipPhone$SipCall;

        c0 := @parameter0: char;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendDtmf: c=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void log(java.lang.String)>($r5);

        r1 = specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: android.net.rtp.AudioGroup getAudioGroup()>();

        if r1 != null goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendDtmf: audioGroup == null, ignore c=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void log(java.lang.String)>($r9);

        return;

     label1:
        $i1 = specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: int convertDtmf(char)>(c0);

        virtualinvoke r1.<android.net.rtp.AudioGroup: void sendDtmf(int)>($i1);

        return;
    }

    private int convertDtmf(char)
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0;
        char c0;
        int i1;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: com.android.internal.telephony.sip.SipPhone$SipCall;

        c0 := @parameter0: char;

        i1 = c0 - 48;

        if i1 < 0 goto label1;

        if i1 <= 9 goto label9;

     label1:
        lookupswitch(c0)
        {
            case 35: goto label3;
            case 42: goto label2;
            case 65: goto label4;
            case 66: goto label5;
            case 67: goto label6;
            case 68: goto label7;
            default: goto label8;
        };

     label2:
        return 10;

     label3:
        return 11;

     label4:
        return 12;

     label5:
        return 13;

     label6:
        return 14;

     label7:
        return 15;

     label8:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid DTMF char: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(c0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label9:
        return i1;
    }

    protected void setState(com.android.internal.telephony.Call$State)
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0;
        com.android.internal.telephony.Call$State r1, $r2, $r5, $r17, $r19, $r20;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r16;
        com.android.internal.telephony.Phone $r12;
        java.util.ArrayList $r15;
        int $i0;
        java.lang.String $r18;
        com.android.internal.telephony.sip.SipPhone $r21, $r22, $r23, $r24;

        r0 := @this: com.android.internal.telephony.sip.SipPhone$SipCall;

        r1 := @parameter0: com.android.internal.telephony.Call$State;

        $r2 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.Call$State mState>;

        if $r2 == r1 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setState: cur state");

        $r5 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.Call$State mState>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" --> ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": on phone ");

        $r12 = virtualinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.Phone getPhone()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r15 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: java.util.ArrayList mConnections>;

        $i0 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void log(java.lang.String)>($r18);

        $r17 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ALERTING>;

        if r1 != $r17 goto label1;

        r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.Call$State mState> = r1;

        $r23 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.sip.SipPhone this$0>;

        virtualinvoke $r23.<com.android.internal.telephony.sip.SipPhone: void startRingbackTone()>();

        goto label2;

     label1:
        $r19 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.Call$State mState>;

        $r20 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ALERTING>;

        if $r19 != $r20 goto label2;

        $r24 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.sip.SipPhone this$0>;

        virtualinvoke $r24.<com.android.internal.telephony.sip.SipPhone: void stopRingbackTone()>();

     label2:
        r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.Call$State mState> = r1;

        $r22 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.sip.SipPhone this$0>;

        virtualinvoke $r22.<com.android.internal.telephony.sip.SipPhone: void updatePhoneState()>();

        $r21 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.sip.SipPhone this$0>;

        virtualinvoke $r21.<com.android.internal.telephony.sip.SipPhone: void notifyPreciseCallStateChanged()>();

     label3:
        return;
    }

    void onConnectionStateChanged(com.android.internal.telephony.sip.SipPhone$SipConnection)
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0;
        com.android.internal.telephony.sip.SipPhone$SipConnection r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        com.android.internal.telephony.Call$State $r6, $r7, $r8;

        r0 := @this: com.android.internal.telephony.sip.SipPhone$SipCall;

        r1 := @parameter0: com.android.internal.telephony.sip.SipPhone$SipConnection;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onConnectionStateChanged: conn=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void log(java.lang.String)>($r5);

        $r7 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.Call$State mState>;

        $r6 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if $r7 == $r6 goto label1;

        $r8 = virtualinvoke r1.<com.android.internal.telephony.sip.SipPhone$SipConnection: com.android.internal.telephony.Call$State getState()>();

        virtualinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void setState(com.android.internal.telephony.Call$State)>($r8);

     label1:
        return;
    }

    void onConnectionEnded(com.android.internal.telephony.sip.SipPhone$SipConnection)
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0;
        com.android.internal.telephony.sip.SipPhone$SipConnection r1;
        boolean z0, $z1;
        java.util.Iterator r2;
        com.android.internal.telephony.Connection r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r11, $r12, $r15, $r18, $r21, $r22, $r23, $r25;
        java.lang.String $r7, $r14, $r24;
        com.android.internal.telephony.Call$State $r8, $r9, $r17, $r20, $r26, $r27;
        com.android.internal.telephony.sip.SipPhone $r10;
        java.util.ArrayList $r13, $r16;
        int $i0;
        java.lang.Object $r19;

        r0 := @this: com.android.internal.telephony.sip.SipPhone$SipCall;

        r1 := @parameter0: com.android.internal.telephony.sip.SipPhone$SipConnection;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onConnectionEnded: conn=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void log(java.lang.String)>($r7);

        $r9 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.Call$State mState>;

        $r8 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        if $r9 == $r8 goto label4;

        z0 = 1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("---check connections: ");

        $r13 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: java.util.ArrayList mConnections>;

        $i0 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void log(java.lang.String)>($r14);

        $r16 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: java.util.ArrayList mConnections>;

        r2 = virtualinvoke $r16.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r19 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.internal.telephony.Connection) $r19;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   state=");

        $r20 = virtualinvoke r3.<com.android.internal.telephony.Connection: com.android.internal.telephony.Call$State getState()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void log(java.lang.String)>($r24);

        $r27 = virtualinvoke r3.<com.android.internal.telephony.Connection: com.android.internal.telephony.Call$State getState()>();

        $r26 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        if $r27 == $r26 goto label2;

        z0 = 0;

        goto label3;

     label2:
        goto label1;

     label3:
        if z0 == 0 goto label4;

        $r17 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        virtualinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void setState(com.android.internal.telephony.Call$State)>($r17);

     label4:
        $r10 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: com.android.internal.telephony.sip.SipPhone this$0>;

        staticinvoke <com.android.internal.telephony.sip.SipPhone: void access$400(com.android.internal.telephony.sip.SipPhone,com.android.internal.telephony.Connection)>($r10, r1);

        return;
    }

    private android.net.rtp.AudioGroup getAudioGroup()
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0;
        java.util.ArrayList $r1, $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.android.internal.telephony.sip.SipPhone$SipConnection $r4;
        android.net.rtp.AudioGroup $r5;

        r0 := @this: com.android.internal.telephony.sip.SipPhone$SipCall;

        $r1 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: java.util.ArrayList mConnections>;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = r0.<com.android.internal.telephony.sip.SipPhone$SipCall: java.util.ArrayList mConnections>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r4 = (com.android.internal.telephony.sip.SipPhone$SipConnection) $r3;

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.sip.SipPhone$SipConnection: android.net.rtp.AudioGroup getAudioGroup()>();

        return $r5;
    }

    private void log(java.lang.String)
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.sip.SipPhone$SipCall;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SipCall", r1);

        return;
    }

    void <init>(com.android.internal.telephony.sip.SipPhone, com.android.internal.telephony.sip.SipPhone$1)
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0;
        com.android.internal.telephony.sip.SipPhone r1;
        com.android.internal.telephony.sip.SipPhone$1 r2;

        r0 := @this: com.android.internal.telephony.sip.SipPhone$SipCall;

        r1 := @parameter0: com.android.internal.telephony.sip.SipPhone;

        r2 := @parameter1: com.android.internal.telephony.sip.SipPhone$1;

        specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void <init>(com.android.internal.telephony.sip.SipPhone)>(r1);

        return;
    }

    static android.net.rtp.AudioGroup access$1500(com.android.internal.telephony.sip.SipPhone$SipCall)
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0;
        android.net.rtp.AudioGroup $r1;

        r0 := @parameter0: com.android.internal.telephony.sip.SipPhone$SipCall;

        $r1 = specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: android.net.rtp.AudioGroup getAudioGroup()>();

        return $r1;
    }

    static void access$1600(com.android.internal.telephony.sip.SipPhone$SipCall, com.android.internal.telephony.sip.SipPhone$SipConnection)
    {
        com.android.internal.telephony.sip.SipPhone$SipCall r0;
        com.android.internal.telephony.sip.SipPhone$SipConnection r1;

        r0 := @parameter0: com.android.internal.telephony.sip.SipPhone$SipCall;

        r1 := @parameter1: com.android.internal.telephony.sip.SipPhone$SipConnection;

        specialinvoke r0.<com.android.internal.telephony.sip.SipPhone$SipCall: void add(com.android.internal.telephony.sip.SipPhone$SipConnection)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.sip.SipPhone$SipCall: boolean SC_VDBG> = 0;

        <com.android.internal.telephony.sip.SipPhone$SipCall: boolean SC_DBG> = 1;

        <com.android.internal.telephony.sip.SipPhone$SipCall: java.lang.String SC_TAG> = "SipCall";

        return;
    }
}
