public class com.android.internal.telephony.cdma.CDMALTEPhone extends com.android.internal.telephony.cdma.CDMAPhone
{
    static final java.lang.String LOG_LTE_TAG;
    private static final boolean DBG;
    private com.android.internal.telephony.uicc.SIMRecords mSimRecords;
    private com.android.internal.telephony.uicc.IsimUiccRecords mIsimUiccRecords;

    public void <init>(android.content.Context, com.android.internal.telephony.CommandsInterface, com.android.internal.telephony.PhoneNotifier, int)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        android.content.Context r1;
        com.android.internal.telephony.CommandsInterface r2;
        com.android.internal.telephony.PhoneNotifier r3;
        int i0;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.telephony.CommandsInterface;

        r3 := @parameter2: com.android.internal.telephony.PhoneNotifier;

        i0 := @parameter3: int;

        specialinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean,int)>(r1, r2, r3, 0, i0);

        return;
    }

    public void <init>(android.content.Context, com.android.internal.telephony.CommandsInterface, com.android.internal.telephony.PhoneNotifier, boolean, int)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        android.content.Context r1;
        com.android.internal.telephony.CommandsInterface r2;
        com.android.internal.telephony.PhoneNotifier r3;
        boolean z0;
        int i0, $i1;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        com.android.internal.telephony.dataconnection.DcTracker $r8;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.telephony.CommandsInterface;

        r3 := @parameter2: com.android.internal.telephony.PhoneNotifier;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        specialinvoke r0.<com.android.internal.telephony.cdma.CDMAPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,int)>(r1, r2, r3, i0);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CDMALTEPhone: constructor: sub = ");

        $i1 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: int mPhoneId>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CDMAPhone", $r7);

        $r8 = new com.android.internal.telephony.dataconnection.DcTracker;

        specialinvoke $r8.<com.android.internal.telephony.dataconnection.DcTracker: void <init>(com.android.internal.telephony.PhoneBase)>(r0);

        r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker> = $r8;

        return;
    }

    public void <init>(android.content.Context, com.android.internal.telephony.CommandsInterface, com.android.internal.telephony.PhoneNotifier)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        android.content.Context r1;
        com.android.internal.telephony.CommandsInterface r2;
        com.android.internal.telephony.PhoneNotifier r3;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.telephony.CommandsInterface;

        r3 := @parameter2: com.android.internal.telephony.PhoneNotifier;

        specialinvoke r0.<com.android.internal.telephony.cdma.CDMAPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean)>(r1, r2, r3, 0);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        android.os.Message r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 500: goto label1;
            case 501: goto label2;
            default: goto label3;
        };

     label1:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void log(java.lang.String)>("EVENT_SUBSCRIPTION_ACTIVATED");

        specialinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void onSubscriptionActivated()>();

        goto label4;

     label2:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void log(java.lang.String)>("EVENT_SUBSCRIPTION_DEACTIVATED");

        specialinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void onSubscriptionDeactivated()>();

        goto label4;

     label3:
        specialinvoke r0.<com.android.internal.telephony.cdma.CDMAPhone: void handleMessage(android.os.Message)>(r1);

     label4:
        return;
    }

    protected void initSstIcc()
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        com.android.internal.telephony.cdma.CdmaLteServiceStateTracker $r1;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        $r1 = new com.android.internal.telephony.cdma.CdmaLteServiceStateTracker;

        specialinvoke $r1.<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void <init>(com.android.internal.telephony.cdma.CDMALTEPhone)>(r0);

        r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.cdma.CdmaServiceStateTracker mSST> = $r1;

        return;
    }

    public void dispose()
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        $r3 = <com.android.internal.telephony.PhoneProxy: java.lang.Object lockForRadioTechnologyChange>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<com.android.internal.telephony.cdma.CDMAPhone: void dispose()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeReferences()
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        specialinvoke r0.<com.android.internal.telephony.cdma.CDMAPhone: void removeReferences()>();

        return;
    }

    public com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState(java.lang.String)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        java.lang.String r1, $r14;
        com.android.internal.telephony.PhoneConstants$DataState r2;
        com.android.internal.telephony.cdma.CdmaServiceStateTracker $r3, $r17;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r4, $r5;
        boolean $z0, $z1;
        int[] $r6;
        com.android.internal.telephony.DctConstants$State $r7;
        int $i0, $i1;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12;
        com.android.internal.telephony.cdma.CdmaCallTracker $r13;
        com.android.internal.telephony.PhoneConstants$State $r15, $r16;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: java.lang.String;

        r2 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState DISCONNECTED>;

        $r3 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.cdma.CdmaServiceStateTracker mSST>;

        if $r3 != null goto label1;

        r2 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState DISCONNECTED>;

        goto label7;

     label1:
        $r4 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        $z0 = virtualinvoke $r4.<com.android.internal.telephony.dataconnection.DcTrackerBase: boolean isApnTypeEnabled(java.lang.String)>(r1);

        if $z0 != 0 goto label2;

        r2 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState DISCONNECTED>;

        goto label7;

     label2:
        $r6 = <com.android.internal.telephony.cdma.CDMALTEPhone$1: int[] $SwitchMap$com$android$internal$telephony$DctConstants$State>;

        $r5 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        $r7 = virtualinvoke $r5.<com.android.internal.telephony.dataconnection.DcTrackerBase: com.android.internal.telephony.DctConstants$State getState(java.lang.String)>(r1);

        $i0 = virtualinvoke $r7.<com.android.internal.telephony.DctConstants$State: int ordinal()>();

        $i1 = $r6[$i0];

        tableswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label3;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label4;
            case 6: goto label6;
            case 7: goto label6;
            default: goto label7;
        };

     label3:
        r2 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState DISCONNECTED>;

        goto label7;

     label4:
        $r13 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.cdma.CdmaCallTracker mCT>;

        $r15 = $r13.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        $r16 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        if $r15 == $r16 goto label5;

        $r17 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.cdma.CdmaServiceStateTracker mSST>;

        $z1 = virtualinvoke $r17.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean isConcurrentVoiceAndDataAllowed()>();

        if $z1 != 0 goto label5;

        r2 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState SUSPENDED>;

        goto label7;

     label5:
        r2 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState CONNECTED>;

        goto label7;

     label6:
        r2 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState CONNECTING>;

     label7:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getDataConnectionState apnType=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ret=");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void log(java.lang.String)>($r14);

        return r2;
    }

    boolean updateCurrentCarrierInProvider(java.lang.String)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        java.lang.String r1, $r7;
        boolean z0;
        int $i0;
        com.android.internal.telephony.uicc.UiccController $r2;
        com.android.internal.telephony.uicc.UiccCardApplication $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $i0 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: int mPhoneId>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication(int,int)>($i0, 1);

        if $r3 != null goto label1;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void log(java.lang.String)>("updateCurrentCarrierInProvider APP_FAM_3GPP == null");

        z0 = specialinvoke r0.<com.android.internal.telephony.cdma.CDMAPhone: boolean updateCurrentCarrierInProvider(java.lang.String)>(r1);

        goto label2;

     label1:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void log(java.lang.String)>("updateCurrentCarrierInProvider not updated");

        z0 = 1;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateCurrentCarrierInProvider X retVal=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void log(java.lang.String)>($r7);

        return z0;
    }

    public boolean updateCurrentCarrierInProvider()
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        long l0, $l1, $l4;
        java.lang.String r1, $r10;
        android.net.Uri r2, $r12;
        android.content.ContentValues r3, $r14;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r11;
        boolean $z0;
        byte $b3;
        android.content.Context $r13;
        android.content.ContentResolver $r16;
        android.database.SQLException $r17, r18;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        l0 = staticinvoke <android.telephony.SubscriptionManager: long getDefaultDataSubId()>();

        r1 = virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: java.lang.String getOperatorNumeric()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateCurrentCarrierInProvider: mSubscription = ");

        $l1 = virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: long getSubId()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" currentDds = ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" operatorNumeric = ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CDMAPhone", $r10);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label4;

        $l4 = virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: long getSubId()>();

        $b3 = $l4 cmp l0;

        if $b3 != 0 goto label4;

     label1:
        $r12 = <android.provider.Telephony$Carriers: android.net.Uri CONTENT_URI>;

        r2 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r12, "current");

        $r14 = new android.content.ContentValues;

        specialinvoke $r14.<android.content.ContentValues: void <init>()>();

        r3 = $r14;

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("numeric", r1);

        $r13 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: android.content.Context mContext>;

        $r16 = virtualinvoke $r13.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r16.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>(r2, r3);

     label2:
        return 1;

     label3:
        $r17 := @caughtexception;

        r18 = $r17;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CDMAPhone", "Can\'t store current operator", r18);

     label4:
        return 0;

        catch android.database.SQLException from label1 to label2 with label3;
    }

    public java.lang.String getSubscriberId()
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        com.android.internal.telephony.uicc.SIMRecords $r1, $r2;
        java.lang.String $r3;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        $r1 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String getIMSI()>();

        goto label2;

     label1:
        $r3 = "";

     label2:
        return $r3;
    }

    public java.lang.String getGroupIdLevel1()
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        com.android.internal.telephony.uicc.SIMRecords $r1, $r2;
        java.lang.String $r3;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        $r1 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String getGid1()>();

        goto label2;

     label1:
        $r3 = "";

     label2:
        return $r3;
    }

    public java.lang.String getImei()
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        $r1 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: java.lang.String mImei>;

        return $r1;
    }

    public java.lang.String getDeviceSvn()
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        $r1 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: java.lang.String mImeiSv>;

        return $r1;
    }

    public com.android.internal.telephony.uicc.IsimRecords getIsimRecords()
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        com.android.internal.telephony.uicc.IsimUiccRecords $r1;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        $r1 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.IsimUiccRecords mIsimUiccRecords>;

        return $r1;
    }

    public java.lang.String getMsisdn()
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        com.android.internal.telephony.uicc.SIMRecords $r1, $r2;
        java.lang.String $r3;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        $r1 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        $r3 = virtualinvoke $r2.<com.android.internal.telephony.uicc.SIMRecords: java.lang.String getMsisdnNumber()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public void getAvailableNetworks(android.os.Message)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        android.os.Message r1;
        com.android.internal.telephony.CommandsInterface $r2;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void getAvailableNetworks(android.os.Message)>(r1);

        return;
    }

    protected void onUpdateIccAvailability()
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        com.android.internal.telephony.uicc.UiccCardApplication r1, r9;
        com.android.internal.telephony.uicc.IsimUiccRecords r2;
        com.android.internal.telephony.uicc.SIMRecords r3;
        com.android.internal.telephony.uicc.UiccController $r4, $r5, $r6;
        int $i0, $i1;
        com.android.internal.telephony.uicc.IccRecords $r7, $r8;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        $r4 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        if $r4 != null goto label1;

        return;

     label1:
        $r5 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $i0 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: int mPhoneId>;

        r1 = virtualinvoke $r5.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication(int,int)>($i0, 3);

        r2 = null;

        if r1 == null goto label2;

        $r8 = virtualinvoke r1.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccRecords getIccRecords()>();

        r2 = (com.android.internal.telephony.uicc.IsimUiccRecords) $r8;

     label2:
        r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.IsimUiccRecords mIsimUiccRecords> = r2;

        $r6 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $i1 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: int mPhoneId>;

        r9 = virtualinvoke $r6.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication(int,int)>($i1, 1);

        r3 = null;

        if r9 == null goto label3;

        $r7 = virtualinvoke r9.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccRecords getIccRecords()>();

        r3 = (com.android.internal.telephony.uicc.SIMRecords) $r7;

     label3:
        r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords> = r3;

        specialinvoke r0.<com.android.internal.telephony.cdma.CDMAPhone: void onUpdateIccAvailability()>();

        return;
    }

    protected void init(android.content.Context, com.android.internal.telephony.PhoneNotifier)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        android.content.Context r1;
        com.android.internal.telephony.PhoneNotifier r2;
        android.os.PowerManager r3;
        java.lang.String r4, $r22;
        com.android.internal.telephony.CommandsInterface $r5, $r7, $r12, $r13, $r14, $r15, $r16, $r19, $r21;
        com.android.internal.telephony.cdma.CdmaCallTracker $r6;
        com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager $r8;
        com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager $r9;
        com.android.internal.telephony.PhoneSubInfo $r10;
        com.android.internal.telephony.cdma.EriManager $r11;
        com.android.internal.telephony.cdma.CdmaServiceStateTracker $r17;
        java.lang.Object $r18;
        android.os.PowerManager$WakeLock $r20;
        boolean $z0, $z1;
        android.os.Message $r23;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.telephony.PhoneNotifier;

        $r5 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r5.<com.android.internal.telephony.CommandsInterface: void setPhoneType(int)>(2);

        $r6 = new com.android.internal.telephony.cdma.CdmaCallTracker;

        specialinvoke $r6.<com.android.internal.telephony.cdma.CdmaCallTracker: void <init>(com.android.internal.telephony.cdma.CDMAPhone)>(r0);

        r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.cdma.CdmaCallTracker mCT> = $r6;

        $r7 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $r8 = staticinvoke <com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager getInstance(android.content.Context,com.android.internal.telephony.CommandsInterface,android.os.Handler,int,java.lang.Object)>(r1, $r7, r0, 27, null);

        r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.cdma.CdmaSubscriptionSourceManager mCdmaSSM> = $r8;

        $r9 = new com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager;

        specialinvoke $r9.<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: void <init>(com.android.internal.telephony.cdma.CDMAPhone)>(r0);

        r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager mRuimPhoneBookInterfaceManager> = $r9;

        $r10 = new com.android.internal.telephony.PhoneSubInfo;

        specialinvoke $r10.<com.android.internal.telephony.PhoneSubInfo: void <init>(com.android.internal.telephony.Phone)>(r0);

        r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.PhoneSubInfo mSubInfo> = $r10;

        $r11 = new com.android.internal.telephony.cdma.EriManager;

        specialinvoke $r11.<com.android.internal.telephony.cdma.EriManager: void <init>(com.android.internal.telephony.PhoneBase,android.content.Context,int)>(r0, r1, 0);

        r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.cdma.EriManager mEriManager> = $r11;

        $r12 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r12.<com.android.internal.telephony.CommandsInterface: void registerForAvailable(android.os.Handler,int,java.lang.Object)>(r0, 1, null);

        $r13 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r13.<com.android.internal.telephony.CommandsInterface: void registerForOffOrNotAvailable(android.os.Handler,int,java.lang.Object)>(r0, 8, null);

        $r14 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r14.<com.android.internal.telephony.CommandsInterface: void registerForOn(android.os.Handler,int,java.lang.Object)>(r0, 5, null);

        $r15 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r15.<com.android.internal.telephony.CommandsInterface: void setOnSuppServiceNotification(android.os.Handler,int,java.lang.Object)>(r0, 2, null);

        $r17 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.cdma.CdmaServiceStateTracker mSST>;

        virtualinvoke $r17.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void registerForNetworkAttached(android.os.Handler,int,java.lang.Object)>(r0, 19, null);

        $r16 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r16.<com.android.internal.telephony.CommandsInterface: void setEmergencyCallbackMode(android.os.Handler,int,java.lang.Object)>(r0, 25, null);

        $r19 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r19.<com.android.internal.telephony.CommandsInterface: void registerForExitEmergencyCallbackMode(android.os.Handler,int,java.lang.Object)>(r0, 26, null);

        $r18 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        r3 = (android.os.PowerManager) $r18;

        $r20 = virtualinvoke r3.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "CDMAPhone");

        r0.<com.android.internal.telephony.cdma.CDMALTEPhone: android.os.PowerManager$WakeLock mWakeLock> = $r20;

        r4 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ril.cdma.inecmmode", "false");

        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("true");

        r0.<com.android.internal.telephony.cdma.CDMALTEPhone: boolean mIsPhoneInEcmState> = $z1;

        $z0 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: boolean mIsPhoneInEcmState>;

        if $z0 == 0 goto label1;

        $r21 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $r23 = virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: android.os.Message obtainMessage(int)>(26);

        interfaceinvoke $r21.<com.android.internal.telephony.CommandsInterface: void exitEmergencyCallbackMode(android.os.Message)>($r23);

     label1:
        $r22 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ro.cdma.otaspnumschema", "");

        r0.<com.android.internal.telephony.cdma.CDMALTEPhone: java.lang.String mCarrierOtaSpNumSchema> = $r22;

        specialinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void setProperties()>();

        return;
    }

    private void onSubscriptionActivated()
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11, $r13;
        com.android.internal.telephony.Subscription $r3, $r6, $r9, $r12;
        int $i0, $i1, $i2;
        com.android.internal.telephony.Subscription$SubscriptionStatus $r14;
        com.android.internal.telephony.cdma.CdmaServiceStateTracker $r15, $r18, $r19;
        java.lang.String $r16;
        android.os.Message $r17;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r20;
        com.android.internal.telephony.cdma.CdmaLteServiceStateTracker $r21;
        com.android.internal.telephony.dataconnection.DcTracker $r22;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SUBSCRIPTION ACTIVATED : slotId : ");

        $r3 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.Subscription mSubscriptionData>;

        $i0 = $r3.<com.android.internal.telephony.Subscription: int slotId>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" appid : ");

        $r6 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.Subscription mSubscriptionData>;

        $i1 = $r6.<com.android.internal.telephony.Subscription: int m3gpp2Index>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" subId : ");

        $r9 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.Subscription mSubscriptionData>;

        $i2 = $r9.<com.android.internal.telephony.Subscription: int subId>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" subStatus : ");

        $r12 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.Subscription mSubscriptionData>;

        $r14 = $r12.<com.android.internal.telephony.Subscription: com.android.internal.telephony.Subscription$SubscriptionStatus subStatus>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void log(java.lang.String)>($r16);

        specialinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void setProperties()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void onUpdateIccAvailability()>();

        $r18 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.cdma.CdmaServiceStateTracker mSST>;

        $r15 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.cdma.CdmaServiceStateTracker mSST>;

        $r17 = virtualinvoke $r15.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: android.os.Message obtainMessage(int)>(42);

        virtualinvoke $r18.<com.android.internal.telephony.cdma.CdmaServiceStateTracker: boolean sendMessage(android.os.Message)>($r17);

        $r19 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.cdma.CdmaServiceStateTracker mSST>;

        $r21 = (com.android.internal.telephony.cdma.CdmaLteServiceStateTracker) $r19;

        virtualinvoke $r21.<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void updateCdmaSubscription()>();

        $r20 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        $r22 = (com.android.internal.telephony.dataconnection.DcTracker) $r20;

        virtualinvoke $r22.<com.android.internal.telephony.dataconnection.DcTracker: void updateRecords()>();

        return;
    }

    private void onSubscriptionDeactivated()
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void log(java.lang.String)>("SUBSCRIPTION DEACTIVATED");

        r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.Subscription mSubscriptionData> = null;

        return;
    }

    private void setProperties()
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        java.lang.String r1, r2, $r4, $r5, $r9, $r15;
        java.lang.Integer $r3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r6, $r7, $r8, $r11, $r12, $r13;
        long $l0;
        com.android.internal.telephony.SubscriptionController $r10;
        android.content.Context $r14;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        $r3 = new java.lang.Integer;

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>(2);

        $r4 = virtualinvoke $r3.<java.lang.Integer: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void setSystemProperty(java.lang.String,java.lang.String)>("gsm.current.phone-type", $r4);

        r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.cdma.home.operator.alpha");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void setSystemProperty(java.lang.String,java.lang.String)>("gsm.sim.operator.alpha", r1);

     label1:
        $r5 = <com.android.internal.telephony.cdma.CDMALTEPhone: java.lang.String PROPERTY_CDMA_HOME_OPERATOR_NUMERIC>;

        r2 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>($r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("update icc_operator_numeric=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void log(java.lang.String)>($r9);

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 != 0 goto label2;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void setSystemProperty(java.lang.String,java.lang.String)>("gsm.sim.operator.numeric", r2);

        $r10 = staticinvoke <com.android.internal.telephony.SubscriptionController: com.android.internal.telephony.SubscriptionController getInstance()>();

        $l0 = virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: long getSubId()>();

        virtualinvoke $r10.<com.android.internal.telephony.SubscriptionController: int setMccMnc(java.lang.String,long)>(r2, $l0);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void setIsoCountryProperty(java.lang.String)>(r2);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("update mccmnc=");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: void log(java.lang.String)>($r15);

        $r14 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: android.content.Context mContext>;

        staticinvoke <com.android.internal.telephony.MccTable: void updateMccMncConfiguration(android.content.Context,java.lang.String,boolean)>($r14, r2, 0);

     label2:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: boolean updateCurrentCarrierInProvider()>();

        return;
    }

    public void setSystemProperty(java.lang.String, java.lang.String)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        java.lang.String r1, r2;
        boolean $z0;
        long $l0;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: boolean getUnitTestMode()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $l0 = virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: long getSubId()>();

        staticinvoke <android.telephony.TelephonyManager: void setTelephonyProperty(java.lang.String,long,java.lang.String)>(r1, $l0, r2);

        return;
    }

    public java.lang.String getSystemProperty(java.lang.String, java.lang.String)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        java.lang.String r1, r2, $r3;
        boolean $z0;
        long $l0;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: boolean getUnitTestMode()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $l0 = virtualinvoke r0.<com.android.internal.telephony.cdma.CDMALTEPhone: long getSubId()>();

        $r3 = staticinvoke <android.telephony.TelephonyManager: java.lang.String getTelephonyProperty(java.lang.String,long,java.lang.String)>(r1, $l0, r2);

        return $r3;
    }

    public void updateDataConnectionTracker()
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r1;
        com.android.internal.telephony.dataconnection.DcTracker $r2;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        $r1 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        $r2 = (com.android.internal.telephony.dataconnection.DcTracker) $r1;

        virtualinvoke $r2.<com.android.internal.telephony.dataconnection.DcTracker: void update()>();

        return;
    }

    public void setInternalDataEnabled(boolean, android.os.Message)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        boolean z0;
        android.os.Message r1;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r2;
        com.android.internal.telephony.dataconnection.DcTracker $r3;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        $r3 = (com.android.internal.telephony.dataconnection.DcTracker) $r2;

        virtualinvoke $r3.<com.android.internal.telephony.dataconnection.DcTracker: boolean setInternalDataEnabled(boolean,android.os.Message)>(z0, r1);

        return;
    }

    public boolean setInternalDataEnabledFlag(boolean)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        boolean z0, $z1;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r1;
        com.android.internal.telephony.dataconnection.DcTracker $r2;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        $r2 = (com.android.internal.telephony.dataconnection.DcTracker) $r1;

        $z1 = virtualinvoke $r2.<com.android.internal.telephony.dataconnection.DcTracker: boolean setInternalDataEnabledFlag(boolean)>(z0);

        return $z1;
    }

    public java.lang.String getOperatorNumeric()
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        java.lang.String r1, $r9, $r16;
        com.android.internal.telephony.uicc.IccRecords r2;
        com.android.internal.telephony.uicc.RuimRecords r3;
        int $i0, $i1, $i2, $i4;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r13, $r14, $r15;
        java.lang.Boolean $r17;
        boolean $z0, $z1;
        java.lang.Object $r18;
        java.util.concurrent.atomic.AtomicReference $r19;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 = null;

        r2 = null;

        $i0 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: int mCdmaSubscriptionSource>;

        if $i0 != 1 goto label1;

        r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.cdma.home.operator.numeric");

        goto label3;

     label1:
        $i1 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: int mCdmaSubscriptionSource>;

        if $i1 != 0 goto label3;

        r2 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.uicc.SIMRecords mSimRecords>;

        if r2 == null goto label2;

        r1 = virtualinvoke r2.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getOperatorNumeric()>();

        goto label3;

     label2:
        $r19 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r18 = virtualinvoke $r19.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r2 = (com.android.internal.telephony.uicc.IccRecords) $r18;

        if r2 == null goto label3;

        $z1 = r2 instanceof com.android.internal.telephony.uicc.RuimRecords;

        if $z1 == 0 goto label3;

        r3 = (com.android.internal.telephony.uicc.RuimRecords) r2;

        r1 = virtualinvoke r3.<com.android.internal.telephony.uicc.RuimRecords: java.lang.String getRUIMOperatorNumeric()>();

     label3:
        if r1 != null goto label6;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getOperatorNumeric: Cannot retrieve operatorNumeric: mCdmaSubscriptionSource = ");

        $i4 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: int mCdmaSubscriptionSource>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIccRecords = ");

        if r2 == null goto label4;

        $z0 = virtualinvoke r2.<com.android.internal.telephony.uicc.IccRecords: boolean getRecordsLoaded()>();

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        goto label5;

     label4:
        $r17 = null;

     label5:
        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("CDMAPhone", $r16);

     label6:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getOperatorNumeric: mCdmaSubscriptionSource = ");

        $i2 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: int mCdmaSubscriptionSource>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" operatorNumeric = ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CDMAPhone", $r9);

        return r1;
    }

    public void registerForAllDataDisconnected(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r3;
        com.android.internal.telephony.dataconnection.DcTracker $r4;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        $r4 = (com.android.internal.telephony.dataconnection.DcTracker) $r3;

        virtualinvoke $r4.<com.android.internal.telephony.dataconnection.DcTracker: void registerForAllDataDisconnected(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void unregisterForAllDataDisconnected(android.os.Handler)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        android.os.Handler r1;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r2;
        com.android.internal.telephony.dataconnection.DcTracker $r3;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.cdma.CDMALTEPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        $r3 = (com.android.internal.telephony.dataconnection.DcTracker) $r2;

        virtualinvoke $r3.<com.android.internal.telephony.dataconnection.DcTracker: void unregisterForAllDataDisconnected(android.os.Handler)>(r1);

        return;
    }

    protected void log(java.lang.String)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CDMALTEPhone", r1);

        return;
    }

    protected void loge(java.lang.String)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("CDMALTEPhone", r1);

        return;
    }

    protected void loge(java.lang.String, java.lang.Throwable)
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        java.lang.String r1;
        java.lang.Throwable r2;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CDMALTEPhone", r1, r2);

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.cdma.CDMALTEPhone r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;

        r0 := @this: com.android.internal.telephony.cdma.CDMALTEPhone;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("CDMALTEPhone extends:");

        specialinvoke r0.<com.android.internal.telephony.cdma.CDMAPhone: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.cdma.CDMALTEPhone: boolean DBG> = 1;

        <com.android.internal.telephony.cdma.CDMALTEPhone: java.lang.String LOG_LTE_TAG> = "CDMALTEPhone";

        return;
    }
}
