public class com.android.internal.telephony.cdma.CdmaInboundSmsHandler extends com.android.internal.telephony.InboundSmsHandler
{
    private final com.android.internal.telephony.cdma.CdmaSMSDispatcher mSmsDispatcher;
    private final com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler mServiceCategoryProgramHandler;
    private byte[] mLastDispatchedSmsFingerprint;
    private byte[] mLastAcknowledgedSmsFingerprint;
    private final boolean mCheckForDuplicatePortsInOmadmWapPush;

    private void <init>(android.content.Context, com.android.internal.telephony.SmsStorageMonitor, com.android.internal.telephony.PhoneBase, com.android.internal.telephony.cdma.CdmaSMSDispatcher)
    {
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r0;
        android.content.Context r1;
        com.android.internal.telephony.SmsStorageMonitor r2;
        com.android.internal.telephony.PhoneBase r3;
        com.android.internal.telephony.cdma.CdmaSMSDispatcher r4;
        com.android.internal.telephony.CellBroadcastHandler $r5;
        android.content.res.Resources $r6;
        boolean $z0;
        com.android.internal.telephony.CommandsInterface $r7, $r9;
        com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler $r8;
        android.os.Handler $r10;

        r0 := @this: com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.telephony.SmsStorageMonitor;

        r3 := @parameter2: com.android.internal.telephony.PhoneBase;

        r4 := @parameter3: com.android.internal.telephony.cdma.CdmaSMSDispatcher;

        $r5 = staticinvoke <com.android.internal.telephony.CellBroadcastHandler: com.android.internal.telephony.CellBroadcastHandler makeCellBroadcastHandler(android.content.Context,com.android.internal.telephony.PhoneBase)>(r1, r3);

        specialinvoke r0.<com.android.internal.telephony.InboundSmsHandler: void <init>(java.lang.String,android.content.Context,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.PhoneBase,com.android.internal.telephony.CellBroadcastHandler)>("CdmaInboundSmsHandler", r1, r2, r3, $r5);

        $r6 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $z0 = virtualinvoke $r6.<android.content.res.Resources: boolean getBoolean(int)>(17956942);

        r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: boolean mCheckForDuplicatePortsInOmadmWapPush> = $z0;

        r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.cdma.CdmaSMSDispatcher mSmsDispatcher> = r4;

        $r7 = r3.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        $r8 = staticinvoke <com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler: com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler makeScpHandler(android.content.Context,com.android.internal.telephony.CommandsInterface)>(r1, $r7);

        r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler mServiceCategoryProgramHandler> = $r8;

        $r9 = r3.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        $r10 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: android.os.Handler getHandler()>();

        interfaceinvoke $r9.<com.android.internal.telephony.CommandsInterface: void setOnNewCdmaSms(android.os.Handler,int,java.lang.Object)>($r10, 1, null);

        return;
    }

    protected void onQuitting()
    {
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r0;
        com.android.internal.telephony.PhoneBase $r1;
        com.android.internal.telephony.CommandsInterface $r2;
        android.os.Handler $r3;
        com.android.internal.telephony.CellBroadcastHandler $r4;

        r0 := @this: com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.PhoneBase mPhone>;

        $r2 = $r1.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: android.os.Handler getHandler()>();

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void unSetOnNewCdmaSms(android.os.Handler)>($r3);

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.CellBroadcastHandler mCellBroadcastHandler>;

        virtualinvoke $r4.<com.android.internal.telephony.CellBroadcastHandler: void dispose()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void log(java.lang.String)>("unregistered for 3GPP2 SMS");

        specialinvoke r0.<com.android.internal.telephony.InboundSmsHandler: void onQuitting()>();

        return;
    }

    public static com.android.internal.telephony.cdma.CdmaInboundSmsHandler makeInboundSmsHandler(android.content.Context, com.android.internal.telephony.SmsStorageMonitor, com.android.internal.telephony.PhoneBase, com.android.internal.telephony.cdma.CdmaSMSDispatcher)
    {
        android.content.Context r0;
        com.android.internal.telephony.SmsStorageMonitor r1;
        com.android.internal.telephony.PhoneBase r2;
        com.android.internal.telephony.cdma.CdmaSMSDispatcher r3;
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r4, $r5;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.internal.telephony.SmsStorageMonitor;

        r2 := @parameter2: com.android.internal.telephony.PhoneBase;

        r3 := @parameter3: com.android.internal.telephony.cdma.CdmaSMSDispatcher;

        $r5 = new com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        specialinvoke $r5.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void <init>(android.content.Context,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.PhoneBase,com.android.internal.telephony.cdma.CdmaSMSDispatcher)>(r0, r1, r2, r3);

        r4 = $r5;

        virtualinvoke r4.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void start()>();

        return r4;
    }

    private static boolean isInEmergencyCallMode()
    {
        java.lang.String r0, $r1;
        boolean $z0;

        r0 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>("ril.cdma.inecmmode", "false");

        $r1 = "true";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        return $z0;
    }

    protected boolean is3gpp2()
    {
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        return 1;
    }

    protected int dispatchMessageRadioSpecific(com.android.internal.telephony.SmsMessageBase)
    {
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r0;
        com.android.internal.telephony.SmsMessageBase r1;
        com.android.internal.telephony.cdma.SmsMessage r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        android.telephony.SmsCbMessage r3;
        int $i0, $i1, $i2, $i3, i5;
        byte[] $r4, $r5, $r8, $r17, $r19;
        com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler $r6;
        com.android.internal.telephony.SmsStorageMonitor $r7;
        java.lang.String $r9, $r16, $r18;
        long $l4;
        com.android.internal.telephony.SmsConstants$MessageClass $r10, $r11;
        com.android.internal.telephony.cdma.CdmaSMSDispatcher $r12;
        java.lang.StringBuilder $r13, $r14, $r15;
        com.android.internal.telephony.CellBroadcastHandler $r20;

        r0 := @this: com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        r1 := @parameter0: com.android.internal.telephony.SmsMessageBase;

        $z1 = staticinvoke <com.android.internal.telephony.cdma.CdmaInboundSmsHandler: boolean isInEmergencyCallMode()>();

        if $z1 == 0 goto label01;

        return -1;

     label01:
        r2 = (com.android.internal.telephony.cdma.SmsMessage) r1;

        $i0 = virtualinvoke r2.<com.android.internal.telephony.cdma.SmsMessage: int getMessageType()>();

        if 1 != $i0 goto label02;

        $z5 = 1;

        goto label03;

     label02:
        $z5 = 0;

     label03:
        z0 = $z5;

        if z0 == 0 goto label06;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void log(java.lang.String)>("Broadcast type message");

        r3 = virtualinvoke r2.<com.android.internal.telephony.cdma.SmsMessage: android.telephony.SmsCbMessage parseBroadcastSms()>();

        if r3 == null goto label04;

        $r20 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.CellBroadcastHandler mCellBroadcastHandler>;

        virtualinvoke $r20.<com.android.internal.telephony.CellBroadcastHandler: void dispatchSmsMessage(java.lang.Object)>(r3);

        goto label05;

     label04:
        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void loge(java.lang.String)>("error trying to parse broadcast SMS");

     label05:
        return 1;

     label06:
        $r4 = virtualinvoke r2.<com.android.internal.telephony.cdma.SmsMessage: byte[] getIncomingSmsFingerprint()>();

        r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: byte[] mLastDispatchedSmsFingerprint> = $r4;

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: byte[] mLastAcknowledgedSmsFingerprint>;

        if $r5 == null goto label07;

        $r19 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: byte[] mLastDispatchedSmsFingerprint>;

        $r17 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: byte[] mLastAcknowledgedSmsFingerprint>;

        $z4 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r19, $r17);

        if $z4 == 0 goto label07;

        return 1;

     label07:
        virtualinvoke r2.<com.android.internal.telephony.cdma.SmsMessage: void parseSms()>();

        i5 = virtualinvoke r2.<com.android.internal.telephony.cdma.SmsMessage: int getTeleService()>();

        lookupswitch(i5)
        {
            case 4098: goto label09;
            case 4099: goto label08;
            case 4100: goto label11;
            case 4101: goto label09;
            case 4102: goto label10;
            case 262144: goto label08;
            default: goto label12;
        };

     label08:
        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void handleVoicemailTeleservice(com.android.internal.telephony.cdma.SmsMessage)>(r2);

        return 1;

     label09:
        $z3 = virtualinvoke r2.<com.android.internal.telephony.cdma.SmsMessage: boolean isStatusReportMessage()>();

        if $z3 == 0 goto label13;

        $r12 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.cdma.CdmaSMSDispatcher mSmsDispatcher>;

        virtualinvoke $r12.<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void sendStatusReportMessage(com.android.internal.telephony.cdma.SmsMessage)>(r2);

        return 1;

     label10:
        $r6 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler mServiceCategoryProgramHandler>;

        virtualinvoke $r6.<com.android.internal.telephony.cdma.CdmaServiceCategoryProgramHandler: void dispatchSmsMessage(java.lang.Object)>(r2);

        return 1;

     label11:
        goto label13;

     label12:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsupported teleservice 0x");

        $r16 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i5);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void loge(java.lang.String)>($r18);

        return 4;

     label13:
        $r7 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.SmsStorageMonitor mStorageMonitor>;

        $z2 = virtualinvoke $r7.<com.android.internal.telephony.SmsStorageMonitor: boolean isStorageAvailable()>();

        if $z2 != 0 goto label14;

        $r11 = virtualinvoke r2.<com.android.internal.telephony.cdma.SmsMessage: com.android.internal.telephony.SmsConstants$MessageClass getMessageClass()>();

        $r10 = <com.android.internal.telephony.SmsConstants$MessageClass: com.android.internal.telephony.SmsConstants$MessageClass CLASS_0>;

        if $r11 == $r10 goto label14;

        return 3;

     label14:
        if 4100 != i5 goto label15;

        $r8 = virtualinvoke r2.<com.android.internal.telephony.cdma.SmsMessage: byte[] getUserData()>();

        $i2 = r2.<com.android.internal.telephony.cdma.SmsMessage: int mMessageRef>;

        $r9 = virtualinvoke r2.<com.android.internal.telephony.cdma.SmsMessage: java.lang.String getOriginatingAddress()>();

        $l4 = virtualinvoke r2.<com.android.internal.telephony.cdma.SmsMessage: long getTimestampMillis()>();

        $i3 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: int processCdmaWapPdu(byte[],int,java.lang.String,long)>($r8, $i2, $r9, $l4);

        return $i3;

     label15:
        $i1 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: int dispatchNormalMessage(com.android.internal.telephony.SmsMessageBase)>(r1);

        return $i1;
    }

    protected void acknowledgeLastIncomingSms(boolean, int, android.os.Message)
    {
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r0;
        boolean z0, $z1;
        int i0, i1;
        android.os.Message r1;
        com.android.internal.telephony.PhoneBase $r2;
        com.android.internal.telephony.CommandsInterface $r3;
        byte[] $r4;

        r0 := @this: com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.Message;

        $z1 = staticinvoke <com.android.internal.telephony.cdma.CdmaInboundSmsHandler: boolean isInEmergencyCallMode()>();

        if $z1 == 0 goto label1;

        return;

     label1:
        i1 = staticinvoke <com.android.internal.telephony.cdma.CdmaInboundSmsHandler: int resultToCause(int)>(i0);

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.PhoneBase mPhone>;

        $r3 = $r2.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void acknowledgeLastIncomingCdmaSms(boolean,int,android.os.Message)>(z0, i1, r1);

        if i1 != 0 goto label2;

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: byte[] mLastDispatchedSmsFingerprint>;

        r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: byte[] mLastAcknowledgedSmsFingerprint> = $r4;

     label2:
        r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: byte[] mLastDispatchedSmsFingerprint> = null;

        return;
    }

    protected void onUpdatePhoneObject(com.android.internal.telephony.PhoneBase)
    {
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r0;
        com.android.internal.telephony.PhoneBase r1;
        com.android.internal.telephony.CellBroadcastHandler $r2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        r1 := @parameter0: com.android.internal.telephony.PhoneBase;

        specialinvoke r0.<com.android.internal.telephony.InboundSmsHandler: void onUpdatePhoneObject(com.android.internal.telephony.PhoneBase)>(r1);

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.CellBroadcastHandler mCellBroadcastHandler>;

        virtualinvoke $r2.<com.android.internal.telephony.CellBroadcastHandler: void updatePhoneObject(com.android.internal.telephony.PhoneBase)>(r1);

        return;
    }

    private static int resultToCause(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -1: goto label1;
            case 0: goto label4;
            case 1: goto label1;
            case 2: goto label4;
            case 3: goto label2;
            case 4: goto label3;
            default: goto label4;
        };

     label1:
        return 0;

     label2:
        return 35;

     label3:
        return 4;

     label4:
        return 96;
    }

    private void handleVoicemailTeleservice(com.android.internal.telephony.cdma.SmsMessage)
    {
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r0;
        com.android.internal.telephony.cdma.SmsMessage r1;
        int i0, $i1;
        android.content.SharedPreferences r2;
        android.content.SharedPreferences$Editor r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r9, $r10, $r12;
        java.lang.String $r7, $r14;
        android.content.Context $r8;
        com.android.internal.telephony.PhoneBase $r11, $r15;

        r0 := @this: com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        r1 := @parameter0: com.android.internal.telephony.cdma.SmsMessage;

        i0 = virtualinvoke r1.<com.android.internal.telephony.cdma.SmsMessage: int getNumOfVoicemails()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Voicemail count=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void log(java.lang.String)>($r7);

        $r8 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: android.content.Context mContext>;

        r2 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r8);

        r3 = interfaceinvoke r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vm_count_key_cdma");

        $r11 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.PhoneBase mPhone>;

        $i1 = virtualinvoke $r11.<com.android.internal.telephony.PhoneBase: int getPhoneId()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>($r14, i0);

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: void apply()>();

        $r15 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: com.android.internal.telephony.PhoneBase mPhone>;

        virtualinvoke $r15.<com.android.internal.telephony.PhoneBase: void setVoiceMessageWaiting(int,int)>(1, i0);

        return;
    }

    private int processCdmaWapPdu(byte[], int, java.lang.String, long)
    {
        com.android.internal.telephony.cdma.CdmaInboundSmsHandler r0;
        byte[] r1, r3;
        int i0, i6, i7, $i11, $i12, $i13, $i14, $i16, $i24, i25, i26, i27, i28, i29, i30, i31, i32;
        java.lang.String r2, $r18, $r26;
        long l1;
        byte b2, $b8, $b9, $b10, $b15, $b17, $b21, $b23;
        short s3, s4, s5, $s18, $s19, $s20, $s22;
        com.android.internal.telephony.InboundSmsTracker r4, $r21;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r22, $r23, $r24, $r25, $r27;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaInboundSmsHandler;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        l1 := @parameter3: long;

        b2 = 0;

        i25 = b2 + 1;

        $b8 = r1[b2];

        s3 = 255 & $b8;

        if s3 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void log(java.lang.String)>("Received a WAP SMS which is not WDP. Discard.");

        return 1;

     label1:
        i26 = i25 + 1;

        $b9 = r1[i25];

        s4 = 255 & $b9;

        i27 = i26 + 1;

        $b10 = r1[i26];

        s5 = 255 & $b10;

        if s5 < s4 goto label2;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WDP bad segment #");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s5);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expecting 0-");

        $i24 = s4 - 1;

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void loge(java.lang.String)>($r26);

        return 1;

     label2:
        i6 = 0;

        i7 = 0;

        if s5 != 0 goto label3;

        i28 = i27 + 1;

        $b15 = r1[i27];

        $s19 = 255 & $b15;

        i29 = $s19 << 8;

        i30 = i28 + 1;

        $b17 = r1[i28];

        $s18 = 255 & $b17;

        i6 = i29 | $s18;

        i31 = i30 + 1;

        $b21 = r1[i30];

        $s20 = 255 & $b21;

        i32 = $s20 << 8;

        i27 = i31 + 1;

        $b23 = r1[i31];

        $s22 = 255 & $b23;

        i7 = i32 | $s22;

        $z1 = r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: boolean mCheckForDuplicatePortsInOmadmWapPush>;

        if $z1 == 0 goto label3;

        $z0 = staticinvoke <com.android.internal.telephony.cdma.CdmaInboundSmsHandler: boolean checkDuplicatePortOmadmWapPush(byte[],int)>(r1, i27);

        if $z0 == 0 goto label3;

        i27 = i27 + 4;

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received WAP PDU. Type = ");

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s3);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", originator = ");

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", src-port = ");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", dst-port = ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i7);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ID = ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", segment# = ");

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s5);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r17 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s4);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: void log(java.lang.String)>($r18);

        $i13 = lengthof r1;

        $i14 = $i13 - i27;

        r3 = newarray (byte)[$i14];

        $i11 = lengthof r1;

        $i12 = $i11 - i27;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, i27, r3, 0, $i12);

        $r21 = new com.android.internal.telephony.InboundSmsTracker;

        specialinvoke $r21.<com.android.internal.telephony.InboundSmsTracker: void <init>(byte[],long,int,boolean,java.lang.String,int,int,int,boolean)>(r3, l1, i7, 1, r2, i0, s5, s4, 1);

        r4 = $r21;

        $i16 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaInboundSmsHandler: int addTrackerToRawTableAndSendMessage(com.android.internal.telephony.InboundSmsTracker)>(r4);

        return $i16;
    }

    private static boolean checkDuplicatePortOmadmWapPush(byte[], int)
    {
        byte[] r0, r1;
        int i0, $i2, $i3, $i4, $i5, i6, i7;
        com.android.internal.telephony.WspTypeDecoder r2, $r4;
        byte b1;
        java.lang.String r3, $r5;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i6 = i0 + 4;

        $i2 = lengthof r0;

        $i3 = $i2 - i6;

        r1 = newarray (byte)[$i3];

        $i4 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r0, i6, r1, 0, $i4);

        $r4 = new com.android.internal.telephony.WspTypeDecoder;

        specialinvoke $r4.<com.android.internal.telephony.WspTypeDecoder: void <init>(byte[])>(r1);

        r2 = $r4;

        b1 = 2;

        $z0 = virtualinvoke r2.<com.android.internal.telephony.WspTypeDecoder: boolean decodeUintvarInteger(int)>(b1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i5 = virtualinvoke r2.<com.android.internal.telephony.WspTypeDecoder: int getDecodedDataLength()>();

        i7 = b1 + $i5;

        $z1 = virtualinvoke r2.<com.android.internal.telephony.WspTypeDecoder: boolean decodeContentType(int)>(i7);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        r3 = virtualinvoke r2.<com.android.internal.telephony.WspTypeDecoder: java.lang.String getValueString()>();

        $r5 = "application/vnd.syncml.notification";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        return $z2;
    }
}
