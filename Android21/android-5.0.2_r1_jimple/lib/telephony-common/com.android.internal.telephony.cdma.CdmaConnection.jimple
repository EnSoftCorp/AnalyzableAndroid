public class com.android.internal.telephony.cdma.CdmaConnection extends com.android.internal.telephony.Connection
{
    static final java.lang.String LOG_TAG;
    private static final boolean VDBG;
    com.android.internal.telephony.cdma.CdmaCallTracker mOwner;
    com.android.internal.telephony.cdma.CdmaCall mParent;
    java.lang.String mPostDialString;
    boolean mDisconnected;
    int mIndex;
    long mDisconnectTime;
    int mNextPostDialChar;
    int mCause;
    com.android.internal.telephony.Connection$PostDialState mPostDialState;
    int mPreciseCause;
    android.os.Handler mHandler;
    private android.os.PowerManager$WakeLock mPartialWakeLock;
    static final int EVENT_DTMF_DONE;
    static final int EVENT_PAUSE_DONE;
    static final int EVENT_NEXT_POST_DIAL;
    static final int EVENT_WAKE_LOCK_TIMEOUT;
    static final int WAKE_LOCK_TIMEOUT_MILLIS;
    static final int PAUSE_DELAY_MILLIS;

    void <init>(android.content.Context, com.android.internal.telephony.DriverCall, com.android.internal.telephony.cdma.CdmaCallTracker, int)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        android.content.Context r1;
        com.android.internal.telephony.DriverCall r2;
        com.android.internal.telephony.cdma.CdmaCallTracker r3, $r6;
        int i0, $i2, $i3;
        com.android.internal.telephony.Connection$PostDialState $r4;
        com.android.internal.telephony.cdma.CdmaConnection$MyHandler $r5;
        android.os.Looper $r7;
        java.lang.String $r8, $r9;
        boolean $z0;
        long $l1;
        com.android.internal.telephony.DriverCall$State $r10;
        com.android.internal.telephony.cdma.CdmaCall $r11, $r12;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.telephony.DriverCall;

        r3 := @parameter2: com.android.internal.telephony.cdma.CdmaCallTracker;

        i0 := @parameter3: int;

        specialinvoke r0.<com.android.internal.telephony.Connection: void <init>()>();

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mCause> = 0;

        $r4 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState NOT_STARTED>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState> = $r4;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mPreciseCause> = 0;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void createWakeLock(android.content.Context)>(r1);

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void acquireWakeLock()>();

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner> = r3;

        $r5 = new com.android.internal.telephony.cdma.CdmaConnection$MyHandler;

        $r6 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Looper getLooper()>();

        specialinvoke $r5.<com.android.internal.telephony.cdma.CdmaConnection$MyHandler: void <init>(com.android.internal.telephony.cdma.CdmaConnection,android.os.Looper)>(r0, $r7);

        r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.Handler mHandler> = $r5;

        $r8 = r2.<com.android.internal.telephony.DriverCall: java.lang.String number>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mAddress> = $r8;

        $z0 = r2.<com.android.internal.telephony.DriverCall: boolean isMT>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean mIsIncoming> = $z0;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.cdma.CdmaConnection: long mCreateTime> = $l1;

        $r9 = r2.<com.android.internal.telephony.DriverCall: java.lang.String name>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mCnapName> = $r9;

        $i2 = r2.<com.android.internal.telephony.DriverCall: int namePresentation>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mCnapNamePresentation> = $i2;

        $i3 = r2.<com.android.internal.telephony.DriverCall: int numberPresentation>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mNumberPresentation> = $i3;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mIndex> = i0;

        $r10 = r2.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.DriverCall$State state>;

        $r12 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall parentFromDCState(com.android.internal.telephony.DriverCall$State)>($r10);

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent> = $r12;

        $r11 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        virtualinvoke $r11.<com.android.internal.telephony.cdma.CdmaCall: void attach(com.android.internal.telephony.Connection,com.android.internal.telephony.DriverCall)>(r0, r2);

        return;
    }

    void <init>(android.content.Context, java.lang.String, com.android.internal.telephony.cdma.CdmaCallTracker, com.android.internal.telephony.cdma.CdmaCall)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        android.content.Context r1;
        java.lang.String r2, $r12, $r16, $r17, $r18, r23;
        com.android.internal.telephony.cdma.CdmaCallTracker r3, $r7;
        com.android.internal.telephony.cdma.CdmaCall r4;
        com.android.internal.telephony.Connection$PostDialState $r5;
        com.android.internal.telephony.cdma.CdmaConnection$MyHandler $r6;
        android.os.Looper $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r13, $r14, $r15;
        com.android.internal.telephony.Call$State $r19, $r20, $r21, $r22;
        long $l2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.android.internal.telephony.cdma.CdmaCallTracker;

        r4 := @parameter3: com.android.internal.telephony.cdma.CdmaCall;

        specialinvoke r0.<com.android.internal.telephony.Connection: void <init>()>();

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mCause> = 0;

        $r5 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState NOT_STARTED>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState> = $r5;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mPreciseCause> = 0;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void createWakeLock(android.content.Context)>(r1);

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void acquireWakeLock()>();

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner> = r3;

        $r6 = new com.android.internal.telephony.cdma.CdmaConnection$MyHandler;

        $r7 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        $r8 = virtualinvoke $r7.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Looper getLooper()>();

        specialinvoke $r6.<com.android.internal.telephony.cdma.CdmaConnection$MyHandler: void <init>(com.android.internal.telephony.cdma.CdmaConnection,android.os.Looper)>(r0, $r8);

        r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.Handler mHandler> = $r6;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mDialString> = r2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[CDMAConn] CdmaConnection: dialString=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CdmaConnection", $r12);

        r23 = staticinvoke <com.android.internal.telephony.cdma.CdmaConnection: java.lang.String formatDialString(java.lang.String)>(r2);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[CDMAConn] CdmaConnection:formated dialString=");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CdmaConnection", $r16);

        $r18 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortionAlt(java.lang.String)>(r23);

        r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mAddress> = $r18;

        $r17 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractPostDialPortion(java.lang.String)>(r23);

        r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mPostDialString> = $r17;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mIndex> = -1;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean mIsIncoming> = 0;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mCnapName> = null;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mCnapNamePresentation> = 1;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mNumberPresentation> = 1;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.cdma.CdmaConnection: long mCreateTime> = $l2;

        if r4 == null goto label2;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent> = r4;

        $r21 = r4.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State mState>;

        $r19 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if $r21 != $r19 goto label1;

        $r22 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        virtualinvoke r4.<com.android.internal.telephony.cdma.CdmaCall: void attachFake(com.android.internal.telephony.Connection,com.android.internal.telephony.Call$State)>(r0, $r22);

        goto label2;

     label1:
        $r20 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DIALING>;

        virtualinvoke r4.<com.android.internal.telephony.cdma.CdmaCall: void attachFake(com.android.internal.telephony.Connection,com.android.internal.telephony.Call$State)>(r0, $r20);

     label2:
        return;
    }

    void <init>(android.content.Context, com.android.internal.telephony.cdma.CdmaCallWaitingNotification, com.android.internal.telephony.cdma.CdmaCallTracker, com.android.internal.telephony.cdma.CdmaCall)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        android.content.Context r1;
        com.android.internal.telephony.cdma.CdmaCallWaitingNotification r2;
        com.android.internal.telephony.cdma.CdmaCallTracker r3, $r7;
        com.android.internal.telephony.cdma.CdmaCall r4;
        com.android.internal.telephony.Connection$PostDialState $r5;
        com.android.internal.telephony.cdma.CdmaConnection$MyHandler $r6;
        android.os.Looper $r8;
        java.lang.String $r9, $r10;
        int $i0, $i1;
        long $l2;
        com.android.internal.telephony.Call$State $r11;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.telephony.cdma.CdmaCallWaitingNotification;

        r3 := @parameter2: com.android.internal.telephony.cdma.CdmaCallTracker;

        r4 := @parameter3: com.android.internal.telephony.cdma.CdmaCall;

        specialinvoke r0.<com.android.internal.telephony.Connection: void <init>()>();

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mCause> = 0;

        $r5 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState NOT_STARTED>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState> = $r5;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mPreciseCause> = 0;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void createWakeLock(android.content.Context)>(r1);

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void acquireWakeLock()>();

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner> = r3;

        $r6 = new com.android.internal.telephony.cdma.CdmaConnection$MyHandler;

        $r7 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        $r8 = virtualinvoke $r7.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Looper getLooper()>();

        specialinvoke $r6.<com.android.internal.telephony.cdma.CdmaConnection$MyHandler: void <init>(com.android.internal.telephony.cdma.CdmaConnection,android.os.Looper)>(r0, $r8);

        r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.Handler mHandler> = $r6;

        $r9 = r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: java.lang.String number>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mAddress> = $r9;

        $i0 = r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int numberPresentation>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mNumberPresentation> = $i0;

        $r10 = r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: java.lang.String name>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mCnapName> = $r10;

        $i1 = r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int namePresentation>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mCnapNamePresentation> = $i1;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mIndex> = -1;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean mIsIncoming> = 1;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.cdma.CdmaConnection: long mCreateTime> = $l2;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: long mConnectTime> = 0L;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent> = r4;

        $r11 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State WAITING>;

        virtualinvoke r4.<com.android.internal.telephony.cdma.CdmaCall: void attachFake(com.android.internal.telephony.Connection,com.android.internal.telephony.Call$State)>(r0, $r11);

        return;
    }

    public void dispose()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        return;
    }

    static boolean equalsHandlesNulls(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label2;

        if r1 != null goto label1;

        $z0 = 1;

        goto label3;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

     label3:
        return $z0;
    }

    boolean compareTo(com.android.internal.telephony.DriverCall)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.DriverCall r1;
        java.lang.String r2, $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        r1 := @parameter0: com.android.internal.telephony.DriverCall;

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean mIsIncoming>;

        if $z0 != 0 goto label1;

        $z5 = r1.<com.android.internal.telephony.DriverCall: boolean isMT>;

        if $z5 != 0 goto label1;

        return 1;

     label1:
        $r3 = r1.<com.android.internal.telephony.DriverCall: java.lang.String number>;

        $i0 = r1.<com.android.internal.telephony.DriverCall: int TOA>;

        r2 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String stringFromStringAndTOA(java.lang.String,int)>($r3, $i0);

        $z2 = r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean mIsIncoming>;

        $z1 = r1.<com.android.internal.telephony.DriverCall: boolean isMT>;

        if $z2 != $z1 goto label2;

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mAddress>;

        $z3 = staticinvoke <com.android.internal.telephony.cdma.CdmaConnection: boolean equalsHandlesNulls(java.lang.Object,java.lang.Object)>($r4, r2);

        if $z3 == 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    public java.lang.String getOrigDialString()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mDialString>;

        return $r1;
    }

    public com.android.internal.telephony.cdma.CdmaCall getCall()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.cdma.CdmaCall $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        return $r1;
    }

    public long getDisconnectTime()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        long $l0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $l0 = r0.<com.android.internal.telephony.cdma.CdmaConnection: long mDisconnectTime>;

        return $l0;
    }

    public long getHoldDurationMillis()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.Call$State $r1, $r2;
        long $l0, $l1, $l2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Call$State getState()>();

        $r2 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if $r1 == $r2 goto label1;

        return 0L;

     label1:
        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l1 = r0.<com.android.internal.telephony.cdma.CdmaConnection: long mHoldingStartTime>;

        $l2 = $l0 - $l1;

        return $l2;
    }

    public int getDisconnectCause()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $i0 = r0.<com.android.internal.telephony.cdma.CdmaConnection: int mCause>;

        return $i0;
    }

    public com.android.internal.telephony.Call$State getState()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        boolean $z0;
        com.android.internal.telephony.Call$State $r1, $r2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean mDisconnected>;

        if $z0 == 0 goto label1;

        $r2 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        return $r2;

     label1:
        $r1 = specialinvoke r0.<com.android.internal.telephony.Connection: com.android.internal.telephony.Call$State getState()>();

        return $r1;
    }

    public void hangup() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        boolean $z0;
        com.android.internal.telephony.CallStateException $r1;
        com.android.internal.telephony.cdma.CdmaCallTracker $r2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean mDisconnected>;

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        virtualinvoke $r2.<com.android.internal.telephony.cdma.CdmaCallTracker: void hangup(com.android.internal.telephony.cdma.CdmaConnection)>(r0);

        goto label2;

     label1:
        $r1 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r1.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("disconnected");

        throw $r1;

     label2:
        return;
    }

    public void separate() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        boolean $z0;
        com.android.internal.telephony.CallStateException $r1;
        com.android.internal.telephony.cdma.CdmaCallTracker $r2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean mDisconnected>;

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        virtualinvoke $r2.<com.android.internal.telephony.cdma.CdmaCallTracker: void separate(com.android.internal.telephony.cdma.CdmaConnection)>(r0);

        goto label2;

     label1:
        $r1 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r1.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("disconnected");

        throw $r1;

     label2:
        return;
    }

    public com.android.internal.telephony.Connection$PostDialState getPostDialState()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.Connection$PostDialState $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        return $r1;
    }

    public void proceedAfterWaitChar()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.Connection$PostDialState $r1, $r2, $r3, $r6;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r8;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r1 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState WAIT>;

        if $r2 == $r1 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CdmaConnection.proceedAfterWaitChar(): Expected getPostDialState() to be WAIT but was ");

        $r6 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("CdmaConnection", $r8);

        return;

     label1:
        $r3 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState STARTED>;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r3);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void processNextPostDialChar()>();

        return;
    }

    public void proceedAfterWildChar(java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        java.lang.String r1, $r7, $r8, $r10, $r13, $r16, $r20;
        java.lang.StringBuilder r2, $r6, $r11, $r12, $r14, $r15, $r17, $r18;
        com.android.internal.telephony.Connection$PostDialState $r3, $r4, $r5, $r19;
        int $i0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r3 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState WILD>;

        if $r4 == $r3 goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CdmaConnection.proceedAfterWaitChar(): Expected getPostDialState() to be WILD but was ");

        $r19 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("CdmaConnection", $r20);

        return;

     label1:
        $r5 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState STARTED>;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(r1);

        r2 = $r6;

        $r7 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mPostDialString>;

        $i0 = r0.<com.android.internal.telephony.cdma.CdmaConnection: int mNextPostDialChar>;

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>($i0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mPostDialString> = $r10;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mNextPostDialChar> = 0;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("proceedAfterWildChar: new postDialString is ");

        $r13 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mPostDialString>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void log(java.lang.String)>($r16);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void processNextPostDialChar()>();

        return;
    }

    public void cancelPostDial()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.Connection$PostDialState $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r1 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState CANCELLED>;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r1);

        return;
    }

    void onHangupLocal()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mCause> = 3;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mPreciseCause> = 0;

        return;
    }

    int disconnectCauseFromCode(int)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        int i0, i1, $i2;
        com.android.internal.telephony.cdma.CDMAPhone r1;
        com.android.internal.telephony.uicc.UiccCardApplication r2;
        com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState r3, $r7, $r8;
        com.android.internal.telephony.cdma.CdmaCallTracker $r4;
        android.telephony.ServiceState $r5;
        com.android.internal.telephony.uicc.UiccController $r6;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 16: goto label16;
            case 17: goto label01;
            case 34: goto label02;
            case 68: goto label03;
            case 240: goto label04;
            case 241: goto label05;
            case 1000: goto label06;
            case 1001: goto label07;
            case 1002: goto label08;
            case 1003: goto label09;
            case 1004: goto label10;
            case 1005: goto label11;
            case 1006: goto label12;
            case 1007: goto label13;
            case 1008: goto label14;
            case 1009: goto label15;
            case 65535: goto label16;
            default: goto label16;
        };

     label01:
        return 4;

     label02:
        return 5;

     label03:
        return 15;

     label04:
        return 20;

     label05:
        return 21;

     label06:
        return 26;

     label07:
        return 27;

     label08:
        return 28;

     label09:
        return 29;

     label10:
        return 30;

     label11:
        return 31;

     label12:
        return 32;

     label13:
        return 33;

     label14:
        return 34;

     label15:
        return 35;

     label16:
        $r4 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        r1 = $r4.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r5 = virtualinvoke r1.<com.android.internal.telephony.cdma.CDMAPhone: android.telephony.ServiceState getServiceState()>();

        i1 = virtualinvoke $r5.<android.telephony.ServiceState: int getState()>();

        $r6 = staticinvoke <com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccController getInstance()>();

        r2 = virtualinvoke $r6.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication(int)>(2);

        if r2 == null goto label17;

        $r8 = virtualinvoke r2.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState getState()>();

        goto label18;

     label17:
        $r8 = <com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState APPSTATE_UNKNOWN>;

     label18:
        r3 = $r8;

        if i1 != 3 goto label19;

        return 17;

     label19:
        if i1 == 1 goto label20;

        if i1 != 2 goto label21;

     label20:
        return 18;

     label21:
        $i2 = r1.<com.android.internal.telephony.cdma.CDMAPhone: int mCdmaSubscriptionSource>;

        if $i2 != 0 goto label22;

        $r7 = <com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState APPSTATE_READY>;

        if r3 == $r7 goto label22;

        return 19;

     label22:
        if i0 != 16 goto label23;

        return 2;

     label23:
        return 36;
    }

    void onRemoteDisconnect(int)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        int i0, $i1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        i0 := @parameter0: int;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mPreciseCause> = i0;

        $i1 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: int disconnectCauseFromCode(int)>(i0);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean onDisconnect(int)>($i1);

        return;
    }

    boolean onDisconnect(int)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        int i0;
        boolean z0, $z1;
        com.android.internal.telephony.cdma.CdmaCallTracker $r1;
        com.android.internal.telephony.cdma.CDMAPhone $r2;
        com.android.internal.telephony.cdma.CdmaCall $r3, $r4;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        i0 := @parameter0: int;

        z0 = 0;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mCause> = i0;

        $z1 = r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean mDisconnected>;

        if $z1 != 0 goto label1;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void doDisconnect()>();

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        $r2 = $r1.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r2.<com.android.internal.telephony.cdma.CDMAPhone: void notifyDisconnect(com.android.internal.telephony.Connection)>(r0);

        $r3 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        if $r3 == null goto label1;

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        z0 = virtualinvoke $r4.<com.android.internal.telephony.cdma.CdmaCall: boolean connectionDisconnected(com.android.internal.telephony.cdma.CdmaConnection)>(r0);

     label1:
        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void releaseWakeLock()>();

        return z0;
    }

    void onLocalDisconnect()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        boolean $z0;
        com.android.internal.telephony.cdma.CdmaCall $r1, $r2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean mDisconnected>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void doDisconnect()>();

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        virtualinvoke $r2.<com.android.internal.telephony.cdma.CdmaCall: void detach(com.android.internal.telephony.cdma.CdmaConnection)>(r0);

     label1:
        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void releaseWakeLock()>();

        return;
    }

    boolean update(com.android.internal.telephony.DriverCall)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.DriverCall r1;
        com.android.internal.telephony.cdma.CdmaCall r2, $r8, $r26, $r30, $r42, $r43;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, z15;
        com.android.internal.telephony.Call$State $r3, $r4, $r38, $r39;
        com.android.internal.telephony.DriverCall$State $r5;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r11, $r12, $r14, $r16, $r23, $r24, $r25, $r28, $r29, $r31, $r32, $r33, $r34, $r35, $r36, $r37;
        java.lang.String $r13, $r15, $r17, $r18, $r19, $r20, $r21, $r22, $r27, $r40, $r41, $r44, $r45, $r46, $r47;
        int $i0, $i1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        r1 := @parameter0: com.android.internal.telephony.DriverCall;

        z0 = 0;

        z1 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean isConnectingInOrOut()>();

        $r3 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Call$State getState()>();

        $r4 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if $r3 != $r4 goto label01;

        $z14 = 1;

        goto label02;

     label01:
        $z14 = 0;

     label02:
        z2 = $z14;

        $r5 = r1.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.DriverCall$State state>;

        r2 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall parentFromDCState(com.android.internal.telephony.DriverCall$State)>($r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parent= ");

        $r8 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newParent= ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void log(java.lang.String)>($r13);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mNumberConverted ");

        $z4 = r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean mNumberConverted>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void log(java.lang.String)>($r15);

        $r17 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mAddress>;

        $r18 = r1.<com.android.internal.telephony.DriverCall: java.lang.String number>;

        $z5 = staticinvoke <com.android.internal.telephony.cdma.CdmaConnection: boolean equalsHandlesNulls(java.lang.Object,java.lang.Object)>($r17, $r18);

        if $z5 != 0 goto label04;

        $z11 = r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean mNumberConverted>;

        if $z11 == 0 goto label03;

        $r47 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mConvertedNumber>;

        $r46 = r1.<com.android.internal.telephony.DriverCall: java.lang.String number>;

        $z13 = staticinvoke <com.android.internal.telephony.cdma.CdmaConnection: boolean equalsHandlesNulls(java.lang.Object,java.lang.Object)>($r47, $r46);

        if $z13 != 0 goto label04;

     label03:
        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void log(java.lang.String)>("update: phone # changed!");

        $r44 = r1.<com.android.internal.telephony.DriverCall: java.lang.String number>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mAddress> = $r44;

        z0 = 1;

     label04:
        $r19 = r1.<com.android.internal.telephony.DriverCall: java.lang.String name>;

        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r19);

        if $z6 == 0 goto label05;

        $r45 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mCnapName>;

        $z12 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r45);

        if $z12 != 0 goto label06;

        z0 = 1;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mCnapName> = "";

        goto label06;

     label05:
        $r21 = r1.<com.android.internal.telephony.DriverCall: java.lang.String name>;

        $r20 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mCnapName>;

        $z7 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z7 != 0 goto label06;

        z0 = 1;

        $r41 = r1.<com.android.internal.telephony.DriverCall: java.lang.String name>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mCnapName> = $r41;

     label06:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--dssds----");

        $r22 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mCnapName>;

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void log(java.lang.String)>($r27);

        $i1 = r1.<com.android.internal.telephony.DriverCall: int namePresentation>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mCnapNamePresentation> = $i1;

        $i0 = r1.<com.android.internal.telephony.DriverCall: int numberPresentation>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mNumberPresentation> = $i0;

        $r26 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        if r2 == $r26 goto label08;

        $r43 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        if $r43 == null goto label07;

        $r42 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        virtualinvoke $r42.<com.android.internal.telephony.cdma.CdmaCall: void detach(com.android.internal.telephony.cdma.CdmaConnection)>(r0);

     label07:
        virtualinvoke r2.<com.android.internal.telephony.cdma.CdmaCall: void attach(com.android.internal.telephony.Connection,com.android.internal.telephony.DriverCall)>(r0, r1);

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent> = r2;

        z15 = 1;

        goto label12;

     label08:
        $r30 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        z3 = virtualinvoke $r30.<com.android.internal.telephony.cdma.CdmaCall: boolean update(com.android.internal.telephony.cdma.CdmaConnection,com.android.internal.telephony.DriverCall)>(r0, r1);

        if z0 != 0 goto label09;

        if z3 == 0 goto label10;

     label09:
        $z10 = 1;

        goto label11;

     label10:
        $z10 = 0;

     label11:
        z15 = $z10;

     label12:
        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Update, wasConnectingInOrOut=");

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", wasHolding=");

        $r31 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isConnectingInOrOut=");

        $z8 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean isConnectingInOrOut()>();

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z8);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", changed=");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z15);

        $r40 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void log(java.lang.String)>($r40);

        if z1 == 0 goto label13;

        $z9 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean isConnectingInOrOut()>();

        if $z9 != 0 goto label13;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void onConnectedInOrOut()>();

     label13:
        if z15 == 0 goto label14;

        if z2 != 0 goto label14;

        $r39 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Call$State getState()>();

        $r38 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if $r39 != $r38 goto label14;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void onStartedHolding()>();

     label14:
        return z15;
    }

    void fakeHoldBeforeDial()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.cdma.CdmaCall $r1, $r3, $r5, $r6;
        com.android.internal.telephony.cdma.CdmaCallTracker $r2;
        com.android.internal.telephony.Call$State $r4;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        if $r1 == null goto label1;

        $r6 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        virtualinvoke $r6.<com.android.internal.telephony.cdma.CdmaCall: void detach(com.android.internal.telephony.cdma.CdmaConnection)>(r0);

     label1:
        $r2 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        $r3 = $r2.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mBackgroundCall>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent> = $r3;

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        $r4 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        virtualinvoke $r5.<com.android.internal.telephony.cdma.CdmaCall: void attachFake(com.android.internal.telephony.Connection,com.android.internal.telephony.Call$State)>(r0, $r4);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void onStartedHolding()>();

        return;
    }

    int getCDMAIndex() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        int $i0, $i1, $i2;
        com.android.internal.telephony.CallStateException $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $i0 = r0.<com.android.internal.telephony.cdma.CdmaConnection: int mIndex>;

        if $i0 < 0 goto label1;

        $i1 = r0.<com.android.internal.telephony.cdma.CdmaConnection: int mIndex>;

        $i2 = $i1 + 1;

        return $i2;

     label1:
        $r1 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r1.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("CDMA connection index not assigned");

        throw $r1;
    }

    void onConnectedInOrOut()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        long $l0, $l1, $l2;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.cdma.CdmaConnection: long mConnectTime> = $l0;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.internal.telephony.cdma.CdmaConnection: long mConnectTimeReal> = $l1;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: long mDuration> = 0L;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onConnectedInOrOut: connectTime=");

        $l2 = r0.<com.android.internal.telephony.cdma.CdmaConnection: long mConnectTime>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void log(java.lang.String)>($r4);

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean mIsIncoming>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void processNextPostDialChar()>();

        goto label2;

     label1:
        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void releaseWakeLock()>();

     label2:
        return;
    }

    private void doDisconnect()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        long $l0, $l1, $l2, $l3;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mIndex> = -1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.cdma.CdmaConnection: long mDisconnectTime> = $l0;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = r0.<com.android.internal.telephony.cdma.CdmaConnection: long mConnectTimeReal>;

        $l3 = $l1 - $l2;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: long mDuration> = $l3;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean mDisconnected> = 1;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void clearPostDialListeners()>();

        return;
    }

    void onStartedHolding()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        long $l0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.internal.telephony.cdma.CdmaConnection: long mHoldingStartTime> = $l0;

        return;
    }

    private boolean processPostDialChar(char)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        char c0;
        boolean $z0;
        com.android.internal.telephony.Connection$PostDialState $r1, $r2, $r3;
        android.os.Handler $r4, $r5, $r8;
        android.os.Message $r6, $r10;
        com.android.internal.telephony.cdma.CdmaCallTracker $r7;
        com.android.internal.telephony.CommandsInterface $r9;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        c0 := @parameter0: char;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean is12Key(char)>(c0);

        if $z0 == 0 goto label1;

        $r7 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        $r9 = $r7.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r8 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.Handler mHandler>;

        $r10 = virtualinvoke $r8.<android.os.Handler: android.os.Message obtainMessage(int)>(1);

        interfaceinvoke $r9.<com.android.internal.telephony.CommandsInterface: void sendDtmf(char,android.os.Message)>(c0, $r10);

        goto label5;

     label1:
        if c0 != 44 goto label2;

        $r3 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState PAUSE>;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r3);

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.Handler mHandler>;

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.Handler mHandler>;

        $r6 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        virtualinvoke $r5.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r6, 2000L);

        goto label5;

     label2:
        if c0 != 59 goto label3;

        $r2 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState WAIT>;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r2);

        goto label5;

     label3:
        if c0 != 78 goto label4;

        $r1 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState WILD>;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r1);

        goto label5;

     label4:
        return 0;

     label5:
        return 1;
    }

    public java.lang.String getRemainingPostDialString()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        java.lang.String r1, $r6, $r7, $r8;
        int i0, i1, $i2, $i3, $i4;
        com.android.internal.telephony.Connection$PostDialState $r2, $r3, $r4, $r5;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r3 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r2 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState CANCELLED>;

        if $r3 == $r2 goto label1;

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r4 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState COMPLETE>;

        if $r5 == $r4 goto label1;

        $r6 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mPostDialString>;

        if $r6 == null goto label1;

        $r7 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mPostDialString>;

        $i2 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i3 = r0.<com.android.internal.telephony.cdma.CdmaConnection: int mNextPostDialChar>;

        if $i2 > $i3 goto label2;

     label1:
        return "";

     label2:
        $r8 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mPostDialString>;

        $i4 = r0.<com.android.internal.telephony.cdma.CdmaConnection: int mNextPostDialChar>;

        r1 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int)>($i4);

        if r1 == null goto label5;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(59);

        i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(44);

        if i0 <= 0 goto label4;

        if i0 < i1 goto label3;

        if i1 > 0 goto label4;

     label3:
        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        goto label5;

     label4:
        if i1 <= 0 goto label5;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

     label5:
        return r1;
    }

    public void updateParent(com.android.internal.telephony.cdma.CdmaCall, com.android.internal.telephony.cdma.CdmaCall)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.cdma.CdmaCall r1, r2;
        com.android.internal.telephony.Call$State $r3;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        r1 := @parameter0: com.android.internal.telephony.cdma.CdmaCall;

        r2 := @parameter1: com.android.internal.telephony.cdma.CdmaCall;

        if r2 == r1 goto label2;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.internal.telephony.cdma.CdmaCall: void detach(com.android.internal.telephony.cdma.CdmaConnection)>(r0);

     label1:
        $r3 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        virtualinvoke r2.<com.android.internal.telephony.cdma.CdmaCall: void attachFake(com.android.internal.telephony.Connection,com.android.internal.telephony.Call$State)>(r0, $r3);

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent> = r2;

     label2:
        return;
    }

    protected void finalize()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        android.os.PowerManager$WakeLock $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        $z0 = virtualinvoke $r1.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label1;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("CdmaConnection", "[CdmaConn] UNEXPECTED; mPartialWakeLock is held when finalizing.");

     label1:
        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void releaseWakeLock()>();

        return;
    }

    void processNextPostDialChar()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        android.os.Registrant r1;
        boolean z1;
        com.android.internal.telephony.Connection$PostDialState r2, $r4, $r5, $r7, $r12;
        android.os.AsyncResult r3;
        java.lang.String $r6, $r11, $r13, $r20;
        com.android.internal.telephony.cdma.CdmaCallTracker $r8;
        com.android.internal.telephony.cdma.CDMAPhone $r9;
        android.os.Message $r10, $r16, r21;
        int $i0, $i1, $i2, $i3;
        android.os.Handler $r14;
        java.lang.StringBuilder $r15, $r17, $r18, $r19;
        char c5;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r4 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState CANCELLED>;

        if $r5 != $r4 goto label1;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void releaseWakeLock()>();

        return;

     label1:
        $r6 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mPostDialString>;

        if $r6 == null goto label2;

        $r11 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mPostDialString>;

        $i0 = virtualinvoke $r11.<java.lang.String: int length()>();

        $i1 = r0.<com.android.internal.telephony.cdma.CdmaConnection: int mNextPostDialChar>;

        if $i0 > $i1 goto label3;

     label2:
        $r7 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState COMPLETE>;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r7);

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void releaseWakeLock()>();

        c5 = 0;

        goto label4;

     label3:
        $r12 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState STARTED>;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r12);

        $r13 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mPostDialString>;

        $i3 = r0.<com.android.internal.telephony.cdma.CdmaConnection: int mNextPostDialChar>;

        $i2 = $i3 + 1;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mNextPostDialChar> = $i2;

        c5 = virtualinvoke $r13.<java.lang.String: char charAt(int)>($i3);

        z1 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean processPostDialChar(char)>(c5);

        if z1 != 0 goto label4;

        $r14 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.Handler mHandler>;

        $r16 = virtualinvoke $r14.<android.os.Handler: android.os.Message obtainMessage(int)>(3);

        virtualinvoke $r16.<android.os.Message: void sendToTarget()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processNextPostDialChar: c=");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c5);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isn\'t valid!");

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("CDMA", $r20);

        return;

     label4:
        $r8 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        $r9 = $r8.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        r1 = $r9.<com.android.internal.telephony.cdma.CDMAPhone: android.os.Registrant mPostDialHandler>;

        if r1 == null goto label5;

        $r10 = virtualinvoke r1.<android.os.Registrant: android.os.Message messageForRegistrant()>();

        r21 = $r10;

        if $r10 == null goto label5;

        r2 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        r3 = staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message)>(r21);

        r3.<android.os.AsyncResult: java.lang.Object result> = r0;

        r3.<android.os.AsyncResult: java.lang.Object userObj> = r2;

        r21.<android.os.Message: int arg1> = c5;

        virtualinvoke r21.<android.os.Message: void sendToTarget()>();

     label5:
        return;
    }

    private boolean isConnectingInOrOut()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.cdma.CdmaCall $r1, $r3, $r4, $r5, $r8;
        com.android.internal.telephony.cdma.CdmaCallTracker $r2;
        com.android.internal.telephony.Call$State $r6, $r7, $r9, $r10;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        if $r1 == null goto label1;

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        $r3 = $r2.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall>;

        if $r4 == $r3 goto label1;

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        $r7 = $r5.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State mState>;

        $r6 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DIALING>;

        if $r7 == $r6 goto label1;

        $r8 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        $r10 = $r8.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State mState>;

        $r9 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ALERTING>;

        if $r10 != $r9 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private com.android.internal.telephony.cdma.CdmaCall parentFromDCState(com.android.internal.telephony.DriverCall$State)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.DriverCall$State r1;
        int[] $r2;
        int $i0, $i1;
        com.android.internal.telephony.cdma.CdmaCallTracker $r3, $r5, $r7;
        com.android.internal.telephony.cdma.CdmaCall $r4, $r6, $r8;
        java.lang.RuntimeException $r9;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.String $r13;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        r1 := @parameter0: com.android.internal.telephony.DriverCall$State;

        $r2 = <com.android.internal.telephony.cdma.CdmaConnection$1: int[] $SwitchMap$com$android$internal$telephony$DriverCall$State>;

        $i0 = virtualinvoke r1.<com.android.internal.telephony.DriverCall$State: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label3;
            case 6: goto label3;
            default: goto label4;
        };

     label1:
        $r3 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        $r4 = $r3.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        return $r4;

     label2:
        $r7 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        $r8 = $r7.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mBackgroundCall>;

        return $r8;

     label3:
        $r5 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        $r6 = $r5.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall>;

        return $r6;

     label4:
        $r9 = new java.lang.RuntimeException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal call state: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13);

        throw $r9;
    }

    private void setPostDialState(com.android.internal.telephony.Connection$PostDialState)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.Connection$PostDialState r1, $r5, $r11;
        android.os.PowerManager$WakeLock r2, $r6, $r7;
        android.os.Message r3;
        java.lang.Throwable r4, $r12;
        boolean $z0;
        android.os.Handler $r8, $r9, $r10, $r13;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        r1 := @parameter0: com.android.internal.telephony.Connection$PostDialState;

        $r5 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState STARTED>;

        if r1 == $r5 goto label01;

        $r11 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState PAUSE>;

        if r1 != $r11 goto label09;

     label01:
        $r6 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        r2 = $r6;

        entermonitor $r6;

     label02:
        $r7 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        $z0 = virtualinvoke $r7.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label03;

        $r10 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.Handler mHandler>;

        virtualinvoke $r10.<android.os.Handler: void removeMessages(int)>(4);

        goto label04;

     label03:
        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void acquireWakeLock()>();

     label04:
        $r8 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.Handler mHandler>;

        r3 = virtualinvoke $r8.<android.os.Handler: android.os.Message obtainMessage(int)>(4);

        $r9 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.Handler mHandler>;

        virtualinvoke $r9.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r3, 60000L);

        exitmonitor r2;

     label05:
        goto label08;

     label06:
        $r12 := @caughtexception;

        r4 = $r12;

        exitmonitor r2;

     label07:
        throw r4;

     label08:
        goto label10;

     label09:
        $r13 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.Handler mHandler>;

        virtualinvoke $r13.<android.os.Handler: void removeMessages(int)>(4);

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void releaseWakeLock()>();

     label10:
        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState> = r1;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void notifyPostDialListeners()>();

        return;

        catch java.lang.Throwable from label02 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
    }

    private void createWakeLock(android.content.Context)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        android.content.Context r1;
        android.os.PowerManager r2;
        java.lang.Object $r3;
        android.os.PowerManager$WakeLock $r4;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        r1 := @parameter0: android.content.Context;

        $r3 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        r2 = (android.os.PowerManager) $r3;

        $r4 = virtualinvoke r2.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "CdmaConnection");

        r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock> = $r4;

        return;
    }

    private void acquireWakeLock()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        android.os.PowerManager$WakeLock $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void log(java.lang.String)>("acquireWakeLock");

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        virtualinvoke $r1.<android.os.PowerManager$WakeLock: void acquire()>();

        return;
    }

    private void releaseWakeLock()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        android.os.PowerManager$WakeLock r1, $r3, $r4, $r5;
        java.lang.Throwable r2, $r6;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r3 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        $z0 = virtualinvoke $r4.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void log(java.lang.String)>("releaseWakeLock");

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        virtualinvoke $r5.<android.os.PowerManager$WakeLock: void release()>();

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private static boolean isPause(char)
    {
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        if c0 != 44 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isWait(char)
    {
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        if c0 != 59 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static int findNextPCharOrNonPOrNonWCharIndex(java.lang.String, int)
    {
        java.lang.String r0;
        int i0, i1, i2, $i5, $i7;
        boolean z0, $z1, $z2, $z3, $z4;
        char c3, $c4, $c6;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        z0 = staticinvoke <com.android.internal.telephony.cdma.CdmaConnection: boolean isWait(char)>($c4);

        i1 = i0 + 1;

        i2 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        if i1 >= i2 goto label4;

        c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        $z2 = staticinvoke <com.android.internal.telephony.cdma.CdmaConnection: boolean isWait(char)>(c3);

        if $z2 == 0 goto label2;

        z0 = 1;

     label2:
        $z3 = staticinvoke <com.android.internal.telephony.cdma.CdmaConnection: boolean isWait(char)>(c3);

        if $z3 != 0 goto label3;

        $z4 = staticinvoke <com.android.internal.telephony.cdma.CdmaConnection: boolean isPause(char)>(c3);

        if $z4 != 0 goto label3;

        goto label4;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        if i1 >= i2 goto label5;

        $i5 = i0 + 1;

        if i1 <= $i5 goto label5;

        if z0 != 0 goto label5;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $z1 = staticinvoke <com.android.internal.telephony.cdma.CdmaConnection: boolean isPause(char)>($c6);

        if $z1 == 0 goto label5;

        $i7 = i0 + 1;

        return $i7;

     label5:
        return i1;
    }

    private static char findPOrWCharToAppend(java.lang.String, int, int)
    {
        java.lang.String r0;
        int i0, i1, $i4;
        char c2, c3, $c5;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $z0 = staticinvoke <com.android.internal.telephony.cdma.CdmaConnection: boolean isPause(char)>(c2);

        if $z0 == 0 goto label1;

        $c5 = 44;

        goto label2;

     label1:
        $c5 = 59;

     label2:
        c3 = $c5;

        $i4 = i0 + 1;

        if i1 <= $i4 goto label3;

        c3 = 59;

     label3:
        return c3;
    }

    public static java.lang.String formatDialString(java.lang.String)
    {
        java.lang.String r0, $r3, $r4;
        int i0, i2, i3, $i5, $i6;
        java.lang.StringBuilder r1, $r2;
        char c1, c4;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        i2 = 0;

     label2:
        if i2 >= i0 goto label9;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $z0 = staticinvoke <com.android.internal.telephony.cdma.CdmaConnection: boolean isPause(char)>(c1);

        if $z0 != 0 goto label3;

        $z1 = staticinvoke <com.android.internal.telephony.cdma.CdmaConnection: boolean isWait(char)>(c1);

        if $z1 == 0 goto label7;

     label3:
        $i5 = i0 - 1;

        if i2 >= $i5 goto label8;

        i3 = staticinvoke <com.android.internal.telephony.cdma.CdmaConnection: int findNextPCharOrNonPOrNonWCharIndex(java.lang.String,int)>(r0, i2);

        if i3 >= i0 goto label5;

        c4 = staticinvoke <com.android.internal.telephony.cdma.CdmaConnection: char findPOrWCharToAppend(java.lang.String,int,int)>(r0, i2, i3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);

        $i6 = i2 + 1;

        if i3 <= $i6 goto label4;

        i2 = i3 - 1;

     label4:
        goto label6;

     label5:
        if i3 != i0 goto label6;

        i2 = i0 - 1;

     label6:
        goto label8;

     label7:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

     label8:
        i2 = i2 + 1;

        goto label2;

     label9:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String cdmaCheckAndProcessPlusCode(java.lang.String)>($r3);

        return $r4;
    }

    private void log(java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[CDMAConn] ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CdmaConnection", $r5);

        return;
    }

    public int getNumberPresentation()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $i0 = r0.<com.android.internal.telephony.cdma.CdmaConnection: int mNumberPresentation>;

        return $i0;
    }

    public com.android.internal.telephony.UUSInfo getUUSInfo()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        return null;
    }

    public int getPreciseDisconnectCause()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $i0 = r0.<com.android.internal.telephony.cdma.CdmaConnection: int mPreciseCause>;

        return $i0;
    }

    public com.android.internal.telephony.Connection getOrigConnection()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        return null;
    }

    public boolean isMultiparty()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        return 0;
    }

    public volatile com.android.internal.telephony.Call getCall()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.cdma.CdmaCall $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall getCall()>();

        return $r1;
    }

    static void access$000(com.android.internal.telephony.cdma.CdmaConnection)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;

        r0 := @parameter0: com.android.internal.telephony.cdma.CdmaConnection;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void releaseWakeLock()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.cdma.CdmaConnection: int PAUSE_DELAY_MILLIS> = 2000;

        <com.android.internal.telephony.cdma.CdmaConnection: int WAKE_LOCK_TIMEOUT_MILLIS> = 60000;

        <com.android.internal.telephony.cdma.CdmaConnection: int EVENT_WAKE_LOCK_TIMEOUT> = 4;

        <com.android.internal.telephony.cdma.CdmaConnection: int EVENT_NEXT_POST_DIAL> = 3;

        <com.android.internal.telephony.cdma.CdmaConnection: int EVENT_PAUSE_DONE> = 2;

        <com.android.internal.telephony.cdma.CdmaConnection: int EVENT_DTMF_DONE> = 1;

        <com.android.internal.telephony.cdma.CdmaConnection: boolean VDBG> = 0;

        <com.android.internal.telephony.cdma.CdmaConnection: java.lang.String LOG_TAG> = "CdmaConnection";

        return;
    }
}
