public class com.android.internal.telephony.gsm.GsmSmsAddress extends com.android.internal.telephony.SmsAddress
{
    static final int OFFSET_ADDRESS_LENGTH;
    static final int OFFSET_TOA;
    static final int OFFSET_ADDRESS_VALUE;

    public void <init>(byte[], int, int) throws java.text.ParseException
    {
        com.android.internal.telephony.gsm.GsmSmsAddress r0;
        byte[] r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11;
        int i0, i1, i4, $i10, $i12, $i13, $i14, $i18, $i19;
        short s2, s3, $s7, $s8, $s9, $s11, $s17;
        byte $b5, $b6, $b15, $b16, b20;
        boolean $z0;
        java.lang.String $r8, $r14, $r17;
        java.lang.StringBuilder $r12, $r13, $r16;
        java.text.ParseException $r15;

        r0 := @this: com.android.internal.telephony.gsm.GsmSmsAddress;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.internal.telephony.SmsAddress: void <init>()>();

        $r2 = newarray (byte)[i1];

        r0.<com.android.internal.telephony.gsm.GsmSmsAddress: byte[] origBytes> = $r2;

        $r3 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: byte[] origBytes>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, i0, $r3, 0, i1);

        $r4 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: byte[] origBytes>;

        $b5 = $r4[0];

        s2 = $b5 & 255;

        $r5 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: byte[] origBytes>;

        $b6 = $r5[1];

        s3 = $b6 & 255;

        $s7 = s3 >> 4;

        $s8 = 7 & $s7;

        r0.<com.android.internal.telephony.gsm.GsmSmsAddress: int ton> = $s8;

        $s9 = s3 & 128;

        if $s9 == 128 goto label1;

        $r15 = new java.text.ParseException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid TOA - high bit must be set. toa = ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s3);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $i19 = i0 + 1;

        specialinvoke $r15.<java.text.ParseException: void <init>(java.lang.String,int)>($r17, $i19);

        throw $r15;

     label1:
        $z0 = virtualinvoke r0.<com.android.internal.telephony.gsm.GsmSmsAddress: boolean isAlphanumeric()>();

        if $z0 == 0 goto label2;

        $i18 = s2 * 4;

        i4 = $i18 / 7;

        $r11 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: byte[] origBytes>;

        $r14 = staticinvoke <com.android.internal.telephony.GsmAlphabet: java.lang.String gsm7BitPackedToString(byte[],int,int)>($r11, 2, i4);

        r0.<com.android.internal.telephony.gsm.GsmSmsAddress: java.lang.String address> = $r14;

        goto label4;

     label2:
        $r6 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: byte[] origBytes>;

        $i10 = i1 - 1;

        b20 = $r6[$i10];

        $s11 = s2 & 1;

        if $s11 != 1 goto label3;

        $r10 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: byte[] origBytes>;

        $i14 = i1 - 1;

        $b15 = $r10[$i14];

        $s17 = $b15 | 240;

        $b16 = (byte) $s17;

        $r10[$i14] = $b16;

     label3:
        $r7 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: byte[] origBytes>;

        $i12 = i1 - 1;

        $r8 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String calledPartyBCDToString(byte[],int,int)>($r7, 1, $i12);

        r0.<com.android.internal.telephony.gsm.GsmSmsAddress: java.lang.String address> = $r8;

        $r9 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: byte[] origBytes>;

        $i13 = i1 - 1;

        $r9[$i13] = b20;

     label4:
        return;
    }

    public java.lang.String getAddressString()
    {
        com.android.internal.telephony.gsm.GsmSmsAddress r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.gsm.GsmSmsAddress;

        $r1 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: java.lang.String address>;

        return $r1;
    }

    public boolean isAlphanumeric()
    {
        com.android.internal.telephony.gsm.GsmSmsAddress r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.gsm.GsmSmsAddress;

        $i0 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: int ton>;

        if $i0 != 5 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isNetworkSpecific()
    {
        com.android.internal.telephony.gsm.GsmSmsAddress r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.gsm.GsmSmsAddress;

        $i0 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: int ton>;

        if $i0 != 3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isCphsVoiceMessageIndicatorAddress()
    {
        com.android.internal.telephony.gsm.GsmSmsAddress r0;
        byte[] $r1, $r2;
        byte $b0, $b2, $b3;
        short $s1;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.telephony.gsm.GsmSmsAddress;

        $r1 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: byte[] origBytes>;

        $b0 = $r1[0];

        $s1 = $b0 & 255;

        if $s1 != 4 goto label1;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.gsm.GsmSmsAddress: boolean isAlphanumeric()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: byte[] origBytes>;

        $b2 = $r2[1];

        $b3 = $b2 & 15;

        if $b3 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isCphsVoiceMessageSet()
    {
        com.android.internal.telephony.gsm.GsmSmsAddress r0;
        boolean $z0, $z1;
        byte[] $r1;
        byte $b0;
        short $s1;

        r0 := @this: com.android.internal.telephony.gsm.GsmSmsAddress;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.gsm.GsmSmsAddress: boolean isCphsVoiceMessageIndicatorAddress()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: byte[] origBytes>;

        $b0 = $r1[2];

        $s1 = $b0 & 255;

        if $s1 != 17 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isCphsVoiceMessageClear()
    {
        com.android.internal.telephony.gsm.GsmSmsAddress r0;
        boolean $z0, $z1;
        byte[] $r1;
        byte $b0;
        short $s1;

        r0 := @this: com.android.internal.telephony.gsm.GsmSmsAddress;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.gsm.GsmSmsAddress: boolean isCphsVoiceMessageIndicatorAddress()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.internal.telephony.gsm.GsmSmsAddress: byte[] origBytes>;

        $b0 = $r1[2];

        $s1 = $b0 & 255;

        if $s1 != 16 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.gsm.GsmSmsAddress: int OFFSET_ADDRESS_VALUE> = 2;

        <com.android.internal.telephony.gsm.GsmSmsAddress: int OFFSET_TOA> = 1;

        <com.android.internal.telephony.gsm.GsmSmsAddress: int OFFSET_ADDRESS_LENGTH> = 0;

        return;
    }
}
