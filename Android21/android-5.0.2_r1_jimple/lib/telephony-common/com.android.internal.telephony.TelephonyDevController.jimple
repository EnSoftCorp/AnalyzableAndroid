public class com.android.internal.telephony.TelephonyDevController extends android.os.Handler
{
    private static final java.lang.String LOG_TAG;
    private static final boolean DBG;
    private static final java.lang.Object mLock;
    private static final int EVENT_HARDWARE_CONFIG_CHANGED;
    private static com.android.internal.telephony.TelephonyDevController sTelephonyDevController;
    private static java.util.ArrayList mModems;
    private static java.util.ArrayList mSims;
    private static android.os.Message sRilHardwareConfig;

    private static void logd(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("TDC", r0);

        return;
    }

    private static void loge(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("TDC", r0);

        return;
    }

    public static com.android.internal.telephony.TelephonyDevController create()
    {
        java.lang.Object r0, $r2;
        java.lang.Throwable r1, $r7;
        com.android.internal.telephony.TelephonyDevController $r3, $r4, $r5;
        java.lang.RuntimeException $r6;

        $r2 = <com.android.internal.telephony.TelephonyDevController: java.lang.Object mLock>;

        r0 = $r2;

        entermonitor $r2;

     label1:
        $r3 = <com.android.internal.telephony.TelephonyDevController: com.android.internal.telephony.TelephonyDevController sTelephonyDevController>;

        if $r3 == null goto label2;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("TelephonyDevController already created!?!");

        throw $r6;

     label2:
        $r4 = new com.android.internal.telephony.TelephonyDevController;

        specialinvoke $r4.<com.android.internal.telephony.TelephonyDevController: void <init>()>();

        <com.android.internal.telephony.TelephonyDevController: com.android.internal.telephony.TelephonyDevController sTelephonyDevController> = $r4;

        $r5 = <com.android.internal.telephony.TelephonyDevController: com.android.internal.telephony.TelephonyDevController sTelephonyDevController>;

        exitmonitor r0;

     label3:
        return $r5;

     label4:
        $r7 := @caughtexception;

        r1 = $r7;

        exitmonitor r0;

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static com.android.internal.telephony.TelephonyDevController getInstance()
    {
        java.lang.Object r0, $r2;
        java.lang.Throwable r1, $r6;
        com.android.internal.telephony.TelephonyDevController $r3, $r4;
        java.lang.RuntimeException $r5;

        $r2 = <com.android.internal.telephony.TelephonyDevController: java.lang.Object mLock>;

        r0 = $r2;

        entermonitor $r2;

     label1:
        $r3 = <com.android.internal.telephony.TelephonyDevController: com.android.internal.telephony.TelephonyDevController sTelephonyDevController>;

        if $r3 != null goto label2;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("TelephonyDevController not yet created!?!");

        throw $r5;

     label2:
        $r4 = <com.android.internal.telephony.TelephonyDevController: com.android.internal.telephony.TelephonyDevController sTelephonyDevController>;

        exitmonitor r0;

     label3:
        return $r4;

     label4:
        $r6 := @caughtexception;

        r1 = $r6;

        exitmonitor r0;

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void initFromResource()
    {
        com.android.internal.telephony.TelephonyDevController r0;
        android.content.res.Resources r1;
        java.lang.String[] r2, r3;
        int i0, i1, $i2, $i3;
        java.lang.String r4;
        com.android.internal.telephony.HardwareConfig r5, $r6;
        java.util.ArrayList $r7, $r8;

        r0 := @this: com.android.internal.telephony.TelephonyDevController;

        r1 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        r2 = virtualinvoke r1.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236022);

        if r2 == null goto label4;

        r3 = r2;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r4 = r3[i1];

        $r6 = new com.android.internal.telephony.HardwareConfig;

        specialinvoke $r6.<com.android.internal.telephony.HardwareConfig: void <init>(java.lang.String)>(r4);

        r5 = $r6;

        if r5 == null goto label3;

        $i2 = r5.<com.android.internal.telephony.HardwareConfig: int type>;

        if $i2 != 0 goto label2;

        $r8 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mModems>;

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void updateOrInsert(com.android.internal.telephony.HardwareConfig,java.util.ArrayList)>(r5, $r8);

        goto label3;

     label2:
        $i3 = r5.<com.android.internal.telephony.HardwareConfig: int type>;

        if $i3 != 1 goto label3;

        $r7 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mSims>;

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void updateOrInsert(com.android.internal.telephony.HardwareConfig,java.util.ArrayList)>(r5, $r7);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    private void <init>()
    {
        com.android.internal.telephony.TelephonyDevController r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: com.android.internal.telephony.TelephonyDevController;

        specialinvoke r0.<android.os.Handler: void <init>()>();

        specialinvoke r0.<com.android.internal.telephony.TelephonyDevController: void initFromResource()>();

        $r1 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mModems>;

        virtualinvoke $r1.<java.util.ArrayList: void trimToSize()>();

        $r2 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mSims>;

        virtualinvoke $r2.<java.util.ArrayList: void trimToSize()>();

        return;
    }

    public static void registerRIL(com.android.internal.telephony.CommandsInterface)
    {
        com.android.internal.telephony.CommandsInterface r0;
        android.os.AsyncResult r1;
        android.os.Message $r2, $r3, $r5;
        com.android.internal.telephony.TelephonyDevController $r4;
        java.lang.Object $r6;
        java.lang.Throwable $r7;

        r0 := @parameter0: com.android.internal.telephony.CommandsInterface;

        $r2 = <com.android.internal.telephony.TelephonyDevController: android.os.Message sRilHardwareConfig>;

        interfaceinvoke r0.<com.android.internal.telephony.CommandsInterface: void getHardwareConfig(android.os.Message)>($r2);

        $r3 = <com.android.internal.telephony.TelephonyDevController: android.os.Message sRilHardwareConfig>;

        if $r3 == null goto label1;

        $r5 = <com.android.internal.telephony.TelephonyDevController: android.os.Message sRilHardwareConfig>;

        $r6 = $r5.<android.os.Message: java.lang.Object obj>;

        r1 = (android.os.AsyncResult) $r6;

        $r7 = r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r7 != null goto label1;

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void handleGetHardwareConfigChanged(android.os.AsyncResult)>(r1);

     label1:
        $r4 = <com.android.internal.telephony.TelephonyDevController: com.android.internal.telephony.TelephonyDevController sTelephonyDevController>;

        interfaceinvoke r0.<com.android.internal.telephony.CommandsInterface: void registerForHardwareConfigChanged(android.os.Handler,int,java.lang.Object)>($r4, 1, null);

        return;
    }

    public static void unregisterRIL(com.android.internal.telephony.CommandsInterface)
    {
        com.android.internal.telephony.CommandsInterface r0;
        com.android.internal.telephony.TelephonyDevController $r1;

        r0 := @parameter0: com.android.internal.telephony.CommandsInterface;

        $r1 = <com.android.internal.telephony.TelephonyDevController: com.android.internal.telephony.TelephonyDevController sTelephonyDevController>;

        interfaceinvoke r0.<com.android.internal.telephony.CommandsInterface: void unregisterForHardwareConfigChanged(android.os.Handler)>($r1);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.TelephonyDevController r0;
        android.os.Message r1;
        android.os.AsyncResult r2;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.android.internal.telephony.TelephonyDevController;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 1: goto label1;
            default: goto label2;
        };

     label1:
        staticinvoke <com.android.internal.telephony.TelephonyDevController: void logd(java.lang.String)>("handleMessage: received EVENT_HARDWARE_CONFIG_CHANGED");

        $r3 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (android.os.AsyncResult) $r3;

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void handleGetHardwareConfigChanged(android.os.AsyncResult)>(r2);

        goto label3;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleMessage: Unknown Event ");

        $i1 = r1.<android.os.Message: int what>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void loge(java.lang.String)>($r7);

     label3:
        return;
    }

    private static void updateOrInsert(com.android.internal.telephony.HardwareConfig, java.util.ArrayList)
    {
        com.android.internal.telephony.HardwareConfig r0, r2;
        java.util.ArrayList r1;
        int i0, i1, $i2;
        java.lang.Object r3, $r5, $r10;
        java.lang.Throwable r4, $r18;
        java.lang.StringBuilder $r6, $r7, $r8, $r13, $r14, $r15;
        java.lang.String $r9, $r11, $r12, $r17;

        r0 := @parameter0: com.android.internal.telephony.HardwareConfig;

        r1 := @parameter1: java.util.ArrayList;

        $r5 = <com.android.internal.telephony.TelephonyDevController: java.lang.Object mLock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r10 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.internal.telephony.HardwareConfig) $r10;

        $r11 = r2.<com.android.internal.telephony.HardwareConfig: java.lang.String uuid>;

        $r12 = r0.<com.android.internal.telephony.HardwareConfig: java.lang.String uuid>;

        $i2 = virtualinvoke $r11.<java.lang.String: int compareTo(java.lang.String)>($r12);

        if $i2 != 0 goto label3;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateOrInsert: removing: ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void logd(java.lang.String)>($r17);

        virtualinvoke r1.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateOrInsert: inserting: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void logd(java.lang.String)>($r9);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

        exitmonitor r3;

     label5:
        goto label8;

     label6:
        $r18 := @caughtexception;

        r4 = $r18;

        exitmonitor r3;

     label7:
        throw r4;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private static void handleGetHardwareConfigChanged(android.os.AsyncResult)
    {
        android.os.AsyncResult r0;
        java.util.List r1;
        int i0, $i1, $i2, $i3;
        java.lang.Throwable $r2;
        java.lang.Object $r3, $r4, $r5;
        java.util.ArrayList $r6, $r7;
        com.android.internal.telephony.HardwareConfig r8;

        r0 := @parameter0: android.os.AsyncResult;

        $r2 = r0.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r2 != null goto label5;

        $r3 = r0.<android.os.AsyncResult: java.lang.Object result>;

        if $r3 == null goto label5;

        $r4 = r0.<android.os.AsyncResult: java.lang.Object result>;

        r1 = (java.util.List) $r4;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if i0 >= $i1 goto label4;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        r8 = (com.android.internal.telephony.HardwareConfig) $r5;

        if r8 == null goto label3;

        $i2 = r8.<com.android.internal.telephony.HardwareConfig: int type>;

        if $i2 != 0 goto label2;

        $r7 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mModems>;

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void updateOrInsert(com.android.internal.telephony.HardwareConfig,java.util.ArrayList)>(r8, $r7);

        goto label3;

     label2:
        $i3 = r8.<com.android.internal.telephony.HardwareConfig: int type>;

        if $i3 != 1 goto label3;

        $r6 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mSims>;

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void updateOrInsert(com.android.internal.telephony.HardwareConfig,java.util.ArrayList)>(r8, $r6);

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        goto label6;

     label5:
        staticinvoke <com.android.internal.telephony.TelephonyDevController: void loge(java.lang.String)>("handleGetHardwareConfigChanged - returned an error.");

     label6:
        return;
    }

    public static int getModemCount()
    {
        java.lang.Object r0, $r2;
        int i0;
        java.lang.Throwable r1, $r8;
        java.util.ArrayList $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        $r2 = <com.android.internal.telephony.TelephonyDevController: java.lang.Object mLock>;

        r0 = $r2;

        entermonitor $r2;

     label1:
        $r3 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mModems>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getModemCount: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void logd(java.lang.String)>($r7);

        exitmonitor r0;

     label2:
        return i0;

     label3:
        $r8 := @caughtexception;

        r1 = $r8;

        exitmonitor r0;

     label4:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public com.android.internal.telephony.HardwareConfig getModem(int)
    {
        com.android.internal.telephony.TelephonyDevController r0;
        int i0, $i1, $i2;
        java.lang.Object r1, $r3, $r10;
        java.lang.Throwable r2, $r18;
        java.util.ArrayList $r4, $r9;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r7, $r12, $r13, $r14, $r15, $r16;
        java.lang.String $r8, $r17;
        com.android.internal.telephony.HardwareConfig $r11;

        r0 := @this: com.android.internal.telephony.TelephonyDevController;

        i0 := @parameter0: int;

        $r3 = <com.android.internal.telephony.TelephonyDevController: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mModems>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void loge(java.lang.String)>("getModem: no registered modem device?!?");

        exitmonitor r1;

     label2:
        return null;

     label3:
        $i1 = staticinvoke <com.android.internal.telephony.TelephonyDevController: int getModemCount()>();

        if i0 <= $i1 goto label5;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getModem: out-of-bounds access for modem device ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" max: ");

        $i2 = staticinvoke <com.android.internal.telephony.TelephonyDevController: int getModemCount()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void loge(java.lang.String)>($r17);

        exitmonitor r1;

     label4:
        return null;

     label5:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getModem: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void logd(java.lang.String)>($r8);

        $r9 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mModems>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r11 = (com.android.internal.telephony.HardwareConfig) $r10;

        exitmonitor r1;

     label6:
        return $r11;

     label7:
        $r18 := @caughtexception;

        r2 = $r18;

        exitmonitor r1;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public int getSimCount()
    {
        com.android.internal.telephony.TelephonyDevController r0;
        java.lang.Object r1, $r3;
        int i0;
        java.lang.Throwable r2, $r9;
        java.util.ArrayList $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: com.android.internal.telephony.TelephonyDevController;

        $r3 = <com.android.internal.telephony.TelephonyDevController: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mSims>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getSimCount: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void logd(java.lang.String)>($r8);

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public com.android.internal.telephony.HardwareConfig getSim(int)
    {
        com.android.internal.telephony.TelephonyDevController r0;
        int i0, $i1, $i2;
        java.lang.Object r1, $r3, $r10;
        java.lang.Throwable r2, $r18;
        java.util.ArrayList $r4, $r9;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r7, $r12, $r13, $r14, $r15, $r16;
        java.lang.String $r8, $r17;
        com.android.internal.telephony.HardwareConfig $r11;

        r0 := @this: com.android.internal.telephony.TelephonyDevController;

        i0 := @parameter0: int;

        $r3 = <com.android.internal.telephony.TelephonyDevController: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mSims>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void loge(java.lang.String)>("getSim: no registered sim device?!?");

        exitmonitor r1;

     label2:
        return null;

     label3:
        $i1 = virtualinvoke r0.<com.android.internal.telephony.TelephonyDevController: int getSimCount()>();

        if i0 <= $i1 goto label5;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getSim: out-of-bounds access for sim device ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" max: ");

        $i2 = virtualinvoke r0.<com.android.internal.telephony.TelephonyDevController: int getSimCount()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void loge(java.lang.String)>($r17);

        exitmonitor r1;

     label4:
        return null;

     label5:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getSim: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void logd(java.lang.String)>($r8);

        $r9 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mSims>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r11 = (com.android.internal.telephony.HardwareConfig) $r10;

        exitmonitor r1;

     label6:
        return $r11;

     label7:
        $r18 := @caughtexception;

        r2 = $r18;

        exitmonitor r1;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public com.android.internal.telephony.HardwareConfig getModemForSim(int)
    {
        com.android.internal.telephony.TelephonyDevController r0;
        int i0, $i1, $i2;
        java.lang.Object r1, $r6, $r14;
        com.android.internal.telephony.HardwareConfig r2, r4;
        java.util.Iterator r3;
        java.lang.Throwable r5, $r23;
        java.util.ArrayList $r7, $r8, $r13;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r9, $r10, $r12, $r17, $r18, $r19, $r20, $r22;
        java.lang.String $r11, $r15, $r16, $r21;

        r0 := @this: com.android.internal.telephony.TelephonyDevController;

        i0 := @parameter0: int;

        $r6 = <com.android.internal.telephony.TelephonyDevController: java.lang.Object mLock>;

        r1 = $r6;

        entermonitor $r6;

     label01:
        $r7 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mModems>;

        $z0 = virtualinvoke $r7.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label02;

        $r8 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mSims>;

        $z1 = virtualinvoke $r8.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label04;

     label02:
        staticinvoke <com.android.internal.telephony.TelephonyDevController: void loge(java.lang.String)>("getModemForSim: no registered modem/sim device?!?");

        exitmonitor r1;

     label03:
        return null;

     label04:
        $i1 = virtualinvoke r0.<com.android.internal.telephony.TelephonyDevController: int getSimCount()>();

        if i0 <= $i1 goto label06;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getModemForSim: out-of-bounds access for sim device ");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" max: ");

        $i2 = virtualinvoke r0.<com.android.internal.telephony.TelephonyDevController: int getSimCount()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void loge(java.lang.String)>($r21);

        exitmonitor r1;

     label05:
        return null;

     label06:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getModemForSim ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void logd(java.lang.String)>($r11);

        r2 = virtualinvoke r0.<com.android.internal.telephony.TelephonyDevController: com.android.internal.telephony.HardwareConfig getSim(int)>(i0);

        $r13 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mModems>;

        r3 = virtualinvoke $r13.<java.util.ArrayList: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r14 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.internal.telephony.HardwareConfig) $r14;

        $r15 = r4.<com.android.internal.telephony.HardwareConfig: java.lang.String uuid>;

        $r16 = r2.<com.android.internal.telephony.HardwareConfig: java.lang.String modemUuid>;

        $z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z3 == 0 goto label09;

        exitmonitor r1;

     label08:
        return r4;

     label09:
        goto label07;

     label10:
        exitmonitor r1;

     label11:
        return null;

     label12:
        $r23 := @caughtexception;

        r5 = $r23;

        exitmonitor r1;

     label13:
        throw r5;

        catch java.lang.Throwable from label01 to label03 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label08 with label12;
        catch java.lang.Throwable from label09 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public java.util.ArrayList getAllSimsForModem(int)
    {
        com.android.internal.telephony.TelephonyDevController r0;
        int i0, $i1, $i2;
        java.lang.Object r1, $r7, $r16;
        java.util.ArrayList r2, $r8, $r13, $r14;
        com.android.internal.telephony.HardwareConfig r3, r5;
        java.util.Iterator r4;
        java.lang.Throwable r6, $r24;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r9, $r10, $r11, $r18, $r19, $r20, $r21, $r22;
        java.lang.String $r12, $r15, $r17, $r23;

        r0 := @this: com.android.internal.telephony.TelephonyDevController;

        i0 := @parameter0: int;

        $r7 = <com.android.internal.telephony.TelephonyDevController: java.lang.Object mLock>;

        r1 = $r7;

        entermonitor $r7;

     label01:
        $r8 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mSims>;

        $z0 = virtualinvoke $r8.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label03;

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void loge(java.lang.String)>("getAllSimsForModem: no registered sim device?!?");

        exitmonitor r1;

     label02:
        return null;

     label03:
        $i1 = staticinvoke <com.android.internal.telephony.TelephonyDevController: int getModemCount()>();

        if i0 <= $i1 goto label05;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAllSimsForModem: out-of-bounds access for modem device ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" max: ");

        $i2 = staticinvoke <com.android.internal.telephony.TelephonyDevController: int getModemCount()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void loge(java.lang.String)>($r23);

        exitmonitor r1;

     label04:
        return null;

     label05:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAllSimsForModem ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void logd(java.lang.String)>($r12);

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r2 = $r13;

        r3 = virtualinvoke r0.<com.android.internal.telephony.TelephonyDevController: com.android.internal.telephony.HardwareConfig getModem(int)>(i0);

        $r14 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mSims>;

        r4 = virtualinvoke $r14.<java.util.ArrayList: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.internal.telephony.HardwareConfig) $r16;

        $r17 = r5.<com.android.internal.telephony.HardwareConfig: java.lang.String modemUuid>;

        $r15 = r3.<com.android.internal.telephony.HardwareConfig: java.lang.String uuid>;

        $z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z2 == 0 goto label07;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label07:
        goto label06;

     label08:
        exitmonitor r1;

     label09:
        return r2;

     label10:
        $r24 := @caughtexception;

        r6 = $r24;

        exitmonitor r1;

     label11:
        throw r6;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public java.util.ArrayList getAllModems()
    {
        com.android.internal.telephony.TelephonyDevController r0;
        java.lang.Object r1, $r6, $r10;
        java.util.ArrayList r2, $r7, $r8, $r9;
        java.util.Iterator r3;
        com.android.internal.telephony.HardwareConfig r4;
        java.lang.Throwable r5, $r11;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.telephony.TelephonyDevController;

        $r6 = <com.android.internal.telephony.TelephonyDevController: java.lang.Object mLock>;

        r1 = $r6;

        entermonitor $r6;

     label1:
        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r2 = $r7;

        $r8 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mModems>;

        $z0 = virtualinvoke $r8.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void logd(java.lang.String)>("getAllModems: empty list.");

        goto label4;

     label2:
        $r9 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mModems>;

        r3 = virtualinvoke $r9.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.internal.telephony.HardwareConfig) $r10;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        goto label3;

     label4:
        exitmonitor r1;

     label5:
        return r2;

     label6:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r1;

     label7:
        throw r5;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public java.util.ArrayList getAllSims()
    {
        com.android.internal.telephony.TelephonyDevController r0;
        java.lang.Object r1, $r6, $r10;
        java.util.ArrayList r2, $r7, $r8, $r9;
        java.util.Iterator r3;
        com.android.internal.telephony.HardwareConfig r4;
        java.lang.Throwable r5, $r11;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.telephony.TelephonyDevController;

        $r6 = <com.android.internal.telephony.TelephonyDevController: java.lang.Object mLock>;

        r1 = $r6;

        entermonitor $r6;

     label1:
        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r2 = $r7;

        $r8 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mSims>;

        $z0 = virtualinvoke $r8.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        staticinvoke <com.android.internal.telephony.TelephonyDevController: void logd(java.lang.String)>("getAllSims: empty list.");

        goto label4;

     label2:
        $r9 = <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mSims>;

        r3 = virtualinvoke $r9.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.internal.telephony.HardwareConfig) $r10;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        goto label3;

     label4:
        exitmonitor r1;

     label5:
        return r2;

     label6:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r1;

     label7:
        throw r5;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;
        java.util.ArrayList $r1, $r2;

        <com.android.internal.telephony.TelephonyDevController: int EVENT_HARDWARE_CONFIG_CHANGED> = 1;

        <com.android.internal.telephony.TelephonyDevController: boolean DBG> = 1;

        <com.android.internal.telephony.TelephonyDevController: java.lang.String LOG_TAG> = "TDC";

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.android.internal.telephony.TelephonyDevController: java.lang.Object mLock> = $r0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mModems> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        <com.android.internal.telephony.TelephonyDevController: java.util.ArrayList mSims> = $r2;

        return;
    }
}
