public class com.android.internal.telephony.imsphone.ImsPhoneConnection extends com.android.internal.telephony.Connection
{
    private static final java.lang.String LOG_TAG;
    private static final boolean DBG;
    private com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner;
    private com.android.internal.telephony.imsphone.ImsPhoneCall mParent;
    private com.android.ims.ImsCall mImsCall;
    private java.lang.String mPostDialString;
    private boolean mDisconnected;
    private long mDisconnectTime;
    private int mNextPostDialChar;
    private int mCause;
    private com.android.internal.telephony.Connection$PostDialState mPostDialState;
    private com.android.internal.telephony.UUSInfo mUusInfo;
    private boolean mIsMultiparty;
    private android.os.Handler mHandler;
    private android.os.PowerManager$WakeLock mPartialWakeLock;
    private static final int EVENT_DTMF_DONE;
    private static final int EVENT_PAUSE_DONE;
    private static final int EVENT_NEXT_POST_DIAL;
    private static final int EVENT_WAKE_LOCK_TIMEOUT;
    private static final int PAUSE_DELAY_MILLIS;
    private static final int WAKE_LOCK_TIMEOUT_MILLIS;

    void <init>(android.content.Context, com.android.ims.ImsCall, com.android.internal.telephony.imsphone.ImsPhoneCallTracker, com.android.internal.telephony.imsphone.ImsPhoneCall)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        android.content.Context r1;
        com.android.ims.ImsCall r2;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r3, $r9;
        com.android.internal.telephony.imsphone.ImsPhoneCall r4, $r12;
        com.android.ims.ImsCallProfile r5, $r13, $r14, $r15, $r17, $r19, $r20, r22;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        com.android.ims.ImsStreamMediaProfile r6;
        boolean z0, $z1;
        com.android.internal.telephony.Connection$PostDialState $r7;
        com.android.internal.telephony.imsphone.ImsPhoneConnection$MyHandler $r8;
        android.os.Looper $r10;
        long $l1;
        com.android.internal.telephony.Call$State $r11;
        java.lang.String $r16, $r18;
        com.android.ims.ImsException $r21;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.ims.ImsCall;

        r3 := @parameter2: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r4 := @parameter3: com.android.internal.telephony.imsphone.ImsPhoneCall;

        specialinvoke r0.<com.android.internal.telephony.Connection: void <init>()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mCause> = 0;

        $r7 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState NOT_STARTED>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState> = $r7;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsMultiparty> = 0;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void createWakeLock(android.content.Context)>(r1);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void acquireWakeLock()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner> = r3;

        $r8 = new com.android.internal.telephony.imsphone.ImsPhoneConnection$MyHandler;

        $r9 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        $r10 = virtualinvoke $r9.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.Looper getLooper()>();

        specialinvoke $r8.<com.android.internal.telephony.imsphone.ImsPhoneConnection$MyHandler: void <init>(com.android.internal.telephony.imsphone.ImsPhoneConnection,android.os.Looper)>(r0, $r10);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Handler mHandler> = $r8;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall mImsCall> = r2;

        if r2 == null goto label7;

        $r14 = virtualinvoke r2.<com.android.ims.ImsCall: com.android.ims.ImsCallProfile getCallProfile()>();

        if $r14 == null goto label7;

        $r13 = virtualinvoke r2.<com.android.ims.ImsCall: com.android.ims.ImsCallProfile getCallProfile()>();

        $r16 = virtualinvoke $r13.<com.android.ims.ImsCallProfile: java.lang.String getCallExtra(java.lang.String)>("oi");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mAddress> = $r16;

        $r15 = virtualinvoke r2.<com.android.ims.ImsCall: com.android.ims.ImsCallProfile getCallProfile()>();

        $r18 = virtualinvoke $r15.<com.android.ims.ImsCallProfile: java.lang.String getCallExtra(java.lang.String)>("cna");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mCnapName> = $r18;

        $r17 = virtualinvoke r2.<com.android.ims.ImsCall: com.android.ims.ImsCallProfile getCallProfile()>();

        $i3 = virtualinvoke $r17.<com.android.ims.ImsCallProfile: int getCallExtraInt(java.lang.String)>("oir");

        $i2 = staticinvoke <com.android.ims.ImsCallProfile: int OIRToPresentation(int)>($i3);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mNumberPresentation> = $i2;

        $r19 = virtualinvoke r2.<com.android.ims.ImsCall: com.android.ims.ImsCallProfile getCallProfile()>();

        $i4 = virtualinvoke $r19.<com.android.ims.ImsCallProfile: int getCallExtraInt(java.lang.String)>("cnap");

        $i5 = staticinvoke <com.android.ims.ImsCallProfile: int OIRToPresentation(int)>($i4);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mCnapNamePresentation> = $i5;

        r5 = virtualinvoke r2.<com.android.ims.ImsCall: com.android.ims.ImsCallProfile getCallProfile()>();

        if r5 == null goto label1;

        $r20 = virtualinvoke r2.<com.android.ims.ImsCall: com.android.ims.ImsCallProfile getCallProfile()>();

        i0 = $r20.<com.android.ims.ImsCallProfile: int mCallType>;

        $i6 = staticinvoke <com.android.ims.ImsCallProfile: int getVideoStateFromCallType(int)>(i0);

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setVideoState(int)>($i6);

        r6 = r5.<com.android.ims.ImsCallProfile: com.android.ims.ImsStreamMediaProfile mMediaProfile>;

        if r6 == null goto label1;

        $i7 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int getAudioQualityFromMediaProfile(com.android.ims.ImsStreamMediaProfile)>(r6);

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setAudioQuality(int)>($i7);

     label1:
        r22 = virtualinvoke r2.<com.android.ims.ImsCall: com.android.ims.ImsCallProfile getLocalCallProfile()>();

        if r22 == null goto label4;

        i8 = r22.<com.android.ims.ImsCallProfile: int mCallType>;

        if i8 != 4 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setLocalVideoCapable(boolean)>(z0);

     label4:
        goto label6;

     label5:
        $r21 := @caughtexception;

     label6:
        goto label8;

     label7:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mNumberPresentation> = 3;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mCnapNamePresentation> = 3;

     label8:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsIncoming> = 1;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mCreateTime> = $l1;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.UUSInfo mUusInfo> = null;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent> = r4;

        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent>;

        $r11 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State INCOMING>;

        virtualinvoke $r12.<com.android.internal.telephony.imsphone.ImsPhoneCall: void attach(com.android.internal.telephony.Connection,com.android.internal.telephony.Call$State)>(r0, $r11);

        return;

        catch com.android.ims.ImsException from label1 to label4 with label5;
    }

    void <init>(android.content.Context, java.lang.String, com.android.internal.telephony.imsphone.ImsPhoneCallTracker, com.android.internal.telephony.imsphone.ImsPhoneCall)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        android.content.Context r1;
        java.lang.String r2, $r9, $r10;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker r3, $r7;
        com.android.internal.telephony.imsphone.ImsPhoneCall r4;
        com.android.internal.telephony.Connection$PostDialState $r5;
        com.android.internal.telephony.imsphone.ImsPhoneConnection$MyHandler $r6;
        android.os.Looper $r8;
        long $l0;
        com.android.internal.telephony.Call$State $r11;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.android.internal.telephony.imsphone.ImsPhoneCallTracker;

        r4 := @parameter3: com.android.internal.telephony.imsphone.ImsPhoneCall;

        specialinvoke r0.<com.android.internal.telephony.Connection: void <init>()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mCause> = 0;

        $r5 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState NOT_STARTED>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState> = $r5;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsMultiparty> = 0;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void createWakeLock(android.content.Context)>(r1);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void acquireWakeLock()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner> = r3;

        $r6 = new com.android.internal.telephony.imsphone.ImsPhoneConnection$MyHandler;

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        $r8 = virtualinvoke $r7.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: android.os.Looper getLooper()>();

        specialinvoke $r6.<com.android.internal.telephony.imsphone.ImsPhoneConnection$MyHandler: void <init>(com.android.internal.telephony.imsphone.ImsPhoneConnection,android.os.Looper)>(r0, $r8);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Handler mHandler> = $r6;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mDialString> = r2;

        $r9 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortionAlt(java.lang.String)>(r2);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mAddress> = $r9;

        $r10 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractPostDialPortion(java.lang.String)>(r2);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mPostDialString> = $r10;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsIncoming> = 0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mCnapName> = null;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mCnapNamePresentation> = 1;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mNumberPresentation> = 1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mCreateTime> = $l0;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent> = r4;

        $r11 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DIALING>;

        virtualinvoke r4.<com.android.internal.telephony.imsphone.ImsPhoneCall: void attachFake(com.android.internal.telephony.Connection,com.android.internal.telephony.Call$State)>(r0, $r11);

        return;
    }

    public void dispose()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        return;
    }

    static boolean equalsHandlesNulls(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label2;

        if r1 != null goto label1;

        $z0 = 1;

        goto label3;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

     label3:
        return $z0;
    }

    private int getAudioQualityFromMediaProfile(com.android.ims.ImsStreamMediaProfile)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.ims.ImsStreamMediaProfile r1;
        byte b0;
        int $i1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 := @parameter0: com.android.ims.ImsStreamMediaProfile;

        $i1 = r1.<com.android.ims.ImsStreamMediaProfile: int mAudioQuality>;

        if $i1 != 2 goto label1;

        b0 = 2;

        goto label2;

     label1:
        b0 = 1;

     label2:
        return b0;
    }

    public java.lang.String getOrigDialString()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mDialString>;

        return $r1;
    }

    public com.android.internal.telephony.imsphone.ImsPhoneCall getCall()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent>;

        return $r1;
    }

    public long getDisconnectTime()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        long $l0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $l0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mDisconnectTime>;

        return $l0;
    }

    public long getHoldingStartTime()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        long $l0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $l0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mHoldingStartTime>;

        return $l0;
    }

    public long getHoldDurationMillis()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.Call$State $r1, $r2;
        long $l0, $l1, $l2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Call$State getState()>();

        $r2 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if $r1 == $r2 goto label1;

        return 0L;

     label1:
        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mHoldingStartTime>;

        $l2 = $l0 - $l1;

        return $l2;
    }

    public int getDisconnectCause()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $i0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mCause>;

        return $i0;
    }

    public void setDisconnectCause(int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        int i0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        i0 := @parameter0: int;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mCause> = i0;

        return;
    }

    public com.android.internal.telephony.imsphone.ImsPhoneCallTracker getOwner()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        return $r1;
    }

    public com.android.internal.telephony.Call$State getState()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        boolean $z0;
        com.android.internal.telephony.Call$State $r1, $r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mDisconnected>;

        if $z0 == 0 goto label1;

        $r2 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        return $r2;

     label1:
        $r1 = specialinvoke r0.<com.android.internal.telephony.Connection: com.android.internal.telephony.Call$State getState()>();

        return $r1;
    }

    public void hangup() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        boolean $z0;
        com.android.internal.telephony.CallStateException $r1;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker $r2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mDisconnected>;

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: void hangup(com.android.internal.telephony.imsphone.ImsPhoneConnection)>(r0);

        goto label2;

     label1:
        $r1 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r1.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("disconnected");

        throw $r1;

     label2:
        return;
    }

    public void separate() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.CallStateException $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r1 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r1.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("not supported");

        throw $r1;
    }

    public com.android.internal.telephony.Connection$PostDialState getPostDialState()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.Connection$PostDialState $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        return $r1;
    }

    public void proceedAfterWaitChar()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.Connection$PostDialState $r1, $r2, $r3, $r6;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r8;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r1 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState WAIT>;

        if $r2 == $r1 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImsPhoneConnection.proceedAfterWaitChar(): Expected getPostDialState() to be WAIT but was ");

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("ImsPhoneConnection", $r8);

        return;

     label1:
        $r3 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState STARTED>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r3);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void processNextPostDialChar()>();

        return;
    }

    public void proceedAfterWildChar(java.lang.String)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        java.lang.String r1, $r7, $r8, $r10, $r13, $r14, $r20;
        java.lang.StringBuilder r2, $r6, $r11, $r12, $r15, $r16, $r17, $r18;
        com.android.internal.telephony.Connection$PostDialState $r3, $r4, $r5, $r19;
        int $i0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r3 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState WILD>;

        if $r4 == $r3 goto label1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ImsPhoneConnection.proceedAfterWaitChar(): Expected getPostDialState() to be WILD but was ");

        $r19 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("ImsPhoneConnection", $r20);

        return;

     label1:
        $r5 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState STARTED>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(r1);

        r2 = $r6;

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mPostDialString>;

        $i0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mNextPostDialChar>;

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>($i0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mPostDialString> = $r10;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mNextPostDialChar> = 0;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("proceedAfterWildChar: new postDialString is ");

        $r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mPostDialString>;

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneConnection", $r14);

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void processNextPostDialChar()>();

        return;
    }

    public void cancelPostDial()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.Connection$PostDialState $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r1 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState CANCELLED>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r1);

        return;
    }

    void onHangupLocal()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mCause> = 3;

        return;
    }

    boolean onDisconnect(int)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        int i0, $i2;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onDisconnect: cause=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneConnection", $r4);

        $i2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mCause>;

        if $i2 == 3 goto label1;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mCause> = i0;

     label1:
        $z0 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean onDisconnect()>();

        return $z0;
    }

    boolean onDisconnect()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        boolean z0, $z1;
        long $l0, $l1, $l2, $l3;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker $r1;
        com.android.internal.telephony.imsphone.ImsPhone $r2;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r3, $r6;
        com.android.ims.ImsCall $r4, $r5;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        z0 = 0;

        $z1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mDisconnected>;

        if $z1 != 0 goto label4;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mDisconnectTime> = $l0;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mConnectTimeReal>;

        $l3 = $l1 - $l2;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mDuration> = $l3;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mDisconnected> = 1;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        $r2 = $r1.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhone: void notifyDisconnect(com.android.internal.telephony.Connection)>(r0);

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent>;

        if $r3 == null goto label1;

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent>;

        z0 = virtualinvoke $r6.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean connectionDisconnected(com.android.internal.telephony.imsphone.ImsPhoneConnection)>(r0);

        goto label2;

     label1:
        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneConnection", "onDisconnect: no parent");

     label2:
        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall mImsCall>;

        if $r4 == null goto label3;

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall mImsCall>;

        virtualinvoke $r5.<com.android.ims.ImsCall: void close()>();

     label3:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall mImsCall> = null;

     label4:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void releaseWakeLock()>();

        return z0;
    }

    void onConnectedInOrOut()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        long $l0, $l1, $l2;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mConnectTime> = $l0;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mConnectTimeReal> = $l1;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mDuration> = 0L;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onConnectedInOrOut: connectTime=");

        $l2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mConnectTime>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneConnection", $r4);

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsIncoming>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void processNextPostDialChar()>();

     label1:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void releaseWakeLock()>();

        return;
    }

    void onStartedHolding()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        long $l0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: long mHoldingStartTime> = $l0;

        return;
    }

    private boolean processPostDialChar(char)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        char c0;
        boolean $z0;
        com.android.internal.telephony.Connection$PostDialState $r1, $r2;
        android.os.Handler $r3, $r4, $r7;
        android.os.Message $r5, $r9;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker $r6;
        com.android.internal.telephony.CommandsInterface $r8;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        c0 := @parameter0: char;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean is12Key(char)>(c0);

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        $r8 = $r6.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Handler mHandler>;

        $r9 = virtualinvoke $r7.<android.os.Handler: android.os.Message obtainMessage(int)>(1);

        interfaceinvoke $r8.<com.android.internal.telephony.CommandsInterface: void sendDtmf(char,android.os.Message)>(c0, $r9);

        goto label5;

     label1:
        if c0 != 44 goto label2;

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Handler mHandler>;

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Handler mHandler>;

        $r5 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        virtualinvoke $r4.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r5, 3000L);

        goto label5;

     label2:
        if c0 != 59 goto label3;

        $r2 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState WAIT>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r2);

        goto label5;

     label3:
        if c0 != 78 goto label4;

        $r1 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState WILD>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r1);

        goto label5;

     label4:
        return 0;

     label5:
        return 1;
    }

    public java.lang.String getRemainingPostDialString()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.Connection$PostDialState $r1, $r2, $r3, $r4;
        java.lang.String $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r1 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState CANCELLED>;

        if $r2 == $r1 goto label1;

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r3 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState COMPLETE>;

        if $r4 == $r3 goto label1;

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mPostDialString>;

        if $r5 == null goto label1;

        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mPostDialString>;

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mNextPostDialChar>;

        if $i0 > $i1 goto label2;

     label1:
        return "";

     label2:
        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mPostDialString>;

        $i2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mNextPostDialChar>;

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>($i2);

        return $r8;
    }

    protected void finalize()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void releaseWakeLock()>();

        return;
    }

    private void processNextPostDialChar()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        android.os.Registrant r1;
        boolean z1;
        com.android.internal.telephony.Connection$PostDialState r2, $r4, $r5, $r7, $r12;
        android.os.AsyncResult r3;
        java.lang.String $r6, $r11, $r13, $r20;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker $r8;
        com.android.internal.telephony.imsphone.ImsPhone $r9;
        android.os.Message $r10, $r16, r21;
        int $i0, $i1, $i2, $i3;
        android.os.Handler $r14;
        java.lang.StringBuilder $r15, $r17, $r18, $r19;
        char c5;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r4 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState CANCELLED>;

        if $r5 != $r4 goto label1;

        return;

     label1:
        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mPostDialString>;

        if $r6 == null goto label2;

        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mPostDialString>;

        $i0 = virtualinvoke $r11.<java.lang.String: int length()>();

        $i1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mNextPostDialChar>;

        if $i0 > $i1 goto label3;

     label2:
        $r7 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState COMPLETE>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r7);

        c5 = 0;

        goto label4;

     label3:
        $r12 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState STARTED>;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r12);

        $r13 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String mPostDialString>;

        $i3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mNextPostDialChar>;

        $i2 = $i3 + 1;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mNextPostDialChar> = $i2;

        c5 = virtualinvoke $r13.<java.lang.String: char charAt(int)>($i3);

        z1 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean processPostDialChar(char)>(c5);

        if z1 != 0 goto label4;

        $r14 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Handler mHandler>;

        $r16 = virtualinvoke $r14.<android.os.Handler: android.os.Message obtainMessage(int)>(3);

        virtualinvoke $r16.<android.os.Message: void sendToTarget()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processNextPostDialChar: c=");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c5);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isn\'t valid!");

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("ImsPhoneConnection", $r20);

        return;

     label4:
        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        $r9 = $r8.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhone mPhone>;

        r1 = $r9.<com.android.internal.telephony.imsphone.ImsPhone: android.os.Registrant mPostDialHandler>;

        if r1 == null goto label5;

        $r10 = virtualinvoke r1.<android.os.Registrant: android.os.Message messageForRegistrant()>();

        r21 = $r10;

        if $r10 == null goto label5;

        r2 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        r3 = staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message)>(r21);

        r3.<android.os.AsyncResult: java.lang.Object result> = r0;

        r3.<android.os.AsyncResult: java.lang.Object userObj> = r2;

        r21.<android.os.Message: int arg1> = c5;

        virtualinvoke r21.<android.os.Message: void sendToTarget()>();

     label5:
        return;
    }

    private void setPostDialState(com.android.internal.telephony.Connection$PostDialState)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.Connection$PostDialState r1, $r3, $r4, $r5, $r6, $r7, $r9;
        android.os.Message r2;
        android.os.Handler $r8, $r10, $r11;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 := @parameter0: com.android.internal.telephony.Connection$PostDialState;

        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r3 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState STARTED>;

        if $r4 == $r3 goto label1;

        $r9 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState STARTED>;

        if r1 != $r9 goto label1;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void acquireWakeLock()>();

        $r10 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Handler mHandler>;

        r2 = virtualinvoke $r10.<android.os.Handler: android.os.Message obtainMessage(int)>(4);

        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Handler mHandler>;

        virtualinvoke $r11.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r2, 60000L);

        goto label2;

     label1:
        $r6 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r5 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState STARTED>;

        if $r6 != $r5 goto label2;

        $r7 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState STARTED>;

        if r1 == $r7 goto label2;

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.Handler mHandler>;

        virtualinvoke $r8.<android.os.Handler: void removeMessages(int)>(4);

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void releaseWakeLock()>();

     label2:
        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState> = r1;

        return;
    }

    private void createWakeLock(android.content.Context)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        android.content.Context r1;
        android.os.PowerManager r2;
        java.lang.Object $r3;
        android.os.PowerManager$WakeLock $r4;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 := @parameter0: android.content.Context;

        $r3 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        r2 = (android.os.PowerManager) $r3;

        $r4 = virtualinvoke r2.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "ImsPhoneConnection");

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.PowerManager$WakeLock mPartialWakeLock> = $r4;

        return;
    }

    private void acquireWakeLock()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        android.os.PowerManager$WakeLock $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneConnection", "acquireWakeLock");

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        virtualinvoke $r1.<android.os.PowerManager$WakeLock: void acquire()>();

        return;
    }

    void releaseWakeLock()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        android.os.PowerManager$WakeLock r1, $r3, $r4, $r5;
        java.lang.Throwable r2, $r6;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r3 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        $z0 = virtualinvoke $r4.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label2;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneConnection", "releaseWakeLock");

        $r5 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        virtualinvoke $r5.<android.os.PowerManager$WakeLock: void release()>();

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int getNumberPresentation()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $i0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int mNumberPresentation>;

        return $i0;
    }

    public com.android.internal.telephony.UUSInfo getUUSInfo()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.UUSInfo $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.UUSInfo mUusInfo>;

        return $r1;
    }

    public com.android.internal.telephony.Connection getOrigConnection()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        return null;
    }

    void setMultiparty(boolean)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        boolean z0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        z0 := @parameter0: boolean;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setMultiparty ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsPhoneConnection", $r4);

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsMultiparty> = z0;

        return;
    }

    public boolean isMultiparty()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $z0 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean mIsMultiparty>;

        return $z0;
    }

    com.android.ims.ImsCall getImsCall()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.ims.ImsCall $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r1 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall mImsCall>;

        return $r1;
    }

    void setImsCall(com.android.ims.ImsCall)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.ims.ImsCall r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 := @parameter0: com.android.ims.ImsCall;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.ims.ImsCall mImsCall> = r1;

        return;
    }

    void changeParent(com.android.internal.telephony.imsphone.ImsPhoneCall)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.imsphone.ImsPhoneCall r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneCall;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent> = r1;

        return;
    }

    boolean update(com.android.ims.ImsCall, com.android.internal.telephony.Call$State)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.ims.ImsCall r1;
        com.android.internal.telephony.Call$State r2, $r5, $r6, $r9, $r10, $r21;
        com.android.ims.ImsCallProfile r3, r23;
        int i0, i1, i2, $i3, i4, i5;
        boolean z1, $z2, $z3, $z4, $z5, $z6, z7;
        com.android.ims.ImsStreamMediaProfile r4;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r7, $r8, $r11, $r12, $r13, $r15, $r16, $r17, $r20;
        com.android.internal.telephony.imsphone.ImsPhoneCallTracker $r14, $r18;
        com.android.ims.ImsException $r19;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        r1 := @parameter0: com.android.ims.ImsCall;

        r2 := @parameter1: com.android.internal.telephony.Call$State;

        $r5 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if r2 != $r5 goto label04;

        $r8 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent>;

        $r9 = virtualinvoke $r8.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $z4 = virtualinvoke $r9.<com.android.internal.telephony.Call$State: boolean isRinging()>();

        if $z4 != 0 goto label01;

        $r20 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent>;

        $r21 = virtualinvoke $r20.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $z6 = virtualinvoke $r21.<com.android.internal.telephony.Call$State: boolean isDialing()>();

        if $z6 == 0 goto label02;

     label01:
        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void onConnectedInOrOut()>();

     label02:
        $r11 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent>;

        $r10 = virtualinvoke $r11.<com.android.internal.telephony.imsphone.ImsPhoneCall: com.android.internal.telephony.Call$State getState()>();

        $z5 = virtualinvoke $r10.<com.android.internal.telephony.Call$State: boolean isRinging()>();

        if $z5 != 0 goto label03;

        $r16 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent>;

        $r18 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        $r15 = $r18.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mBackgroundCall>;

        if $r16 != $r15 goto label05;

     label03:
        $r12 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent>;

        virtualinvoke $r12.<com.android.internal.telephony.imsphone.ImsPhoneCall: void detach(com.android.internal.telephony.imsphone.ImsPhoneConnection)>(r0);

        $r14 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCallTracker mOwner>;

        $r13 = $r14.<com.android.internal.telephony.imsphone.ImsPhoneCallTracker: com.android.internal.telephony.imsphone.ImsPhoneCall mForegroundCall>;

        r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent> = $r13;

        $r17 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent>;

        virtualinvoke $r17.<com.android.internal.telephony.imsphone.ImsPhoneCall: void attach(com.android.internal.telephony.Connection)>(r0);

        goto label05;

     label04:
        $r6 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if r2 != $r6 goto label05;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void onStartedHolding()>();

     label05:
        $r7 = r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall mParent>;

        z7 = virtualinvoke $r7.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean update(com.android.internal.telephony.imsphone.ImsPhoneConnection,com.android.ims.ImsCall,com.android.internal.telephony.Call$State)>(r0, r1, r2);

        if r1 == null goto label13;

     label06:
        r3 = virtualinvoke r1.<com.android.ims.ImsCall: com.android.ims.ImsCallProfile getLocalCallProfile()>();

        if r3 == null goto label09;

        i0 = r3.<com.android.ims.ImsCallProfile: int mCallType>;

        if i0 != 4 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        z1 = $z3;

        $z2 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean isLocalVideoCapable()>();

        if $z2 == z1 goto label09;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setLocalVideoCapable(boolean)>(z1);

        z7 = 1;

     label09:
        goto label11;

     label10:
        $r19 := @caughtexception;

     label11:
        r23 = virtualinvoke r1.<com.android.ims.ImsCall: com.android.ims.ImsCallProfile getCallProfile()>();

        if r23 == null goto label13;

        i4 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int getVideoState()>();

        $i3 = r23.<com.android.ims.ImsCallProfile: int mCallType>;

        i5 = staticinvoke <com.android.ims.ImsCallProfile: int getVideoStateFromCallType(int)>($i3);

        if i4 == i5 goto label12;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setVideoState(int)>(i5);

        z7 = 1;

     label12:
        r4 = r23.<com.android.ims.ImsCallProfile: com.android.ims.ImsStreamMediaProfile mMediaProfile>;

        if r4 == null goto label13;

        i1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int getAudioQuality()>();

        i2 = specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: int getAudioQualityFromMediaProfile(com.android.ims.ImsStreamMediaProfile)>(r4);

        if i1 == i2 goto label13;

        virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void setAudioQuality(int)>(i2);

        z7 = 1;

     label13:
        return z7;

        catch com.android.ims.ImsException from label06 to label09 with label10;
    }

    public int getPreciseDisconnectCause()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        return 0;
    }

    public volatile com.android.internal.telephony.Call getCall()
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r1;

        r0 := @this: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: com.android.internal.telephony.imsphone.ImsPhoneCall getCall()>();

        return $r1;
    }

    static void access$000(com.android.internal.telephony.imsphone.ImsPhoneConnection)
    {
        com.android.internal.telephony.imsphone.ImsPhoneConnection r0;

        r0 := @parameter0: com.android.internal.telephony.imsphone.ImsPhoneConnection;

        specialinvoke r0.<com.android.internal.telephony.imsphone.ImsPhoneConnection: void processNextPostDialChar()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.imsphone.ImsPhoneConnection: int WAKE_LOCK_TIMEOUT_MILLIS> = 60000;

        <com.android.internal.telephony.imsphone.ImsPhoneConnection: int PAUSE_DELAY_MILLIS> = 3000;

        <com.android.internal.telephony.imsphone.ImsPhoneConnection: int EVENT_WAKE_LOCK_TIMEOUT> = 4;

        <com.android.internal.telephony.imsphone.ImsPhoneConnection: int EVENT_NEXT_POST_DIAL> = 3;

        <com.android.internal.telephony.imsphone.ImsPhoneConnection: int EVENT_PAUSE_DONE> = 2;

        <com.android.internal.telephony.imsphone.ImsPhoneConnection: int EVENT_DTMF_DONE> = 1;

        <com.android.internal.telephony.imsphone.ImsPhoneConnection: boolean DBG> = 1;

        <com.android.internal.telephony.imsphone.ImsPhoneConnection: java.lang.String LOG_TAG> = "ImsPhoneConnection";

        return;
    }
}
