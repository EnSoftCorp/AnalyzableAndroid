public class com.android.internal.telephony.gsm.GSMPhone extends com.android.internal.telephony.PhoneBase
{
    static final java.lang.String LOG_TAG;
    private static final boolean LOCAL_DEBUG;
    private static final boolean VDBG;
    public static final java.lang.String CIPHERING_KEY;
    public static final java.lang.String VM_NUMBER;
    public static final java.lang.String VM_SIM_IMSI;
    com.android.internal.telephony.gsm.GsmCallTracker mCT;
    com.android.internal.telephony.gsm.GsmServiceStateTracker mSST;
    java.util.ArrayList mPendingMMIs;
    com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager mSimPhoneBookIntManager;
    com.android.internal.telephony.PhoneSubInfo mSubInfo;
    android.os.Registrant mPostDialHandler;
    android.os.RegistrantList mSsnRegistrants;
    private final android.os.RegistrantList mEcmTimerResetRegistrants;
    private java.lang.String mImei;
    private java.lang.String mImeiSv;
    private java.lang.String mVmNumber;
    private com.android.internal.telephony.uicc.IsimUiccRecords mIsimUiccRecords;

    public void <init>(android.content.Context, com.android.internal.telephony.CommandsInterface, com.android.internal.telephony.PhoneNotifier)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.content.Context r1;
        com.android.internal.telephony.CommandsInterface r2;
        com.android.internal.telephony.PhoneNotifier r3;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.telephony.CommandsInterface;

        r3 := @parameter2: com.android.internal.telephony.PhoneNotifier;

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean)>(r1, r2, r3, 0);

        return;
    }

    public void <init>(android.content.Context, com.android.internal.telephony.CommandsInterface, com.android.internal.telephony.PhoneNotifier, boolean)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.content.Context r1;
        com.android.internal.telephony.CommandsInterface r2, $r7, $r11, $r12, $r13, $r14, $r15;
        com.android.internal.telephony.PhoneNotifier r3;
        boolean z0, $z1;
        java.util.ArrayList $r4;
        android.os.RegistrantList $r5, $r6;
        com.android.internal.telephony.gsm.GsmCallTracker $r8;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r9, $r17;
        com.android.internal.telephony.dataconnection.DcTracker $r10;
        com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager $r16;
        com.android.internal.telephony.test.SimulatedRadioControl $r18;
        com.android.internal.telephony.PhoneSubInfo $r19;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.telephony.CommandsInterface;

        r3 := @parameter2: com.android.internal.telephony.PhoneNotifier;

        z0 := @parameter3: boolean;

        specialinvoke r0.<com.android.internal.telephony.PhoneBase: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean)>("GSM", r3, r1, r2, z0);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs> = $r4;

        $r5 = new android.os.RegistrantList;

        specialinvoke $r5.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mSsnRegistrants> = $r5;

        $r6 = new android.os.RegistrantList;

        specialinvoke $r6.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mEcmTimerResetRegistrants> = $r6;

        $z1 = r2 instanceof com.android.internal.telephony.test.SimulatedRadioControl;

        if $z1 == 0 goto label1;

        $r18 = (com.android.internal.telephony.test.SimulatedRadioControl) r2;

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.test.SimulatedRadioControl mSimulatedRadioControl> = $r18;

     label1:
        $r7 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r7.<com.android.internal.telephony.CommandsInterface: void setPhoneType(int)>(1);

        $r8 = new com.android.internal.telephony.gsm.GsmCallTracker;

        specialinvoke $r8.<com.android.internal.telephony.gsm.GsmCallTracker: void <init>(com.android.internal.telephony.gsm.GSMPhone)>(r0);

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT> = $r8;

        $r9 = new com.android.internal.telephony.gsm.GsmServiceStateTracker;

        specialinvoke $r9.<com.android.internal.telephony.gsm.GsmServiceStateTracker: void <init>(com.android.internal.telephony.gsm.GSMPhone)>(r0);

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST> = $r9;

        $r10 = new com.android.internal.telephony.dataconnection.DcTracker;

        specialinvoke $r10.<com.android.internal.telephony.dataconnection.DcTracker: void <init>(com.android.internal.telephony.PhoneBase)>(r0);

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker> = $r10;

        if z0 != 0 goto label2;

        $r16 = new com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager;

        specialinvoke $r16.<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: void <init>(com.android.internal.telephony.gsm.GSMPhone)>(r0);

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager mSimPhoneBookIntManager> = $r16;

        $r19 = new com.android.internal.telephony.PhoneSubInfo;

        specialinvoke $r19.<com.android.internal.telephony.PhoneSubInfo: void <init>(com.android.internal.telephony.Phone)>(r0);

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.PhoneSubInfo mSubInfo> = $r19;

     label2:
        $r11 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r11.<com.android.internal.telephony.CommandsInterface: void registerForAvailable(android.os.Handler,int,java.lang.Object)>(r0, 1, null);

        $r12 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r12.<com.android.internal.telephony.CommandsInterface: void registerForOffOrNotAvailable(android.os.Handler,int,java.lang.Object)>(r0, 8, null);

        $r13 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r13.<com.android.internal.telephony.CommandsInterface: void registerForOn(android.os.Handler,int,java.lang.Object)>(r0, 5, null);

        $r15 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r15.<com.android.internal.telephony.CommandsInterface: void setOnUSSD(android.os.Handler,int,java.lang.Object)>(r0, 7, null);

        $r14 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r14.<com.android.internal.telephony.CommandsInterface: void setOnSuppServiceNotification(android.os.Handler,int,java.lang.Object)>(r0, 2, null);

        $r17 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        virtualinvoke $r17.<com.android.internal.telephony.gsm.GsmServiceStateTracker: void registerForNetworkAttached(android.os.Handler,int,java.lang.Object)>(r0, 19, null);

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void setProperties()>();

        return;
    }

    public void <init>(android.content.Context, com.android.internal.telephony.CommandsInterface, com.android.internal.telephony.PhoneNotifier, int)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.content.Context r1;
        com.android.internal.telephony.CommandsInterface r2;
        com.android.internal.telephony.PhoneNotifier r3;
        int i0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.telephony.CommandsInterface;

        r3 := @parameter2: com.android.internal.telephony.PhoneNotifier;

        i0 := @parameter3: int;

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface,com.android.internal.telephony.PhoneNotifier,boolean,int)>(r1, r2, r3, 0, i0);

        return;
    }

    public void <init>(android.content.Context, com.android.internal.telephony.CommandsInterface, com.android.internal.telephony.PhoneNotifier, boolean, int)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.content.Context r1;
        com.android.internal.telephony.CommandsInterface r2, $r7, $r11, $r12, $r13, $r14, $r16;
        com.android.internal.telephony.PhoneNotifier r3;
        boolean z0, $z1;
        int i0, $i1;
        java.util.ArrayList $r4;
        android.os.RegistrantList $r5, $r6;
        com.android.internal.telephony.gsm.GsmCallTracker $r8;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r9, $r15;
        com.android.internal.telephony.dataconnection.DcTracker $r10;
        java.lang.StringBuilder $r17, $r18, $r19;
        com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager $r20;
        java.lang.String $r21;
        com.android.internal.telephony.test.SimulatedRadioControl $r22;
        com.android.internal.telephony.PhoneSubInfo $r23;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.telephony.CommandsInterface;

        r3 := @parameter2: com.android.internal.telephony.PhoneNotifier;

        z0 := @parameter3: boolean;

        i0 := @parameter4: int;

        specialinvoke r0.<com.android.internal.telephony.PhoneBase: void <init>(java.lang.String,com.android.internal.telephony.PhoneNotifier,android.content.Context,com.android.internal.telephony.CommandsInterface,boolean,int)>("GSM", r3, r1, r2, z0, i0);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs> = $r4;

        $r5 = new android.os.RegistrantList;

        specialinvoke $r5.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mSsnRegistrants> = $r5;

        $r6 = new android.os.RegistrantList;

        specialinvoke $r6.<android.os.RegistrantList: void <init>()>();

        r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mEcmTimerResetRegistrants> = $r6;

        $z1 = r2 instanceof com.android.internal.telephony.test.SimulatedRadioControl;

        if $z1 == 0 goto label1;

        $r22 = (com.android.internal.telephony.test.SimulatedRadioControl) r2;

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.test.SimulatedRadioControl mSimulatedRadioControl> = $r22;

     label1:
        $r7 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r7.<com.android.internal.telephony.CommandsInterface: void setPhoneType(int)>(1);

        $r8 = new com.android.internal.telephony.gsm.GsmCallTracker;

        specialinvoke $r8.<com.android.internal.telephony.gsm.GsmCallTracker: void <init>(com.android.internal.telephony.gsm.GSMPhone)>(r0);

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT> = $r8;

        $r9 = new com.android.internal.telephony.gsm.GsmServiceStateTracker;

        specialinvoke $r9.<com.android.internal.telephony.gsm.GsmServiceStateTracker: void <init>(com.android.internal.telephony.gsm.GSMPhone)>(r0);

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST> = $r9;

        $r10 = new com.android.internal.telephony.dataconnection.DcTracker;

        specialinvoke $r10.<com.android.internal.telephony.dataconnection.DcTracker: void <init>(com.android.internal.telephony.PhoneBase)>(r0);

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker> = $r10;

        if z0 != 0 goto label2;

        $r20 = new com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager;

        specialinvoke $r20.<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: void <init>(com.android.internal.telephony.gsm.GSMPhone)>(r0);

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager mSimPhoneBookIntManager> = $r20;

        $r23 = new com.android.internal.telephony.PhoneSubInfo;

        specialinvoke $r23.<com.android.internal.telephony.PhoneSubInfo: void <init>(com.android.internal.telephony.Phone)>(r0);

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.PhoneSubInfo mSubInfo> = $r23;

     label2:
        $r11 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r11.<com.android.internal.telephony.CommandsInterface: void registerForAvailable(android.os.Handler,int,java.lang.Object)>(r0, 1, null);

        $r12 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r12.<com.android.internal.telephony.CommandsInterface: void registerForOffOrNotAvailable(android.os.Handler,int,java.lang.Object)>(r0, 8, null);

        $r14 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r14.<com.android.internal.telephony.CommandsInterface: void registerForOn(android.os.Handler,int,java.lang.Object)>(r0, 5, null);

        $r13 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r13.<com.android.internal.telephony.CommandsInterface: void setOnUSSD(android.os.Handler,int,java.lang.Object)>(r0, 7, null);

        $r16 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r16.<com.android.internal.telephony.CommandsInterface: void setOnSuppServiceNotification(android.os.Handler,int,java.lang.Object)>(r0, 2, null);

        $r15 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        virtualinvoke $r15.<com.android.internal.telephony.gsm.GsmServiceStateTracker: void registerForNetworkAttached(android.os.Handler,int,java.lang.Object)>(r0, 19, null);

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void setProperties()>();

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GSMPhone: constructor: sub = ");

        $i1 = r0.<com.android.internal.telephony.gsm.GSMPhone: int mPhoneId>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void log(java.lang.String)>($r21);

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void setProperties()>();

        return;
    }

    protected void setProperties()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        long $l0;
        java.lang.Integer $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $l0 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: long getSubId()>();

        $r1 = new java.lang.Integer;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(1);

        $r2 = virtualinvoke $r1.<java.lang.Integer: java.lang.String toString()>();

        staticinvoke <android.telephony.TelephonyManager: void setTelephonyProperty(java.lang.String,long,java.lang.String)>("gsm.current.phone-type", $l0, $r2);

        return;
    }

    public void dispose()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r16;
        com.android.internal.telephony.CommandsInterface $r4, $r5, $r6, $r8, $r9;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r7, $r13;
        java.util.ArrayList $r10;
        com.android.internal.telephony.gsm.GsmCallTracker $r11;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r12;
        com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager $r14;
        com.android.internal.telephony.PhoneSubInfo $r15;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r3 = <com.android.internal.telephony.PhoneProxy: java.lang.Object lockForRadioTechnologyChange>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<com.android.internal.telephony.PhoneBase: void dispose()>();

        $r4 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r4.<com.android.internal.telephony.CommandsInterface: void unregisterForAvailable(android.os.Handler)>(r0);

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void unregisterForSimRecordEvents()>();

        $r5 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r5.<com.android.internal.telephony.CommandsInterface: void unregisterForOffOrNotAvailable(android.os.Handler)>(r0);

        $r6 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r6.<com.android.internal.telephony.CommandsInterface: void unregisterForOn(android.os.Handler)>(r0);

        $r7 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        virtualinvoke $r7.<com.android.internal.telephony.gsm.GsmServiceStateTracker: void unregisterForNetworkAttached(android.os.Handler)>(r0);

        $r8 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r8.<com.android.internal.telephony.CommandsInterface: void unSetOnUSSD(android.os.Handler)>(r0);

        $r9 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r9.<com.android.internal.telephony.CommandsInterface: void unSetOnSuppServiceNotification(android.os.Handler)>(r0);

        $r10 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs>;

        virtualinvoke $r10.<java.util.ArrayList: void clear()>();

        $r11 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r11.<com.android.internal.telephony.gsm.GsmCallTracker: void dispose()>();

        $r12 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        virtualinvoke $r12.<com.android.internal.telephony.dataconnection.DcTrackerBase: void dispose()>();

        $r13 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        virtualinvoke $r13.<com.android.internal.telephony.gsm.GsmServiceStateTracker: void dispose()>();

        $r14 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager mSimPhoneBookIntManager>;

        virtualinvoke $r14.<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: void dispose()>();

        $r15 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.PhoneSubInfo mSubInfo>;

        virtualinvoke $r15.<com.android.internal.telephony.PhoneSubInfo: void dispose()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r16 := @caughtexception;

        r2 = $r16;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeReferences()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "removeReferences");

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.test.SimulatedRadioControl mSimulatedRadioControl> = null;

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager mSimPhoneBookIntManager> = null;

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.PhoneSubInfo mSubInfo> = null;

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT> = null;

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST> = null;

        specialinvoke r0.<com.android.internal.telephony.PhoneBase: void removeReferences()>();

        return;
    }

    protected void finalize()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "GSMPhone finalized");

        return;
    }

    private void onSubscriptionActivated()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11, $r13;
        com.android.internal.telephony.Subscription $r3, $r6, $r9, $r12;
        int $i0, $i1, $i2;
        com.android.internal.telephony.Subscription$SubscriptionStatus $r14;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r15, $r18;
        java.lang.String $r16;
        android.os.Message $r17;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r19;
        com.android.internal.telephony.dataconnection.DcTracker $r20;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SUBSCRIPTION ACTIVATED : slotId : ");

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Subscription mSubscriptionData>;

        $i0 = $r3.<com.android.internal.telephony.Subscription: int slotId>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" appid : ");

        $r6 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Subscription mSubscriptionData>;

        $i1 = $r6.<com.android.internal.telephony.Subscription: int m3gppIndex>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" subId : ");

        $r9 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Subscription mSubscriptionData>;

        $i2 = $r9.<com.android.internal.telephony.Subscription: int subId>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" subStatus : ");

        $r12 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Subscription mSubscriptionData>;

        $r14 = $r12.<com.android.internal.telephony.Subscription: com.android.internal.telephony.Subscription$SubscriptionStatus subStatus>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void log(java.lang.String)>($r16);

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void setProperties()>();

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void onUpdateIccAvailability()>();

        $r18 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        $r15 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        $r17 = virtualinvoke $r15.<com.android.internal.telephony.gsm.GsmServiceStateTracker: android.os.Message obtainMessage(int)>(42);

        virtualinvoke $r18.<com.android.internal.telephony.gsm.GsmServiceStateTracker: boolean sendMessage(android.os.Message)>($r17);

        $r19 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        $r20 = (com.android.internal.telephony.dataconnection.DcTracker) $r19;

        virtualinvoke $r20.<com.android.internal.telephony.dataconnection.DcTracker: void updateRecords()>();

        return;
    }

    private void onSubscriptionDeactivated()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void log(java.lang.String)>("SUBSCRIPTION DEACTIVATED");

        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Subscription mSubscriptionData> = null;

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void resetSubSpecifics()>();

        return;
    }

    public android.telephony.ServiceState getServiceState()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r1, $r3, $r5, $r11;
        com.android.internal.telephony.imsphone.ImsPhone $r2, $r7, $r9;
        android.telephony.ServiceState $r4, $r6, $r8, $r10, $r12;
        int $i0, $i1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        if $r1 == null goto label1;

        $r11 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        $r12 = $r11.<com.android.internal.telephony.gsm.GsmServiceStateTracker: android.telephony.ServiceState mSS>;

        $i1 = virtualinvoke $r12.<android.telephony.ServiceState: int getState()>();

        if $i1 == 0 goto label2;

     label1:
        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.imsphone.ImsPhone mImsPhone>;

        if $r2 == null goto label2;

        $r7 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.imsphone.ImsPhone mImsPhone>;

        $r8 = virtualinvoke $r7.<com.android.internal.telephony.imsphone.ImsPhone: android.telephony.ServiceState getServiceState()>();

        $i0 = virtualinvoke $r8.<android.telephony.ServiceState: int getState()>();

        if $i0 != 0 goto label2;

        $r9 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.imsphone.ImsPhone mImsPhone>;

        $r10 = virtualinvoke $r9.<com.android.internal.telephony.imsphone.ImsPhone: android.telephony.ServiceState getServiceState()>();

        return $r10;

     label2:
        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        if $r3 == null goto label3;

        $r5 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        $r6 = $r5.<com.android.internal.telephony.gsm.GsmServiceStateTracker: android.telephony.ServiceState mSS>;

        return $r6;

     label3:
        $r4 = new android.telephony.ServiceState;

        specialinvoke $r4.<android.telephony.ServiceState: void <init>()>();

        return $r4;
    }

    public android.telephony.CellLocation getCellLocation()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r1;
        android.telephony.CellLocation $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmServiceStateTracker: android.telephony.CellLocation getCellLocation()>();

        return $r2;
    }

    public com.android.internal.telephony.PhoneConstants$State getState()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;
        com.android.internal.telephony.PhoneConstants$State $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $r2 = $r1.<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        return $r2;
    }

    public int getPhoneType()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        return 1;
    }

    public com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        return $r1;
    }

    public com.android.internal.telephony.CallTracker getCallTracker()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        return $r1;
    }

    public java.util.List getPendingMmiCodes()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs>;

        return $r1;
    }

    public com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1;
        com.android.internal.telephony.PhoneConstants$DataState r2;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r3, $r11, $r13;
        boolean $z0, $z1, $z2, $z3;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r4, $r5, $r6;
        int[] $r7;
        com.android.internal.telephony.DctConstants$State $r8;
        int $i0, $i1, $i2;
        com.android.internal.telephony.gsm.GsmCallTracker $r9;
        com.android.internal.telephony.PhoneConstants$State $r10, $r12;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        r2 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState DISCONNECTED>;

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        if $r3 != null goto label1;

        r2 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState DISCONNECTED>;

        goto label9;

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("emergency");

        if $z0 != 0 goto label2;

        $r13 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        $i2 = virtualinvoke $r13.<com.android.internal.telephony.gsm.GsmServiceStateTracker: int getCurrentDataConnectionState()>();

        if $i2 == 0 goto label2;

        r2 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState DISCONNECTED>;

        goto label9;

     label2:
        $r4 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        $z1 = virtualinvoke $r4.<com.android.internal.telephony.dataconnection.DcTrackerBase: boolean isApnTypeEnabled(java.lang.String)>(r1);

        if $z1 == 0 goto label3;

        $r5 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        $z2 = virtualinvoke $r5.<com.android.internal.telephony.dataconnection.DcTrackerBase: boolean isApnTypeActive(java.lang.String)>(r1);

        if $z2 != 0 goto label4;

     label3:
        r2 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState DISCONNECTED>;

        goto label9;

     label4:
        $r7 = <com.android.internal.telephony.gsm.GSMPhone$1: int[] $SwitchMap$com$android$internal$telephony$DctConstants$State>;

        $r6 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        $r8 = virtualinvoke $r6.<com.android.internal.telephony.dataconnection.DcTrackerBase: com.android.internal.telephony.DctConstants$State getState(java.lang.String)>(r1);

        $i0 = virtualinvoke $r8.<com.android.internal.telephony.DctConstants$State: int ordinal()>();

        $i1 = $r7[$i0];

        tableswitch($i1)
        {
            case 1: goto label5;
            case 2: goto label5;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label6;
            case 6: goto label8;
            case 7: goto label8;
            default: goto label9;
        };

     label5:
        r2 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState DISCONNECTED>;

        goto label9;

     label6:
        $r9 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $r12 = $r9.<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        $r10 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State IDLE>;

        if $r12 == $r10 goto label7;

        $r11 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        $z3 = virtualinvoke $r11.<com.android.internal.telephony.gsm.GsmServiceStateTracker: boolean isConcurrentVoiceAndDataAllowed()>();

        if $z3 != 0 goto label7;

        r2 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState SUSPENDED>;

        goto label9;

     label7:
        r2 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState CONNECTED>;

        goto label9;

     label8:
        r2 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState CONNECTING>;

     label9:
        return r2;
    }

    public com.android.internal.telephony.Phone$DataActivityState getDataActivityState()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.Phone$DataActivityState r1;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r2;
        int $i0, $i1, $i2;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r3;
        int[] $r4;
        com.android.internal.telephony.DctConstants$Activity $r5;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 = <com.android.internal.telephony.Phone$DataActivityState: com.android.internal.telephony.Phone$DataActivityState NONE>;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        $i0 = virtualinvoke $r2.<com.android.internal.telephony.gsm.GsmServiceStateTracker: int getCurrentDataConnectionState()>();

        if $i0 != 0 goto label6;

        $r4 = <com.android.internal.telephony.gsm.GSMPhone$1: int[] $SwitchMap$com$android$internal$telephony$DctConstants$Activity>;

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        $r5 = virtualinvoke $r3.<com.android.internal.telephony.dataconnection.DcTrackerBase: com.android.internal.telephony.DctConstants$Activity getActivity()>();

        $i1 = virtualinvoke $r5.<com.android.internal.telephony.DctConstants$Activity: int ordinal()>();

        $i2 = $r4[$i1];

        tableswitch($i2)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            default: goto label5;
        };

     label1:
        r1 = <com.android.internal.telephony.Phone$DataActivityState: com.android.internal.telephony.Phone$DataActivityState DATAIN>;

        goto label6;

     label2:
        r1 = <com.android.internal.telephony.Phone$DataActivityState: com.android.internal.telephony.Phone$DataActivityState DATAOUT>;

        goto label6;

     label3:
        r1 = <com.android.internal.telephony.Phone$DataActivityState: com.android.internal.telephony.Phone$DataActivityState DATAINANDOUT>;

        goto label6;

     label4:
        r1 = <com.android.internal.telephony.Phone$DataActivityState: com.android.internal.telephony.Phone$DataActivityState DORMANT>;

        goto label6;

     label5:
        r1 = <com.android.internal.telephony.Phone$DataActivityState: com.android.internal.telephony.Phone$DataActivityState NONE>;

     label6:
        return r1;
    }

    void notifyPhoneStateChanged()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.PhoneNotifier $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.PhoneNotifier mNotifier>;

        interfaceinvoke $r1.<com.android.internal.telephony.PhoneNotifier: void notifyPhoneState(com.android.internal.telephony.Phone)>(r0);

        return;
    }

    void notifyPreciseCallStateChanged()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        specialinvoke r0.<com.android.internal.telephony.PhoneBase: void notifyPreciseCallStateChangedP()>();

        return;
    }

    public void notifyNewRingingConnection(com.android.internal.telephony.Connection)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.Connection r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: com.android.internal.telephony.Connection;

        specialinvoke r0.<com.android.internal.telephony.PhoneBase: void notifyNewRingingConnectionP(com.android.internal.telephony.Connection)>(r1);

        return;
    }

    void notifyDisconnect(com.android.internal.telephony.Connection)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.Connection r1;
        android.os.RegistrantList $r2;
        com.android.internal.telephony.PhoneNotifier $r3;
        int $i0, $i1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: com.android.internal.telephony.Connection;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mDisconnectRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void notifyResult(java.lang.Object)>(r1);

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.PhoneNotifier mNotifier>;

        $i0 = virtualinvoke r1.<com.android.internal.telephony.Connection: int getDisconnectCause()>();

        $i1 = virtualinvoke r1.<com.android.internal.telephony.Connection: int getPreciseDisconnectCause()>();

        interfaceinvoke $r3.<com.android.internal.telephony.PhoneNotifier: void notifyDisconnectCause(int,int)>($i0, $i1);

        return;
    }

    void notifyUnknownConnection(com.android.internal.telephony.Connection)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.Connection r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: com.android.internal.telephony.Connection;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mUnknownConnectionRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void notifyResult(java.lang.Object)>(r1);

        return;
    }

    void notifySuppServiceFailed(com.android.internal.telephony.Phone$SuppService)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.Phone$SuppService r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: com.android.internal.telephony.Phone$SuppService;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mSuppServiceFailedRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void notifyResult(java.lang.Object)>(r1);

        return;
    }

    void notifyServiceStateChanged(android.telephony.ServiceState)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.telephony.ServiceState r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.telephony.ServiceState;

        specialinvoke r0.<com.android.internal.telephony.PhoneBase: void notifyServiceStateChangedP(android.telephony.ServiceState)>(r1);

        return;
    }

    void notifyLocationChanged()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.PhoneNotifier $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.PhoneNotifier mNotifier>;

        interfaceinvoke $r1.<com.android.internal.telephony.PhoneNotifier: void notifyCellLocation(com.android.internal.telephony.Phone)>(r0);

        return;
    }

    public void notifyCallForwardingIndicator()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.PhoneNotifier $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.PhoneNotifier mNotifier>;

        interfaceinvoke $r1.<com.android.internal.telephony.PhoneNotifier: void notifyCallForwardingChanged(com.android.internal.telephony.Phone)>(r0);

        return;
    }

    public void setSystemProperty(java.lang.String, java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1, r2;
        long $l0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $l0 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: long getSubId()>();

        staticinvoke <android.telephony.TelephonyManager: void setTelephonyProperty(java.lang.String,long,java.lang.String)>(r1, $l0, r2);

        return;
    }

    public void registerForSuppServiceNotification(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.Handler r1;
        int i0, $i1;
        java.lang.Object r2;
        android.os.RegistrantList $r3, $r4;
        com.android.internal.telephony.CommandsInterface $r5;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mSsnRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        $r4 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mSsnRegistrants>;

        $i1 = virtualinvoke $r4.<android.os.RegistrantList: int size()>();

        if $i1 != 1 goto label1;

        $r5 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r5.<com.android.internal.telephony.CommandsInterface: void setSuppServiceNotifications(boolean,android.os.Message)>(1, null);

     label1:
        return;
    }

    public void unregisterForSuppServiceNotification(android.os.Handler)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2, $r3;
        int $i0;
        com.android.internal.telephony.CommandsInterface $r4;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mSsnRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mSsnRegistrants>;

        $i0 = virtualinvoke $r3.<android.os.RegistrantList: int size()>();

        if $i0 != 0 goto label1;

        $r4 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r4.<com.android.internal.telephony.CommandsInterface: void setSuppServiceNotifications(boolean,android.os.Message)>(0, null);

     label1:
        return;
    }

    public void registerForSimRecordsLoaded(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mSimRecordsLoadedRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void unregisterForSimRecordsLoaded(android.os.Handler)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mSimRecordsLoadedRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void acceptCall(int) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        int i0;
        com.android.internal.telephony.imsphone.ImsPhone r1;
        com.android.internal.telephony.gsm.GsmCallTracker $r2;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r3;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.imsphone.ImsPhone mImsPhone>;

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.imsphone.ImsPhoneCall getRingingCall()>();

        $z0 = virtualinvoke $r3.<com.android.internal.telephony.imsphone.ImsPhoneCall: boolean isRinging()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhone: void acceptCall(int)>(i0);

        goto label2;

     label1:
        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r2.<com.android.internal.telephony.gsm.GsmCallTracker: void acceptCall()>();

     label2:
        return;
    }

    public void rejectCall() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmCallTracker: void rejectCall()>();

        return;
    }

    public void switchHoldingAndActive() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmCallTracker: void switchWaitingOrHoldingAndActive()>();

        return;
    }

    public boolean canConference()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        boolean z0, $z1, $z2;
        com.android.internal.telephony.imsphone.ImsPhone $r1, $r3;
        com.android.internal.telephony.gsm.GsmCallTracker $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        z0 = 0;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.imsphone.ImsPhone mImsPhone>;

        if $r1 == null goto label1;

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.imsphone.ImsPhone mImsPhone>;

        z0 = virtualinvoke $r3.<com.android.internal.telephony.imsphone.ImsPhone: boolean canConference()>();

     label1:
        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $z1 = virtualinvoke $r2.<com.android.internal.telephony.gsm.GsmCallTracker: boolean canConference()>();

        if $z1 != 0 goto label2;

        if z0 == 0 goto label3;

     label2:
        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    public boolean canDial()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmCallTracker: boolean canDial()>();

        return $z0;
    }

    public void conference()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.imsphone.ImsPhone $r1, $r3, $r4;
        com.android.internal.telephony.gsm.GsmCallTracker $r2;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.imsphone.ImsPhone mImsPhone>;

        if $r1 == null goto label1;

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.imsphone.ImsPhone mImsPhone>;

        $z0 = virtualinvoke $r3.<com.android.internal.telephony.imsphone.ImsPhone: boolean canConference()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void log(java.lang.String)>("conference() - delegated to IMS phone");

        $r4 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.imsphone.ImsPhone mImsPhone>;

        virtualinvoke $r4.<com.android.internal.telephony.imsphone.ImsPhone: void conference()>();

        return;

     label1:
        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r2.<com.android.internal.telephony.gsm.GsmCallTracker: void conference()>();

        return;
    }

    public void clearDisconnected()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmCallTracker: void clearDisconnected()>();

        return;
    }

    public boolean canTransfer()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmCallTracker: boolean canTransfer()>();

        return $z0;
    }

    public void explicitCallTransfer()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmCallTracker: void explicitCallTransfer()>();

        return;
    }

    public com.android.internal.telephony.gsm.GsmCall getForegroundCall()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;
        com.android.internal.telephony.gsm.GsmCall $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $r2 = $r1.<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.gsm.GsmCall mForegroundCall>;

        return $r2;
    }

    public com.android.internal.telephony.gsm.GsmCall getBackgroundCall()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;
        com.android.internal.telephony.gsm.GsmCall $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $r2 = $r1.<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.gsm.GsmCall mBackgroundCall>;

        return $r2;
    }

    public com.android.internal.telephony.Call getRingingCall()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.imsphone.ImsPhone r1;
        com.android.internal.telephony.gsm.GsmCallTracker $r2, $r4, $r7, $r9;
        com.android.internal.telephony.gsm.GsmCall $r3, $r5, $r8, $r10;
        com.android.internal.telephony.imsphone.ImsPhoneCall $r6;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.imsphone.ImsPhone mImsPhone>;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $r3 = $r2.<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.gsm.GsmCall mRingingCall>;

        if $r3 == null goto label1;

        $r7 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $r8 = $r7.<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.gsm.GsmCall mRingingCall>;

        $z0 = virtualinvoke $r8.<com.android.internal.telephony.gsm.GsmCall: boolean isRinging()>();

        if $z0 == 0 goto label1;

        $r9 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $r10 = $r9.<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.gsm.GsmCall mRingingCall>;

        return $r10;

     label1:
        if r1 == null goto label2;

        $r6 = virtualinvoke r1.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.imsphone.ImsPhoneCall getRingingCall()>();

        return $r6;

     label2:
        $r4 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $r5 = $r4.<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.gsm.GsmCall mRingingCall>;

        return $r5;
    }

    private boolean handleCallDeflectionIncallSupplementaryService(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1;
        com.android.internal.telephony.CallStateException r2, $r11;
        int $i0;
        com.android.internal.telephony.Call $r3;
        com.android.internal.telephony.Call$State $r4, $r5, $r7, $r8;
        com.android.internal.telephony.gsm.GsmCall $r6;
        com.android.internal.telephony.gsm.GsmCallTracker $r9, $r10;
        com.android.internal.telephony.Phone$SuppService $r12;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 1 goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Call getRingingCall()>();

        $r4 = virtualinvoke $r3.<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>();

        $r5 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        if $r4 == $r5 goto label5;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "MmiCode 0: rejectCall");

     label2:
        $r10 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r10.<com.android.internal.telephony.gsm.GsmCallTracker: void rejectCall()>();

     label3:
        goto label6;

     label4:
        $r11 := @caughtexception;

        r2 = $r11;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("GSMPhone", "reject failed", r2);

        $r12 = <com.android.internal.telephony.Phone$SuppService: com.android.internal.telephony.Phone$SuppService REJECT>;

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void notifySuppServiceFailed(com.android.internal.telephony.Phone$SuppService)>($r12);

        goto label6;

     label5:
        $r6 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCall getBackgroundCall()>();

        $r7 = virtualinvoke $r6.<com.android.internal.telephony.gsm.GsmCall: com.android.internal.telephony.Call$State getState()>();

        $r8 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        if $r7 == $r8 goto label6;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "MmiCode 0: hangupWaitingOrBackground");

        $r9 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r9.<com.android.internal.telephony.gsm.GsmCallTracker: void hangupWaitingOrBackground()>();

     label6:
        return 1;

        catch com.android.internal.telephony.CallStateException from label2 to label3 with label4;
    }

    private boolean handleCallWaitingIncallSupplementaryService(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1, $r9;
        int i0, i2;
        com.android.internal.telephony.gsm.GsmCall r2;
        char c1;
        com.android.internal.telephony.Call$State $r3, $r4;
        com.android.internal.telephony.gsm.GsmCallTracker $r5, $r6, $r11;
        java.lang.StringBuilder $r7, $r8, $r10;
        com.android.internal.telephony.CallStateException $r12, r14;
        com.android.internal.telephony.Phone$SuppService $r13;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 <= 2 goto label1;

        return 0;

     label1:
        r2 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCall getForegroundCall()>();

     label2:
        if i0 <= 1 goto label4;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(1);

        i2 = c1 - 48;

        if i2 < 1 goto label3;

        if i2 > 7 goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MmiCode 1: hangupConnectionByIndex ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", $r9);

        $r11 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r11.<com.android.internal.telephony.gsm.GsmCallTracker: void hangupConnectionByIndex(com.android.internal.telephony.gsm.GsmCall,int)>(r2, i2);

     label3:
        goto label6;

     label4:
        $r3 = virtualinvoke r2.<com.android.internal.telephony.gsm.GsmCall: com.android.internal.telephony.Call$State getState()>();

        $r4 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        if $r3 == $r4 goto label5;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "MmiCode 1: hangup foreground");

        $r6 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r6.<com.android.internal.telephony.gsm.GsmCallTracker: void hangup(com.android.internal.telephony.gsm.GsmCall)>(r2);

        goto label6;

     label5:
        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "MmiCode 1: switchWaitingOrHoldingAndActive");

        $r5 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r5.<com.android.internal.telephony.gsm.GsmCallTracker: void switchWaitingOrHoldingAndActive()>();

     label6:
        goto label8;

     label7:
        $r12 := @caughtexception;

        r14 = $r12;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("GSMPhone", "hangup failed", r14);

        $r13 = <com.android.internal.telephony.Phone$SuppService: com.android.internal.telephony.Phone$SuppService HANGUP>;

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void notifySuppServiceFailed(com.android.internal.telephony.Phone$SuppService)>($r13);

     label8:
        return 1;

        catch com.android.internal.telephony.CallStateException from label2 to label6 with label7;
    }

    private boolean handleCallHoldIncallSupplementaryService(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1, $r12, $r18;
        int i0, i2;
        com.android.internal.telephony.gsm.GsmCall r2;
        char c1;
        com.android.internal.telephony.gsm.GsmConnection r3;
        com.android.internal.telephony.Call $r4;
        com.android.internal.telephony.Call$State $r5, $r6;
        com.android.internal.telephony.gsm.GsmCallTracker $r7, $r8, $r9, $r20;
        java.lang.StringBuilder $r10, $r11, $r13, $r15, $r16, $r17;
        com.android.internal.telephony.Phone$SuppService $r14, $r19, $r22;
        com.android.internal.telephony.CallStateException $r21, $r23, r24, r25;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 <= 2 goto label01;

        return 0;

     label01:
        r2 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCall getForegroundCall()>();

        if i0 <= 1 goto label06;

     label02:
        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(1);

        i2 = c1 - 48;

        $r9 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        r3 = virtualinvoke $r9.<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.gsm.GsmConnection getConnectionByIndex(com.android.internal.telephony.gsm.GsmCall,int)>(r2, i2);

        if r3 == null goto label03;

        if i2 < 1 goto label03;

        if i2 > 7 goto label03;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MmiCode 2: separate call ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", $r18);

        $r20 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r20.<com.android.internal.telephony.gsm.GsmCallTracker: void separate(com.android.internal.telephony.gsm.GsmConnection)>(r3);

        goto label04;

     label03:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("separate: invalid call index ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", $r12);

        $r14 = <com.android.internal.telephony.Phone$SuppService: com.android.internal.telephony.Phone$SuppService SEPARATE>;

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void notifySuppServiceFailed(com.android.internal.telephony.Phone$SuppService)>($r14);

     label04:
        goto label10;

     label05:
        $r21 := @caughtexception;

        r24 = $r21;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("GSMPhone", "separate failed", r24);

        $r19 = <com.android.internal.telephony.Phone$SuppService: com.android.internal.telephony.Phone$SuppService SEPARATE>;

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void notifySuppServiceFailed(com.android.internal.telephony.Phone$SuppService)>($r19);

        goto label10;

     label06:
        $r4 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Call getRingingCall()>();

        $r5 = virtualinvoke $r4.<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>();

        $r6 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State IDLE>;

        if $r5 == $r6 goto label07;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "MmiCode 2: accept ringing call");

        $r8 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r8.<com.android.internal.telephony.gsm.GsmCallTracker: void acceptCall()>();

        goto label08;

     label07:
        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "MmiCode 2: switchWaitingOrHoldingAndActive");

        $r7 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r7.<com.android.internal.telephony.gsm.GsmCallTracker: void switchWaitingOrHoldingAndActive()>();

     label08:
        goto label10;

     label09:
        $r23 := @caughtexception;

        r25 = $r23;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("GSMPhone", "switch failed", r25);

        $r22 = <com.android.internal.telephony.Phone$SuppService: com.android.internal.telephony.Phone$SuppService SWITCH>;

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void notifySuppServiceFailed(com.android.internal.telephony.Phone$SuppService)>($r22);

     label10:
        return 1;

        catch com.android.internal.telephony.CallStateException from label02 to label04 with label05;
        catch com.android.internal.telephony.CallStateException from label06 to label08 with label09;
    }

    private boolean handleMultipartyIncallSupplementaryService(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 1 goto label1;

        return 0;

     label1:
        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "MmiCode 3: merge calls");

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void conference()>();

        return 1;
    }

    private boolean handleEctIncallSupplementaryService(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1;
        int i0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 == 1 goto label1;

        return 0;

     label1:
        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "MmiCode 4: explicit call transfer");

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void explicitCallTransfer()>();

        return 1;
    }

    private boolean handleCcbsIncallSupplementaryService(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1;
        int $i0;
        com.android.internal.telephony.Phone$SuppService $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 1 goto label1;

        return 0;

     label1:
        staticinvoke <android.telephony.Rlog: int i(java.lang.String,java.lang.String)>("GSMPhone", "MmiCode 5: CCBS not supported!");

        $r2 = <com.android.internal.telephony.Phone$SuppService: com.android.internal.telephony.Phone$SuppService UNKNOWN>;

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void notifySuppServiceFailed(com.android.internal.telephony.Phone$SuppService)>($r2);

        return 1;
    }

    public boolean handleInCallMmiCommands(java.lang.String) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1;
        com.android.internal.telephony.imsphone.ImsPhone r2;
        boolean z0, $z1, $z2, $z3;
        char c0;
        android.telephony.ServiceState $r3;
        int $i1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.imsphone.ImsPhone mImsPhone>;

        if r2 == null goto label01;

        $r3 = virtualinvoke r2.<com.android.internal.telephony.imsphone.ImsPhone: android.telephony.ServiceState getServiceState()>();

        $i1 = virtualinvoke $r3.<android.telephony.ServiceState: int getState()>();

        if $i1 != 0 goto label01;

        $z3 = virtualinvoke r2.<com.android.internal.telephony.imsphone.ImsPhone: boolean handleInCallMmiCommands(java.lang.String)>(r1);

        return $z3;

     label01:
        $z1 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: boolean isInCall()>();

        if $z1 != 0 goto label02;

        return 0;

     label02:
        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z2 == 0 goto label03;

        return 0;

     label03:
        z0 = 0;

        c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        tableswitch(c0)
        {
            case 48: goto label04;
            case 49: goto label05;
            case 50: goto label06;
            case 51: goto label07;
            case 52: goto label08;
            case 53: goto label09;
            default: goto label10;
        };

     label04:
        z0 = specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: boolean handleCallDeflectionIncallSupplementaryService(java.lang.String)>(r1);

        goto label10;

     label05:
        z0 = specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: boolean handleCallWaitingIncallSupplementaryService(java.lang.String)>(r1);

        goto label10;

     label06:
        z0 = specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: boolean handleCallHoldIncallSupplementaryService(java.lang.String)>(r1);

        goto label10;

     label07:
        z0 = specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: boolean handleMultipartyIncallSupplementaryService(java.lang.String)>(r1);

        goto label10;

     label08:
        z0 = specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: boolean handleEctIncallSupplementaryService(java.lang.String)>(r1);

        goto label10;

     label09:
        z0 = specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: boolean handleCcbsIncallSupplementaryService(java.lang.String)>(r1);

        goto label10;

     label10:
        return z0;
    }

    boolean isInCall()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.Call$State r1, r2, r3;
        com.android.internal.telephony.gsm.GsmCall $r4, $r5;
        com.android.internal.telephony.Call $r6;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r4 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCall getForegroundCall()>();

        r1 = virtualinvoke $r4.<com.android.internal.telephony.gsm.GsmCall: com.android.internal.telephony.Call$State getState()>();

        $r5 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCall getBackgroundCall()>();

        r2 = virtualinvoke $r5.<com.android.internal.telephony.gsm.GsmCall: com.android.internal.telephony.Call$State getState()>();

        $r6 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Call getRingingCall()>();

        r3 = virtualinvoke $r6.<com.android.internal.telephony.Call: com.android.internal.telephony.Call$State getState()>();

        $z0 = virtualinvoke r1.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r2.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r3.<com.android.internal.telephony.Call$State: boolean isAlive()>();

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public com.android.internal.telephony.Connection dial(java.lang.String, int) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1;
        int i0;
        com.android.internal.telephony.Connection $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo,int)>(r1, null, i0);

        return $r2;
    }

    public com.android.internal.telephony.Connection dial(java.lang.String, com.android.internal.telephony.UUSInfo, int) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1, $r17, $r19, $r20, $r21;
        com.android.internal.telephony.UUSInfo r2;
        int i0, $i2;
        com.android.internal.telephony.imsphone.ImsPhone r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.android.internal.telephony.CallStateException r4, r5, $r13, $r18;
        android.content.Context $r6, $r9, $r12;
        com.android.internal.telephony.Connection $r7, $r11;
        android.telephony.ServiceState $r8;
        android.content.res.Resources $r10;
        java.lang.StringBuilder $r14, $r15, $r16;
        java.lang.StackTraceElement[] $r22;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.internal.telephony.UUSInfo;

        i0 := @parameter2: int;

        r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.imsphone.ImsPhone mImsPhone>;

        $r6 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.content.Context mContext>;

        $z1 = staticinvoke <com.android.ims.ImsManager: boolean isEnhanced4gLteModeSettingEnabledByPlatform(android.content.Context)>($r6);

        if $z1 == 0 goto label1;

        $r12 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.content.Context mContext>;

        $z5 = staticinvoke <com.android.ims.ImsManager: boolean isEnhanced4gLteModeSettingEnabledByUser(android.content.Context)>($r12);

        if $z5 == 0 goto label1;

        $z6 = 1;

        goto label2;

     label1:
        $z6 = 0;

     label2:
        z0 = $z6;

        if z0 != 0 goto label3;

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("GSMPhone", "IMS is disabled: forced to CS");

     label3:
        if z0 == 0 goto label8;

        if r3 == null goto label8;

        $r8 = virtualinvoke r3.<com.android.internal.telephony.imsphone.ImsPhone: android.telephony.ServiceState getServiceState()>();

        $i2 = virtualinvoke $r8.<android.telephony.ServiceState: int getState()>();

        if $i2 != 0 goto label4;

        $z4 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(java.lang.String)>(r1);

        if $z4 == 0 goto label5;

     label4:
        $z2 = staticinvoke <android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(java.lang.String)>(r1);

        if $z2 == 0 goto label8;

        $r9 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: android.content.res.Resources getResources()>();

        $z3 = virtualinvoke $r10.<android.content.res.Resources: boolean getBoolean(int)>(17956977);

        if $z3 == 0 goto label8;

     label5:
        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "Trying IMS PS call");

        $r11 = virtualinvoke r3.<com.android.internal.telephony.imsphone.ImsPhone: com.android.internal.telephony.Connection dial(java.lang.String,int)>(r1, i0);

     label6:
        return $r11;

     label7:
        $r13 := @caughtexception;

        r4 = $r13;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IMS PS call exception ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", $r17);

        $r19 = "cs_fallback";

        $r20 = virtualinvoke r4.<com.android.internal.telephony.CallStateException: java.lang.String getMessage()>();

        $z7 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z7 != 0 goto label8;

        $r18 = new com.android.internal.telephony.CallStateException;

        $r21 = virtualinvoke r4.<com.android.internal.telephony.CallStateException: java.lang.String getMessage()>();

        specialinvoke $r18.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>($r21);

        r5 = $r18;

        $r22 = virtualinvoke r4.<com.android.internal.telephony.CallStateException: java.lang.StackTraceElement[] getStackTrace()>();

        virtualinvoke r5.<com.android.internal.telephony.CallStateException: void setStackTrace(java.lang.StackTraceElement[])>($r22);

        throw r5;

     label8:
        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "Trying (non-IMS) CS call");

        $r7 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.Connection dialInternal(java.lang.String,com.android.internal.telephony.UUSInfo,int)>(r1, null, 0);

        return $r7;

        catch com.android.internal.telephony.CallStateException from label5 to label6 with label7;
    }

    protected com.android.internal.telephony.Connection dialInternal(java.lang.String, com.android.internal.telephony.UUSInfo, int) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1, r3, r4, $r12, $r17;
        com.android.internal.telephony.UUSInfo r2;
        int i0, $i2;
        com.android.internal.telephony.gsm.GsmMmiCode r5;
        boolean $z0, $z1;
        java.util.concurrent.atomic.AtomicReference $r6;
        java.lang.Object $r7;
        com.android.internal.telephony.uicc.UiccCardApplication $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r13;
        java.util.ArrayList $r14;
        android.os.RegistrantList $r15;
        android.os.AsyncResult $r16;
        com.android.internal.telephony.gsm.GsmCallTracker $r18, $r21;
        com.android.internal.telephony.Connection $r19, $r20;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.internal.telephony.UUSInfo;

        i0 := @parameter2: int;

        r3 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String stripSeparators(java.lang.String)>(r1);

        $z0 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: boolean handleInCallMmiCommands(java.lang.String)>(r3);

        if $z0 == 0 goto label1;

        return null;

     label1:
        r4 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortionAlt(java.lang.String)>(r3);

        $r6 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mUiccApplication>;

        $r7 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r8 = (com.android.internal.telephony.uicc.UiccCardApplication) $r7;

        r5 = staticinvoke <com.android.internal.telephony.gsm.GsmMmiCode: com.android.internal.telephony.gsm.GsmMmiCode newFromDialString(java.lang.String,com.android.internal.telephony.gsm.GSMPhone,com.android.internal.telephony.uicc.UiccCardApplication)>(r4, r0, $r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dialing w/ mmi \'");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'...");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", $r12);

        if r5 != null goto label2;

        $r21 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $r20 = virtualinvoke $r21.<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)>(r3, r2);

        return $r20;

     label2:
        $z1 = virtualinvoke r5.<com.android.internal.telephony.gsm.GsmMmiCode: boolean isTemporaryModeCLIR()>();

        if $z1 == 0 goto label3;

        $r18 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $r17 = r5.<com.android.internal.telephony.gsm.GsmMmiCode: java.lang.String mDialingNumber>;

        $i2 = virtualinvoke r5.<com.android.internal.telephony.gsm.GsmMmiCode: int getCLIRMode()>();

        $r19 = virtualinvoke $r18.<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.Connection dial(java.lang.String,int,com.android.internal.telephony.UUSInfo)>($r17, $i2, r2);

        return $r19;

     label3:
        $r14 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        $r15 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mMmiRegistrants>;

        $r16 = new android.os.AsyncResult;

        specialinvoke $r16.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r5, null);

        virtualinvoke $r15.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r16);

        virtualinvoke r5.<com.android.internal.telephony.gsm.GsmMmiCode: void processCode()>();

        return null;
    }

    public boolean handlePinMmi(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1;
        com.android.internal.telephony.gsm.GsmMmiCode r2;
        java.util.concurrent.atomic.AtomicReference $r3;
        java.lang.Object $r4;
        com.android.internal.telephony.uicc.UiccCardApplication $r5;
        boolean $z0;
        java.util.ArrayList $r6;
        android.os.AsyncResult $r7;
        android.os.RegistrantList $r8;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mUiccApplication>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r5 = (com.android.internal.telephony.uicc.UiccCardApplication) $r4;

        r2 = staticinvoke <com.android.internal.telephony.gsm.GsmMmiCode: com.android.internal.telephony.gsm.GsmMmiCode newFromDialString(java.lang.String,com.android.internal.telephony.gsm.GSMPhone,com.android.internal.telephony.uicc.UiccCardApplication)>(r1, r0, $r5);

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<com.android.internal.telephony.gsm.GsmMmiCode: boolean isPinPukCommand()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        $r8 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mMmiRegistrants>;

        $r7 = new android.os.AsyncResult;

        specialinvoke $r7.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r8.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r7);

        virtualinvoke r2.<com.android.internal.telephony.gsm.GsmMmiCode: void processCode()>();

        return 1;

     label1:
        return 0;
    }

    public void sendUssdResponse(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1;
        com.android.internal.telephony.gsm.GsmMmiCode r2;
        java.util.concurrent.atomic.AtomicReference $r3;
        java.lang.Object $r4;
        com.android.internal.telephony.uicc.UiccCardApplication $r5;
        java.util.ArrayList $r6;
        android.os.AsyncResult $r7;
        android.os.RegistrantList $r8;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mUiccApplication>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r5 = (com.android.internal.telephony.uicc.UiccCardApplication) $r4;

        r2 = staticinvoke <com.android.internal.telephony.gsm.GsmMmiCode: com.android.internal.telephony.gsm.GsmMmiCode newFromUssdUserInput(java.lang.String,com.android.internal.telephony.gsm.GSMPhone,com.android.internal.telephony.uicc.UiccCardApplication)>(r1, r0, $r5);

        $r6 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        $r8 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mMmiRegistrants>;

        $r7 = new android.os.AsyncResult;

        specialinvoke $r7.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r2, null);

        virtualinvoke $r8.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r7);

        virtualinvoke r2.<com.android.internal.telephony.gsm.GsmMmiCode: void sendUssd(java.lang.String)>(r1);

        return;
    }

    public void sendDtmf(char)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        char c0;
        boolean $z0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;
        com.android.internal.telephony.PhoneConstants$State $r2, $r3;
        com.android.internal.telephony.CommandsInterface $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        c0 := @parameter0: char;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean is12Key(char)>(c0);

        if $z0 != 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendDtmf called with invalid character \'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GSMPhone", $r9);

        goto label2;

     label1:
        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $r3 = $r1.<com.android.internal.telephony.gsm.GsmCallTracker: com.android.internal.telephony.PhoneConstants$State mState>;

        $r2 = <com.android.internal.telephony.PhoneConstants$State: com.android.internal.telephony.PhoneConstants$State OFFHOOK>;

        if $r3 != $r2 goto label2;

        $r4 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r4.<com.android.internal.telephony.CommandsInterface: void sendDtmf(char,android.os.Message)>(c0, null);

     label2:
        return;
    }

    public void startDtmf(char)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        char c0;
        boolean $z0;
        com.android.internal.telephony.CommandsInterface $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        c0 := @parameter0: char;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean is12Key(char)>(c0);

        if $z0 != 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startDtmf called with invalid character \'");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GSMPhone", $r6);

        goto label2;

     label1:
        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void startDtmf(char,android.os.Message)>(c0, null);

     label2:
        return;
    }

    public void stopDtmf()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.CommandsInterface $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void stopDtmf(android.os.Message)>(null);

        return;
    }

    public void sendBurstDtmf(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GSMPhone", "[GSMPhone] sendBurstDtmf() is a CDMA method");

        return;
    }

    public void setRadioPower(boolean)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        boolean z0;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmServiceStateTracker: void setRadioPower(boolean)>(z0);

        return;
    }

    private void storeVoiceMailNumber(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1, $r8, $r10;
        android.content.SharedPreferences r2;
        android.content.SharedPreferences$Editor r3;
        android.content.Context $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        int $i0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        $r4 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.content.Context getContext()>();

        r2 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r4);

        r3 = interfaceinvoke r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vm_number_key");

        $i0 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: int getPhoneId()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r8, r1);

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: void apply()>();

        $r10 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getSubscriberId()>();

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void setVmSimImsi(java.lang.String)>($r10);

        return;
    }

    public java.lang.String getVoiceMailNumber()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.uicc.IccRecords r1;
        java.lang.String r2, $r9, $r10, $r11, $r12, $r13, $r17, $r19;
        android.content.SharedPreferences r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String[] r4, r20;
        java.util.concurrent.atomic.AtomicReference $r5;
        java.lang.Object $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.content.Context $r7, $r14;
        android.content.res.Resources $r8;
        java.lang.StringBuilder $r15, $r16, $r18;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r5 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r6 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r6;

        if r1 == null goto label1;

        $r17 = virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getVoiceMailNumber()>();

        goto label2;

     label1:
        $r17 = "";

     label2:
        r2 = $r17;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label3;

        $r14 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.content.Context getContext()>();

        r3 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r14);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vm_number_key");

        $i6 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: int getPhoneId()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        r2 = interfaceinvoke r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r19, null);

     label3:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 == 0 goto label7;

        $r7 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        r20 = virtualinvoke $r8.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236026);

        if r20 == null goto label7;

        $i1 = lengthof r20;

        if $i1 <= 0 goto label7;

        i0 = 0;

     label4:
        $i2 = lengthof r20;

        if i0 >= $i2 goto label7;

        $r9 = r20[i0];

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r9);

        if $z2 != 0 goto label6;

        $r10 = r20[i0];

        r4 = virtualinvoke $r10.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        if r4 == null goto label6;

        $i3 = lengthof r4;

        if $i3 <= 0 goto label6;

        $i5 = lengthof r4;

        if $i5 != 1 goto label5;

        r2 = r4[0];

        goto label6;

     label5:
        $i4 = lengthof r4;

        if $i4 != 2 goto label6;

        $r11 = r4[1];

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r11);

        if $z3 != 0 goto label6;

        $r13 = r4[1];

        $r12 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getGroupIdLevel1()>();

        $z4 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r12);

        if $z4 == 0 goto label6;

        r2 = r4[0];

        goto label7;

     label6:
        i0 = i0 + 1;

        goto label4;

     label7:
        return r2;
    }

    private java.lang.String getVmSimImsi()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.content.SharedPreferences r1;
        android.content.Context $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        int $i0;
        java.lang.String $r6, $r7;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.content.Context getContext()>();

        r1 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vm_sim_imsi_key");

        $i0 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: int getPhoneId()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = interfaceinvoke r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r6, null);

        return $r7;
    }

    private void setVmSimImsi(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1, $r8;
        android.content.SharedPreferences r2;
        android.content.SharedPreferences$Editor r3;
        android.content.Context $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        int $i0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        $r4 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.content.Context getContext()>();

        r2 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r4);

        r3 = interfaceinvoke r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("vm_sim_imsi_key");

        $i0 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: int getPhoneId()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r8, r1);

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }

    public java.lang.String getVoiceMailAlphaTag()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1, $r7, $r8;
        com.android.internal.telephony.uicc.IccRecords r2;
        java.util.concurrent.atomic.AtomicReference $r3;
        java.lang.Object $r4;
        android.content.Context $r5;
        java.lang.CharSequence $r6;
        int $i0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r2 = (com.android.internal.telephony.uicc.IccRecords) $r4;

        if r2 == null goto label1;

        $r8 = virtualinvoke r2.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getVoiceMailAlphaTag()>();

        goto label2;

     label1:
        $r8 = "";

     label2:
        r1 = $r8;

        if r1 == null goto label3;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label4;

     label3:
        $r5 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.CharSequence getText(int)>(17039364);

        $r7 = interfaceinvoke $r6.<java.lang.CharSequence: java.lang.String toString()>();

        return $r7;

     label4:
        return r1;
    }

    public java.lang.String getDeviceId()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.lang.String mImei>;

        return $r1;
    }

    public java.lang.String getDeviceSvn()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.lang.String mImeiSv>;

        return $r1;
    }

    public com.android.internal.telephony.uicc.IsimRecords getIsimRecords()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.uicc.IsimUiccRecords $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.uicc.IsimUiccRecords mIsimUiccRecords>;

        return $r1;
    }

    public java.lang.String getImei()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.lang.String mImei>;

        return $r1;
    }

    public java.lang.String getEsn()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GSMPhone", "[GSMPhone] getEsn() is a CDMA method");

        return "0";
    }

    public java.lang.String getMeid()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GSMPhone", "[GSMPhone] getMeid() is a CDMA method");

        return "0";
    }

    public java.lang.String getSubscriberId()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.uicc.IccRecords r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r3;

        if r1 == null goto label1;

        $r4 = virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getIMSI()>();

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    public java.lang.String getGroupIdLevel1()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.uicc.IccRecords r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r3;

        if r1 == null goto label1;

        $r4 = virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getGid1()>();

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    public java.lang.String getLine1Number()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.uicc.IccRecords r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r3;

        if r1 == null goto label1;

        $r4 = virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getMsisdnNumber()>();

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    public java.lang.String getMsisdn()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.uicc.IccRecords r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r3;

        if r1 == null goto label1;

        $r4 = virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getMsisdnNumber()>();

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    public java.lang.String getLine1AlphaTag()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.uicc.IccRecords r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r3;

        if r1 == null goto label1;

        $r4 = virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getMsisdnAlphaTag()>();

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    public void setLine1Number(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1, r2;
        android.os.Message r3;
        com.android.internal.telephony.uicc.IccRecords r4;
        java.util.concurrent.atomic.AtomicReference $r5;
        java.lang.Object $r6;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        $r5 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r6 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r4 = (com.android.internal.telephony.uicc.IccRecords) $r6;

        if r4 == null goto label1;

        virtualinvoke r4.<com.android.internal.telephony.uicc.IccRecords: void setMsisdnNumber(java.lang.String,java.lang.String,android.os.Message)>(r1, r2, r3);

     label1:
        return;
    }

    public void setVoiceMailNumber(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1, r2, $r8;
        android.os.Message r3, r4;
        com.android.internal.telephony.uicc.IccRecords r5;
        java.util.concurrent.atomic.AtomicReference $r6;
        java.lang.Object $r7;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        r0.<com.android.internal.telephony.gsm.GSMPhone: java.lang.String mVmNumber> = r2;

        r4 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(20, 0, 0, r3);

        $r6 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r7 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r5 = (com.android.internal.telephony.uicc.IccRecords) $r7;

        if r5 == null goto label1;

        $r8 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.lang.String mVmNumber>;

        virtualinvoke r5.<com.android.internal.telephony.uicc.IccRecords: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>(r1, $r8, r4);

     label1:
        return;
    }

    private boolean isValidCommandInterfaceCFReason(int)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        int i0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label1;
            case 5: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    public java.lang.String getSystemProperty(java.lang.String, java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1, r2, $r3;
        boolean $z0;
        long $l0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: boolean getUnitTestMode()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $l0 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: long getSubId()>();

        $r3 = staticinvoke <android.telephony.TelephonyManager: java.lang.String getTelephonyProperty(java.lang.String,long,java.lang.String)>(r1, $l0, r2);

        return $r3;
    }

    private boolean isValidCommandInterfaceCFAction(int)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        int i0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label1;
            case 4: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    public void updateDataConnectionTracker()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r1;
        com.android.internal.telephony.dataconnection.DcTracker $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        $r2 = (com.android.internal.telephony.dataconnection.DcTracker) $r1;

        virtualinvoke $r2.<com.android.internal.telephony.dataconnection.DcTracker: void update()>();

        return;
    }

    protected boolean isCfEnable(int)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        i0 := @parameter0: int;

        if i0 == 1 goto label1;

        if i0 != 3 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public void getCallForwardingOption(int, android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        int i0, $i2;
        android.os.Message r1, r3;
        com.android.internal.telephony.imsphone.ImsPhone r2;
        boolean $z0;
        com.android.internal.telephony.CommandsInterface $r4;
        android.telephony.ServiceState $r5;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.imsphone.ImsPhone mImsPhone>;

        if r2 == null goto label1;

        $r5 = virtualinvoke r2.<com.android.internal.telephony.imsphone.ImsPhone: android.telephony.ServiceState getServiceState()>();

        $i2 = virtualinvoke $r5.<android.telephony.ServiceState: int getState()>();

        if $i2 != 0 goto label1;

        virtualinvoke r2.<com.android.internal.telephony.imsphone.ImsPhone: void getCallForwardingOption(int,android.os.Message)>(i0, r1);

        return;

     label1:
        $z0 = specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: boolean isValidCommandInterfaceCFReason(int)>(i0);

        if $z0 == 0 goto label4;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "requesting call forwarding query.");

        if i0 != 0 goto label2;

        r3 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.Message obtainMessage(int,java.lang.Object)>(13, r1);

        goto label3;

     label2:
        r3 = r1;

     label3:
        $r4 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r4.<com.android.internal.telephony.CommandsInterface: void queryCallForwardStatus(int,int,java.lang.String,android.os.Message)>(i0, 0, null, r3);

     label4:
        return;
    }

    public void setCallForwardingOption(int, int, java.lang.String, int, android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        int i0, i1, i2, $i5;
        java.lang.String r1;
        android.os.Message r2, r4;
        com.android.internal.telephony.imsphone.ImsPhone r3;
        com.android.internal.telephony.gsm.GSMPhone$Cfu r5, $r7;
        boolean $z0, $z1, $z2;
        com.android.internal.telephony.CommandsInterface $r6;
        android.telephony.ServiceState $r8;
        byte $b4;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        r2 := @parameter4: android.os.Message;

        r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.imsphone.ImsPhone mImsPhone>;

        if r3 == null goto label1;

        $r8 = virtualinvoke r3.<com.android.internal.telephony.imsphone.ImsPhone: android.telephony.ServiceState getServiceState()>();

        $i5 = virtualinvoke $r8.<android.telephony.ServiceState: int getState()>();

        if $i5 != 0 goto label1;

        virtualinvoke r3.<com.android.internal.telephony.imsphone.ImsPhone: void setCallForwardingOption(int,int,java.lang.String,int,android.os.Message)>(i0, i1, r1, i2, r2);

        return;

     label1:
        $z0 = specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: boolean isValidCommandInterfaceCFAction(int)>(i0);

        if $z0 == 0 goto label6;

        $z1 = specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: boolean isValidCommandInterfaceCFReason(int)>(i1);

        if $z1 == 0 goto label6;

        if i1 != 0 goto label4;

        $r7 = new com.android.internal.telephony.gsm.GSMPhone$Cfu;

        specialinvoke $r7.<com.android.internal.telephony.gsm.GSMPhone$Cfu: void <init>(java.lang.String,android.os.Message)>(r1, r2);

        r5 = $r7;

        $z2 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: boolean isCfEnable(int)>(i0);

        if $z2 == 0 goto label2;

        $b4 = 1;

        goto label3;

     label2:
        $b4 = 0;

     label3:
        r4 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(12, $b4, 0, r5);

        goto label5;

     label4:
        r4 = r2;

     label5:
        $r6 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r6.<com.android.internal.telephony.CommandsInterface: void setCallForward(int,int,int,java.lang.String,int,android.os.Message)>(i0, i1, 1, r1, i2, r4);

     label6:
        return;
    }

    public void getOutgoingCallerIdDisplay(android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.Message r1;
        com.android.internal.telephony.CommandsInterface $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void getCLIR(android.os.Message)>(r1);

        return;
    }

    public void setOutgoingCallerIdDisplay(int, android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        int i0;
        android.os.Message r1, $r3;
        com.android.internal.telephony.CommandsInterface $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(18, i0, 0, r1);

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void setCLIR(int,android.os.Message)>(i0, $r3);

        return;
    }

    public void getCallWaiting(android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.Message r1;
        com.android.internal.telephony.imsphone.ImsPhone r2;
        com.android.internal.telephony.CommandsInterface $r3;
        android.telephony.ServiceState $r4;
        int $i0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.Message;

        r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.imsphone.ImsPhone mImsPhone>;

        if r2 == null goto label1;

        $r4 = virtualinvoke r2.<com.android.internal.telephony.imsphone.ImsPhone: android.telephony.ServiceState getServiceState()>();

        $i0 = virtualinvoke $r4.<android.telephony.ServiceState: int getState()>();

        if $i0 != 0 goto label1;

        virtualinvoke r2.<com.android.internal.telephony.imsphone.ImsPhone: void getCallWaiting(android.os.Message)>(r1);

        return;

     label1:
        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void queryCallWaiting(int,android.os.Message)>(0, r1);

        return;
    }

    public void setCallWaiting(boolean, android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        boolean z0;
        android.os.Message r1;
        com.android.internal.telephony.imsphone.ImsPhone r2;
        com.android.internal.telephony.CommandsInterface $r3;
        android.telephony.ServiceState $r4;
        int $i0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.imsphone.ImsPhone mImsPhone>;

        if r2 == null goto label1;

        $r4 = virtualinvoke r2.<com.android.internal.telephony.imsphone.ImsPhone: android.telephony.ServiceState getServiceState()>();

        $i0 = virtualinvoke $r4.<android.telephony.ServiceState: int getState()>();

        if $i0 != 0 goto label1;

        virtualinvoke r2.<com.android.internal.telephony.imsphone.ImsPhone: void setCallWaiting(boolean,android.os.Message)>(z0, r1);

        return;

     label1:
        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void setCallWaiting(boolean,int,android.os.Message)>(z0, 1, r1);

        return;
    }

    public void getAvailableNetworks(android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.Message r1;
        com.android.internal.telephony.CommandsInterface $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void getAvailableNetworks(android.os.Message)>(r1);

        return;
    }

    public void getNeighboringCids(android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.Message r1;
        com.android.internal.telephony.CommandsInterface $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void getNeighboringCids(android.os.Message)>(r1);

        return;
    }

    public void setOnPostDialCharacter(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.Registrant $r3;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = new android.os.Registrant;

        specialinvoke $r3.<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.Registrant mPostDialHandler> = $r3;

        return;
    }

    public void setMute(boolean)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        boolean z0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmCallTracker: void setMute(boolean)>(z0);

        return;
    }

    public boolean getMute()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCallTracker $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmCallTracker: boolean getMute()>();

        return $z0;
    }

    public void getDataCallList(android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.Message r1;
        com.android.internal.telephony.CommandsInterface $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void getDataCallList(android.os.Message)>(r1);

        return;
    }

    public void updateServiceLocation()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmServiceStateTracker: void enableSingleLocationUpdate()>();

        return;
    }

    public void enableLocationUpdates()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmServiceStateTracker: void enableLocationUpdates()>();

        return;
    }

    public void disableLocationUpdates()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        virtualinvoke $r1.<com.android.internal.telephony.gsm.GsmServiceStateTracker: void disableLocationUpdates()>();

        return;
    }

    public boolean getDataRoamingEnabled()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.dataconnection.DcTrackerBase: boolean getDataOnRoamingEnabled()>();

        return $z0;
    }

    public void setDataRoamingEnabled(boolean)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        boolean z0;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        virtualinvoke $r1.<com.android.internal.telephony.dataconnection.DcTrackerBase: void setDataOnRoamingEnabled(boolean)>(z0);

        return;
    }

    public boolean getDataEnabled()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.dataconnection.DcTrackerBase: boolean getDataEnabled()>();

        return $z0;
    }

    public void setDataEnabled(boolean)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        boolean z0;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        virtualinvoke $r1.<com.android.internal.telephony.dataconnection.DcTrackerBase: void setDataEnabled(boolean)>(z0);

        return;
    }

    void onMMIDone(com.android.internal.telephony.gsm.GsmMmiCode)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmMmiCode r1;
        java.util.ArrayList $r2;
        boolean $z0, $z1;
        android.os.AsyncResult $r3;
        android.os.RegistrantList $r4;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: com.android.internal.telephony.gsm.GsmMmiCode;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<com.android.internal.telephony.gsm.GsmMmiCode: boolean isUssdRequest()>();

        if $z1 == 0 goto label2;

     label1:
        $r4 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mMmiCompleteRegistrants>;

        $r3 = new android.os.AsyncResult;

        specialinvoke $r3.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r1, null);

        virtualinvoke $r4.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r3);

     label2:
        return;
    }

    private void onNetworkInitiatedUssd(com.android.internal.telephony.gsm.GsmMmiCode)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmMmiCode r1;
        android.os.AsyncResult $r2;
        android.os.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: com.android.internal.telephony.gsm.GsmMmiCode;

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mMmiCompleteRegistrants>;

        $r2 = new android.os.AsyncResult;

        specialinvoke $r2.<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>(null, r1, null);

        virtualinvoke $r3.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>($r2);

        return;
    }

    private void onIncomingUSSD(int, java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        int i0, i1, i2;
        java.lang.String r1;
        boolean z0, z1, $z2, $z3, $z4;
        com.android.internal.telephony.gsm.GsmMmiCode r2, $r9, r12;
        java.util.ArrayList $r3, $r7, $r11;
        java.util.concurrent.atomic.AtomicReference $r4;
        java.lang.Object $r5, $r8, $r10;
        com.android.internal.telephony.uicc.UiccCardApplication $r6;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        if i0 != 1 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        z1 = $z3;

        if i0 == 0 goto label03;

        if i0 == 1 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        z0 = $z4;

        r2 = null;

        i1 = 0;

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs>;

        i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

     label05:
        if i1 >= i2 goto label07;

        $r7 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r9 = (com.android.internal.telephony.gsm.GsmMmiCode) $r8;

        $z2 = virtualinvoke $r9.<com.android.internal.telephony.gsm.GsmMmiCode: boolean isPendingUSSD()>();

        if $z2 == 0 goto label06;

        $r11 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs>;

        $r10 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.internal.telephony.gsm.GsmMmiCode) $r10;

        goto label07;

     label06:
        i1 = i1 + 1;

        goto label05;

     label07:
        if r2 == null goto label09;

        if z0 == 0 goto label08;

        virtualinvoke r2.<com.android.internal.telephony.gsm.GsmMmiCode: void onUssdFinishedError()>();

        goto label10;

     label08:
        virtualinvoke r2.<com.android.internal.telephony.gsm.GsmMmiCode: void onUssdFinished(java.lang.String,boolean)>(r1, z1);

        goto label10;

     label09:
        if z0 != 0 goto label10;

        if r1 == null goto label10;

        $r4 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mUiccApplication>;

        $r5 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r6 = (com.android.internal.telephony.uicc.UiccCardApplication) $r5;

        r12 = staticinvoke <com.android.internal.telephony.gsm.GsmMmiCode: com.android.internal.telephony.gsm.GsmMmiCode newNetworkInitiatedUssd(java.lang.String,boolean,com.android.internal.telephony.gsm.GSMPhone,com.android.internal.telephony.uicc.UiccCardApplication)>(r1, z1, r0, $r6);

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void onNetworkInitiatedUssd(com.android.internal.telephony.gsm.GsmMmiCode)>(r12);

     label10:
        return;
    }

    protected void syncClirSetting()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.content.SharedPreferences r1;
        int i0, $i1;
        android.content.Context $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        com.android.internal.telephony.CommandsInterface $r7;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r2 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.content.Context getContext()>();

        r1 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clir_key");

        $i1 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: int getPhoneId()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = interfaceinvoke r1.<android.content.SharedPreferences: int getInt(java.lang.String,int)>($r6, -1);

        if i0 < 0 goto label1;

        $r7 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        interfaceinvoke $r7.<com.android.internal.telephony.CommandsInterface: void setCLIR(int,android.os.Message)>(i0, null);

     label1:
        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.Message r1, r3, $r17, $r45, $r48, $r50, $r84, $r86, $r97, r110, r114;
        android.os.AsyncResult r2, r101, r102, r103, r105, r107, r108, r109, r111, r112, r113;
        java.lang.String r4, r5, $r27, $r53, $r56, $r60, $r68, $r69, $r76, $r82, $r99;
        java.lang.String[] r6, $r72;
        com.android.internal.telephony.uicc.IccRecords r8;
        com.android.internal.telephony.gsm.GSMPhone$Cfu r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0, $i1, $i4, $i5, $i6, $i7, $i8, $i10, i13;
        java.lang.Object $r10, $r11, $r14, $r16, $r19, $r22, $r24, $r26, $r28, $r31, $r32, $r34, $r36, $r38, $r40, $r42, $r47, $r51, $r52, $r55, $r59, $r61, $r64, $r67, $r70, $r73, $r74, $r79, $r83, $r90, $r91;
        java.lang.Integer $r12;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r13;
        android.telephony.ServiceState $r15, $r65;
        java.lang.Throwable $r18, $r21, $r25, $r30, $r33, $r35, $r44, $r46, $r54, $r58, $r78;
        java.lang.Class $r20;
        com.android.internal.telephony.CallForwardInfo[] $r37, $r43;
        java.util.concurrent.atomic.AtomicReference $r41;
        java.util.ArrayList $r57, $r63, $r66;
        com.android.internal.telephony.gsm.GsmMmiCode $r62, $r71;
        java.lang.StringBuilder $r75, $r77, $r80, $r92, $r93, $r94, $r95, $r96, $r100;
        android.os.RegistrantList $r81, $r88;
        com.android.internal.telephony.CommandsInterface $r85, $r87, $r89;
        java.lang.NumberFormatException $r98;
        com.android.internal.telephony.imsphone.ImsPhone r104;
        com.android.internal.telephony.gsm.SuppServiceNotification r106;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.Message;

        $z0 = r0.<com.android.internal.telephony.gsm.GSMPhone: boolean mIsTheCurrentActivePhone>;

        if $z0 != 0 goto label01;

        $r96 = new java.lang.StringBuilder;

        specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();

        $r95 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received message ");

        $r94 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r93 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $i10 = r1.<android.os.Message: int what>;

        $r92 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r100 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] while being destroyed. Ignoring.");

        $r99 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GSMPhone", $r99);

        return;

     label01:
        $i0 = r1.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label21;
            case 3: goto label05;
            case 5: goto label03;
            case 6: goto label07;
            case 7: goto label13;
            case 8: goto label17;
            case 9: goto label09;
            case 10: goto label11;
            case 12: goto label22;
            case 13: goto label28;
            case 18: goto label33;
            case 19: goto label04;
            case 20: goto label26;
            case 28: goto label30;
            case 29: goto label32;
            case 500: goto label35;
            case 501: goto label36;
            default: goto label37;
        };

     label02:
        $r89 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $r86 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.Message obtainMessage(int)>(6);

        interfaceinvoke $r89.<com.android.internal.telephony.CommandsInterface: void getBasebandVersion(android.os.Message)>($r86);

        $r87 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $r84 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.Message obtainMessage(int)>(9);

        interfaceinvoke $r87.<com.android.internal.telephony.CommandsInterface: void getIMEI(android.os.Message)>($r84);

        $r85 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.CommandsInterface mCi>;

        $r97 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.Message obtainMessage(int)>(10);

        interfaceinvoke $r85.<com.android.internal.telephony.CommandsInterface: void getIMEISV(android.os.Message)>($r97);

        goto label38;

     label03:
        goto label38;

     label04:
        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void syncClirSetting()>();

        goto label38;

     label05:
        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: boolean updateCurrentCarrierInProvider()>();

        r4 = specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getVmSimImsi()>();

        r5 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getSubscriberId()>();

        if r4 == null goto label06;

        if r5 == null goto label06;

        $z5 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z5 != 0 goto label06;

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void storeVoiceMailNumber(java.lang.String)>(null);

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void setVmSimImsi(java.lang.String)>(null);

     label06:
        $r81 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mSimRecordsLoadedRegistrants>;

        virtualinvoke $r81.<android.os.RegistrantList: void notifyRegistrants()>();

        goto label38;

     label07:
        $r79 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (android.os.AsyncResult) $r79;

        $r78 = r2.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r78 == null goto label08;

        goto label38;

     label08:
        $r80 = new java.lang.StringBuilder;

        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Baseband version: ");

        $r74 = r2.<android.os.AsyncResult: java.lang.Object result>;

        $r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r74);

        $r76 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", $r76);

        $r83 = r2.<android.os.AsyncResult: java.lang.Object result>;

        $r82 = (java.lang.String) $r83;

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void setSystemProperty(java.lang.String,java.lang.String)>("gsm.version.baseband", $r82);

        goto label38;

     label09:
        $r61 = r1.<android.os.Message: java.lang.Object obj>;

        r101 = (android.os.AsyncResult) $r61;

        $r54 = r101.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r54 == null goto label10;

        goto label38;

     label10:
        $r55 = r101.<android.os.AsyncResult: java.lang.Object result>;

        $r56 = (java.lang.String) $r55;

        r0.<com.android.internal.telephony.gsm.GSMPhone: java.lang.String mImei> = $r56;

        goto label38;

     label11:
        $r52 = r1.<android.os.Message: java.lang.Object obj>;

        r102 = (android.os.AsyncResult) $r52;

        $r58 = r102.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r58 == null goto label12;

        goto label38;

     label12:
        $r59 = r102.<android.os.AsyncResult: java.lang.Object result>;

        $r60 = (java.lang.String) $r59;

        r0.<com.android.internal.telephony.gsm.GSMPhone: java.lang.String mImeiSv> = $r60;

        goto label38;

     label13:
        $r70 = r1.<android.os.Message: java.lang.Object obj>;

        r103 = (android.os.AsyncResult) $r70;

        $r73 = r103.<android.os.AsyncResult: java.lang.Object result>;

        $r72 = (java.lang.String[]) $r73;

        r6 = (java.lang.String[]) $r72;

        $i7 = lengthof r6;

        if $i7 <= 1 goto label38;

     label14:
        $r68 = r6[0];

        $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r68);

        $r69 = r6[1];

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void onIncomingUSSD(int,java.lang.String)>($i8, $r69);

     label15:
        goto label38;

     label16:
        $r98 := @caughtexception;

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("GSMPhone", "error parsing USSD");

        goto label38;

     label17:
        $r57 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs>;

        $i6 = virtualinvoke $r57.<java.util.ArrayList: int size()>();

        i13 = $i6 - 1;

     label18:
        if i13 < 0 goto label20;

        $r66 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs>;

        $r67 = virtualinvoke $r66.<java.util.ArrayList: java.lang.Object get(int)>(i13);

        $r62 = (com.android.internal.telephony.gsm.GsmMmiCode) $r67;

        $z4 = virtualinvoke $r62.<com.android.internal.telephony.gsm.GsmMmiCode: boolean isPendingUSSD()>();

        if $z4 == 0 goto label19;

        $r63 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs>;

        $r64 = virtualinvoke $r63.<java.util.ArrayList: java.lang.Object get(int)>(i13);

        $r71 = (com.android.internal.telephony.gsm.GsmMmiCode) $r64;

        virtualinvoke $r71.<com.android.internal.telephony.gsm.GsmMmiCode: void onUssdFinishedError()>();

     label19:
        i13 = i13 + -1;

        goto label18;

     label20:
        r104 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.imsphone.ImsPhone mImsPhone>;

        if r104 == null goto label38;

        $r65 = virtualinvoke r104.<com.android.internal.telephony.imsphone.ImsPhone: android.telephony.ServiceState getServiceState()>();

        virtualinvoke $r65.<android.telephony.ServiceState: void setStateOff()>();

        goto label38;

     label21:
        $r90 = r1.<android.os.Message: java.lang.Object obj>;

        r105 = (android.os.AsyncResult) $r90;

        $r91 = r105.<android.os.AsyncResult: java.lang.Object result>;

        r106 = (com.android.internal.telephony.gsm.SuppServiceNotification) $r91;

        $r88 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mSsnRegistrants>;

        virtualinvoke $r88.<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>(r105);

        goto label38;

     label22:
        $r42 = r1.<android.os.Message: java.lang.Object obj>;

        r107 = (android.os.AsyncResult) $r42;

        $r41 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r40 = virtualinvoke $r41.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r8 = (com.android.internal.telephony.uicc.IccRecords) $r40;

        $r47 = r107.<android.os.AsyncResult: java.lang.Object userObj>;

        r9 = (com.android.internal.telephony.gsm.GSMPhone$Cfu) $r47;

        $r46 = r107.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r46 != null goto label25;

        if r8 == null goto label25;

        $i5 = r1.<android.os.Message: int arg1>;

        if $i5 != 1 goto label23;

        $z3 = 1;

        goto label24;

     label23:
        $z3 = 0;

     label24:
        $r53 = r9.<com.android.internal.telephony.gsm.GSMPhone$Cfu: java.lang.String mSetCfNumber>;

        virtualinvoke r8.<com.android.internal.telephony.uicc.IccRecords: void setVoiceCallForwardingFlag(int,boolean,java.lang.String)>(1, $z3, $r53);

     label25:
        $r45 = r9.<com.android.internal.telephony.gsm.GSMPhone$Cfu: android.os.Message mOnComplete>;

        if $r45 == null goto label38;

        $r50 = r9.<com.android.internal.telephony.gsm.GSMPhone$Cfu: android.os.Message mOnComplete>;

        $r51 = r107.<android.os.AsyncResult: java.lang.Object result>;

        $r44 = r107.<android.os.AsyncResult: java.lang.Throwable exception>;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r50, $r51, $r44);

        $r48 = r9.<com.android.internal.telephony.gsm.GSMPhone$Cfu: android.os.Message mOnComplete>;

        virtualinvoke $r48.<android.os.Message: void sendToTarget()>();

        goto label38;

     label26:
        $r19 = r1.<android.os.Message: java.lang.Object obj>;

        r108 = (android.os.AsyncResult) $r19;

        $r20 = class "com/android/internal/telephony/uicc/IccVmNotSupportedException";

        $r18 = r108.<android.os.AsyncResult: java.lang.Throwable exception>;

        $z2 = virtualinvoke $r20.<java.lang.Class: boolean isInstance(java.lang.Object)>($r18);

        if $z2 == 0 goto label27;

        $r27 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.lang.String mVmNumber>;

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void storeVoiceMailNumber(java.lang.String)>($r27);

        r108.<android.os.AsyncResult: java.lang.Throwable exception> = null;

     label27:
        $r22 = r108.<android.os.AsyncResult: java.lang.Object userObj>;

        r3 = (android.os.Message) $r22;

        if r3 == null goto label38;

        $r24 = r108.<android.os.AsyncResult: java.lang.Object result>;

        $r21 = r108.<android.os.AsyncResult: java.lang.Throwable exception>;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r3, $r24, $r21);

        virtualinvoke r3.<android.os.Message: void sendToTarget()>();

        goto label38;

     label28:
        $r34 = r1.<android.os.Message: java.lang.Object obj>;

        r109 = (android.os.AsyncResult) $r34;

        $r35 = r109.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r35 != null goto label29;

        $r36 = r109.<android.os.AsyncResult: java.lang.Object result>;

        $r37 = (com.android.internal.telephony.CallForwardInfo[]) $r36;

        $r43 = (com.android.internal.telephony.CallForwardInfo[]) $r37;

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void handleCfuQueryResult(com.android.internal.telephony.CallForwardInfo[])>($r43);

     label29:
        $r32 = r109.<android.os.AsyncResult: java.lang.Object userObj>;

        r110 = (android.os.Message) $r32;

        if r110 == null goto label38;

        $r38 = r109.<android.os.AsyncResult: java.lang.Object result>;

        $r33 = r109.<android.os.AsyncResult: java.lang.Throwable exception>;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r110, $r38, $r33);

        virtualinvoke r110.<android.os.Message: void sendToTarget()>();

        goto label38;

     label30:
        $r14 = r1.<android.os.Message: java.lang.Object obj>;

        r111 = (android.os.AsyncResult) $r14;

        $r13 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        $r15 = $r13.<com.android.internal.telephony.gsm.GsmServiceStateTracker: android.telephony.ServiceState mSS>;

        $z1 = virtualinvoke $r15.<android.telephony.ServiceState: boolean getIsManualSelection()>();

        if $z1 == 0 goto label31;

        $r16 = r111.<android.os.AsyncResult: java.lang.Object result>;

        $r17 = (android.os.Message) $r16;

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void setNetworkSelectionModeAutomatic(android.os.Message)>($r17);

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "SET_NETWORK_SELECTION_AUTOMATIC: set to automatic");

        goto label38;

     label31:
        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", "SET_NETWORK_SELECTION_AUTOMATIC: already automatic, ignore");

        goto label38;

     label32:
        $r10 = r1.<android.os.Message: java.lang.Object obj>;

        r112 = (android.os.AsyncResult) $r10;

        $r11 = r112.<android.os.AsyncResult: java.lang.Object result>;

        $r12 = (java.lang.Integer) $r11;

        $i1 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void processIccRecordEvents(int)>($i1);

        goto label38;

     label33:
        $r28 = r1.<android.os.Message: java.lang.Object obj>;

        r113 = (android.os.AsyncResult) $r28;

        $r25 = r113.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r25 != null goto label34;

        $i4 = r1.<android.os.Message: int arg1>;

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void saveClirSetting(int)>($i4);

     label34:
        $r26 = r113.<android.os.AsyncResult: java.lang.Object userObj>;

        r114 = (android.os.Message) $r26;

        if r114 == null goto label38;

        $r31 = r113.<android.os.AsyncResult: java.lang.Object result>;

        $r30 = r113.<android.os.AsyncResult: java.lang.Throwable exception>;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>(r114, $r31, $r30);

        virtualinvoke r114.<android.os.Message: void sendToTarget()>();

        goto label38;

     label35:
        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void log(java.lang.String)>("EVENT_SUBSCRIPTION_ACTIVATED");

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void onSubscriptionActivated()>();

        goto label38;

     label36:
        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void log(java.lang.String)>("EVENT_SUBSCRIPTION_DEACTIVATED");

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void onSubscriptionDeactivated()>();

        goto label38;

     label37:
        specialinvoke r0.<com.android.internal.telephony.PhoneBase: void handleMessage(android.os.Message)>(r1);

     label38:
        return;

        catch java.lang.NumberFormatException from label14 to label15 with label16;
    }

    protected com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        int $i0;
        com.android.internal.telephony.uicc.UiccController $r1;
        com.android.internal.telephony.uicc.UiccCardApplication $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $i0 = r0.<com.android.internal.telephony.gsm.GSMPhone: int mPhoneId>;

        $r2 = virtualinvoke $r1.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication(int,int)>($i0, 1);

        return $r2;
    }

    protected void onUpdateIccAvailability()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.uicc.UiccCardApplication r1, r3, r21;
        com.android.internal.telephony.uicc.IsimUiccRecords r2;
        com.android.internal.telephony.uicc.UiccController $r4, $r5;
        int $i0;
        java.util.concurrent.atomic.AtomicReference $r6, $r8, $r9, $r11, $r16, $r17, $r18;
        java.lang.Object $r7, $r14, $r15;
        com.android.internal.telephony.uicc.IccRecords $r10, $r13, $r19;
        com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager $r12, $r20;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r4 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        if $r4 != null goto label1;

        return;

     label1:
        $r5 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        $i0 = r0.<com.android.internal.telephony.gsm.GSMPhone: int mPhoneId>;

        r1 = virtualinvoke $r5.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication(int,int)>($i0, 3);

        r2 = null;

        if r1 == null goto label2;

        $r19 = virtualinvoke r1.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccRecords getIccRecords()>();

        r2 = (com.android.internal.telephony.uicc.IsimUiccRecords) $r19;

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void log(java.lang.String)>("New ISIM application found");

     label2:
        r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.uicc.IsimUiccRecords mIsimUiccRecords> = r2;

        r21 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication()>();

        $r6 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mUiccApplication>;

        $r7 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r3 = (com.android.internal.telephony.uicc.UiccCardApplication) $r7;

        if r3 == r21 goto label5;

        if r3 == null goto label4;

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void log(java.lang.String)>("Removing stale icc objects.");

        $r16 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r15 = virtualinvoke $r16.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        if $r15 == null goto label3;

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void unregisterForSimRecordEvents()>();

        $r20 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager mSimPhoneBookIntManager>;

        virtualinvoke $r20.<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: void updateIccRecords(com.android.internal.telephony.uicc.IccRecords)>(null);

     label3:
        $r18 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        virtualinvoke $r18.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

        $r17 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mUiccApplication>;

        virtualinvoke $r17.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(null);

     label4:
        if r21 == null goto label5;

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void log(java.lang.String)>("New Uicc application found");

        $r8 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mUiccApplication>;

        virtualinvoke $r8.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(r21);

        $r9 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r10 = virtualinvoke r21.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccRecords getIccRecords()>();

        virtualinvoke $r9.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>($r10);

        specialinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void registerForSimRecordEvents()>();

        $r12 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager mSimPhoneBookIntManager>;

        $r11 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r14 = virtualinvoke $r11.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        $r13 = (com.android.internal.telephony.uicc.IccRecords) $r14;

        virtualinvoke $r12.<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: void updateIccRecords(com.android.internal.telephony.uicc.IccRecords)>($r13);

     label5:
        return;
    }

    private void processIccRecordEvents(int)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        int i0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label1;
            default: goto label3;
        };

     label1:
        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void notifyCallForwardingIndicator()>();

        goto label3;

     label2:
        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void notifyMessageWaitingIndicator()>();

     label3:
        return;
    }

    public boolean updateCurrentCarrierInProvider()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        long l0, $l1, $l3;
        java.lang.String r1, $r11;
        android.net.Uri r2, $r12;
        android.content.ContentValues r3, $r14;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        boolean $z0;
        byte $b2;
        android.content.Context $r13;
        android.content.ContentResolver $r16;
        android.database.SQLException $r17, r18;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        l0 = staticinvoke <android.telephony.SubscriptionManager: long getDefaultDataSubId()>();

        r1 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: java.lang.String getOperatorNumeric()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateCurrentCarrierInProvider: mSubId = ");

        $l1 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: long getSubId()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" currentDds = ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" operatorNumeric = ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: void log(java.lang.String)>($r11);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label4;

        $l3 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: long getSubId()>();

        $b2 = $l3 cmp l0;

        if $b2 != 0 goto label4;

     label1:
        $r12 = <android.provider.Telephony$Carriers: android.net.Uri CONTENT_URI>;

        r2 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r12, "current");

        $r14 = new android.content.ContentValues;

        specialinvoke $r14.<android.content.ContentValues: void <init>()>();

        r3 = $r14;

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("numeric", r1);

        $r13 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.content.Context mContext>;

        $r16 = virtualinvoke $r13.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r16.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>(r2, r3);

     label2:
        return 1;

     label3:
        $r17 := @caughtexception;

        r18 = $r17;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("GSMPhone", "Can\'t store current operator", r18);

     label4:
        return 0;

        catch android.database.SQLException from label1 to label2 with label3;
    }

    public void saveClirSetting(int)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        int i0, $i1;
        android.content.SharedPreferences r1;
        android.content.SharedPreferences$Editor r2;
        android.content.Context $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        i0 := @parameter0: int;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: android.content.Context getContext()>();

        r1 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r3);

        r2 = interfaceinvoke r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clir_key");

        $i1 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: int getPhoneId()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>($r7, i0);

        $z0 = interfaceinvoke r2.<android.content.SharedPreferences$Editor: boolean commit()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GSMPhone", "failed to commit CLIR preference");

     label1:
        return;
    }

    private void handleCfuQueryResult(com.android.internal.telephony.CallForwardInfo[])
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.CallForwardInfo[] r1;
        com.android.internal.telephony.uicc.IccRecords r2;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.util.concurrent.atomic.AtomicReference $r3;
        java.lang.Object $r4;
        com.android.internal.telephony.CallForwardInfo $r5, $r6, $r7;
        java.lang.String $r8;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: com.android.internal.telephony.CallForwardInfo[];

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r2 = (com.android.internal.telephony.uicc.IccRecords) $r4;

        if r2 == null goto label7;

        if r1 == null goto label1;

        $i2 = lengthof r1;

        if $i2 != 0 goto label2;

     label1:
        virtualinvoke r2.<com.android.internal.telephony.uicc.IccRecords: void setVoiceCallForwardingFlag(int,boolean,java.lang.String)>(1, 0, null);

        goto label7;

     label2:
        i0 = 0;

        i1 = lengthof r1;

     label3:
        if i0 >= i1 goto label7;

        $r5 = r1[i0];

        $i3 = $r5.<com.android.internal.telephony.CallForwardInfo: int serviceClass>;

        $i4 = $i3 & 1;

        if $i4 == 0 goto label6;

        $r6 = r1[i0];

        $i5 = $r6.<com.android.internal.telephony.CallForwardInfo: int status>;

        if $i5 != 1 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        $r7 = r1[i0];

        $r8 = $r7.<com.android.internal.telephony.CallForwardInfo: java.lang.String number>;

        virtualinvoke r2.<com.android.internal.telephony.uicc.IccRecords: void setVoiceCallForwardingFlag(int,boolean,java.lang.String)>(1, $z0, $r8);

        goto label7;

     label6:
        i0 = i0 + 1;

        goto label3;

     label7:
        return;
    }

    public com.android.internal.telephony.PhoneSubInfo getPhoneSubInfo()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.PhoneSubInfo $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.PhoneSubInfo mSubInfo>;

        return $r1;
    }

    public com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager mSimPhoneBookIntManager>;

        return $r1;
    }

    public void activateCellBroadcastSms(int, android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        int i0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GSMPhone", "[GSMPhone] activateCellBroadcastSms() is obsolete; use SmsManager");

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void getCellBroadcastSmsConfig(android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.Message r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.Message;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GSMPhone", "[GSMPhone] getCellBroadcastSmsConfig() is obsolete; use SmsManager");

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void setCellBroadcastSmsConfig(int[], android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        int[] r1;
        android.os.Message r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: int[];

        r2 := @parameter1: android.os.Message;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("GSMPhone", "[GSMPhone] setCellBroadcastSmsConfig() is obsolete; use SmsManager");

        virtualinvoke r2.<android.os.Message: void sendToTarget()>();

        return;
    }

    public boolean isCspPlmnEnabled()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.uicc.IccRecords r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r3;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: boolean isCspPlmnEnabled()>();

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void registerForSimRecordEvents()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.uicc.IccRecords r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r3;

        if r1 != null goto label1;

        return;

     label1:
        virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: void registerForNetworkSelectionModeAutomatic(android.os.Handler,int,java.lang.Object)>(r0, 28, null);

        virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: void registerForRecordsEvents(android.os.Handler,int,java.lang.Object)>(r0, 29, null);

        virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: void registerForRecordsLoaded(android.os.Handler,int,java.lang.Object)>(r0, 3, null);

        return;
    }

    private void unregisterForSimRecordEvents()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.uicc.IccRecords r1;
        java.util.concurrent.atomic.AtomicReference $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r1 = (com.android.internal.telephony.uicc.IccRecords) $r3;

        if r1 != null goto label1;

        return;

     label1:
        virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: void unregisterForNetworkSelectionModeAutomatic(android.os.Handler)>(r0);

        virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: void unregisterForRecordsEvents(android.os.Handler)>(r0);

        virtualinvoke r1.<com.android.internal.telephony.uicc.IccRecords: void unregisterForRecordsLoaded(android.os.Handler)>(r0);

        return;
    }

    public void exitEmergencyCallbackMode()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.imsphone.ImsPhone $r1, $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.imsphone.ImsPhone mImsPhone>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.imsphone.ImsPhone mImsPhone>;

        virtualinvoke $r2.<com.android.internal.telephony.imsphone.ImsPhone: void exitEmergencyCallbackMode()>();

     label1:
        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.lang.StringBuilder $r4, $r5, $r7, $r9, $r10, $r12, $r14, $r15, $r16, $r18, $r21, $r23, $r24, $r25, $r26, $r28, $r31, $r32;
        com.android.internal.telephony.gsm.GsmCallTracker $r6;
        java.lang.String $r8, $r13, $r19, $r22, $r29, $r30, $r33;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r11;
        java.util.ArrayList $r17;
        com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager $r20;
        com.android.internal.telephony.PhoneSubInfo $r27;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("GSMPhone extends:");

        specialinvoke r0.<com.android.internal.telephony.PhoneBase: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCT=");

        $r6 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCallTracker mCT>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSST=");

        $r11 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPendingMMIs=");

        $r17 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.ArrayList mPendingMMIs>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r19);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSimPhoneBookIntManager=");

        $r20 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager mSimPhoneBookIntManager>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r22);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSubInfo=");

        $r27 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.PhoneSubInfo mSubInfo>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r29);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mVmNumber=");

        $r30 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.lang.String mVmNumber>;

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r33);

        return;
    }

    public boolean setOperatorBrandOverride(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1, $r10;
        com.android.internal.telephony.uicc.UiccCard r2;
        boolean z0;
        com.android.internal.telephony.uicc.IccRecords r3;
        com.android.internal.telephony.uicc.UiccController $r4, $r5;
        java.util.concurrent.atomic.AtomicReference $r6;
        java.lang.Object $r7;
        com.android.internal.telephony.gsm.GsmServiceStateTracker $r8, $r9;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        if $r4 != null goto label1;

        return 0;

     label1:
        $r5 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.uicc.UiccController mUiccController>;

        r2 = virtualinvoke $r5.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCard getUiccCard()>();

        if r2 != null goto label2;

        return 0;

     label2:
        z0 = virtualinvoke r2.<com.android.internal.telephony.uicc.UiccCard: boolean setOperatorBrandOverride(java.lang.String)>(r1);

        if z0 == 0 goto label4;

        $r6 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r7 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r3 = (com.android.internal.telephony.uicc.IccRecords) $r7;

        if r3 == null goto label3;

        $r10 = virtualinvoke r3.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getServiceProviderName()>();

        staticinvoke <android.os.SystemProperties: void set(java.lang.String,java.lang.String)>("gsm.sim.operator.alpha", $r10);

     label3:
        $r8 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        if $r8 == null goto label4;

        $r9 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmServiceStateTracker mSST>;

        virtualinvoke $r9.<com.android.internal.telephony.gsm.GsmServiceStateTracker: void pollState()>();

     label4:
        return z0;
    }

    public java.lang.String getOperatorNumeric()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1;
        com.android.internal.telephony.uicc.IccRecords r2;
        java.util.concurrent.atomic.AtomicReference $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 = null;

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: java.util.concurrent.atomic.AtomicReference mIccRecords>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r2 = (com.android.internal.telephony.uicc.IccRecords) $r4;

        if r2 == null goto label1;

        r1 = virtualinvoke r2.<com.android.internal.telephony.uicc.IccRecords: java.lang.String getOperatorNumeric()>();

     label1:
        return r1;
    }

    public void registerForAllDataDisconnected(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r3;
        com.android.internal.telephony.dataconnection.DcTracker $r4;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        $r4 = (com.android.internal.telephony.dataconnection.DcTracker) $r3;

        virtualinvoke $r4.<com.android.internal.telephony.dataconnection.DcTracker: void registerForAllDataDisconnected(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void unregisterForAllDataDisconnected(android.os.Handler)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.Handler r1;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r2;
        com.android.internal.telephony.dataconnection.DcTracker $r3;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        $r3 = (com.android.internal.telephony.dataconnection.DcTracker) $r2;

        virtualinvoke $r3.<com.android.internal.telephony.dataconnection.DcTracker: void unregisterForAllDataDisconnected(android.os.Handler)>(r1);

        return;
    }

    public void setInternalDataEnabled(boolean, android.os.Message)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        boolean z0;
        android.os.Message r1;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r2;
        com.android.internal.telephony.dataconnection.DcTracker $r3;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        $r3 = (com.android.internal.telephony.dataconnection.DcTracker) $r2;

        virtualinvoke $r3.<com.android.internal.telephony.dataconnection.DcTracker: boolean setInternalDataEnabled(boolean,android.os.Message)>(z0, r1);

        return;
    }

    public boolean setInternalDataEnabledFlag(boolean)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        boolean z0, $z1;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r1;
        com.android.internal.telephony.dataconnection.DcTracker $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        $r2 = (com.android.internal.telephony.dataconnection.DcTracker) $r1;

        $z1 = virtualinvoke $r2.<com.android.internal.telephony.dataconnection.DcTracker: boolean setInternalDataEnabledFlag(boolean)>(z0);

        return $z1;
    }

    public void notifyEcbmTimerReset(java.lang.Boolean)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.Boolean r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.Boolean;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mEcmTimerResetRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void notifyResult(java.lang.Object)>(r1);

        return;
    }

    public void registerForEcmTimerReset(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        android.os.RegistrantList $r3;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mEcmTimerResetRegistrants>;

        virtualinvoke $r3.<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void unregisterForEcmTimerReset(android.os.Handler)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        android.os.Handler r1;
        android.os.RegistrantList $r2;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.gsm.GSMPhone: android.os.RegistrantList mEcmTimerResetRegistrants>;

        virtualinvoke $r2.<android.os.RegistrantList: void remove(android.os.Handler)>(r1);

        return;
    }

    public void resetSubSpecifics()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        return;
    }

    protected void log(java.lang.String)
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[GSMPhone] ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("GSMPhone", $r5);

        return;
    }

    public volatile com.android.internal.telephony.Call getBackgroundCall()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCall $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCall getBackgroundCall()>();

        return $r1;
    }

    public volatile com.android.internal.telephony.Call getForegroundCall()
    {
        com.android.internal.telephony.gsm.GSMPhone r0;
        com.android.internal.telephony.gsm.GsmCall $r1;

        r0 := @this: com.android.internal.telephony.gsm.GSMPhone;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.gsm.GSMPhone: com.android.internal.telephony.gsm.GsmCall getForegroundCall()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.gsm.GSMPhone: java.lang.String VM_SIM_IMSI> = "vm_sim_imsi_key";

        <com.android.internal.telephony.gsm.GSMPhone: java.lang.String VM_NUMBER> = "vm_number_key";

        <com.android.internal.telephony.gsm.GSMPhone: java.lang.String CIPHERING_KEY> = "ciphering_key";

        <com.android.internal.telephony.gsm.GSMPhone: boolean VDBG> = 0;

        <com.android.internal.telephony.gsm.GSMPhone: boolean LOCAL_DEBUG> = 1;

        <com.android.internal.telephony.gsm.GSMPhone: java.lang.String LOG_TAG> = "GSMPhone";

        return;
    }
}
