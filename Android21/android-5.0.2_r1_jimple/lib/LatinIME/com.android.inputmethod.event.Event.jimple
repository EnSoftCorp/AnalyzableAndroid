public class com.android.inputmethod.event.Event extends java.lang.Object
{
    public static final int EVENT_TYPE_NOT_HANDLED;
    public static final int EVENT_TYPE_INPUT_KEYPRESS;
    public static final int EVENT_TYPE_TOGGLE;
    public static final int EVENT_TYPE_MODE_KEY;
    public static final int EVENT_TYPE_GESTURE;
    public static final int EVENT_TYPE_SUGGESTION_PICKED;
    public static final int EVENT_TYPE_SOFTWARE_GENERATED_STRING;
    public static final int NOT_A_CODE_POINT;
    public static final int NOT_A_KEY_CODE;
    private static final int FLAG_NONE;
    private static final int FLAG_DEAD;
    private static final int FLAG_REPEAT;
    private static final int FLAG_CONSUMED;
    private final int mEventType;
    public final int mCodePoint;
    public final java.lang.CharSequence mText;
    public final int mKeyCode;
    public final int mX;
    public final int mY;
    private final int mFlags;
    public final com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo mSuggestedWordInfo;
    public final com.android.inputmethod.event.Event mNextEvent;

    private void <init>(int, java.lang.CharSequence, int, int, int, int, com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo, int, com.android.inputmethod.event.Event)
    {
        com.android.inputmethod.event.Event r0, r3;
        int i0, i1, i2, i3, i4, i5, $i6;
        java.lang.CharSequence r1;
        com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo r2, $r4, $r6;
        java.lang.RuntimeException $r5, $r7;

        r0 := @this: com.android.inputmethod.event.Event;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.CharSequence;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        r2 := @parameter6: com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo;

        i5 := @parameter7: int;

        r3 := @parameter8: com.android.inputmethod.event.Event;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.inputmethod.event.Event: int mEventType> = i0;

        r0.<com.android.inputmethod.event.Event: java.lang.CharSequence mText> = r1;

        r0.<com.android.inputmethod.event.Event: int mCodePoint> = i1;

        r0.<com.android.inputmethod.event.Event: int mKeyCode> = i2;

        r0.<com.android.inputmethod.event.Event: int mX> = i3;

        r0.<com.android.inputmethod.event.Event: int mY> = i4;

        r0.<com.android.inputmethod.event.Event: com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo mSuggestedWordInfo> = r2;

        r0.<com.android.inputmethod.event.Event: int mFlags> = i5;

        r0.<com.android.inputmethod.event.Event: com.android.inputmethod.event.Event mNextEvent> = r3;

        $i6 = r0.<com.android.inputmethod.event.Event: int mEventType>;

        if 5 != $i6 goto label1;

        $r6 = r0.<com.android.inputmethod.event.Event: com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo mSuggestedWordInfo>;

        if null != $r6 goto label2;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("Wrong event: SUGGESTION_PICKED event must have a non-null SuggestedWordInfo");

        throw $r7;

     label1:
        $r4 = r0.<com.android.inputmethod.event.Event: com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo mSuggestedWordInfo>;

        if null == $r4 goto label2;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Wrong event: only SUGGESTION_PICKED events may have a non-null SuggestedWordInfo");

        throw $r5;

     label2:
        return;
    }

    public static com.android.inputmethod.event.Event createSoftwareKeypressEvent(int, int, int, int, boolean)
    {
        int i0, i1, i2, i3;
        boolean z0;
        com.android.inputmethod.event.Event $r0;
        byte $b4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        z0 := @parameter4: boolean;

        $r0 = new com.android.inputmethod.event.Event;

        if z0 == 0 goto label1;

        $b4 = 2;

        goto label2;

     label1:
        $b4 = 0;

     label2:
        specialinvoke $r0.<com.android.inputmethod.event.Event: void <init>(int,java.lang.CharSequence,int,int,int,int,com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo,int,com.android.inputmethod.event.Event)>(1, null, i0, i1, i2, i3, null, $b4, null);

        return $r0;
    }

    public static com.android.inputmethod.event.Event createHardwareKeypressEvent(int, int, com.android.inputmethod.event.Event, boolean)
    {
        int i0, i1;
        com.android.inputmethod.event.Event r0, $r1;
        boolean z0;
        byte $b2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: com.android.inputmethod.event.Event;

        z0 := @parameter3: boolean;

        $r1 = new com.android.inputmethod.event.Event;

        if z0 == 0 goto label1;

        $b2 = 2;

        goto label2;

     label1:
        $b2 = 0;

     label2:
        specialinvoke $r1.<com.android.inputmethod.event.Event: void <init>(int,java.lang.CharSequence,int,int,int,int,com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo,int,com.android.inputmethod.event.Event)>(1, null, i0, i1, -4, -4, null, $b2, r0);

        return $r1;
    }

    public static com.android.inputmethod.event.Event createDeadEvent(int, int, com.android.inputmethod.event.Event)
    {
        int i0, i1;
        com.android.inputmethod.event.Event r0, $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: com.android.inputmethod.event.Event;

        $r1 = new com.android.inputmethod.event.Event;

        specialinvoke $r1.<com.android.inputmethod.event.Event: void <init>(int,java.lang.CharSequence,int,int,int,int,com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo,int,com.android.inputmethod.event.Event)>(1, null, i0, i1, -4, -4, null, 1, r0);

        return $r1;
    }

    public static com.android.inputmethod.event.Event createEventForCodePointFromUnknownSource(int)
    {
        int i0;
        com.android.inputmethod.event.Event $r0;

        i0 := @parameter0: int;

        $r0 = new com.android.inputmethod.event.Event;

        specialinvoke $r0.<com.android.inputmethod.event.Event: void <init>(int,java.lang.CharSequence,int,int,int,int,com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo,int,com.android.inputmethod.event.Event)>(1, null, i0, 0, -1, -1, null, 0, null);

        return $r0;
    }

    public static com.android.inputmethod.event.Event createEventForCodePointFromAlreadyTypedText(int, int, int)
    {
        int i0, i1, i2;
        com.android.inputmethod.event.Event $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r0 = new com.android.inputmethod.event.Event;

        specialinvoke $r0.<com.android.inputmethod.event.Event: void <init>(int,java.lang.CharSequence,int,int,int,int,com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo,int,com.android.inputmethod.event.Event)>(1, null, i0, 0, i1, i2, null, 0, null);

        return $r0;
    }

    public static com.android.inputmethod.event.Event createSuggestionPickedEvent(com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo)
    {
        com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo r0;
        com.android.inputmethod.event.Event $r1;
        java.lang.String $r2;

        r0 := @parameter0: com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo;

        $r1 = new com.android.inputmethod.event.Event;

        $r2 = r0.<com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo: java.lang.String mWord>;

        specialinvoke $r1.<com.android.inputmethod.event.Event: void <init>(int,java.lang.CharSequence,int,int,int,int,com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo,int,com.android.inputmethod.event.Event)>(5, $r2, -1, 0, -2, -2, r0, 0, null);

        return $r1;
    }

    public static com.android.inputmethod.event.Event createSoftwareTextEvent(java.lang.CharSequence, int)
    {
        java.lang.CharSequence r0;
        int i0;
        com.android.inputmethod.event.Event $r1;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        $r1 = new com.android.inputmethod.event.Event;

        specialinvoke $r1.<com.android.inputmethod.event.Event: void <init>(int,java.lang.CharSequence,int,int,int,int,com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo,int,com.android.inputmethod.event.Event)>(6, r0, -1, i0, -1, -1, null, 0, null);

        return $r1;
    }

    public static com.android.inputmethod.event.Event createPunctuationSuggestionPickedEvent(com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo)
    {
        com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo r0;
        char c0;
        java.lang.String $r1, $r3;
        com.android.inputmethod.event.Event $r2;

        r0 := @parameter0: com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo;

        $r1 = r0.<com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo: java.lang.String mWord>;

        c0 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $r2 = new com.android.inputmethod.event.Event;

        $r3 = r0.<com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo: java.lang.String mWord>;

        specialinvoke $r2.<com.android.inputmethod.event.Event: void <init>(int,java.lang.CharSequence,int,int,int,int,com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo,int,com.android.inputmethod.event.Event)>(5, $r3, c0, 0, -2, -2, r0, 0, null);

        return $r2;
    }

    public static com.android.inputmethod.event.Event createConsumedEvent(com.android.inputmethod.event.Event)
    {
        com.android.inputmethod.event.Event r0, $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo $r3;
        java.lang.CharSequence $r4;

        r0 := @parameter0: com.android.inputmethod.event.Event;

        $r1 = new com.android.inputmethod.event.Event;

        $i6 = r0.<com.android.inputmethod.event.Event: int mEventType>;

        $r4 = r0.<com.android.inputmethod.event.Event: java.lang.CharSequence mText>;

        $i5 = r0.<com.android.inputmethod.event.Event: int mCodePoint>;

        $i4 = r0.<com.android.inputmethod.event.Event: int mKeyCode>;

        $i3 = r0.<com.android.inputmethod.event.Event: int mX>;

        $i2 = r0.<com.android.inputmethod.event.Event: int mY>;

        $r3 = r0.<com.android.inputmethod.event.Event: com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo mSuggestedWordInfo>;

        $i0 = r0.<com.android.inputmethod.event.Event: int mFlags>;

        $i1 = $i0 | 4;

        $r2 = r0.<com.android.inputmethod.event.Event: com.android.inputmethod.event.Event mNextEvent>;

        specialinvoke $r1.<com.android.inputmethod.event.Event: void <init>(int,java.lang.CharSequence,int,int,int,int,com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo,int,com.android.inputmethod.event.Event)>($i6, $r4, $i5, $i4, $i3, $i2, $r3, $i1, $r2);

        return $r1;
    }

    public static com.android.inputmethod.event.Event createNotHandledEvent()
    {
        com.android.inputmethod.event.Event $r0;

        $r0 = new com.android.inputmethod.event.Event;

        specialinvoke $r0.<com.android.inputmethod.event.Event: void <init>(int,java.lang.CharSequence,int,int,int,int,com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo,int,com.android.inputmethod.event.Event)>(0, null, -1, 0, -1, -1, null, 0, null);

        return $r0;
    }

    public boolean isFunctionalKeyEvent()
    {
        com.android.inputmethod.event.Event r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.inputmethod.event.Event;

        $i0 = r0.<com.android.inputmethod.event.Event: int mCodePoint>;

        if -1 != $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isDead()
    {
        com.android.inputmethod.event.Event r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.event.Event;

        $i0 = r0.<com.android.inputmethod.event.Event: int mFlags>;

        $i1 = 1 & $i0;

        if 0 == $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isKeyRepeat()
    {
        com.android.inputmethod.event.Event r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.event.Event;

        $i0 = r0.<com.android.inputmethod.event.Event: int mFlags>;

        $i1 = 2 & $i0;

        if 0 == $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isConsumed()
    {
        com.android.inputmethod.event.Event r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.event.Event;

        $i0 = r0.<com.android.inputmethod.event.Event: int mFlags>;

        $i1 = 4 & $i0;

        if 0 == $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isGesture()
    {
        com.android.inputmethod.event.Event r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.inputmethod.event.Event;

        $i0 = r0.<com.android.inputmethod.event.Event: int mEventType>;

        if 4 != $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isSuggestionStripPress()
    {
        com.android.inputmethod.event.Event r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.inputmethod.event.Event;

        $i0 = r0.<com.android.inputmethod.event.Event: int mEventType>;

        if 5 != $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isHandled()
    {
        com.android.inputmethod.event.Event r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.inputmethod.event.Event;

        $i0 = r0.<com.android.inputmethod.event.Event: int mEventType>;

        if 0 == $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.CharSequence getTextToCommit()
    {
        com.android.inputmethod.event.Event r0;
        boolean $z0;
        int $i0, $i1, $i2;
        java.lang.CharSequence $r1;
        java.lang.String $r2, $r7;
        java.lang.RuntimeException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: com.android.inputmethod.event.Event;

        $z0 = virtualinvoke r0.<com.android.inputmethod.event.Event: boolean isConsumed()>();

        if $z0 == 0 goto label1;

        return "";

     label1:
        $i0 = r0.<com.android.inputmethod.event.Event: int mEventType>;

        tableswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label4;
            case 5: goto label4;
            case 6: goto label4;
            default: goto label5;
        };

     label2:
        return "";

     label3:
        $i1 = r0.<com.android.inputmethod.event.Event: int mCodePoint>;

        $r2 = staticinvoke <com.android.inputmethod.latin.utils.StringUtils: java.lang.String newSingleCodePointString(int)>($i1);

        return $r2;

     label4:
        $r1 = r0.<com.android.inputmethod.event.Event: java.lang.CharSequence mText>;

        return $r1;

     label5:
        $r3 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown event type: ");

        $i2 = r0.<com.android.inputmethod.event.Event: int mEventType>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    public static void <clinit>()
    {
        <com.android.inputmethod.event.Event: int FLAG_CONSUMED> = 4;

        <com.android.inputmethod.event.Event: int FLAG_REPEAT> = 2;

        <com.android.inputmethod.event.Event: int FLAG_DEAD> = 1;

        <com.android.inputmethod.event.Event: int FLAG_NONE> = 0;

        <com.android.inputmethod.event.Event: int NOT_A_KEY_CODE> = 0;

        <com.android.inputmethod.event.Event: int NOT_A_CODE_POINT> = -1;

        <com.android.inputmethod.event.Event: int EVENT_TYPE_SOFTWARE_GENERATED_STRING> = 6;

        <com.android.inputmethod.event.Event: int EVENT_TYPE_SUGGESTION_PICKED> = 5;

        <com.android.inputmethod.event.Event: int EVENT_TYPE_GESTURE> = 4;

        <com.android.inputmethod.event.Event: int EVENT_TYPE_MODE_KEY> = 3;

        <com.android.inputmethod.event.Event: int EVENT_TYPE_TOGGLE> = 2;

        <com.android.inputmethod.event.Event: int EVENT_TYPE_INPUT_KEYPRESS> = 1;

        <com.android.inputmethod.event.Event: int EVENT_TYPE_NOT_HANDLED> = 0;

        return;
    }
}
