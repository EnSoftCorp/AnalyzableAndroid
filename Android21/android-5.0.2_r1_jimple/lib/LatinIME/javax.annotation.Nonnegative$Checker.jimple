public class javax.annotation.Nonnegative$Checker extends java.lang.Object implements javax.annotation.meta.TypeQualifierValidator
{

    public void <init>()
    {
        javax.annotation.Nonnegative$Checker r0;

        r0 := @this: javax.annotation.Nonnegative$Checker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public javax.annotation.meta.When forConstantValue(javax.annotation.Nonnegative, java.lang.Object)
    {
        javax.annotation.Nonnegative$Checker r0;
        javax.annotation.Nonnegative r1;
        java.lang.Object r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.Number r3;
        int $i0;
        javax.annotation.meta.When $r4, $r5, $r6;
        float $f0;
        byte $b1, $b2, $b4;
        double $d0;
        long $l3;

        r0 := @this: javax.annotation.Nonnegative$Checker;

        r1 := @parameter0: javax.annotation.Nonnegative;

        r2 := @parameter1: java.lang.Object;

        $z1 = r2 instanceof java.lang.Number;

        if $z1 != 0 goto label01;

        $r6 = <javax.annotation.meta.When: javax.annotation.meta.When NEVER>;

        return $r6;

     label01:
        r3 = (java.lang.Number) r2;

        $z2 = r3 instanceof java.lang.Long;

        if $z2 == 0 goto label04;

        $l3 = virtualinvoke r3.<java.lang.Number: long longValue()>();

        $b4 = $l3 cmp 0L;

        if $b4 >= 0 goto label02;

        $z8 = 1;

        goto label03;

     label02:
        $z8 = 0;

     label03:
        z0 = $z8;

        goto label13;

     label04:
        $z3 = r3 instanceof java.lang.Double;

        if $z3 == 0 goto label07;

        $d0 = virtualinvoke r3.<java.lang.Number: double doubleValue()>();

        $b2 = $d0 cmpg 0.0;

        if $b2 >= 0 goto label05;

        $z7 = 1;

        goto label06;

     label05:
        $z7 = 0;

     label06:
        z0 = $z7;

        goto label13;

     label07:
        $z4 = r3 instanceof java.lang.Float;

        if $z4 == 0 goto label10;

        $f0 = virtualinvoke r3.<java.lang.Number: float floatValue()>();

        $b1 = $f0 cmpg 0.0F;

        if $b1 >= 0 goto label08;

        $z6 = 1;

        goto label09;

     label08:
        $z6 = 0;

     label09:
        z0 = $z6;

        goto label13;

     label10:
        $i0 = virtualinvoke r3.<java.lang.Number: int intValue()>();

        if $i0 >= 0 goto label11;

        $z5 = 1;

        goto label12;

     label11:
        $z5 = 0;

     label12:
        z0 = $z5;

     label13:
        if z0 == 0 goto label14;

        $r5 = <javax.annotation.meta.When: javax.annotation.meta.When NEVER>;

        return $r5;

     label14:
        $r4 = <javax.annotation.meta.When: javax.annotation.meta.When ALWAYS>;

        return $r4;
    }

    public volatile javax.annotation.meta.When forConstantValue(java.lang.annotation.Annotation, java.lang.Object)
    {
        javax.annotation.Nonnegative$Checker r0;
        java.lang.annotation.Annotation r1;
        java.lang.Object r2;
        javax.annotation.Nonnegative $r3;
        javax.annotation.meta.When $r4;

        r0 := @this: javax.annotation.Nonnegative$Checker;

        r1 := @parameter0: java.lang.annotation.Annotation;

        r2 := @parameter1: java.lang.Object;

        $r3 = (javax.annotation.Nonnegative) r1;

        $r4 = virtualinvoke r0.<javax.annotation.Nonnegative$Checker: javax.annotation.meta.When forConstantValue(javax.annotation.Nonnegative,java.lang.Object)>($r3, r2);

        return $r4;
    }
}
