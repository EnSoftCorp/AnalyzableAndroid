public final class com.android.inputmethod.latin.BinaryDictionary extends com.android.inputmethod.latin.Dictionary
{
    private static final java.lang.String TAG;
    private static final int CONFIDENCE_TO_AUTO_COMMIT;
    public static final java.lang.String UNIGRAM_COUNT_QUERY;
    public static final java.lang.String BIGRAM_COUNT_QUERY;
    public static final java.lang.String MAX_UNIGRAM_COUNT_QUERY;
    public static final java.lang.String MAX_BIGRAM_COUNT_QUERY;
    public static final int NOT_A_VALID_TIMESTAMP;
    private static final int FORMAT_WORD_PROPERTY_OUTPUT_FLAG_COUNT;
    private static final int FORMAT_WORD_PROPERTY_IS_NOT_A_WORD_INDEX;
    private static final int FORMAT_WORD_PROPERTY_IS_BLACKLISTED_INDEX;
    private static final int FORMAT_WORD_PROPERTY_HAS_BIGRAMS_INDEX;
    private static final int FORMAT_WORD_PROPERTY_HAS_SHORTCUTS_INDEX;
    private static final int FORMAT_WORD_PROPERTY_IS_BEGINNING_OF_SENTENCE_INDEX;
    public static final int FORMAT_WORD_PROPERTY_OUTPUT_PROBABILITY_INFO_COUNT;
    public static final int FORMAT_WORD_PROPERTY_PROBABILITY_INDEX;
    public static final int FORMAT_WORD_PROPERTY_TIMESTAMP_INDEX;
    public static final int FORMAT_WORD_PROPERTY_LEVEL_INDEX;
    public static final int FORMAT_WORD_PROPERTY_COUNT_INDEX;
    public static final java.lang.String DICT_FILE_NAME_SUFFIX_FOR_MIGRATION;
    public static final java.lang.String DIR_NAME_SUFFIX_FOR_RECORD_MIGRATION;
    private long mNativeDict;
    private final java.util.Locale mLocale;
    private final long mDictSize;
    private final java.lang.String mDictFilePath;
    private final boolean mUseFullEditDistance;
    private final boolean mIsUpdatable;
    private boolean mHasUpdated;
    private final android.util.SparseArray mDicTraverseSessions;

    private com.android.inputmethod.latin.DicTraverseSession getTraverseSession(int)
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        int i0;
        android.util.SparseArray r1, $r4, $r5, $r9;
        com.android.inputmethod.latin.DicTraverseSession r2, $r7;
        java.lang.Throwable r3, $r10;
        java.lang.Object $r6;
        long $l1, $l2;
        java.util.Locale $r8;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.inputmethod.latin.BinaryDictionary: android.util.SparseArray mDicTraverseSessions>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.inputmethod.latin.BinaryDictionary: android.util.SparseArray mDicTraverseSessions>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.inputmethod.latin.DicTraverseSession) $r6;

        if r2 != null goto label2;

        $r7 = new com.android.inputmethod.latin.DicTraverseSession;

        $r8 = r0.<com.android.inputmethod.latin.BinaryDictionary: java.util.Locale mLocale>;

        $l2 = r0.<com.android.inputmethod.latin.BinaryDictionary: long mNativeDict>;

        $l1 = r0.<com.android.inputmethod.latin.BinaryDictionary: long mDictSize>;

        specialinvoke $r7.<com.android.inputmethod.latin.DicTraverseSession: void <init>(java.util.Locale,long,long)>($r8, $l2, $l1);

        r2 = $r7;

        $r9 = r0.<com.android.inputmethod.latin.BinaryDictionary: android.util.SparseArray mDicTraverseSessions>;

        virtualinvoke $r9.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r2);

     label2:
        exitmonitor r1;

     label3:
        return r2;

     label4:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r1;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void <init>(java.lang.String, long, long, boolean, java.util.Locale, java.lang.String, boolean)
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        java.lang.String r1, r3;
        long l0, l1;
        boolean z0, z1;
        java.util.Locale r2;
        android.util.SparseArray $r4;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        r2 := @parameter4: java.util.Locale;

        r3 := @parameter5: java.lang.String;

        z1 := @parameter6: boolean;

        specialinvoke r0.<com.android.inputmethod.latin.Dictionary: void <init>(java.lang.String)>(r3);

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<com.android.inputmethod.latin.BinaryDictionary: android.util.SparseArray mDicTraverseSessions> = $r4;

        r0.<com.android.inputmethod.latin.BinaryDictionary: java.util.Locale mLocale> = r2;

        r0.<com.android.inputmethod.latin.BinaryDictionary: long mDictSize> = l1;

        r0.<com.android.inputmethod.latin.BinaryDictionary: java.lang.String mDictFilePath> = r1;

        r0.<com.android.inputmethod.latin.BinaryDictionary: boolean mIsUpdatable> = z1;

        r0.<com.android.inputmethod.latin.BinaryDictionary: boolean mHasUpdated> = 0;

        r0.<com.android.inputmethod.latin.BinaryDictionary: boolean mUseFullEditDistance> = z0;

        specialinvoke r0.<com.android.inputmethod.latin.BinaryDictionary: void loadDictionary(java.lang.String,long,long,boolean)>(r1, l0, l1, z1);

        return;
    }

    public void <init>(java.lang.String, boolean, java.util.Locale, java.lang.String, long, java.util.Map)
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        java.lang.String r1, r3, r8, $r11, $r13;
        boolean z0, $z1;
        java.util.Locale r2;
        long l0, $l4;
        java.util.Map r4;
        java.lang.String[] r5, r6;
        int i1, $i2, $i3;
        java.util.Iterator r7;
        android.util.SparseArray $r9;
        java.util.Set $r10;
        java.lang.Object $r12, $r14;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.util.Locale;

        r3 := @parameter3: java.lang.String;

        l0 := @parameter4: long;

        r4 := @parameter5: java.util.Map;

        specialinvoke r0.<com.android.inputmethod.latin.Dictionary: void <init>(java.lang.String)>(r3);

        $r9 = new android.util.SparseArray;

        specialinvoke $r9.<android.util.SparseArray: void <init>()>();

        r0.<com.android.inputmethod.latin.BinaryDictionary: android.util.SparseArray mDicTraverseSessions> = $r9;

        r0.<com.android.inputmethod.latin.BinaryDictionary: java.util.Locale mLocale> = r2;

        r0.<com.android.inputmethod.latin.BinaryDictionary: long mDictSize> = 0L;

        r0.<com.android.inputmethod.latin.BinaryDictionary: java.lang.String mDictFilePath> = r1;

        r0.<com.android.inputmethod.latin.BinaryDictionary: boolean mIsUpdatable> = 1;

        r0.<com.android.inputmethod.latin.BinaryDictionary: boolean mHasUpdated> = 0;

        r0.<com.android.inputmethod.latin.BinaryDictionary: boolean mUseFullEditDistance> = z0;

        $i2 = interfaceinvoke r4.<java.util.Map: int size()>();

        r5 = newarray (java.lang.String)[$i2];

        $i3 = interfaceinvoke r4.<java.util.Map: int size()>();

        r6 = newarray (java.lang.String)[$i3];

        i1 = 0;

        $r10 = interfaceinvoke r4.<java.util.Map: java.util.Set keySet()>();

        r7 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r12 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r12;

        r5[i1] = r8;

        $r14 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8);

        $r13 = (java.lang.String) $r14;

        r6[i1] = $r13;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r11 = virtualinvoke r2.<java.util.Locale: java.lang.String toString()>();

        $l4 = staticinvoke <com.android.inputmethod.latin.BinaryDictionary: long createOnMemoryNative(long,java.lang.String,java.lang.String[],java.lang.String[])>(l0, $r11, r5, r6);

        r0.<com.android.inputmethod.latin.BinaryDictionary: long mNativeDict> = $l4;

        return;
    }

    private static native long openNative(java.lang.String, long, long, boolean);

    private static native long createOnMemoryNative(long, java.lang.String, java.lang.String[], java.lang.String[]);

    private static native void getHeaderInfoNative(long, int[], int[], java.util.ArrayList, java.util.ArrayList);

    private static native boolean flushNative(long, java.lang.String);

    private static native boolean needsToRunGCNative(long, boolean);

    private static native boolean flushWithGCNative(long, java.lang.String);

    private static native void closeNative(long);

    private static native int getFormatVersionNative(long);

    private static native int getProbabilityNative(long, int[]);

    private static native int getMaxProbabilityOfExactMatchesNative(long, int[]);

    private static native int getNgramProbabilityNative(long, int[][], boolean[], int[]);

    private static native void getWordPropertyNative(long, int[], boolean, int[], boolean[], int[], java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList);

    private static native int getNextWordNative(long, int, int[], boolean[]);

    private static native void getSuggestionsNative(long, long, long, int[], int[], int[], int[], int[], int, int[], int[][], boolean[], int[], int[], int[], int[], int[], int[], float[]);

    private static native boolean addUnigramEntryNative(long, int[], int, int[], int, boolean, boolean, boolean, int);

    private static native boolean removeUnigramEntryNative(long, int[]);

    private static native boolean addNgramEntryNative(long, int[][], boolean[], int[], int, int);

    private static native boolean removeNgramEntryNative(long, int[][], boolean[], int[]);

    private static native int addMultipleDictionaryEntriesNative(long, com.android.inputmethod.latin.utils.LanguageModelParam[], int);

    private static native java.lang.String getPropertyNative(long, java.lang.String);

    private static native boolean isCorruptedNative(long);

    private static native boolean migrateNative(long, java.lang.String, long);

    private final void loadDictionary(java.lang.String, long, long, boolean)
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        java.lang.String r1;
        long l0, l1, $l2;
        boolean z0;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        r0.<com.android.inputmethod.latin.BinaryDictionary: boolean mHasUpdated> = 0;

        $l2 = staticinvoke <com.android.inputmethod.latin.BinaryDictionary: long openNative(java.lang.String,long,long,boolean)>(r1, l0, l1, z0);

        r0.<com.android.inputmethod.latin.BinaryDictionary: long mNativeDict> = $l2;

        return;
    }

    public boolean isCorrupted()
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        boolean $z0, $z1, $z2;
        long $l0, $l3;
        java.lang.StringBuilder $r1, $r3, $r5, $r6, $r8, $r10, $r13, $r14, $r15, $r17, $r20, $r21, $r23;
        java.lang.String $r2, $r4, $r7, $r9, $r12, $r16, $r18, $r19, $r22;
        java.util.Locale $r11;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        $z0 = virtualinvoke r0.<com.android.inputmethod.latin.BinaryDictionary: boolean isValidDictionary()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $l0 = r0.<com.android.inputmethod.latin.BinaryDictionary: long mNativeDict>;

        $z1 = staticinvoke <com.android.inputmethod.latin.BinaryDictionary: boolean isCorruptedNative(long)>($l0);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r2 = <com.android.inputmethod.latin.BinaryDictionary: java.lang.String TAG>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BinaryDictionary (");

        $r4 = r0.<com.android.inputmethod.latin.BinaryDictionary: java.lang.String mDictFilePath>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is corrupted.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, $r7);

        $r9 = <com.android.inputmethod.latin.BinaryDictionary: java.lang.String TAG>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("locale: ");

        $r11 = r0.<com.android.inputmethod.latin.BinaryDictionary: java.util.Locale mLocale>;

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r9, $r12);

        $r16 = <com.android.inputmethod.latin.BinaryDictionary: java.lang.String TAG>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dict size: ");

        $l3 = r0.<com.android.inputmethod.latin.BinaryDictionary: long mDictSize>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r16, $r18);

        $r19 = <com.android.inputmethod.latin.BinaryDictionary: java.lang.String TAG>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updatable: ");

        $z2 = r0.<com.android.inputmethod.latin.BinaryDictionary: boolean mIsUpdatable>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r19, $r22);

        return 1;
    }

    public com.android.inputmethod.latin.makedict.DictionaryHeader getHeader() throws com.android.inputmethod.latin.makedict.UnsupportedFormatException
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        int[] r1, r2, $r16, $r19;
        java.util.ArrayList r3, r4, $r8, $r9;
        java.util.HashMap r5, $r10;
        int i0, $i4, $i5, $i6;
        java.lang.String r6, r7, $r12;
        long $l1, $l3;
        byte $b2;
        java.lang.Object $r11, $r17, $r18;
        com.android.inputmethod.latin.makedict.DictionaryHeader $r13;
        com.android.inputmethod.latin.makedict.FormatSpec$DictionaryOptions $r14;
        com.android.inputmethod.latin.makedict.FormatSpec$FormatOptions $r15;
        boolean z0;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        $l1 = r0.<com.android.inputmethod.latin.BinaryDictionary: long mNativeDict>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        return null;

     label1:
        r1 = newarray (int)[1];

        r2 = newarray (int)[1];

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r3 = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r4 = $r9;

        $l3 = r0.<com.android.inputmethod.latin.BinaryDictionary: long mNativeDict>;

        staticinvoke <com.android.inputmethod.latin.BinaryDictionary: void getHeaderInfoNative(long,int[],int[],java.util.ArrayList,java.util.ArrayList)>($l3, r1, r2, r3, r4);

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        r5 = $r10;

        i0 = 0;

     label2:
        $i4 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i0 >= $i4 goto label3;

        $r17 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r16 = (int[]) $r17;

        r6 = staticinvoke <com.android.inputmethod.latin.utils.StringUtils: java.lang.String getStringFromNullTerminatedCodePointArray(int[])>($r16);

        $r18 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r19 = (int[]) $r18;

        r7 = staticinvoke <com.android.inputmethod.latin.utils.StringUtils: java.lang.String getStringFromNullTerminatedCodePointArray(int[])>($r19);

        virtualinvoke r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r7);

        i0 = i0 + 1;

        goto label2;

     label3:
        $r12 = "1";

        $r11 = virtualinvoke r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("HAS_HISTORICAL_INFO");

        z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        $r13 = new com.android.inputmethod.latin.makedict.DictionaryHeader;

        $i5 = r1[0];

        $r14 = new com.android.inputmethod.latin.makedict.FormatSpec$DictionaryOptions;

        specialinvoke $r14.<com.android.inputmethod.latin.makedict.FormatSpec$DictionaryOptions: void <init>(java.util.HashMap)>(r5);

        $r15 = new com.android.inputmethod.latin.makedict.FormatSpec$FormatOptions;

        $i6 = r2[0];

        specialinvoke $r15.<com.android.inputmethod.latin.makedict.FormatSpec$FormatOptions: void <init>(int,boolean)>($i6, z0);

        specialinvoke $r13.<com.android.inputmethod.latin.makedict.DictionaryHeader: void <init>(int,com.android.inputmethod.latin.makedict.FormatSpec$DictionaryOptions,com.android.inputmethod.latin.makedict.FormatSpec$FormatOptions)>($i5, $r14, $r15);

        return $r13;
    }

    public java.util.ArrayList getSuggestions(com.android.inputmethod.latin.WordComposer, com.android.inputmethod.latin.PrevWordsInfo, com.android.inputmethod.keyboard.ProximityInfo, com.android.inputmethod.latin.settings.SettingsValuesForSuggestion, int, float[])
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        com.android.inputmethod.latin.WordComposer r1;
        com.android.inputmethod.latin.PrevWordsInfo r2;
        com.android.inputmethod.keyboard.ProximityInfo r3;
        com.android.inputmethod.latin.settings.SettingsValuesForSuggestion r4;
        int i0, i1, i2, i3, i4, i5, $i9, $i10, $i11, $i12, $i13, $i14;
        float[] r5, $r18, $r29, $r46, $r47;
        com.android.inputmethod.latin.DicTraverseSession r6, $r21;
        com.android.inputmethod.latin.InputPointers r7;
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.ArrayList r8, $r34;
        boolean[] $r9, $r37;
        int[] $r10, $r15, $r19, $r20, $r23, $r24, $r25, $r26, $r27, $r28, $r30, $r31, $r32, $r33, $r35, $r38, $r39, $r42, $r43, $r44, $r45, $r48;
        int[][] $r11, $r36;
        com.android.inputmethod.latin.settings.NativeSuggestOptions $r12, $r13, $r14, $r16, $r17, $r22;
        long $l6, $l7, $l8;
        java.lang.String $r40;
        com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo $r41;
        float $f0, $f1;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        r1 := @parameter0: com.android.inputmethod.latin.WordComposer;

        r2 := @parameter1: com.android.inputmethod.latin.PrevWordsInfo;

        r3 := @parameter2: com.android.inputmethod.keyboard.ProximityInfo;

        r4 := @parameter3: com.android.inputmethod.latin.settings.SettingsValuesForSuggestion;

        i0 := @parameter4: int;

        r5 := @parameter5: float[];

        $z1 = virtualinvoke r0.<com.android.inputmethod.latin.BinaryDictionary: boolean isValidDictionary()>();

        if $z1 != 0 goto label01;

        return null;

     label01:
        r6 = specialinvoke r0.<com.android.inputmethod.latin.BinaryDictionary: com.android.inputmethod.latin.DicTraverseSession getTraverseSession(int)>(i0);

        $r10 = r6.<com.android.inputmethod.latin.DicTraverseSession: int[] mInputCodePoints>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r10, -1);

        $r11 = r6.<com.android.inputmethod.latin.DicTraverseSession: int[][] mPrevWordCodePointArrays>;

        $r9 = r6.<com.android.inputmethod.latin.DicTraverseSession: boolean[] mIsBeginningOfSentenceArray>;

        virtualinvoke r2.<com.android.inputmethod.latin.PrevWordsInfo: void outputToArray(int[][],boolean[])>($r11, $r9);

        r7 = virtualinvoke r1.<com.android.inputmethod.latin.WordComposer: com.android.inputmethod.latin.InputPointers getInputPointers()>();

        z0 = virtualinvoke r1.<com.android.inputmethod.latin.WordComposer: boolean isBatchMode()>();

        if z0 != 0 goto label02;

        $r48 = r6.<com.android.inputmethod.latin.DicTraverseSession: int[] mInputCodePoints>;

        i1 = virtualinvoke r1.<com.android.inputmethod.latin.WordComposer: int copyCodePointsExceptTrailingSingleQuotesAndReturnCodePointCount(int[])>($r48);

        if i1 >= 0 goto label03;

        return null;

     label02:
        i1 = virtualinvoke r7.<com.android.inputmethod.latin.InputPointers: int getPointerSize()>();

     label03:
        $r12 = r6.<com.android.inputmethod.latin.DicTraverseSession: com.android.inputmethod.latin.settings.NativeSuggestOptions mNativeSuggestOptions>;

        $z2 = r0.<com.android.inputmethod.latin.BinaryDictionary: boolean mUseFullEditDistance>;

        virtualinvoke $r12.<com.android.inputmethod.latin.settings.NativeSuggestOptions: void setUseFullEditDistance(boolean)>($z2);

        $r13 = r6.<com.android.inputmethod.latin.DicTraverseSession: com.android.inputmethod.latin.settings.NativeSuggestOptions mNativeSuggestOptions>;

        virtualinvoke $r13.<com.android.inputmethod.latin.settings.NativeSuggestOptions: void setIsGesture(boolean)>(z0);

        $r14 = r6.<com.android.inputmethod.latin.DicTraverseSession: com.android.inputmethod.latin.settings.NativeSuggestOptions mNativeSuggestOptions>;

        $z3 = r4.<com.android.inputmethod.latin.settings.SettingsValuesForSuggestion: boolean mBlockPotentiallyOffensive>;

        virtualinvoke $r14.<com.android.inputmethod.latin.settings.NativeSuggestOptions: void setBlockOffensiveWords(boolean)>($z3);

        $r16 = r6.<com.android.inputmethod.latin.DicTraverseSession: com.android.inputmethod.latin.settings.NativeSuggestOptions mNativeSuggestOptions>;

        $z4 = r4.<com.android.inputmethod.latin.settings.SettingsValuesForSuggestion: boolean mSpaceAwareGestureEnabled>;

        virtualinvoke $r16.<com.android.inputmethod.latin.settings.NativeSuggestOptions: void setSpaceAwareGestureEnabled(boolean)>($z4);

        $r17 = r6.<com.android.inputmethod.latin.DicTraverseSession: com.android.inputmethod.latin.settings.NativeSuggestOptions mNativeSuggestOptions>;

        $r15 = r4.<com.android.inputmethod.latin.settings.SettingsValuesForSuggestion: int[] mAdditionalFeaturesSettingValues>;

        virtualinvoke $r17.<com.android.inputmethod.latin.settings.NativeSuggestOptions: void setAdditionalFeaturesOptions(int[])>($r15);

        if r5 == null goto label04;

        $r47 = r6.<com.android.inputmethod.latin.DicTraverseSession: float[] mInputOutputLanguageWeight>;

        $f1 = r5[0];

        $r47[0] = $f1;

        goto label05;

     label04:
        $r18 = r6.<com.android.inputmethod.latin.DicTraverseSession: float[] mInputOutputLanguageWeight>;

        $r18[0] = -1.0F;

     label05:
        $l6 = r0.<com.android.inputmethod.latin.BinaryDictionary: long mNativeDict>;

        $l7 = virtualinvoke r3.<com.android.inputmethod.keyboard.ProximityInfo: long getNativeProximityInfo()>();

        $r21 = specialinvoke r0.<com.android.inputmethod.latin.BinaryDictionary: com.android.inputmethod.latin.DicTraverseSession getTraverseSession(int)>(i0);

        $l8 = virtualinvoke $r21.<com.android.inputmethod.latin.DicTraverseSession: long getSession()>();

        $r19 = virtualinvoke r7.<com.android.inputmethod.latin.InputPointers: int[] getXCoordinates()>();

        $r20 = virtualinvoke r7.<com.android.inputmethod.latin.InputPointers: int[] getYCoordinates()>();

        $r24 = virtualinvoke r7.<com.android.inputmethod.latin.InputPointers: int[] getTimes()>();

        $r25 = virtualinvoke r7.<com.android.inputmethod.latin.InputPointers: int[] getPointerIds()>();

        $r23 = r6.<com.android.inputmethod.latin.DicTraverseSession: int[] mInputCodePoints>;

        $r22 = r6.<com.android.inputmethod.latin.DicTraverseSession: com.android.inputmethod.latin.settings.NativeSuggestOptions mNativeSuggestOptions>;

        $r28 = virtualinvoke $r22.<com.android.inputmethod.latin.settings.NativeSuggestOptions: int[] getOptions()>();

        $r36 = r6.<com.android.inputmethod.latin.DicTraverseSession: int[][] mPrevWordCodePointArrays>;

        $r37 = r6.<com.android.inputmethod.latin.DicTraverseSession: boolean[] mIsBeginningOfSentenceArray>;

        $r30 = r6.<com.android.inputmethod.latin.DicTraverseSession: int[] mOutputSuggestionCount>;

        $r31 = r6.<com.android.inputmethod.latin.DicTraverseSession: int[] mOutputCodePoints>;

        $r32 = r6.<com.android.inputmethod.latin.DicTraverseSession: int[] mOutputScores>;

        $r33 = r6.<com.android.inputmethod.latin.DicTraverseSession: int[] mSpaceIndices>;

        $r27 = r6.<com.android.inputmethod.latin.DicTraverseSession: int[] mOutputTypes>;

        $r26 = r6.<com.android.inputmethod.latin.DicTraverseSession: int[] mOutputAutoCommitFirstWordConfidence>;

        $r29 = r6.<com.android.inputmethod.latin.DicTraverseSession: float[] mInputOutputLanguageWeight>;

        staticinvoke <com.android.inputmethod.latin.BinaryDictionary: void getSuggestionsNative(long,long,long,int[],int[],int[],int[],int[],int,int[],int[][],boolean[],int[],int[],int[],int[],int[],int[],float[])>($l6, $l7, $l8, $r19, $r20, $r24, $r25, $r23, i1, $r28, $r36, $r37, $r30, $r31, $r32, $r33, $r27, $r26, $r29);

        if r5 == null goto label06;

        $r46 = r6.<com.android.inputmethod.latin.DicTraverseSession: float[] mInputOutputLanguageWeight>;

        $f0 = $r46[0];

        r5[0] = $f0;

     label06:
        $r35 = r6.<com.android.inputmethod.latin.DicTraverseSession: int[] mOutputSuggestionCount>;

        i2 = $r35[0];

        $r34 = new java.util.ArrayList;

        specialinvoke $r34.<java.util.ArrayList: void <init>()>();

        r8 = $r34;

        i3 = 0;

     label07:
        if i3 >= i2 goto label11;

        i4 = i3 * 48;

        i5 = 0;

     label08:
        if i5 >= 48 goto label09;

        $r45 = r6.<com.android.inputmethod.latin.DicTraverseSession: int[] mOutputCodePoints>;

        $i10 = i4 + i5;

        $i11 = $r45[$i10];

        if $i11 == 0 goto label09;

        i5 = i5 + 1;

        goto label08;

     label09:
        if i5 <= 0 goto label10;

        $r41 = new com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo;

        $r40 = new java.lang.String;

        $r39 = r6.<com.android.inputmethod.latin.DicTraverseSession: int[] mOutputCodePoints>;

        specialinvoke $r40.<java.lang.String: void <init>(int[],int,int)>($r39, i4, i5);

        $r38 = r6.<com.android.inputmethod.latin.DicTraverseSession: int[] mOutputScores>;

        $i14 = $r38[i3];

        $r44 = r6.<com.android.inputmethod.latin.DicTraverseSession: int[] mOutputTypes>;

        $i13 = $r44[i3];

        $r43 = r6.<com.android.inputmethod.latin.DicTraverseSession: int[] mSpaceIndices>;

        $i12 = $r43[i3];

        $r42 = r6.<com.android.inputmethod.latin.DicTraverseSession: int[] mOutputAutoCommitFirstWordConfidence>;

        $i9 = $r42[0];

        specialinvoke $r41.<com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo: void <init>(java.lang.String,int,int,com.android.inputmethod.latin.Dictionary,int,int)>($r40, $i14, $i13, r0, $i12, $i9);

        virtualinvoke r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r41);

     label10:
        i3 = i3 + 1;

        goto label07;

     label11:
        return r8;
    }

    public boolean isValidDictionary()
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        long $l0;
        byte $b1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        $l0 = r0.<com.android.inputmethod.latin.BinaryDictionary: long mNativeDict>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getFormatVersion()
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        long $l0;
        int $i1;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        $l0 = r0.<com.android.inputmethod.latin.BinaryDictionary: long mNativeDict>;

        $i1 = staticinvoke <com.android.inputmethod.latin.BinaryDictionary: int getFormatVersionNative(long)>($l0);

        return $i1;
    }

    public boolean isInDictionary(java.lang.String)
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        java.lang.String r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<com.android.inputmethod.latin.BinaryDictionary: int getFrequency(java.lang.String)>(r1);

        if $i0 == -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getFrequency(java.lang.String)
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        java.lang.String r1;
        int[] r2;
        boolean $z0;
        long $l0;
        int $i1;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        return -1;

     label1:
        r2 = staticinvoke <com.android.inputmethod.latin.utils.StringUtils: int[] toCodePointArray(java.lang.CharSequence)>(r1);

        $l0 = r0.<com.android.inputmethod.latin.BinaryDictionary: long mNativeDict>;

        $i1 = staticinvoke <com.android.inputmethod.latin.BinaryDictionary: int getProbabilityNative(long,int[])>($l0, r2);

        return $i1;
    }

    public int getMaxFrequencyOfExactMatches(java.lang.String)
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        java.lang.String r1;
        int[] r2;
        boolean $z0;
        long $l0;
        int $i1;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        return -1;

     label1:
        r2 = staticinvoke <com.android.inputmethod.latin.utils.StringUtils: int[] toCodePointArray(java.lang.CharSequence)>(r1);

        $l0 = r0.<com.android.inputmethod.latin.BinaryDictionary: long mNativeDict>;

        $i1 = staticinvoke <com.android.inputmethod.latin.BinaryDictionary: int getMaxProbabilityOfExactMatchesNative(long,int[])>($l0, r2);

        return $i1;
    }

    public boolean isValidNgram(com.android.inputmethod.latin.PrevWordsInfo, java.lang.String)
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        com.android.inputmethod.latin.PrevWordsInfo r1;
        java.lang.String r2;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        r1 := @parameter0: com.android.inputmethod.latin.PrevWordsInfo;

        r2 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<com.android.inputmethod.latin.BinaryDictionary: int getNgramProbability(com.android.inputmethod.latin.PrevWordsInfo,java.lang.String)>(r1, r2);

        if $i0 == -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getNgramProbability(com.android.inputmethod.latin.PrevWordsInfo, java.lang.String)
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        com.android.inputmethod.latin.PrevWordsInfo r1;
        java.lang.String r2;
        int[][] r3;
        boolean[] r4;
        int[] r5;
        boolean $z0, $z1;
        long $l0;
        int $i1;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        r1 := @parameter0: com.android.inputmethod.latin.PrevWordsInfo;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r1.<com.android.inputmethod.latin.PrevWordsInfo: boolean isValid()>();

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 == 0 goto label2;

     label1:
        return -1;

     label2:
        r3 = newarray (int[])[2];

        r4 = newarray (boolean)[2];

        virtualinvoke r1.<com.android.inputmethod.latin.PrevWordsInfo: void outputToArray(int[][],boolean[])>(r3, r4);

        r5 = staticinvoke <com.android.inputmethod.latin.utils.StringUtils: int[] toCodePointArray(java.lang.CharSequence)>(r2);

        $l0 = r0.<com.android.inputmethod.latin.BinaryDictionary: long mNativeDict>;

        $i1 = staticinvoke <com.android.inputmethod.latin.BinaryDictionary: int getNgramProbabilityNative(long,int[][],boolean[],int[])>($l0, r3, r4, r5);

        return $i1;
    }

    public com.android.inputmethod.latin.makedict.WordProperty getWordProperty(java.lang.String, boolean)
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        java.lang.String r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        int[] r2, r3, r5;
        boolean[] r4;
        java.util.ArrayList r6, r7, r8, r9, $r10, $r11, $r12, $r13;
        com.android.inputmethod.latin.makedict.WordProperty $r14;
        long $l0;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if r1 != null goto label1;

        return null;

     label1:
        r2 = staticinvoke <com.android.inputmethod.latin.utils.StringUtils: int[] toCodePointArray(java.lang.CharSequence)>(r1);

        r3 = newarray (int)[48];

        r4 = newarray (boolean)[5];

        r5 = newarray (int)[4];

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r6 = $r10;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r7 = $r11;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r8 = $r12;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r9 = $r13;

        $l0 = r0.<com.android.inputmethod.latin.BinaryDictionary: long mNativeDict>;

        staticinvoke <com.android.inputmethod.latin.BinaryDictionary: void getWordPropertyNative(long,int[],boolean,int[],boolean[],int[],java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>($l0, r2, z0, r3, r4, r5, r6, r7, r8, r9);

        $r14 = new com.android.inputmethod.latin.makedict.WordProperty;

        $z5 = r4[0];

        $z3 = r4[1];

        $z4 = r4[2];

        $z1 = r4[3];

        $z2 = r4[4];

        specialinvoke $r14.<com.android.inputmethod.latin.makedict.WordProperty: void <init>(int[],boolean,boolean,boolean,boolean,boolean,int[],java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>(r2, $z5, $z3, $z4, $z1, $z2, r5, r6, r7, r8, r9);

        return $r14;
    }

    public com.android.inputmethod.latin.BinaryDictionary$GetNextWordPropertyResult getNextWordProperty(int)
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        int i0, i1;
        int[] r1;
        boolean[] r2;
        java.lang.String r3;
        long $l2;
        com.android.inputmethod.latin.BinaryDictionary$GetNextWordPropertyResult $r4;
        boolean $z0;
        com.android.inputmethod.latin.makedict.WordProperty $r5;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        i0 := @parameter0: int;

        r1 = newarray (int)[48];

        r2 = newarray (boolean)[1];

        $l2 = r0.<com.android.inputmethod.latin.BinaryDictionary: long mNativeDict>;

        i1 = staticinvoke <com.android.inputmethod.latin.BinaryDictionary: int getNextWordNative(long,int,int[],boolean[])>($l2, i0, r1, r2);

        r3 = staticinvoke <com.android.inputmethod.latin.utils.StringUtils: java.lang.String getStringFromNullTerminatedCodePointArray(int[])>(r1);

        $r4 = new com.android.inputmethod.latin.BinaryDictionary$GetNextWordPropertyResult;

        $z0 = r2[0];

        $r5 = virtualinvoke r0.<com.android.inputmethod.latin.BinaryDictionary: com.android.inputmethod.latin.makedict.WordProperty getWordProperty(java.lang.String,boolean)>(r3, $z0);

        specialinvoke $r4.<com.android.inputmethod.latin.BinaryDictionary$GetNextWordPropertyResult: void <init>(com.android.inputmethod.latin.makedict.WordProperty,int)>($r5, i1);

        return $r4;
    }

    public boolean addUnigramEntry(java.lang.String, int, java.lang.String, int, boolean, boolean, boolean, int)
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        java.lang.String r1, r2;
        int i0, i1, i2;
        boolean z0, z1, z2, $z3, $z4;
        int[] r3, r4, $r5;
        long $l3;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        z2 := @parameter6: boolean;

        i2 := @parameter7: int;

        if r1 == null goto label1;

        $z3 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z3 == 0 goto label2;

        if z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        r3 = staticinvoke <com.android.inputmethod.latin.utils.StringUtils: int[] toCodePointArray(java.lang.CharSequence)>(r1);

        if r2 == null goto label3;

        $r5 = staticinvoke <com.android.inputmethod.latin.utils.StringUtils: int[] toCodePointArray(java.lang.CharSequence)>(r2);

        goto label4;

     label3:
        $r5 = null;

     label4:
        r4 = $r5;

        $l3 = r0.<com.android.inputmethod.latin.BinaryDictionary: long mNativeDict>;

        $z4 = staticinvoke <com.android.inputmethod.latin.BinaryDictionary: boolean addUnigramEntryNative(long,int[],int,int[],int,boolean,boolean,boolean,int)>($l3, r3, i0, r4, i1, z0, z1, z2, i2);

        if $z4 != 0 goto label5;

        return 0;

     label5:
        r0.<com.android.inputmethod.latin.BinaryDictionary: boolean mHasUpdated> = 1;

        return 1;
    }

    public boolean removeUnigramEntry(java.lang.String)
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        java.lang.String r1;
        int[] r2;
        boolean $z0, $z1;
        long $l0;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        r2 = staticinvoke <com.android.inputmethod.latin.utils.StringUtils: int[] toCodePointArray(java.lang.CharSequence)>(r1);

        $l0 = r0.<com.android.inputmethod.latin.BinaryDictionary: long mNativeDict>;

        $z1 = staticinvoke <com.android.inputmethod.latin.BinaryDictionary: boolean removeUnigramEntryNative(long,int[])>($l0, r2);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        r0.<com.android.inputmethod.latin.BinaryDictionary: boolean mHasUpdated> = 1;

        return 1;
    }

    public boolean addNgramEntry(com.android.inputmethod.latin.PrevWordsInfo, java.lang.String, int, int)
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        com.android.inputmethod.latin.PrevWordsInfo r1;
        java.lang.String r2;
        int i0, i1;
        int[][] r3;
        boolean[] r4;
        int[] r5;
        boolean $z0, $z1, $z2;
        long $l2;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        r1 := @parameter0: com.android.inputmethod.latin.PrevWordsInfo;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $z0 = virtualinvoke r1.<com.android.inputmethod.latin.PrevWordsInfo: boolean isValid()>();

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 == 0 goto label2;

     label1:
        return 0;

     label2:
        r3 = newarray (int[])[2];

        r4 = newarray (boolean)[2];

        virtualinvoke r1.<com.android.inputmethod.latin.PrevWordsInfo: void outputToArray(int[][],boolean[])>(r3, r4);

        r5 = staticinvoke <com.android.inputmethod.latin.utils.StringUtils: int[] toCodePointArray(java.lang.CharSequence)>(r2);

        $l2 = r0.<com.android.inputmethod.latin.BinaryDictionary: long mNativeDict>;

        $z2 = staticinvoke <com.android.inputmethod.latin.BinaryDictionary: boolean addNgramEntryNative(long,int[][],boolean[],int[],int,int)>($l2, r3, r4, r5, i0, i1);

        if $z2 != 0 goto label3;

        return 0;

     label3:
        r0.<com.android.inputmethod.latin.BinaryDictionary: boolean mHasUpdated> = 1;

        return 1;
    }

    public boolean removeNgramEntry(com.android.inputmethod.latin.PrevWordsInfo, java.lang.String)
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        com.android.inputmethod.latin.PrevWordsInfo r1;
        java.lang.String r2;
        int[][] r3;
        boolean[] r4;
        int[] r5;
        boolean $z0, $z1, $z2;
        long $l0;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        r1 := @parameter0: com.android.inputmethod.latin.PrevWordsInfo;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r1.<com.android.inputmethod.latin.PrevWordsInfo: boolean isValid()>();

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 == 0 goto label2;

     label1:
        return 0;

     label2:
        r3 = newarray (int[])[2];

        r4 = newarray (boolean)[2];

        virtualinvoke r1.<com.android.inputmethod.latin.PrevWordsInfo: void outputToArray(int[][],boolean[])>(r3, r4);

        r5 = staticinvoke <com.android.inputmethod.latin.utils.StringUtils: int[] toCodePointArray(java.lang.CharSequence)>(r2);

        $l0 = r0.<com.android.inputmethod.latin.BinaryDictionary: long mNativeDict>;

        $z2 = staticinvoke <com.android.inputmethod.latin.BinaryDictionary: boolean removeNgramEntryNative(long,int[][],boolean[],int[])>($l0, r3, r4, r5);

        if $z2 != 0 goto label3;

        return 0;

     label3:
        r0.<com.android.inputmethod.latin.BinaryDictionary: boolean mHasUpdated> = 1;

        return 1;
    }

    public void addMultipleDictionaryEntries(com.android.inputmethod.latin.utils.LanguageModelParam[])
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        com.android.inputmethod.latin.utils.LanguageModelParam[] r1;
        int i0, $i1;
        boolean $z0, $z1;
        long $l2;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        r1 := @parameter0: com.android.inputmethod.latin.utils.LanguageModelParam[];

        $z0 = virtualinvoke r0.<com.android.inputmethod.latin.BinaryDictionary: boolean isValidDictionary()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        i0 = 0;

     label2:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label4;

        $z1 = virtualinvoke r0.<com.android.inputmethod.latin.BinaryDictionary: boolean needsToRunGC(boolean)>(1);

        if $z1 == 0 goto label3;

        virtualinvoke r0.<com.android.inputmethod.latin.BinaryDictionary: boolean flushWithGC()>();

     label3:
        $l2 = r0.<com.android.inputmethod.latin.BinaryDictionary: long mNativeDict>;

        i0 = staticinvoke <com.android.inputmethod.latin.BinaryDictionary: int addMultipleDictionaryEntriesNative(long,com.android.inputmethod.latin.utils.LanguageModelParam[],int)>($l2, r1, i0);

        r0.<com.android.inputmethod.latin.BinaryDictionary: boolean mHasUpdated> = 1;

        if i0 > 0 goto label2;

        return;

     label4:
        return;
    }

    private void reopen()
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        java.io.File r1, $r2;
        java.lang.String $r3, $r4;
        long $l0;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        virtualinvoke r0.<com.android.inputmethod.latin.BinaryDictionary: void close()>();

        $r2 = new java.io.File;

        $r3 = r0.<com.android.inputmethod.latin.BinaryDictionary: java.lang.String mDictFilePath>;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3);

        r1 = $r2;

        $r4 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $l0 = virtualinvoke r1.<java.io.File: long length()>();

        $z0 = r0.<com.android.inputmethod.latin.BinaryDictionary: boolean mIsUpdatable>;

        specialinvoke r0.<com.android.inputmethod.latin.BinaryDictionary: void loadDictionary(java.lang.String,long,long,boolean)>($r4, 0L, $l0, $z0);

        return;
    }

    public boolean flush()
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        boolean $z0, $z1, $z2;
        java.lang.String $r1;
        long $l0;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        $z0 = virtualinvoke r0.<com.android.inputmethod.latin.BinaryDictionary: boolean isValidDictionary()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = r0.<com.android.inputmethod.latin.BinaryDictionary: boolean mHasUpdated>;

        if $z1 == 0 goto label3;

        $l0 = r0.<com.android.inputmethod.latin.BinaryDictionary: long mNativeDict>;

        $r1 = r0.<com.android.inputmethod.latin.BinaryDictionary: java.lang.String mDictFilePath>;

        $z2 = staticinvoke <com.android.inputmethod.latin.BinaryDictionary: boolean flushNative(long,java.lang.String)>($l0, $r1);

        if $z2 != 0 goto label2;

        return 0;

     label2:
        specialinvoke r0.<com.android.inputmethod.latin.BinaryDictionary: void reopen()>();

     label3:
        return 1;
    }

    public boolean flushWithGCIfHasUpdated()
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        boolean $z0, $z1;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        $z0 = r0.<com.android.inputmethod.latin.BinaryDictionary: boolean mHasUpdated>;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<com.android.inputmethod.latin.BinaryDictionary: boolean flushWithGC()>();

        return $z1;

     label1:
        return 1;
    }

    public boolean flushWithGC()
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        boolean $z0, $z1;
        java.lang.String $r1;
        long $l0;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        $z0 = virtualinvoke r0.<com.android.inputmethod.latin.BinaryDictionary: boolean isValidDictionary()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $l0 = r0.<com.android.inputmethod.latin.BinaryDictionary: long mNativeDict>;

        $r1 = r0.<com.android.inputmethod.latin.BinaryDictionary: java.lang.String mDictFilePath>;

        $z1 = staticinvoke <com.android.inputmethod.latin.BinaryDictionary: boolean flushWithGCNative(long,java.lang.String)>($l0, $r1);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        specialinvoke r0.<com.android.inputmethod.latin.BinaryDictionary: void reopen()>();

        return 1;
    }

    public boolean needsToRunGC(boolean)
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        boolean z0, $z1, $z2;
        long $l0;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<com.android.inputmethod.latin.BinaryDictionary: boolean isValidDictionary()>();

        if $z1 != 0 goto label1;

        return 0;

     label1:
        $l0 = r0.<com.android.inputmethod.latin.BinaryDictionary: long mNativeDict>;

        $z2 = staticinvoke <com.android.inputmethod.latin.BinaryDictionary: boolean needsToRunGCNative(long,boolean)>($l0, z0);

        return $z2;
    }

    public boolean migrateTo(int)
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        int i0;
        java.io.File r1, r3, $r5, $r15, $r16, r34;
        java.lang.String r2, $r7, $r10, $r13, $r17, $r18, $r20, $r24, $r26, $r28, $r30, $r32;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z10, z15, z16;
        java.lang.Throwable r4, $r31;
        java.lang.StringBuilder $r6, $r8, $r9, $r11, $r12, $r14, $r19, $r21, $r22, $r23, $r25, $r27, $r29, $r33;
        long $l1, $l2, $l3;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        i0 := @parameter0: int;

        $z2 = virtualinvoke r0.<com.android.inputmethod.latin.BinaryDictionary: boolean isValidDictionary()>();

        if $z2 != 0 goto label01;

        return 0;

     label01:
        $r5 = new java.io.File;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = r0.<com.android.inputmethod.latin.BinaryDictionary: java.lang.String mDictFilePath>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".migrating");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r10);

        r1 = $r5;

        $z3 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z3 == 0 goto label02;

        virtualinvoke r1.<java.io.File: boolean delete()>();

        $r30 = <com.android.inputmethod.latin.BinaryDictionary: java.lang.String TAG>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Previous migration attempt failed probably due to a crash. Giving up using the old dictionary (");

        $r28 = r0.<com.android.inputmethod.latin.BinaryDictionary: java.lang.String mDictFilePath>;

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r33 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r30, $r32);

        return 0;

     label02:
        $z4 = virtualinvoke r1.<java.io.File: boolean mkdir()>();

        if $z4 != 0 goto label03;

        $r20 = <com.android.inputmethod.latin.BinaryDictionary: java.lang.String TAG>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create a dir (");

        $r24 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") to record migration.");

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r20, $r26);

        return 0;

     label03:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = r0.<com.android.inputmethod.latin.BinaryDictionary: java.lang.String mDictFilePath>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".migrate");

        r2 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $l1 = r0.<com.android.inputmethod.latin.BinaryDictionary: long mNativeDict>;

        $l2 = (long) i0;

        $z5 = staticinvoke <com.android.inputmethod.latin.BinaryDictionary: boolean migrateNative(long,java.lang.String,long)>($l1, r2, $l2);

        if $z5 != 0 goto label05;

        z0 = 0;

     label04:
        virtualinvoke r1.<java.io.File: boolean delete()>();

        return z0;

     label05:
        virtualinvoke r0.<com.android.inputmethod.latin.BinaryDictionary: void close()>();

        $r15 = new java.io.File;

        $r17 = r0.<com.android.inputmethod.latin.BinaryDictionary: java.lang.String mDictFilePath>;

        specialinvoke $r15.<java.io.File: void <init>(java.lang.String)>($r17);

        r34 = $r15;

        $r16 = new java.io.File;

        specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>(r2);

        r3 = $r16;

        $z7 = staticinvoke <com.android.inputmethod.latin.utils.FileUtils: boolean deleteRecursively(java.io.File)>(r34);

        if $z7 != 0 goto label07;

        z1 = 0;

     label06:
        virtualinvoke r1.<java.io.File: boolean delete()>();

        return z1;

     label07:
        $z6 = staticinvoke <com.android.inputmethod.latin.utils.BinaryDictionaryUtils: boolean renameDict(java.io.File,java.io.File)>(r3, r34);

        if $z6 != 0 goto label09;

        z15 = 0;

     label08:
        virtualinvoke r1.<java.io.File: boolean delete()>();

        return z15;

     label09:
        $r18 = virtualinvoke r34.<java.io.File: java.lang.String getAbsolutePath()>();

        $l3 = virtualinvoke r34.<java.io.File: long length()>();

        $z10 = r0.<com.android.inputmethod.latin.BinaryDictionary: boolean mIsUpdatable>;

        specialinvoke r0.<com.android.inputmethod.latin.BinaryDictionary: void loadDictionary(java.lang.String,long,long,boolean)>($r18, 0L, $l3, $z10);

        z16 = 1;

     label10:
        virtualinvoke r1.<java.io.File: boolean delete()>();

        return z16;

     label11:
        $r31 := @caughtexception;

        r4 = $r31;

     label12:
        virtualinvoke r1.<java.io.File: boolean delete()>();

        throw r4;

        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public java.lang.String getPropertyForTest(java.lang.String)
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        java.lang.String r1, $r2;
        boolean $z0;
        long $l0;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.android.inputmethod.latin.BinaryDictionary: boolean isValidDictionary()>();

        if $z0 != 0 goto label1;

        return "";

     label1:
        $l0 = r0.<com.android.inputmethod.latin.BinaryDictionary: long mNativeDict>;

        $r2 = staticinvoke <com.android.inputmethod.latin.BinaryDictionary: java.lang.String getPropertyNative(long,java.lang.String)>($l0, r1);

        return $r2;
    }

    public boolean shouldAutoCommit(com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo)
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        r1 := @parameter0: com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo;

        $i0 = r1.<com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo: int mAutoCommitFirstWordConfidence>;

        if $i0 <= 1000000 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void close()
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        android.util.SparseArray r1, $r4, $r5, $r6, $r7;
        int i0, i1;
        com.android.inputmethod.latin.DicTraverseSession r2;
        java.lang.Throwable r3, $r9;
        java.lang.Object $r8;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        $r4 = r0.<com.android.inputmethod.latin.BinaryDictionary: android.util.SparseArray mDicTraverseSessions>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.inputmethod.latin.BinaryDictionary: android.util.SparseArray mDicTraverseSessions>;

        i0 = virtualinvoke $r5.<android.util.SparseArray: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r7 = r0.<com.android.inputmethod.latin.BinaryDictionary: android.util.SparseArray mDicTraverseSessions>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r2 = (com.android.inputmethod.latin.DicTraverseSession) $r8;

        if r2 == null goto label3;

        virtualinvoke r2.<com.android.inputmethod.latin.DicTraverseSession: void close()>();

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $r6 = r0.<com.android.inputmethod.latin.BinaryDictionary: android.util.SparseArray mDicTraverseSessions>;

        virtualinvoke $r6.<android.util.SparseArray: void clear()>();

        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r1;

     label7:
        throw r3;

     label8:
        specialinvoke r0.<com.android.inputmethod.latin.BinaryDictionary: void closeInternalLocked()>();

        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private synchronized void closeInternalLocked()
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

        $l0 = r0.<com.android.inputmethod.latin.BinaryDictionary: long mNativeDict>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $l2 = r0.<com.android.inputmethod.latin.BinaryDictionary: long mNativeDict>;

        staticinvoke <com.android.inputmethod.latin.BinaryDictionary: void closeNative(long)>($l2);

        r0.<com.android.inputmethod.latin.BinaryDictionary: long mNativeDict> = 0L;

     label1:
        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        com.android.inputmethod.latin.BinaryDictionary r0;
        java.lang.Throwable r1, $r2;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionary;

     label1:
        specialinvoke r0.<com.android.inputmethod.latin.BinaryDictionary: void closeInternalLocked()>();

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        goto label5;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.inputmethod.latin.BinaryDictionary: java.lang.String DIR_NAME_SUFFIX_FOR_RECORD_MIGRATION> = ".migrating";

        <com.android.inputmethod.latin.BinaryDictionary: java.lang.String DICT_FILE_NAME_SUFFIX_FOR_MIGRATION> = ".migrate";

        <com.android.inputmethod.latin.BinaryDictionary: int FORMAT_WORD_PROPERTY_COUNT_INDEX> = 3;

        <com.android.inputmethod.latin.BinaryDictionary: int FORMAT_WORD_PROPERTY_LEVEL_INDEX> = 2;

        <com.android.inputmethod.latin.BinaryDictionary: int FORMAT_WORD_PROPERTY_TIMESTAMP_INDEX> = 1;

        <com.android.inputmethod.latin.BinaryDictionary: int FORMAT_WORD_PROPERTY_PROBABILITY_INDEX> = 0;

        <com.android.inputmethod.latin.BinaryDictionary: int FORMAT_WORD_PROPERTY_OUTPUT_PROBABILITY_INFO_COUNT> = 4;

        <com.android.inputmethod.latin.BinaryDictionary: int FORMAT_WORD_PROPERTY_IS_BEGINNING_OF_SENTENCE_INDEX> = 4;

        <com.android.inputmethod.latin.BinaryDictionary: int FORMAT_WORD_PROPERTY_HAS_SHORTCUTS_INDEX> = 3;

        <com.android.inputmethod.latin.BinaryDictionary: int FORMAT_WORD_PROPERTY_HAS_BIGRAMS_INDEX> = 2;

        <com.android.inputmethod.latin.BinaryDictionary: int FORMAT_WORD_PROPERTY_IS_BLACKLISTED_INDEX> = 1;

        <com.android.inputmethod.latin.BinaryDictionary: int FORMAT_WORD_PROPERTY_IS_NOT_A_WORD_INDEX> = 0;

        <com.android.inputmethod.latin.BinaryDictionary: int FORMAT_WORD_PROPERTY_OUTPUT_FLAG_COUNT> = 5;

        <com.android.inputmethod.latin.BinaryDictionary: int NOT_A_VALID_TIMESTAMP> = -1;

        <com.android.inputmethod.latin.BinaryDictionary: java.lang.String MAX_BIGRAM_COUNT_QUERY> = "MAX_BIGRAM_COUNT";

        <com.android.inputmethod.latin.BinaryDictionary: java.lang.String MAX_UNIGRAM_COUNT_QUERY> = "MAX_UNIGRAM_COUNT";

        <com.android.inputmethod.latin.BinaryDictionary: java.lang.String BIGRAM_COUNT_QUERY> = "BIGRAM_COUNT";

        <com.android.inputmethod.latin.BinaryDictionary: java.lang.String UNIGRAM_COUNT_QUERY> = "UNIGRAM_COUNT";

        <com.android.inputmethod.latin.BinaryDictionary: int CONFIDENCE_TO_AUTO_COMMIT> = 1000000;

        $r0 = class "com/android/inputmethod/latin/BinaryDictionary";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.inputmethod.latin.BinaryDictionary: java.lang.String TAG> = $r1;

        staticinvoke <com.android.inputmethod.latin.utils.JniUtils: void loadNativeLibrary()>();

        return;
    }
}
