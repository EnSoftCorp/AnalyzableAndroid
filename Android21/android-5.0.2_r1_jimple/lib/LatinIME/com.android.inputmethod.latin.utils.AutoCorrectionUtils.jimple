public final class com.android.inputmethod.latin.utils.AutoCorrectionUtils extends java.lang.Object
{
    private static final boolean DBG;
    private static final java.lang.String TAG;
    private static final int MINIMUM_SAFETY_NET_CHAR_LENGTH;

    private void <init>()
    {
        com.android.inputmethod.latin.utils.AutoCorrectionUtils r0;

        r0 := @this: com.android.inputmethod.latin.utils.AutoCorrectionUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean suggestionExceedsAutoCorrectionThreshold(com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo, java.lang.String, float)
    {
        com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo r0;
        java.lang.String r1, $r2, $r3;
        float f0, f1;
        int i0;
        boolean $z0, $z1, $z2;
        byte $b1;

        r0 := @parameter0: com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo;

        r1 := @parameter1: java.lang.String;

        f0 := @parameter2: float;

        if null == r0 goto label4;

        $z0 = virtualinvoke r0.<com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo: boolean isKindOf(int)>(3);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        i0 = r0.<com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo: int mScore>;

        $r2 = r0.<com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo: java.lang.String mWord>;

        f1 = staticinvoke <com.android.inputmethod.latin.utils.BinaryDictionaryUtils: float calcNormalizedScore(java.lang.String,java.lang.String,int)>(r1, $r2, i0);

        $b1 = f1 cmpl f0;

        if $b1 < 0 goto label4;

        $r3 = r0.<com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo: java.lang.String mWord>;

        $z1 = staticinvoke <com.android.inputmethod.latin.utils.AutoCorrectionUtils: boolean shouldBlockAutoCorrectionBySafetyNet(java.lang.String,java.lang.String)>(r1, $r3);

        if $z1 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;

     label4:
        return 0;
    }

    public static boolean shouldBlockAutoCorrectionBySafetyNet(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        int i0, i1, i2, $i3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 >= 4 goto label1;

        return 0;

     label1:
        $i3 = i0 / 2;

        i1 = $i3 + 1;

        i2 = staticinvoke <com.android.inputmethod.latin.utils.BinaryDictionaryUtils: int editDistance(java.lang.String,java.lang.String)>(r0, r1);

        if i2 <= i1 goto label2;

        return 1;

     label2:
        return 0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.inputmethod.latin.utils.AutoCorrectionUtils: int MINIMUM_SAFETY_NET_CHAR_LENGTH> = 4;

        <com.android.inputmethod.latin.utils.AutoCorrectionUtils: boolean DBG> = 0;

        $r0 = class "com/android/inputmethod/latin/utils/AutoCorrectionUtils";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.inputmethod.latin.utils.AutoCorrectionUtils: java.lang.String TAG> = $r1;

        return;
    }
}
