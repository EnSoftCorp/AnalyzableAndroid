public class com.android.inputmethod.latin.utils.ScriptUtils extends java.lang.Object
{
    public static final int SCRIPT_UNKNOWN;
    public static final int SCRIPT_ARABIC;
    public static final int SCRIPT_ARMENIAN;
    public static final int SCRIPT_BENGALI;
    public static final int SCRIPT_CYRILLIC;
    public static final int SCRIPT_DEVANAGARI;
    public static final int SCRIPT_GEORGIAN;
    public static final int SCRIPT_GREEK;
    public static final int SCRIPT_HEBREW;
    public static final int SCRIPT_KANNADA;
    public static final int SCRIPT_KHMER;
    public static final int SCRIPT_LAO;
    public static final int SCRIPT_LATIN;
    public static final int SCRIPT_MALAYALAM;
    public static final int SCRIPT_MYANMAR;
    public static final int SCRIPT_SINHALA;
    public static final int SCRIPT_TAMIL;
    public static final int SCRIPT_TELUGU;
    public static final int SCRIPT_THAI;
    public static final java.util.TreeMap mSpellCheckerLanguageToScript;

    public void <init>()
    {
        com.android.inputmethod.latin.utils.ScriptUtils r0;

        r0 := @this: com.android.inputmethod.latin.utils.ScriptUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isLetterPartOfScript(int, int)
    {
        int i0, i1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        java.lang.StringBuilder $r0, $r2, $r3;
        java.lang.RuntimeException $r1;
        java.lang.String $r4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        tableswitch(i1)
        {
            case -1: goto label74;
            case 0: goto label01;
            case 1: goto label09;
            case 2: goto label14;
            case 3: goto label17;
            case 4: goto label20;
            case 5: goto label23;
            case 6: goto label28;
            case 7: goto label34;
            case 8: goto label39;
            case 9: goto label42;
            case 10: goto label47;
            case 11: goto label50;
            case 12: goto label53;
            case 13: goto label56;
            case 14: goto label62;
            case 15: goto label65;
            case 16: goto label68;
            case 17: goto label71;
            default: goto label75;
        };

     label01:
        if i0 < 1536 goto label02;

        if i0 <= 1791 goto label06;

     label02:
        if i0 < 1872 goto label03;

        if i0 <= 1983 goto label06;

     label03:
        if i0 < 2208 goto label04;

        if i0 <= 2303 goto label06;

     label04:
        if i0 < 64336 goto label05;

        if i0 <= 65023 goto label06;

     label05:
        if i0 < 65136 goto label07;

        if i0 > 65279 goto label07;

     label06:
        $z0 = 1;

        goto label08;

     label07:
        $z0 = 0;

     label08:
        return $z0;

     label09:
        if i0 < 1328 goto label10;

        if i0 <= 1423 goto label11;

     label10:
        if i0 < 64275 goto label12;

        if i0 > 64279 goto label12;

     label11:
        $z18 = 1;

        goto label13;

     label12:
        $z18 = 0;

     label13:
        return $z18;

     label14:
        if i0 < 2432 goto label15;

        if i0 > 2559 goto label15;

        $z19 = 1;

        goto label16;

     label15:
        $z19 = 0;

     label16:
        return $z19;

     label17:
        if i0 < 1024 goto label18;

        if i0 > 1327 goto label18;

        $z17 = staticinvoke <java.lang.Character: boolean isLetter(int)>(i0);

        if $z17 == 0 goto label18;

        $z16 = 1;

        goto label19;

     label18:
        $z16 = 0;

     label19:
        return $z16;

     label20:
        if i0 < 2304 goto label21;

        if i0 > 2431 goto label21;

        $z14 = 1;

        goto label22;

     label21:
        $z14 = 0;

     label22:
        return $z14;

     label23:
        if i0 < 4256 goto label24;

        if i0 <= 4351 goto label25;

     label24:
        if i0 < 11520 goto label26;

        if i0 > 11567 goto label26;

     label25:
        $z15 = 1;

        goto label27;

     label26:
        $z15 = 0;

     label27:
        return $z15;

     label28:
        if i0 < 880 goto label29;

        if i0 <= 1023 goto label31;

     label29:
        if i0 < 7936 goto label30;

        if i0 <= 8191 goto label31;

     label30:
        if i0 != 242 goto label32;

     label31:
        $z13 = 1;

        goto label33;

     label32:
        $z13 = 0;

     label33:
        return $z13;

     label34:
        if i0 < 1424 goto label35;

        if i0 <= 1535 goto label36;

     label35:
        if i0 < 64285 goto label37;

        if i0 > 64335 goto label37;

     label36:
        $z12 = 1;

        goto label38;

     label37:
        $z12 = 0;

     label38:
        return $z12;

     label39:
        if i0 < 3200 goto label40;

        if i0 > 3327 goto label40;

        $z11 = 1;

        goto label41;

     label40:
        $z11 = 0;

     label41:
        return $z11;

     label42:
        if i0 < 6016 goto label43;

        if i0 <= 6143 goto label44;

     label43:
        if i0 < 6624 goto label45;

        if i0 > 6655 goto label45;

     label44:
        $z10 = 1;

        goto label46;

     label45:
        $z10 = 0;

     label46:
        return $z10;

     label47:
        if i0 < 3712 goto label48;

        if i0 > 3839 goto label48;

        $z9 = 1;

        goto label49;

     label48:
        $z9 = 0;

     label49:
        return $z9;

     label50:
        if i0 > 687 goto label51;

        $z7 = staticinvoke <java.lang.Character: boolean isLetter(int)>(i0);

        if $z7 == 0 goto label51;

        $z8 = 1;

        goto label52;

     label51:
        $z8 = 0;

     label52:
        return $z8;

     label53:
        if i0 < 3328 goto label54;

        if i0 > 3455 goto label54;

        $z6 = 1;

        goto label55;

     label54:
        $z6 = 0;

     label55:
        return $z6;

     label56:
        if i0 < 4096 goto label57;

        if i0 <= 4255 goto label59;

     label57:
        if i0 < 43616 goto label58;

        if i0 <= 43647 goto label59;

     label58:
        if i0 < 43488 goto label60;

        if i0 > 43519 goto label60;

     label59:
        $z5 = 1;

        goto label61;

     label60:
        $z5 = 0;

     label61:
        return $z5;

     label62:
        if i0 < 3456 goto label63;

        if i0 > 3583 goto label63;

        $z4 = 1;

        goto label64;

     label63:
        $z4 = 0;

     label64:
        return $z4;

     label65:
        if i0 < 2944 goto label66;

        if i0 > 3071 goto label66;

        $z3 = 1;

        goto label67;

     label66:
        $z3 = 0;

     label67:
        return $z3;

     label68:
        if i0 < 3072 goto label69;

        if i0 > 3199 goto label69;

        $z2 = 1;

        goto label70;

     label69:
        $z2 = 0;

     label70:
        return $z2;

     label71:
        if i0 < 3584 goto label72;

        if i0 > 3711 goto label72;

        $z1 = 1;

        goto label73;

     label72:
        $z1 = 0;

     label73:
        return $z1;

     label74:
        return 1;

     label75:
        $r1 = new java.lang.RuntimeException;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Impossible value of script: ");

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r1;
    }

    public static int getScriptFromSpellCheckerLocale(java.util.Locale)
    {
        java.util.Locale r0;
        java.lang.Integer r1;
        java.util.TreeMap $r2;
        java.lang.String $r3, $r8, $r11;
        java.lang.Object $r4;
        int $i0;
        java.lang.RuntimeException $r5;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;

        r0 := @parameter0: java.util.Locale;

        $r2 = <com.android.inputmethod.latin.utils.ScriptUtils: java.util.TreeMap mSpellCheckerLanguageToScript>;

        $r3 = virtualinvoke r0.<java.util.Locale: java.lang.String getLanguage()>();

        $r4 = virtualinvoke $r2.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r3);

        r1 = (java.lang.Integer) $r4;

        if null != r1 goto label1;

        $r5 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("We have been called with an unsupported language: \"");

        $r8 = virtualinvoke r0.<java.util.Locale: java.lang.String getLanguage()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\". Framework bug?");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label1:
        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    static void <clinit>()
    {
        java.util.TreeMap $r0, $r1, $r4, $r7, $r10, $r12, $r15, $r18, $r21, $r26, $r29, $r32, $r35, $r37, $r40, $r43, $r46, $r50;
        java.lang.Integer $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r24, $r27, $r30, $r33, $r36, $r39, $r42, $r45, $r51;

        <com.android.inputmethod.latin.utils.ScriptUtils: int SCRIPT_THAI> = 17;

        <com.android.inputmethod.latin.utils.ScriptUtils: int SCRIPT_TELUGU> = 16;

        <com.android.inputmethod.latin.utils.ScriptUtils: int SCRIPT_TAMIL> = 15;

        <com.android.inputmethod.latin.utils.ScriptUtils: int SCRIPT_SINHALA> = 14;

        <com.android.inputmethod.latin.utils.ScriptUtils: int SCRIPT_MYANMAR> = 13;

        <com.android.inputmethod.latin.utils.ScriptUtils: int SCRIPT_MALAYALAM> = 12;

        <com.android.inputmethod.latin.utils.ScriptUtils: int SCRIPT_LATIN> = 11;

        <com.android.inputmethod.latin.utils.ScriptUtils: int SCRIPT_LAO> = 10;

        <com.android.inputmethod.latin.utils.ScriptUtils: int SCRIPT_KHMER> = 9;

        <com.android.inputmethod.latin.utils.ScriptUtils: int SCRIPT_KANNADA> = 8;

        <com.android.inputmethod.latin.utils.ScriptUtils: int SCRIPT_HEBREW> = 7;

        <com.android.inputmethod.latin.utils.ScriptUtils: int SCRIPT_GREEK> = 6;

        <com.android.inputmethod.latin.utils.ScriptUtils: int SCRIPT_GEORGIAN> = 5;

        <com.android.inputmethod.latin.utils.ScriptUtils: int SCRIPT_DEVANAGARI> = 4;

        <com.android.inputmethod.latin.utils.ScriptUtils: int SCRIPT_CYRILLIC> = 3;

        <com.android.inputmethod.latin.utils.ScriptUtils: int SCRIPT_BENGALI> = 2;

        <com.android.inputmethod.latin.utils.ScriptUtils: int SCRIPT_ARMENIAN> = 1;

        <com.android.inputmethod.latin.utils.ScriptUtils: int SCRIPT_ARABIC> = 0;

        <com.android.inputmethod.latin.utils.ScriptUtils: int SCRIPT_UNKNOWN> = -1;

        $r0 = new java.util.TreeMap;

        specialinvoke $r0.<java.util.TreeMap: void <init>()>();

        <com.android.inputmethod.latin.utils.ScriptUtils: java.util.TreeMap mSpellCheckerLanguageToScript> = $r0;

        $r1 = <com.android.inputmethod.latin.utils.ScriptUtils: java.util.TreeMap mSpellCheckerLanguageToScript>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        virtualinvoke $r1.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("cs", $r2);

        $r4 = <com.android.inputmethod.latin.utils.ScriptUtils: java.util.TreeMap mSpellCheckerLanguageToScript>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        virtualinvoke $r4.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("da", $r5);

        $r7 = <com.android.inputmethod.latin.utils.ScriptUtils: java.util.TreeMap mSpellCheckerLanguageToScript>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        virtualinvoke $r7.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("de", $r8);

        $r10 = <com.android.inputmethod.latin.utils.ScriptUtils: java.util.TreeMap mSpellCheckerLanguageToScript>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        virtualinvoke $r10.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("el", $r11);

        $r12 = <com.android.inputmethod.latin.utils.ScriptUtils: java.util.TreeMap mSpellCheckerLanguageToScript>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        virtualinvoke $r12.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("en", $r14);

        $r15 = <com.android.inputmethod.latin.utils.ScriptUtils: java.util.TreeMap mSpellCheckerLanguageToScript>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        virtualinvoke $r15.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("es", $r17);

        $r18 = <com.android.inputmethod.latin.utils.ScriptUtils: java.util.TreeMap mSpellCheckerLanguageToScript>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        virtualinvoke $r18.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("fi", $r20);

        $r21 = <com.android.inputmethod.latin.utils.ScriptUtils: java.util.TreeMap mSpellCheckerLanguageToScript>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        virtualinvoke $r21.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("fr", $r23);

        $r26 = <com.android.inputmethod.latin.utils.ScriptUtils: java.util.TreeMap mSpellCheckerLanguageToScript>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        virtualinvoke $r26.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("hr", $r24);

        $r29 = <com.android.inputmethod.latin.utils.ScriptUtils: java.util.TreeMap mSpellCheckerLanguageToScript>;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        virtualinvoke $r29.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("it", $r27);

        $r32 = <com.android.inputmethod.latin.utils.ScriptUtils: java.util.TreeMap mSpellCheckerLanguageToScript>;

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        virtualinvoke $r32.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("lt", $r30);

        $r35 = <com.android.inputmethod.latin.utils.ScriptUtils: java.util.TreeMap mSpellCheckerLanguageToScript>;

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        virtualinvoke $r35.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("lv", $r33);

        $r37 = <com.android.inputmethod.latin.utils.ScriptUtils: java.util.TreeMap mSpellCheckerLanguageToScript>;

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        virtualinvoke $r37.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("nb", $r36);

        $r40 = <com.android.inputmethod.latin.utils.ScriptUtils: java.util.TreeMap mSpellCheckerLanguageToScript>;

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        virtualinvoke $r40.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("nl", $r39);

        $r43 = <com.android.inputmethod.latin.utils.ScriptUtils: java.util.TreeMap mSpellCheckerLanguageToScript>;

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        virtualinvoke $r43.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("pt", $r42);

        $r46 = <com.android.inputmethod.latin.utils.ScriptUtils: java.util.TreeMap mSpellCheckerLanguageToScript>;

        $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        virtualinvoke $r46.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("sl", $r45);

        $r50 = <com.android.inputmethod.latin.utils.ScriptUtils: java.util.TreeMap mSpellCheckerLanguageToScript>;

        $r51 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        virtualinvoke $r50.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ru", $r51);

        return;
    }
}
