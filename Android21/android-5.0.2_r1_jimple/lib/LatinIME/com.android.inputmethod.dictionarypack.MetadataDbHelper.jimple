public class com.android.inputmethod.dictionarypack.MetadataDbHelper extends android.database.sqlite.SQLiteOpenHelper
{
    private static final java.lang.String TAG;
    private static final int METADATA_DATABASE_INITIAL_VERSION;
    private static final int METADATA_DATABASE_VERSION_WITH_CLIENTID;
    private static final int CURRENT_METADATA_DATABASE_VERSION;
    private static final long NOT_A_DOWNLOAD_ID;
    public static final java.lang.String METADATA_TABLE_NAME;
    static final java.lang.String CLIENT_TABLE_NAME;
    public static final java.lang.String PENDINGID_COLUMN;
    public static final java.lang.String TYPE_COLUMN;
    public static final java.lang.String STATUS_COLUMN;
    public static final java.lang.String LOCALE_COLUMN;
    public static final java.lang.String WORDLISTID_COLUMN;
    public static final java.lang.String DESCRIPTION_COLUMN;
    public static final java.lang.String LOCAL_FILENAME_COLUMN;
    public static final java.lang.String REMOTE_FILENAME_COLUMN;
    public static final java.lang.String DATE_COLUMN;
    public static final java.lang.String CHECKSUM_COLUMN;
    public static final java.lang.String FILESIZE_COLUMN;
    public static final java.lang.String VERSION_COLUMN;
    public static final java.lang.String FORMATVERSION_COLUMN;
    public static final java.lang.String FLAGS_COLUMN;
    public static final java.lang.String RAW_CHECKSUM_COLUMN;
    public static final int COLUMN_COUNT;
    private static final java.lang.String CLIENT_CLIENT_ID_COLUMN;
    private static final java.lang.String CLIENT_METADATA_URI_COLUMN;
    private static final java.lang.String CLIENT_METADATA_ADDITIONAL_ID_COLUMN;
    private static final java.lang.String CLIENT_LAST_UPDATE_DATE_COLUMN;
    private static final java.lang.String CLIENT_PENDINGID_COLUMN;
    public static final java.lang.String METADATA_DATABASE_NAME_STEM;
    public static final java.lang.String METADATA_UPDATE_DESCRIPTION;
    public static final java.lang.String DICTIONARIES_ASSETS_PATH;
    public static final int STATUS_UNKNOWN;
    public static final int STATUS_AVAILABLE;
    public static final int STATUS_DOWNLOADING;
    public static final int STATUS_INSTALLED;
    public static final int STATUS_DISABLED;
    public static final int STATUS_DELETING;
    public static final int TYPE_METADATA;
    public static final int TYPE_BULK;
    public static final int TYPE_UPDATE;
    private static final java.lang.String METADATA_TABLE_CREATE;
    private static final java.lang.String METADATA_CREATE_CLIENT_TABLE;
    static final java.lang.String[] METADATA_TABLE_COLUMNS;
    static final java.lang.String[] CLIENT_TABLE_COLUMNS;
    static final java.lang.String[] DICTIONARIES_LIST_PUBLIC_COLUMNS;
    private static java.util.TreeMap sInstanceMap;
    private final android.content.Context mContext;
    private final java.lang.String mClientId;

    public static synchronized com.android.inputmethod.dictionarypack.MetadataDbHelper getInstance(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r2, $r11;
        com.android.inputmethod.dictionarypack.MetadataDbHelper r3, $r7;
        java.util.TreeMap $r4, $r5, $r8, $r10;
        java.lang.Object $r6;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        if null == r1 goto label1;

        $r11 = r1;

        goto label2;

     label1:
        $r11 = "";

     label2:
        r2 = $r11;

        $r4 = <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.util.TreeMap sInstanceMap>;

        if null != $r4 goto label3;

        $r10 = new java.util.TreeMap;

        specialinvoke $r10.<java.util.TreeMap: void <init>()>();

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.util.TreeMap sInstanceMap> = $r10;

     label3:
        $r5 = <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.util.TreeMap sInstanceMap>;

        $r6 = virtualinvoke $r5.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (com.android.inputmethod.dictionarypack.MetadataDbHelper) $r6;

        if null != r3 goto label4;

        $r7 = new com.android.inputmethod.dictionarypack.MetadataDbHelper;

        specialinvoke $r7.<com.android.inputmethod.dictionarypack.MetadataDbHelper: void <init>(android.content.Context,java.lang.String)>(r0, r2);

        r3 = $r7;

        $r8 = <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.util.TreeMap sInstanceMap>;

        virtualinvoke $r8.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

     label4:
        return r3;
    }

    private void <init>(android.content.Context, java.lang.String)
    {
        com.android.inputmethod.dictionarypack.MetadataDbHelper r0;
        android.content.Context r1;
        java.lang.String r2, $r8, $r10;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r9;
        boolean $z0;

        r0 := @this: com.android.inputmethod.dictionarypack.MetadataDbHelper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pendingUpdates");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        $r8 = "";

        goto label2;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>(r1, $r10, null, 9);

        r0.<com.android.inputmethod.dictionarypack.MetadataDbHelper: android.content.Context mContext> = r1;

        r0.<com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String mClientId> = r2;

        return;
    }

    public static android.database.sqlite.SQLiteDatabase getDb(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        com.android.inputmethod.dictionarypack.MetadataDbHelper $r2;
        android.database.sqlite.SQLiteDatabase $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: com.android.inputmethod.dictionarypack.MetadataDbHelper getInstance(android.content.Context,java.lang.String)>(r0, r1);

        $r3 = virtualinvoke $r2.<com.android.inputmethod.dictionarypack.MetadataDbHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        return $r3;
    }

    private void createClientTable(android.database.sqlite.SQLiteDatabase)
    {
        com.android.inputmethod.dictionarypack.MetadataDbHelper r0;
        android.database.sqlite.SQLiteDatabase r1;
        java.lang.String r2, $r4;
        android.content.ContentValues r3, $r6;
        boolean $z0, $z1;
        android.content.Context $r5;
        java.lang.Integer $r7;

        r0 := @this: com.android.inputmethod.dictionarypack.MetadataDbHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r4 = r0.<com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String mClientId>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE IF NOT EXISTS clients (clientid TEXT, uri TEXT, additionalid TEXT, lastupdate INTEGER NOT NULL DEFAULT 0, pendingid INTEGER, flags INTEGER, PRIMARY KEY (clientid));");

        $r5 = r0.<com.android.inputmethod.dictionarypack.MetadataDbHelper: android.content.Context mContext>;

        r2 = virtualinvoke $r5.<android.content.Context: java.lang.String getString(int)>(2131361801);

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 != 0 goto label2;

        $r6 = new android.content.ContentValues;

        specialinvoke $r6.<android.content.ContentValues: void <init>()>();

        r3 = $r6;

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("clientid", "");

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("uri", r2);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("pendingid", $r7);

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("clients", null, r3);

     label2:
        return;
    }

    public void onCreate(android.database.sqlite.SQLiteDatabase)
    {
        com.android.inputmethod.dictionarypack.MetadataDbHelper r0;
        android.database.sqlite.SQLiteDatabase r1;

        r0 := @this: com.android.inputmethod.dictionarypack.MetadataDbHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE pendingUpdates (pendingid INTEGER, type INTEGER, status INTEGER, id TEXT, locale TEXT, description TEXT, filename TEXT, url TEXT, date INTEGER, checksum TEXT, filesize INTEGER, version INTEGER,formatversion INTEGER, flags INTEGER, rawChecksum TEXT,PRIMARY KEY (id,version));");

        specialinvoke r0.<com.android.inputmethod.dictionarypack.MetadataDbHelper: void createClientTable(android.database.sqlite.SQLiteDatabase)>(r1);

        return;
    }

    private void addRawChecksumColumnUnlessPresent(android.database.sqlite.SQLiteDatabase, java.lang.String)
    {
        com.android.inputmethod.dictionarypack.MetadataDbHelper r0;
        android.database.sqlite.SQLiteDatabase r1;
        java.lang.String r2, $r5;
        android.database.sqlite.SQLiteException $r4;

        r0 := @this: com.android.inputmethod.dictionarypack.MetadataDbHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 := @parameter1: java.lang.String;

     label1:
        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("SELECT rawChecksum FROM pendingUpdates LIMIT 0;");

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String TAG>;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r5, "No rawChecksum column : creating it");

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("ALTER TABLE pendingUpdates ADD COLUMN rawChecksum TEXT;");

     label4:
        return;

        catch android.database.sqlite.SQLiteException from label1 to label2 with label3;
    }

    public void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        com.android.inputmethod.dictionarypack.MetadataDbHelper r0;
        android.database.sqlite.SQLiteDatabase r1;
        int i0, i1;
        java.lang.String $r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: com.android.inputmethod.dictionarypack.MetadataDbHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if 3 != i0 goto label1;

        if 6 > i1 goto label1;

        if 9 < i1 goto label1;

        $r4 = r0.<com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String mClientId>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z1 == 0 goto label3;

        specialinvoke r0.<com.android.inputmethod.dictionarypack.MetadataDbHelper: void createClientTable(android.database.sqlite.SQLiteDatabase)>(r1);

        goto label3;

     label1:
        if 6 >= i1 goto label2;

        if 9 < i1 goto label2;

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS clients");

        $r3 = r0.<com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String mClientId>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label3;

        specialinvoke r0.<com.android.inputmethod.dictionarypack.MetadataDbHelper: void createClientTable(android.database.sqlite.SQLiteDatabase)>(r1);

        goto label3;

     label2:
        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS pendingUpdates");

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS clients");

        virtualinvoke r0.<com.android.inputmethod.dictionarypack.MetadataDbHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>(r1);

     label3:
        $r2 = r0.<com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String mClientId>;

        specialinvoke r0.<com.android.inputmethod.dictionarypack.MetadataDbHelper: void addRawChecksumColumnUnlessPresent(android.database.sqlite.SQLiteDatabase,java.lang.String)>(r1, $r2);

        return;
    }

    public void onDowngrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        com.android.inputmethod.dictionarypack.MetadataDbHelper r0;
        android.database.sqlite.SQLiteDatabase r1;
        int i0, i1;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r7;
        java.lang.String $r3, $r8;

        r0 := @this: com.android.inputmethod.dictionarypack.MetadataDbHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 > i1 goto label1;

        $r3 = <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String TAG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onDowngrade database but new version is higher? ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" <= ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, $r8);

     label1:
        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS pendingUpdates");

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS clients");

        virtualinvoke r0.<com.android.inputmethod.dictionarypack.MetadataDbHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>(r1);

        return;
    }

    public static boolean isClientKnown(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String getMetadataUriAsString(android.content.Context,java.lang.String)>(r0, r1);

        if null == $r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static java.lang.String getMetadataUriAsString(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, $r7, $r8, r10;
        android.database.sqlite.SQLiteDatabase r2;
        android.database.Cursor r3;
        java.lang.Throwable r4, $r9;
        java.lang.String[] $r5, $r6;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: android.database.sqlite.SQLiteDatabase getDb(android.content.Context,java.lang.String)>(r0, null);

        $r5 = newarray (java.lang.String)[2];

        $r5[0] = "uri";

        $r5[1] = "additionalid";

        $r6 = newarray (java.lang.String)[1];

        $r6[0] = r1;

        r3 = virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("clients", $r5, "clientid = ?", $r6, null, null, null, null);

     label1:
        $z0 = interfaceinvoke r3.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 != 0 goto label3;

     label2:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        return null;

     label3:
        $r7 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r8 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(1);

        r10 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataUriGetter: java.lang.String getUri(android.content.Context,java.lang.String,java.lang.String)>(r0, $r7, $r8);

     label4:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        return r10;

     label5:
        $r9 := @caughtexception;

        r4 = $r9;

     label6:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static void saveLastUpdateTimeOfUri(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r5, r6, $r13;
        android.content.ContentValues r2, $r14;
        android.database.sqlite.SQLiteDatabase r3;
        android.database.Cursor r4;
        java.lang.Throwable r7, $r17;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12;
        long $l0, $l1;
        java.lang.Long $r15;
        boolean $z0, $z1, $z2;
        java.lang.String[] $r16;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Save last update time of URI : ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.inputmethod.dictionarypack.PrivateLog: void log(java.lang.String)>($r13);

        $r14 = new android.content.ContentValues;

        specialinvoke $r14.<android.content.ContentValues: void <init>()>();

        r2 = $r14;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("lastupdate", $r15);

        r3 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: android.database.sqlite.SQLiteDatabase getDb(android.content.Context,java.lang.String)>(r0, null);

        r4 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: android.database.Cursor queryClientIds(android.content.Context)>(r0);

        if null != r4 goto label1;

        return;

     label1:
        $z0 = interfaceinvoke r4.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 != 0 goto label3;

     label2:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        return;

     label3:
        r5 = interfaceinvoke r4.<android.database.Cursor: java.lang.String getString(int)>(0);

        r6 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String getMetadataUriAsString(android.content.Context,java.lang.String)>(r0, r5);

        $z2 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label4;

        $r16 = newarray (java.lang.String)[1];

        $r16[0] = r5;

        virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("clients", r2, "clientid = ?", $r16);

     label4:
        $z1 = interfaceinvoke r4.<android.database.Cursor: boolean moveToNext()>();

        if $z1 != 0 goto label3;

     label5:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        goto label8;

     label6:
        $r17 := @caughtexception;

        r7 = $r17;

     label7:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        throw r7;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static long getLastUpdateDateForClient(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, $r7;
        android.database.sqlite.SQLiteDatabase r2;
        android.database.Cursor r3;
        long l0, l1;
        java.lang.Throwable r4, $r8;
        java.lang.String[] $r5, $r6;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: android.database.sqlite.SQLiteDatabase getDb(android.content.Context,java.lang.String)>(r0, null);

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = "lastupdate";

        $r6 = newarray (java.lang.String)[1];

        if null != r1 goto label1;

        $r7 = "";

        goto label2;

     label1:
        $r7 = r1;

     label2:
        $r6[0] = $r7;

        r3 = virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("clients", $r5, "clientid = ?", $r6, null, null, null, null);

     label3:
        $z0 = interfaceinvoke r3.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 != 0 goto label5;

        l0 = 0L;

     label4:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        return l0;

     label5:
        l1 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(0);

     label6:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        return l1;

     label7:
        $r8 := @caughtexception;

        r4 = $r8;

     label8:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        throw r4;

        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public static long getMetadataDownloadIdForURI(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        android.database.sqlite.SQLiteDatabase r2;
        android.database.Cursor r3;
        long l0, l2;
        java.lang.Throwable r4, $r7;
        java.lang.String[] $r5, $r6;
        boolean $z0;
        int $i1;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: android.database.sqlite.SQLiteDatabase getDb(android.content.Context,java.lang.String)>(r0, null);

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = "pendingid";

        $r6 = newarray (java.lang.String)[1];

        $r6[0] = r1;

        r3 = virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("clients", $r5, "uri = ?", $r6, null, null, null, null);

     label1:
        $z0 = interfaceinvoke r3.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 != 0 goto label3;

        l0 = -1L;

     label2:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        return l0;

     label3:
        $i1 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(0);

        l2 = (long) $i1;

     label4:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        return l2;

     label5:
        $r7 := @caughtexception;

        r4 = $r7;

     label6:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static long getOldestUpdateTime(android.content.Context)
    {
        android.content.Context r0;
        android.database.sqlite.SQLiteDatabase r1;
        android.database.Cursor r2;
        long l0, l1, l2, l3;
        java.lang.Throwable r3, $r5;
        java.lang.String[] $r4;
        boolean $z0, $z1;

        r0 := @parameter0: android.content.Context;

        r1 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: android.database.sqlite.SQLiteDatabase getDb(android.content.Context,java.lang.String)>(r0, null);

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = "lastupdate";

        r2 = virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("clients", $r4, null, null, null, null, null);

     label1:
        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 != 0 goto label3;

        l0 = 0L;

     label2:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        return l0;

     label3:
        l1 = 9223372036854775807L;

     label4:
        l2 = interfaceinvoke r2.<android.database.Cursor: long getLong(int)>(0);

        l1 = staticinvoke <java.lang.Math: long min(long,long)>(l2, l1);

        $z1 = interfaceinvoke r2.<android.database.Cursor: boolean moveToNext()>();

        if $z1 != 0 goto label4;

        l3 = l1;

     label5:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        return l3;

     label6:
        $r5 := @caughtexception;

        r3 = $r5;

     label7:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static android.content.ContentValues makeContentValues(int, int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, long, java.lang.String, java.lang.String, long, int, int)
    {
        int i0, i1, i2, i5, i6;
        java.lang.String r0, r1, r2, r3, r4, r5, r6;
        long l3, l4;
        android.content.ContentValues $r7, r8;
        java.lang.Integer $r9, $r10, $r11, $r14, $r15, $r16;
        java.lang.Long $r12, $r13;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r0 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.String;

        r2 := @parameter5: java.lang.String;

        r3 := @parameter6: java.lang.String;

        r4 := @parameter7: java.lang.String;

        l3 := @parameter8: long;

        r5 := @parameter9: java.lang.String;

        r6 := @parameter10: java.lang.String;

        l4 := @parameter11: long;

        i5 := @parameter12: int;

        i6 := @parameter13: int;

        $r7 = new android.content.ContentValues;

        specialinvoke $r7.<android.content.ContentValues: void <init>(int)>(14);

        r8 = $r7;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r8.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("pendingid", $r9);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke r8.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("type", $r10);

        virtualinvoke r8.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("id", r0);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        virtualinvoke r8.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("status", $r11);

        virtualinvoke r8.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("locale", r1);

        virtualinvoke r8.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("description", r2);

        virtualinvoke r8.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("filename", r3);

        virtualinvoke r8.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("url", r4);

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        virtualinvoke r8.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("date", $r12);

        virtualinvoke r8.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("rawChecksum", r5);

        virtualinvoke r8.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("checksum", r6);

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4);

        virtualinvoke r8.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("filesize", $r13);

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        virtualinvoke r8.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("version", $r14);

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        virtualinvoke r8.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("formatversion", $r15);

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r8.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("flags", $r16);

        return r8;
    }

    public static android.content.ContentValues completeWithDefaultValues(android.content.ContentValues) throws com.android.inputmethod.dictionarypack.BadFormatException
    {
        android.content.ContentValues r0;
        java.lang.Object $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        com.android.inputmethod.dictionarypack.BadFormatException $r2;
        java.lang.Integer $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;

        r0 := @parameter0: android.content.ContentValues;

        $r1 = virtualinvoke r0.<android.content.ContentValues: java.lang.Object get(java.lang.String)>("id");

        if null == $r1 goto label01;

        $r3 = virtualinvoke r0.<android.content.ContentValues: java.lang.Object get(java.lang.String)>("locale");

        if null != $r3 goto label02;

     label01:
        $r2 = new com.android.inputmethod.dictionarypack.BadFormatException;

        specialinvoke $r2.<com.android.inputmethod.dictionarypack.BadFormatException: void <init>()>();

        throw $r2;

     label02:
        $r4 = virtualinvoke r0.<android.content.ContentValues: java.lang.Object get(java.lang.String)>("pendingid");

        if null != $r4 goto label03;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r0.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("pendingid", $r23);

     label03:
        $r5 = virtualinvoke r0.<android.content.ContentValues: java.lang.Object get(java.lang.String)>("type");

        if null != $r5 goto label04;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        virtualinvoke r0.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("type", $r24);

     label04:
        $r6 = virtualinvoke r0.<android.content.ContentValues: java.lang.Object get(java.lang.String)>("status");

        if null != $r6 goto label05;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        virtualinvoke r0.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("status", $r21);

     label05:
        $r7 = virtualinvoke r0.<android.content.ContentValues: java.lang.Object get(java.lang.String)>("description");

        if null != $r7 goto label06;

        virtualinvoke r0.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("description", "");

     label06:
        $r8 = virtualinvoke r0.<android.content.ContentValues: java.lang.Object get(java.lang.String)>("filename");

        if null != $r8 goto label07;

        virtualinvoke r0.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("filename", "_");

     label07:
        $r9 = virtualinvoke r0.<android.content.ContentValues: java.lang.Object get(java.lang.String)>("url");

        if null != $r9 goto label08;

        virtualinvoke r0.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("url", "");

     label08:
        $r10 = virtualinvoke r0.<android.content.ContentValues: java.lang.Object get(java.lang.String)>("date");

        if null != $r10 goto label09;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r0.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("date", $r22);

     label09:
        $r11 = virtualinvoke r0.<android.content.ContentValues: java.lang.Object get(java.lang.String)>("rawChecksum");

        if null != $r11 goto label10;

        virtualinvoke r0.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("rawChecksum", "");

     label10:
        $r12 = virtualinvoke r0.<android.content.ContentValues: java.lang.Object get(java.lang.String)>("checksum");

        if null != $r12 goto label11;

        virtualinvoke r0.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("checksum", "");

     label11:
        $r13 = virtualinvoke r0.<android.content.ContentValues: java.lang.Object get(java.lang.String)>("filesize");

        if null != $r13 goto label12;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r0.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("filesize", $r19);

     label12:
        $r14 = virtualinvoke r0.<android.content.ContentValues: java.lang.Object get(java.lang.String)>("version");

        if null != $r14 goto label13;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r0.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("version", $r20);

     label13:
        $r15 = virtualinvoke r0.<android.content.ContentValues: java.lang.Object get(java.lang.String)>("formatversion");

        if null != $r15 goto label14;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        virtualinvoke r0.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("formatversion", $r17);

     label14:
        $r16 = virtualinvoke r0.<android.content.ContentValues: java.lang.Object get(java.lang.String)>("flags");

        if null != $r16 goto label15;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r0.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("flags", $r18);

     label15:
        return r0;
    }

    private static void putStringResult(android.content.ContentValues, android.database.Cursor, java.lang.String)
    {
        android.content.ContentValues r0;
        android.database.Cursor r1;
        java.lang.String r2, $r3;
        int $i0;

        r0 := @parameter0: android.content.ContentValues;

        r1 := @parameter1: android.database.Cursor;

        r2 := @parameter2: java.lang.String;

        $i0 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>(r2);

        $r3 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        virtualinvoke r0.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>(r2, $r3);

        return;
    }

    private static void putIntResult(android.content.ContentValues, android.database.Cursor, java.lang.String)
    {
        android.content.ContentValues r0;
        android.database.Cursor r1;
        java.lang.String r2;
        int $i0, $i1;
        java.lang.Integer $r3;

        r0 := @parameter0: android.content.ContentValues;

        r1 := @parameter1: android.database.Cursor;

        r2 := @parameter2: java.lang.String;

        $i0 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>(r2);

        $i1 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>($i0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r0.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>(r2, $r3);

        return;
    }

    private static android.content.ContentValues getFirstLineAsContentValues(android.database.Cursor)
    {
        android.database.Cursor r0;
        android.content.ContentValues r1, $r2;
        boolean $z0, $z1;
        java.lang.String $r3;

        r0 := @parameter0: android.database.Cursor;

        $z0 = interfaceinvoke r0.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label1;

        $r2 = new android.content.ContentValues;

        specialinvoke $r2.<android.content.ContentValues: void <init>(int)>(14);

        r1 = $r2;

        staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: void putIntResult(android.content.ContentValues,android.database.Cursor,java.lang.String)>(r1, r0, "pendingid");

        staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: void putIntResult(android.content.ContentValues,android.database.Cursor,java.lang.String)>(r1, r0, "type");

        staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: void putIntResult(android.content.ContentValues,android.database.Cursor,java.lang.String)>(r1, r0, "status");

        staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: void putStringResult(android.content.ContentValues,android.database.Cursor,java.lang.String)>(r1, r0, "id");

        staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: void putStringResult(android.content.ContentValues,android.database.Cursor,java.lang.String)>(r1, r0, "locale");

        staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: void putStringResult(android.content.ContentValues,android.database.Cursor,java.lang.String)>(r1, r0, "description");

        staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: void putStringResult(android.content.ContentValues,android.database.Cursor,java.lang.String)>(r1, r0, "filename");

        staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: void putStringResult(android.content.ContentValues,android.database.Cursor,java.lang.String)>(r1, r0, "url");

        staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: void putIntResult(android.content.ContentValues,android.database.Cursor,java.lang.String)>(r1, r0, "date");

        staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: void putStringResult(android.content.ContentValues,android.database.Cursor,java.lang.String)>(r1, r0, "rawChecksum");

        staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: void putStringResult(android.content.ContentValues,android.database.Cursor,java.lang.String)>(r1, r0, "checksum");

        staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: void putIntResult(android.content.ContentValues,android.database.Cursor,java.lang.String)>(r1, r0, "filesize");

        staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: void putIntResult(android.content.ContentValues,android.database.Cursor,java.lang.String)>(r1, r0, "version");

        staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: void putIntResult(android.content.ContentValues,android.database.Cursor,java.lang.String)>(r1, r0, "formatversion");

        staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: void putIntResult(android.content.ContentValues,android.database.Cursor,java.lang.String)>(r1, r0, "flags");

        $z1 = interfaceinvoke r0.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label2;

        $r3 = <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, "Several SQL results when we expected only one!");

        goto label2;

     label1:
        r1 = null;

     label2:
        return r1;
    }

    public static android.content.ContentValues getContentValuesByPendingId(android.database.sqlite.SQLiteDatabase, long)
    {
        android.database.sqlite.SQLiteDatabase r0;
        long l0;
        android.database.Cursor r1;
        android.content.ContentValues r2;
        java.lang.Throwable r3, $r7;
        java.lang.String[] $r4, $r5;
        java.lang.String $r6;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        l0 := @parameter1: long;

        $r5 = <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String[] METADATA_TABLE_COLUMNS>;

        $r4 = newarray (java.lang.String)[1];

        $r6 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r4[0] = $r6;

        r1 = virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("pendingUpdates", $r5, "pendingid= ?", $r4, null, null, null);

        if null != r1 goto label1;

        return null;

     label1:
        r2 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: android.content.ContentValues getFirstLineAsContentValues(android.database.Cursor)>(r1);

     label2:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

        return r2;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

     label4:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static android.content.ContentValues getInstalledOrDeletingWordListContentValuesByWordListId(android.database.sqlite.SQLiteDatabase, java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1, $r7, $r8;
        android.database.Cursor r2;
        android.content.ContentValues r3;
        java.lang.Throwable r4, $r9;
        java.lang.String[] $r5, $r6;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter1: java.lang.String;

        $r6 = <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String[] METADATA_TABLE_COLUMNS>;

        $r5 = newarray (java.lang.String)[3];

        $r5[0] = r1;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(3);

        $r5[1] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(5);

        $r5[2] = $r8;

        r2 = virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("pendingUpdates", $r6, "id=? AND (status=? OR status=?)", $r5, null, null, null);

        if null != r2 goto label1;

        return null;

     label1:
        r3 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: android.content.ContentValues getFirstLineAsContentValues(android.database.Cursor)>(r2);

     label2:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        return r3;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

     label4:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static java.util.ArrayList getDownloadRecordsForDownloadId(android.content.Context, long)
    {
        android.content.Context r0;
        long l0, l2;
        android.database.sqlite.SQLiteDatabase r1, $r10;
        java.util.ArrayList r2, r4, $r8;
        android.database.Cursor r3;
        int i1, $i3, i5;
        java.lang.String r5;
        android.content.ContentValues r6;
        java.lang.Throwable r7, $r13;
        java.lang.String[] $r9;
        boolean $z0, $z1;
        byte $b4;
        com.android.inputmethod.dictionarypack.DownloadRecord $r11, $r12;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        r1 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: android.database.sqlite.SQLiteDatabase getDb(android.content.Context,java.lang.String)>(r0, "");

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r2 = $r8;

        $r9 = <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String[] CLIENT_TABLE_COLUMNS>;

        r3 = virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("clients", $r9, null, null, null, null, null);

     label01:
        $z0 = interfaceinvoke r3.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 != 0 goto label03;

        r4 = r2;

     label02:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        return r4;

     label03:
        i5 = interfaceinvoke r3.<android.database.Cursor: int getColumnIndex(java.lang.String)>("clientid");

        i1 = interfaceinvoke r3.<android.database.Cursor: int getColumnIndex(java.lang.String)>("pendingid");

     label04:
        $i3 = interfaceinvoke r3.<android.database.Cursor: int getInt(int)>(i1);

        l2 = (long) $i3;

        r5 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(i5);

        $b4 = l2 cmp l0;

        if $b4 != 0 goto label05;

        $r12 = new com.android.inputmethod.dictionarypack.DownloadRecord;

        specialinvoke $r12.<com.android.inputmethod.dictionarypack.DownloadRecord: void <init>(java.lang.String,android.content.ContentValues)>(r5, null);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

     label05:
        $r10 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: android.database.sqlite.SQLiteDatabase getDb(android.content.Context,java.lang.String)>(r0, r5);

        r6 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: android.content.ContentValues getContentValuesByPendingId(android.database.sqlite.SQLiteDatabase,long)>($r10, l0);

        if null == r6 goto label06;

        $r11 = new com.android.inputmethod.dictionarypack.DownloadRecord;

        specialinvoke $r11.<com.android.inputmethod.dictionarypack.DownloadRecord: void <init>(java.lang.String,android.content.ContentValues)>(r5, r6);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label06:
        $z1 = interfaceinvoke r3.<android.database.Cursor: boolean moveToNext()>();

        if $z1 != 0 goto label04;

     label07:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        goto label10;

     label08:
        $r13 := @caughtexception;

        r7 = $r13;

     label09:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        throw r7;

     label10:
        return r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public static android.content.ContentValues getContentValuesByWordListId(android.database.sqlite.SQLiteDatabase, java.lang.String, int)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1, $r7;
        int i0;
        android.database.Cursor r2;
        android.content.ContentValues r3;
        java.lang.Throwable r4, $r8;
        java.lang.String[] $r5, $r6;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r6 = <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String[] METADATA_TABLE_COLUMNS>;

        $r5 = newarray (java.lang.String)[2];

        $r5[0] = r1;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r5[1] = $r7;

        r2 = virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("pendingUpdates", $r6, "id= ? AND version= ?", $r5, null, null, null);

        if null != r2 goto label1;

        return null;

     label1:
        r3 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: android.content.ContentValues getFirstLineAsContentValues(android.database.Cursor)>(r2);

     label2:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        return r3;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

     label4:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static android.content.ContentValues getContentValuesOfLatestAvailableWordlistById(android.database.sqlite.SQLiteDatabase, java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1;
        android.database.Cursor r2;
        android.content.ContentValues r3;
        java.lang.Throwable r4, $r7;
        java.lang.String[] $r5, $r6;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter1: java.lang.String;

        $r6 = <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String[] METADATA_TABLE_COLUMNS>;

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = r1;

        r2 = virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("pendingUpdates", $r6, "id= ?", $r5, null, null, "version DESC", "1");

        if null != r2 goto label1;

        return null;

     label1:
        r3 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: android.content.ContentValues getFirstLineAsContentValues(android.database.Cursor)>(r2);

     label2:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        return r3;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

     label4:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static android.database.Cursor queryInstalledOrDeletingOrAvailableDictionaryMetadata(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, $r6, $r7, $r8;
        android.database.Cursor r2;
        android.database.sqlite.SQLiteDatabase $r3;
        java.lang.String[] $r4, $r5;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $r3 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: android.database.sqlite.SQLiteDatabase getDb(android.content.Context,java.lang.String)>(r0, r1);

        $r5 = <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String[] METADATA_TABLE_COLUMNS>;

        $r4 = newarray (java.lang.String)[3];

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(3);

        $r4[0] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(5);

        $r4[1] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(1);

        $r4[2] = $r8;

        r2 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("pendingUpdates", $r5, "status = ? OR status = ? OR status = ?", $r4, null, null, "locale");

        return r2;
    }

    public static android.database.Cursor queryCurrentMetadata(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        android.database.Cursor r2;
        android.database.sqlite.SQLiteDatabase $r3;
        java.lang.String[] $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $r3 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: android.database.sqlite.SQLiteDatabase getDb(android.content.Context,java.lang.String)>(r0, r1);

        $r4 = <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String[] METADATA_TABLE_COLUMNS>;

        r2 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("pendingUpdates", $r4, null, null, null, null, "locale");

        return r2;
    }

    public static android.database.Cursor queryDictionaries(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        android.database.Cursor r2;
        android.database.sqlite.SQLiteDatabase $r3;
        java.lang.String[] $r4, $r5;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $r3 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: android.database.sqlite.SQLiteDatabase getDb(android.content.Context,java.lang.String)>(r0, r1);

        $r5 = <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String[] DICTIONARIES_LIST_PUBLIC_COLUMNS>;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = "";

        r2 = virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("pendingUpdates", $r5, "locale != ?", $r4, null, null, "locale");

        return r2;
    }

    public static boolean deleteClient(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        android.database.sqlite.SQLiteDatabase r2, r3;
        java.lang.String[] $r4;
        int $i0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: android.database.sqlite.SQLiteDatabase getDb(android.content.Context,java.lang.String)>(r0, r1);

        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS pendingUpdates");

        virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE pendingUpdates (pendingid INTEGER, type INTEGER, status INTEGER, id TEXT, locale TEXT, description TEXT, filename TEXT, url TEXT, date INTEGER, checksum TEXT, filesize INTEGER, version INTEGER,formatversion INTEGER, flags INTEGER, rawChecksum TEXT,PRIMARY KEY (id,version));");

        r3 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: android.database.sqlite.SQLiteDatabase getDb(android.content.Context,java.lang.String)>(r0, "");

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = r1;

        $i0 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("clients", "clientid = ?", $r4);

        if 0 != $i0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public static void updateClientInfo(android.content.Context, java.lang.String, android.content.ContentValues)
    {
        android.content.Context r0;
        java.lang.String r1, r3, r4, r5;
        android.content.ContentValues r2;
        android.database.sqlite.SQLiteDatabase r6;
        boolean $z0, $z1;
        java.lang.Object[] $r7, $r10;
        java.lang.Integer $r8;
        long $l0;
        java.lang.String[] $r9;
        byte $b1;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.content.ContentValues;

        r3 = virtualinvoke r2.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("clientid");

        r4 = virtualinvoke r2.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("uri");

        r5 = virtualinvoke r2.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("additionalid");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 != 0 goto label1;

        if null == r4 goto label1;

        if null != r5 goto label2;

     label1:
        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = "Missing parameter for updateClientInfo";

        staticinvoke <com.android.inputmethod.latin.utils.DebugLogUtils: void l(java.lang.Object[])>($r7);

        return;

     label2:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 != 0 goto label3;

        $r10 = newarray (java.lang.Object)[4];

        $r10[0] = "Received an updateClientInfo request for ";

        $r10[1] = r1;

        $r10[2] = " but the values contain a different ID : ";

        $r10[3] = r3;

        staticinvoke <com.android.inputmethod.latin.utils.DebugLogUtils: void l(java.lang.Object[])>($r10);

        return;

     label3:
        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("pendingid", $r8);

        r6 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: android.database.sqlite.SQLiteDatabase getDb(android.content.Context,java.lang.String)>(r0, "");

        $l0 = virtualinvoke r6.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("clients", null, r2);

        $b1 = -1L cmp $l0;

        if $b1 != 0 goto label4;

        $r9 = newarray (java.lang.String)[1];

        $r9[0] = r1;

        virtualinvoke r6.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("clients", r2, "clientid = ?", $r9);

     label4:
        return;
    }

    public static android.database.Cursor queryClientIds(android.content.Context)
    {
        android.content.Context r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.String[] $r2;
        android.database.Cursor $r3;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: android.database.sqlite.SQLiteDatabase getDb(android.content.Context,java.lang.String)>(r0, null);

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "clientid";

        $r3 = virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("clients", $r2, null, null, null, null, null);

        return $r3;
    }

    public static void registerMetadataDownloadId(android.content.Context, java.lang.String, long)
    {
        android.content.Context r0;
        java.lang.String r1, r5, r6;
        long l0;
        android.content.ContentValues r2, $r8;
        android.database.sqlite.SQLiteDatabase r3;
        android.database.Cursor r4;
        java.lang.Throwable r7, $r11;
        java.lang.Long $r9;
        boolean $z0, $z1, $z2;
        java.lang.String[] $r10;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $r8 = new android.content.ContentValues;

        specialinvoke $r8.<android.content.ContentValues: void <init>()>();

        r2 = $r8;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("pendingid", $r9);

        r3 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: android.database.sqlite.SQLiteDatabase getDb(android.content.Context,java.lang.String)>(r0, "");

        r4 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: android.database.Cursor queryClientIds(android.content.Context)>(r0);

        if null != r4 goto label1;

        return;

     label1:
        $z0 = interfaceinvoke r4.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 != 0 goto label3;

     label2:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        return;

     label3:
        r5 = interfaceinvoke r4.<android.database.Cursor: java.lang.String getString(int)>(0);

        r6 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String getMetadataUriAsString(android.content.Context,java.lang.String)>(r0, r5);

        $z2 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label4;

        $r10 = newarray (java.lang.String)[1];

        $r10[0] = r5;

        virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("clients", r2, "clientid = ?", $r10);

     label4:
        $z1 = interfaceinvoke r4.<android.database.Cursor: boolean moveToNext()>();

        if $z1 != 0 goto label3;

     label5:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        goto label8;

     label6:
        $r11 := @caughtexception;

        r7 = $r11;

     label7:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        throw r7;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static void markEntryAsFinishedDownloadingAndInstalled(android.database.sqlite.SQLiteDatabase, android.content.ContentValues)
    {
        android.database.sqlite.SQLiteDatabase r0;
        android.content.ContentValues r1;
        java.util.LinkedList r2, $r8;
        android.database.Cursor r3;
        int i0, $i1;
        java.lang.Throwable r4, $r23;
        java.io.File r5, $r18;
        java.lang.Integer $r6, $r15;
        java.lang.Object[] $r7, $r19;
        java.lang.String[] $r9, $r10, $r14;
        java.lang.String $r11, $r12, $r13, $r16, $r20, $r21, r25;
        boolean $z0, $z1, $z4;
        java.lang.Object $r17;
        java.lang.SecurityException $r22;
        java.util.Iterator r24;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter1: android.content.ContentValues;

        $r6 = virtualinvoke r1.<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>("type");

        $i1 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        lookupswitch($i1)
        {
            case 2: goto label01;
            default: goto label14;
        };

     label01:
        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = "Ended processing a wordlist";

        staticinvoke <com.android.inputmethod.latin.utils.DebugLogUtils: void l(java.lang.Object[])>($r7);

        $r8 = new java.util.LinkedList;

        specialinvoke $r8.<java.util.LinkedList: void <init>()>();

        r2 = $r8;

        $r9 = newarray (java.lang.String)[1];

        $r9[0] = "filename";

        $r10 = newarray (java.lang.String)[3];

        $r11 = virtualinvoke r1.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("locale");

        $r10[0] = $r11;

        $r12 = virtualinvoke r1.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("id");

        $r10[1] = $r12;

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(3);

        $r10[2] = $r13;

        r3 = virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("pendingUpdates", $r9, "locale = ? AND id = ? AND status = ?", $r10, null, null, null);

     label02:
        $z0 = interfaceinvoke r3.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label04;

        i0 = interfaceinvoke r3.<android.database.Cursor: int getColumnIndex(java.lang.String)>("filename");

     label03:
        $r19 = newarray (java.lang.Object)[2];

        $r19[0] = "Setting for removal";

        $r20 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(i0);

        $r19[1] = $r20;

        staticinvoke <com.android.inputmethod.latin.utils.DebugLogUtils: void l(java.lang.Object[])>($r19);

        $r21 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(i0);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r21);

        $z4 = interfaceinvoke r3.<android.database.Cursor: boolean moveToNext()>();

        if $z4 != 0 goto label03;

     label04:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        goto label07;

     label05:
        $r23 := @caughtexception;

        r4 = $r23;

     label06:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        throw r4;

     label07:
        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("status", $r15);

        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: void beginTransactionNonExclusive()>();

        $r14 = newarray (java.lang.String)[1];

        $r16 = virtualinvoke r1.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("id");

        $r14[0] = $r16;

        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("pendingUpdates", "id = ?", $r14);

        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("pendingUpdates", null, r1);

        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        r24 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r17 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r25 = (java.lang.String) $r17;

     label09:
        $r18 = new java.io.File;

        specialinvoke $r18.<java.io.File: void <init>(java.lang.String)>(r25);

        r5 = $r18;

        virtualinvoke r5.<java.io.File: boolean delete()>();

     label10:
        goto label12;

     label11:
        $r22 := @caughtexception;

     label12:
        goto label08;

     label13:
        goto label14;

     label14:
        return;

        catch java.lang.Throwable from label02 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.SecurityException from label09 to label10 with label11;
    }

    public static void deleteDownloadingEntry(android.database.sqlite.SQLiteDatabase, long)
    {
        android.database.sqlite.SQLiteDatabase r0;
        long l0;
        java.lang.String[] $r1;
        java.lang.String $r2, $r3;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        l0 := @parameter1: long;

        $r1 = newarray (java.lang.String)[2];

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(2);

        $r1[1] = $r3;

        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("pendingUpdates", "pendingid = ? AND status = ?", $r1);

        return;
    }

    public static void deleteEntry(android.database.sqlite.SQLiteDatabase, java.lang.String, int)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1, $r3;
        int i0;
        java.lang.String[] $r2;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = newarray (java.lang.String)[2];

        $r2[0] = r1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r2[1] = $r3;

        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("pendingUpdates", "id = ? AND version = ?", $r2);

        return;
    }

    private static void markEntryAs(android.database.sqlite.SQLiteDatabase, java.lang.String, int, int, long)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1, $r5;
        int i0, i1;
        long l2;
        android.content.ContentValues r2;
        java.lang.Integer $r3;
        byte $b3;
        java.lang.String[] $r4;
        java.lang.Long $r6;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        l2 := @parameter4: long;

        r2 = staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: android.content.ContentValues getContentValuesByWordListId(android.database.sqlite.SQLiteDatabase,java.lang.String,int)>(r0, r1, i0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("status", $r3);

        $b3 = -1L cmp l2;

        if $b3 == 0 goto label1;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("pendingid", $r6);

     label1:
        $r4 = newarray (java.lang.String)[2];

        $r4[0] = r1;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r4[1] = $r5;

        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("pendingUpdates", r2, "id = ? AND version = ?", $r4);

        return;
    }

    public static void markEntryAsEnabled(android.database.sqlite.SQLiteDatabase, java.lang.String, int)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: void markEntryAs(android.database.sqlite.SQLiteDatabase,java.lang.String,int,int,long)>(r0, r1, i0, 3, -1L);

        return;
    }

    public static void markEntryAsDisabled(android.database.sqlite.SQLiteDatabase, java.lang.String, int)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: void markEntryAs(android.database.sqlite.SQLiteDatabase,java.lang.String,int,int,long)>(r0, r1, i0, 4, -1L);

        return;
    }

    public static void markEntryAsAvailable(android.database.sqlite.SQLiteDatabase, java.lang.String, int)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: void markEntryAs(android.database.sqlite.SQLiteDatabase,java.lang.String,int,int,long)>(r0, r1, i0, 1, -1L);

        return;
    }

    public static void markEntryAsDownloading(android.database.sqlite.SQLiteDatabase, java.lang.String, int, long)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1;
        int i0;
        long l1;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        l1 := @parameter3: long;

        staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: void markEntryAs(android.database.sqlite.SQLiteDatabase,java.lang.String,int,int,long)>(r0, r1, i0, 2, l1);

        return;
    }

    public static void markEntryAsDeleting(android.database.sqlite.SQLiteDatabase, java.lang.String, int)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        staticinvoke <com.android.inputmethod.dictionarypack.MetadataDbHelper: void markEntryAs(android.database.sqlite.SQLiteDatabase,java.lang.String,int,int,long)>(r0, r1, i0, 5, -1L);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.lang.String[] $r2, $r3, $r4;

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String METADATA_CREATE_CLIENT_TABLE> = "CREATE TABLE IF NOT EXISTS clients (clientid TEXT, uri TEXT, additionalid TEXT, lastupdate INTEGER NOT NULL DEFAULT 0, pendingid INTEGER, flags INTEGER, PRIMARY KEY (clientid));";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String METADATA_TABLE_CREATE> = "CREATE TABLE pendingUpdates (pendingid INTEGER, type INTEGER, status INTEGER, id TEXT, locale TEXT, description TEXT, filename TEXT, url TEXT, date INTEGER, checksum TEXT, filesize INTEGER, version INTEGER,formatversion INTEGER, flags INTEGER, rawChecksum TEXT,PRIMARY KEY (id,version));";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: int TYPE_UPDATE> = 3;

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: int TYPE_BULK> = 2;

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: int TYPE_METADATA> = 1;

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: int STATUS_DELETING> = 5;

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: int STATUS_DISABLED> = 4;

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: int STATUS_INSTALLED> = 3;

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: int STATUS_DOWNLOADING> = 2;

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: int STATUS_AVAILABLE> = 1;

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: int STATUS_UNKNOWN> = 0;

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String DICTIONARIES_ASSETS_PATH> = "dictionaries";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String METADATA_UPDATE_DESCRIPTION> = "metadata";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String METADATA_DATABASE_NAME_STEM> = "pendingUpdates";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String CLIENT_PENDINGID_COLUMN> = "pendingid";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String CLIENT_LAST_UPDATE_DATE_COLUMN> = "lastupdate";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String CLIENT_METADATA_ADDITIONAL_ID_COLUMN> = "additionalid";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String CLIENT_METADATA_URI_COLUMN> = "uri";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String CLIENT_CLIENT_ID_COLUMN> = "clientid";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: int COLUMN_COUNT> = 14;

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String RAW_CHECKSUM_COLUMN> = "rawChecksum";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String FLAGS_COLUMN> = "flags";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String FORMATVERSION_COLUMN> = "formatversion";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String VERSION_COLUMN> = "version";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String FILESIZE_COLUMN> = "filesize";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String CHECKSUM_COLUMN> = "checksum";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String DATE_COLUMN> = "date";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String REMOTE_FILENAME_COLUMN> = "url";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String LOCAL_FILENAME_COLUMN> = "filename";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String DESCRIPTION_COLUMN> = "description";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String WORDLISTID_COLUMN> = "id";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String LOCALE_COLUMN> = "locale";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String STATUS_COLUMN> = "status";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String TYPE_COLUMN> = "type";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String PENDINGID_COLUMN> = "pendingid";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String CLIENT_TABLE_NAME> = "clients";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String METADATA_TABLE_NAME> = "pendingUpdates";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: long NOT_A_DOWNLOAD_ID> = -1L;

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: int CURRENT_METADATA_DATABASE_VERSION> = 9;

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: int METADATA_DATABASE_VERSION_WITH_CLIENTID> = 6;

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: int METADATA_DATABASE_INITIAL_VERSION> = 3;

        $r0 = class "com/android/inputmethod/dictionarypack/MetadataDbHelper";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String TAG> = $r1;

        $r2 = newarray (java.lang.String)[15];

        $r2[0] = "pendingid";

        $r2[1] = "type";

        $r2[2] = "status";

        $r2[3] = "id";

        $r2[4] = "locale";

        $r2[5] = "description";

        $r2[6] = "filename";

        $r2[7] = "url";

        $r2[8] = "date";

        $r2[9] = "checksum";

        $r2[10] = "filesize";

        $r2[11] = "version";

        $r2[12] = "formatversion";

        $r2[13] = "flags";

        $r2[14] = "rawChecksum";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String[] METADATA_TABLE_COLUMNS> = $r2;

        $r3 = newarray (java.lang.String)[4];

        $r3[0] = "clientid";

        $r3[1] = "uri";

        $r3[2] = "pendingid";

        $r3[3] = "flags";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String[] CLIENT_TABLE_COLUMNS> = $r3;

        $r4 = newarray (java.lang.String)[7];

        $r4[0] = "status";

        $r4[1] = "id";

        $r4[2] = "locale";

        $r4[3] = "description";

        $r4[4] = "date";

        $r4[5] = "filesize";

        $r4[6] = "version";

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.lang.String[] DICTIONARIES_LIST_PUBLIC_COLUMNS> = $r4;

        <com.android.inputmethod.dictionarypack.MetadataDbHelper: java.util.TreeMap sInstanceMap> = null;

        return;
    }
}
