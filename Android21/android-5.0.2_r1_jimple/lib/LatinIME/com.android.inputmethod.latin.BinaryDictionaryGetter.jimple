public final class com.android.inputmethod.latin.BinaryDictionaryGetter extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final java.io.File[] EMPTY_FILE_ARRAY;
    private static final java.lang.String COMMON_PREFERENCES_NAME;
    public static final java.lang.String MAIN_DICTIONARY_CATEGORY;
    public static final java.lang.String ID_CATEGORY_SEPARATOR;
    private static java.lang.String VERSION_KEY;

    private void <init>()
    {
        com.android.inputmethod.latin.BinaryDictionaryGetter r0;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionaryGetter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getTempFileName(java.lang.String, android.content.Context) throws java.io.IOException
    {
        java.lang.String r0, r2, $r5, $r9, $r11, $r12;
        android.content.Context r1;
        java.io.File r3, $r4, $r10;
        boolean $z0, $z1;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.content.Context;

        r2 = staticinvoke <com.android.inputmethod.latin.utils.DictionaryInfoUtils: java.lang.String replaceFileNameDangerousCharacters(java.lang.String)>(r0);

        $r4 = new java.io.File;

        $r5 = staticinvoke <com.android.inputmethod.latin.utils.DictionaryInfoUtils: java.lang.String getWordListTempDirectory(android.content.Context)>(r1);

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r5);

        r3 = $r4;

        $z0 = virtualinvoke r3.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r3.<java.io.File: boolean mkdirs()>();

        if $z1 != 0 goto label1;

        $r12 = <com.android.inputmethod.latin.BinaryDictionaryGetter: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r12, "Could not create the temporary directory");

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("xxx");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>($r9, null, r3);

        $r11 = virtualinvoke $r10.<java.io.File: java.lang.String getAbsolutePath()>();

        return $r11;
    }

    public static com.android.inputmethod.latin.AssetFileAddress loadFallbackResource(android.content.Context, int)
    {
        android.content.Context r0;
        int i0;
        android.content.res.AssetFileDescriptor r1;
        com.android.inputmethod.latin.AssetFileAddress r2;
        java.lang.Throwable r4, $r16;
        android.content.res.Resources $r6;
        android.content.pm.ApplicationInfo $r7;
        java.lang.String $r8, $r10, $r13;
        long $l1, $l2;
        java.lang.StringBuilder $r9, $r11, $r12;
        java.io.IOException $r14, $r15;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r6 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r6.<android.content.res.Resources: android.content.res.AssetFileDescriptor openRawResourceFd(int)>(i0);

        if r1 != null goto label01;

        $r10 = <com.android.inputmethod.latin.BinaryDictionaryGetter: java.lang.String TAG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found the resource but cannot read it. Is it compressed? resId=");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r10, $r13);

        return null;

     label01:
        $r7 = virtualinvoke r0.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $r8 = $r7.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        $l1 = virtualinvoke r1.<android.content.res.AssetFileDescriptor: long getStartOffset()>();

        $l2 = virtualinvoke r1.<android.content.res.AssetFileDescriptor: long getLength()>();

        r2 = staticinvoke <com.android.inputmethod.latin.AssetFileAddress: com.android.inputmethod.latin.AssetFileAddress makeFromFileNameAndOffset(java.lang.String,long,long)>($r8, $l1, $l2);

     label02:
        virtualinvoke r1.<android.content.res.AssetFileDescriptor: void close()>();

     label03:
        goto label05;

     label04:
        $r14 := @caughtexception;

     label05:
        return r2;

     label06:
        $r16 := @caughtexception;

        r4 = $r16;

     label07:
        virtualinvoke r1.<android.content.res.AssetFileDescriptor: void close()>();

     label08:
        goto label10;

     label09:
        $r15 := @caughtexception;

     label10:
        throw r4;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.lang.Throwable from label06 to label07 with label06;
    }

    public static java.io.File[] getCachedWordLists(java.lang.String, android.content.Context)
    {
        java.lang.String r0, r6, r10, $r17, $r18;
        android.content.Context r1;
        java.io.File[] r2, r4, r7, r8, $r15, $r22, r23;
        java.util.HashMap r3, $r12;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, i8;
        java.io.File r5, r9, $r16;
        com.android.inputmethod.latin.BinaryDictionaryGetter$FileAndMatchLevel r11, $r21, r25;
        boolean $z0, $z1, $z2, $z3;
        java.util.Collection $r13;
        java.lang.Object $r14, $r20;
        java.util.Iterator r24;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.content.Context;

        r2 = staticinvoke <com.android.inputmethod.latin.utils.DictionaryInfoUtils: java.io.File[] getCachedDirectoryList(android.content.Context)>(r1);

        if null != r2 goto label01;

        $r22 = <com.android.inputmethod.latin.BinaryDictionaryGetter: java.io.File[] EMPTY_FILE_ARRAY>;

        return $r22;

     label01:
        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        r3 = $r12;

        r4 = r2;

        i0 = lengthof r4;

        i1 = 0;

     label02:
        if i1 >= i0 goto label08;

        r5 = r4[i1];

        $z2 = virtualinvoke r5.<java.io.File: boolean isDirectory()>();

        if $z2 != 0 goto label03;

        goto label07;

     label03:
        $r17 = virtualinvoke r5.<java.io.File: java.lang.String getName()>();

        r6 = staticinvoke <com.android.inputmethod.latin.utils.DictionaryInfoUtils: java.lang.String getWordListIdFromFileName(java.lang.String)>($r17);

        i2 = staticinvoke <com.android.inputmethod.latin.utils.LocaleUtils: int getMatchLevel(java.lang.String,java.lang.String)>(r6, r0);

        $z3 = staticinvoke <com.android.inputmethod.latin.utils.LocaleUtils: boolean isMatch(int)>(i2);

        if $z3 == 0 goto label07;

        r7 = virtualinvoke r5.<java.io.File: java.io.File[] listFiles()>();

        if null == r7 goto label07;

        r8 = r7;

        i3 = lengthof r8;

        i4 = 0;

     label04:
        if i4 >= i3 goto label07;

        r9 = r8[i4];

        $r18 = virtualinvoke r9.<java.io.File: java.lang.String getName()>();

        r10 = staticinvoke <com.android.inputmethod.latin.utils.DictionaryInfoUtils: java.lang.String getCategoryFromFileName(java.lang.String)>($r18);

        $r20 = virtualinvoke r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r10);

        r11 = (com.android.inputmethod.latin.BinaryDictionaryGetter$FileAndMatchLevel) $r20;

        if null == r11 goto label05;

        $i7 = r11.<com.android.inputmethod.latin.BinaryDictionaryGetter$FileAndMatchLevel: int mMatchLevel>;

        if $i7 >= i2 goto label06;

     label05:
        $r21 = new com.android.inputmethod.latin.BinaryDictionaryGetter$FileAndMatchLevel;

        specialinvoke $r21.<com.android.inputmethod.latin.BinaryDictionaryGetter$FileAndMatchLevel: void <init>(java.io.File,int)>(r9, i2);

        virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, $r21);

     label06:
        i4 = i4 + 1;

        goto label04;

     label07:
        i1 = i1 + 1;

        goto label02;

     label08:
        $z0 = virtualinvoke r3.<java.util.HashMap: boolean isEmpty()>();

        if $z0 == 0 goto label09;

        $r15 = <com.android.inputmethod.latin.BinaryDictionaryGetter: java.io.File[] EMPTY_FILE_ARRAY>;

        return $r15;

     label09:
        $i5 = virtualinvoke r3.<java.util.HashMap: int size()>();

        r23 = newarray (java.io.File)[$i5];

        i8 = 0;

        $r13 = virtualinvoke r3.<java.util.HashMap: java.util.Collection values()>();

        r24 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();

     label10:
        $z1 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r14 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r25 = (com.android.inputmethod.latin.BinaryDictionaryGetter$FileAndMatchLevel) $r14;

        $i6 = i8;

        i8 = i8 + 1;

        $r16 = r25.<com.android.inputmethod.latin.BinaryDictionaryGetter$FileAndMatchLevel: java.io.File mFile>;

        r23[$i6] = $r16;

        goto label10;

     label11:
        return r23;
    }

    public static void removeFilesWithIdExcept(android.content.Context, java.lang.String, java.io.File)
    {
        android.content.Context r0;
        java.lang.String r1, r10, $r11, $r14;
        java.io.File r2, r3, r6, r9, $r12;
        java.io.File[] r4, r5, r7, r8;
        int i0, i1, i2, i3;
        boolean $z0, $z1, $z2;
        java.io.IOException $r13, r15;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.io.File;

     label01:
        r3 = virtualinvoke r2.<java.io.File: java.io.File getCanonicalFile()>();

        r4 = staticinvoke <com.android.inputmethod.latin.utils.DictionaryInfoUtils: java.io.File[] getCachedDirectoryList(android.content.Context)>(r0);

        if null != r4 goto label03;

     label02:
        return;

     label03:
        r5 = r4;

        i0 = lengthof r5;

        i1 = 0;

     label04:
        if i1 >= i0 goto label10;

        r6 = r5[i1];

        $z0 = virtualinvoke r6.<java.io.File: boolean isDirectory()>();

        if $z0 != 0 goto label05;

        goto label09;

     label05:
        r7 = virtualinvoke r6.<java.io.File: java.io.File[] listFiles()>();

        if null != r7 goto label06;

        goto label09;

     label06:
        r8 = r7;

        i2 = lengthof r8;

        i3 = 0;

     label07:
        if i3 >= i2 goto label09;

        r9 = r8[i3];

        $r11 = virtualinvoke r9.<java.io.File: java.lang.String getName()>();

        r10 = staticinvoke <com.android.inputmethod.latin.utils.DictionaryInfoUtils: java.lang.String getWordListIdFromFileName(java.lang.String)>($r11);

        $z1 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label08;

        $r12 = virtualinvoke r9.<java.io.File: java.io.File getCanonicalFile()>();

        $z2 = virtualinvoke r3.<java.io.File: boolean equals(java.lang.Object)>($r12);

        if $z2 != 0 goto label08;

        virtualinvoke r9.<java.io.File: boolean delete()>();

     label08:
        i3 = i3 + 1;

        goto label07;

     label09:
        i1 = i1 + 1;

        goto label04;

     label10:
        goto label12;

     label11:
        $r13 := @caughtexception;

        r15 = $r13;

        $r14 = <com.android.inputmethod.latin.BinaryDictionaryGetter: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r14, "IOException trying to cleanup files", r15);

     label12:
        return;

        catch java.io.IOException from label01 to label02 with label11;
        catch java.io.IOException from label03 to label10 with label11;
    }

    private static boolean hackCanUseDictionaryFile(java.util.Locale, java.io.File)
    {
        java.util.Locale r0;
        java.io.File r1;
        com.android.inputmethod.latin.makedict.DictionaryHeader r2;
        java.lang.String r3, $r5;
        com.android.inputmethod.latin.makedict.FormatSpec$DictionaryOptions $r4;
        java.util.HashMap $r6;
        java.lang.Object $r7;
        int $i0;
        boolean $z0;
        java.io.FileNotFoundException $r8;
        java.lang.NumberFormatException $r9;
        java.nio.BufferUnderflowException $r10;
        com.android.inputmethod.latin.makedict.UnsupportedFormatException $r11;
        java.io.IOException $r12;

        r0 := @parameter0: java.util.Locale;

        r1 := @parameter1: java.io.File;

     label01:
        r2 = staticinvoke <com.android.inputmethod.latin.utils.BinaryDictionaryUtils: com.android.inputmethod.latin.makedict.DictionaryHeader getHeader(java.io.File)>(r1);

        $r4 = r2.<com.android.inputmethod.latin.makedict.DictionaryHeader: com.android.inputmethod.latin.makedict.FormatSpec$DictionaryOptions mDictionaryOptions>;

        $r6 = $r4.<com.android.inputmethod.latin.makedict.FormatSpec$DictionaryOptions: java.util.HashMap mAttributes>;

        $r5 = <com.android.inputmethod.latin.BinaryDictionaryGetter: java.lang.String VERSION_KEY>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        r3 = (java.lang.String) $r7;

        if null != r3 goto label03;

     label02:
        return 0;

     label03:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        if $i0 < 18 goto label04;

        $z0 = 1;

        goto label05;

     label04:
        $z0 = 0;

     label05:
        return $z0;

     label06:
        $r8 := @caughtexception;

        return 0;

     label07:
        $r12 := @caughtexception;

        return 0;

     label08:
        $r9 := @caughtexception;

        return 0;

     label09:
        $r10 := @caughtexception;

        return 0;

     label10:
        $r11 := @caughtexception;

        return 0;

        catch java.io.FileNotFoundException from label01 to label02 with label06;
        catch java.io.FileNotFoundException from label03 to label05 with label06;
        catch java.io.IOException from label01 to label02 with label07;
        catch java.io.IOException from label03 to label05 with label07;
        catch java.lang.NumberFormatException from label01 to label02 with label08;
        catch java.lang.NumberFormatException from label03 to label05 with label08;
        catch java.nio.BufferUnderflowException from label01 to label02 with label09;
        catch java.nio.BufferUnderflowException from label03 to label05 with label09;
        catch com.android.inputmethod.latin.makedict.UnsupportedFormatException from label01 to label02 with label10;
        catch com.android.inputmethod.latin.makedict.UnsupportedFormatException from label03 to label05 with label10;
    }

    public static java.util.ArrayList getDictionaryFiles(java.util.Locale, android.content.Context)
    {
        java.util.Locale r0;
        android.content.Context r1;
        boolean z0, z1, z2, $z3, $z5, $z6, $z8, $z9, $z10;
        java.io.File[] r2, r6;
        java.lang.String r3, r8, $r10, $r14, $r15, $r16;
        com.android.inputmethod.latin.BinaryDictionaryGetter$DictPackSettings r4, $r11;
        java.util.ArrayList r5, $r12;
        int i0, i1, i3;
        java.io.File r7;
        com.android.inputmethod.latin.AssetFileAddress r9, r17;
        android.content.res.Resources $r13;

        r0 := @parameter0: java.util.Locale;

        r1 := @parameter1: android.content.Context;

        z0 = staticinvoke <com.android.inputmethod.latin.DictionaryFactory: boolean isDictionaryAvailable(android.content.Context,java.util.Locale)>(r1, r0);

        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void cacheWordListsFromContentProvider(java.util.Locale,android.content.Context,boolean)>(r0, r1, z0);

        $r10 = virtualinvoke r0.<java.util.Locale: java.lang.String toString()>();

        r2 = staticinvoke <com.android.inputmethod.latin.BinaryDictionaryGetter: java.io.File[] getCachedWordLists(java.lang.String,android.content.Context)>($r10, r1);

        r3 = staticinvoke <com.android.inputmethod.latin.utils.DictionaryInfoUtils: java.lang.String getMainDictId(java.util.Locale)>(r0);

        $r11 = new com.android.inputmethod.latin.BinaryDictionaryGetter$DictPackSettings;

        specialinvoke $r11.<com.android.inputmethod.latin.BinaryDictionaryGetter$DictPackSettings: void <init>(android.content.Context)>(r1);

        r4 = $r11;

        z1 = 0;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r5 = $r12;

        r6 = r2;

        i0 = lengthof r6;

        i1 = 0;

     label01:
        if i1 >= i0 goto label09;

        r7 = r6[i1];

        $r14 = virtualinvoke r7.<java.io.File: java.lang.String getName()>();

        r8 = staticinvoke <com.android.inputmethod.latin.utils.DictionaryInfoUtils: java.lang.String getWordListIdFromFileName(java.lang.String)>($r14);

        $z6 = virtualinvoke r7.<java.io.File: boolean canRead()>();

        if $z6 == 0 goto label02;

        $z9 = staticinvoke <com.android.inputmethod.latin.BinaryDictionaryGetter: boolean hackCanUseDictionaryFile(java.util.Locale,java.io.File)>(r0, r7);

        if $z9 == 0 goto label02;

        $z10 = 1;

        goto label03;

     label02:
        $z10 = 0;

     label03:
        z2 = $z10;

        if z2 == 0 goto label04;

        $z8 = staticinvoke <com.android.inputmethod.latin.utils.DictionaryInfoUtils: boolean isMainWordListId(java.lang.String)>(r8);

        if $z8 == 0 goto label04;

        z1 = 1;

     label04:
        $z5 = virtualinvoke r4.<com.android.inputmethod.latin.BinaryDictionaryGetter$DictPackSettings: boolean isWordListActive(java.lang.String)>(r8);

        if $z5 != 0 goto label05;

        goto label08;

     label05:
        if z2 == 0 goto label07;

        $r16 = virtualinvoke r7.<java.io.File: java.lang.String getPath()>();

        r9 = staticinvoke <com.android.inputmethod.latin.AssetFileAddress: com.android.inputmethod.latin.AssetFileAddress makeFromFileName(java.lang.String)>($r16);

        if null == r9 goto label06;

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r9);

     label06:
        goto label08;

     label07:
        $r15 = <com.android.inputmethod.latin.BinaryDictionaryGetter: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r15, "Found a cached dictionary file but cannot read or use it");

     label08:
        i1 = i1 + 1;

        goto label01;

     label09:
        if z1 != 0 goto label10;

        $z3 = virtualinvoke r4.<com.android.inputmethod.latin.BinaryDictionaryGetter$DictPackSettings: boolean isWordListActive(java.lang.String)>(r3);

        if $z3 == 0 goto label10;

        $r13 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        i3 = staticinvoke <com.android.inputmethod.latin.utils.DictionaryInfoUtils: int getMainDictionaryResourceId(android.content.res.Resources,java.util.Locale)>($r13, r0);

        r17 = staticinvoke <com.android.inputmethod.latin.BinaryDictionaryGetter: com.android.inputmethod.latin.AssetFileAddress loadFallbackResource(android.content.Context,int)>(r1, i3);

        if null == r17 goto label10;

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r17);

     label10:
        return r5;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.io.File[] $r2;

        <com.android.inputmethod.latin.BinaryDictionaryGetter: java.lang.String ID_CATEGORY_SEPARATOR> = ":";

        <com.android.inputmethod.latin.BinaryDictionaryGetter: java.lang.String MAIN_DICTIONARY_CATEGORY> = "main";

        <com.android.inputmethod.latin.BinaryDictionaryGetter: java.lang.String COMMON_PREFERENCES_NAME> = "LatinImeDictPrefs";

        $r0 = class "com/android/inputmethod/latin/BinaryDictionaryGetter";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.inputmethod.latin.BinaryDictionaryGetter: java.lang.String TAG> = $r1;

        $r2 = newarray (java.io.File)[0];

        <com.android.inputmethod.latin.BinaryDictionaryGetter: java.io.File[] EMPTY_FILE_ARRAY> = $r2;

        <com.android.inputmethod.latin.BinaryDictionaryGetter: java.lang.String VERSION_KEY> = "version";

        return;
    }
}
