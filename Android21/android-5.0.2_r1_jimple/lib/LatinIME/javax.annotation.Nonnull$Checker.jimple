public class javax.annotation.Nonnull$Checker extends java.lang.Object implements javax.annotation.meta.TypeQualifierValidator
{

    public void <init>()
    {
        javax.annotation.Nonnull$Checker r0;

        r0 := @this: javax.annotation.Nonnull$Checker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public javax.annotation.meta.When forConstantValue(javax.annotation.Nonnull, java.lang.Object)
    {
        javax.annotation.Nonnull$Checker r0;
        javax.annotation.Nonnull r1;
        java.lang.Object r2;
        javax.annotation.meta.When $r3, $r4;

        r0 := @this: javax.annotation.Nonnull$Checker;

        r1 := @parameter0: javax.annotation.Nonnull;

        r2 := @parameter1: java.lang.Object;

        if r2 != null goto label1;

        $r4 = <javax.annotation.meta.When: javax.annotation.meta.When NEVER>;

        return $r4;

     label1:
        $r3 = <javax.annotation.meta.When: javax.annotation.meta.When ALWAYS>;

        return $r3;
    }

    public volatile javax.annotation.meta.When forConstantValue(java.lang.annotation.Annotation, java.lang.Object)
    {
        javax.annotation.Nonnull$Checker r0;
        java.lang.annotation.Annotation r1;
        java.lang.Object r2;
        javax.annotation.Nonnull $r3;
        javax.annotation.meta.When $r4;

        r0 := @this: javax.annotation.Nonnull$Checker;

        r1 := @parameter0: java.lang.annotation.Annotation;

        r2 := @parameter1: java.lang.Object;

        $r3 = (javax.annotation.Nonnull) r1;

        $r4 = virtualinvoke r0.<javax.annotation.Nonnull$Checker: javax.annotation.meta.When forConstantValue(javax.annotation.Nonnull,java.lang.Object)>($r3, r2);

        return $r4;
    }
}
