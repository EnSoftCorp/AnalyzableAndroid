public class com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate extends android.support.v4.view.AccessibilityDelegateCompat
{
    private static final java.lang.String TAG;
    protected static final boolean DEBUG_HOVER;
    protected final com.android.inputmethod.keyboard.KeyboardView mKeyboardView;
    protected final com.android.inputmethod.keyboard.KeyDetector mKeyDetector;
    private com.android.inputmethod.keyboard.Keyboard mKeyboard;
    private com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider mAccessibilityNodeProvider;
    private com.android.inputmethod.keyboard.Key mLastHoverKey;
    public static final int HOVER_EVENT_POINTER_ID;

    public void <init>(com.android.inputmethod.keyboard.KeyboardView, com.android.inputmethod.keyboard.KeyDetector)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate r0;
        com.android.inputmethod.keyboard.KeyboardView r1;
        com.android.inputmethod.keyboard.KeyDetector r2;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate;

        r1 := @parameter0: com.android.inputmethod.keyboard.KeyboardView;

        r2 := @parameter1: com.android.inputmethod.keyboard.KeyDetector;

        specialinvoke r0.<android.support.v4.view.AccessibilityDelegateCompat: void <init>()>();

        r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.keyboard.KeyboardView mKeyboardView> = r1;

        r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.keyboard.KeyDetector mKeyDetector> = r2;

        staticinvoke <android.support.v4.view.ViewCompat: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>(r1, r0);

        return;
    }

    public void setKeyboard(com.android.inputmethod.keyboard.Keyboard)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate r0;
        com.android.inputmethod.keyboard.Keyboard r1;
        com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider $r2, $r3;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate;

        r1 := @parameter0: com.android.inputmethod.keyboard.Keyboard;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider mAccessibilityNodeProvider>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider mAccessibilityNodeProvider>;

        virtualinvoke $r3.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: void setKeyboard(com.android.inputmethod.keyboard.Keyboard)>(r1);

     label2:
        r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.keyboard.Keyboard mKeyboard> = r1;

        return;
    }

    protected final com.android.inputmethod.keyboard.Keyboard getKeyboard()
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate r0;
        com.android.inputmethod.keyboard.Keyboard $r1;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate;

        $r1 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.keyboard.Keyboard mKeyboard>;

        return $r1;
    }

    protected final void setLastHoverKey(com.android.inputmethod.keyboard.Key)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate r0;
        com.android.inputmethod.keyboard.Key r1;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate;

        r1 := @parameter0: com.android.inputmethod.keyboard.Key;

        r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.keyboard.Key mLastHoverKey> = r1;

        return;
    }

    protected final com.android.inputmethod.keyboard.Key getLastHoverKey()
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate r0;
        com.android.inputmethod.keyboard.Key $r1;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate;

        $r1 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.keyboard.Key mLastHoverKey>;

        return $r1;
    }

    protected void sendWindowStateChanged(int)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate r0;
        int i0;
        android.content.Context r1;
        com.android.inputmethod.keyboard.KeyboardView $r2;
        java.lang.String $r3;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.keyboard.KeyboardView mKeyboardView>;

        r1 = virtualinvoke $r2.<com.android.inputmethod.keyboard.KeyboardView: android.content.Context getContext()>();

        $r3 = virtualinvoke r1.<android.content.Context: java.lang.String getString(int)>(i0);

        virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: void sendWindowStateChanged(java.lang.String)>($r3);

        return;
    }

    protected void sendWindowStateChanged(java.lang.String)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate r0;
        java.lang.String r1;
        android.view.accessibility.AccessibilityEvent r2;
        android.view.ViewParent r3;
        com.android.inputmethod.keyboard.KeyboardView $r4, $r6, $r7;
        java.util.List $r5;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>(32);

        $r4 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.keyboard.KeyboardView mKeyboardView>;

        virtualinvoke $r4.<com.android.inputmethod.keyboard.KeyboardView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r2);

        $r5 = virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r1);

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setContentDescription(java.lang.CharSequence)>(null);

        $r6 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.keyboard.KeyboardView mKeyboardView>;

        r3 = virtualinvoke $r6.<com.android.inputmethod.keyboard.KeyboardView: android.view.ViewParent getParent()>();

        if r3 == null goto label1;

        $r7 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.keyboard.KeyboardView mKeyboardView>;

        interfaceinvoke r3.<android.view.ViewParent: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>($r7, r2);

     label1:
        return;
    }

    public com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate r0;
        android.view.View r1;
        com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider $r2;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider getAccessibilityNodeProvider()>();

        return $r2;
    }

    protected com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider getAccessibilityNodeProvider()
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate r0;
        com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider $r1, $r2, $r3;
        com.android.inputmethod.keyboard.KeyboardView $r4;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate;

        $r1 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider mAccessibilityNodeProvider>;

        if $r1 != null goto label1;

        $r3 = new com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider;

        $r4 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.keyboard.KeyboardView mKeyboardView>;

        specialinvoke $r3.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: void <init>(com.android.inputmethod.keyboard.KeyboardView,com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate)>($r4, r0);

        r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider mAccessibilityNodeProvider> = $r3;

     label1:
        $r2 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider mAccessibilityNodeProvider>;

        return $r2;
    }

    protected final com.android.inputmethod.keyboard.Key getHoverKeyOf(android.view.MotionEvent)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate r0;
        android.view.MotionEvent r1;
        int i0, i1, i2;
        float $f0, $f1;
        com.android.inputmethod.keyboard.KeyDetector $r2;
        com.android.inputmethod.keyboard.Key $r3;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i0);

        i1 = (int) $f0;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i0);

        i2 = (int) $f1;

        $r2 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.keyboard.KeyDetector mKeyDetector>;

        $r3 = virtualinvoke $r2.<com.android.inputmethod.keyboard.KeyDetector: com.android.inputmethod.keyboard.Key detectHitKey(int,int)>(i1, i2);

        return $r3;
    }

    public boolean onHoverEvent(android.view.MotionEvent)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate r0;
        android.view.MotionEvent r1;
        int $i0;
        java.lang.Class $r2;
        java.lang.String $r3, $r7;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate;

        r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        tableswitch($i0)
        {
            case 7: goto label2;
            case 8: goto label4;
            case 9: goto label1;
            case 10: goto label3;
            default: goto label4;
        };

     label1:
        virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: void onHoverEnter(android.view.MotionEvent)>(r1);

        goto label5;

     label2:
        virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: void onHoverMove(android.view.MotionEvent)>(r1);

        goto label5;

     label3:
        virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: void onHoverExit(android.view.MotionEvent)>(r1);

        goto label5;

     label4:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown hover event: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r3, $r7);

     label5:
        return 1;
    }

    protected void onHoverEnter(android.view.MotionEvent)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate r0;
        android.view.MotionEvent r1;
        com.android.inputmethod.keyboard.Key r2;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate;

        r1 := @parameter0: android.view.MotionEvent;

        r2 = virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.keyboard.Key getHoverKeyOf(android.view.MotionEvent)>(r1);

        if r2 == null goto label1;

        virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: void onHoverEnterTo(com.android.inputmethod.keyboard.Key)>(r2);

     label1:
        virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: void setLastHoverKey(com.android.inputmethod.keyboard.Key)>(r2);

        return;
    }

    protected void onHoverMove(android.view.MotionEvent)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate r0;
        android.view.MotionEvent r1;
        com.android.inputmethod.keyboard.Key r2, r3;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate;

        r1 := @parameter0: android.view.MotionEvent;

        r2 = virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.keyboard.Key getLastHoverKey()>();

        r3 = virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.keyboard.Key getHoverKeyOf(android.view.MotionEvent)>(r1);

        if r3 == r2 goto label2;

        if r2 == null goto label1;

        virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: void onHoverExitFrom(com.android.inputmethod.keyboard.Key)>(r2);

     label1:
        if r3 == null goto label2;

        virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: void onHoverEnterTo(com.android.inputmethod.keyboard.Key)>(r3);

     label2:
        if r3 == null goto label3;

        virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: void onHoverMoveWithin(com.android.inputmethod.keyboard.Key)>(r3);

     label3:
        virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: void setLastHoverKey(com.android.inputmethod.keyboard.Key)>(r3);

        return;
    }

    protected void onHoverExit(android.view.MotionEvent)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate r0;
        android.view.MotionEvent r1;
        com.android.inputmethod.keyboard.Key r2, r3;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate;

        r1 := @parameter0: android.view.MotionEvent;

        r2 = virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.keyboard.Key getLastHoverKey()>();

        if r2 == null goto label1;

        virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: void onHoverExitFrom(com.android.inputmethod.keyboard.Key)>(r2);

     label1:
        r3 = virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.keyboard.Key getHoverKeyOf(android.view.MotionEvent)>(r1);

        if r3 == null goto label2;

        virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: void performClickOn(com.android.inputmethod.keyboard.Key)>(r3);

        virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: void onHoverExitFrom(com.android.inputmethod.keyboard.Key)>(r3);

     label2:
        virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: void setLastHoverKey(com.android.inputmethod.keyboard.Key)>(null);

        return;
    }

    public void performClickOn(com.android.inputmethod.keyboard.Key)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate r0;
        com.android.inputmethod.keyboard.Key r1;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate;

        r1 := @parameter0: com.android.inputmethod.keyboard.Key;

        specialinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: void simulateTouchEvent(int,com.android.inputmethod.keyboard.Key)>(0, r1);

        specialinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: void simulateTouchEvent(int,com.android.inputmethod.keyboard.Key)>(1, r1);

        return;
    }

    private void simulateTouchEvent(int, com.android.inputmethod.keyboard.Key)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate r0;
        int i0, i1, i2;
        com.android.inputmethod.keyboard.Key r1;
        long l3;
        android.view.MotionEvent r2;
        android.graphics.Rect $r3, $r4;
        float $f0, $f1;
        com.android.inputmethod.keyboard.KeyboardView $r5;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.inputmethod.keyboard.Key;

        $r3 = virtualinvoke r1.<com.android.inputmethod.keyboard.Key: android.graphics.Rect getHitBox()>();

        i1 = virtualinvoke $r3.<android.graphics.Rect: int centerX()>();

        $r4 = virtualinvoke r1.<com.android.inputmethod.keyboard.Key: android.graphics.Rect getHitBox()>();

        i2 = virtualinvoke $r4.<android.graphics.Rect: int centerY()>();

        l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $f1 = (float) i1;

        $f0 = (float) i2;

        r2 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>(l3, l3, i0, $f1, $f0, 0);

        $r5 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.keyboard.KeyboardView mKeyboardView>;

        virtualinvoke $r5.<com.android.inputmethod.keyboard.KeyboardView: boolean onTouchEvent(android.view.MotionEvent)>(r2);

        virtualinvoke r2.<android.view.MotionEvent: void recycle()>();

        return;
    }

    protected void onHoverEnterTo(com.android.inputmethod.keyboard.Key)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate r0;
        com.android.inputmethod.keyboard.Key r1;
        com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider r2;
        com.android.inputmethod.keyboard.KeyboardView $r3;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate;

        r1 := @parameter0: com.android.inputmethod.keyboard.Key;

        virtualinvoke r1.<com.android.inputmethod.keyboard.Key: void onPressed()>();

        $r3 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.keyboard.KeyboardView mKeyboardView>;

        virtualinvoke $r3.<com.android.inputmethod.keyboard.KeyboardView: void invalidateKey(com.android.inputmethod.keyboard.Key)>(r1);

        r2 = virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider getAccessibilityNodeProvider()>();

        virtualinvoke r2.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: void onHoverEnterTo(com.android.inputmethod.keyboard.Key)>(r1);

        virtualinvoke r2.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: boolean performActionForKey(com.android.inputmethod.keyboard.Key,int)>(r1, 64);

        return;
    }

    protected void onHoverMoveWithin(com.android.inputmethod.keyboard.Key)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate r0;
        com.android.inputmethod.keyboard.Key r1;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate;

        r1 := @parameter0: com.android.inputmethod.keyboard.Key;

        return;
    }

    protected void onHoverExitFrom(com.android.inputmethod.keyboard.Key)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate r0;
        com.android.inputmethod.keyboard.Key r1;
        com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider r2;
        com.android.inputmethod.keyboard.KeyboardView $r3;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate;

        r1 := @parameter0: com.android.inputmethod.keyboard.Key;

        virtualinvoke r1.<com.android.inputmethod.keyboard.Key: void onReleased()>();

        $r3 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.keyboard.KeyboardView mKeyboardView>;

        virtualinvoke $r3.<com.android.inputmethod.keyboard.KeyboardView: void invalidateKey(com.android.inputmethod.keyboard.Key)>(r1);

        r2 = virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider getAccessibilityNodeProvider()>();

        virtualinvoke r2.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: void onHoverExitFrom(com.android.inputmethod.keyboard.Key)>(r1);

        return;
    }

    public void performLongClickOn(com.android.inputmethod.keyboard.Key)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate r0;
        com.android.inputmethod.keyboard.Key r1;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate;

        r1 := @parameter0: com.android.inputmethod.keyboard.Key;

        return;
    }

    public volatile android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate r0;
        android.view.View r1;
        com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider $r2;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: int HOVER_EVENT_POINTER_ID> = 0;

        <com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: boolean DEBUG_HOVER> = 0;

        $r0 = class "com/android/inputmethod/accessibility/KeyboardAccessibilityDelegate";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: java.lang.String TAG> = $r1;

        return;
    }
}
