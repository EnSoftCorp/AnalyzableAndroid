public class com.android.inputmethod.event.CombinerChain extends java.lang.Object
{
    private java.lang.StringBuilder mCombinedText;
    private android.text.SpannableStringBuilder mStateFeedback;
    private final java.util.ArrayList mCombiners;
    private static final java.util.HashMap IMPLEMENTED_COMBINERS;
    private static final java.lang.String COMBINER_SPEC_SEPARATOR;

    public transient void <init>(java.lang.String, com.android.inputmethod.event.Combiner[])
    {
        com.android.inputmethod.event.CombinerChain r0;
        java.lang.String r1;
        com.android.inputmethod.event.Combiner[] r2, r3;
        int i0, i1;
        com.android.inputmethod.event.Combiner r4;
        java.util.ArrayList $r5, $r7, $r10;
        com.android.inputmethod.event.DeadKeyCombiner $r6;
        java.lang.StringBuilder $r8;
        android.text.SpannableStringBuilder $r9;

        r0 := @this: com.android.inputmethod.event.CombinerChain;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.inputmethod.event.Combiner[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.inputmethod.event.CombinerChain: java.util.ArrayList mCombiners> = $r5;

        $r7 = r0.<com.android.inputmethod.event.CombinerChain: java.util.ArrayList mCombiners>;

        $r6 = new com.android.inputmethod.event.DeadKeyCombiner;

        specialinvoke $r6.<com.android.inputmethod.event.DeadKeyCombiner: void <init>()>();

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        r3 = r2;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r4 = r3[i1];

        $r10 = r0.<com.android.inputmethod.event.CombinerChain: java.util.ArrayList mCombiners>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(r1);

        r0.<com.android.inputmethod.event.CombinerChain: java.lang.StringBuilder mCombinedText> = $r8;

        $r9 = new android.text.SpannableStringBuilder;

        specialinvoke $r9.<android.text.SpannableStringBuilder: void <init>()>();

        r0.<com.android.inputmethod.event.CombinerChain: android.text.SpannableStringBuilder mStateFeedback> = $r9;

        return;
    }

    public void reset()
    {
        com.android.inputmethod.event.CombinerChain r0;
        java.util.Iterator r1;
        com.android.inputmethod.event.Combiner r2;
        java.lang.StringBuilder $r3;
        android.text.SpannableStringBuilder $r4;
        java.util.ArrayList $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: com.android.inputmethod.event.CombinerChain;

        $r3 = r0.<com.android.inputmethod.event.CombinerChain: java.lang.StringBuilder mCombinedText>;

        virtualinvoke $r3.<java.lang.StringBuilder: void setLength(int)>(0);

        $r4 = r0.<com.android.inputmethod.event.CombinerChain: android.text.SpannableStringBuilder mStateFeedback>;

        virtualinvoke $r4.<android.text.SpannableStringBuilder: void clear()>();

        $r5 = r0.<com.android.inputmethod.event.CombinerChain: java.util.ArrayList mCombiners>;

        r1 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.inputmethod.event.Combiner) $r6;

        interfaceinvoke r2.<com.android.inputmethod.event.Combiner: void reset()>();

        goto label1;

     label2:
        return;
    }

    private void updateStateFeedback()
    {
        com.android.inputmethod.event.CombinerChain r0;
        int i0, $i1;
        android.text.SpannableStringBuilder $r1, $r4;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r5;
        com.android.inputmethod.event.Combiner $r6;
        java.lang.CharSequence $r7;

        r0 := @this: com.android.inputmethod.event.CombinerChain;

        $r1 = r0.<com.android.inputmethod.event.CombinerChain: android.text.SpannableStringBuilder mStateFeedback>;

        virtualinvoke $r1.<android.text.SpannableStringBuilder: void clear()>();

        $r2 = r0.<com.android.inputmethod.event.CombinerChain: java.util.ArrayList mCombiners>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label2;

        $r4 = r0.<com.android.inputmethod.event.CombinerChain: android.text.SpannableStringBuilder mStateFeedback>;

        $r3 = r0.<com.android.inputmethod.event.CombinerChain: java.util.ArrayList mCombiners>;

        $r5 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r6 = (com.android.inputmethod.event.Combiner) $r5;

        $r7 = interfaceinvoke $r6.<com.android.inputmethod.event.Combiner: java.lang.CharSequence getCombiningStateFeedback()>();

        virtualinvoke $r4.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r7);

        i0 = i0 + -1;

        goto label1;

     label2:
        return;
    }

    public com.android.inputmethod.event.Event processEvent(java.util.ArrayList, com.android.inputmethod.event.Event)
    {
        com.android.inputmethod.event.CombinerChain r0;
        java.util.ArrayList r1, r3, $r7, $r8;
        com.android.inputmethod.event.Event r2, r4;
        java.util.Iterator r5;
        com.android.inputmethod.event.Combiner r6;
        boolean $z0, $z1;
        java.lang.Object $r9;

        r0 := @this: com.android.inputmethod.event.CombinerChain;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: com.android.inputmethod.event.Event;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        r3 = $r7;

        r4 = r2;

        $r8 = r0.<com.android.inputmethod.event.CombinerChain: java.util.ArrayList mCombiners>;

        r5 = virtualinvoke $r8.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.android.inputmethod.event.Combiner) $r9;

        r4 = interfaceinvoke r6.<com.android.inputmethod.event.Combiner: com.android.inputmethod.event.Event processEvent(java.util.ArrayList,com.android.inputmethod.event.Event)>(r3, r4);

        $z1 = virtualinvoke r4.<com.android.inputmethod.event.Event: boolean isConsumed()>();

        if $z1 == 0 goto label2;

        goto label3;

     label2:
        goto label1;

     label3:
        specialinvoke r0.<com.android.inputmethod.event.CombinerChain: void updateStateFeedback()>();

        return r4;
    }

    public void applyProcessedEvent(com.android.inputmethod.event.Event)
    {
        com.android.inputmethod.event.CombinerChain r0;
        com.android.inputmethod.event.Event r1;
        int i0, i1, $i2, $i3, $i4;
        boolean $z0;
        java.lang.StringBuilder $r2, $r4, $r5, $r6;
        java.lang.CharSequence r8;

        r0 := @this: com.android.inputmethod.event.CombinerChain;

        r1 := @parameter0: com.android.inputmethod.event.Event;

        if null == r1 goto label3;

        $i2 = r1.<com.android.inputmethod.event.Event: int mKeyCode>;

        if -5 != $i2 goto label2;

        $r4 = r0.<com.android.inputmethod.event.CombinerChain: java.lang.StringBuilder mCombinedText>;

        i0 = virtualinvoke $r4.<java.lang.StringBuilder: int length()>();

        if i0 <= 0 goto label1;

        $r5 = r0.<com.android.inputmethod.event.CombinerChain: java.lang.StringBuilder mCombinedText>;

        i1 = virtualinvoke $r5.<java.lang.StringBuilder: int codePointBefore(int)>(i0);

        $r6 = r0.<com.android.inputmethod.event.CombinerChain: java.lang.StringBuilder mCombinedText>;

        $i3 = staticinvoke <java.lang.Character: int charCount(int)>(i1);

        $i4 = i0 - $i3;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>($i4, i0);

     label1:
        goto label3;

     label2:
        r8 = virtualinvoke r1.<com.android.inputmethod.event.Event: java.lang.CharSequence getTextToCommit()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r8);

        if $z0 != 0 goto label3;

        $r2 = r0.<com.android.inputmethod.event.CombinerChain: java.lang.StringBuilder mCombinedText>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r8);

     label3:
        specialinvoke r0.<com.android.inputmethod.event.CombinerChain: void updateStateFeedback()>();

        return;
    }

    public java.lang.CharSequence getComposingWordWithCombiningFeedback()
    {
        com.android.inputmethod.event.CombinerChain r0;
        android.text.SpannableStringBuilder r1, $r2, $r4, $r5;
        java.lang.StringBuilder $r3;

        r0 := @this: com.android.inputmethod.event.CombinerChain;

        $r2 = new android.text.SpannableStringBuilder;

        $r3 = r0.<com.android.inputmethod.event.CombinerChain: java.lang.StringBuilder mCombinedText>;

        specialinvoke $r2.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>($r3);

        r1 = $r2;

        $r4 = r0.<com.android.inputmethod.event.CombinerChain: android.text.SpannableStringBuilder mStateFeedback>;

        $r5 = virtualinvoke r1.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r4);

        return $r5;
    }

    public static com.android.inputmethod.event.Combiner[] createCombiners(java.lang.String)
    {
        java.lang.String r0, r4, $r16, $r21, $r26;
        java.lang.String[] r1, r3;
        com.android.inputmethod.event.Combiner[] r2, $r15;
        int i0, i1, i2, $i3, $i4;
        java.lang.Class r5;
        java.lang.InstantiationException r6, $r18;
        boolean $z0;
        java.util.HashMap $r7;
        java.lang.Object $r8, $r10;
        com.android.inputmethod.event.Combiner $r9;
        java.lang.StringBuilder $r11, $r13, $r14, $r19, $r20, $r22, $r25, $r27, $r28;
        java.lang.RuntimeException $r12, $r17, $r23;
        java.lang.IllegalAccessException $r24, r29;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label1;

        $r15 = newarray (com.android.inputmethod.event.Combiner)[0];

        return $r15;

     label1:
        r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        $i3 = lengthof r1;

        r2 = newarray (com.android.inputmethod.event.Combiner)[$i3];

        i0 = 0;

        r3 = r1;

        i1 = lengthof r3;

        i2 = 0;

     label2:
        if i2 >= i1 goto label8;

        r4 = r3[i2];

        $r7 = <com.android.inputmethod.event.CombinerChain: java.util.HashMap IMPLEMENTED_COMBINERS>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (java.lang.Class) $r8;

        if null != r5 goto label3;

        $r12 = new java.lang.RuntimeException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown combiner descriptor: ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r16);

        throw $r12;

     label3:
        $i4 = i0;

        i0 = i0 + 1;

        $r10 = virtualinvoke r5.<java.lang.Class: java.lang.Object newInstance()>();

        $r9 = (com.android.inputmethod.event.Combiner) $r10;

        r2[$i4] = $r9;

     label4:
        goto label7;

     label5:
        $r18 := @caughtexception;

        r6 = $r18;

        $r17 = new java.lang.RuntimeException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate combiner: ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r21, r6);

        throw $r17;

     label6:
        $r24 := @caughtexception;

        r29 = $r24;

        $r23 = new java.lang.RuntimeException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to instantiate combiner: ");

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r26, r29);

        throw $r23;

     label7:
        i2 = i2 + 1;

        goto label2;

     label8:
        return r2;

        catch java.lang.InstantiationException from label3 to label4 with label5;
        catch java.lang.IllegalAccessException from label3 to label4 with label6;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0, $r1;

        <com.android.inputmethod.event.CombinerChain: java.lang.String COMBINER_SPEC_SEPARATOR> = ";";

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.android.inputmethod.event.CombinerChain: java.util.HashMap IMPLEMENTED_COMBINERS> = $r0;

        $r1 = <com.android.inputmethod.event.CombinerChain: java.util.HashMap IMPLEMENTED_COMBINERS>;

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("MyanmarReordering", class "com/android/inputmethod/event/MyanmarReordering");

        return;
    }
}
