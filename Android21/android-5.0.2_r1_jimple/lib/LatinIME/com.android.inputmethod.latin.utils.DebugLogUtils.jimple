public final class com.android.inputmethod.latin.utils.DebugLogUtils extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final boolean sDBG;

    public void <init>()
    {
        com.android.inputmethod.latin.utils.DebugLogUtils r0;

        r0 := @this: com.android.inputmethod.latin.utils.DebugLogUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String s(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.Object;

        if null != r0 goto label1;

        $r1 = "null";

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

     label2:
        return $r1;
    }

    public static java.lang.String getStackTrace()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <com.android.inputmethod.latin.utils.DebugLogUtils: java.lang.String getStackTrace(int)>(2147483646);

        return $r0;
    }

    public static java.lang.String getStackTrace(int)
    {
        int i0, i1, $i2, $i3;
        java.lang.StringBuilder r0, $r3, $r7, $r10, $r12;
        java.lang.RuntimeException r1, $r4, $r5;
        java.lang.StackTraceElement[] r2;
        java.lang.String $r6, $r9, $r11;
        java.lang.StackTraceElement $r8;

        i0 := @parameter0: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r0 = $r3;

     label1:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>()>();

        throw $r4;

     label2:
        $r5 := @caughtexception;

        r1 = $r5;

        r2 = virtualinvoke r1.<java.lang.RuntimeException: java.lang.StackTraceElement[] getStackTrace()>();

        i1 = 1;

     label3:
        $i2 = lengthof r2;

        if i1 >= $i2 goto label4;

        $i3 = i0 + 1;

        if i1 >= $i3 goto label4;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = r2[i1];

        $r9 = virtualinvoke $r8.<java.lang.StackTraceElement: java.lang.String toString()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        i1 = i1 + 1;

        goto label3;

     label4:
        $r6 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

        catch java.lang.RuntimeException from label1 to label2 with label2;
    }

    public static java.lang.String getStackTrace(java.lang.Throwable)
    {
        java.lang.Throwable r0;
        java.lang.StringBuilder r1, $r3, $r5, $r8, $r9;
        java.lang.StackTraceElement[] r2;
        int i0, $i1;
        java.lang.String $r4, $r7, $r10;
        java.lang.StackTraceElement $r6;

        r0 := @parameter0: java.lang.Throwable;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r1 = $r3;

        r2 = virtualinvoke r0.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        i0 = 0;

     label1:
        $i1 = lengthof r2;

        if i0 >= $i1 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = r2[i0];

        $r7 = virtualinvoke $r6.<java.lang.StackTraceElement: java.lang.String toString()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static transient void l(java.lang.Object[])
    {
        java.lang.Object[] r0;

        r0 := @parameter0: java.lang.Object[];

        return;
    }

    public static transient void r(java.lang.Object[])
    {
        java.lang.Object[] r0;

        r0 := @parameter0: java.lang.Object[];

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.inputmethod.latin.utils.DebugLogUtils: boolean sDBG> = 0;

        $r0 = class "com/android/inputmethod/latin/utils/DebugLogUtils";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.inputmethod.latin.utils.DebugLogUtils: java.lang.String TAG> = $r1;

        return;
    }
}
