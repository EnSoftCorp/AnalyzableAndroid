public final class com.android.inputmethod.latin.utils.ApplicationUtils extends java.lang.Object
{
    private static final java.lang.String TAG;

    private void <init>()
    {
        com.android.inputmethod.latin.utils.ApplicationUtils r0;

        r0 := @this: com.android.inputmethod.latin.utils.ApplicationUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int getActivityTitleResId(android.content.Context, java.lang.Class)
    {
        android.content.Context r0;
        java.lang.Class r1;
        android.content.ComponentName r2, $r4;
        android.content.pm.ActivityInfo r3;
        android.content.pm.PackageManager $r5;
        int $i0;
        android.content.pm.PackageManager$NameNotFoundException $r6, r8;
        java.lang.String $r7;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        $r4 = new android.content.ComponentName;

        specialinvoke $r4.<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>(r0, r1);

        r2 = $r4;

     label1:
        $r5 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r3 = virtualinvoke $r5.<android.content.pm.PackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>(r2, 0);

        if r3 == null goto label3;

        $i0 = r3.<android.content.pm.ActivityInfo: int labelRes>;

     label2:
        return $i0;

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        r8 = $r6;

        $r7 = <com.android.inputmethod.latin.utils.ApplicationUtils: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r7, "Failed to get settings activity title res id.", r8);

     label5:
        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label4;
    }

    public static java.lang.String getVersionName(android.content.Context)
    {
        android.content.Context r0;
        java.lang.String r1, $r4, $r6;
        android.content.pm.PackageInfo r2;
        android.content.pm.PackageManager $r3;
        android.content.pm.PackageManager$NameNotFoundException $r5, r7;

        r0 := @parameter0: android.content.Context;

     label1:
        if r0 != null goto label3;

     label2:
        return "";

     label3:
        r1 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        $r3 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r2 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r1, 0);

        $r4 = r2.<android.content.pm.PackageInfo: java.lang.String versionName>;

     label4:
        return $r4;

     label5:
        $r5 := @caughtexception;

        r7 = $r5;

        $r6 = <com.android.inputmethod.latin.utils.ApplicationUtils: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, "Could not find version info.", r7);

        return "";

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label5;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label5;
    }

    public static int getVersionCode(android.content.Context)
    {
        android.content.Context r0;
        java.lang.String r1, $r5;
        android.content.pm.PackageInfo r2;
        android.content.pm.PackageManager $r3;
        int $i0;
        android.content.pm.PackageManager$NameNotFoundException $r4, r6;

        r0 := @parameter0: android.content.Context;

     label1:
        if r0 != null goto label3;

     label2:
        return 0;

     label3:
        r1 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        $r3 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r2 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r1, 0);

        $i0 = r2.<android.content.pm.PackageInfo: int versionCode>;

     label4:
        return $i0;

     label5:
        $r4 := @caughtexception;

        r6 = $r4;

        $r5 = <com.android.inputmethod.latin.utils.ApplicationUtils: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Could not find version info.", r6);

        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label5;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label5;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "com/android/inputmethod/latin/utils/ApplicationUtils";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.inputmethod.latin.utils.ApplicationUtils: java.lang.String TAG> = $r1;

        return;
    }
}
