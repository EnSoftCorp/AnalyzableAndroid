public class com.android.inputmethod.latin.LatinIME extends android.inputmethodservice.InputMethodService implements com.android.inputmethod.keyboard.KeyboardActionListener, com.android.inputmethod.latin.suggestions.SuggestionStripView$Listener, com.android.inputmethod.latin.suggestions.SuggestionStripViewAccessor, com.android.inputmethod.latin.DictionaryFacilitator$DictionaryInitializationListener, com.android.inputmethod.latin.ImportantNoticeDialog$ImportantNoticeDialogListener
{
    private static final java.lang.String TAG;
    private static final boolean TRACE;
    private static boolean DEBUG;
    private static final int EXTENDED_TOUCHABLE_REGION_HEIGHT;
    private static final int PENDING_IMS_CALLBACK_DURATION;
    private static final int DELAY_WAIT_FOR_DICTIONARY_LOAD;
    private static final int PERIOD_FOR_AUDIO_AND_HAPTIC_FEEDBACK_IN_KEY_REPEAT;
    private static final java.lang.String SCHEME_PACKAGE;
    private final com.android.inputmethod.latin.settings.Settings mSettings;
    private final com.android.inputmethod.latin.DictionaryFacilitator mDictionaryFacilitator;
    private final com.android.inputmethod.latin.personalization.PersonalizationDictionaryUpdater mPersonalizationDictionaryUpdater;
    private final com.android.inputmethod.latin.personalization.ContextualDictionaryUpdater mContextualDictionaryUpdater;
    private final com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic;
    final android.util.SparseArray mHardwareEventDecoders;
    private android.view.View mInputView;
    private com.android.inputmethod.latin.suggestions.SuggestionStripView mSuggestionStripView;
    private android.widget.TextView mExtractEditText;
    private com.android.inputmethod.latin.RichInputMethodManager mRichImm;
    final com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher;
    private final com.android.inputmethod.latin.SubtypeSwitcher mSubtypeSwitcher;
    private final com.android.inputmethod.latin.LatinIME$SubtypeState mSubtypeState;
    private final com.android.inputmethod.latin.SpecialKeyDetector mSpecialKeyDetector;
    private boolean mIsExecutingStartShowingInputView;
    private final android.content.BroadcastReceiver mDictionaryPackInstallReceiver;
    private final android.content.BroadcastReceiver mDictionaryDumpBroadcastReceiver;
    private android.app.AlertDialog mOptionsDialog;
    private final boolean mIsHardwareAcceleratedDrawingEnabled;
    public final com.android.inputmethod.latin.LatinIME$UIHandler mHandler;
    private final android.view.ViewTreeObserver$OnPreDrawListener mExtractTextViewPreDrawListener;
    private final android.content.BroadcastReceiver mConnectivityAndRingerModeChangeReceiver;

    public void <init>()
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.DictionaryFacilitator $r1, $r4, $r7, $r9;
        com.android.inputmethod.latin.utils.DistracterFilterCheckingExactMatchesAndSuggestions $r2;
        com.android.inputmethod.latin.personalization.PersonalizationDictionaryUpdater $r3;
        com.android.inputmethod.latin.personalization.ContextualDictionaryUpdater $r5;
        com.android.inputmethod.latin.LatinIME$1 $r6;
        com.android.inputmethod.latin.inputlogic.InputLogic $r8;
        android.util.SparseArray $r10;
        com.android.inputmethod.latin.LatinIME$SubtypeState $r11;
        com.android.inputmethod.latin.DictionaryPackInstallBroadcastReceiver $r12;
        com.android.inputmethod.latin.DictionaryDumpBroadcastReceiver $r13;
        com.android.inputmethod.latin.LatinIME$UIHandler $r14;
        com.android.inputmethod.latin.LatinIME$2 $r15;
        com.android.inputmethod.latin.settings.Settings $r16;
        com.android.inputmethod.latin.LatinIME$3 $r17;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r18;
        com.android.inputmethod.latin.SubtypeSwitcher $r19;
        boolean $z0, $z1;
        com.android.inputmethod.latin.SpecialKeyDetector $r20;
        java.lang.String $r21, $r24;
        java.lang.StringBuilder $r22, $r23, $r25;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void <init>()>();

        $r1 = new com.android.inputmethod.latin.DictionaryFacilitator;

        $r2 = new com.android.inputmethod.latin.utils.DistracterFilterCheckingExactMatchesAndSuggestions;

        specialinvoke $r2.<com.android.inputmethod.latin.utils.DistracterFilterCheckingExactMatchesAndSuggestions: void <init>(android.content.Context)>(r0);

        specialinvoke $r1.<com.android.inputmethod.latin.DictionaryFacilitator: void <init>(com.android.inputmethod.latin.utils.DistracterFilter)>($r2);

        r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.DictionaryFacilitator mDictionaryFacilitator> = $r1;

        $r3 = new com.android.inputmethod.latin.personalization.PersonalizationDictionaryUpdater;

        $r4 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.DictionaryFacilitator mDictionaryFacilitator>;

        specialinvoke $r3.<com.android.inputmethod.latin.personalization.PersonalizationDictionaryUpdater: void <init>(android.content.Context,com.android.inputmethod.latin.DictionaryFacilitator)>(r0, $r4);

        r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.personalization.PersonalizationDictionaryUpdater mPersonalizationDictionaryUpdater> = $r3;

        $r5 = new com.android.inputmethod.latin.personalization.ContextualDictionaryUpdater;

        $r7 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.DictionaryFacilitator mDictionaryFacilitator>;

        $r6 = new com.android.inputmethod.latin.LatinIME$1;

        specialinvoke $r6.<com.android.inputmethod.latin.LatinIME$1: void <init>(com.android.inputmethod.latin.LatinIME)>(r0);

        specialinvoke $r5.<com.android.inputmethod.latin.personalization.ContextualDictionaryUpdater: void <init>(android.content.Context,com.android.inputmethod.latin.DictionaryFacilitator,java.lang.Runnable)>(r0, $r7, $r6);

        r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.personalization.ContextualDictionaryUpdater mContextualDictionaryUpdater> = $r5;

        $r8 = new com.android.inputmethod.latin.inputlogic.InputLogic;

        $r9 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.DictionaryFacilitator mDictionaryFacilitator>;

        specialinvoke $r8.<com.android.inputmethod.latin.inputlogic.InputLogic: void <init>(com.android.inputmethod.latin.LatinIME,com.android.inputmethod.latin.suggestions.SuggestionStripViewAccessor,com.android.inputmethod.latin.DictionaryFacilitator)>(r0, r0, $r9);

        r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic> = $r8;

        $r10 = new android.util.SparseArray;

        specialinvoke $r10.<android.util.SparseArray: void <init>(int)>(1);

        r0.<com.android.inputmethod.latin.LatinIME: android.util.SparseArray mHardwareEventDecoders> = $r10;

        $r11 = new com.android.inputmethod.latin.LatinIME$SubtypeState;

        specialinvoke $r11.<com.android.inputmethod.latin.LatinIME$SubtypeState: void <init>()>();

        r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$SubtypeState mSubtypeState> = $r11;

        $r12 = new com.android.inputmethod.latin.DictionaryPackInstallBroadcastReceiver;

        specialinvoke $r12.<com.android.inputmethod.latin.DictionaryPackInstallBroadcastReceiver: void <init>(com.android.inputmethod.latin.LatinIME)>(r0);

        r0.<com.android.inputmethod.latin.LatinIME: android.content.BroadcastReceiver mDictionaryPackInstallReceiver> = $r12;

        $r13 = new com.android.inputmethod.latin.DictionaryDumpBroadcastReceiver;

        specialinvoke $r13.<com.android.inputmethod.latin.DictionaryDumpBroadcastReceiver: void <init>(com.android.inputmethod.latin.LatinIME)>(r0);

        r0.<com.android.inputmethod.latin.LatinIME: android.content.BroadcastReceiver mDictionaryDumpBroadcastReceiver> = $r13;

        $r14 = new com.android.inputmethod.latin.LatinIME$UIHandler;

        specialinvoke $r14.<com.android.inputmethod.latin.LatinIME$UIHandler: void <init>(com.android.inputmethod.latin.LatinIME)>(r0);

        r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$UIHandler mHandler> = $r14;

        $r15 = new com.android.inputmethod.latin.LatinIME$2;

        specialinvoke $r15.<com.android.inputmethod.latin.LatinIME$2: void <init>(com.android.inputmethod.latin.LatinIME)>(r0);

        r0.<com.android.inputmethod.latin.LatinIME: android.view.ViewTreeObserver$OnPreDrawListener mExtractTextViewPreDrawListener> = $r15;

        $r17 = new com.android.inputmethod.latin.LatinIME$3;

        specialinvoke $r17.<com.android.inputmethod.latin.LatinIME$3: void <init>(com.android.inputmethod.latin.LatinIME)>(r0);

        r0.<com.android.inputmethod.latin.LatinIME: android.content.BroadcastReceiver mConnectivityAndRingerModeChangeReceiver> = $r17;

        $r16 = staticinvoke <com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.Settings getInstance()>();

        r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings> = $r16;

        $r19 = staticinvoke <com.android.inputmethod.latin.SubtypeSwitcher: com.android.inputmethod.latin.SubtypeSwitcher getInstance()>();

        r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.SubtypeSwitcher mSubtypeSwitcher> = $r19;

        $r18 = staticinvoke <com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.KeyboardSwitcher getInstance()>();

        r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher> = $r18;

        $r20 = new com.android.inputmethod.latin.SpecialKeyDetector;

        specialinvoke $r20.<com.android.inputmethod.latin.SpecialKeyDetector: void <init>(android.content.Context)>(r0);

        r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.SpecialKeyDetector mSpecialKeyDetector> = $r20;

        $z0 = staticinvoke <com.android.inputmethod.compat.InputMethodServiceCompatUtils: boolean enableHardwareAcceleration(android.inputmethodservice.InputMethodService)>(r0);

        r0.<com.android.inputmethod.latin.LatinIME: boolean mIsHardwareAcceleratedDrawingEnabled> = $z0;

        $r21 = <com.android.inputmethod.latin.LatinIME: java.lang.String TAG>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hardware accelerated drawing: ");

        $z1 = r0.<com.android.inputmethod.latin.LatinIME: boolean mIsHardwareAcceleratedDrawingEnabled>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r21, $r24);

        return;
    }

    public void onCreate()
    {
        com.android.inputmethod.latin.LatinIME r0;
        android.content.IntentFilter r1, r2, r3, r4, $r8, $r11, $r14, $r16;
        android.content.SharedPreferences $r5;
        com.android.inputmethod.latin.RichInputMethodManager $r6;
        com.android.inputmethod.latin.LatinIME$UIHandler $r7;
        android.content.BroadcastReceiver $r9, $r12, $r15, $r19;
        com.android.inputmethod.latin.settings.SettingsValues $r20;
        com.android.inputmethod.latin.settings.Settings $r21;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        staticinvoke <com.android.inputmethod.latin.settings.Settings: void init(android.content.Context)>(r0);

        $r5 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r0);

        staticinvoke <com.android.inputmethod.latin.define.DebugFlags: void init(android.content.SharedPreferences)>($r5);

        staticinvoke <com.android.inputmethod.latin.RichInputMethodManager: void init(android.content.Context)>(r0);

        $r6 = staticinvoke <com.android.inputmethod.latin.RichInputMethodManager: com.android.inputmethod.latin.RichInputMethodManager getInstance()>();

        r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.RichInputMethodManager mRichImm> = $r6;

        staticinvoke <com.android.inputmethod.latin.SubtypeSwitcher: void init(android.content.Context)>(r0);

        staticinvoke <com.android.inputmethod.keyboard.KeyboardSwitcher: void init(com.android.inputmethod.latin.LatinIME)>(r0);

        staticinvoke <com.android.inputmethod.latin.AudioAndHapticFeedbackManager: void init(android.content.Context)>(r0);

        staticinvoke <com.android.inputmethod.accessibility.AccessibilityUtils: void init(android.content.Context)>(r0);

        staticinvoke <com.android.inputmethod.latin.utils.StatsUtils: void init(android.content.Context)>(r0);

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void onCreate()>();

        $r7 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$UIHandler mHandler>;

        virtualinvoke $r7.<com.android.inputmethod.latin.LatinIME$UIHandler: void onCreate()>();

        <com.android.inputmethod.latin.LatinIME: boolean DEBUG> = 0;

        virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: void loadSettings()>();

        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void resetSuggest()>();

        $r8 = new android.content.IntentFilter;

        specialinvoke $r8.<android.content.IntentFilter: void <init>()>();

        r1 = $r8;

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.net.conn.CONNECTIVITY_CHANGE");

        virtualinvoke r1.<android.content.IntentFilter: void addAction(java.lang.String)>("android.media.RINGER_MODE_CHANGED");

        $r9 = r0.<com.android.inputmethod.latin.LatinIME: android.content.BroadcastReceiver mConnectivityAndRingerModeChangeReceiver>;

        virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r9, r1);

        $r11 = new android.content.IntentFilter;

        specialinvoke $r11.<android.content.IntentFilter: void <init>()>();

        r2 = $r11;

        virtualinvoke r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_ADDED");

        virtualinvoke r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_REMOVED");

        virtualinvoke r2.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("package");

        $r12 = r0.<com.android.inputmethod.latin.LatinIME: android.content.BroadcastReceiver mDictionaryPackInstallReceiver>;

        virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r12, r2);

        $r14 = new android.content.IntentFilter;

        specialinvoke $r14.<android.content.IntentFilter: void <init>()>();

        r3 = $r14;

        virtualinvoke r3.<android.content.IntentFilter: void addAction(java.lang.String)>("com.android.inputmethod.dictionarypack.aosp.newdict");

        $r15 = r0.<com.android.inputmethod.latin.LatinIME: android.content.BroadcastReceiver mDictionaryPackInstallReceiver>;

        virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r15, r3);

        $r16 = new android.content.IntentFilter;

        specialinvoke $r16.<android.content.IntentFilter: void <init>()>();

        r4 = $r16;

        virtualinvoke r4.<android.content.IntentFilter: void addAction(java.lang.String)>("com.android.inputmethod.latin.DICT_DUMP");

        $r19 = r0.<com.android.inputmethod.latin.LatinIME: android.content.BroadcastReceiver mDictionaryDumpBroadcastReceiver>;

        virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r19, r4);

        staticinvoke <com.android.inputmethod.latin.personalization.DictionaryDecayBroadcastReciever: void setUpIntervalAlarmForDictionaryDecaying(android.content.Context)>(r0);

        $r21 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        $r20 = virtualinvoke $r21.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        staticinvoke <com.android.inputmethod.latin.utils.StatsUtils: void onCreate(com.android.inputmethod.latin.settings.SettingsValues)>($r20);

        return;
    }

    void loadSettings()
    {
        com.android.inputmethod.latin.LatinIME r0;
        java.util.Locale r1;
        android.view.inputmethod.EditorInfo r2;
        com.android.inputmethod.latin.InputAttributes r3, $r6;
        com.android.inputmethod.latin.settings.SettingsValues r4;
        com.android.inputmethod.latin.SubtypeSwitcher $r5;
        boolean $z0, $z1;
        java.lang.String $r7;
        com.android.inputmethod.latin.settings.Settings $r8, $r9;
        com.android.inputmethod.latin.AudioAndHapticFeedbackManager $r10;
        com.android.inputmethod.latin.LatinIME$UIHandler $r11;
        com.android.inputmethod.latin.RichInputMethodManager $r12;
        java.util.List $r13;
        com.android.inputmethod.latin.DictionaryFacilitator $r14;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r5 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.SubtypeSwitcher mSubtypeSwitcher>;

        r1 = virtualinvoke $r5.<com.android.inputmethod.latin.SubtypeSwitcher: java.util.Locale getCurrentSubtypeLocale()>();

        r2 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: android.view.inputmethod.EditorInfo getCurrentInputEditorInfo()>();

        $r6 = new com.android.inputmethod.latin.InputAttributes;

        $z0 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: boolean isFullscreenMode()>();

        $r7 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: java.lang.String getPackageName()>();

        specialinvoke $r6.<com.android.inputmethod.latin.InputAttributes: void <init>(android.view.inputmethod.EditorInfo,boolean,java.lang.String)>(r2, $z0, $r7);

        r3 = $r6;

        $r8 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        virtualinvoke $r8.<com.android.inputmethod.latin.settings.Settings: void loadSettings(android.content.Context,java.util.Locale,com.android.inputmethod.latin.InputAttributes)>(r0, r1, r3);

        $r9 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        r4 = virtualinvoke $r9.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        $r10 = staticinvoke <com.android.inputmethod.latin.AudioAndHapticFeedbackManager: com.android.inputmethod.latin.AudioAndHapticFeedbackManager getInstance()>();

        virtualinvoke $r10.<com.android.inputmethod.latin.AudioAndHapticFeedbackManager: void onSettingsChanged(com.android.inputmethod.latin.settings.SettingsValues)>(r4);

        $r11 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$UIHandler mHandler>;

        $z1 = virtualinvoke $r11.<com.android.inputmethod.latin.LatinIME$UIHandler: boolean hasPendingReopenDictionaries()>();

        if $z1 != 0 goto label1;

        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void resetSuggestForLocale(java.util.Locale)>(r1);

     label1:
        $r14 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.DictionaryFacilitator mDictionaryFacilitator>;

        $r12 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.RichInputMethodManager mRichImm>;

        $r13 = virtualinvoke $r12.<com.android.inputmethod.latin.RichInputMethodManager: java.util.List getMyEnabledInputMethodSubtypeList(boolean)>(1);

        virtualinvoke $r14.<com.android.inputmethod.latin.DictionaryFacilitator: void updateEnabledSubtypes(java.util.List)>($r13);

        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void refreshPersonalizationDictionarySession(com.android.inputmethod.latin.settings.SettingsValues)>(r4);

        staticinvoke <com.android.inputmethod.latin.utils.StatsUtils: void onLoadSettings(com.android.inputmethod.latin.settings.SettingsValues)>(r4);

        return;
    }

    private void refreshPersonalizationDictionarySession(com.android.inputmethod.latin.settings.SettingsValues)
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.settings.SettingsValues r1;
        boolean z0, $z1, $z2, $z3, $z4;
        com.android.inputmethod.latin.SubtypeSwitcher $r2;
        com.android.inputmethod.latin.personalization.PersonalizationDictionaryUpdater $r3;
        com.android.inputmethod.latin.personalization.ContextualDictionaryUpdater $r4;
        com.android.inputmethod.latin.DictionaryFacilitator $r5;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: com.android.inputmethod.latin.settings.SettingsValues;

        $r3 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.personalization.PersonalizationDictionaryUpdater mPersonalizationDictionaryUpdater>;

        $z1 = r1.<com.android.inputmethod.latin.settings.SettingsValues: boolean mUsePersonalizedDicts>;

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.SubtypeSwitcher mSubtypeSwitcher>;

        $z2 = virtualinvoke $r2.<com.android.inputmethod.latin.SubtypeSwitcher: boolean isSystemLocaleSameAsLocaleOfAllEnabledSubtypesOfEnabledImes()>();

        virtualinvoke $r3.<com.android.inputmethod.latin.personalization.PersonalizationDictionaryUpdater: void onLoadSettings(boolean,boolean)>($z1, $z2);

        $r4 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.personalization.ContextualDictionaryUpdater mContextualDictionaryUpdater>;

        $z3 = r1.<com.android.inputmethod.latin.settings.SettingsValues: boolean mUsePersonalizedDicts>;

        virtualinvoke $r4.<com.android.inputmethod.latin.personalization.ContextualDictionaryUpdater: void onLoadSettings(boolean)>($z3);

        $z4 = r1.<com.android.inputmethod.latin.settings.SettingsValues: boolean mUsePersonalizedDicts>;

        if $z4 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        if z0 != 0 goto label3;

        staticinvoke <com.android.inputmethod.latin.personalization.PersonalizationHelper: void removeAllUserHistoryDictionaries(android.content.Context)>(r0);

        $r5 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.DictionaryFacilitator mDictionaryFacilitator>;

        virtualinvoke $r5.<com.android.inputmethod.latin.DictionaryFacilitator: void clearUserHistoryDictionary()>();

     label3:
        return;
    }

    public void onUpdateMainDictionaryAvailability(boolean)
    {
        com.android.inputmethod.latin.LatinIME r0;
        boolean z0, $z1;
        com.android.inputmethod.keyboard.MainKeyboardView r1;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r2;
        com.android.inputmethod.latin.LatinIME$UIHandler $r3, $r4, $r5;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        z0 := @parameter0: boolean;

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        r1 = virtualinvoke $r2.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView getMainKeyboardView()>();

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.inputmethod.keyboard.MainKeyboardView: void setMainDictionaryAvailability(boolean)>(z0);

     label1:
        $r3 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$UIHandler mHandler>;

        $z1 = virtualinvoke $r3.<com.android.inputmethod.latin.LatinIME$UIHandler: boolean hasPendingWaitForDictionaryLoad()>();

        if $z1 == 0 goto label2;

        $r4 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$UIHandler mHandler>;

        virtualinvoke $r4.<com.android.inputmethod.latin.LatinIME$UIHandler: void cancelWaitForDictionaryLoad()>();

        $r5 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$UIHandler mHandler>;

        virtualinvoke $r5.<com.android.inputmethod.latin.LatinIME$UIHandler: void postResumeSuggestions(boolean,boolean)>(1, 0);

     label2:
        return;
    }

    private void resetSuggest()
    {
        com.android.inputmethod.latin.LatinIME r0;
        java.util.Locale r1, r3;
        java.lang.String r2, $r5;
        com.android.inputmethod.latin.SubtypeSwitcher $r4;
        boolean $z0;
        android.content.res.Resources $r6;
        android.content.res.Configuration $r7;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r4 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.SubtypeSwitcher mSubtypeSwitcher>;

        r1 = virtualinvoke $r4.<com.android.inputmethod.latin.SubtypeSwitcher: java.util.Locale getCurrentSubtypeLocale()>();

        r2 = virtualinvoke r1.<java.util.Locale: java.lang.String toString()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        $r5 = <com.android.inputmethod.latin.LatinIME: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r5, "System is reporting no current subtype.");

        $r6 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        r3 = $r7.<android.content.res.Configuration: java.util.Locale locale>;

        goto label2;

     label1:
        r3 = r1;

     label2:
        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void resetSuggestForLocale(java.util.Locale)>(r3);

        return;
    }

    private void resetSuggestForLocale(java.util.Locale)
    {
        com.android.inputmethod.latin.LatinIME r0;
        java.util.Locale r1;
        com.android.inputmethod.latin.settings.SettingsValues r2;
        com.android.inputmethod.latin.settings.Settings $r3;
        boolean $z0, $z1, $z2;
        com.android.inputmethod.latin.DictionaryFacilitator $r4;
        com.android.inputmethod.latin.inputlogic.InputLogic $r5;
        float $f0;
        com.android.inputmethod.latin.Suggest $r6;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: java.util.Locale;

        $r3 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        r2 = virtualinvoke $r3.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        $r4 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.DictionaryFacilitator mDictionaryFacilitator>;

        $z1 = r2.<com.android.inputmethod.latin.settings.SettingsValues: boolean mUseContactsDict>;

        $z0 = r2.<com.android.inputmethod.latin.settings.SettingsValues: boolean mUsePersonalizedDicts>;

        virtualinvoke $r4.<com.android.inputmethod.latin.DictionaryFacilitator: void resetDictionaries(android.content.Context,java.util.Locale,boolean,boolean,boolean,com.android.inputmethod.latin.DictionaryFacilitator$DictionaryInitializationListener)>(r0, r1, $z1, $z0, 0, r0);

        $z2 = r2.<com.android.inputmethod.latin.settings.SettingsValues: boolean mAutoCorrectionEnabledPerUserSettings>;

        if $z2 == 0 goto label1;

        $r5 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        $r6 = $r5.<com.android.inputmethod.latin.inputlogic.InputLogic: com.android.inputmethod.latin.Suggest mSuggest>;

        $f0 = r2.<com.android.inputmethod.latin.settings.SettingsValues: float mAutoCorrectionThreshold>;

        virtualinvoke $r6.<com.android.inputmethod.latin.Suggest: void setAutoCorrectionThreshold(float)>($f0);

     label1:
        return;
    }

    void resetSuggestMainDict()
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.settings.SettingsValues r1;
        com.android.inputmethod.latin.settings.Settings $r2;
        com.android.inputmethod.latin.DictionaryFacilitator $r3, $r4;
        java.util.Locale $r5;
        boolean $z0, $z1;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        r1 = virtualinvoke $r2.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        $r4 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.DictionaryFacilitator mDictionaryFacilitator>;

        $r3 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.DictionaryFacilitator mDictionaryFacilitator>;

        $r5 = virtualinvoke $r3.<com.android.inputmethod.latin.DictionaryFacilitator: java.util.Locale getLocale()>();

        $z1 = r1.<com.android.inputmethod.latin.settings.SettingsValues: boolean mUseContactsDict>;

        $z0 = r1.<com.android.inputmethod.latin.settings.SettingsValues: boolean mUsePersonalizedDicts>;

        virtualinvoke $r4.<com.android.inputmethod.latin.DictionaryFacilitator: void resetDictionaries(android.content.Context,java.util.Locale,boolean,boolean,boolean,com.android.inputmethod.latin.DictionaryFacilitator$DictionaryInitializationListener)>(r0, $r5, $z1, $z0, 1, r0);

        return;
    }

    public void onDestroy()
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.DictionaryFacilitator $r1;
        com.android.inputmethod.latin.personalization.PersonalizationDictionaryUpdater $r2;
        com.android.inputmethod.latin.personalization.ContextualDictionaryUpdater $r3;
        com.android.inputmethod.latin.settings.Settings $r4;
        android.content.BroadcastReceiver $r5, $r6, $r7;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.DictionaryFacilitator mDictionaryFacilitator>;

        virtualinvoke $r1.<com.android.inputmethod.latin.DictionaryFacilitator: void closeDictionaries()>();

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.personalization.PersonalizationDictionaryUpdater mPersonalizationDictionaryUpdater>;

        virtualinvoke $r2.<com.android.inputmethod.latin.personalization.PersonalizationDictionaryUpdater: void onDestroy()>();

        $r3 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.personalization.ContextualDictionaryUpdater mContextualDictionaryUpdater>;

        virtualinvoke $r3.<com.android.inputmethod.latin.personalization.ContextualDictionaryUpdater: void onDestroy()>();

        $r4 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        virtualinvoke $r4.<com.android.inputmethod.latin.settings.Settings: void onDestroy()>();

        $r5 = r0.<com.android.inputmethod.latin.LatinIME: android.content.BroadcastReceiver mConnectivityAndRingerModeChangeReceiver>;

        virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: void unregisterReceiver(android.content.BroadcastReceiver)>($r5);

        $r6 = r0.<com.android.inputmethod.latin.LatinIME: android.content.BroadcastReceiver mDictionaryPackInstallReceiver>;

        virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: void unregisterReceiver(android.content.BroadcastReceiver)>($r6);

        $r7 = r0.<com.android.inputmethod.latin.LatinIME: android.content.BroadcastReceiver mDictionaryDumpBroadcastReceiver>;

        virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: void unregisterReceiver(android.content.BroadcastReceiver)>($r7);

        staticinvoke <com.android.inputmethod.latin.utils.StatsUtils: void onDestroy()>();

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void onDestroy()>();

        return;
    }

    public void recycle()
    {
        com.android.inputmethod.latin.LatinIME r0;
        android.content.BroadcastReceiver $r1, $r2, $r3;
        com.android.inputmethod.latin.inputlogic.InputLogic $r4;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: android.content.BroadcastReceiver mDictionaryPackInstallReceiver>;

        virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: void unregisterReceiver(android.content.BroadcastReceiver)>($r1);

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: android.content.BroadcastReceiver mDictionaryDumpBroadcastReceiver>;

        virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: void unregisterReceiver(android.content.BroadcastReceiver)>($r2);

        $r3 = r0.<com.android.inputmethod.latin.LatinIME: android.content.BroadcastReceiver mConnectivityAndRingerModeChangeReceiver>;

        virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: void unregisterReceiver(android.content.BroadcastReceiver)>($r3);

        $r4 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        virtualinvoke $r4.<com.android.inputmethod.latin.inputlogic.InputLogic: void recycle()>();

        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        com.android.inputmethod.latin.LatinIME r0;
        android.content.res.Configuration r1;
        com.android.inputmethod.latin.settings.SettingsValues r2, $r10;
        com.android.inputmethod.latin.settings.Settings $r3, $r7, $r8;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3;
        com.android.inputmethod.latin.personalization.PersonalizationDictionaryUpdater $r4;
        java.util.Locale $r5, $r6;
        com.android.inputmethod.latin.LatinIME$UIHandler $r9;
        com.android.inputmethod.latin.inputlogic.InputLogic $r11;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: android.content.res.Configuration;

        $r3 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        r2 = virtualinvoke $r3.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        $i1 = r2.<com.android.inputmethod.latin.settings.SettingsValues: int mDisplayOrientation>;

        $i0 = r1.<android.content.res.Configuration: int orientation>;

        if $i1 == $i0 goto label1;

        $r9 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$UIHandler mHandler>;

        virtualinvoke $r9.<com.android.inputmethod.latin.LatinIME$UIHandler: void startOrientationChanging()>();

        $r11 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        $r8 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        $r10 = virtualinvoke $r8.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        virtualinvoke $r11.<com.android.inputmethod.latin.inputlogic.InputLogic: void onOrientationChange(com.android.inputmethod.latin.settings.SettingsValues)>($r10);

     label1:
        $z0 = r2.<com.android.inputmethod.latin.settings.SettingsValues: boolean mHasHardwareKeyboard>;

        $z1 = staticinvoke <com.android.inputmethod.latin.settings.Settings: boolean readHasHardwareKeyboard(android.content.res.Configuration)>(r1);

        if $z0 == $z1 goto label2;

        virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: void loadSettings()>();

        $r7 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        r2 = virtualinvoke $r7.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        $z3 = r2.<com.android.inputmethod.latin.settings.SettingsValues: boolean mHasHardwareKeyboard>;

        if $z3 == 0 goto label2;

        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void cleanupInternalStateForFinishInput()>();

     label2:
        $r5 = r1.<android.content.res.Configuration: java.util.Locale locale>;

        $r4 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.personalization.PersonalizationDictionaryUpdater mPersonalizationDictionaryUpdater>;

        $r6 = virtualinvoke $r4.<com.android.inputmethod.latin.personalization.PersonalizationDictionaryUpdater: java.util.Locale getLocale()>();

        $z2 = virtualinvoke $r5.<java.util.Locale: boolean equals(java.lang.Object)>($r6);

        if $z2 != 0 goto label3;

        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void refreshPersonalizationDictionarySession(com.android.inputmethod.latin.settings.SettingsValues)>(r2);

     label3:
        specialinvoke r0.<android.inputmethodservice.InputMethodService: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        return;
    }

    public android.view.View onCreateInputView()
    {
        com.android.inputmethod.latin.LatinIME r0;
        boolean $z0;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r1;
        android.view.View $r2;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        $z0 = r0.<com.android.inputmethod.latin.LatinIME: boolean mIsHardwareAcceleratedDrawingEnabled>;

        $r2 = virtualinvoke $r1.<com.android.inputmethod.keyboard.KeyboardSwitcher: android.view.View onCreateInputView(boolean)>($z0);

        return $r2;
    }

    public void setInputView(android.view.View)
    {
        com.android.inputmethod.latin.LatinIME r0;
        android.view.View r1, $r2;
        com.android.inputmethod.latin.suggestions.SuggestionStripView $r3, $r6;
        boolean $z0;
        com.android.inputmethod.keyboard.TextDecoratorUi $r4;
        com.android.inputmethod.latin.inputlogic.InputLogic $r5;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void setInputView(android.view.View)>(r1);

        r0.<com.android.inputmethod.latin.LatinIME: android.view.View mInputView> = r1;

        $r2 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(2131755126);

        $r3 = (com.android.inputmethod.latin.suggestions.SuggestionStripView) $r2;

        r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.suggestions.SuggestionStripView mSuggestionStripView> = $r3;

        $z0 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: boolean hasSuggestionStripView()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.suggestions.SuggestionStripView mSuggestionStripView>;

        virtualinvoke $r6.<com.android.inputmethod.latin.suggestions.SuggestionStripView: void setListener(com.android.inputmethod.latin.suggestions.SuggestionStripView$Listener,android.view.View)>(r0, r1);

     label1:
        $r5 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        $r4 = new com.android.inputmethod.keyboard.TextDecoratorUi;

        specialinvoke $r4.<com.android.inputmethod.keyboard.TextDecoratorUi: void <init>(android.content.Context,android.view.View)>(r0, r1);

        virtualinvoke $r5.<com.android.inputmethod.latin.inputlogic.InputLogic: void setTextDecoratorUi(com.android.inputmethod.keyboard.TextDecoratorUiOperator)>($r4);

        return;
    }

    public void setExtractView(android.view.View)
    {
        com.android.inputmethod.latin.LatinIME r0;
        android.view.View r1, r4;
        android.widget.TextView r2, r3, $r5, $r6;
        android.view.ViewTreeObserver $r7, $r9;
        android.view.ViewTreeObserver$OnPreDrawListener $r8, $r10;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: android.view.View;

        r2 = r0.<com.android.inputmethod.latin.LatinIME: android.widget.TextView mExtractEditText>;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void setExtractView(android.view.View)>(r1);

        r3 = null;

        if r1 == null goto label1;

        r4 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16908325);

        $z0 = r4 instanceof android.widget.TextView;

        if $z0 == 0 goto label1;

        r3 = (android.widget.TextView) r4;

     label1:
        if r2 != r3 goto label2;

        return;

     label2:
        if r2 == null goto label3;

        $r9 = virtualinvoke r2.<android.widget.TextView: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r10 = r0.<com.android.inputmethod.latin.LatinIME: android.view.ViewTreeObserver$OnPreDrawListener mExtractTextViewPreDrawListener>;

        virtualinvoke $r9.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r10);

     label3:
        r0.<com.android.inputmethod.latin.LatinIME: android.widget.TextView mExtractEditText> = r3;

        $r5 = r0.<com.android.inputmethod.latin.LatinIME: android.widget.TextView mExtractEditText>;

        if $r5 == null goto label4;

        $r6 = r0.<com.android.inputmethod.latin.LatinIME: android.widget.TextView mExtractEditText>;

        $r7 = virtualinvoke $r6.<android.widget.TextView: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r8 = r0.<com.android.inputmethod.latin.LatinIME: android.view.ViewTreeObserver$OnPreDrawListener mExtractTextViewPreDrawListener>;

        virtualinvoke $r7.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r8);

     label4:
        return;
    }

    private void onExtractTextViewPreDraw()
    {
        com.android.inputmethod.latin.LatinIME r0;
        android.view.inputmethod.CursorAnchorInfo r1;
        boolean $z0;
        android.widget.TextView $r2, $r3;
        com.android.inputmethod.latin.inputlogic.InputLogic $r4;
        com.android.inputmethod.compat.CursorAnchorInfoCompatWrapper $r5;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $z0 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: boolean isFullscreenMode()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: android.widget.TextView mExtractEditText>;

        if $r2 != null goto label2;

     label1:
        return;

     label2:
        $r3 = r0.<com.android.inputmethod.latin.LatinIME: android.widget.TextView mExtractEditText>;

        r1 = staticinvoke <com.android.inputmethod.latin.utils.CursorAnchorInfoUtils: android.view.inputmethod.CursorAnchorInfo getCursorAnchorInfo(android.widget.TextView)>($r3);

        $r4 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        $r5 = staticinvoke <com.android.inputmethod.compat.CursorAnchorInfoCompatWrapper: com.android.inputmethod.compat.CursorAnchorInfoCompatWrapper fromObject(java.lang.Object)>(r1);

        virtualinvoke $r4.<com.android.inputmethod.latin.inputlogic.InputLogic: void onUpdateCursorAnchorInfo(com.android.inputmethod.compat.CursorAnchorInfoCompatWrapper)>($r5);

        return;
    }

    public void setCandidatesView(android.view.View)
    {
        com.android.inputmethod.latin.LatinIME r0;
        android.view.View r1;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: android.view.View;

        return;
    }

    public void onStartInput(android.view.inputmethod.EditorInfo, boolean)
    {
        com.android.inputmethod.latin.LatinIME r0;
        android.view.inputmethod.EditorInfo r1;
        boolean z0;
        com.android.inputmethod.latin.LatinIME$UIHandler $r2;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$UIHandler mHandler>;

        virtualinvoke $r2.<com.android.inputmethod.latin.LatinIME$UIHandler: void onStartInput(android.view.inputmethod.EditorInfo,boolean)>(r1, z0);

        return;
    }

    public void onStartInputView(android.view.inputmethod.EditorInfo, boolean)
    {
        com.android.inputmethod.latin.LatinIME r0;
        android.view.inputmethod.EditorInfo r1;
        boolean z0;
        com.android.inputmethod.latin.LatinIME$UIHandler $r2;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$UIHandler mHandler>;

        virtualinvoke $r2.<com.android.inputmethod.latin.LatinIME$UIHandler: void onStartInputView(android.view.inputmethod.EditorInfo,boolean)>(r1, z0);

        return;
    }

    public void onFinishInputView(boolean)
    {
        com.android.inputmethod.latin.LatinIME r0;
        boolean z0;
        com.android.inputmethod.latin.LatinIME$UIHandler $r1;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$UIHandler mHandler>;

        virtualinvoke $r1.<com.android.inputmethod.latin.LatinIME$UIHandler: void onFinishInputView(boolean)>(z0);

        return;
    }

    public void onFinishInput()
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.LatinIME$UIHandler $r1;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$UIHandler mHandler>;

        virtualinvoke $r1.<com.android.inputmethod.latin.LatinIME$UIHandler: void onFinishInput()>();

        return;
    }

    public void onCurrentInputMethodSubtypeChanged(android.view.inputmethod.InputMethodSubtype)
    {
        com.android.inputmethod.latin.LatinIME r0;
        android.view.inputmethod.InputMethodSubtype r1;
        com.android.inputmethod.latin.SubtypeSwitcher $r2;
        com.android.inputmethod.latin.inputlogic.InputLogic $r3;
        java.lang.String $r4;
        com.android.inputmethod.latin.settings.Settings $r5;
        com.android.inputmethod.latin.settings.SettingsValues $r6;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: android.view.inputmethod.InputMethodSubtype;

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.SubtypeSwitcher mSubtypeSwitcher>;

        virtualinvoke $r2.<com.android.inputmethod.latin.SubtypeSwitcher: void onSubtypeChanged(android.view.inputmethod.InputMethodSubtype)>(r1);

        $r3 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        $r4 = staticinvoke <com.android.inputmethod.latin.utils.SubtypeLocaleUtils: java.lang.String getCombiningRulesExtraValue(android.view.inputmethod.InputMethodSubtype)>(r1);

        $r5 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        $r6 = virtualinvoke $r5.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        virtualinvoke $r3.<com.android.inputmethod.latin.inputlogic.InputLogic: void onSubtypeChanged(java.lang.String,com.android.inputmethod.latin.settings.SettingsValues)>($r4, $r6);

        virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: void loadKeyboard()>();

        return;
    }

    private void onStartInputInternal(android.view.inputmethod.EditorInfo, boolean)
    {
        com.android.inputmethod.latin.LatinIME r0;
        android.view.inputmethod.EditorInfo r1;
        boolean z0;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void onStartInput(android.view.inputmethod.EditorInfo,boolean)>(r1, z0);

        return;
    }

    private void onStartInputViewInternal(android.view.inputmethod.EditorInfo, boolean)
    {
        com.android.inputmethod.latin.LatinIME r0;
        android.view.inputmethod.EditorInfo r1;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24;
        com.android.inputmethod.keyboard.KeyboardSwitcher r2;
        com.android.inputmethod.keyboard.MainKeyboardView r3;
        com.android.inputmethod.latin.settings.SettingsValues r4;
        com.android.inputmethod.accessibility.AccessibilityUtils r5;
        com.android.inputmethod.latin.Suggest r6;
        java.util.Locale r7, $r38;
        com.android.inputmethod.latin.RichInputMethodManager $r8;
        com.android.inputmethod.latin.settings.Settings $r9, $r23;
        java.lang.StringBuilder $r10, $r11, $r13, $r14, $r16, $r35, $r41, $r43, $r45, $r48, $r49, $r51, $r54, $r55, $r56, $r57, $r58, $r61, $r63, $r65, $r67, $r70, $r71, $r72, $r75, $r76, $r78;
        java.lang.String $r12, $r15, $r17, $r21, $r28, $r36, $r40, $r42, $r44, $r46, $r47, $r50, $r52, $r53, $r59, $r64, $r66, $r68, $r73, $r74, $r77;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i16, $i18, $i19, $i20, $i21, $i22, $i24, $i25;
        com.android.inputmethod.latin.LatinIME$UIHandler $r18, $r32, $r37;
        com.android.inputmethod.latin.inputlogic.InputLogic $r19, $r29, $r30, $r33;
        com.android.inputmethod.latin.DictionaryFacilitator $r20;
        com.android.inputmethod.latin.personalization.ContextualDictionaryUpdater $r22;
        float $f0;
        com.android.inputmethod.latin.SubtypeSwitcher $r24, $r27, $r39;
        android.content.res.Configuration $r25;
        android.content.res.Resources $r26;
        com.android.inputmethod.latin.RichInputConnection $r31, $r34;
        java.lang.Integer $r60, $r69;
        java.lang.Object[] $r62;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void onStartInputView(android.view.inputmethod.EditorInfo,boolean)>(r1, z0);

        $r8 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.RichInputMethodManager mRichImm>;

        virtualinvoke $r8.<com.android.inputmethod.latin.RichInputMethodManager: void clearSubtypeCaches()>();

        r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        virtualinvoke r2.<com.android.inputmethod.keyboard.KeyboardSwitcher: void updateKeyboardTheme()>();

        r3 = virtualinvoke r2.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView getMainKeyboardView()>();

        $r9 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        r4 = virtualinvoke $r9.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        if r1 != null goto label01;

        $r74 = <com.android.inputmethod.latin.LatinIME: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r74, "Null EditorInfo in onStartInputView()");

        return;

     label01:
        $z4 = <com.android.inputmethod.latin.LatinIME: boolean DEBUG>;

        if $z4 == 0 goto label08;

        $r64 = <com.android.inputmethod.latin.LatinIME: java.lang.String TAG>;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onStartInputView: editorInfo:");

        $r62 = newarray (java.lang.Object)[2];

        $i16 = r1.<android.view.inputmethod.EditorInfo: int inputType>;

        $r60 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i16);

        $r62[0] = $r60;

        $i18 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $r69 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i18);

        $r62[1] = $r69;

        $r68 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("inputType=0x%08x imeOptions=0x%08x", $r62);

        $r67 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r64, $r66);

        $r73 = <com.android.inputmethod.latin.LatinIME: java.lang.String TAG>;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("All caps = ");

        $i22 = r1.<android.view.inputmethod.EditorInfo: int inputType>;

        $i21 = $i22 & 4096;

        if $i21 == 0 goto label02;

        $z22 = 1;

        goto label03;

     label02:
        $z22 = 0;

     label03:
        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z22);

        $r70 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sentence caps = ");

        $i20 = r1.<android.view.inputmethod.EditorInfo: int inputType>;

        $i19 = $i20 & 16384;

        if $i19 == 0 goto label04;

        $z23 = 1;

        goto label05;

     label04:
        $z23 = 0;

     label05:
        $r76 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z23);

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", word caps = ");

        $i25 = r1.<android.view.inputmethod.EditorInfo: int inputType>;

        $i24 = $i25 & 8192;

        if $i24 == 0 goto label06;

        $z24 = 1;

        goto label07;

     label06:
        $z24 = 0;

     label07:
        $r78 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z24);

        $r77 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r73, $r77);

     label08:
        $r12 = <com.android.inputmethod.latin.LatinIME: java.lang.String TAG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting input. Cursor position = ");

        $i0 = r1.<android.view.inputmethod.EditorInfo: int initialSelStart>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i1 = r1.<android.view.inputmethod.EditorInfo: int initialSelEnd>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r12, $r15);

        $z5 = staticinvoke <com.android.inputmethod.latin.InputAttributes: boolean inPrivateImeOptions(java.lang.String,java.lang.String,android.view.inputmethod.EditorInfo)>(null, "nm", r1);

        if $z5 == 0 goto label09;

        $r50 = <com.android.inputmethod.latin.LatinIME: java.lang.String TAG>;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deprecated private IME option specified: ");

        $r52 = r1.<android.view.inputmethod.EditorInfo: java.lang.String privateImeOptions>;

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r46 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r50, $r46);

        $r47 = <com.android.inputmethod.latin.LatinIME: java.lang.String TAG>;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Use ");

        $r59 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: java.lang.String getPackageName()>();

        $r56 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r54 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("noMicrophoneKey");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" instead");

        $r53 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r47, $r53);

     label09:
        $r17 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: java.lang.String getPackageName()>();

        $z6 = staticinvoke <com.android.inputmethod.latin.InputAttributes: boolean inPrivateImeOptions(java.lang.String,java.lang.String,android.view.inputmethod.EditorInfo)>($r17, "forceAscii", r1);

        if $z6 == 0 goto label10;

        $r36 = <com.android.inputmethod.latin.LatinIME: java.lang.String TAG>;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deprecated private IME option specified: ");

        $r42 = r1.<android.view.inputmethod.EditorInfo: java.lang.String privateImeOptions>;

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r36, $r44);

        $r40 = <com.android.inputmethod.latin.LatinIME: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r40, "Use EditorInfo.IME_FLAG_FORCE_ASCII flag instead");

     label10:
        if r3 != null goto label11;

        return;

     label11:
        r5 = staticinvoke <com.android.inputmethod.accessibility.AccessibilityUtils: com.android.inputmethod.accessibility.AccessibilityUtils getInstance()>();

        $z7 = virtualinvoke r5.<com.android.inputmethod.accessibility.AccessibilityUtils: boolean isTouchExplorationEnabled()>();

        if $z7 == 0 goto label12;

        virtualinvoke r5.<com.android.inputmethod.accessibility.AccessibilityUtils: void onStartInputViewInternal(android.view.View,android.view.inputmethod.EditorInfo,boolean)>(r3, r1, z0);

     label12:
        $z9 = virtualinvoke r4.<com.android.inputmethod.latin.settings.SettingsValues: boolean isSameInputType(android.view.inputmethod.EditorInfo)>(r1);

        if $z9 != 0 goto label13;

        $z20 = 1;

        goto label14;

     label13:
        $z20 = 0;

     label14:
        z1 = $z20;

        if z0 == 0 goto label15;

        if z1 == 0 goto label16;

     label15:
        $z19 = 1;

        goto label17;

     label16:
        $z19 = 0;

     label17:
        z2 = $z19;

        if z2 == 0 goto label18;

        $r39 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.SubtypeSwitcher mSubtypeSwitcher>;

        virtualinvoke $r39.<com.android.inputmethod.latin.SubtypeSwitcher: void updateParametersOnStartInputView()>();

     label18:
        virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: void updateFullscreenMode()>();

        $r19 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        r6 = $r19.<com.android.inputmethod.latin.inputlogic.InputLogic: com.android.inputmethod.latin.Suggest mSuggest>;

        $z8 = r4.<com.android.inputmethod.latin.settings.SettingsValues: boolean mHasHardwareKeyboard>;

        if $z8 != 0 goto label22;

        $r29 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        $r24 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.SubtypeSwitcher mSubtypeSwitcher>;

        $r28 = virtualinvoke $r24.<com.android.inputmethod.latin.SubtypeSwitcher: java.lang.String getCombiningRulesExtraValueOfCurrentSubtype()>();

        virtualinvoke $r29.<com.android.inputmethod.latin.inputlogic.InputLogic: void startInput(java.lang.String,com.android.inputmethod.latin.settings.SettingsValues)>($r28, r4);

        $r27 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.SubtypeSwitcher mSubtypeSwitcher>;

        r7 = virtualinvoke $r27.<com.android.inputmethod.latin.SubtypeSwitcher: java.util.Locale getCurrentSubtypeLocale()>();

        if null == r7 goto label19;

        $r38 = virtualinvoke r6.<com.android.inputmethod.latin.Suggest: java.util.Locale getLocale()>();

        $z21 = virtualinvoke r7.<java.util.Locale: boolean equals(java.lang.Object)>($r38);

        if $z21 != 0 goto label19;

        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void resetSuggest()>();

     label19:
        $r33 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        $r34 = $r33.<com.android.inputmethod.latin.inputlogic.InputLogic: com.android.inputmethod.latin.RichInputConnection mConnection>;

        $i11 = r1.<android.view.inputmethod.EditorInfo: int initialSelStart>;

        $i10 = r1.<android.view.inputmethod.EditorInfo: int initialSelEnd>;

        $z18 = virtualinvoke $r34.<com.android.inputmethod.latin.RichInputConnection: boolean resetCachesUponCursorMoveAndReturnSuccess(int,int,boolean)>($i11, $i10, 0);

        if $z18 != 0 goto label20;

        $r37 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$UIHandler mHandler>;

        virtualinvoke $r37.<com.android.inputmethod.latin.LatinIME$UIHandler: void postResetCaches(boolean,int)>(z2, 5);

        z3 = 1;

        goto label21;

     label20:
        $r30 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        $r31 = $r30.<com.android.inputmethod.latin.inputlogic.InputLogic: com.android.inputmethod.latin.RichInputConnection mConnection>;

        virtualinvoke $r31.<com.android.inputmethod.latin.RichInputConnection: void tryFixLyingCursorPosition()>();

        $r32 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$UIHandler mHandler>;

        virtualinvoke $r32.<com.android.inputmethod.latin.LatinIME$UIHandler: void postResumeSuggestions(boolean,boolean)>(1, 1);

        z3 = 0;

     label21:
        goto label23;

     label22:
        z3 = 0;

     label23:
        if z2 != 0 goto label24;

        $r26 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: android.content.res.Resources getResources()>();

        $r25 = virtualinvoke $r26.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $z17 = virtualinvoke r4.<com.android.inputmethod.latin.settings.SettingsValues: boolean hasSameOrientation(android.content.res.Configuration)>($r25);

        if $z17 != 0 goto label25;

     label24:
        virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: void loadSettings()>();

     label25:
        if z2 == 0 goto label27;

        virtualinvoke r3.<com.android.inputmethod.keyboard.MainKeyboardView: void closing()>();

        $r23 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        r4 = virtualinvoke $r23.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        $z16 = r4.<com.android.inputmethod.latin.settings.SettingsValues: boolean mAutoCorrectionEnabledPerUserSettings>;

        if $z16 == 0 goto label26;

        $f0 = r4.<com.android.inputmethod.latin.settings.SettingsValues: float mAutoCorrectionThreshold>;

        virtualinvoke r6.<com.android.inputmethod.latin.Suggest: void setAutoCorrectionThreshold(float)>($f0);

     label26:
        $i9 = specialinvoke r0.<com.android.inputmethod.latin.LatinIME: int getCurrentAutoCapsState()>();

        $i8 = specialinvoke r0.<com.android.inputmethod.latin.LatinIME: int getCurrentRecapitalizeState()>();

        virtualinvoke r2.<com.android.inputmethod.keyboard.KeyboardSwitcher: void loadKeyboard(android.view.inputmethod.EditorInfo,com.android.inputmethod.latin.settings.SettingsValues,int,int)>(r1, r4, $i9, $i8);

        if z3 == 0 goto label28;

        virtualinvoke r2.<com.android.inputmethod.keyboard.KeyboardSwitcher: void saveKeyboardState()>();

        goto label28;

     label27:
        if z0 == 0 goto label28;

        $i4 = specialinvoke r0.<com.android.inputmethod.latin.LatinIME: int getCurrentAutoCapsState()>();

        $i5 = specialinvoke r0.<com.android.inputmethod.latin.LatinIME: int getCurrentRecapitalizeState()>();

        virtualinvoke r2.<com.android.inputmethod.keyboard.KeyboardSwitcher: void resetKeyboardStateToAlphabet(int,int)>($i4, $i5);

        $i7 = specialinvoke r0.<com.android.inputmethod.latin.LatinIME: int getCurrentAutoCapsState()>();

        $i6 = specialinvoke r0.<com.android.inputmethod.latin.LatinIME: int getCurrentRecapitalizeState()>();

        virtualinvoke r2.<com.android.inputmethod.keyboard.KeyboardSwitcher: void requestUpdatingShiftState(int,int)>($i7, $i6);

     label28:
        virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: void setNeutralSuggestionStrip()>();

        $r18 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$UIHandler mHandler>;

        virtualinvoke $r18.<com.android.inputmethod.latin.LatinIME$UIHandler: void cancelUpdateSuggestionStrip()>();

        $r20 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.DictionaryFacilitator mDictionaryFacilitator>;

        $z11 = virtualinvoke $r20.<com.android.inputmethod.latin.DictionaryFacilitator: boolean hasInitializedMainDictionary()>();

        virtualinvoke r3.<com.android.inputmethod.keyboard.MainKeyboardView: void setMainDictionaryAvailability(boolean)>($z11);

        $z10 = r4.<com.android.inputmethod.latin.settings.SettingsValues: boolean mKeyPreviewPopupOn>;

        $i3 = r4.<com.android.inputmethod.latin.settings.SettingsValues: int mKeyPreviewPopupDismissDelay>;

        virtualinvoke r3.<com.android.inputmethod.keyboard.MainKeyboardView: void setKeyPreviewPopupEnabled(boolean,int)>($z10, $i3);

        $z14 = r4.<com.android.inputmethod.latin.settings.SettingsValues: boolean mSlidingKeyInputPreviewEnabled>;

        virtualinvoke r3.<com.android.inputmethod.keyboard.MainKeyboardView: void setSlidingKeyInputPreviewEnabled(boolean)>($z14);

        $z13 = r4.<com.android.inputmethod.latin.settings.SettingsValues: boolean mGestureInputEnabled>;

        $z12 = r4.<com.android.inputmethod.latin.settings.SettingsValues: boolean mGestureTrailEnabled>;

        $z15 = r4.<com.android.inputmethod.latin.settings.SettingsValues: boolean mGestureFloatingPreviewTextEnabled>;

        virtualinvoke r3.<com.android.inputmethod.keyboard.MainKeyboardView: void setGestureHandlingEnabledByUser(boolean,boolean,boolean)>($z13, $z12, $z15);

        $r22 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.personalization.ContextualDictionaryUpdater mContextualDictionaryUpdater>;

        $r21 = r1.<android.view.inputmethod.EditorInfo: java.lang.String packageName>;

        virtualinvoke $r22.<com.android.inputmethod.latin.personalization.ContextualDictionaryUpdater: void onStartInputView(java.lang.String)>($r21);

        return;
    }

    public void onWindowHidden()
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.keyboard.MainKeyboardView r1;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r2;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void onWindowHidden()>();

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        r1 = virtualinvoke $r2.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView getMainKeyboardView()>();

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.inputmethod.keyboard.MainKeyboardView: void closing()>();

     label1:
        return;
    }

    private void onFinishInputInternal()
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.keyboard.MainKeyboardView r1;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r2;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void onFinishInput()>();

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        r1 = virtualinvoke $r2.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView getMainKeyboardView()>();

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.inputmethod.keyboard.MainKeyboardView: void closing()>();

     label1:
        return;
    }

    private void onFinishInputViewInternal(boolean)
    {
        com.android.inputmethod.latin.LatinIME r0;
        boolean z0;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void onFinishInputView(boolean)>(z0);

        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void cleanupInternalStateForFinishInput()>();

        return;
    }

    private void cleanupInternalStateForFinishInput()
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r1;
        com.android.inputmethod.latin.LatinIME$UIHandler $r2;
        com.android.inputmethod.latin.inputlogic.InputLogic $r3;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        virtualinvoke $r1.<com.android.inputmethod.keyboard.KeyboardSwitcher: void deallocateMemory()>();

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$UIHandler mHandler>;

        virtualinvoke $r2.<com.android.inputmethod.latin.LatinIME$UIHandler: void cancelUpdateSuggestionStrip()>();

        $r3 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        virtualinvoke $r3.<com.android.inputmethod.latin.inputlogic.InputLogic: void finishInput()>();

        return;
    }

    public void onUpdateSelection(int, int, int, int, int, int)
    {
        com.android.inputmethod.latin.LatinIME r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7;
        com.android.inputmethod.latin.settings.SettingsValues r1;
        boolean $z0, $z1, $z2;
        com.android.inputmethod.latin.settings.Settings $r2;
        com.android.inputmethod.latin.inputlogic.InputLogic $r3;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r4;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19;
        java.lang.String $r7, $r18;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void onUpdateSelection(int,int,int,int,int,int)>(i0, i1, i2, i3, i4, i5);

        $z0 = <com.android.inputmethod.latin.LatinIME: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r7 = <com.android.inputmethod.latin.LatinIME: java.lang.String TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onUpdateSelection: oss=");

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ose=");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", nss=");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", nse=");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", cs=");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ce=");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r7, $r18);

     label1:
        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        r1 = virtualinvoke $r2.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        $z1 = r1.<com.android.inputmethod.latin.settings.SettingsValues: boolean mHasHardwareKeyboard>;

        if $z1 == 0 goto label2;

        goto label3;

     label2:
        $r3 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        $z2 = virtualinvoke $r3.<com.android.inputmethod.latin.inputlogic.InputLogic: boolean onUpdateSelection(int,int,int,int,com.android.inputmethod.latin.settings.SettingsValues)>(i0, i1, i2, i3, r1);

        if $z2 == 0 goto label3;

        $r4 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        $i6 = specialinvoke r0.<com.android.inputmethod.latin.LatinIME: int getCurrentAutoCapsState()>();

        $i7 = specialinvoke r0.<com.android.inputmethod.latin.LatinIME: int getCurrentRecapitalizeState()>();

        virtualinvoke $r4.<com.android.inputmethod.keyboard.KeyboardSwitcher: void requestUpdatingShiftState(int,int)>($i6, $i7);

     label3:
        return;
    }

    public void onUpdateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)
    {
        com.android.inputmethod.latin.LatinIME r0;
        android.view.inputmethod.CursorAnchorInfo r1;
        boolean $z0;
        com.android.inputmethod.latin.inputlogic.InputLogic $r2;
        com.android.inputmethod.compat.CursorAnchorInfoCompatWrapper $r3;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: android.view.inputmethod.CursorAnchorInfo;

        $z0 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: boolean isFullscreenMode()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        $r3 = staticinvoke <com.android.inputmethod.compat.CursorAnchorInfoCompatWrapper: com.android.inputmethod.compat.CursorAnchorInfoCompatWrapper fromObject(java.lang.Object)>(r1);

        virtualinvoke $r2.<com.android.inputmethod.latin.inputlogic.InputLogic: void onUpdateCursorAnchorInfo(com.android.inputmethod.compat.CursorAnchorInfoCompatWrapper)>($r3);

        return;
    }

    public void onExtractedTextClicked()
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.settings.Settings $r1;
        com.android.inputmethod.latin.settings.SettingsValues $r2;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        $r2 = virtualinvoke $r1.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        $z0 = virtualinvoke $r2.<com.android.inputmethod.latin.settings.SettingsValues: boolean needsToLookupSuggestions()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<android.inputmethodservice.InputMethodService: void onExtractedTextClicked()>();

        return;
    }

    public void onExtractedCursorMovement(int, int)
    {
        com.android.inputmethod.latin.LatinIME r0;
        int i0, i1;
        com.android.inputmethod.latin.settings.Settings $r1;
        com.android.inputmethod.latin.settings.SettingsValues $r2;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        $r2 = virtualinvoke $r1.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        $z0 = virtualinvoke $r2.<com.android.inputmethod.latin.settings.SettingsValues: boolean needsToLookupSuggestions()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<android.inputmethodservice.InputMethodService: void onExtractedCursorMovement(int,int)>(i0, i1);

        return;
    }

    public void hideWindow()
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r1;
        boolean $z0;
        android.app.AlertDialog $r2;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        virtualinvoke $r1.<com.android.inputmethod.keyboard.KeyboardSwitcher: void onHideWindow()>();

        $z0 = specialinvoke r0.<com.android.inputmethod.latin.LatinIME: boolean isShowingOptionDialog()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: android.app.AlertDialog mOptionsDialog>;

        virtualinvoke $r2.<android.app.AlertDialog: void dismiss()>();

        r0.<com.android.inputmethod.latin.LatinIME: android.app.AlertDialog mOptionsDialog> = null;

     label1:
        specialinvoke r0.<android.inputmethodservice.InputMethodService: void hideWindow()>();

        return;
    }

    public void onDisplayCompletions(android.view.inputmethod.CompletionInfo[])
    {
        com.android.inputmethod.latin.LatinIME r0;
        android.view.inputmethod.CompletionInfo[] r1;
        int i0, $i2;
        com.android.inputmethod.latin.SuggestedWords r2, $r6;
        boolean $z0, $z1;
        com.android.inputmethod.latin.settings.Settings $r3;
        com.android.inputmethod.latin.settings.SettingsValues $r4;
        com.android.inputmethod.latin.LatinIME$UIHandler $r5;
        java.lang.String $r7, $r9, $r14;
        java.lang.StringBuilder $r8, $r10, $r11, $r13, $r15;
        android.view.inputmethod.CompletionInfo $r12;
        java.util.ArrayList r16;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: android.view.inputmethod.CompletionInfo[];

        $z0 = <com.android.inputmethod.latin.LatinIME: boolean DEBUG>;

        if $z0 == 0 goto label2;

        $r7 = <com.android.inputmethod.latin.LatinIME: java.lang.String TAG>;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r7, "Received completions:");

        if r1 == null goto label2;

        i0 = 0;

     label1:
        $i2 = lengthof r1;

        if i0 >= $i2 goto label2;

        $r9 = <com.android.inputmethod.latin.LatinIME: java.lang.String TAG>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  #");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r12 = r1[i0];

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r9, $r14);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r3 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        $r4 = virtualinvoke $r3.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        $z1 = virtualinvoke $r4.<com.android.inputmethod.latin.settings.SettingsValues: boolean isApplicationSpecifiedCompletionsOn()>();

        if $z1 != 0 goto label3;

        return;

     label3:
        $r5 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$UIHandler mHandler>;

        virtualinvoke $r5.<com.android.inputmethod.latin.LatinIME$UIHandler: void cancelUpdateSuggestionStrip()>();

        if r1 != null goto label4;

        virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: void setNeutralSuggestionStrip()>();

        return;

     label4:
        r16 = staticinvoke <com.android.inputmethod.latin.SuggestedWords: java.util.ArrayList getFromApplicationSpecifiedCompletions(android.view.inputmethod.CompletionInfo[])>(r1);

        $r6 = new com.android.inputmethod.latin.SuggestedWords;

        specialinvoke $r6.<com.android.inputmethod.latin.SuggestedWords: void <init>(java.util.ArrayList,java.util.ArrayList,boolean,boolean,boolean,int)>(r16, null, 0, 0, 0, 4);

        r2 = $r6;

        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void setSuggestedWords(com.android.inputmethod.latin.SuggestedWords)>(r2);

        return;
    }

    public void onComputeInsets(android.inputmethodservice.InputMethodService$Insets)
    {
        com.android.inputmethod.latin.LatinIME r0;
        android.inputmethodservice.InputMethodService$Insets r1;
        com.android.inputmethod.latin.settings.SettingsValues r2;
        android.view.View r3, $r6;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11;
        boolean z0, $z2, $z3, $z4, $z5;
        com.android.inputmethod.latin.settings.Settings $r4;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r5, $r7, $r9;
        com.android.inputmethod.latin.suggestions.SuggestionStripView $r8, $r11, $r12;
        android.graphics.Region $r10;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: android.inputmethodservice.InputMethodService$Insets;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void onComputeInsets(android.inputmethodservice.InputMethodService$Insets)>(r1);

        $r4 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        r2 = virtualinvoke $r4.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        $r5 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        r3 = virtualinvoke $r5.<com.android.inputmethod.keyboard.KeyboardSwitcher: android.view.View getVisibleKeyboardView()>();

        if r3 == null goto label1;

        $z2 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: boolean hasSuggestionStripView()>();

        if $z2 != 0 goto label2;

     label1:
        return;

     label2:
        $r6 = r0.<com.android.inputmethod.latin.LatinIME: android.view.View mInputView>;

        i0 = virtualinvoke $r6.<android.view.View: int getHeight()>();

        z0 = r2.<com.android.inputmethod.latin.settings.SettingsValues: boolean mHasHardwareKeyboard>;

        if z0 == 0 goto label3;

        $i10 = virtualinvoke r3.<android.view.View: int getVisibility()>();

        if $i10 != 8 goto label3;

        r1.<android.inputmethodservice.InputMethodService$Insets: int touchableInsets> = i0;

        r1.<android.inputmethodservice.InputMethodService$Insets: int visibleTopInsets> = i0;

        return;

     label3:
        $r7 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        $z3 = virtualinvoke $r7.<com.android.inputmethod.keyboard.KeyboardSwitcher: boolean isShowingEmojiPalettes()>();

        if $z3 != 0 goto label4;

        $r11 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.suggestions.SuggestionStripView mSuggestionStripView>;

        $i11 = virtualinvoke $r11.<com.android.inputmethod.latin.suggestions.SuggestionStripView: int getVisibility()>();

        if $i11 != 0 goto label4;

        $r12 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.suggestions.SuggestionStripView mSuggestionStripView>;

        $i9 = virtualinvoke $r12.<com.android.inputmethod.latin.suggestions.SuggestionStripView: int getHeight()>();

        goto label5;

     label4:
        $i9 = 0;

     label5:
        i1 = $i9;

        $i6 = virtualinvoke r3.<android.view.View: int getHeight()>();

        $i7 = i0 - $i6;

        i2 = $i7 - i1;

        $r8 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.suggestions.SuggestionStripView mSuggestionStripView>;

        virtualinvoke $r8.<com.android.inputmethod.latin.suggestions.SuggestionStripView: void setMoreSuggestionsHeight(int)>(i2);

        $z4 = virtualinvoke r3.<android.view.View: boolean isShown()>();

        if $z4 == 0 goto label8;

        $r9 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        $z5 = virtualinvoke $r9.<com.android.inputmethod.keyboard.KeyboardSwitcher: boolean isShowingMoreKeysPanel()>();

        if $z5 == 0 goto label6;

        $i8 = 0;

        goto label7;

     label6:
        $i8 = i2;

     label7:
        i3 = $i8;

        i4 = virtualinvoke r3.<android.view.View: int getWidth()>();

        i5 = i0 + 100;

        r1.<android.inputmethodservice.InputMethodService$Insets: int touchableInsets> = 3;

        $r10 = r1.<android.inputmethodservice.InputMethodService$Insets: android.graphics.Region touchableRegion>;

        virtualinvoke $r10.<android.graphics.Region: boolean set(int,int,int,int)>(0, i3, i4, i5);

     label8:
        r1.<android.inputmethodservice.InputMethodService$Insets: int contentTopInsets> = i2;

        r1.<android.inputmethodservice.InputMethodService$Insets: int visibleTopInsets> = i2;

        return;
    }

    public void startShowingInputView()
    {
        com.android.inputmethod.latin.LatinIME r0;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r0.<com.android.inputmethod.latin.LatinIME: boolean mIsExecutingStartShowingInputView> = 1;

        virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: void showWindow(boolean)>(1);

        r0.<com.android.inputmethod.latin.LatinIME: boolean mIsExecutingStartShowingInputView> = 0;

        return;
    }

    public void stopShowingInputView()
    {
        com.android.inputmethod.latin.LatinIME r0;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: void showWindow(boolean)>(0);

        return;
    }

    public boolean onEvaluateInputViewShown()
    {
        com.android.inputmethod.latin.LatinIME r0;
        boolean $z0, $z1;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $z0 = r0.<com.android.inputmethod.latin.LatinIME: boolean mIsExecutingStartShowingInputView>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<android.inputmethodservice.InputMethodService: boolean onEvaluateInputViewShown()>();

        return $z1;
    }

    public boolean onEvaluateFullscreenMode()
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.settings.SettingsValues r1;
        boolean z0, $z1, $z2, $z3;
        android.view.inputmethod.EditorInfo r2;
        com.android.inputmethod.latin.settings.Settings $r3;
        android.content.res.Resources $r4;
        int $i0, $i1;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r3 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        r1 = virtualinvoke $r3.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        $z1 = r1.<com.android.inputmethod.latin.settings.SettingsValues: boolean mHasHardwareKeyboard>;

        if $z1 == 0 goto label1;

        return 0;

     label1:
        $r4 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: android.content.res.Resources getResources()>();

        z0 = staticinvoke <com.android.inputmethod.latin.settings.Settings: boolean readUseFullscreenMode(android.content.res.Resources)>($r4);

        $z2 = specialinvoke r0.<android.inputmethodservice.InputMethodService: boolean onEvaluateFullscreenMode()>();

        if $z2 == 0 goto label5;

        if z0 == 0 goto label5;

        r2 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: android.view.inputmethod.EditorInfo getCurrentInputEditorInfo()>();

        if r2 == null goto label2;

        $i0 = r2.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i1 = $i0 & 268435456;

        if $i1 != 0 goto label3;

     label2:
        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;

     label5:
        return 0;
    }

    public void updateFullscreenMode()
    {
        com.android.inputmethod.latin.LatinIME r0;
        android.view.Window r1;
        byte b0, $b1;
        android.view.View r2, $r4, $r6;
        android.app.Dialog $r3;
        com.android.inputmethod.latin.inputlogic.InputLogic $r5;
        boolean $z0, $z1;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r3 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: android.app.Dialog getWindow()>();

        r1 = virtualinvoke $r3.<android.app.Dialog: android.view.Window getWindow()>();

        staticinvoke <com.android.inputmethod.latin.utils.ViewLayoutUtils: void updateLayoutHeightOf(android.view.Window,int)>(r1, -1);

        $r4 = r0.<com.android.inputmethod.latin.LatinIME: android.view.View mInputView>;

        if $r4 == null goto label3;

        $z1 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: boolean isFullscreenMode()>();

        if $z1 == 0 goto label1;

        $b1 = -2;

        goto label2;

     label1:
        $b1 = -1;

     label2:
        b0 = $b1;

        r2 = virtualinvoke r1.<android.view.Window: android.view.View findViewById(int)>(16908318);

        staticinvoke <com.android.inputmethod.latin.utils.ViewLayoutUtils: void updateLayoutHeightOf(android.view.View,int)>(r2, b0);

        staticinvoke <com.android.inputmethod.latin.utils.ViewLayoutUtils: void updateLayoutGravityOf(android.view.View,int)>(r2, 80);

        $r6 = r0.<com.android.inputmethod.latin.LatinIME: android.view.View mInputView>;

        staticinvoke <com.android.inputmethod.latin.utils.ViewLayoutUtils: void updateLayoutHeightOf(android.view.View,int)>($r6, b0);

     label3:
        specialinvoke r0.<android.inputmethodservice.InputMethodService: void updateFullscreenMode()>();

        $r5 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        $z0 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: boolean isFullscreenMode()>();

        virtualinvoke $r5.<com.android.inputmethod.latin.inputlogic.InputLogic: void onUpdateFullscreenMode(boolean)>($z0);

        return;
    }

    private int getCurrentAutoCapsState()
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.settings.Settings $r1;
        com.android.inputmethod.latin.inputlogic.InputLogic $r2;
        com.android.inputmethod.latin.settings.SettingsValues $r3;
        int $i0;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        $r3 = virtualinvoke $r1.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        $i0 = virtualinvoke $r2.<com.android.inputmethod.latin.inputlogic.InputLogic: int getCurrentAutoCapsState(com.android.inputmethod.latin.settings.SettingsValues)>($r3);

        return $i0;
    }

    private int getCurrentRecapitalizeState()
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.inputlogic.InputLogic $r1;
        int $i0;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        $i0 = virtualinvoke $r1.<com.android.inputmethod.latin.inputlogic.InputLogic: int getCurrentRecapitalizeState()>();

        return $i0;
    }

    public java.util.Locale getCurrentSubtypeLocale()
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.SubtypeSwitcher $r1;
        java.util.Locale $r2;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.SubtypeSwitcher mSubtypeSwitcher>;

        $r2 = virtualinvoke $r1.<com.android.inputmethod.latin.SubtypeSwitcher: java.util.Locale getCurrentSubtypeLocale()>();

        return $r2;
    }

    public int[] getCoordinatesForCurrentKeyboard(int[])
    {
        com.android.inputmethod.latin.LatinIME r0;
        int[] r1, $r4, $r5;
        com.android.inputmethod.keyboard.Keyboard r2;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r3;
        int $i0;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: int[];

        $r3 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        r2 = virtualinvoke $r3.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.Keyboard getKeyboard()>();

        if null != r2 goto label1;

        $i0 = lengthof r1;

        $r5 = staticinvoke <com.android.inputmethod.latin.utils.CoordinateUtils: int[] newCoordinateArray(int,int,int)>($i0, -1, -1);

        return $r5;

     label1:
        $r4 = virtualinvoke r2.<com.android.inputmethod.keyboard.Keyboard: int[] getCoordinates(int[])>(r1);

        return $r4;
    }

    public void addWordToUserDictionary(java.lang.String)
    {
        com.android.inputmethod.latin.LatinIME r0;
        java.lang.String r1, r2;
        boolean $z0, $z1;
        com.android.inputmethod.latin.inputlogic.InputLogic $r3, $r6;
        com.android.inputmethod.latin.LastComposedWord $r4;
        int $i0;
        com.android.inputmethod.latin.DictionaryFacilitator $r5;
        java.util.Locale $r7;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        $r4 = $r3.<com.android.inputmethod.latin.inputlogic.InputLogic: com.android.inputmethod.latin.LastComposedWord mLastComposedWord>;

        $i0 = $r4.<com.android.inputmethod.latin.LastComposedWord: int mCapitalizedMode>;

        $z1 = staticinvoke <com.android.inputmethod.latin.utils.CapsModeUtils: boolean isAutoCapsMode(int)>($i0);

        if $z1 == 0 goto label2;

        $r7 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: java.util.Locale getCurrentSubtypeLocale()>();

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r7);

        goto label3;

     label2:
        r2 = r1;

     label3:
        $r5 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.DictionaryFacilitator mDictionaryFacilitator>;

        virtualinvoke $r5.<com.android.inputmethod.latin.DictionaryFacilitator: void addWordToUserDictionary(android.content.Context,java.lang.String)>(r0, r2);

        $r6 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        virtualinvoke $r6.<com.android.inputmethod.latin.inputlogic.InputLogic: void onAddWordToUserDictionary()>();

        return;
    }

    public void showImportantNoticeContents()
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.ImportantNoticeDialog $r1;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r1 = new com.android.inputmethod.latin.ImportantNoticeDialog;

        specialinvoke $r1.<com.android.inputmethod.latin.ImportantNoticeDialog: void <init>(android.content.Context,com.android.inputmethod.latin.ImportantNoticeDialog$ImportantNoticeDialogListener)>(r0, r0);

        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void showOptionDialog(android.app.AlertDialog)>($r1);

        return;
    }

    public void onClickSettingsOfImportantNoticeDialog(int)
    {
        com.android.inputmethod.latin.LatinIME r0;
        int i0;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void launchSettings()>();

        return;
    }

    public void onUserAcknowledgmentOfImportantNoticeDialog(int)
    {
        com.android.inputmethod.latin.LatinIME r0;
        int i0;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: void setNeutralSuggestionStrip()>();

        return;
    }

    public void displaySettingsDialog()
    {
        com.android.inputmethod.latin.LatinIME r0;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $z0 = specialinvoke r0.<com.android.inputmethod.latin.LatinIME: boolean isShowingOptionDialog()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void showSubtypeSelectorAndSettings()>();

        return;
    }

    public boolean onCustomRequest(int)
    {
        com.android.inputmethod.latin.LatinIME r0;
        int i0;
        boolean $z0, $z1;
        com.android.inputmethod.latin.RichInputMethodManager $r1, $r2;
        android.view.inputmethod.InputMethodManager $r3;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.android.inputmethod.latin.LatinIME: boolean isShowingOptionDialog()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        lookupswitch(i0)
        {
            case 1: goto label2;
            default: goto label4;
        };

     label2:
        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.RichInputMethodManager mRichImm>;

        $z1 = virtualinvoke $r1.<com.android.inputmethod.latin.RichInputMethodManager: boolean hasMultipleEnabledIMEsOrSubtypes(boolean)>(1);

        if $z1 == 0 goto label3;

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.RichInputMethodManager mRichImm>;

        $r3 = virtualinvoke $r2.<com.android.inputmethod.latin.RichInputMethodManager: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        virtualinvoke $r3.<android.view.inputmethod.InputMethodManager: void showInputMethodPicker()>();

        return 1;

     label3:
        return 0;

     label4:
        return 0;
    }

    private boolean isShowingOptionDialog()
    {
        com.android.inputmethod.latin.LatinIME r0;
        android.app.AlertDialog $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: android.app.AlertDialog mOptionsDialog>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: android.app.AlertDialog mOptionsDialog>;

        $z0 = virtualinvoke $r2.<android.app.AlertDialog: boolean isShowing()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void switchToNextSubtype()
    {
        com.android.inputmethod.latin.LatinIME r0;
        android.os.IBinder r1;
        android.app.Dialog $r2;
        android.view.Window $r3;
        android.view.WindowManager$LayoutParams $r4;
        boolean $z0;
        com.android.inputmethod.latin.RichInputMethodManager $r5, $r7;
        com.android.inputmethod.latin.LatinIME$SubtypeState $r6;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r2 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: android.app.Dialog getWindow()>();

        $r3 = virtualinvoke $r2.<android.app.Dialog: android.view.Window getWindow()>();

        $r4 = virtualinvoke $r3.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        r1 = $r4.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        $z0 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: boolean shouldSwitchToOtherInputMethods()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.RichInputMethodManager mRichImm>;

        virtualinvoke $r7.<com.android.inputmethod.latin.RichInputMethodManager: boolean switchToNextInputMethod(android.os.IBinder,boolean)>(r1, 0);

        return;

     label1:
        $r6 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$SubtypeState mSubtypeState>;

        $r5 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.RichInputMethodManager mRichImm>;

        virtualinvoke $r6.<com.android.inputmethod.latin.LatinIME$SubtypeState: void switchSubtype(android.os.IBinder,com.android.inputmethod.latin.RichInputMethodManager)>(r1, $r5);

        return;
    }

    public void onCodeInput(int, int, int, boolean)
    {
        com.android.inputmethod.latin.LatinIME r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9;
        boolean z0, $z1;
        com.android.inputmethod.keyboard.MainKeyboardView r1;
        com.android.inputmethod.keyboard.Keyboard r2;
        com.android.inputmethod.event.InputTransaction r3;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r4, $r7, $r9, $r11, $r12;
        com.android.inputmethod.latin.inputlogic.InputLogic $r5;
        com.android.inputmethod.latin.settings.Settings $r6;
        com.android.inputmethod.latin.settings.SettingsValues $r8;
        com.android.inputmethod.latin.LatinIME$UIHandler $r10;
        com.android.inputmethod.latin.SubtypeSwitcher $r13;
        com.android.inputmethod.keyboard.KeyboardId $r14;
        com.android.inputmethod.event.Event r15;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r4 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        r1 = virtualinvoke $r4.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView getMainKeyboardView()>();

        i3 = virtualinvoke r1.<com.android.inputmethod.keyboard.MainKeyboardView: int getKeyX(int)>(i1);

        i4 = virtualinvoke r1.<com.android.inputmethod.keyboard.MainKeyboardView: int getKeyY(int)>(i2);

        if -1 != i0 goto label3;

        $r12 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        r2 = virtualinvoke $r12.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.Keyboard getKeyboard()>();

        if null == r2 goto label1;

        $r14 = r2.<com.android.inputmethod.keyboard.Keyboard: com.android.inputmethod.keyboard.KeyboardId mId>;

        $z1 = virtualinvoke $r14.<com.android.inputmethod.keyboard.KeyboardId: boolean isAlphabetKeyboard()>();

        if $z1 == 0 goto label1;

        i5 = i0;

        goto label2;

     label1:
        i5 = -13;

     label2:
        goto label4;

     label3:
        i5 = i0;

     label4:
        if -7 != i0 goto label5;

        $r13 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.SubtypeSwitcher mSubtypeSwitcher>;

        virtualinvoke $r13.<com.android.inputmethod.latin.SubtypeSwitcher: void switchToShortcutIME(android.inputmethodservice.InputMethodService)>(r0);

     label5:
        r15 = staticinvoke <com.android.inputmethod.latin.LatinIME: com.android.inputmethod.event.Event createSoftwareKeypressEvent(int,int,int,boolean)>(i5, i3, i4, z0);

        $r5 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        $r6 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        $r8 = virtualinvoke $r6.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        $r7 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        $i6 = virtualinvoke $r7.<com.android.inputmethod.keyboard.KeyboardSwitcher: int getKeyboardShiftMode()>();

        $r9 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        $i7 = virtualinvoke $r9.<com.android.inputmethod.keyboard.KeyboardSwitcher: int getCurrentKeyboardScriptId()>();

        $r10 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$UIHandler mHandler>;

        r3 = virtualinvoke $r5.<com.android.inputmethod.latin.inputlogic.InputLogic: com.android.inputmethod.event.InputTransaction onCodeInput(com.android.inputmethod.latin.settings.SettingsValues,com.android.inputmethod.event.Event,int,int,com.android.inputmethod.latin.LatinIME$UIHandler)>($r8, r15, $i6, $i7, $r10);

        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void updateStateAfterInputTransaction(com.android.inputmethod.event.InputTransaction)>(r3);

        $r11 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        $i9 = specialinvoke r0.<com.android.inputmethod.latin.LatinIME: int getCurrentAutoCapsState()>();

        $i8 = specialinvoke r0.<com.android.inputmethod.latin.LatinIME: int getCurrentRecapitalizeState()>();

        virtualinvoke $r11.<com.android.inputmethod.keyboard.KeyboardSwitcher: void onCodeInput(int,int,int)>(i0, $i9, $i8);

        return;
    }

    private static com.android.inputmethod.event.Event createSoftwareKeypressEvent(int, int, int, boolean)
    {
        int i0, i1, i2, i3, i4;
        boolean z0;
        com.android.inputmethod.event.Event $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        if i0 > 0 goto label1;

        i3 = i0;

        i4 = -1;

        goto label2;

     label1:
        i3 = 0;

        i4 = i0;

     label2:
        $r0 = staticinvoke <com.android.inputmethod.event.Event: com.android.inputmethod.event.Event createSoftwareKeypressEvent(int,int,int,int,boolean)>(i4, i3, i1, i2, z0);

        return $r0;
    }

    public void onTextInput(java.lang.String)
    {
        com.android.inputmethod.latin.LatinIME r0;
        java.lang.String r1;
        com.android.inputmethod.event.Event r2;
        com.android.inputmethod.event.InputTransaction r3;
        com.android.inputmethod.latin.settings.Settings $r4;
        com.android.inputmethod.latin.inputlogic.InputLogic $r5;
        com.android.inputmethod.latin.settings.SettingsValues $r6;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r7, $r9;
        int $i0, $i1, $i2;
        com.android.inputmethod.latin.LatinIME$UIHandler $r8;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <com.android.inputmethod.event.Event: com.android.inputmethod.event.Event createSoftwareTextEvent(java.lang.CharSequence,int)>(r1, 0);

        $r5 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        $r4 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        $r6 = virtualinvoke $r4.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        $r7 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        $i0 = virtualinvoke $r7.<com.android.inputmethod.keyboard.KeyboardSwitcher: int getKeyboardShiftMode()>();

        $r8 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$UIHandler mHandler>;

        r3 = virtualinvoke $r5.<com.android.inputmethod.latin.inputlogic.InputLogic: com.android.inputmethod.event.InputTransaction onTextInput(com.android.inputmethod.latin.settings.SettingsValues,com.android.inputmethod.event.Event,int,com.android.inputmethod.latin.LatinIME$UIHandler)>($r6, r2, $i0, $r8);

        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void updateStateAfterInputTransaction(com.android.inputmethod.event.InputTransaction)>(r3);

        $r9 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        $i1 = specialinvoke r0.<com.android.inputmethod.latin.LatinIME: int getCurrentAutoCapsState()>();

        $i2 = specialinvoke r0.<com.android.inputmethod.latin.LatinIME: int getCurrentRecapitalizeState()>();

        virtualinvoke $r9.<com.android.inputmethod.keyboard.KeyboardSwitcher: void onCodeInput(int,int,int)>(-4, $i1, $i2);

        return;
    }

    public void onStartBatchInput()
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.settings.Settings $r1;
        com.android.inputmethod.latin.inputlogic.InputLogic $r2;
        com.android.inputmethod.latin.settings.SettingsValues $r3;
        com.android.inputmethod.latin.LatinIME$UIHandler $r4;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r5;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        $r3 = virtualinvoke $r1.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        $r5 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        $r4 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$UIHandler mHandler>;

        virtualinvoke $r2.<com.android.inputmethod.latin.inputlogic.InputLogic: void onStartBatchInput(com.android.inputmethod.latin.settings.SettingsValues,com.android.inputmethod.keyboard.KeyboardSwitcher,com.android.inputmethod.latin.LatinIME$UIHandler)>($r3, $r5, $r4);

        return;
    }

    public void onUpdateBatchInput(com.android.inputmethod.latin.InputPointers)
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.InputPointers r1;
        com.android.inputmethod.latin.settings.Settings $r2;
        com.android.inputmethod.latin.inputlogic.InputLogic $r3;
        com.android.inputmethod.latin.settings.SettingsValues $r4;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r5;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: com.android.inputmethod.latin.InputPointers;

        $r3 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        $r4 = virtualinvoke $r2.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        $r5 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        virtualinvoke $r3.<com.android.inputmethod.latin.inputlogic.InputLogic: void onUpdateBatchInput(com.android.inputmethod.latin.settings.SettingsValues,com.android.inputmethod.latin.InputPointers,com.android.inputmethod.keyboard.KeyboardSwitcher)>($r4, r1, $r5);

        return;
    }

    public void onEndBatchInput(com.android.inputmethod.latin.InputPointers)
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.InputPointers r1;
        com.android.inputmethod.latin.inputlogic.InputLogic $r2;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: com.android.inputmethod.latin.InputPointers;

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        virtualinvoke $r2.<com.android.inputmethod.latin.inputlogic.InputLogic: void onEndBatchInput(com.android.inputmethod.latin.InputPointers)>(r1);

        return;
    }

    public void onCancelBatchInput()
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.LatinIME$UIHandler $r1;
        com.android.inputmethod.latin.inputlogic.InputLogic $r2;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$UIHandler mHandler>;

        virtualinvoke $r2.<com.android.inputmethod.latin.inputlogic.InputLogic: void onCancelBatchInput(com.android.inputmethod.latin.LatinIME$UIHandler)>($r1);

        return;
    }

    private void showGesturePreviewAndSuggestionStrip(com.android.inputmethod.latin.SuggestedWords, boolean)
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.SuggestedWords r1;
        boolean z0;
        com.android.inputmethod.keyboard.MainKeyboardView r2;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r3;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: com.android.inputmethod.latin.SuggestedWords;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: void showSuggestionStrip(com.android.inputmethod.latin.SuggestedWords)>(r1);

        $r3 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        r2 = virtualinvoke $r3.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView getMainKeyboardView()>();

        virtualinvoke r2.<com.android.inputmethod.keyboard.MainKeyboardView: void showGestureFloatingPreviewText(com.android.inputmethod.latin.SuggestedWords)>(r1);

        if z0 == 0 goto label1;

        virtualinvoke r2.<com.android.inputmethod.keyboard.MainKeyboardView: void dismissGestureFloatingPreviewText()>();

     label1:
        return;
    }

    public void onFinishSlidingInput()
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r1;
        int $i0, $i1;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        $i0 = specialinvoke r0.<com.android.inputmethod.latin.LatinIME: int getCurrentAutoCapsState()>();

        $i1 = specialinvoke r0.<com.android.inputmethod.latin.LatinIME: int getCurrentRecapitalizeState()>();

        virtualinvoke $r1.<com.android.inputmethod.keyboard.KeyboardSwitcher: void onFinishSlidingInput(int,int)>($i0, $i1);

        return;
    }

    public void onCancelInput()
    {
        com.android.inputmethod.latin.LatinIME r0;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        return;
    }

    public boolean hasSuggestionStripView()
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.suggestions.SuggestionStripView $r1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.suggestions.SuggestionStripView mSuggestionStripView>;

        if null == $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isShowingAddToDictionaryHint()
    {
        com.android.inputmethod.latin.LatinIME r0;
        boolean $z0, $z1, $z2;
        com.android.inputmethod.latin.suggestions.SuggestionStripView $r1;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $z0 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: boolean hasSuggestionStripView()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.suggestions.SuggestionStripView mSuggestionStripView>;

        $z1 = virtualinvoke $r1.<com.android.inputmethod.latin.suggestions.SuggestionStripView: boolean isShowingAddToDictionaryHint()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void dismissAddToDictionaryHint()
    {
        com.android.inputmethod.latin.LatinIME r0;
        boolean $z0;
        com.android.inputmethod.latin.suggestions.SuggestionStripView $r1;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $z0 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: boolean hasSuggestionStripView()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.suggestions.SuggestionStripView mSuggestionStripView>;

        virtualinvoke $r1.<com.android.inputmethod.latin.suggestions.SuggestionStripView: boolean dismissAddToDictionaryHint()>();

        return;
    }

    private void setSuggestedWords(com.android.inputmethod.latin.SuggestedWords)
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.SuggestedWords r1, $r8;
        com.android.inputmethod.latin.settings.SettingsValues r2;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29;
        com.android.inputmethod.latin.settings.Settings $r3;
        com.android.inputmethod.latin.LatinIME$UIHandler $r4;
        com.android.inputmethod.latin.inputlogic.InputLogic $r5;
        com.android.inputmethod.latin.InputAttributes $r6, $r13;
        com.android.inputmethod.latin.suggestions.SuggestionStripView $r7, $r9, $r12;
        int $i0;
        com.android.inputmethod.latin.SubtypeSwitcher $r10;
        android.view.inputmethod.InputMethodSubtype $r11;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: com.android.inputmethod.latin.SuggestedWords;

        $r3 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        r2 = virtualinvoke $r3.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        $r5 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        $r4 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$UIHandler mHandler>;

        virtualinvoke $r5.<com.android.inputmethod.latin.inputlogic.InputLogic: void setSuggestedWords(com.android.inputmethod.latin.SuggestedWords,com.android.inputmethod.latin.settings.SettingsValues,com.android.inputmethod.latin.LatinIME$UIHandler)>(r1, r2, $r4);

        $z8 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: boolean hasSuggestionStripView()>();

        if $z8 != 0 goto label01;

        return;

     label01:
        $z9 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: boolean onEvaluateInputViewShown()>();

        if $z9 != 0 goto label02;

        return;

     label02:
        z0 = staticinvoke <com.android.inputmethod.latin.utils.ImportantNoticeUtils: boolean shouldShowImportantNotice(android.content.Context)>(r0);

        $r6 = r2.<com.android.inputmethod.latin.settings.SettingsValues: com.android.inputmethod.latin.InputAttributes mInputAttributes>;

        $z10 = $r6.<com.android.inputmethod.latin.InputAttributes: boolean mShouldShowSuggestions>;

        if $z10 == 0 goto label03;

        $z29 = virtualinvoke r2.<com.android.inputmethod.latin.settings.SettingsValues: boolean isSuggestionsEnabledPerUserSettings()>();

        if $z29 == 0 goto label03;

        $z27 = 1;

        goto label04;

     label03:
        $z27 = 0;

     label04:
        z1 = $z27;

        if z0 != 0 goto label05;

        $z23 = r2.<com.android.inputmethod.latin.settings.SettingsValues: boolean mShowsVoiceInputKey>;

        if $z23 != 0 goto label05;

        if z1 != 0 goto label05;

        $z24 = virtualinvoke r2.<com.android.inputmethod.latin.settings.SettingsValues: boolean isApplicationSpecifiedCompletionsOn()>();

        if $z24 == 0 goto label06;

     label05:
        $z28 = 1;

        goto label07;

     label06:
        $z28 = 0;

     label07:
        z2 = $z28;

        if z2 == 0 goto label08;

        $r13 = r2.<com.android.inputmethod.latin.settings.SettingsValues: com.android.inputmethod.latin.InputAttributes mInputAttributes>;

        $z25 = $r13.<com.android.inputmethod.latin.InputAttributes: boolean mIsPasswordField>;

        if $z25 != 0 goto label08;

        $z26 = 1;

        goto label09;

     label08:
        $z26 = 0;

     label09:
        z3 = $z26;

        $r7 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.suggestions.SuggestionStripView mSuggestionStripView>;

        $z11 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: boolean isFullscreenMode()>();

        virtualinvoke $r7.<com.android.inputmethod.latin.suggestions.SuggestionStripView: void updateVisibility(boolean,boolean)>(z3, $z11);

        if z3 != 0 goto label10;

        return;

     label10:
        $z12 = virtualinvoke r2.<com.android.inputmethod.latin.settings.SettingsValues: boolean isApplicationSpecifiedCompletionsOn()>();

        if $z12 == 0 goto label11;

        $z22 = virtualinvoke r1.<com.android.inputmethod.latin.SuggestedWords: boolean isEmpty()>();

        if $z22 == 0 goto label11;

        $z20 = 1;

        goto label12;

     label11:
        $z20 = 0;

     label12:
        z4 = $z20;

        $r8 = <com.android.inputmethod.latin.SuggestedWords: com.android.inputmethod.latin.SuggestedWords EMPTY>;

        if $r8 == r1 goto label13;

        $z17 = virtualinvoke r1.<com.android.inputmethod.latin.SuggestedWords: boolean isPunctuationSuggestions()>();

        if $z17 != 0 goto label13;

        if z4 == 0 goto label14;

     label13:
        $z21 = 1;

        goto label15;

     label14:
        $z21 = 0;

     label15:
        z5 = $z21;

        $i0 = r1.<com.android.inputmethod.latin.SuggestedWords: int mInputStyle>;

        if $i0 != 7 goto label16;

        $z16 = 1;

        goto label17;

     label16:
        $z16 = 0;

     label17:
        z6 = $z16;

        if z5 != 0 goto label18;

        if z6 == 0 goto label19;

     label18:
        $z19 = 1;

        goto label20;

     label19:
        $z19 = 0;

     label20:
        z7 = $z19;

        if z0 == 0 goto label21;

        if z7 == 0 goto label21;

        $r12 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.suggestions.SuggestionStripView mSuggestionStripView>;

        $z18 = virtualinvoke $r12.<com.android.inputmethod.latin.suggestions.SuggestionStripView: boolean maybeShowImportantNoticeTitle()>();

        if $z18 == 0 goto label21;

        return;

     label21:
        $z13 = virtualinvoke r2.<com.android.inputmethod.latin.settings.SettingsValues: boolean isSuggestionsEnabledPerUserSettings()>();

        if $z13 != 0 goto label22;

        $z15 = virtualinvoke r2.<com.android.inputmethod.latin.settings.SettingsValues: boolean isApplicationSpecifiedCompletionsOn()>();

        if $z15 != 0 goto label22;

        if z5 == 0 goto label23;

     label22:
        $r9 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.suggestions.SuggestionStripView mSuggestionStripView>;

        $r10 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.SubtypeSwitcher mSubtypeSwitcher>;

        $r11 = virtualinvoke $r10.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype getCurrentSubtype()>();

        $z14 = staticinvoke <com.android.inputmethod.latin.utils.SubtypeLocaleUtils: boolean isRtlLanguage(android.view.inputmethod.InputMethodSubtype)>($r11);

        virtualinvoke $r9.<com.android.inputmethod.latin.suggestions.SuggestionStripView: void setSuggestions(com.android.inputmethod.latin.SuggestedWords,boolean)>(r1, $z14);

     label23:
        return;
    }

    public void getSuggestedWords(int, int, com.android.inputmethod.latin.Suggest$OnGetSuggestedWordsCallback)
    {
        com.android.inputmethod.latin.LatinIME r0;
        int i0, i1, $i2;
        com.android.inputmethod.latin.Suggest$OnGetSuggestedWordsCallback r1;
        com.android.inputmethod.keyboard.Keyboard r2;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r3, $r8;
        com.android.inputmethod.latin.settings.Settings $r4;
        com.android.inputmethod.latin.inputlogic.InputLogic $r5;
        com.android.inputmethod.latin.settings.SettingsValues $r6;
        com.android.inputmethod.keyboard.ProximityInfo $r7;
        com.android.inputmethod.latin.SuggestedWords $r9;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.inputmethod.latin.Suggest$OnGetSuggestedWordsCallback;

        $r3 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        r2 = virtualinvoke $r3.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.Keyboard getKeyboard()>();

        if r2 != null goto label1;

        $r9 = <com.android.inputmethod.latin.SuggestedWords: com.android.inputmethod.latin.SuggestedWords EMPTY>;

        interfaceinvoke r1.<com.android.inputmethod.latin.Suggest$OnGetSuggestedWordsCallback: void onGetSuggestedWords(com.android.inputmethod.latin.SuggestedWords)>($r9);

        return;

     label1:
        $r5 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        $r4 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        $r6 = virtualinvoke $r4.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        $r7 = virtualinvoke r2.<com.android.inputmethod.keyboard.Keyboard: com.android.inputmethod.keyboard.ProximityInfo getProximityInfo()>();

        $r8 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        $i2 = virtualinvoke $r8.<com.android.inputmethod.keyboard.KeyboardSwitcher: int getKeyboardShiftMode()>();

        virtualinvoke $r5.<com.android.inputmethod.latin.inputlogic.InputLogic: void getSuggestedWords(com.android.inputmethod.latin.settings.SettingsValues,com.android.inputmethod.keyboard.ProximityInfo,int,int,int,com.android.inputmethod.latin.Suggest$OnGetSuggestedWordsCallback)>($r6, $r7, $i2, i0, i1, r1);

        return;
    }

    public void showSuggestionStrip(com.android.inputmethod.latin.SuggestedWords)
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.SuggestedWords r1, r2, $r3, $r6;
        boolean $z0;
        com.android.inputmethod.accessibility.AccessibilityUtils $r4;
        java.lang.String $r5;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: com.android.inputmethod.latin.SuggestedWords;

        $z0 = virtualinvoke r1.<com.android.inputmethod.latin.SuggestedWords: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r6 = <com.android.inputmethod.latin.SuggestedWords: com.android.inputmethod.latin.SuggestedWords EMPTY>;

        goto label2;

     label1:
        $r6 = r1;

     label2:
        r2 = $r6;

        $r3 = <com.android.inputmethod.latin.SuggestedWords: com.android.inputmethod.latin.SuggestedWords EMPTY>;

        if $r3 != r2 goto label3;

        virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: void setNeutralSuggestionStrip()>();

        goto label4;

     label3:
        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void setSuggestedWords(com.android.inputmethod.latin.SuggestedWords)>(r2);

     label4:
        $r4 = staticinvoke <com.android.inputmethod.accessibility.AccessibilityUtils: com.android.inputmethod.accessibility.AccessibilityUtils getInstance()>();

        $r5 = r1.<com.android.inputmethod.latin.SuggestedWords: java.lang.String mTypedWord>;

        virtualinvoke $r4.<com.android.inputmethod.accessibility.AccessibilityUtils: void setAutoCorrection(com.android.inputmethod.latin.SuggestedWords,java.lang.String)>(r2, $r5);

        return;
    }

    public void pickSuggestionManually(com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo)
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo r1;
        com.android.inputmethod.event.InputTransaction r2;
        com.android.inputmethod.latin.settings.Settings $r3;
        com.android.inputmethod.latin.inputlogic.InputLogic $r4;
        com.android.inputmethod.latin.settings.SettingsValues $r5;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r6, $r7;
        int $i0, $i1;
        com.android.inputmethod.latin.LatinIME$UIHandler $r8;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo;

        $r4 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        $r3 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        $r5 = virtualinvoke $r3.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        $r6 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        $i0 = virtualinvoke $r6.<com.android.inputmethod.keyboard.KeyboardSwitcher: int getKeyboardShiftMode()>();

        $r7 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        $i1 = virtualinvoke $r7.<com.android.inputmethod.keyboard.KeyboardSwitcher: int getCurrentKeyboardScriptId()>();

        $r8 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$UIHandler mHandler>;

        r2 = virtualinvoke $r4.<com.android.inputmethod.latin.inputlogic.InputLogic: com.android.inputmethod.event.InputTransaction onPickSuggestionManually(com.android.inputmethod.latin.settings.SettingsValues,com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo,int,int,com.android.inputmethod.latin.LatinIME$UIHandler)>($r5, r1, $i0, $i1, $r8);

        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void updateStateAfterInputTransaction(com.android.inputmethod.event.InputTransaction)>(r2);

        return;
    }

    public void showAddToDictionaryHint(java.lang.String)
    {
        com.android.inputmethod.latin.LatinIME r0;
        java.lang.String r1;
        boolean $z0;
        com.android.inputmethod.latin.suggestions.SuggestionStripView $r2;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: boolean hasSuggestionStripView()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.suggestions.SuggestionStripView mSuggestionStripView>;

        virtualinvoke $r2.<com.android.inputmethod.latin.suggestions.SuggestionStripView: void showAddToDictionaryHint(java.lang.String)>(r1);

        return;
    }

    public void setNeutralSuggestionStrip()
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.settings.SettingsValues r1;
        com.android.inputmethod.latin.SuggestedWords r2, $r5;
        com.android.inputmethod.latin.settings.Settings $r3;
        boolean $z0;
        com.android.inputmethod.latin.settings.SpacingAndPunctuations $r4;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r3 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        r1 = virtualinvoke $r3.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        $z0 = r1.<com.android.inputmethod.latin.settings.SettingsValues: boolean mBigramPredictionEnabled>;

        if $z0 == 0 goto label1;

        $r5 = <com.android.inputmethod.latin.SuggestedWords: com.android.inputmethod.latin.SuggestedWords EMPTY>;

        goto label2;

     label1:
        $r4 = r1.<com.android.inputmethod.latin.settings.SettingsValues: com.android.inputmethod.latin.settings.SpacingAndPunctuations mSpacingAndPunctuations>;

        $r5 = $r4.<com.android.inputmethod.latin.settings.SpacingAndPunctuations: com.android.inputmethod.latin.PunctuationSuggestions mSuggestPuncList>;

     label2:
        r2 = $r5;

        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void setSuggestedWords(com.android.inputmethod.latin.SuggestedWords)>(r2);

        return;
    }

    void loadKeyboard()
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.LatinIME$UIHandler $r1;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r2, $r4;
        com.android.inputmethod.keyboard.MainKeyboardView $r3;
        android.view.inputmethod.EditorInfo $r5;
        com.android.inputmethod.latin.settings.Settings $r6;
        com.android.inputmethod.latin.settings.SettingsValues $r7;
        int $i0, $i1;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$UIHandler mHandler>;

        virtualinvoke $r1.<com.android.inputmethod.latin.LatinIME$UIHandler: void postReopenDictionaries()>();

        virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: void loadSettings()>();

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        $r3 = virtualinvoke $r2.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView getMainKeyboardView()>();

        if $r3 == null goto label1;

        $r4 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        $r5 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: android.view.inputmethod.EditorInfo getCurrentInputEditorInfo()>();

        $r6 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        $r7 = virtualinvoke $r6.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        $i0 = specialinvoke r0.<com.android.inputmethod.latin.LatinIME: int getCurrentAutoCapsState()>();

        $i1 = specialinvoke r0.<com.android.inputmethod.latin.LatinIME: int getCurrentRecapitalizeState()>();

        virtualinvoke $r4.<com.android.inputmethod.keyboard.KeyboardSwitcher: void loadKeyboard(android.view.inputmethod.EditorInfo,com.android.inputmethod.latin.settings.SettingsValues,int,int)>($r5, $r7, $i0, $i1);

     label1:
        return;
    }

    private void updateStateAfterInputTransaction(com.android.inputmethod.event.InputTransaction)
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.event.InputTransaction r1;
        byte b0;
        int $i1, $i2, $i3;
        com.android.inputmethod.latin.LatinIME$UIHandler $r2, $r6;
        boolean $z0, $z1, $z2, $z3;
        com.android.inputmethod.latin.LatinIME$SubtypeState $r3;
        com.android.inputmethod.event.Event $r4, $r5;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r7;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: com.android.inputmethod.event.InputTransaction;

        $i1 = virtualinvoke r1.<com.android.inputmethod.event.InputTransaction: int getRequiredShiftUpdate()>();

        lookupswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label1;
            default: goto label3;
        };

     label1:
        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$UIHandler mHandler>;

        virtualinvoke $r2.<com.android.inputmethod.latin.LatinIME$UIHandler: void postUpdateShiftState()>();

        goto label3;

     label2:
        $r7 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        $i2 = specialinvoke r0.<com.android.inputmethod.latin.LatinIME: int getCurrentAutoCapsState()>();

        $i3 = specialinvoke r0.<com.android.inputmethod.latin.LatinIME: int getCurrentRecapitalizeState()>();

        virtualinvoke $r7.<com.android.inputmethod.keyboard.KeyboardSwitcher: void requestUpdatingShiftState(int,int)>($i2, $i3);

        goto label3;

     label3:
        $z0 = virtualinvoke r1.<com.android.inputmethod.event.InputTransaction: boolean requiresUpdateSuggestions()>();

        if $z0 == 0 goto label7;

        $r4 = r1.<com.android.inputmethod.event.InputTransaction: com.android.inputmethod.event.Event mEvent>;

        $z2 = virtualinvoke $r4.<com.android.inputmethod.event.Event: boolean isSuggestionStripPress()>();

        if $z2 == 0 goto label4;

        b0 = 0;

        goto label6;

     label4:
        $r5 = r1.<com.android.inputmethod.event.InputTransaction: com.android.inputmethod.event.Event mEvent>;

        $z3 = virtualinvoke $r5.<com.android.inputmethod.event.Event: boolean isGesture()>();

        if $z3 == 0 goto label5;

        b0 = 3;

        goto label6;

     label5:
        b0 = 1;

     label6:
        $r6 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$UIHandler mHandler>;

        virtualinvoke $r6.<com.android.inputmethod.latin.LatinIME$UIHandler: void postUpdateSuggestionStrip(int)>(b0);

     label7:
        $z1 = virtualinvoke r1.<com.android.inputmethod.event.InputTransaction: boolean didAffectContents()>();

        if $z1 == 0 goto label8;

        $r3 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.LatinIME$SubtypeState mSubtypeState>;

        virtualinvoke $r3.<com.android.inputmethod.latin.LatinIME$SubtypeState: void setCurrentSubtypeHasBeenUsed()>();

     label8:
        return;
    }

    private void hapticAndAudioFeedback(int, int)
    {
        com.android.inputmethod.latin.LatinIME r0;
        int i0, i1, $i2;
        com.android.inputmethod.keyboard.MainKeyboardView r1;
        com.android.inputmethod.latin.AudioAndHapticFeedbackManager r2;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r3;
        com.android.inputmethod.latin.inputlogic.InputLogic $r4;
        com.android.inputmethod.latin.RichInputConnection $r5;
        boolean $z0, $z1;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        r1 = virtualinvoke $r3.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView getMainKeyboardView()>();

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<com.android.inputmethod.keyboard.MainKeyboardView: boolean isInDraggingFinger()>();

        if $z1 == 0 goto label1;

        return;

     label1:
        if i1 <= 0 goto label3;

        if i0 != -5 goto label2;

        $r4 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        $r5 = $r4.<com.android.inputmethod.latin.inputlogic.InputLogic: com.android.inputmethod.latin.RichInputConnection mConnection>;

        $z0 = virtualinvoke $r5.<com.android.inputmethod.latin.RichInputConnection: boolean canDeleteCharacters()>();

        if $z0 != 0 goto label2;

        return;

     label2:
        $i2 = i1 % 2;

        if $i2 != 0 goto label3;

        return;

     label3:
        r2 = staticinvoke <com.android.inputmethod.latin.AudioAndHapticFeedbackManager: com.android.inputmethod.latin.AudioAndHapticFeedbackManager getInstance()>();

        if i1 != 0 goto label4;

        virtualinvoke r2.<com.android.inputmethod.latin.AudioAndHapticFeedbackManager: void performHapticFeedback(android.view.View)>(r1);

     label4:
        virtualinvoke r2.<com.android.inputmethod.latin.AudioAndHapticFeedbackManager: void performAudioFeedback(int)>(i0);

        return;
    }

    public void onPressKey(int, int, boolean)
    {
        com.android.inputmethod.latin.LatinIME r0;
        int i0, i1, $i2, $i3;
        boolean z0;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r1;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        $i2 = specialinvoke r0.<com.android.inputmethod.latin.LatinIME: int getCurrentAutoCapsState()>();

        $i3 = specialinvoke r0.<com.android.inputmethod.latin.LatinIME: int getCurrentRecapitalizeState()>();

        virtualinvoke $r1.<com.android.inputmethod.keyboard.KeyboardSwitcher: void onPressKey(int,boolean,int,int)>(i0, z0, $i2, $i3);

        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void hapticAndAudioFeedback(int,int)>(i0, i1);

        return;
    }

    public void onReleaseKey(int, boolean)
    {
        com.android.inputmethod.latin.LatinIME r0;
        int i0, $i1, $i2;
        boolean z0;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r1;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        $i1 = specialinvoke r0.<com.android.inputmethod.latin.LatinIME: int getCurrentAutoCapsState()>();

        $i2 = specialinvoke r0.<com.android.inputmethod.latin.LatinIME: int getCurrentRecapitalizeState()>();

        virtualinvoke $r1.<com.android.inputmethod.keyboard.KeyboardSwitcher: void onReleaseKey(int,boolean,int,int)>(i0, z0, $i1, $i2);

        return;
    }

    private com.android.inputmethod.event.HardwareEventDecoder getHardwareKeyEventDecoder(int)
    {
        com.android.inputmethod.latin.LatinIME r0;
        int i0;
        com.android.inputmethod.event.HardwareEventDecoder r1;
        com.android.inputmethod.event.HardwareKeyboardEventDecoder r2, $r5;
        android.util.SparseArray $r3, $r6;
        java.lang.Object $r4;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.inputmethod.latin.LatinIME: android.util.SparseArray mHardwareEventDecoders>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.inputmethod.event.HardwareEventDecoder) $r4;

        if null == r1 goto label1;

        return r1;

     label1:
        $r5 = new com.android.inputmethod.event.HardwareKeyboardEventDecoder;

        specialinvoke $r5.<com.android.inputmethod.event.HardwareKeyboardEventDecoder: void <init>(int)>(i0);

        r2 = $r5;

        $r6 = r0.<com.android.inputmethod.latin.LatinIME: android.util.SparseArray mHardwareEventDecoders>;

        virtualinvoke $r6.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r2);

        return r2;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        com.android.inputmethod.latin.LatinIME r0;
        int i0;
        android.view.KeyEvent r1;
        com.android.inputmethod.latin.SpecialKeyDetector $r2;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.SpecialKeyDetector mSpecialKeyDetector>;

        virtualinvoke $r2.<com.android.inputmethod.latin.SpecialKeyDetector: void onKeyDown(android.view.KeyEvent)>(r1);

        $z0 = specialinvoke r0.<android.inputmethodservice.InputMethodService: boolean onKeyDown(int,android.view.KeyEvent)>(i0, r1);

        return $z0;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        com.android.inputmethod.latin.LatinIME r0;
        int i0;
        android.view.KeyEvent r1;
        com.android.inputmethod.latin.SpecialKeyDetector $r2;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.SpecialKeyDetector mSpecialKeyDetector>;

        virtualinvoke $r2.<com.android.inputmethod.latin.SpecialKeyDetector: void onKeyUp(android.view.KeyEvent)>(r1);

        $z0 = specialinvoke r0.<android.inputmethodservice.InputMethodService: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);

        return $z0;
    }

    private void launchSettings()
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.keyboard.MainKeyboardView r1;
        android.content.Intent r2, $r7;
        com.android.inputmethod.latin.settings.Settings $r3;
        com.android.inputmethod.latin.inputlogic.InputLogic $r4;
        com.android.inputmethod.latin.settings.SettingsValues $r5;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r6;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r4 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        $r3 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        $r5 = virtualinvoke $r3.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        virtualinvoke $r4.<com.android.inputmethod.latin.inputlogic.InputLogic: void commitTyped(com.android.inputmethod.latin.settings.SettingsValues,java.lang.String)>($r5, "");

        virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: void requestHideSelf(int)>(0);

        $r6 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        r1 = virtualinvoke $r6.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView getMainKeyboardView()>();

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.inputmethod.keyboard.MainKeyboardView: void closing()>();

     label1:
        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>()>();

        r2 = $r7;

        virtualinvoke r2.<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>(r0, class "com/android/inputmethod/latin/settings/SettingsActivity");

        virtualinvoke r2.<android.content.Intent: android.content.Intent setFlags(int)>(337641472);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("show_home_as_up", 0);

        virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: void startActivity(android.content.Intent)>(r2);

        return;
    }

    private void showSubtypeSelectorAndSettings()
    {
        com.android.inputmethod.latin.LatinIME r0;
        java.lang.String r1, r2, $r8;
        java.lang.CharSequence[] r3, $r7;
        com.android.inputmethod.latin.LatinIME$4 r4, $r9;
        android.app.AlertDialog$Builder r5, $r10, $r13;
        android.app.AlertDialog r6;
        int $i0;
        android.content.Context $r11;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: java.lang.String getString(int)>(2131362915);

        r2 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: java.lang.String getString(int)>(2131362970);

        $r7 = newarray (java.lang.CharSequence)[2];

        $r7[0] = r2;

        $i0 = staticinvoke <com.android.inputmethod.latin.utils.ApplicationUtils: int getActivityTitleResId(android.content.Context,java.lang.Class)>(r0, class "com/android/inputmethod/latin/settings/SettingsActivity");

        $r8 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: java.lang.String getString(int)>($i0);

        $r7[1] = $r8;

        r3 = $r7;

        $r9 = new com.android.inputmethod.latin.LatinIME$4;

        specialinvoke $r9.<com.android.inputmethod.latin.LatinIME$4: void <init>(com.android.inputmethod.latin.LatinIME,java.lang.CharSequence)>(r0, r2);

        r4 = $r9;

        $r10 = new android.app.AlertDialog$Builder;

        $r11 = staticinvoke <com.android.inputmethod.latin.utils.DialogUtils: android.content.Context getPlatformDialogThemeContext(android.content.Context)>(r0);

        specialinvoke $r10.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r11);

        r5 = $r10;

        $r13 = virtualinvoke r5.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)>(r3, r4);

        virtualinvoke $r13.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(java.lang.CharSequence)>(r1);

        r6 = virtualinvoke r5.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();

        virtualinvoke r6.<android.app.AlertDialog: void setCancelable(boolean)>(1);

        virtualinvoke r6.<android.app.AlertDialog: void setCanceledOnTouchOutside(boolean)>(1);

        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void showOptionDialog(android.app.AlertDialog)>(r6);

        return;
    }

    private void showOptionDialog(android.app.AlertDialog)
    {
        com.android.inputmethod.latin.LatinIME r0;
        android.app.AlertDialog r1;
        android.os.IBinder r2;
        android.view.Window r3;
        android.view.WindowManager$LayoutParams r4;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r5;
        com.android.inputmethod.keyboard.MainKeyboardView $r6;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: android.app.AlertDialog;

        $r5 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        $r6 = virtualinvoke $r5.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView getMainKeyboardView()>();

        r2 = virtualinvoke $r6.<com.android.inputmethod.keyboard.MainKeyboardView: android.os.IBinder getWindowToken()>();

        if r2 != null goto label1;

        return;

     label1:
        r3 = virtualinvoke r1.<android.app.AlertDialog: android.view.Window getWindow()>();

        r4 = virtualinvoke r3.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        r4.<android.view.WindowManager$LayoutParams: android.os.IBinder token> = r2;

        r4.<android.view.WindowManager$LayoutParams: int type> = 1003;

        virtualinvoke r3.<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)>(r4);

        virtualinvoke r3.<android.view.Window: void addFlags(int)>(131072);

        r0.<com.android.inputmethod.latin.LatinIME: android.app.AlertDialog mOptionsDialog> = r1;

        virtualinvoke r1.<android.app.AlertDialog: void show()>();

        return;
    }

    com.android.inputmethod.latin.SuggestedWords getSuggestedWordsForTest()
    {
        com.android.inputmethod.latin.LatinIME r0;
        boolean $z0;
        com.android.inputmethod.latin.inputlogic.InputLogic $r1;
        com.android.inputmethod.latin.SuggestedWords $r2;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $z0 = <com.android.inputmethod.latin.LatinIME: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        $r2 = $r1.<com.android.inputmethod.latin.inputlogic.InputLogic: com.android.inputmethod.latin.SuggestedWords mSuggestedWords>;

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    void waitForLoadingDictionaries(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        com.android.inputmethod.latin.LatinIME r0;
        long l0;
        java.util.concurrent.TimeUnit r1;
        com.android.inputmethod.latin.DictionaryFacilitator $r2;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.DictionaryFacilitator mDictionaryFacilitator>;

        virtualinvoke $r2.<com.android.inputmethod.latin.DictionaryFacilitator: void waitForLoadingDictionariesForTesting(long,java.util.concurrent.TimeUnit)>(l0, r1);

        return;
    }

    void replaceDictionariesForTest(java.util.Locale)
    {
        com.android.inputmethod.latin.LatinIME r0;
        java.util.Locale r1;
        com.android.inputmethod.latin.settings.SettingsValues r2;
        com.android.inputmethod.latin.settings.Settings $r3;
        boolean $z0, $z1;
        com.android.inputmethod.latin.DictionaryFacilitator $r4;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: java.util.Locale;

        $r3 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        r2 = virtualinvoke $r3.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        $r4 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.DictionaryFacilitator mDictionaryFacilitator>;

        $z1 = r2.<com.android.inputmethod.latin.settings.SettingsValues: boolean mUseContactsDict>;

        $z0 = r2.<com.android.inputmethod.latin.settings.SettingsValues: boolean mUsePersonalizedDicts>;

        virtualinvoke $r4.<com.android.inputmethod.latin.DictionaryFacilitator: void resetDictionaries(android.content.Context,java.util.Locale,boolean,boolean,boolean,com.android.inputmethod.latin.DictionaryFacilitator$DictionaryInitializationListener)>(r0, r1, $z1, $z0, 0, r0);

        return;
    }

    void clearPersonalizedDictionariesForTest()
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.DictionaryFacilitator $r1, $r2;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.DictionaryFacilitator mDictionaryFacilitator>;

        virtualinvoke $r1.<com.android.inputmethod.latin.DictionaryFacilitator: void clearUserHistoryDictionary()>();

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.DictionaryFacilitator mDictionaryFacilitator>;

        virtualinvoke $r2.<com.android.inputmethod.latin.DictionaryFacilitator: void clearPersonalizationDictionary()>();

        return;
    }

    java.util.List getEnabledSubtypesForTest()
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.RichInputMethodManager $r1, $r3;
        java.util.List $r2;
        java.util.ArrayList r4;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.RichInputMethodManager mRichImm>;

        if $r1 == null goto label1;

        $r3 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.RichInputMethodManager mRichImm>;

        $r2 = virtualinvoke $r3.<com.android.inputmethod.latin.RichInputMethodManager: java.util.List getMyEnabledInputMethodSubtypeList(boolean)>(1);

        goto label2;

     label1:
        r4 = new java.util.ArrayList;

        $r2 = r4;

        specialinvoke r4.<java.util.ArrayList: void <init>()>();

     label2:
        return $r2;
    }

    public void dumpDictionaryForDebug(java.lang.String)
    {
        com.android.inputmethod.latin.LatinIME r0;
        java.lang.String r1;
        com.android.inputmethod.latin.DictionaryFacilitator $r2, $r4;
        java.util.Locale $r3;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.DictionaryFacilitator mDictionaryFacilitator>;

        $r3 = virtualinvoke $r2.<com.android.inputmethod.latin.DictionaryFacilitator: java.util.Locale getLocale()>();

        if $r3 != null goto label1;

        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void resetSuggest()>();

     label1:
        $r4 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.DictionaryFacilitator mDictionaryFacilitator>;

        virtualinvoke $r4.<com.android.inputmethod.latin.DictionaryFacilitator: void dumpDictionaryForDebug(java.lang.String)>(r1);

        return;
    }

    public void debugDumpStateAndCrashWithException(java.lang.String)
    {
        com.android.inputmethod.latin.LatinIME r0;
        java.lang.String r1, $r6, $r13;
        com.android.inputmethod.latin.settings.SettingsValues r2;
        java.lang.StringBuilder r3, $r5, $r7, $r9, $r10;
        com.android.inputmethod.latin.settings.Settings $r4;
        com.android.inputmethod.latin.InputAttributes $r8;
        java.lang.RuntimeException $r12;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        r2 = virtualinvoke $r4.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        $r5 = new java.lang.StringBuilder;

        $r6 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        r3 = $r5;

        $r7 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nAttributes : ");

        $r8 = r2.<com.android.inputmethod.latin.settings.SettingsValues: com.android.inputmethod.latin.InputAttributes mInputAttributes>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nContext : ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = new java.lang.RuntimeException;

        $r13 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13);

        throw $r12;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.inputmethod.latin.LatinIME r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        android.util.PrintWriterPrinter r4, $r7;
        com.android.inputmethod.keyboard.Keyboard r5;
        int i0, $i1, $i2;
        com.android.inputmethod.latin.settings.SettingsValues r6;
        java.lang.StringBuilder $r8, $r9, $r10, $r12, $r13, $r14, $r18, $r19, $r20;
        java.lang.String $r11, $r15, $r17, $r22, $r23;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r16;
        com.android.inputmethod.latin.settings.Settings $r21;
        com.android.inputmethod.keyboard.KeyboardId $r24;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        $r7 = new android.util.PrintWriterPrinter;

        specialinvoke $r7.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>(r2);

        r4 = $r7;

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>("LatinIME state :");

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  VersionCode = ");

        $i1 = staticinvoke <com.android.inputmethod.latin.utils.ApplicationUtils: int getVersionCode(android.content.Context)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  VersionName = ");

        $r15 = staticinvoke <com.android.inputmethod.latin.utils.ApplicationUtils: java.lang.String getVersionName(android.content.Context)>(r0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r17);

        $r16 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.keyboard.KeyboardSwitcher mKeyboardSwitcher>;

        r5 = virtualinvoke $r16.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.Keyboard getKeyboard()>();

        if r5 == null goto label1;

        $r24 = r5.<com.android.inputmethod.keyboard.Keyboard: com.android.inputmethod.keyboard.KeyboardId mId>;

        $i2 = $r24.<com.android.inputmethod.keyboard.KeyboardId: int mMode>;

        goto label2;

     label1:
        $i2 = -1;

     label2:
        i0 = $i2;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Keyboard mode = ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r22);

        $r21 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        r6 = virtualinvoke $r21.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        $r23 = virtualinvoke r6.<com.android.inputmethod.latin.settings.SettingsValues: java.lang.String dump()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r23);

        return;
    }

    public boolean shouldSwitchToOtherInputMethods()
    {
        com.android.inputmethod.latin.LatinIME r0;
        boolean z0, $z1;
        android.os.IBinder r1;
        com.android.inputmethod.latin.settings.Settings $r2;
        com.android.inputmethod.latin.settings.SettingsValues $r3;
        android.app.Dialog $r4;
        android.view.Window $r5;
        android.view.WindowManager$LayoutParams $r6;
        com.android.inputmethod.latin.RichInputMethodManager $r7;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        $r3 = virtualinvoke $r2.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        z0 = $r3.<com.android.inputmethod.latin.settings.SettingsValues: boolean mIncludesOtherImesInLanguageSwitchList>;

        $r4 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: android.app.Dialog getWindow()>();

        $r5 = virtualinvoke $r4.<android.app.Dialog: android.view.Window getWindow()>();

        $r6 = virtualinvoke $r5.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        r1 = $r6.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        if r1 != null goto label1;

        return z0;

     label1:
        $r7 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.RichInputMethodManager mRichImm>;

        $z1 = virtualinvoke $r7.<com.android.inputmethod.latin.RichInputMethodManager: boolean shouldOfferSwitchingToNextInputMethod(android.os.IBinder,boolean)>(r1, z0);

        return $z1;
    }

    public boolean shouldShowLanguageSwitchKey()
    {
        com.android.inputmethod.latin.LatinIME r0;
        boolean z0, $z1;
        android.os.IBinder r1;
        com.android.inputmethod.latin.settings.Settings $r2;
        com.android.inputmethod.latin.settings.SettingsValues $r3;
        android.app.Dialog $r4;
        android.view.Window $r5;
        android.view.WindowManager$LayoutParams $r6;
        com.android.inputmethod.latin.RichInputMethodManager $r7;

        r0 := @this: com.android.inputmethod.latin.LatinIME;

        $r2 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        $r3 = virtualinvoke $r2.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        z0 = virtualinvoke $r3.<com.android.inputmethod.latin.settings.SettingsValues: boolean isLanguageSwitchKeyEnabled()>();

        $r4 = virtualinvoke r0.<com.android.inputmethod.latin.LatinIME: android.app.Dialog getWindow()>();

        $r5 = virtualinvoke $r4.<android.app.Dialog: android.view.Window getWindow()>();

        $r6 = virtualinvoke $r5.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        r1 = $r6.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        if r1 != null goto label1;

        return z0;

     label1:
        $r7 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.RichInputMethodManager mRichImm>;

        $z1 = virtualinvoke $r7.<com.android.inputmethod.latin.RichInputMethodManager: boolean shouldOfferSwitchingToNextInputMethod(android.os.IBinder,boolean)>(r1, z0);

        return $z1;
    }

    static com.android.inputmethod.latin.settings.Settings access$000(com.android.inputmethod.latin.LatinIME)
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.settings.Settings $r1;

        r0 := @parameter0: com.android.inputmethod.latin.LatinIME;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.settings.Settings mSettings>;

        return $r1;
    }

    static com.android.inputmethod.latin.inputlogic.InputLogic access$100(com.android.inputmethod.latin.LatinIME)
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.inputlogic.InputLogic $r1;

        r0 := @parameter0: com.android.inputmethod.latin.LatinIME;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.inputlogic.InputLogic mInputLogic>;

        return $r1;
    }

    static int access$200(com.android.inputmethod.latin.LatinIME)
    {
        com.android.inputmethod.latin.LatinIME r0;
        int $i0;

        r0 := @parameter0: com.android.inputmethod.latin.LatinIME;

        $i0 = specialinvoke r0.<com.android.inputmethod.latin.LatinIME: int getCurrentAutoCapsState()>();

        return $i0;
    }

    static int access$300(com.android.inputmethod.latin.LatinIME)
    {
        com.android.inputmethod.latin.LatinIME r0;
        int $i0;

        r0 := @parameter0: com.android.inputmethod.latin.LatinIME;

        $i0 = specialinvoke r0.<com.android.inputmethod.latin.LatinIME: int getCurrentRecapitalizeState()>();

        return $i0;
    }

    static void access$400(com.android.inputmethod.latin.LatinIME, com.android.inputmethod.latin.SuggestedWords, boolean)
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.SuggestedWords r1;
        boolean z0;

        r0 := @parameter0: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter1: com.android.inputmethod.latin.SuggestedWords;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void showGesturePreviewAndSuggestionStrip(com.android.inputmethod.latin.SuggestedWords,boolean)>(r1, z0);

        return;
    }

    static void access$500(com.android.inputmethod.latin.LatinIME)
    {
        com.android.inputmethod.latin.LatinIME r0;

        r0 := @parameter0: com.android.inputmethod.latin.LatinIME;

        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void resetSuggest()>();

        return;
    }

    static java.lang.String access$600()
    {
        java.lang.String $r0;

        $r0 = <com.android.inputmethod.latin.LatinIME: java.lang.String TAG>;

        return $r0;
    }

    static void access$700(com.android.inputmethod.latin.LatinIME, boolean)
    {
        com.android.inputmethod.latin.LatinIME r0;
        boolean z0;

        r0 := @parameter0: com.android.inputmethod.latin.LatinIME;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void onFinishInputViewInternal(boolean)>(z0);

        return;
    }

    static void access$800(com.android.inputmethod.latin.LatinIME)
    {
        com.android.inputmethod.latin.LatinIME r0;

        r0 := @parameter0: com.android.inputmethod.latin.LatinIME;

        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void onFinishInputInternal()>();

        return;
    }

    static void access$900(com.android.inputmethod.latin.LatinIME, android.view.inputmethod.EditorInfo, boolean)
    {
        com.android.inputmethod.latin.LatinIME r0;
        android.view.inputmethod.EditorInfo r1;
        boolean z0;

        r0 := @parameter0: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter1: android.view.inputmethod.EditorInfo;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void onStartInputInternal(android.view.inputmethod.EditorInfo,boolean)>(r1, z0);

        return;
    }

    static void access$1000(com.android.inputmethod.latin.LatinIME, android.view.inputmethod.EditorInfo, boolean)
    {
        com.android.inputmethod.latin.LatinIME r0;
        android.view.inputmethod.EditorInfo r1;
        boolean z0;

        r0 := @parameter0: com.android.inputmethod.latin.LatinIME;

        r1 := @parameter1: android.view.inputmethod.EditorInfo;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void onStartInputViewInternal(android.view.inputmethod.EditorInfo,boolean)>(r1, z0);

        return;
    }

    static void access$1100(com.android.inputmethod.latin.LatinIME)
    {
        com.android.inputmethod.latin.LatinIME r0;

        r0 := @parameter0: com.android.inputmethod.latin.LatinIME;

        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void onExtractTextViewPreDraw()>();

        return;
    }

    static com.android.inputmethod.latin.SubtypeSwitcher access$1200(com.android.inputmethod.latin.LatinIME)
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.SubtypeSwitcher $r1;

        r0 := @parameter0: com.android.inputmethod.latin.LatinIME;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.SubtypeSwitcher mSubtypeSwitcher>;

        return $r1;
    }

    static com.android.inputmethod.latin.RichInputMethodManager access$1300(com.android.inputmethod.latin.LatinIME)
    {
        com.android.inputmethod.latin.LatinIME r0;
        com.android.inputmethod.latin.RichInputMethodManager $r1;

        r0 := @parameter0: com.android.inputmethod.latin.LatinIME;

        $r1 = r0.<com.android.inputmethod.latin.LatinIME: com.android.inputmethod.latin.RichInputMethodManager mRichImm>;

        return $r1;
    }

    static void access$1400(com.android.inputmethod.latin.LatinIME)
    {
        com.android.inputmethod.latin.LatinIME r0;

        r0 := @parameter0: com.android.inputmethod.latin.LatinIME;

        specialinvoke r0.<com.android.inputmethod.latin.LatinIME: void launchSettings()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.inputmethod.latin.LatinIME: java.lang.String SCHEME_PACKAGE> = "package";

        <com.android.inputmethod.latin.LatinIME: int PERIOD_FOR_AUDIO_AND_HAPTIC_FEEDBACK_IN_KEY_REPEAT> = 2;

        <com.android.inputmethod.latin.LatinIME: int DELAY_WAIT_FOR_DICTIONARY_LOAD> = 2000;

        <com.android.inputmethod.latin.LatinIME: int PENDING_IMS_CALLBACK_DURATION> = 800;

        <com.android.inputmethod.latin.LatinIME: int EXTENDED_TOUCHABLE_REGION_HEIGHT> = 100;

        <com.android.inputmethod.latin.LatinIME: boolean TRACE> = 0;

        $r0 = class "com/android/inputmethod/latin/LatinIME";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.inputmethod.latin.LatinIME: java.lang.String TAG> = $r1;

        <com.android.inputmethod.latin.LatinIME: boolean DEBUG> = 0;

        staticinvoke <com.android.inputmethod.latin.utils.JniUtils: void loadNativeLibrary()>();

        return;
    }
}
