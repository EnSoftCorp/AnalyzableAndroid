public final class com.android.inputmethod.latin.DictionaryFactory extends java.lang.Object
{
    private static final java.lang.String TAG;

    public void <init>()
    {
        com.android.inputmethod.latin.DictionaryFactory r0;

        r0 := @this: com.android.inputmethod.latin.DictionaryFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.android.inputmethod.latin.DictionaryCollection createMainDictionaryFromManager(android.content.Context, java.util.Locale, boolean)
    {
        android.content.Context r0;
        java.util.Locale r1;
        boolean z0, $z1, $z3;
        java.util.LinkedList r2, $r7;
        java.util.ArrayList r3;
        java.util.Iterator r4;
        com.android.inputmethod.latin.AssetFileAddress r5;
        com.android.inputmethod.latin.ReadOnlyBinaryDictionary r6, $r10, $r15;
        com.android.inputmethod.latin.DictionaryCollection $r8, $r14;
        java.lang.Object $r9;
        long $l0, $l1;
        java.lang.String $r11, $r12;
        com.android.inputmethod.latin.Dictionary[] $r13;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.util.Locale;

        z0 := @parameter2: boolean;

        if null != r1 goto label1;

        $r12 = <com.android.inputmethod.latin.DictionaryFactory: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r12, "No locale defined for dictionary");

        $r14 = new com.android.inputmethod.latin.DictionaryCollection;

        $r13 = newarray (com.android.inputmethod.latin.Dictionary)[1];

        $r15 = staticinvoke <com.android.inputmethod.latin.DictionaryFactory: com.android.inputmethod.latin.ReadOnlyBinaryDictionary createReadOnlyBinaryDictionary(android.content.Context,java.util.Locale)>(r0, r1);

        $r13[0] = $r15;

        specialinvoke $r14.<com.android.inputmethod.latin.DictionaryCollection: void <init>(java.lang.String,com.android.inputmethod.latin.Dictionary[])>("main", $r13);

        return $r14;

     label1:
        $r7 = new java.util.LinkedList;

        specialinvoke $r7.<java.util.LinkedList: void <init>()>();

        r2 = $r7;

        r3 = staticinvoke <com.android.inputmethod.latin.BinaryDictionaryGetter: java.util.ArrayList getDictionaryFiles(java.util.Locale,android.content.Context)>(r1, r0);

        if null == r3 goto label5;

        r4 = virtualinvoke r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.inputmethod.latin.AssetFileAddress) $r9;

        $r10 = new com.android.inputmethod.latin.ReadOnlyBinaryDictionary;

        $r11 = r5.<com.android.inputmethod.latin.AssetFileAddress: java.lang.String mFilename>;

        $l1 = r5.<com.android.inputmethod.latin.AssetFileAddress: long mOffset>;

        $l0 = r5.<com.android.inputmethod.latin.AssetFileAddress: long mLength>;

        specialinvoke $r10.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: void <init>(java.lang.String,long,long,boolean,java.util.Locale,java.lang.String)>($r11, $l1, $l0, z0, r1, "main");

        r6 = $r10;

        $z3 = virtualinvoke r6.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: boolean isValidDictionary()>();

        if $z3 == 0 goto label3;

        virtualinvoke r2.<java.util.LinkedList: boolean add(java.lang.Object)>(r6);

        goto label4;

     label3:
        virtualinvoke r6.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: void close()>();

        staticinvoke <com.android.inputmethod.latin.DictionaryFactory: void killDictionary(android.content.Context,com.android.inputmethod.latin.AssetFileAddress)>(r0, r5);

     label4:
        goto label2;

     label5:
        $r8 = new com.android.inputmethod.latin.DictionaryCollection;

        specialinvoke $r8.<com.android.inputmethod.latin.DictionaryCollection: void <init>(java.lang.String,java.util.Collection)>("main", r2);

        return $r8;
    }

    private static void killDictionary(android.content.Context, com.android.inputmethod.latin.AssetFileAddress)
    {
        android.content.Context r0;
        com.android.inputmethod.latin.AssetFileAddress r1;
        android.content.ContentProviderClient r2;
        java.lang.SecurityException r3, $r12;
        boolean $z0;
        android.content.ContentResolver $r4;
        android.net.Uri$Builder $r5;
        android.net.Uri $r6;
        java.io.File $r7;
        java.lang.String $r8, $r9, $r10, $r11, $r13, r14;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.inputmethod.latin.AssetFileAddress;

        $z0 = virtualinvoke r1.<com.android.inputmethod.latin.AssetFileAddress: boolean pointsToPhysicalFile()>();

        if $z0 == 0 goto label6;

        virtualinvoke r1.<com.android.inputmethod.latin.AssetFileAddress: void deleteUnderlyingFile()>();

     label1:
        $r4 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r5 = staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: android.net.Uri$Builder getProviderUriBuilder(java.lang.String)>("");

        $r6 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri build()>();

        r2 = virtualinvoke $r4.<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(android.net.Uri)>($r6);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        r3 = $r12;

        $r13 = <com.android.inputmethod.latin.DictionaryFactory: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r13, "No permission to communicate with the dictionary provider", r3);

        return;

     label4:
        if null != r2 goto label5;

        $r11 = <com.android.inputmethod.latin.DictionaryFactory: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r11, "Can\'t establish communication with the dictionary provider");

        return;

     label5:
        $r7 = new java.io.File;

        $r8 = r1.<com.android.inputmethod.latin.AssetFileAddress: java.lang.String mFilename>;

        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r8);

        $r9 = virtualinvoke $r7.<java.io.File: java.lang.String getName()>();

        r14 = staticinvoke <com.android.inputmethod.latin.utils.DictionaryInfoUtils: java.lang.String getWordListIdFromFileName(java.lang.String)>($r9);

        if null == r14 goto label6;

        $r10 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(2131361797);

        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: boolean reportBrokenFileToDictionaryProvider(android.content.ContentProviderClient,java.lang.String,java.lang.String)>(r2, $r10, r14);

     label6:
        return;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    public static com.android.inputmethod.latin.DictionaryCollection createMainDictionaryFromManager(android.content.Context, java.util.Locale)
    {
        android.content.Context r0;
        java.util.Locale r1;
        com.android.inputmethod.latin.DictionaryCollection $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.util.Locale;

        $r2 = staticinvoke <com.android.inputmethod.latin.DictionaryFactory: com.android.inputmethod.latin.DictionaryCollection createMainDictionaryFromManager(android.content.Context,java.util.Locale,boolean)>(r0, r1, 0);

        return $r2;
    }

    protected static com.android.inputmethod.latin.ReadOnlyBinaryDictionary createReadOnlyBinaryDictionary(android.content.Context, java.util.Locale)
    {
        android.content.Context r0;
        java.util.Locale r1;
        android.content.res.AssetFileDescriptor r2;
        int i0;
        java.lang.Throwable r3, $r23;
        android.content.res.Resources $r4, $r5;
        android.content.pm.ApplicationInfo $r6;
        java.io.File $r7, r29;
        com.android.inputmethod.latin.ReadOnlyBinaryDictionary $r8, r30;
        boolean $z0;
        long $l1, $l2;
        java.lang.String $r9, $r13, $r14, $r18, $r21, r28;
        java.lang.StringBuilder $r10, $r11, $r12, $r15, $r16, $r17;
        java.io.IOException $r19, $r22, $r24, $r25, $r26, $r27;
        android.content.res.Resources$NotFoundException $r20;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.util.Locale;

        r2 = null;

     label01:
        $r4 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        i0 = staticinvoke <com.android.inputmethod.latin.utils.DictionaryInfoUtils: int getMainDictionaryResourceIdIfAvailableForLocale(android.content.res.Resources,java.util.Locale)>($r4, r1);

        if 0 != i0 goto label07;

     label02:
        if null == r2 goto label06;

     label03:
        virtualinvoke r2.<android.content.res.AssetFileDescriptor: void close()>();

     label04:
        goto label06;

     label05:
        $r26 := @caughtexception;

     label06:
        return null;

     label07:
        $r5 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke $r5.<android.content.res.Resources: android.content.res.AssetFileDescriptor openRawResourceFd(int)>(i0);

        if r2 != null goto label13;

        $r14 = <com.android.inputmethod.latin.DictionaryFactory: java.lang.String TAG>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found the resource but it is compressed. resId=");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r14, $r18);

     label08:
        if null == r2 goto label12;

     label09:
        virtualinvoke r2.<android.content.res.AssetFileDescriptor: void close()>();

     label10:
        goto label12;

     label11:
        $r27 := @caughtexception;

     label12:
        return null;

     label13:
        $r6 = virtualinvoke r0.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        r28 = $r6.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>(r28);

        r29 = $r7;

        $z0 = virtualinvoke r29.<java.io.File: boolean isFile()>();

        if $z0 != 0 goto label19;

        $r9 = <com.android.inputmethod.latin.DictionaryFactory: java.lang.String TAG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sourceDir is not a file: ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r9, $r13);

     label14:
        if null == r2 goto label18;

     label15:
        virtualinvoke r2.<android.content.res.AssetFileDescriptor: void close()>();

     label16:
        goto label18;

     label17:
        $r22 := @caughtexception;

     label18:
        return null;

     label19:
        $r8 = new com.android.inputmethod.latin.ReadOnlyBinaryDictionary;

        $l2 = virtualinvoke r2.<android.content.res.AssetFileDescriptor: long getStartOffset()>();

        $l1 = virtualinvoke r2.<android.content.res.AssetFileDescriptor: long getLength()>();

        specialinvoke $r8.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: void <init>(java.lang.String,long,long,boolean,java.util.Locale,java.lang.String)>(r28, $l2, $l1, 0, r1, "main");

        r30 = $r8;

     label20:
        if null == r2 goto label24;

     label21:
        virtualinvoke r2.<android.content.res.AssetFileDescriptor: void close()>();

     label22:
        goto label24;

     label23:
        $r24 := @caughtexception;

     label24:
        return r30;

     label25:
        $r20 := @caughtexception;

        $r21 = <com.android.inputmethod.latin.DictionaryFactory: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r21, "Could not find the resource");

     label26:
        if null == r2 goto label30;

     label27:
        virtualinvoke r2.<android.content.res.AssetFileDescriptor: void close()>();

     label28:
        goto label30;

     label29:
        $r25 := @caughtexception;

     label30:
        return null;

     label31:
        $r23 := @caughtexception;

        r3 = $r23;

     label32:
        if null == r2 goto label36;

     label33:
        virtualinvoke r2.<android.content.res.AssetFileDescriptor: void close()>();

     label34:
        goto label36;

     label35:
        $r19 := @caughtexception;

     label36:
        throw r3;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.io.IOException from label21 to label22 with label23;
        catch android.content.res.Resources$NotFoundException from label01 to label02 with label25;
        catch android.content.res.Resources$NotFoundException from label07 to label08 with label25;
        catch android.content.res.Resources$NotFoundException from label13 to label14 with label25;
        catch android.content.res.Resources$NotFoundException from label19 to label20 with label25;
        catch java.io.IOException from label27 to label28 with label29;
        catch java.lang.Throwable from label01 to label02 with label31;
        catch java.lang.Throwable from label07 to label08 with label31;
        catch java.lang.Throwable from label13 to label14 with label31;
        catch java.lang.Throwable from label19 to label20 with label31;
        catch java.lang.Throwable from label25 to label26 with label31;
        catch java.io.IOException from label33 to label34 with label35;
        catch java.lang.Throwable from label31 to label32 with label31;
    }

    public static com.android.inputmethod.latin.Dictionary createDictionaryForTest(com.android.inputmethod.latin.AssetFileAddress[], boolean, java.util.Locale)
    {
        com.android.inputmethod.latin.AssetFileAddress[] r0, r3;
        boolean z0;
        java.util.Locale r1;
        com.android.inputmethod.latin.DictionaryCollection r2, $r6;
        int i0, i1;
        com.android.inputmethod.latin.AssetFileAddress r4;
        com.android.inputmethod.latin.ReadOnlyBinaryDictionary r5, $r7;
        long $l2, $l3;
        java.lang.String $r8;

        r0 := @parameter0: com.android.inputmethod.latin.AssetFileAddress[];

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.util.Locale;

        $r6 = new com.android.inputmethod.latin.DictionaryCollection;

        specialinvoke $r6.<com.android.inputmethod.latin.DictionaryCollection: void <init>(java.lang.String)>("main");

        r2 = $r6;

        r3 = r0;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r4 = r3[i1];

        $r7 = new com.android.inputmethod.latin.ReadOnlyBinaryDictionary;

        $r8 = r4.<com.android.inputmethod.latin.AssetFileAddress: java.lang.String mFilename>;

        $l3 = r4.<com.android.inputmethod.latin.AssetFileAddress: long mOffset>;

        $l2 = r4.<com.android.inputmethod.latin.AssetFileAddress: long mLength>;

        specialinvoke $r7.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: void <init>(java.lang.String,long,long,boolean,java.util.Locale,java.lang.String)>($r8, $l3, $l2, z0, r1, "main");

        r5 = $r7;

        virtualinvoke r2.<com.android.inputmethod.latin.DictionaryCollection: void addDictionary(com.android.inputmethod.latin.Dictionary)>(r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r2;
    }

    public static boolean isDictionaryAvailable(android.content.Context, java.util.Locale)
    {
        android.content.Context r0;
        java.util.Locale r1;
        android.content.res.Resources r2;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.util.Locale;

        r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = staticinvoke <com.android.inputmethod.latin.utils.DictionaryInfoUtils: int getMainDictionaryResourceIdIfAvailableForLocale(android.content.res.Resources,java.util.Locale)>(r2, r1);

        if 0 == $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "com/android/inputmethod/latin/DictionaryFactory";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.inputmethod.latin.DictionaryFactory: java.lang.String TAG> = $r1;

        return;
    }
}
