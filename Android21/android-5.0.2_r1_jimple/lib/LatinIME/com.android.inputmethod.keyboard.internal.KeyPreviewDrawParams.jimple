public final class com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams extends java.lang.Object
{
    public final int mPreviewOffset;
    public final int mPreviewHeight;
    public final int mPreviewBackgroundResId;
    private final int mShowUpAnimatorResId;
    private final int mDismissAnimatorResId;
    private boolean mHasCustomAnimationParams;
    private int mShowUpDuration;
    private int mDismissDuration;
    private float mShowUpStartXScale;
    private float mShowUpStartYScale;
    private float mDismissEndXScale;
    private float mDismissEndYScale;
    private int mLingerTimeout;
    private boolean mShowPopup;
    private int mVisibleWidth;
    private int mVisibleHeight;
    private int mVisibleOffset;
    private static final float KEY_PREVIEW_SHOW_UP_END_SCALE;
    private static final android.view.animation.AccelerateInterpolator ACCELERATE_INTERPOLATOR;
    private static final android.view.animation.DecelerateInterpolator DECELERATE_INTERPOLATOR;

    public void <init>(android.content.res.TypedArray)
    {
        com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams r0;
        android.content.res.TypedArray r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams;

        r1 := @parameter0: android.content.res.TypedArray;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: boolean mShowPopup> = 1;

        $i0 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(22, 0);

        r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int mPreviewOffset> = $i0;

        $i1 = virtualinvoke r1.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(23, 0);

        r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int mPreviewHeight> = $i1;

        $i2 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(21, 0);

        r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int mPreviewBackgroundResId> = $i2;

        $i3 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(24, 0);

        r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int mLingerTimeout> = $i3;

        $i4 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(25, 0);

        r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int mShowUpAnimatorResId> = $i4;

        $i5 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(26, 0);

        r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int mDismissAnimatorResId> = $i5;

        return;
    }

    public void setVisibleOffset(int)
    {
        com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams r0;
        int i0;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams;

        i0 := @parameter0: int;

        r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int mVisibleOffset> = i0;

        return;
    }

    public int getVisibleOffset()
    {
        com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams r0;
        int $i0;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams;

        $i0 = r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int mVisibleOffset>;

        return $i0;
    }

    public void setGeometry(android.view.View)
    {
        com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams r0;
        android.view.View r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams;

        r1 := @parameter0: android.view.View;

        i0 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i1 = r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int mPreviewHeight>;

        $i2 = virtualinvoke r1.<android.view.View: int getPaddingLeft()>();

        $i3 = i0 - $i2;

        $i4 = virtualinvoke r1.<android.view.View: int getPaddingRight()>();

        $i5 = $i3 - $i4;

        r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int mVisibleWidth> = $i5;

        $i6 = virtualinvoke r1.<android.view.View: int getPaddingTop()>();

        $i7 = i1 - $i6;

        $i8 = virtualinvoke r1.<android.view.View: int getPaddingBottom()>();

        $i9 = $i7 - $i8;

        r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int mVisibleHeight> = $i9;

        $i10 = r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int mPreviewOffset>;

        $i11 = virtualinvoke r1.<android.view.View: int getPaddingBottom()>();

        $i12 = $i10 - $i11;

        virtualinvoke r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: void setVisibleOffset(int)>($i12);

        return;
    }

    public int getVisibleWidth()
    {
        com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams r0;
        int $i0;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams;

        $i0 = r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int mVisibleWidth>;

        return $i0;
    }

    public int getVisibleHeight()
    {
        com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams r0;
        int $i0;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams;

        $i0 = r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int mVisibleHeight>;

        return $i0;
    }

    public void setPopupEnabled(boolean, int)
    {
        com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams r0;
        boolean z0;
        int i0;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: boolean mShowPopup> = z0;

        r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int mLingerTimeout> = i0;

        return;
    }

    public boolean isPopupEnabled()
    {
        com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams r0;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams;

        $z0 = r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: boolean mShowPopup>;

        return $z0;
    }

    public int getLingerTimeout()
    {
        com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams r0;
        int $i0;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams;

        $i0 = r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int mLingerTimeout>;

        return $i0;
    }

    public void setAnimationParams(boolean, float, float, int, float, float, int)
    {
        com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams r0;
        boolean z0;
        float f0, f1, f2, f3;
        int i0, i1;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams;

        z0 := @parameter0: boolean;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        i0 := @parameter3: int;

        f2 := @parameter4: float;

        f3 := @parameter5: float;

        i1 := @parameter6: int;

        r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: boolean mHasCustomAnimationParams> = z0;

        r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: float mShowUpStartXScale> = f0;

        r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: float mShowUpStartYScale> = f1;

        r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int mShowUpDuration> = i0;

        r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: float mDismissEndXScale> = f2;

        r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: float mDismissEndYScale> = f3;

        r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int mDismissDuration> = i1;

        return;
    }

    public android.animation.Animator createShowUpAnimator(android.view.View)
    {
        com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams r0;
        android.view.View r1;
        android.animation.ObjectAnimator r2, r3;
        android.animation.AnimatorSet r4, $r12;
        boolean $z0;
        android.content.Context $r5;
        int $i0, $i1;
        android.view.animation.DecelerateInterpolator $r6, $r15;
        float[] $r7, $r9;
        float $f0, $f1;
        android.util.Property $r8, $r10;
        android.animation.AnimatorSet$Builder $r11;
        long $l2;
        android.animation.Animator r16;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams;

        r1 := @parameter0: android.view.View;

        $z0 = r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: boolean mHasCustomAnimationParams>;

        if $z0 == 0 goto label1;

        $r8 = <android.view.View: android.util.Property SCALE_X>;

        $r7 = newarray (float)[2];

        $f0 = r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: float mShowUpStartXScale>;

        $r7[0] = $f0;

        $r7[1] = 1.0F;

        r2 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r1, $r8, $r7);

        $r10 = <android.view.View: android.util.Property SCALE_Y>;

        $r9 = newarray (float)[2];

        $f1 = r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: float mShowUpStartYScale>;

        $r9[0] = $f1;

        $r9[1] = 1.0F;

        r3 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r1, $r10, $r9);

        $r12 = new android.animation.AnimatorSet;

        specialinvoke $r12.<android.animation.AnimatorSet: void <init>()>();

        r4 = $r12;

        $r11 = virtualinvoke r4.<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>(r2);

        virtualinvoke $r11.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder 'with'(android.animation.Animator)>(r3);

        $i1 = r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int mShowUpDuration>;

        $l2 = (long) $i1;

        virtualinvoke r4.<android.animation.AnimatorSet: android.animation.AnimatorSet setDuration(long)>($l2);

        $r15 = <com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: android.view.animation.DecelerateInterpolator DECELERATE_INTERPOLATOR>;

        virtualinvoke r4.<android.animation.AnimatorSet: void setInterpolator(android.animation.TimeInterpolator)>($r15);

        return r4;

     label1:
        $r5 = virtualinvoke r1.<android.view.View: android.content.Context getContext()>();

        $i0 = r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int mShowUpAnimatorResId>;

        r16 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>($r5, $i0);

        virtualinvoke r16.<android.animation.Animator: void setTarget(java.lang.Object)>(r1);

        $r6 = <com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: android.view.animation.DecelerateInterpolator DECELERATE_INTERPOLATOR>;

        virtualinvoke r16.<android.animation.Animator: void setInterpolator(android.animation.TimeInterpolator)>($r6);

        return r16;
    }

    public android.animation.Animator createDismissAnimator(android.view.View)
    {
        com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams r0;
        android.view.View r1;
        android.animation.ObjectAnimator r2, r3;
        android.animation.AnimatorSet r4, $r11;
        int i0, $i1, $i2, $i3;
        boolean $z0;
        android.content.Context $r5;
        android.view.animation.AccelerateInterpolator $r6, $r14;
        float[] $r7, $r9;
        float $f0, $f1;
        android.util.Property $r8, $r10;
        android.animation.AnimatorSet$Builder $r13;
        long $l4;
        android.animation.Animator r16;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams;

        r1 := @parameter0: android.view.View;

        $z0 = r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: boolean mHasCustomAnimationParams>;

        if $z0 == 0 goto label1;

        $r8 = <android.view.View: android.util.Property SCALE_X>;

        $r7 = newarray (float)[1];

        $f0 = r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: float mDismissEndXScale>;

        $r7[0] = $f0;

        r2 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r1, $r8, $r7);

        $r10 = <android.view.View: android.util.Property SCALE_Y>;

        $r9 = newarray (float)[1];

        $f1 = r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: float mDismissEndYScale>;

        $r9[0] = $f1;

        r3 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r1, $r10, $r9);

        $r11 = new android.animation.AnimatorSet;

        specialinvoke $r11.<android.animation.AnimatorSet: void <init>()>();

        r4 = $r11;

        $r13 = virtualinvoke r4.<android.animation.AnimatorSet: android.animation.AnimatorSet$Builder play(android.animation.Animator)>(r2);

        virtualinvoke $r13.<android.animation.AnimatorSet$Builder: android.animation.AnimatorSet$Builder 'with'(android.animation.Animator)>(r3);

        $i2 = r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int mDismissDuration>;

        $i3 = r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int mLingerTimeout>;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i3);

        $l4 = (long) i0;

        virtualinvoke r4.<android.animation.AnimatorSet: android.animation.AnimatorSet setDuration(long)>($l4);

        $r14 = <com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: android.view.animation.AccelerateInterpolator ACCELERATE_INTERPOLATOR>;

        virtualinvoke r4.<android.animation.AnimatorSet: void setInterpolator(android.animation.TimeInterpolator)>($r14);

        return r4;

     label1:
        $r5 = virtualinvoke r1.<android.view.View: android.content.Context getContext()>();

        $i1 = r0.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int mDismissAnimatorResId>;

        r16 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>($r5, $i1);

        virtualinvoke r16.<android.animation.Animator: void setTarget(java.lang.Object)>(r1);

        $r6 = <com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: android.view.animation.AccelerateInterpolator ACCELERATE_INTERPOLATOR>;

        virtualinvoke r16.<android.animation.Animator: void setInterpolator(android.animation.TimeInterpolator)>($r6);

        return r16;
    }

    static void <clinit>()
    {
        android.view.animation.AccelerateInterpolator $r0;
        android.view.animation.DecelerateInterpolator $r1;

        <com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: float KEY_PREVIEW_SHOW_UP_END_SCALE> = 1.0F;

        $r0 = new android.view.animation.AccelerateInterpolator;

        specialinvoke $r0.<android.view.animation.AccelerateInterpolator: void <init>()>();

        <com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: android.view.animation.AccelerateInterpolator ACCELERATE_INTERPOLATOR> = $r0;

        $r1 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r1.<android.view.animation.DecelerateInterpolator: void <init>()>();

        <com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: android.view.animation.DecelerateInterpolator DECELERATE_INTERPOLATOR> = $r1;

        return;
    }
}
