public final class com.android.inputmethod.compat.InputMethodSubtypeCompatUtils extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final java.lang.reflect.Constructor CONSTRUCTOR_INPUT_METHOD_SUBTYPE;
    private static final java.lang.reflect.Method METHOD_isAsciiCapable;

    private void <init>()
    {
        com.android.inputmethod.compat.InputMethodSubtypeCompatUtils r0;

        r0 := @this: com.android.inputmethod.compat.InputMethodSubtypeCompatUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.view.inputmethod.InputMethodSubtype newInputMethodSubtype(int, int, java.lang.String, java.lang.String, java.lang.String, boolean, boolean, int)
    {
        int i0, i1, i2, $i3;
        java.lang.String r0, r1, r2;
        boolean z0, z1;
        java.lang.reflect.Constructor $r3, $r6;
        android.view.inputmethod.InputMethodSubtype $r4, $r13;
        java.lang.Object[] $r5;
        java.lang.Integer $r7, $r8, $r12;
        java.lang.Boolean $r9, $r10;
        java.lang.Object $r11;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        i2 := @parameter7: int;

        $r3 = <com.android.inputmethod.compat.InputMethodSubtypeCompatUtils: java.lang.reflect.Constructor CONSTRUCTOR_INPUT_METHOD_SUBTYPE>;

        if $r3 == null goto label1;

        $i3 = <android.os.Build$VERSION: int SDK_INT>;

        if $i3 >= 17 goto label2;

     label1:
        $r4 = new android.view.inputmethod.InputMethodSubtype;

        specialinvoke $r4.<android.view.inputmethod.InputMethodSubtype: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(i0, i1, r0, r1, r2, z0, z1);

        return $r4;

     label2:
        $r6 = <com.android.inputmethod.compat.InputMethodSubtypeCompatUtils: java.lang.reflect.Constructor CONSTRUCTOR_INPUT_METHOD_SUBTYPE>;

        $r5 = newarray (java.lang.Object)[8];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5[0] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r5[1] = $r8;

        $r5[2] = r0;

        $r5[3] = r1;

        $r5[4] = r2;

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r5[5] = $r9;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        $r5[6] = $r10;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r5[7] = $r12;

        $r11 = staticinvoke <com.android.inputmethod.compat.CompatUtils: java.lang.Object newInstance(java.lang.reflect.Constructor,java.lang.Object[])>($r6, $r5);

        $r13 = (android.view.inputmethod.InputMethodSubtype) $r11;

        return $r13;
    }

    public static boolean isAsciiCapable(android.view.inputmethod.InputMethodSubtype)
    {
        android.view.inputmethod.InputMethodSubtype r0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: android.view.inputmethod.InputMethodSubtype;

        $z0 = staticinvoke <com.android.inputmethod.compat.InputMethodSubtypeCompatUtils: boolean isAsciiCapableWithAPI(android.view.inputmethod.InputMethodSubtype)>(r0);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<android.view.inputmethod.InputMethodSubtype: boolean containsExtraValueKey(java.lang.String)>("AsciiCapable");

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public static boolean isAsciiCapableWithAPI(android.view.inputmethod.InputMethodSubtype)
    {
        android.view.inputmethod.InputMethodSubtype r0;
        java.lang.Boolean $r1, $r5;
        java.lang.Object[] $r2;
        java.lang.reflect.Method $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @parameter0: android.view.inputmethod.InputMethodSubtype;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r3 = <com.android.inputmethod.compat.InputMethodSubtypeCompatUtils: java.lang.reflect.Method METHOD_isAsciiCapable>;

        $r2 = newarray (java.lang.Object)[0];

        $r4 = staticinvoke <com.android.inputmethod.compat.CompatUtils: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>(r0, $r1, $r3, $r2);

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r1, $r12;
        java.lang.Class[] $r2, $r9;
        java.lang.reflect.Constructor $r8, $r11;
        int $i0;
        java.lang.reflect.Method $r10;

        $r0 = class "com/android/inputmethod/compat/InputMethodSubtypeCompatUtils";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.inputmethod.compat.InputMethodSubtypeCompatUtils: java.lang.String TAG> = $r1;

        $r2 = newarray (java.lang.Class)[8];

        $r3 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[0] = $r3;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[1] = $r4;

        $r2[2] = class "java/lang/String";

        $r2[3] = class "java/lang/String";

        $r2[4] = class "java/lang/String";

        $r5 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r2[5] = $r5;

        $r6 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r2[6] = $r6;

        $r7 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2[7] = $r7;

        $r8 = staticinvoke <com.android.inputmethod.compat.CompatUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>(class "android/view/inputmethod/InputMethodSubtype", $r2);

        <com.android.inputmethod.compat.InputMethodSubtypeCompatUtils: java.lang.reflect.Constructor CONSTRUCTOR_INPUT_METHOD_SUBTYPE> = $r8;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 17 goto label1;

        $r11 = <com.android.inputmethod.compat.InputMethodSubtypeCompatUtils: java.lang.reflect.Constructor CONSTRUCTOR_INPUT_METHOD_SUBTYPE>;

        if $r11 != null goto label1;

        $r12 = <com.android.inputmethod.compat.InputMethodSubtypeCompatUtils: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r12, "Warning!!! Constructor is not defined.");

     label1:
        $r9 = newarray (java.lang.Class)[0];

        $r10 = staticinvoke <com.android.inputmethod.compat.CompatUtils: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(class "android/view/inputmethod/InputMethodSubtype", "isAsciiCapable", $r9);

        <com.android.inputmethod.compat.InputMethodSubtypeCompatUtils: java.lang.reflect.Method METHOD_isAsciiCapable> = $r10;

        return;
    }
}
