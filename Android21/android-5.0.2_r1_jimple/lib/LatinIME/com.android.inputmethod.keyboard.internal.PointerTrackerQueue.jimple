public final class com.android.inputmethod.keyboard.internal.PointerTrackerQueue extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private static final int INITIAL_CAPACITY;
    private final java.util.ArrayList mExpandableArrayOfActivePointers;
    private int mArraySize;

    public void <init>()
    {
        com.android.inputmethod.keyboard.internal.PointerTrackerQueue r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.inputmethod.keyboard.internal.PointerTrackerQueue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(10);

        r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: java.util.ArrayList mExpandableArrayOfActivePointers> = $r1;

        r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: int mArraySize> = 0;

        return;
    }

    public int size()
    {
        com.android.inputmethod.keyboard.internal.PointerTrackerQueue r0;
        java.util.ArrayList r1, $r3;
        java.lang.Throwable r2, $r4;
        int $i0;

        r0 := @this: com.android.inputmethod.keyboard.internal.PointerTrackerQueue;

        $r3 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: java.util.ArrayList mExpandableArrayOfActivePointers>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $i0 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: int mArraySize>;

        exitmonitor r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void add(com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element)
    {
        com.android.inputmethod.keyboard.internal.PointerTrackerQueue r0;
        com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element r1;
        java.util.ArrayList r2, r3, $r5;
        int i0, $i1, $i2;
        java.lang.Throwable r4, $r7;

        r0 := @this: com.android.inputmethod.keyboard.internal.PointerTrackerQueue;

        r1 := @parameter0: com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element;

        $r5 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: java.util.ArrayList mExpandableArrayOfActivePointers>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        r3 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: java.util.ArrayList mExpandableArrayOfActivePointers>;

        i0 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: int mArraySize>;

        $i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label2;

        virtualinvoke r3.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        goto label3;

     label2:
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label3:
        $i2 = i0 + 1;

        r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: int mArraySize> = $i2;

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r7 := @caughtexception;

        r4 = $r7;

        exitmonitor r2;

     label6:
        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void remove(com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element)
    {
        com.android.inputmethod.keyboard.internal.PointerTrackerQueue r0;
        com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element r1, r4;
        java.util.ArrayList r2, r3, $r6;
        int i0, i1, i2;
        java.lang.Throwable r5, $r14;
        java.lang.Object $r7;
        java.lang.StringBuilder $r9, $r11, $r13;
        java.lang.String $r10, $r12;

        r0 := @this: com.android.inputmethod.keyboard.internal.PointerTrackerQueue;

        r1 := @parameter0: com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element;

        $r6 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: java.util.ArrayList mExpandableArrayOfActivePointers>;

        r2 = $r6;

        entermonitor $r6;

     label01:
        r3 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: java.util.ArrayList mExpandableArrayOfActivePointers>;

        i0 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: int mArraySize>;

        i1 = 0;

        i2 = 0;

     label02:
        if i2 >= i0 goto label06;

        $r7 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r4 = (com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element) $r7;

        if r4 != r1 goto label03;

        if i1 == i2 goto label05;

        $r10 = <com.android.inputmethod.keyboard.internal.PointerTrackerQueue: java.lang.String TAG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found duplicated element in remove: ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r10, $r12);

        goto label05;

     label03:
        if i1 == i2 goto label04;

        virtualinvoke r3.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i1, r4);

     label04:
        i1 = i1 + 1;

     label05:
        i2 = i2 + 1;

        goto label02;

     label06:
        r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: int mArraySize> = i1;

        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r14 := @caughtexception;

        r5 = $r14;

        exitmonitor r2;

     label09:
        throw r5;

     label10:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element getOldestElement()
    {
        com.android.inputmethod.keyboard.internal.PointerTrackerQueue r0;
        java.util.ArrayList r1, $r3, $r4;
        java.lang.Throwable r2, $r7;
        int $i0;
        java.lang.Object $r5;
        com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element $r6;

        r0 := @this: com.android.inputmethod.keyboard.internal.PointerTrackerQueue;

        $r3 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: java.util.ArrayList mExpandableArrayOfActivePointers>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $i0 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: int mArraySize>;

        if $i0 != 0 goto label2;

        $r6 = null;

        goto label3;

     label2:
        $r4 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: java.util.ArrayList mExpandableArrayOfActivePointers>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r6 = (com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element) $r5;

     label3:
        exitmonitor r1;

     label4:
        return $r6;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void releaseAllPointersOlderThan(com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element, long)
    {
        com.android.inputmethod.keyboard.internal.PointerTrackerQueue r0;
        com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element r1, r4, r5;
        long l0;
        java.util.ArrayList r2, r3, $r7;
        int i1, i2, i3, i5;
        java.lang.Throwable r6, $r18;
        java.lang.Object $r8, $r9, $r16;
        java.lang.StringBuilder $r10, $r12, $r15;
        java.lang.String $r13, $r14;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.internal.PointerTrackerQueue;

        r1 := @parameter0: com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element;

        l0 := @parameter1: long;

        $r7 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: java.util.ArrayList mExpandableArrayOfActivePointers>;

        r2 = $r7;

        entermonitor $r7;

     label01:
        r3 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: java.util.ArrayList mExpandableArrayOfActivePointers>;

        i1 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: int mArraySize>;

        i3 = 0;

        i2 = 0;

     label02:
        if i3 >= i1 goto label07;

        $r16 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r4 = (com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element) $r16;

        if r4 != r1 goto label03;

        goto label07;

     label03:
        $z0 = interfaceinvoke r4.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element: boolean isModifier()>();

        if $z0 != 0 goto label04;

        interfaceinvoke r4.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element: void onPhantomUpEvent(long)>(l0);

        goto label06;

     label04:
        if i2 == i3 goto label05;

        virtualinvoke r3.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i2, r4);

     label05:
        i2 = i2 + 1;

     label06:
        i3 = i3 + 1;

        goto label02;

     label07:
        i5 = 0;

     label08:
        if i3 >= i1 goto label11;

        $r8 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r5 = (com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element) $r8;

        if r5 != r1 goto label09;

        i5 = i5 + 1;

        if i5 <= 1 goto label09;

        $r13 = <com.android.inputmethod.keyboard.internal.PointerTrackerQueue: java.lang.String TAG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found duplicated element in releaseAllPointersOlderThan: ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r13, $r14);

     label09:
        if i2 == i3 goto label10;

        $r9 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        virtualinvoke r3.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i2, $r9);

     label10:
        i2 = i2 + 1;

        i3 = i3 + 1;

        goto label08;

     label11:
        r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: int mArraySize> = i2;

        exitmonitor r2;

     label12:
        goto label15;

     label13:
        $r18 := @caughtexception;

        r6 = $r18;

        exitmonitor r2;

     label14:
        throw r6;

     label15:
        return;

        catch java.lang.Throwable from label01 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public void releaseAllPointers(long)
    {
        com.android.inputmethod.keyboard.internal.PointerTrackerQueue r0;
        long l0;

        r0 := @this: com.android.inputmethod.keyboard.internal.PointerTrackerQueue;

        l0 := @parameter0: long;

        virtualinvoke r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: void releaseAllPointersExcept(com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element,long)>(null, l0);

        return;
    }

    public void releaseAllPointersExcept(com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element, long)
    {
        com.android.inputmethod.keyboard.internal.PointerTrackerQueue r0;
        com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element r1, r4;
        long l0;
        java.util.ArrayList r2, r3, $r6;
        int i1, i2, i3, i4;
        java.lang.Throwable r5, $r14;
        java.lang.Object $r7;
        java.lang.String $r9, $r13;
        java.lang.StringBuilder $r10, $r11, $r12;

        r0 := @this: com.android.inputmethod.keyboard.internal.PointerTrackerQueue;

        r1 := @parameter0: com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element;

        l0 := @parameter1: long;

        $r6 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: java.util.ArrayList mExpandableArrayOfActivePointers>;

        r2 = $r6;

        entermonitor $r6;

     label01:
        r3 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: java.util.ArrayList mExpandableArrayOfActivePointers>;

        i1 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: int mArraySize>;

        i2 = 0;

        i3 = 0;

        i4 = 0;

     label02:
        if i4 >= i1 goto label07;

        $r7 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r4 = (com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element) $r7;

        if r4 != r1 goto label03;

        i3 = i3 + 1;

        if i3 <= 1 goto label04;

        $r9 = <com.android.inputmethod.keyboard.internal.PointerTrackerQueue: java.lang.String TAG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found duplicated element in releaseAllPointersExcept: ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r9, $r13);

        goto label04;

     label03:
        interfaceinvoke r4.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element: void onPhantomUpEvent(long)>(l0);

        goto label06;

     label04:
        if i2 == i4 goto label05;

        virtualinvoke r3.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i2, r4);

     label05:
        i2 = i2 + 1;

     label06:
        i4 = i4 + 1;

        goto label02;

     label07:
        r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: int mArraySize> = i2;

        exitmonitor r2;

     label08:
        goto label11;

     label09:
        $r14 := @caughtexception;

        r5 = $r14;

        exitmonitor r2;

     label10:
        throw r5;

     label11:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public boolean hasModifierKeyOlderThan(com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element)
    {
        com.android.inputmethod.keyboard.internal.PointerTrackerQueue r0;
        com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element r1, r4;
        java.util.ArrayList r2, r3, $r6;
        int i0, i1;
        java.lang.Throwable r5, $r8;
        java.lang.Object $r7;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.internal.PointerTrackerQueue;

        r1 := @parameter0: com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element;

        $r6 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: java.util.ArrayList mExpandableArrayOfActivePointers>;

        r2 = $r6;

        entermonitor $r6;

     label01:
        r3 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: java.util.ArrayList mExpandableArrayOfActivePointers>;

        i0 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: int mArraySize>;

        i1 = 0;

     label02:
        if i1 >= i0 goto label07;

        $r7 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r4 = (com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element) $r7;

        if r4 != r1 goto label04;

        exitmonitor r2;

     label03:
        return 0;

     label04:
        $z0 = interfaceinvoke r4.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element: boolean isModifier()>();

        if $z0 == 0 goto label06;

        exitmonitor r2;

     label05:
        return 1;

     label06:
        i1 = i1 + 1;

        goto label02;

     label07:
        exitmonitor r2;

     label08:
        return 0;

     label09:
        $r8 := @caughtexception;

        r5 = $r8;

        exitmonitor r2;

     label10:
        throw r5;

        catch java.lang.Throwable from label01 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public boolean isAnyInDraggingFinger()
    {
        com.android.inputmethod.keyboard.internal.PointerTrackerQueue r0;
        java.util.ArrayList r1, r2, $r5;
        int i0, i1;
        com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element r3;
        java.lang.Throwable r4, $r7;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.internal.PointerTrackerQueue;

        $r5 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: java.util.ArrayList mExpandableArrayOfActivePointers>;

        r1 = $r5;

        entermonitor $r5;

     label1:
        r2 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: java.util.ArrayList mExpandableArrayOfActivePointers>;

        i0 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: int mArraySize>;

        i1 = 0;

     label2:
        if i1 >= i0 goto label5;

        $r6 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element) $r6;

        $z0 = interfaceinvoke r3.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element: boolean isInDraggingFinger()>();

        if $z0 == 0 goto label4;

        exitmonitor r1;

     label3:
        return 1;

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        exitmonitor r1;

     label6:
        return 0;

     label7:
        $r7 := @caughtexception;

        r4 = $r7;

        exitmonitor r1;

     label8:
        throw r4;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void cancelAllPointerTrackers()
    {
        com.android.inputmethod.keyboard.internal.PointerTrackerQueue r0;
        java.util.ArrayList r1, r2, $r5;
        int i0, i1;
        com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element r3;
        java.lang.Throwable r4, $r7;
        java.lang.Object $r6;

        r0 := @this: com.android.inputmethod.keyboard.internal.PointerTrackerQueue;

        $r5 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: java.util.ArrayList mExpandableArrayOfActivePointers>;

        r1 = $r5;

        entermonitor $r5;

     label1:
        r2 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: java.util.ArrayList mExpandableArrayOfActivePointers>;

        i0 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: int mArraySize>;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r6 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element) $r6;

        interfaceinvoke r3.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element: void cancelTrackingForAction()>();

        i1 = i1 + 1;

        goto label2;

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r7 := @caughtexception;

        r4 = $r7;

        exitmonitor r1;

     label6:
        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.lang.String toString()
    {
        com.android.inputmethod.keyboard.internal.PointerTrackerQueue r0;
        java.util.ArrayList r1, r3, $r6;
        java.lang.StringBuilder r2, $r7, $r8, $r9, $r11, $r12;
        int i0, i1, $i2;
        com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element r4;
        java.lang.Throwable r5, $r18;
        java.lang.String $r10, $r13, $r15;
        java.lang.Object $r14;

        r0 := @this: com.android.inputmethod.keyboard.internal.PointerTrackerQueue;

        $r6 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: java.util.ArrayList mExpandableArrayOfActivePointers>;

        r1 = $r6;

        entermonitor $r6;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        r2 = $r7;

        r3 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: java.util.ArrayList mExpandableArrayOfActivePointers>;

        i0 = r0.<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: int mArraySize>;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r14 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r4 = (com.android.inputmethod.keyboard.internal.PointerTrackerQueue$Element) $r14;

        $i2 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        if $i2 <= 0 goto label3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label3:
        $r15 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        i1 = i1 + 1;

        goto label2;

     label4:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r10 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        exitmonitor r1;

     label5:
        return $r13;

     label6:
        $r18 := @caughtexception;

        r5 = $r18;

        exitmonitor r1;

     label7:
        throw r5;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.inputmethod.keyboard.internal.PointerTrackerQueue: int INITIAL_CAPACITY> = 10;

        <com.android.inputmethod.keyboard.internal.PointerTrackerQueue: boolean DEBUG> = 0;

        $r0 = class "com/android/inputmethod/keyboard/internal/PointerTrackerQueue";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.inputmethod.keyboard.internal.PointerTrackerQueue: java.lang.String TAG> = $r1;

        return;
    }
}
