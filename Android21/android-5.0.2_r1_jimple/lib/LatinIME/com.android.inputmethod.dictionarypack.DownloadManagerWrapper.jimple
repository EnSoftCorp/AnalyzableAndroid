public class com.android.inputmethod.dictionarypack.DownloadManagerWrapper extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final android.app.DownloadManager mDownloadManager;

    public void <init>(android.content.Context)
    {
        com.android.inputmethod.dictionarypack.DownloadManagerWrapper r0;
        android.content.Context r1;
        java.lang.Object $r2;
        android.app.DownloadManager $r3;

        r0 := @this: com.android.inputmethod.dictionarypack.DownloadManagerWrapper;

        r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("download");

        $r3 = (android.app.DownloadManager) $r2;

        specialinvoke r0.<com.android.inputmethod.dictionarypack.DownloadManagerWrapper: void <init>(android.app.DownloadManager)>($r3);

        return;
    }

    private void <init>(android.app.DownloadManager)
    {
        com.android.inputmethod.dictionarypack.DownloadManagerWrapper r0;
        android.app.DownloadManager r1;

        r0 := @this: com.android.inputmethod.dictionarypack.DownloadManagerWrapper;

        r1 := @parameter0: android.app.DownloadManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.inputmethod.dictionarypack.DownloadManagerWrapper: android.app.DownloadManager mDownloadManager> = r1;

        return;
    }

    public transient void remove(long[])
    {
        com.android.inputmethod.dictionarypack.DownloadManagerWrapper r0;
        long[] r1;
        android.app.DownloadManager $r3, $r4;
        java.lang.IllegalArgumentException $r5;
        android.database.sqlite.SQLiteException $r6, r13;
        java.lang.StringBuilder $r7, $r9, $r10, $r11;
        java.lang.String $r8, $r12;

        r0 := @this: com.android.inputmethod.dictionarypack.DownloadManagerWrapper;

        r1 := @parameter0: long[];

     label1:
        $r3 = r0.<com.android.inputmethod.dictionarypack.DownloadManagerWrapper: android.app.DownloadManager mDownloadManager>;

        if null == $r3 goto label2;

        $r4 = r0.<com.android.inputmethod.dictionarypack.DownloadManagerWrapper: android.app.DownloadManager mDownloadManager>;

        virtualinvoke $r4.<android.app.DownloadManager: int remove(long[])>(r1);

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        goto label5;

     label4:
        $r6 := @caughtexception;

        r13 = $r6;

        $r8 = <com.android.inputmethod.dictionarypack.DownloadManagerWrapper: java.lang.String TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t remove files with ID ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from download manager");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r8, $r12, r13);

     label5:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch android.database.sqlite.SQLiteException from label1 to label2 with label4;
    }

    public android.os.ParcelFileDescriptor openDownloadedFile(long) throws java.io.FileNotFoundException
    {
        com.android.inputmethod.dictionarypack.DownloadManagerWrapper r0;
        long l0;
        android.app.DownloadManager $r2, $r4;
        java.io.FileNotFoundException $r3;
        android.os.ParcelFileDescriptor $r5;
        java.lang.IllegalArgumentException $r6;
        android.database.sqlite.SQLiteException $r7, r13;
        java.lang.StringBuilder $r8, $r10, $r11;
        java.lang.String $r9, $r12;

        r0 := @this: com.android.inputmethod.dictionarypack.DownloadManagerWrapper;

        l0 := @parameter0: long;

     label1:
        $r2 = r0.<com.android.inputmethod.dictionarypack.DownloadManagerWrapper: android.app.DownloadManager mDownloadManager>;

        if null == $r2 goto label3;

        $r4 = r0.<com.android.inputmethod.dictionarypack.DownloadManagerWrapper: android.app.DownloadManager mDownloadManager>;

        $r5 = virtualinvoke $r4.<android.app.DownloadManager: android.os.ParcelFileDescriptor openDownloadedFile(long)>(l0);

     label2:
        return $r5;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        goto label6;

     label5:
        $r7 := @caughtexception;

        r13 = $r7;

        $r9 = <com.android.inputmethod.dictionarypack.DownloadManagerWrapper: java.lang.String TAG>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t open downloaded file with ID ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, $r12, r13);

     label6:
        $r3 = new java.io.FileNotFoundException;

        specialinvoke $r3.<java.io.FileNotFoundException: void <init>()>();

        throw $r3;

        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
        catch android.database.sqlite.SQLiteException from label1 to label2 with label5;
    }

    public android.database.Cursor query(android.app.DownloadManager$Query)
    {
        com.android.inputmethod.dictionarypack.DownloadManagerWrapper r0;
        android.app.DownloadManager$Query r1;
        android.app.DownloadManager $r3, $r4;
        android.database.Cursor $r5;
        java.lang.IllegalArgumentException $r6;
        android.database.sqlite.SQLiteException $r7, r9;
        java.lang.String $r8;

        r0 := @this: com.android.inputmethod.dictionarypack.DownloadManagerWrapper;

        r1 := @parameter0: android.app.DownloadManager$Query;

     label1:
        $r3 = r0.<com.android.inputmethod.dictionarypack.DownloadManagerWrapper: android.app.DownloadManager mDownloadManager>;

        if null == $r3 goto label3;

        $r4 = r0.<com.android.inputmethod.dictionarypack.DownloadManagerWrapper: android.app.DownloadManager mDownloadManager>;

        $r5 = virtualinvoke $r4.<android.app.DownloadManager: android.database.Cursor query(android.app.DownloadManager$Query)>(r1);

     label2:
        return $r5;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        goto label6;

     label5:
        $r7 := @caughtexception;

        r9 = $r7;

        $r8 = <com.android.inputmethod.dictionarypack.DownloadManagerWrapper: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r8, "Can\'t query the download manager", r9);

     label6:
        return null;

        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
        catch android.database.sqlite.SQLiteException from label1 to label2 with label5;
    }

    public long enqueue(android.app.DownloadManager$Request)
    {
        com.android.inputmethod.dictionarypack.DownloadManagerWrapper r0;
        android.app.DownloadManager$Request r1;
        android.app.DownloadManager $r3, $r4;
        long $l0;
        android.database.sqlite.SQLiteException $r5, r8;
        java.lang.String $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: com.android.inputmethod.dictionarypack.DownloadManagerWrapper;

        r1 := @parameter0: android.app.DownloadManager$Request;

     label1:
        $r3 = r0.<com.android.inputmethod.dictionarypack.DownloadManagerWrapper: android.app.DownloadManager mDownloadManager>;

        if null == $r3 goto label3;

        $r4 = r0.<com.android.inputmethod.dictionarypack.DownloadManagerWrapper: android.app.DownloadManager mDownloadManager>;

        $l0 = virtualinvoke $r4.<android.app.DownloadManager: long enqueue(android.app.DownloadManager$Request)>(r1);

     label2:
        return $l0;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        goto label6;

     label5:
        $r5 := @caughtexception;

        r8 = $r5;

        $r6 = <com.android.inputmethod.dictionarypack.DownloadManagerWrapper: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, "Can\'t enqueue a request with the download manager", r8);

     label6:
        return 0L;

        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
        catch android.database.sqlite.SQLiteException from label1 to label2 with label5;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "com/android/inputmethod/dictionarypack/DownloadManagerWrapper";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.inputmethod.dictionarypack.DownloadManagerWrapper: java.lang.String TAG> = $r1;

        return;
    }
}
