public final class com.android.inputmethod.latin.SubtypeSwitcher extends java.lang.Object
{
    private static boolean DBG;
    private static final java.lang.String TAG;
    private static final com.android.inputmethod.latin.SubtypeSwitcher sInstance;
    private com.android.inputmethod.latin.RichInputMethodManager mRichImm;
    private android.content.res.Resources mResources;
    private final com.android.inputmethod.keyboard.internal.LanguageOnSpacebarHelper mLanguageOnSpacebarHelper;
    private android.view.inputmethod.InputMethodInfo mShortcutInputMethodInfo;
    private android.view.inputmethod.InputMethodSubtype mShortcutSubtype;
    private android.view.inputmethod.InputMethodSubtype mNoLanguageSubtype;
    private android.view.inputmethod.InputMethodSubtype mEmojiSubtype;
    private boolean mIsNetworkConnected;
    private static final java.lang.String KEYBOARD_MODE;
    private static final int SUBTYPE_ID_OF_DUMMY_NO_LANGUAGE_SUBTYPE;
    private static final java.lang.String EXTRA_VALUE_OF_DUMMY_NO_LANGUAGE_SUBTYPE;
    private static final android.view.inputmethod.InputMethodSubtype DUMMY_NO_LANGUAGE_SUBTYPE;
    private static final int SUBTYPE_ID_OF_DUMMY_EMOJI_SUBTYPE;
    private static final java.lang.String EXTRA_VALUE_OF_DUMMY_EMOJI_SUBTYPE;
    private static final android.view.inputmethod.InputMethodSubtype DUMMY_EMOJI_SUBTYPE;
    private static android.view.inputmethod.InputMethodSubtype sForcedSubtypeForTesting;

    public static com.android.inputmethod.latin.SubtypeSwitcher getInstance()
    {
        com.android.inputmethod.latin.SubtypeSwitcher $r0;

        $r0 = <com.android.inputmethod.latin.SubtypeSwitcher: com.android.inputmethod.latin.SubtypeSwitcher sInstance>;

        return $r0;
    }

    public static void init(android.content.Context)
    {
        android.content.Context r0;
        com.android.inputmethod.latin.SubtypeSwitcher $r1;

        r0 := @parameter0: android.content.Context;

        staticinvoke <com.android.inputmethod.latin.utils.SubtypeLocaleUtils: void init(android.content.Context)>(r0);

        staticinvoke <com.android.inputmethod.latin.RichInputMethodManager: void init(android.content.Context)>(r0);

        $r1 = <com.android.inputmethod.latin.SubtypeSwitcher: com.android.inputmethod.latin.SubtypeSwitcher sInstance>;

        specialinvoke $r1.<com.android.inputmethod.latin.SubtypeSwitcher: void initialize(android.content.Context)>(r0);

        return;
    }

    private void <init>()
    {
        com.android.inputmethod.latin.SubtypeSwitcher r0;
        com.android.inputmethod.keyboard.internal.LanguageOnSpacebarHelper $r1;

        r0 := @this: com.android.inputmethod.latin.SubtypeSwitcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.android.inputmethod.keyboard.internal.LanguageOnSpacebarHelper;

        specialinvoke $r1.<com.android.inputmethod.keyboard.internal.LanguageOnSpacebarHelper: void <init>()>();

        r0.<com.android.inputmethod.latin.SubtypeSwitcher: com.android.inputmethod.keyboard.internal.LanguageOnSpacebarHelper mLanguageOnSpacebarHelper> = $r1;

        return;
    }

    private void initialize(android.content.Context)
    {
        com.android.inputmethod.latin.SubtypeSwitcher r0;
        android.content.Context r1;
        android.net.ConnectivityManager r2;
        android.net.NetworkInfo r3;
        android.content.res.Resources $r4, $r5;
        com.android.inputmethod.latin.RichInputMethodManager $r6;
        java.lang.Object $r7;
        android.view.inputmethod.InputMethodSubtype $r8;
        boolean $z0, $z1;

        r0 := @this: com.android.inputmethod.latin.SubtypeSwitcher;

        r1 := @parameter0: android.content.Context;

        $r4 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.content.res.Resources mResources>;

        if $r4 == null goto label1;

        return;

     label1:
        $r5 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.content.res.Resources mResources> = $r5;

        $r6 = staticinvoke <com.android.inputmethod.latin.RichInputMethodManager: com.android.inputmethod.latin.RichInputMethodManager getInstance()>();

        r0.<com.android.inputmethod.latin.SubtypeSwitcher: com.android.inputmethod.latin.RichInputMethodManager mRichImm> = $r6;

        $r7 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r2 = (android.net.ConnectivityManager) $r7;

        r3 = virtualinvoke r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if r3 == null goto label2;

        $z0 = virtualinvoke r3.<android.net.NetworkInfo: boolean isConnected()>();

        if $z0 == 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        r0.<com.android.inputmethod.latin.SubtypeSwitcher: boolean mIsNetworkConnected> = $z1;

        $r8 = virtualinvoke r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype getCurrentSubtype()>();

        virtualinvoke r0.<com.android.inputmethod.latin.SubtypeSwitcher: void onSubtypeChanged(android.view.inputmethod.InputMethodSubtype)>($r8);

        virtualinvoke r0.<com.android.inputmethod.latin.SubtypeSwitcher: void updateParametersOnStartInputView()>();

        return;
    }

    public void updateParametersOnStartInputView()
    {
        com.android.inputmethod.latin.SubtypeSwitcher r0;
        java.util.List r1;
        com.android.inputmethod.latin.RichInputMethodManager $r2;
        com.android.inputmethod.keyboard.internal.LanguageOnSpacebarHelper $r3;

        r0 := @this: com.android.inputmethod.latin.SubtypeSwitcher;

        $r2 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: com.android.inputmethod.latin.RichInputMethodManager mRichImm>;

        r1 = virtualinvoke $r2.<com.android.inputmethod.latin.RichInputMethodManager: java.util.List getMyEnabledInputMethodSubtypeList(boolean)>(1);

        $r3 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: com.android.inputmethod.keyboard.internal.LanguageOnSpacebarHelper mLanguageOnSpacebarHelper>;

        virtualinvoke $r3.<com.android.inputmethod.keyboard.internal.LanguageOnSpacebarHelper: void updateEnabledSubtypes(java.util.List)>(r1);

        specialinvoke r0.<com.android.inputmethod.latin.SubtypeSwitcher: void updateShortcutIME()>();

        return;
    }

    private void updateShortcutIME()
    {
        com.android.inputmethod.latin.SubtypeSwitcher r0;
        java.util.Map r1;
        java.util.Iterator r2;
        android.view.inputmethod.InputMethodInfo r3, $r11, $r12, $r33, $r34;
        java.util.List r4;
        boolean $z0, $z1, $z2;
        com.android.inputmethod.latin.RichInputMethodManager $r5;
        android.view.inputmethod.InputMethodManager $r6;
        java.util.Set $r7;
        java.lang.StringBuilder $r8, $r10, $r13, $r16, $r18, $r19, $r22, $r23, $r25, $r31, $r36, $r37, $r40, $r41, $r44, $r45, $r48, $r50;
        java.lang.String $r9, $r14, $r20, $r24, $r26, $r29, $r35, $r39, $r42, $r46, $r49, $r51;
        android.view.inputmethod.InputMethodSubtype $r15, $r17, $r21, $r30, $r38, $r43, $r47;
        java.lang.Object $r27, $r28, $r32;
        int $i1;

        r0 := @this: com.android.inputmethod.latin.SubtypeSwitcher;

        $z0 = <com.android.inputmethod.latin.SubtypeSwitcher: boolean DBG>;

        if $z0 == 0 goto label05;

        $r35 = <com.android.inputmethod.latin.SubtypeSwitcher: java.lang.String TAG>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Update shortcut IME from : ");

        $r33 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodInfo mShortcutInputMethodInfo>;

        if $r33 != null goto label01;

        $r39 = "<null>";

        goto label02;

     label01:
        $r34 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodInfo mShortcutInputMethodInfo>;

        $r39 = virtualinvoke $r34.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

     label02:
        $r40 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r37 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r38 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype mShortcutSubtype>;

        if $r38 != null goto label03;

        $r51 = "<null>";

        goto label04;

     label03:
        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r43 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype mShortcutSubtype>;

        $r42 = virtualinvoke $r43.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        $r41 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r48 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r47 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype mShortcutSubtype>;

        $r46 = virtualinvoke $r47.<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>();

        $r45 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r51 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        $r50 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r35, $r49);

     label05:
        $r5 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: com.android.inputmethod.latin.RichInputMethodManager mRichImm>;

        $r6 = virtualinvoke $r5.<com.android.inputmethod.latin.RichInputMethodManager: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        r1 = virtualinvoke $r6.<android.view.inputmethod.InputMethodManager: java.util.Map getShortcutInputMethodsAndSubtypes()>();

        r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodInfo mShortcutInputMethodInfo> = null;

        r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype mShortcutSubtype> = null;

        $r7 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r27 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.view.inputmethod.InputMethodInfo) $r27;

        $r28 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (java.util.List) $r28;

        r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodInfo mShortcutInputMethodInfo> = r3;

        $i1 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i1 <= 0 goto label06;

        $r32 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);

        $r30 = (android.view.inputmethod.InputMethodSubtype) $r32;

        goto label07;

     label06:
        $r30 = null;

     label07:
        r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype mShortcutSubtype> = $r30;

        goto label08;

     label08:
        $z2 = <com.android.inputmethod.latin.SubtypeSwitcher: boolean DBG>;

        if $z2 == 0 goto label13;

        $r9 = <com.android.inputmethod.latin.SubtypeSwitcher: java.lang.String TAG>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Update shortcut IME to : ");

        $r12 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodInfo mShortcutInputMethodInfo>;

        if $r12 != null goto label09;

        $r14 = "<null>";

        goto label10;

     label09:
        $r11 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodInfo mShortcutInputMethodInfo>;

        $r14 = virtualinvoke $r11.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

     label10:
        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r15 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype mShortcutSubtype>;

        if $r15 != null goto label11;

        $r26 = "<null>";

        goto label12;

     label11:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype mShortcutSubtype>;

        $r20 = virtualinvoke $r17.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r21 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype mShortcutSubtype>;

        $r24 = virtualinvoke $r21.<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        $r25 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r9, $r29);

     label13:
        return;
    }

    public void onSubtypeChanged(android.view.inputmethod.InputMethodSubtype)
    {
        com.android.inputmethod.latin.SubtypeSwitcher r0;
        android.view.inputmethod.InputMethodSubtype r1;
        java.util.Locale r2, r3;
        boolean z0, z1, z2, $z3, $z4;
        android.content.res.Resources $r4;
        android.content.res.Configuration $r5;
        java.lang.String $r6, $r7, $r12, $r14, $r15;
        com.android.inputmethod.latin.RichInputMethodManager $r8;
        com.android.inputmethod.keyboard.internal.LanguageOnSpacebarHelper $r9;
        java.lang.StringBuilder $r10, $r11, $r13;

        r0 := @this: com.android.inputmethod.latin.SubtypeSwitcher;

        r1 := @parameter0: android.view.inputmethod.InputMethodSubtype;

        $z3 = <com.android.inputmethod.latin.SubtypeSwitcher: boolean DBG>;

        if $z3 == 0 goto label1;

        $r12 = <com.android.inputmethod.latin.SubtypeSwitcher: java.lang.String TAG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onSubtypeChanged: ");

        $r14 = staticinvoke <com.android.inputmethod.latin.utils.SubtypeLocaleUtils: java.lang.String getSubtypeNameForLogging(android.view.inputmethod.InputMethodSubtype)>(r1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r12, $r15);

     label1:
        r2 = staticinvoke <com.android.inputmethod.latin.utils.SubtypeLocaleUtils: java.util.Locale getSubtypeLocale(android.view.inputmethod.InputMethodSubtype)>(r1);

        $r4 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.content.res.Resources mResources>;

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        r3 = $r5.<android.content.res.Configuration: java.util.Locale locale>;

        z0 = virtualinvoke r3.<java.util.Locale: boolean equals(java.lang.Object)>(r2);

        $r6 = virtualinvoke r3.<java.util.Locale: java.lang.String getLanguage()>();

        $r7 = virtualinvoke r2.<java.util.Locale: java.lang.String getLanguage()>();

        z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        $r8 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: com.android.inputmethod.latin.RichInputMethodManager mRichImm>;

        z2 = virtualinvoke $r8.<com.android.inputmethod.latin.RichInputMethodManager: boolean checkIfSubtypeBelongsToThisImeAndImplicitlyEnabled(android.view.inputmethod.InputMethodSubtype)>(r1);

        $r9 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: com.android.inputmethod.keyboard.internal.LanguageOnSpacebarHelper mLanguageOnSpacebarHelper>;

        if z0 != 0 goto label2;

        if z1 == 0 goto label3;

        if z2 == 0 goto label3;

     label2:
        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        virtualinvoke $r9.<com.android.inputmethod.keyboard.internal.LanguageOnSpacebarHelper: void updateIsSystemLanguageSameAsInputLanguage(boolean)>($z4);

        specialinvoke r0.<com.android.inputmethod.latin.SubtypeSwitcher: void updateShortcutIME()>();

        return;
    }

    public void switchToShortcutIME(android.inputmethodservice.InputMethodService)
    {
        com.android.inputmethod.latin.SubtypeSwitcher r0;
        android.inputmethodservice.InputMethodService r1;
        java.lang.String r2;
        android.view.inputmethod.InputMethodInfo $r3, $r4;
        android.view.inputmethod.InputMethodSubtype $r5;

        r0 := @this: com.android.inputmethod.latin.SubtypeSwitcher;

        r1 := @parameter0: android.inputmethodservice.InputMethodService;

        $r3 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodInfo mShortcutInputMethodInfo>;

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodInfo mShortcutInputMethodInfo>;

        r2 = virtualinvoke $r4.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        $r5 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype mShortcutSubtype>;

        specialinvoke r0.<com.android.inputmethod.latin.SubtypeSwitcher: void switchToTargetIME(java.lang.String,android.view.inputmethod.InputMethodSubtype,android.inputmethodservice.InputMethodService)>(r2, $r5, r1);

        return;
    }

    private void switchToTargetIME(java.lang.String, android.view.inputmethod.InputMethodSubtype, android.inputmethodservice.InputMethodService)
    {
        com.android.inputmethod.latin.SubtypeSwitcher r0;
        java.lang.String r1;
        android.view.inputmethod.InputMethodSubtype r2;
        android.inputmethodservice.InputMethodService r3;
        android.os.IBinder r4;
        android.view.inputmethod.InputMethodManager r5;
        android.app.Dialog $r6;
        android.view.Window $r7;
        android.view.WindowManager$LayoutParams $r8;
        com.android.inputmethod.latin.RichInputMethodManager $r9;
        com.android.inputmethod.latin.SubtypeSwitcher$1 $r10;
        java.lang.Void[] $r11;
        java.util.concurrent.Executor $r12;

        r0 := @this: com.android.inputmethod.latin.SubtypeSwitcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.view.inputmethod.InputMethodSubtype;

        r3 := @parameter2: android.inputmethodservice.InputMethodService;

        $r6 = virtualinvoke r3.<android.inputmethodservice.InputMethodService: android.app.Dialog getWindow()>();

        $r7 = virtualinvoke $r6.<android.app.Dialog: android.view.Window getWindow()>();

        $r8 = virtualinvoke $r7.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        r4 = $r8.<android.view.WindowManager$LayoutParams: android.os.IBinder token>;

        if r4 != null goto label1;

        return;

     label1:
        $r9 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: com.android.inputmethod.latin.RichInputMethodManager mRichImm>;

        r5 = virtualinvoke $r9.<com.android.inputmethod.latin.RichInputMethodManager: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        $r10 = new com.android.inputmethod.latin.SubtypeSwitcher$1;

        specialinvoke $r10.<com.android.inputmethod.latin.SubtypeSwitcher$1: void <init>(com.android.inputmethod.latin.SubtypeSwitcher,android.view.inputmethod.InputMethodManager,android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)>(r0, r5, r4, r1, r2);

        $r12 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r11 = newarray (java.lang.Void)[0];

        virtualinvoke $r10.<com.android.inputmethod.latin.SubtypeSwitcher$1: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r12, $r11);

        return;
    }

    public boolean isShortcutImeEnabled()
    {
        com.android.inputmethod.latin.SubtypeSwitcher r0;
        android.view.inputmethod.InputMethodInfo $r1, $r4;
        android.view.inputmethod.InputMethodSubtype $r2, $r3;
        com.android.inputmethod.latin.RichInputMethodManager $r5;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.SubtypeSwitcher;

        specialinvoke r0.<com.android.inputmethod.latin.SubtypeSwitcher: void updateShortcutIME()>();

        $r1 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodInfo mShortcutInputMethodInfo>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype mShortcutSubtype>;

        if $r2 != null goto label2;

        return 1;

     label2:
        $r5 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: com.android.inputmethod.latin.RichInputMethodManager mRichImm>;

        $r4 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodInfo mShortcutInputMethodInfo>;

        $r3 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype mShortcutSubtype>;

        $z0 = virtualinvoke $r5.<com.android.inputmethod.latin.RichInputMethodManager: boolean checkIfSubtypeBelongsToImeAndEnabled(android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>($r4, $r3);

        return $z0;
    }

    public boolean isShortcutImeReady()
    {
        com.android.inputmethod.latin.SubtypeSwitcher r0;
        android.view.inputmethod.InputMethodInfo $r1;
        android.view.inputmethod.InputMethodSubtype $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: com.android.inputmethod.latin.SubtypeSwitcher;

        specialinvoke r0.<com.android.inputmethod.latin.SubtypeSwitcher: void updateShortcutIME()>();

        $r1 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodInfo mShortcutInputMethodInfo>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype mShortcutSubtype>;

        if $r2 != null goto label2;

        return 1;

     label2:
        $r3 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype mShortcutSubtype>;

        $z0 = virtualinvoke $r3.<android.view.inputmethod.InputMethodSubtype: boolean containsExtraValueKey(java.lang.String)>("requireNetworkConnectivity");

        if $z0 == 0 goto label3;

        $z1 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: boolean mIsNetworkConnected>;

        return $z1;

     label3:
        return 1;
    }

    public void onNetworkStateChanged(android.content.Intent)
    {
        com.android.inputmethod.latin.SubtypeSwitcher r0;
        android.content.Intent r1;
        boolean z0, $z1;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r2;

        r0 := @this: com.android.inputmethod.latin.SubtypeSwitcher;

        r1 := @parameter0: android.content.Intent;

        z0 = virtualinvoke r1.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("noConnectivity", 0);

        if z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<com.android.inputmethod.latin.SubtypeSwitcher: boolean mIsNetworkConnected> = $z1;

        $r2 = staticinvoke <com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.KeyboardSwitcher getInstance()>();

        virtualinvoke $r2.<com.android.inputmethod.keyboard.KeyboardSwitcher: void onNetworkStateChanged()>();

        return;
    }

    public int getLanguageOnSpacebarFormatType(android.view.inputmethod.InputMethodSubtype)
    {
        com.android.inputmethod.latin.SubtypeSwitcher r0;
        android.view.inputmethod.InputMethodSubtype r1;
        com.android.inputmethod.keyboard.internal.LanguageOnSpacebarHelper $r2;
        int $i0;

        r0 := @this: com.android.inputmethod.latin.SubtypeSwitcher;

        r1 := @parameter0: android.view.inputmethod.InputMethodSubtype;

        $r2 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: com.android.inputmethod.keyboard.internal.LanguageOnSpacebarHelper mLanguageOnSpacebarHelper>;

        $i0 = virtualinvoke $r2.<com.android.inputmethod.keyboard.internal.LanguageOnSpacebarHelper: int getLanguageOnSpacebarFormatType(android.view.inputmethod.InputMethodSubtype)>(r1);

        return $i0;
    }

    public boolean isSystemLocaleSameAsLocaleOfAllEnabledSubtypesOfEnabledImes()
    {
        com.android.inputmethod.latin.SubtypeSwitcher r0;
        java.util.Locale r1, $r14;
        java.util.HashSet r2, $r10;
        android.view.inputmethod.InputMethodManager r3;
        java.util.List r4, r7;
        java.util.Iterator r5, r16;
        android.view.inputmethod.InputMethodInfo r6;
        android.content.res.Resources $r8;
        android.content.res.Configuration $r9;
        com.android.inputmethod.latin.RichInputMethodManager $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z6;
        java.lang.Object $r12, $r15;
        java.lang.String $r13;
        android.view.inputmethod.InputMethodSubtype r17;

        r0 := @this: com.android.inputmethod.latin.SubtypeSwitcher;

        $r8 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.content.res.Resources mResources>;

        $r9 = virtualinvoke $r8.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        r1 = $r9.<android.content.res.Configuration: java.util.Locale locale>;

        $r10 = new java.util.HashSet;

        specialinvoke $r10.<java.util.HashSet: void <init>()>();

        r2 = $r10;

        $r11 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: com.android.inputmethod.latin.RichInputMethodManager mRichImm>;

        r3 = virtualinvoke $r11.<com.android.inputmethod.latin.RichInputMethodManager: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        r4 = virtualinvoke r3.<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodList()>();

        r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r15 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.view.inputmethod.InputMethodInfo) $r15;

        r7 = virtualinvoke r3.<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodSubtypeList(android.view.inputmethod.InputMethodInfo,boolean)>(r6, 1);

        $z6 = interfaceinvoke r7.<java.util.List: boolean isEmpty()>();

        if $z6 == 0 goto label2;

        return 0;

     label2:
        interfaceinvoke r2.<java.util.Set: boolean addAll(java.util.Collection)>(r7);

        goto label1;

     label3:
        r16 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r12 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r17 = (android.view.inputmethod.InputMethodSubtype) $r12;

        $z2 = virtualinvoke r17.<android.view.inputmethod.InputMethodSubtype: boolean isAuxiliary()>();

        if $z2 != 0 goto label5;

        $r13 = virtualinvoke r17.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        $z3 = virtualinvoke $r13.<java.lang.String: boolean isEmpty()>();

        if $z3 != 0 goto label5;

        $r14 = staticinvoke <com.android.inputmethod.latin.utils.SubtypeLocaleUtils: java.util.Locale getSubtypeLocale(android.view.inputmethod.InputMethodSubtype)>(r17);

        $z4 = virtualinvoke r1.<java.util.Locale: boolean equals(java.lang.Object)>($r14);

        if $z4 != 0 goto label5;

        return 0;

     label5:
        goto label4;

     label6:
        return 1;
    }

    void forceSubtype(android.view.inputmethod.InputMethodSubtype)
    {
        com.android.inputmethod.latin.SubtypeSwitcher r0;
        android.view.inputmethod.InputMethodSubtype r1;

        r0 := @this: com.android.inputmethod.latin.SubtypeSwitcher;

        r1 := @parameter0: android.view.inputmethod.InputMethodSubtype;

        <com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype sForcedSubtypeForTesting> = r1;

        return;
    }

    public java.util.Locale getCurrentSubtypeLocale()
    {
        com.android.inputmethod.latin.SubtypeSwitcher r0;
        android.view.inputmethod.InputMethodSubtype $r1, $r2, $r4;
        java.util.Locale $r3, $r6;
        java.lang.String $r5;

        r0 := @this: com.android.inputmethod.latin.SubtypeSwitcher;

        $r1 = <com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype sForcedSubtypeForTesting>;

        if null == $r1 goto label1;

        $r4 = <com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype sForcedSubtypeForTesting>;

        $r5 = virtualinvoke $r4.<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>();

        $r6 = staticinvoke <com.android.inputmethod.latin.utils.LocaleUtils: java.util.Locale constructLocaleFromString(java.lang.String)>($r5);

        return $r6;

     label1:
        $r2 = virtualinvoke r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype getCurrentSubtype()>();

        $r3 = staticinvoke <com.android.inputmethod.latin.utils.SubtypeLocaleUtils: java.util.Locale getSubtypeLocale(android.view.inputmethod.InputMethodSubtype)>($r2);

        return $r3;
    }

    public android.view.inputmethod.InputMethodSubtype getCurrentSubtype()
    {
        com.android.inputmethod.latin.SubtypeSwitcher r0;
        android.view.inputmethod.InputMethodSubtype $r1, $r3, $r4, $r5;
        com.android.inputmethod.latin.RichInputMethodManager $r2;

        r0 := @this: com.android.inputmethod.latin.SubtypeSwitcher;

        $r1 = <com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype sForcedSubtypeForTesting>;

        if null == $r1 goto label1;

        $r5 = <com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype sForcedSubtypeForTesting>;

        return $r5;

     label1:
        $r2 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: com.android.inputmethod.latin.RichInputMethodManager mRichImm>;

        $r3 = virtualinvoke r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype getNoLanguageSubtype()>();

        $r4 = virtualinvoke $r2.<com.android.inputmethod.latin.RichInputMethodManager: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>($r3);

        return $r4;
    }

    public android.view.inputmethod.InputMethodSubtype getNoLanguageSubtype()
    {
        com.android.inputmethod.latin.SubtypeSwitcher r0;
        android.view.inputmethod.InputMethodSubtype $r1, $r2, $r7, $r10, $r11, $r13;
        java.lang.String $r3, $r5, $r9;
        java.lang.StringBuilder $r4, $r6, $r8;
        com.android.inputmethod.latin.RichInputMethodManager $r12;

        r0 := @this: com.android.inputmethod.latin.SubtypeSwitcher;

        $r1 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype mNoLanguageSubtype>;

        if $r1 != null goto label1;

        $r12 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: com.android.inputmethod.latin.RichInputMethodManager mRichImm>;

        $r13 = virtualinvoke $r12.<com.android.inputmethod.latin.RichInputMethodManager: android.view.inputmethod.InputMethodSubtype findSubtypeByLocaleAndKeyboardLayoutSet(java.lang.String,java.lang.String)>("zz", "qwerty");

        r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype mNoLanguageSubtype> = $r13;

     label1:
        $r2 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype mNoLanguageSubtype>;

        if $r2 == null goto label2;

        $r11 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype mNoLanguageSubtype>;

        return $r11;

     label2:
        $r3 = <com.android.inputmethod.latin.SubtypeSwitcher: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r3, "Can\'t find any language with QWERTY subtype");

        $r5 = <com.android.inputmethod.latin.SubtypeSwitcher: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No input method subtype found; returning dummy subtype: ");

        $r7 = <com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype DUMMY_NO_LANGUAGE_SUBTYPE>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r5, $r9);

        $r10 = <com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype DUMMY_NO_LANGUAGE_SUBTYPE>;

        return $r10;
    }

    public android.view.inputmethod.InputMethodSubtype getEmojiSubtype()
    {
        com.android.inputmethod.latin.SubtypeSwitcher r0;
        android.view.inputmethod.InputMethodSubtype $r1, $r2, $r7, $r10, $r11, $r13;
        java.lang.String $r3, $r5, $r9;
        java.lang.StringBuilder $r4, $r6, $r8;
        com.android.inputmethod.latin.RichInputMethodManager $r12;

        r0 := @this: com.android.inputmethod.latin.SubtypeSwitcher;

        $r1 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype mEmojiSubtype>;

        if $r1 != null goto label1;

        $r12 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: com.android.inputmethod.latin.RichInputMethodManager mRichImm>;

        $r13 = virtualinvoke $r12.<com.android.inputmethod.latin.RichInputMethodManager: android.view.inputmethod.InputMethodSubtype findSubtypeByLocaleAndKeyboardLayoutSet(java.lang.String,java.lang.String)>("zz", "emoji");

        r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype mEmojiSubtype> = $r13;

     label1:
        $r2 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype mEmojiSubtype>;

        if $r2 == null goto label2;

        $r11 = r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype mEmojiSubtype>;

        return $r11;

     label2:
        $r3 = <com.android.inputmethod.latin.SubtypeSwitcher: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r3, "Can\'t find emoji subtype");

        $r5 = <com.android.inputmethod.latin.SubtypeSwitcher: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No input method subtype found; returning dummy subtype: ");

        $r7 = <com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype DUMMY_EMOJI_SUBTYPE>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r5, $r9);

        $r10 = <com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype DUMMY_EMOJI_SUBTYPE>;

        return $r10;
    }

    public java.lang.String getCombiningRulesExtraValueOfCurrentSubtype()
    {
        com.android.inputmethod.latin.SubtypeSwitcher r0;
        android.view.inputmethod.InputMethodSubtype $r1;
        java.lang.String $r2;

        r0 := @this: com.android.inputmethod.latin.SubtypeSwitcher;

        $r1 = virtualinvoke r0.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype getCurrentSubtype()>();

        $r2 = staticinvoke <com.android.inputmethod.latin.utils.SubtypeLocaleUtils: java.lang.String getCombiningRulesExtraValue(android.view.inputmethod.InputMethodSubtype)>($r1);

        return $r2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        com.android.inputmethod.latin.SubtypeSwitcher $r2;
        android.view.inputmethod.InputMethodSubtype $r3, $r4;

        <com.android.inputmethod.latin.SubtypeSwitcher: java.lang.String EXTRA_VALUE_OF_DUMMY_EMOJI_SUBTYPE> = "KeyboardLayoutSet=emoji,EmojiCapable";

        <com.android.inputmethod.latin.SubtypeSwitcher: int SUBTYPE_ID_OF_DUMMY_EMOJI_SUBTYPE> = -678744368;

        <com.android.inputmethod.latin.SubtypeSwitcher: java.lang.String EXTRA_VALUE_OF_DUMMY_NO_LANGUAGE_SUBTYPE> = "KeyboardLayoutSet=qwerty,AsciiCapable,EnabledWhenDefaultIsNotAsciiCapable,EmojiCapable";

        <com.android.inputmethod.latin.SubtypeSwitcher: int SUBTYPE_ID_OF_DUMMY_NO_LANGUAGE_SUBTYPE> = -572473389;

        <com.android.inputmethod.latin.SubtypeSwitcher: java.lang.String KEYBOARD_MODE> = "keyboard";

        <com.android.inputmethod.latin.SubtypeSwitcher: boolean DBG> = 0;

        $r0 = class "com/android/inputmethod/latin/SubtypeSwitcher";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.inputmethod.latin.SubtypeSwitcher: java.lang.String TAG> = $r1;

        $r2 = new com.android.inputmethod.latin.SubtypeSwitcher;

        specialinvoke $r2.<com.android.inputmethod.latin.SubtypeSwitcher: void <init>()>();

        <com.android.inputmethod.latin.SubtypeSwitcher: com.android.inputmethod.latin.SubtypeSwitcher sInstance> = $r2;

        $r3 = staticinvoke <com.android.inputmethod.compat.InputMethodSubtypeCompatUtils: android.view.inputmethod.InputMethodSubtype newInputMethodSubtype(int,int,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,int)>(2131362988, 2130837629, "zz", "keyboard", "KeyboardLayoutSet=qwerty,AsciiCapable,EnabledWhenDefaultIsNotAsciiCapable,EmojiCapable", 0, 0, -572473389);

        <com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype DUMMY_NO_LANGUAGE_SUBTYPE> = $r3;

        $r4 = staticinvoke <com.android.inputmethod.compat.InputMethodSubtypeCompatUtils: android.view.inputmethod.InputMethodSubtype newInputMethodSubtype(int,int,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,int)>(2131362994, 2130837629, "zz", "keyboard", "KeyboardLayoutSet=emoji,EmojiCapable", 0, 0, -678744368);

        <com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype DUMMY_EMOJI_SUBTYPE> = $r4;

        <com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype sForcedSubtypeForTesting> = null;

        return;
    }
}
