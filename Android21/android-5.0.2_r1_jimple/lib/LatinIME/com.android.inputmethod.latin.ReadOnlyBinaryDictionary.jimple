public final class com.android.inputmethod.latin.ReadOnlyBinaryDictionary extends com.android.inputmethod.latin.Dictionary
{
    private final java.util.concurrent.locks.ReentrantReadWriteLock mLock;
    private final com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary;

    public void <init>(java.lang.String, long, long, boolean, java.util.Locale, java.lang.String)
    {
        com.android.inputmethod.latin.ReadOnlyBinaryDictionary r0;
        java.lang.String r1, r3;
        long l0, l1;
        boolean z0;
        java.util.Locale r2;
        java.util.concurrent.locks.ReentrantReadWriteLock $r4;
        com.android.inputmethod.latin.BinaryDictionary $r5;

        r0 := @this: com.android.inputmethod.latin.ReadOnlyBinaryDictionary;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        r2 := @parameter4: java.util.Locale;

        r3 := @parameter5: java.lang.String;

        specialinvoke r0.<com.android.inputmethod.latin.Dictionary: void <init>(java.lang.String)>(r3);

        $r4 = new java.util.concurrent.locks.ReentrantReadWriteLock;

        specialinvoke $r4.<java.util.concurrent.locks.ReentrantReadWriteLock: void <init>()>();

        r0.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock> = $r4;

        $r5 = new com.android.inputmethod.latin.BinaryDictionary;

        specialinvoke $r5.<com.android.inputmethod.latin.BinaryDictionary: void <init>(java.lang.String,long,long,boolean,java.util.Locale,java.lang.String,boolean)>(r1, l0, l1, z0, r2, r3, 0);

        r0.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary> = $r5;

        return;
    }

    public boolean isValidDictionary()
    {
        com.android.inputmethod.latin.ReadOnlyBinaryDictionary r0;
        com.android.inputmethod.latin.BinaryDictionary $r1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.ReadOnlyBinaryDictionary;

        $r1 = r0.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        $z0 = virtualinvoke $r1.<com.android.inputmethod.latin.BinaryDictionary: boolean isValidDictionary()>();

        return $z0;
    }

    public java.util.ArrayList getSuggestions(com.android.inputmethod.latin.WordComposer, com.android.inputmethod.latin.PrevWordsInfo, com.android.inputmethod.keyboard.ProximityInfo, com.android.inputmethod.latin.settings.SettingsValuesForSuggestion, int, float[])
    {
        com.android.inputmethod.latin.ReadOnlyBinaryDictionary r0;
        com.android.inputmethod.latin.WordComposer r1;
        com.android.inputmethod.latin.PrevWordsInfo r2;
        com.android.inputmethod.keyboard.ProximityInfo r3;
        com.android.inputmethod.latin.settings.SettingsValuesForSuggestion r4;
        int i0;
        float[] r5;
        java.util.ArrayList r6;
        java.lang.Throwable r7, $r14;
        java.util.concurrent.locks.ReentrantReadWriteLock $r8, $r11, $r13;
        java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock $r9, $r12, $r15;
        boolean $z0;
        com.android.inputmethod.latin.BinaryDictionary $r10;

        r0 := @this: com.android.inputmethod.latin.ReadOnlyBinaryDictionary;

        r1 := @parameter0: com.android.inputmethod.latin.WordComposer;

        r2 := @parameter1: com.android.inputmethod.latin.PrevWordsInfo;

        r3 := @parameter2: com.android.inputmethod.keyboard.ProximityInfo;

        r4 := @parameter3: com.android.inputmethod.latin.settings.SettingsValuesForSuggestion;

        i0 := @parameter4: int;

        r5 := @parameter5: float[];

        $r8 = r0.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r9 = virtualinvoke $r8.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        $z0 = virtualinvoke $r9.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: boolean tryLock()>();

        if $z0 == 0 goto label5;

     label1:
        $r10 = r0.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        r6 = virtualinvoke $r10.<com.android.inputmethod.latin.BinaryDictionary: java.util.ArrayList getSuggestions(com.android.inputmethod.latin.WordComposer,com.android.inputmethod.latin.PrevWordsInfo,com.android.inputmethod.keyboard.ProximityInfo,com.android.inputmethod.latin.settings.SettingsValuesForSuggestion,int,float[])>(r1, r2, r3, r4, i0, r5);

     label2:
        $r11 = r0.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r12 = virtualinvoke $r11.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        virtualinvoke $r12.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();

        return r6;

     label3:
        $r14 := @caughtexception;

        r7 = $r14;

     label4:
        $r13 = r0.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r15 = virtualinvoke $r13.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        virtualinvoke $r15.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();

        throw r7;

     label5:
        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isInDictionary(java.lang.String)
    {
        com.android.inputmethod.latin.ReadOnlyBinaryDictionary r0;
        java.lang.String r1;
        boolean z0, $z1;
        java.lang.Throwable r2, $r8;
        java.util.concurrent.locks.ReentrantReadWriteLock $r3, $r6, $r9;
        java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock $r4, $r7, $r10;
        com.android.inputmethod.latin.BinaryDictionary $r5;

        r0 := @this: com.android.inputmethod.latin.ReadOnlyBinaryDictionary;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        $z1 = virtualinvoke $r4.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: boolean tryLock()>();

        if $z1 == 0 goto label5;

     label1:
        $r5 = r0.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        z0 = virtualinvoke $r5.<com.android.inputmethod.latin.BinaryDictionary: boolean isInDictionary(java.lang.String)>(r1);

     label2:
        $r6 = r0.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r7 = virtualinvoke $r6.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        virtualinvoke $r7.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();

        return z0;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

     label4:
        $r9 = r0.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r10 = virtualinvoke $r9.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        virtualinvoke $r10.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();

        throw r2;

     label5:
        return 0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean shouldAutoCommit(com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo)
    {
        com.android.inputmethod.latin.ReadOnlyBinaryDictionary r0;
        com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo r1;
        boolean z0, $z1;
        java.lang.Throwable r2, $r8;
        java.util.concurrent.locks.ReentrantReadWriteLock $r3, $r6, $r9;
        java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock $r4, $r7, $r10;
        com.android.inputmethod.latin.BinaryDictionary $r5;

        r0 := @this: com.android.inputmethod.latin.ReadOnlyBinaryDictionary;

        r1 := @parameter0: com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo;

        $r3 = r0.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        $z1 = virtualinvoke $r4.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: boolean tryLock()>();

        if $z1 == 0 goto label5;

     label1:
        $r5 = r0.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        z0 = virtualinvoke $r5.<com.android.inputmethod.latin.BinaryDictionary: boolean shouldAutoCommit(com.android.inputmethod.latin.SuggestedWords$SuggestedWordInfo)>(r1);

     label2:
        $r6 = r0.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r7 = virtualinvoke $r6.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        virtualinvoke $r7.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();

        return z0;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

     label4:
        $r9 = r0.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r10 = virtualinvoke $r9.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        virtualinvoke $r10.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();

        throw r2;

     label5:
        return 0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getFrequency(java.lang.String)
    {
        com.android.inputmethod.latin.ReadOnlyBinaryDictionary r0;
        java.lang.String r1;
        int i0;
        java.lang.Throwable r2, $r8;
        java.util.concurrent.locks.ReentrantReadWriteLock $r3, $r6, $r9;
        java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock $r4, $r7, $r10;
        boolean $z0;
        com.android.inputmethod.latin.BinaryDictionary $r5;

        r0 := @this: com.android.inputmethod.latin.ReadOnlyBinaryDictionary;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        $z0 = virtualinvoke $r4.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: boolean tryLock()>();

        if $z0 == 0 goto label5;

     label1:
        $r5 = r0.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        i0 = virtualinvoke $r5.<com.android.inputmethod.latin.BinaryDictionary: int getFrequency(java.lang.String)>(r1);

     label2:
        $r6 = r0.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r7 = virtualinvoke $r6.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        virtualinvoke $r7.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();

        return i0;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

     label4:
        $r9 = r0.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r10 = virtualinvoke $r9.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        virtualinvoke $r10.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();

        throw r2;

     label5:
        return -1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getMaxFrequencyOfExactMatches(java.lang.String)
    {
        com.android.inputmethod.latin.ReadOnlyBinaryDictionary r0;
        java.lang.String r1;
        int i0;
        java.lang.Throwable r2, $r8;
        java.util.concurrent.locks.ReentrantReadWriteLock $r3, $r6, $r9;
        java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock $r4, $r7, $r10;
        boolean $z0;
        com.android.inputmethod.latin.BinaryDictionary $r5;

        r0 := @this: com.android.inputmethod.latin.ReadOnlyBinaryDictionary;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        $z0 = virtualinvoke $r4.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: boolean tryLock()>();

        if $z0 == 0 goto label5;

     label1:
        $r5 = r0.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        i0 = virtualinvoke $r5.<com.android.inputmethod.latin.BinaryDictionary: int getMaxFrequencyOfExactMatches(java.lang.String)>(r1);

     label2:
        $r6 = r0.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r7 = virtualinvoke $r6.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        virtualinvoke $r7.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();

        return i0;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

     label4:
        $r9 = r0.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r10 = virtualinvoke $r9.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        virtualinvoke $r10.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();

        throw r2;

     label5:
        return -1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void close()
    {
        com.android.inputmethod.latin.ReadOnlyBinaryDictionary r0;
        java.lang.Throwable r1, $r7;
        java.util.concurrent.locks.ReentrantReadWriteLock $r2, $r5, $r8;
        java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock $r3, $r6, $r9;
        com.android.inputmethod.latin.BinaryDictionary $r4;

        r0 := @this: com.android.inputmethod.latin.ReadOnlyBinaryDictionary;

        $r2 = r0.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void lock()>();

     label1:
        $r4 = r0.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        virtualinvoke $r4.<com.android.inputmethod.latin.BinaryDictionary: void close()>();

     label2:
        $r5 = r0.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r6 = virtualinvoke $r5.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();

        virtualinvoke $r6.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r1 = $r7;

     label4:
        $r8 = r0.<com.android.inputmethod.latin.ReadOnlyBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r9 = virtualinvoke $r8.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();

        virtualinvoke $r9.<java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock: void unlock()>();

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
