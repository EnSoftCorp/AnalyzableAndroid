public class com.android.inputmethod.keyboard.internal.BatchInputArbiter extends java.lang.Object
{
    private static long sGestureFirstDownTime;
    private static final com.android.inputmethod.latin.InputPointers sAggregatedPointers;
    private static int sLastRecognitionPointSize;
    private static long sLastRecognitionTime;
    private final com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints mRecognitionPoints;

    public void <init>(int, com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionParams)
    {
        com.android.inputmethod.keyboard.internal.BatchInputArbiter r0;
        int i0;
        com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionParams r1;
        com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints $r2;

        r0 := @this: com.android.inputmethod.keyboard.internal.BatchInputArbiter;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionParams;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints;

        specialinvoke $r2.<com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints: void <init>(int,com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionParams)>(i0, r1);

        r0.<com.android.inputmethod.keyboard.internal.BatchInputArbiter: com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints mRecognitionPoints> = $r2;

        return;
    }

    public void setKeyboardGeometry(int, int)
    {
        com.android.inputmethod.keyboard.internal.BatchInputArbiter r0;
        int i0, i1;
        com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints $r1;

        r0 := @this: com.android.inputmethod.keyboard.internal.BatchInputArbiter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.inputmethod.keyboard.internal.BatchInputArbiter: com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints mRecognitionPoints>;

        virtualinvoke $r1.<com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints: void setKeyboardGeometry(int,int)>(i0, i1);

        return;
    }

    public int getElapsedTimeSinceFirstDown(long)
    {
        com.android.inputmethod.keyboard.internal.BatchInputArbiter r0;
        long l0, $l1, $l2;
        int $i3;

        r0 := @this: com.android.inputmethod.keyboard.internal.BatchInputArbiter;

        l0 := @parameter0: long;

        $l1 = <com.android.inputmethod.keyboard.internal.BatchInputArbiter: long sGestureFirstDownTime>;

        $l2 = l0 - $l1;

        $i3 = (int) $l2;

        return $i3;
    }

    public void addDownEventPoint(int, int, long, long, int)
    {
        com.android.inputmethod.keyboard.internal.BatchInputArbiter r0;
        int i0, i1, i4, i5, i6;
        long l2, l3, $l7;
        com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints $r1;

        r0 := @this: com.android.inputmethod.keyboard.internal.BatchInputArbiter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        i4 := @parameter4: int;

        if i4 != 1 goto label1;

        <com.android.inputmethod.keyboard.internal.BatchInputArbiter: long sGestureFirstDownTime> = l2;

     label1:
        i5 = virtualinvoke r0.<com.android.inputmethod.keyboard.internal.BatchInputArbiter: int getElapsedTimeSinceFirstDown(long)>(l2);

        $l7 = l2 - l3;

        i6 = (int) $l7;

        $r1 = r0.<com.android.inputmethod.keyboard.internal.BatchInputArbiter: com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints mRecognitionPoints>;

        virtualinvoke $r1.<com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints: void addDownEventPoint(int,int,int,int)>(i0, i1, i5, i6);

        return;
    }

    public boolean addMoveEventPoint(int, int, long, boolean, com.android.inputmethod.keyboard.internal.BatchInputArbiter$BatchInputArbiterListener)
    {
        com.android.inputmethod.keyboard.internal.BatchInputArbiter r0;
        int i0, i1, i3, $i4, $i5;
        long l2;
        boolean z0, z1;
        com.android.inputmethod.keyboard.internal.BatchInputArbiter$BatchInputArbiterListener r1;
        com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints $r2, $r3, $r4;

        r0 := @this: com.android.inputmethod.keyboard.internal.BatchInputArbiter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        z0 := @parameter3: boolean;

        r1 := @parameter4: com.android.inputmethod.keyboard.internal.BatchInputArbiter$BatchInputArbiterListener;

        $r2 = r0.<com.android.inputmethod.keyboard.internal.BatchInputArbiter: com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints mRecognitionPoints>;

        i3 = virtualinvoke $r2.<com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints: int getLength()>();

        $r3 = r0.<com.android.inputmethod.keyboard.internal.BatchInputArbiter: com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints mRecognitionPoints>;

        $i4 = virtualinvoke r0.<com.android.inputmethod.keyboard.internal.BatchInputArbiter: int getElapsedTimeSinceFirstDown(long)>(l2);

        z1 = virtualinvoke $r3.<com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints: boolean addEventPoint(int,int,int,boolean)>(i0, i1, $i4, z0);

        $r4 = r0.<com.android.inputmethod.keyboard.internal.BatchInputArbiter: com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints mRecognitionPoints>;

        $i5 = virtualinvoke $r4.<com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints: int getLength()>();

        if $i5 <= i3 goto label1;

        interfaceinvoke r1.<com.android.inputmethod.keyboard.internal.BatchInputArbiter$BatchInputArbiterListener: void onStartUpdateBatchInputTimer()>();

     label1:
        return z1;
    }

    public boolean mayStartBatchInput(com.android.inputmethod.keyboard.internal.BatchInputArbiter$BatchInputArbiterListener)
    {
        com.android.inputmethod.keyboard.internal.BatchInputArbiter r0;
        com.android.inputmethod.keyboard.internal.BatchInputArbiter$BatchInputArbiterListener r1;
        com.android.inputmethod.latin.InputPointers r2, $r5, $r6;
        java.lang.Throwable r3, $r7;
        com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints $r4;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.internal.BatchInputArbiter;

        r1 := @parameter0: com.android.inputmethod.keyboard.internal.BatchInputArbiter$BatchInputArbiterListener;

        $r4 = r0.<com.android.inputmethod.keyboard.internal.BatchInputArbiter: com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints mRecognitionPoints>;

        $z0 = virtualinvoke $r4.<com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints: boolean isStartOfAGesture()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r5 = <com.android.inputmethod.keyboard.internal.BatchInputArbiter: com.android.inputmethod.latin.InputPointers sAggregatedPointers>;

        r2 = $r5;

        entermonitor $r5;

     label2:
        $r6 = <com.android.inputmethod.keyboard.internal.BatchInputArbiter: com.android.inputmethod.latin.InputPointers sAggregatedPointers>;

        virtualinvoke $r6.<com.android.inputmethod.latin.InputPointers: void reset()>();

        <com.android.inputmethod.keyboard.internal.BatchInputArbiter: int sLastRecognitionPointSize> = 0;

        <com.android.inputmethod.keyboard.internal.BatchInputArbiter: long sLastRecognitionTime> = 0L;

        interfaceinvoke r1.<com.android.inputmethod.keyboard.internal.BatchInputArbiter$BatchInputArbiterListener: void onStartBatchInput()>();

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return 1;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void updateBatchInputByTimer(long, com.android.inputmethod.keyboard.internal.BatchInputArbiter$BatchInputArbiterListener)
    {
        com.android.inputmethod.keyboard.internal.BatchInputArbiter r0;
        long l0;
        com.android.inputmethod.keyboard.internal.BatchInputArbiter$BatchInputArbiterListener r1;
        com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints $r2;
        int $i1;

        r0 := @this: com.android.inputmethod.keyboard.internal.BatchInputArbiter;

        l0 := @parameter0: long;

        r1 := @parameter1: com.android.inputmethod.keyboard.internal.BatchInputArbiter$BatchInputArbiterListener;

        $r2 = r0.<com.android.inputmethod.keyboard.internal.BatchInputArbiter: com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints mRecognitionPoints>;

        $i1 = virtualinvoke r0.<com.android.inputmethod.keyboard.internal.BatchInputArbiter: int getElapsedTimeSinceFirstDown(long)>(l0);

        virtualinvoke $r2.<com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints: void duplicateLastPointWith(int)>($i1);

        virtualinvoke r0.<com.android.inputmethod.keyboard.internal.BatchInputArbiter: void updateBatchInput(long,com.android.inputmethod.keyboard.internal.BatchInputArbiter$BatchInputArbiterListener)>(l0, r1);

        return;
    }

    public void updateBatchInput(long, com.android.inputmethod.keyboard.internal.BatchInputArbiter$BatchInputArbiterListener)
    {
        com.android.inputmethod.keyboard.internal.BatchInputArbiter r0;
        long l0, $l3;
        com.android.inputmethod.keyboard.internal.BatchInputArbiter$BatchInputArbiterListener r1;
        com.android.inputmethod.latin.InputPointers r2, $r4, $r5, $r7, $r9, $r10;
        int i1, $i2, $i4;
        java.lang.Throwable r3, $r11;
        com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints $r6, $r8;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.internal.BatchInputArbiter;

        l0 := @parameter0: long;

        r1 := @parameter1: com.android.inputmethod.keyboard.internal.BatchInputArbiter$BatchInputArbiterListener;

        $r4 = <com.android.inputmethod.keyboard.internal.BatchInputArbiter: com.android.inputmethod.latin.InputPointers sAggregatedPointers>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r6 = r0.<com.android.inputmethod.keyboard.internal.BatchInputArbiter: com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints mRecognitionPoints>;

        $r5 = <com.android.inputmethod.keyboard.internal.BatchInputArbiter: com.android.inputmethod.latin.InputPointers sAggregatedPointers>;

        virtualinvoke $r6.<com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints: void appendIncrementalBatchPoints(com.android.inputmethod.latin.InputPointers)>($r5);

        $r7 = <com.android.inputmethod.keyboard.internal.BatchInputArbiter: com.android.inputmethod.latin.InputPointers sAggregatedPointers>;

        i1 = virtualinvoke $r7.<com.android.inputmethod.latin.InputPointers: int getPointerSize()>();

        $i2 = <com.android.inputmethod.keyboard.internal.BatchInputArbiter: int sLastRecognitionPointSize>;

        if i1 <= $i2 goto label2;

        $r8 = r0.<com.android.inputmethod.keyboard.internal.BatchInputArbiter: com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints mRecognitionPoints>;

        $l3 = <com.android.inputmethod.keyboard.internal.BatchInputArbiter: long sLastRecognitionTime>;

        $z0 = virtualinvoke $r8.<com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints: boolean hasRecognitionTimePast(long,long)>(l0, $l3);

        if $z0 == 0 goto label2;

        $r9 = <com.android.inputmethod.keyboard.internal.BatchInputArbiter: com.android.inputmethod.latin.InputPointers sAggregatedPointers>;

        interfaceinvoke r1.<com.android.inputmethod.keyboard.internal.BatchInputArbiter$BatchInputArbiterListener: void onUpdateBatchInput(com.android.inputmethod.latin.InputPointers,long)>($r9, l0);

        interfaceinvoke r1.<com.android.inputmethod.keyboard.internal.BatchInputArbiter$BatchInputArbiterListener: void onStartUpdateBatchInputTimer()>();

        $r10 = <com.android.inputmethod.keyboard.internal.BatchInputArbiter: com.android.inputmethod.latin.InputPointers sAggregatedPointers>;

        $i4 = virtualinvoke $r10.<com.android.inputmethod.latin.InputPointers: int getPointerSize()>();

        <com.android.inputmethod.keyboard.internal.BatchInputArbiter: int sLastRecognitionPointSize> = $i4;

        <com.android.inputmethod.keyboard.internal.BatchInputArbiter: long sLastRecognitionTime> = l0;

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean mayEndBatchInput(long, int, com.android.inputmethod.keyboard.internal.BatchInputArbiter$BatchInputArbiterListener)
    {
        com.android.inputmethod.keyboard.internal.BatchInputArbiter r0;
        long l0;
        int i1;
        com.android.inputmethod.keyboard.internal.BatchInputArbiter$BatchInputArbiterListener r1;
        com.android.inputmethod.latin.InputPointers r2, $r4, $r5, $r7;
        java.lang.Throwable r3, $r8;
        com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints $r6;

        r0 := @this: com.android.inputmethod.keyboard.internal.BatchInputArbiter;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.inputmethod.keyboard.internal.BatchInputArbiter$BatchInputArbiterListener;

        $r4 = <com.android.inputmethod.keyboard.internal.BatchInputArbiter: com.android.inputmethod.latin.InputPointers sAggregatedPointers>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r6 = r0.<com.android.inputmethod.keyboard.internal.BatchInputArbiter: com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints mRecognitionPoints>;

        $r5 = <com.android.inputmethod.keyboard.internal.BatchInputArbiter: com.android.inputmethod.latin.InputPointers sAggregatedPointers>;

        virtualinvoke $r6.<com.android.inputmethod.keyboard.internal.GestureStrokeRecognitionPoints: void appendAllBatchPoints(com.android.inputmethod.latin.InputPointers)>($r5);

        if i1 != 1 goto label3;

        $r7 = <com.android.inputmethod.keyboard.internal.BatchInputArbiter: com.android.inputmethod.latin.InputPointers sAggregatedPointers>;

        interfaceinvoke r1.<com.android.inputmethod.keyboard.internal.BatchInputArbiter$BatchInputArbiterListener: void onEndBatchInput(com.android.inputmethod.latin.InputPointers,long)>($r7, l0);

        exitmonitor r2;

     label2:
        return 1;

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return 0;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    static void <clinit>()
    {
        com.android.inputmethod.latin.InputPointers $r0;

        $r0 = new com.android.inputmethod.latin.InputPointers;

        specialinvoke $r0.<com.android.inputmethod.latin.InputPointers: void <init>(int)>(128);

        <com.android.inputmethod.keyboard.internal.BatchInputArbiter: com.android.inputmethod.latin.InputPointers sAggregatedPointers> = $r0;

        <com.android.inputmethod.keyboard.internal.BatchInputArbiter: int sLastRecognitionPointSize> = 0;

        <com.android.inputmethod.keyboard.internal.BatchInputArbiter: long sLastRecognitionTime> = 0L;

        return;
    }
}
