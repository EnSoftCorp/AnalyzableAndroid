public final class com.android.inputmethod.keyboard.KeyboardId extends java.lang.Object
{
    public static final int MODE_TEXT;
    public static final int MODE_URL;
    public static final int MODE_EMAIL;
    public static final int MODE_IM;
    public static final int MODE_PHONE;
    public static final int MODE_NUMBER;
    public static final int MODE_DATE;
    public static final int MODE_TIME;
    public static final int MODE_DATETIME;
    public static final int ELEMENT_ALPHABET;
    public static final int ELEMENT_ALPHABET_MANUAL_SHIFTED;
    public static final int ELEMENT_ALPHABET_AUTOMATIC_SHIFTED;
    public static final int ELEMENT_ALPHABET_SHIFT_LOCKED;
    public static final int ELEMENT_ALPHABET_SHIFT_LOCK_SHIFTED;
    public static final int ELEMENT_SYMBOLS;
    public static final int ELEMENT_SYMBOLS_SHIFTED;
    public static final int ELEMENT_PHONE;
    public static final int ELEMENT_PHONE_SYMBOLS;
    public static final int ELEMENT_NUMBER;
    public static final int ELEMENT_EMOJI_RECENTS;
    public static final int ELEMENT_EMOJI_CATEGORY1;
    public static final int ELEMENT_EMOJI_CATEGORY2;
    public static final int ELEMENT_EMOJI_CATEGORY3;
    public static final int ELEMENT_EMOJI_CATEGORY4;
    public static final int ELEMENT_EMOJI_CATEGORY5;
    public static final int ELEMENT_EMOJI_CATEGORY6;
    public final android.view.inputmethod.InputMethodSubtype mSubtype;
    public final java.util.Locale mLocale;
    public final int mWidth;
    public final int mHeight;
    public final int mMode;
    public final int mElementId;
    public final android.view.inputmethod.EditorInfo mEditorInfo;
    public final boolean mClobberSettingsKey;
    public final boolean mLanguageSwitchKeyEnabled;
    public final java.lang.String mCustomActionLabel;
    public final boolean mHasShortcutKey;
    private final int mHashCode;

    public void <init>(int, com.android.inputmethod.keyboard.KeyboardLayoutSet$Params)
    {
        com.android.inputmethod.keyboard.KeyboardId r0;
        int i0, $i1, $i2, $i3, $i4;
        com.android.inputmethod.keyboard.KeyboardLayoutSet$Params r1;
        android.view.inputmethod.InputMethodSubtype $r2, $r3;
        java.util.Locale $r4;
        android.view.inputmethod.EditorInfo $r5, $r6, $r9;
        boolean $z0, $z1, $z2;
        java.lang.CharSequence $r7, $r8;
        java.lang.String $r10;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardId;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.inputmethod.keyboard.KeyboardLayoutSet$Params;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Params: android.view.inputmethod.InputMethodSubtype mSubtype>;

        r0.<com.android.inputmethod.keyboard.KeyboardId: android.view.inputmethod.InputMethodSubtype mSubtype> = $r2;

        $r3 = r0.<com.android.inputmethod.keyboard.KeyboardId: android.view.inputmethod.InputMethodSubtype mSubtype>;

        $r4 = staticinvoke <com.android.inputmethod.latin.utils.SubtypeLocaleUtils: java.util.Locale getSubtypeLocale(android.view.inputmethod.InputMethodSubtype)>($r3);

        r0.<com.android.inputmethod.keyboard.KeyboardId: java.util.Locale mLocale> = $r4;

        $i1 = r1.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Params: int mKeyboardWidth>;

        r0.<com.android.inputmethod.keyboard.KeyboardId: int mWidth> = $i1;

        $i2 = r1.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Params: int mKeyboardHeight>;

        r0.<com.android.inputmethod.keyboard.KeyboardId: int mHeight> = $i2;

        $i3 = r1.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Params: int mMode>;

        r0.<com.android.inputmethod.keyboard.KeyboardId: int mMode> = $i3;

        r0.<com.android.inputmethod.keyboard.KeyboardId: int mElementId> = i0;

        $r5 = r1.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Params: android.view.inputmethod.EditorInfo mEditorInfo>;

        r0.<com.android.inputmethod.keyboard.KeyboardId: android.view.inputmethod.EditorInfo mEditorInfo> = $r5;

        $z0 = r1.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Params: boolean mNoSettingsKey>;

        r0.<com.android.inputmethod.keyboard.KeyboardId: boolean mClobberSettingsKey> = $z0;

        $z1 = r1.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Params: boolean mLanguageSwitchKeyEnabled>;

        r0.<com.android.inputmethod.keyboard.KeyboardId: boolean mLanguageSwitchKeyEnabled> = $z1;

        $r6 = r0.<com.android.inputmethod.keyboard.KeyboardId: android.view.inputmethod.EditorInfo mEditorInfo>;

        $r7 = $r6.<android.view.inputmethod.EditorInfo: java.lang.CharSequence actionLabel>;

        if $r7 == null goto label1;

        $r9 = r0.<com.android.inputmethod.keyboard.KeyboardId: android.view.inputmethod.EditorInfo mEditorInfo>;

        $r8 = $r9.<android.view.inputmethod.EditorInfo: java.lang.CharSequence actionLabel>;

        $r10 = interfaceinvoke $r8.<java.lang.CharSequence: java.lang.String toString()>();

        goto label2;

     label1:
        $r10 = null;

     label2:
        r0.<com.android.inputmethod.keyboard.KeyboardId: java.lang.String mCustomActionLabel> = $r10;

        $z2 = r1.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Params: boolean mVoiceInputKeyEnabled>;

        r0.<com.android.inputmethod.keyboard.KeyboardId: boolean mHasShortcutKey> = $z2;

        $i4 = staticinvoke <com.android.inputmethod.keyboard.KeyboardId: int computeHashCode(com.android.inputmethod.keyboard.KeyboardId)>(r0);

        r0.<com.android.inputmethod.keyboard.KeyboardId: int mHashCode> = $i4;

        return;
    }

    private static int computeHashCode(com.android.inputmethod.keyboard.KeyboardId)
    {
        com.android.inputmethod.keyboard.KeyboardId r0;
        java.lang.Object[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Integer $r2, $r3, $r4, $r5, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Boolean $r6, $r7, $r8, $r9, $r10, $r12, $r14;
        java.lang.String $r13;
        android.view.inputmethod.InputMethodSubtype $r15;

        r0 := @parameter0: com.android.inputmethod.keyboard.KeyboardId;

        $r1 = newarray (java.lang.Object)[14];

        $i0 = r0.<com.android.inputmethod.keyboard.KeyboardId: int mElementId>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        $i1 = r0.<com.android.inputmethod.keyboard.KeyboardId: int mMode>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[1] = $r3;

        $i2 = r0.<com.android.inputmethod.keyboard.KeyboardId: int mWidth>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[2] = $r4;

        $i3 = r0.<com.android.inputmethod.keyboard.KeyboardId: int mHeight>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r1[3] = $r5;

        $z0 = virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardId: boolean passwordInput()>();

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r1[4] = $r6;

        $z1 = r0.<com.android.inputmethod.keyboard.KeyboardId: boolean mClobberSettingsKey>;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r1[5] = $r7;

        $z2 = r0.<com.android.inputmethod.keyboard.KeyboardId: boolean mHasShortcutKey>;

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        $r1[6] = $r8;

        $z3 = r0.<com.android.inputmethod.keyboard.KeyboardId: boolean mLanguageSwitchKeyEnabled>;

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        $r1[7] = $r9;

        $z4 = virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardId: boolean isMultiLine()>();

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        $r1[8] = $r10;

        $i4 = virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardId: int imeAction()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r1[9] = $r11;

        $r13 = r0.<com.android.inputmethod.keyboard.KeyboardId: java.lang.String mCustomActionLabel>;

        $r1[10] = $r13;

        $z5 = virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardId: boolean navigateNext()>();

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5);

        $r1[11] = $r12;

        $z6 = virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardId: boolean navigatePrevious()>();

        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6);

        $r1[12] = $r14;

        $r15 = r0.<com.android.inputmethod.keyboard.KeyboardId: android.view.inputmethod.InputMethodSubtype mSubtype>;

        $r1[13] = $r15;

        $i5 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r1);

        return $i5;
    }

    private boolean equals(com.android.inputmethod.keyboard.KeyboardId)
    {
        com.android.inputmethod.keyboard.KeyboardId r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        java.lang.String $r2, $r3;
        android.view.inputmethod.InputMethodSubtype $r4, $r5;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardId;

        r1 := @parameter0: com.android.inputmethod.keyboard.KeyboardId;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $i1 = r1.<com.android.inputmethod.keyboard.KeyboardId: int mElementId>;

        $i0 = r0.<com.android.inputmethod.keyboard.KeyboardId: int mElementId>;

        if $i1 != $i0 goto label2;

        $i3 = r1.<com.android.inputmethod.keyboard.KeyboardId: int mMode>;

        $i2 = r0.<com.android.inputmethod.keyboard.KeyboardId: int mMode>;

        if $i3 != $i2 goto label2;

        $i5 = r1.<com.android.inputmethod.keyboard.KeyboardId: int mWidth>;

        $i4 = r0.<com.android.inputmethod.keyboard.KeyboardId: int mWidth>;

        if $i5 != $i4 goto label2;

        $i7 = r1.<com.android.inputmethod.keyboard.KeyboardId: int mHeight>;

        $i6 = r0.<com.android.inputmethod.keyboard.KeyboardId: int mHeight>;

        if $i7 != $i6 goto label2;

        $z0 = virtualinvoke r1.<com.android.inputmethod.keyboard.KeyboardId: boolean passwordInput()>();

        $z1 = virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardId: boolean passwordInput()>();

        if $z0 != $z1 goto label2;

        $z3 = r1.<com.android.inputmethod.keyboard.KeyboardId: boolean mClobberSettingsKey>;

        $z2 = r0.<com.android.inputmethod.keyboard.KeyboardId: boolean mClobberSettingsKey>;

        if $z3 != $z2 goto label2;

        $z5 = r1.<com.android.inputmethod.keyboard.KeyboardId: boolean mHasShortcutKey>;

        $z4 = r0.<com.android.inputmethod.keyboard.KeyboardId: boolean mHasShortcutKey>;

        if $z5 != $z4 goto label2;

        $z6 = r1.<com.android.inputmethod.keyboard.KeyboardId: boolean mLanguageSwitchKeyEnabled>;

        $z7 = r0.<com.android.inputmethod.keyboard.KeyboardId: boolean mLanguageSwitchKeyEnabled>;

        if $z6 != $z7 goto label2;

        $z9 = virtualinvoke r1.<com.android.inputmethod.keyboard.KeyboardId: boolean isMultiLine()>();

        $z8 = virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardId: boolean isMultiLine()>();

        if $z9 != $z8 goto label2;

        $i9 = virtualinvoke r1.<com.android.inputmethod.keyboard.KeyboardId: int imeAction()>();

        $i8 = virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardId: int imeAction()>();

        if $i9 != $i8 goto label2;

        $r2 = r1.<com.android.inputmethod.keyboard.KeyboardId: java.lang.String mCustomActionLabel>;

        $r3 = r0.<com.android.inputmethod.keyboard.KeyboardId: java.lang.String mCustomActionLabel>;

        $z11 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r2, $r3);

        if $z11 == 0 goto label2;

        $z10 = virtualinvoke r1.<com.android.inputmethod.keyboard.KeyboardId: boolean navigateNext()>();

        $z13 = virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardId: boolean navigateNext()>();

        if $z10 != $z13 goto label2;

        $z12 = virtualinvoke r1.<com.android.inputmethod.keyboard.KeyboardId: boolean navigatePrevious()>();

        $z14 = virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardId: boolean navigatePrevious()>();

        if $z12 != $z14 goto label2;

        $r5 = r1.<com.android.inputmethod.keyboard.KeyboardId: android.view.inputmethod.InputMethodSubtype mSubtype>;

        $r4 = r0.<com.android.inputmethod.keyboard.KeyboardId: android.view.inputmethod.InputMethodSubtype mSubtype>;

        $z15 = virtualinvoke $r5.<android.view.inputmethod.InputMethodSubtype: boolean equals(java.lang.Object)>($r4);

        if $z15 == 0 goto label2;

        $z16 = 1;

        goto label3;

     label2:
        $z16 = 0;

     label3:
        return $z16;
    }

    private static boolean isAlphabetKeyboard(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 >= 5 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isAlphabetKeyboard()
    {
        com.android.inputmethod.keyboard.KeyboardId r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardId;

        $i0 = r0.<com.android.inputmethod.keyboard.KeyboardId: int mElementId>;

        $z0 = staticinvoke <com.android.inputmethod.keyboard.KeyboardId: boolean isAlphabetKeyboard(int)>($i0);

        return $z0;
    }

    public boolean navigateNext()
    {
        com.android.inputmethod.keyboard.KeyboardId r0;
        android.view.inputmethod.EditorInfo $r1;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardId;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardId: android.view.inputmethod.EditorInfo mEditorInfo>;

        $i0 = $r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i1 = $i0 & 134217728;

        if $i1 != 0 goto label1;

        $i2 = virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardId: int imeAction()>();

        if $i2 != 5 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean navigatePrevious()
    {
        com.android.inputmethod.keyboard.KeyboardId r0;
        android.view.inputmethod.EditorInfo $r1;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardId;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardId: android.view.inputmethod.EditorInfo mEditorInfo>;

        $i0 = $r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i1 = $i0 & 67108864;

        if $i1 != 0 goto label1;

        $i2 = virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardId: int imeAction()>();

        if $i2 != 7 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean passwordInput()
    {
        com.android.inputmethod.keyboard.KeyboardId r0;
        int i0;
        android.view.inputmethod.EditorInfo $r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardId;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardId: android.view.inputmethod.EditorInfo mEditorInfo>;

        i0 = $r1.<android.view.inputmethod.EditorInfo: int inputType>;

        $z0 = staticinvoke <com.android.inputmethod.latin.utils.InputTypeUtils: boolean isPasswordInputType(int)>(i0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <com.android.inputmethod.latin.utils.InputTypeUtils: boolean isVisiblePasswordInputType(int)>(i0);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean isMultiLine()
    {
        com.android.inputmethod.keyboard.KeyboardId r0;
        android.view.inputmethod.EditorInfo $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardId;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardId: android.view.inputmethod.EditorInfo mEditorInfo>;

        $i0 = $r1.<android.view.inputmethod.EditorInfo: int inputType>;

        $i1 = $i0 & 131072;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int imeAction()
    {
        com.android.inputmethod.keyboard.KeyboardId r0;
        android.view.inputmethod.EditorInfo $r1;
        int $i0;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardId;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardId: android.view.inputmethod.EditorInfo mEditorInfo>;

        $i0 = staticinvoke <com.android.inputmethod.latin.utils.InputTypeUtils: int getImeOptionsActionIdFromEditorInfo(android.view.inputmethod.EditorInfo)>($r1);

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        com.android.inputmethod.keyboard.KeyboardId r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardId;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof com.android.inputmethod.keyboard.KeyboardId;

        if $z0 == 0 goto label1;

        $r2 = (com.android.inputmethod.keyboard.KeyboardId) r1;

        $z1 = specialinvoke r0.<com.android.inputmethod.keyboard.KeyboardId: boolean equals(com.android.inputmethod.keyboard.KeyboardId)>($r2);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public int hashCode()
    {
        com.android.inputmethod.keyboard.KeyboardId r0;
        int $i0;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardId;

        $i0 = r0.<com.android.inputmethod.keyboard.KeyboardId: int mHashCode>;

        return $i0;
    }

    public java.lang.String toString()
    {
        com.android.inputmethod.keyboard.KeyboardId r0;
        java.lang.Object[] $r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.Locale $r2, $r5;
        java.lang.String $r4, $r7, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        android.view.inputmethod.InputMethodSubtype $r6;
        java.lang.Integer $r8, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardId;

        $r2 = <java.util.Locale: java.util.Locale ROOT>;

        $r1 = newarray (java.lang.Object)[14];

        $i0 = r0.<com.android.inputmethod.keyboard.KeyboardId: int mElementId>;

        $r4 = staticinvoke <com.android.inputmethod.keyboard.KeyboardId: java.lang.String elementIdToName(int)>($i0);

        $r1[0] = $r4;

        $r5 = r0.<com.android.inputmethod.keyboard.KeyboardId: java.util.Locale mLocale>;

        $r1[1] = $r5;

        $r6 = r0.<com.android.inputmethod.keyboard.KeyboardId: android.view.inputmethod.InputMethodSubtype mSubtype>;

        $r7 = virtualinvoke $r6.<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValueOf(java.lang.String)>("KeyboardLayoutSet");

        $r1[2] = $r7;

        $i1 = r0.<com.android.inputmethod.keyboard.KeyboardId: int mWidth>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[3] = $r8;

        $i2 = r0.<com.android.inputmethod.keyboard.KeyboardId: int mHeight>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[4] = $r9;

        $i3 = r0.<com.android.inputmethod.keyboard.KeyboardId: int mMode>;

        $r10 = staticinvoke <com.android.inputmethod.keyboard.KeyboardId: java.lang.String modeName(int)>($i3);

        $r1[5] = $r10;

        $i4 = virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardId: int imeAction()>();

        $r11 = staticinvoke <com.android.inputmethod.keyboard.KeyboardId: java.lang.String actionName(int)>($i4);

        $r1[6] = $r11;

        $z0 = virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardId: boolean navigateNext()>();

        if $z0 == 0 goto label01;

        $r19 = " navigateNext";

        goto label02;

     label01:
        $r19 = "";

     label02:
        $r1[7] = $r19;

        $z2 = virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardId: boolean navigatePrevious()>();

        if $z2 == 0 goto label03;

        $r18 = " navigatePrevious";

        goto label04;

     label03:
        $r18 = "";

     label04:
        $r1[8] = $r18;

        $z1 = r0.<com.android.inputmethod.keyboard.KeyboardId: boolean mClobberSettingsKey>;

        if $z1 == 0 goto label05;

        $r15 = " clobberSettingsKey";

        goto label06;

     label05:
        $r15 = "";

     label06:
        $r1[9] = $r15;

        $z3 = virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardId: boolean passwordInput()>();

        if $z3 == 0 goto label07;

        $r14 = " passwordInput";

        goto label08;

     label07:
        $r14 = "";

     label08:
        $r1[10] = $r14;

        $z5 = r0.<com.android.inputmethod.keyboard.KeyboardId: boolean mHasShortcutKey>;

        if $z5 == 0 goto label09;

        $r17 = " hasShortcutKey";

        goto label10;

     label09:
        $r17 = "";

     label10:
        $r1[11] = $r17;

        $z4 = r0.<com.android.inputmethod.keyboard.KeyboardId: boolean mLanguageSwitchKeyEnabled>;

        if $z4 == 0 goto label11;

        $r16 = " languageSwitchKeyEnabled";

        goto label12;

     label11:
        $r16 = "";

     label12:
        $r1[12] = $r16;

        $z6 = virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardId: boolean isMultiLine()>();

        if $z6 == 0 goto label13;

        $r13 = " isMultiLine";

        goto label14;

     label13:
        $r13 = "";

     label14:
        $r1[13] = $r13;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, "[%s %s:%s %dx%d %s %s%s%s%s%s%s%s%s]", $r1);

        return $r12;
    }

    public static boolean equivalentEditorInfoForKeyboard(android.view.inputmethod.EditorInfo, android.view.inputmethod.EditorInfo)
    {
        android.view.inputmethod.EditorInfo r0, r1;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2, $r3;
        boolean $z0, $z1;

        r0 := @parameter0: android.view.inputmethod.EditorInfo;

        r1 := @parameter1: android.view.inputmethod.EditorInfo;

        if r0 != null goto label1;

        if r1 != null goto label1;

        return 1;

     label1:
        if r0 == null goto label2;

        if r1 != null goto label3;

     label2:
        return 0;

     label3:
        $i1 = r0.<android.view.inputmethod.EditorInfo: int inputType>;

        $i0 = r1.<android.view.inputmethod.EditorInfo: int inputType>;

        if $i1 != $i0 goto label4;

        $i3 = r0.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i2 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        if $i3 != $i2 goto label4;

        $r3 = r0.<android.view.inputmethod.EditorInfo: java.lang.String privateImeOptions>;

        $r2 = r1.<android.view.inputmethod.EditorInfo: java.lang.String privateImeOptions>;

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r3, $r2);

        if $z0 == 0 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    public static java.lang.String elementIdToName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label08;
            case 8: goto label09;
            case 9: goto label10;
            case 10: goto label11;
            case 11: goto label12;
            case 12: goto label13;
            case 13: goto label14;
            case 14: goto label15;
            case 15: goto label16;
            case 16: goto label17;
            default: goto label18;
        };

     label01:
        return "alphabet";

     label02:
        return "alphabetManualShifted";

     label03:
        return "alphabetAutomaticShifted";

     label04:
        return "alphabetShiftLocked";

     label05:
        return "alphabetShiftLockShifted";

     label06:
        return "symbols";

     label07:
        return "symbolsShifted";

     label08:
        return "phone";

     label09:
        return "phoneSymbols";

     label10:
        return "number";

     label11:
        return "emojiRecents";

     label12:
        return "emojiCategory1";

     label13:
        return "emojiCategory2";

     label14:
        return "emojiCategory3";

     label15:
        return "emojiCategory4";

     label16:
        return "emojiCategory5";

     label17:
        return "emojiCategory6";

     label18:
        return null;
    }

    public static java.lang.String modeName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label08;
            case 8: goto label09;
            default: goto label10;
        };

     label01:
        return "text";

     label02:
        return "url";

     label03:
        return "email";

     label04:
        return "im";

     label05:
        return "phone";

     label06:
        return "number";

     label07:
        return "date";

     label08:
        return "time";

     label09:
        return "datetime";

     label10:
        return null;
    }

    public static java.lang.String actionName(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        if i0 != 256 goto label1;

        $r0 = "actionCustomLabel";

        goto label2;

     label1:
        $r0 = staticinvoke <com.android.inputmethod.compat.EditorInfoCompatUtils: java.lang.String imeActionName(int)>(i0);

     label2:
        return $r0;
    }

    public static void <clinit>()
    {
        <com.android.inputmethod.keyboard.KeyboardId: int ELEMENT_EMOJI_CATEGORY6> = 16;

        <com.android.inputmethod.keyboard.KeyboardId: int ELEMENT_EMOJI_CATEGORY5> = 15;

        <com.android.inputmethod.keyboard.KeyboardId: int ELEMENT_EMOJI_CATEGORY4> = 14;

        <com.android.inputmethod.keyboard.KeyboardId: int ELEMENT_EMOJI_CATEGORY3> = 13;

        <com.android.inputmethod.keyboard.KeyboardId: int ELEMENT_EMOJI_CATEGORY2> = 12;

        <com.android.inputmethod.keyboard.KeyboardId: int ELEMENT_EMOJI_CATEGORY1> = 11;

        <com.android.inputmethod.keyboard.KeyboardId: int ELEMENT_EMOJI_RECENTS> = 10;

        <com.android.inputmethod.keyboard.KeyboardId: int ELEMENT_NUMBER> = 9;

        <com.android.inputmethod.keyboard.KeyboardId: int ELEMENT_PHONE_SYMBOLS> = 8;

        <com.android.inputmethod.keyboard.KeyboardId: int ELEMENT_PHONE> = 7;

        <com.android.inputmethod.keyboard.KeyboardId: int ELEMENT_SYMBOLS_SHIFTED> = 6;

        <com.android.inputmethod.keyboard.KeyboardId: int ELEMENT_SYMBOLS> = 5;

        <com.android.inputmethod.keyboard.KeyboardId: int ELEMENT_ALPHABET_SHIFT_LOCK_SHIFTED> = 4;

        <com.android.inputmethod.keyboard.KeyboardId: int ELEMENT_ALPHABET_SHIFT_LOCKED> = 3;

        <com.android.inputmethod.keyboard.KeyboardId: int ELEMENT_ALPHABET_AUTOMATIC_SHIFTED> = 2;

        <com.android.inputmethod.keyboard.KeyboardId: int ELEMENT_ALPHABET_MANUAL_SHIFTED> = 1;

        <com.android.inputmethod.keyboard.KeyboardId: int ELEMENT_ALPHABET> = 0;

        <com.android.inputmethod.keyboard.KeyboardId: int MODE_DATETIME> = 8;

        <com.android.inputmethod.keyboard.KeyboardId: int MODE_TIME> = 7;

        <com.android.inputmethod.keyboard.KeyboardId: int MODE_DATE> = 6;

        <com.android.inputmethod.keyboard.KeyboardId: int MODE_NUMBER> = 5;

        <com.android.inputmethod.keyboard.KeyboardId: int MODE_PHONE> = 4;

        <com.android.inputmethod.keyboard.KeyboardId: int MODE_IM> = 3;

        <com.android.inputmethod.keyboard.KeyboardId: int MODE_EMAIL> = 2;

        <com.android.inputmethod.keyboard.KeyboardId: int MODE_URL> = 1;

        <com.android.inputmethod.keyboard.KeyboardId: int MODE_TEXT> = 0;

        return;
    }
}
