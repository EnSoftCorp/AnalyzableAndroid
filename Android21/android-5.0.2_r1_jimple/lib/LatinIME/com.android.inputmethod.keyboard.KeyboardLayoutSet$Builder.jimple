public final class com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder extends java.lang.Object
{
    private final android.content.Context mContext;
    private final java.lang.String mPackageName;
    private final android.content.res.Resources mResources;
    private final com.android.inputmethod.keyboard.KeyboardLayoutSet$Params mParams;
    private static final android.view.inputmethod.EditorInfo EMPTY_EDITOR_INFO;

    public void <init>(android.content.Context, android.view.inputmethod.EditorInfo)
    {
        com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder r0;
        android.content.Context r1;
        android.view.inputmethod.EditorInfo r2, r4, $r9;
        com.android.inputmethod.keyboard.KeyboardLayoutSet$Params r3, $r5;
        java.lang.String $r6, $r8;
        android.content.res.Resources $r7;
        int $i0, $i1;
        boolean $z0, $z1;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.inputmethod.EditorInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new com.android.inputmethod.keyboard.KeyboardLayoutSet$Params;

        specialinvoke $r5.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Params: void <init>()>();

        r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: com.android.inputmethod.keyboard.KeyboardLayoutSet$Params mParams> = $r5;

        r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: android.content.Context mContext> = r1;

        $r6 = virtualinvoke r1.<android.content.Context: java.lang.String getPackageName()>();

        r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: java.lang.String mPackageName> = $r6;

        $r7 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: android.content.res.Resources mResources> = $r7;

        r3 = r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: com.android.inputmethod.keyboard.KeyboardLayoutSet$Params mParams>;

        if r2 == null goto label1;

        $r9 = r2;

        goto label2;

     label1:
        $r9 = <com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: android.view.inputmethod.EditorInfo EMPTY_EDITOR_INFO>;

     label2:
        r4 = $r9;

        $i0 = staticinvoke <com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: int getKeyboardMode(android.view.inputmethod.EditorInfo)>(r4);

        r3.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Params: int mMode> = $i0;

        r3.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Params: android.view.inputmethod.EditorInfo mEditorInfo> = r4;

        $i1 = r4.<android.view.inputmethod.EditorInfo: int inputType>;

        $z0 = staticinvoke <com.android.inputmethod.latin.utils.InputTypeUtils: boolean isPasswordInputType(int)>($i1);

        r3.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Params: boolean mIsPasswordField> = $z0;

        $r8 = r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: java.lang.String mPackageName>;

        $z1 = staticinvoke <com.android.inputmethod.latin.InputAttributes: boolean inPrivateImeOptions(java.lang.String,java.lang.String,android.view.inputmethod.EditorInfo)>($r8, "noSettingsKey", r4);

        r3.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Params: boolean mNoSettingsKey> = $z1;

        return;
    }

    public com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder setKeyboardGeometry(int, int)
    {
        com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder r0;
        int i0, i1;
        com.android.inputmethod.keyboard.KeyboardLayoutSet$Params $r1, $r2;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: com.android.inputmethod.keyboard.KeyboardLayoutSet$Params mParams>;

        $r1.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Params: int mKeyboardWidth> = i0;

        $r2 = r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: com.android.inputmethod.keyboard.KeyboardLayoutSet$Params mParams>;

        $r2.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Params: int mKeyboardHeight> = i1;

        return r0;
    }

    public com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder setSubtype(android.view.inputmethod.InputMethodSubtype)
    {
        com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder r0;
        android.view.inputmethod.InputMethodSubtype r1, r2, $r15;
        boolean z0, z1, z2, $z3, $z4;
        com.android.inputmethod.keyboard.KeyboardLayoutSet$Params $r3, $r6, $r8, $r9;
        android.view.inputmethod.EditorInfo $r4, $r7;
        java.lang.String $r5, $r11, $r13;
        int $i0;
        java.lang.StringBuilder $r10, $r12, $r14;
        com.android.inputmethod.latin.SubtypeSwitcher $r16;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder;

        r1 := @parameter0: android.view.inputmethod.InputMethodSubtype;

        z0 = staticinvoke <com.android.inputmethod.compat.InputMethodSubtypeCompatUtils: boolean isAsciiCapable(android.view.inputmethod.InputMethodSubtype)>(r1);

        $r5 = r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: java.lang.String mPackageName>;

        $r3 = r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: com.android.inputmethod.keyboard.KeyboardLayoutSet$Params mParams>;

        $r4 = $r3.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Params: android.view.inputmethod.EditorInfo mEditorInfo>;

        z1 = staticinvoke <com.android.inputmethod.latin.InputAttributes: boolean inPrivateImeOptions(java.lang.String,java.lang.String,android.view.inputmethod.EditorInfo)>($r5, "forceAscii", $r4);

        $r6 = r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: com.android.inputmethod.keyboard.KeyboardLayoutSet$Params mParams>;

        $r7 = $r6.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Params: android.view.inputmethod.EditorInfo mEditorInfo>;

        $i0 = $r7.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $z3 = staticinvoke <com.android.inputmethod.compat.EditorInfoCompatUtils: boolean hasFlagForceAscii(int)>($i0);

        if $z3 != 0 goto label1;

        if z1 == 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        z2 = $z4;

        if z2 == 0 goto label4;

        if z0 != 0 goto label4;

        $r16 = staticinvoke <com.android.inputmethod.latin.SubtypeSwitcher: com.android.inputmethod.latin.SubtypeSwitcher getInstance()>();

        $r15 = virtualinvoke $r16.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype getNoLanguageSubtype()>();

        goto label5;

     label4:
        $r15 = r1;

     label5:
        r2 = $r15;

        $r8 = r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: com.android.inputmethod.keyboard.KeyboardLayoutSet$Params mParams>;

        $r8.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Params: android.view.inputmethod.InputMethodSubtype mSubtype> = r2;

        $r9 = r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: com.android.inputmethod.keyboard.KeyboardLayoutSet$Params mParams>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("keyboard_layout_set_");

        $r11 = staticinvoke <com.android.inputmethod.latin.utils.SubtypeLocaleUtils: java.lang.String getKeyboardLayoutSetName(android.view.inputmethod.InputMethodSubtype)>(r2);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Params: java.lang.String mKeyboardLayoutSetName> = $r13;

        return r0;
    }

    public com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder setIsSpellChecker(boolean)
    {
        com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder r0;
        boolean z0;
        com.android.inputmethod.keyboard.KeyboardLayoutSet$Params $r1;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: com.android.inputmethod.keyboard.KeyboardLayoutSet$Params mParams>;

        $r1.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Params: boolean mIsSpellChecker> = z0;

        return r0;
    }

    public com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder setVoiceInputKeyEnabled(boolean)
    {
        com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder r0;
        boolean z0;
        com.android.inputmethod.keyboard.KeyboardLayoutSet$Params $r1;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: com.android.inputmethod.keyboard.KeyboardLayoutSet$Params mParams>;

        $r1.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Params: boolean mVoiceInputKeyEnabled> = z0;

        return r0;
    }

    public com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder setLanguageSwitchKeyEnabled(boolean)
    {
        com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder r0;
        boolean z0;
        com.android.inputmethod.keyboard.KeyboardLayoutSet$Params $r1;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: com.android.inputmethod.keyboard.KeyboardLayoutSet$Params mParams>;

        $r1.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Params: boolean mLanguageSwitchKeyEnabled> = z0;

        return r0;
    }

    public void disableTouchPositionCorrectionData()
    {
        com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder r0;
        com.android.inputmethod.keyboard.KeyboardLayoutSet$Params $r1;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: com.android.inputmethod.keyboard.KeyboardLayoutSet$Params mParams>;

        $r1.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Params: boolean mDisableTouchPositionCorrectionDataForTest> = 1;

        return;
    }

    public void setScriptId(int)
    {
        com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder r0;
        int i0;
        com.android.inputmethod.keyboard.KeyboardLayoutSet$Params $r1;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: com.android.inputmethod.keyboard.KeyboardLayoutSet$Params mParams>;

        $r1.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Params: int mScriptId> = i0;

        return;
    }

    public com.android.inputmethod.keyboard.KeyboardLayoutSet build()
    {
        com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder r0;
        java.lang.String r1, r2, $r18, $r22, $r26, $r29;
        int i0;
        java.io.IOException r3, $r21;
        com.android.inputmethod.keyboard.KeyboardLayoutSet$Params $r4, $r7, $r11;
        android.view.inputmethod.InputMethodSubtype $r5;
        android.content.res.Resources $r6, $r8, $r9;
        com.android.inputmethod.keyboard.KeyboardLayoutSet $r10;
        android.content.Context $r12;
        org.xmlpull.v1.XmlPullParserException $r13, r30;
        java.lang.RuntimeException $r14, $r16, $r24;
        java.lang.StringBuilder $r15, $r17, $r19, $r20, $r23, $r25, $r27, $r28;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder;

        $r4 = r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: com.android.inputmethod.keyboard.KeyboardLayoutSet$Params mParams>;

        $r5 = $r4.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Params: android.view.inputmethod.InputMethodSubtype mSubtype>;

        if $r5 != null goto label1;

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>("KeyboardLayoutSet subtype is not specified");

        throw $r14;

     label1:
        $r6 = r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: android.content.res.Resources mResources>;

        r1 = virtualinvoke $r6.<android.content.res.Resources: java.lang.String getResourcePackageName(int)>(2131034211);

        $r7 = r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: com.android.inputmethod.keyboard.KeyboardLayoutSet$Params mParams>;

        r2 = $r7.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Params: java.lang.String mKeyboardLayoutSetName>;

        $r8 = r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: android.content.res.Resources mResources>;

        i0 = virtualinvoke $r8.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>(r2, "xml", r1);

     label2:
        $r9 = r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: android.content.res.Resources mResources>;

        specialinvoke r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: void parseKeyboardLayoutSet(android.content.res.Resources,int)>($r9, i0);

     label3:
        goto label6;

     label4:
        $r21 := @caughtexception;

        r3 = $r21;

        $r24 = new java.lang.RuntimeException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke r3.<java.io.IOException: java.lang.String getMessage()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r29, r3);

        throw $r24;

     label5:
        $r13 := @caughtexception;

        r30 = $r13;

        $r16 = new java.lang.RuntimeException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke r30.<org.xmlpull.v1.XmlPullParserException: java.lang.String getMessage()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r22, r30);

        throw $r16;

     label6:
        $r10 = new com.android.inputmethod.keyboard.KeyboardLayoutSet;

        $r12 = r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: android.content.Context mContext>;

        $r11 = r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: com.android.inputmethod.keyboard.KeyboardLayoutSet$Params mParams>;

        specialinvoke $r10.<com.android.inputmethod.keyboard.KeyboardLayoutSet: void <init>(android.content.Context,com.android.inputmethod.keyboard.KeyboardLayoutSet$Params)>($r12, $r11);

        return $r10;

        catch java.io.IOException from label2 to label3 with label4;
        catch org.xmlpull.v1.XmlPullParserException from label2 to label3 with label5;
    }

    private void parseKeyboardLayoutSet(android.content.res.Resources, int) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder r0;
        android.content.res.Resources r1;
        int i0, i1, $i2;
        android.content.res.XmlResourceParser r2;
        java.lang.String r3, $r5;
        java.lang.Throwable r4, $r7;
        boolean $z0;
        com.android.inputmethod.latin.utils.XmlParseUtils$IllegalStartTag $r6;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder;

        r1 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        r2 = virtualinvoke r1.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i0);

     label1:
        $i2 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getEventType()>();

        if $i2 == 1 goto label4;

        i1 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int next()>();

        if i1 != 2 goto label3;

        r3 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $r5 = "KeyboardLayoutSet";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: void parseKeyboardLayoutSetContent(org.xmlpull.v1.XmlPullParser)>(r2);

        goto label3;

     label2:
        $r6 = new com.android.inputmethod.latin.utils.XmlParseUtils$IllegalStartTag;

        specialinvoke $r6.<com.android.inputmethod.latin.utils.XmlParseUtils$IllegalStartTag: void <init>(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r2, r3, "KeyboardLayoutSet");

        throw $r6;

     label3:
        goto label1;

     label4:
        interfaceinvoke r2.<android.content.res.XmlResourceParser: void close()>();

        goto label7;

     label5:
        $r7 := @caughtexception;

        r4 = $r7;

     label6:
        interfaceinvoke r2.<android.content.res.XmlResourceParser: void close()>();

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void parseKeyboardLayoutSetContent(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, $i1;
        java.lang.String r2, $r3, $r5, $r6, r8;
        boolean $z0, $z1, $z2;
        com.android.inputmethod.latin.utils.XmlParseUtils$IllegalEndTag $r4;
        com.android.inputmethod.latin.utils.XmlParseUtils$IllegalStartTag $r7;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

     label1:
        $i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i1 == 1 goto label8;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 != 2 goto label5;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r5 = "Element";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label2;

        specialinvoke r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: void parseKeyboardLayoutSetElement(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label4;

     label2:
        $r6 = "Feature";

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label3;

        specialinvoke r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: void parseKeyboardLayoutSetFeature(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label4;

     label3:
        $r7 = new com.android.inputmethod.latin.utils.XmlParseUtils$IllegalStartTag;

        specialinvoke $r7.<com.android.inputmethod.latin.utils.XmlParseUtils$IllegalStartTag: void <init>(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r1, r2, "KeyboardLayoutSet");

        throw $r7;

     label4:
        goto label7;

     label5:
        if i0 != 3 goto label7;

        r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r3 = "KeyboardLayoutSet";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z0 == 0 goto label6;

        goto label8;

     label6:
        $r4 = new com.android.inputmethod.latin.utils.XmlParseUtils$IllegalEndTag;

        specialinvoke $r4.<com.android.inputmethod.latin.utils.XmlParseUtils$IllegalEndTag: void <init>(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r1, r8, "KeyboardLayoutSet");

        throw $r4;

     label7:
        goto label1;

     label8:
        return;
    }

    private void parseKeyboardLayoutSetElement(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.content.res.TypedArray r2;
        com.android.inputmethod.keyboard.KeyboardLayoutSet$ElementParams r3, $r8;
        int i0, $i1;
        java.lang.Throwable r4, $r11;
        android.content.res.Resources $r5;
        android.util.AttributeSet $r6;
        int[] $r7;
        boolean $z0;
        com.android.inputmethod.keyboard.KeyboardLayoutSet$Params $r9;
        android.util.SparseArray $r10;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r5 = r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: android.content.res.Resources mResources>;

        $r6 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

        $r7 = <com.android.inputmethod.latin.R$styleable: int[] KeyboardLayoutSet_Element>;

        r2 = virtualinvoke $r5.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r6, $r7);

     label1:
        staticinvoke <com.android.inputmethod.latin.utils.XmlParseUtils: void checkAttributeExists(android.content.res.TypedArray,int,java.lang.String,java.lang.String,org.xmlpull.v1.XmlPullParser)>(r2, 0, "elementName", "Element", r1);

        staticinvoke <com.android.inputmethod.latin.utils.XmlParseUtils: void checkAttributeExists(android.content.res.TypedArray,int,java.lang.String,java.lang.String,org.xmlpull.v1.XmlPullParser)>(r2, 1, "elementKeyboard", "Element", r1);

        staticinvoke <com.android.inputmethod.latin.utils.XmlParseUtils: void checkEndTag(java.lang.String,org.xmlpull.v1.XmlPullParser)>("Element", r1);

        $r8 = new com.android.inputmethod.keyboard.KeyboardLayoutSet$ElementParams;

        specialinvoke $r8.<com.android.inputmethod.keyboard.KeyboardLayoutSet$ElementParams: void <init>()>();

        r3 = $r8;

        i0 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(0, 0);

        $i1 = virtualinvoke r2.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        r3.<com.android.inputmethod.keyboard.KeyboardLayoutSet$ElementParams: int mKeyboardXmlId> = $i1;

        $z0 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, 0);

        r3.<com.android.inputmethod.keyboard.KeyboardLayoutSet$ElementParams: boolean mProximityCharsCorrectionEnabled> = $z0;

        $r9 = r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: com.android.inputmethod.keyboard.KeyboardLayoutSet$Params mParams>;

        $r10 = $r9.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Params: android.util.SparseArray mKeyboardLayoutSetElementIdToParamsMap>;

        virtualinvoke $r10.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r3);

     label2:
        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        goto label5;

     label3:
        $r11 := @caughtexception;

        r4 = $r11;

     label4:
        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void parseKeyboardLayoutSetFeature(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.content.res.TypedArray r2;
        int i0;
        java.lang.Throwable r3, $r7;
        android.content.res.Resources $r4;
        android.util.AttributeSet $r5;
        int[] $r6;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r4 = r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: android.content.res.Resources mResources>;

        $r5 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

        $r6 = <com.android.inputmethod.latin.R$styleable: int[] KeyboardLayoutSet_Feature>;

        r2 = virtualinvoke $r4.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r5, $r6);

     label1:
        i0 = virtualinvoke r2.<android.content.res.TypedArray: int getInt(int,int)>(0, 11);

        staticinvoke <com.android.inputmethod.latin.utils.XmlParseUtils: void checkEndTag(java.lang.String,org.xmlpull.v1.XmlPullParser)>("Feature", r1);

        virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: void setScriptId(int)>(i0);

     label2:
        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

     label4:
        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static int getKeyboardMode(android.view.inputmethod.EditorInfo)
    {
        android.view.inputmethod.EditorInfo r0;
        int i0, i1, $i2;
        boolean $z0;

        r0 := @parameter0: android.view.inputmethod.EditorInfo;

        i0 = r0.<android.view.inputmethod.EditorInfo: int inputType>;

        i1 = i0 & 4080;

        $i2 = i0 & 15;

        tableswitch($i2)
        {
            case 1: goto label07;
            case 2: goto label01;
            case 3: goto label06;
            case 4: goto label02;
            default: goto label12;
        };

     label01:
        return 5;

     label02:
        lookupswitch(i1)
        {
            case 16: goto label03;
            case 32: goto label04;
            default: goto label05;
        };

     label03:
        return 6;

     label04:
        return 7;

     label05:
        return 8;

     label06:
        return 4;

     label07:
        $z0 = staticinvoke <com.android.inputmethod.latin.utils.InputTypeUtils: boolean isEmailVariation(int)>(i1);

        if $z0 == 0 goto label08;

        return 2;

     label08:
        if i1 != 16 goto label09;

        return 1;

     label09:
        if i1 != 64 goto label10;

        return 3;

     label10:
        if i1 != 176 goto label11;

        return 0;

     label11:
        return 0;

     label12:
        return 0;
    }

    static void <clinit>()
    {
        android.view.inputmethod.EditorInfo $r0;

        $r0 = new android.view.inputmethod.EditorInfo;

        specialinvoke $r0.<android.view.inputmethod.EditorInfo: void <init>()>();

        <com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: android.view.inputmethod.EditorInfo EMPTY_EDITOR_INFO> = $r0;

        return;
    }
}
