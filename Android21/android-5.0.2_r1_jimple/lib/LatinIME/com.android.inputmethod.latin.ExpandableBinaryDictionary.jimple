public abstract class com.android.inputmethod.latin.ExpandableBinaryDictionary extends com.android.inputmethod.latin.Dictionary
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private static final boolean DBG_STRESS_TEST;
    private static final int TIMEOUT_FOR_READ_OPS_IN_MILLISECONDS;
    private static final int DEFAULT_MAX_UNIGRAM_COUNT;
    private static final int DEFAULT_MAX_BIGRAM_COUNT;
    protected static final int MAX_WORD_LENGTH;
    private static final int DICTIONARY_FORMAT_VERSION;
    protected final android.content.Context mContext;
    private com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary;
    private final java.lang.String mDictName;
    private final java.util.Locale mLocale;
    private final java.io.File mDictFile;
    private final java.util.concurrent.atomic.AtomicBoolean mIsReloading;
    private boolean mNeedsToRecreate;
    private final java.util.concurrent.locks.ReentrantReadWriteLock mLock;
    private java.util.Map mAdditionalAttributeMap;
    protected static final java.lang.String DICT_FILE_EXTENSION;

    protected abstract void loadInitialContentsLocked();

    private boolean matchesExpectedBinaryDictFormatVersionForThisType(int)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        i0 := @parameter0: int;

        if i0 != 402 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private boolean needsToMigrateDictionary(int)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        i0 := @parameter0: int;

        if i0 != 399 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isValidDictionaryLocked()
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        com.android.inputmethod.latin.BinaryDictionary $r1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        $r1 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        $z0 = virtualinvoke $r1.<com.android.inputmethod.latin.BinaryDictionary: boolean isValidDictionary()>();

        return $z0;
    }

    public void <init>(android.content.Context, java.lang.String, java.util.Locale, java.lang.String, java.io.File)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        android.content.Context r1;
        java.lang.String r2, r4;
        java.util.Locale r3;
        java.io.File r5, $r6;
        java.util.concurrent.atomic.AtomicBoolean $r7;
        java.util.concurrent.locks.ReentrantReadWriteLock $r8;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Locale;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.io.File;

        specialinvoke r0.<com.android.inputmethod.latin.Dictionary: void <init>(java.lang.String)>(r4);

        r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.Map mAdditionalAttributeMap> = null;

        r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.lang.String mDictName> = r2;

        r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: android.content.Context mContext> = r1;

        r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.Locale mLocale> = r3;

        $r6 = staticinvoke <com.android.inputmethod.latin.ExpandableBinaryDictionary: java.io.File getDictFile(android.content.Context,java.lang.String,java.io.File)>(r1, r2, r5);

        r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.io.File mDictFile> = $r6;

        r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary> = null;

        $r7 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r7.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();

        r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.concurrent.atomic.AtomicBoolean mIsReloading> = $r7;

        r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: boolean mNeedsToRecreate> = 0;

        $r8 = new java.util.concurrent.locks.ReentrantReadWriteLock;

        specialinvoke $r8.<java.util.concurrent.locks.ReentrantReadWriteLock: void <init>()>();

        r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock> = $r8;

        return;
    }

    public static java.io.File getDictFile(android.content.Context, java.lang.String, java.io.File)
    {
        android.content.Context r0;
        java.lang.String r1, $r8;
        java.io.File r2, $r3, $r4;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.io.File;

        if r2 == null goto label1;

        $r3 = r2;

        goto label2;

     label1:
        $r3 = new java.io.File;

        $r4 = virtualinvoke r0.<android.content.Context: java.io.File getFilesDir()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".dict");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, $r8);

     label2:
        return $r3;
    }

    public static java.lang.String getDictName(java.lang.String, java.util.Locale, java.io.File)
    {
        java.lang.String r0, $r6, $r8;
        java.util.Locale r1;
        java.io.File r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r7;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Locale;

        r2 := @parameter2: java.io.File;

        if r2 == null goto label1;

        $r8 = virtualinvoke r2.<java.io.File: java.lang.String getName()>();

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r6 = virtualinvoke r1.<java.util.Locale: java.lang.String toString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return $r8;
    }

    private void asyncExecuteTaskWithWriteLock(java.lang.Runnable)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        java.lang.Runnable r1;
        java.util.concurrent.locks.ReentrantReadWriteLock $r2;
        java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock $r3;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();

        specialinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void asyncExecuteTaskWithLock(java.util.concurrent.locks.Lock,java.lang.Runnable)>($r3, r1);

        return;
    }

    private void asyncExecuteTaskWithLock(java.util.concurrent.locks.Lock, java.lang.Runnable)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        java.util.concurrent.locks.Lock r1;
        java.lang.Runnable r2;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        r1 := @parameter0: java.util.concurrent.locks.Lock;

        r2 := @parameter1: java.lang.Runnable;

        specialinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void asyncPreCheckAndExecuteTaskWithLock(java.util.concurrent.locks.Lock,java.util.concurrent.Callable,java.lang.Runnable)>(r1, null, r2);

        return;
    }

    private void asyncPreCheckAndExecuteTaskWithWriteLock(java.util.concurrent.Callable, java.lang.Runnable)
    {
        java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock $r0;
        com.android.inputmethod.latin.ExpandableBinaryDictionary r1;
        java.util.concurrent.Callable r2;
        java.lang.Runnable r3;
        java.util.concurrent.locks.ReentrantReadWriteLock $r4;

        r1 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        r2 := @parameter0: java.util.concurrent.Callable;

        r3 := @parameter1: java.lang.Runnable;

        $r4 = r1.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r0 = virtualinvoke $r4.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock()>();

        specialinvoke r1.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void asyncPreCheckAndExecuteTaskWithLock(java.util.concurrent.locks.Lock,java.util.concurrent.Callable,java.lang.Runnable)>($r0, r2, r3);

        return;
    }

    private void asyncPreCheckAndExecuteTaskWithLock(java.util.concurrent.locks.Lock, java.util.concurrent.Callable, java.lang.Runnable)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        java.util.concurrent.locks.Lock r1;
        java.util.concurrent.Callable r2;
        java.lang.Runnable r3;
        java.lang.String $r4;
        java.util.concurrent.ExecutorService $r5;
        com.android.inputmethod.latin.ExpandableBinaryDictionary$1 $r6;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        r1 := @parameter0: java.util.concurrent.locks.Lock;

        r2 := @parameter1: java.util.concurrent.Callable;

        r3 := @parameter2: java.lang.Runnable;

        $r4 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.lang.String mDictName>;

        $r5 = staticinvoke <com.android.inputmethod.latin.utils.ExecutorUtils: java.util.concurrent.ExecutorService getExecutor(java.lang.String)>($r4);

        $r6 = new com.android.inputmethod.latin.ExpandableBinaryDictionary$1;

        specialinvoke $r6.<com.android.inputmethod.latin.ExpandableBinaryDictionary$1: void <init>(com.android.inputmethod.latin.ExpandableBinaryDictionary,java.util.concurrent.Callable,java.util.concurrent.locks.Lock,java.lang.Runnable)>(r0, r2, r1, r3);

        interfaceinvoke $r5.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r6);

        return;
    }

    public void close()
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        com.android.inputmethod.latin.ExpandableBinaryDictionary$2 $r1;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        $r1 = new com.android.inputmethod.latin.ExpandableBinaryDictionary$2;

        specialinvoke $r1.<com.android.inputmethod.latin.ExpandableBinaryDictionary$2: void <init>(com.android.inputmethod.latin.ExpandableBinaryDictionary)>(r0);

        specialinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void asyncExecuteTaskWithWriteLock(java.lang.Runnable)>($r1);

        return;
    }

    protected java.util.Map getHeaderAttributeMap()
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        java.util.HashMap r1, $r2;
        java.util.Map $r3, $r16;
        java.lang.String $r4, $r7, $r10, $r12, $r15;
        java.util.Locale $r6;
        java.util.concurrent.TimeUnit $r9;
        long $l0, $l1;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r1 = $r2;

        $r3 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.Map mAdditionalAttributeMap>;

        if $r3 == null goto label1;

        $r16 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.Map mAdditionalAttributeMap>;

        virtualinvoke r1.<java.util.HashMap: void putAll(java.util.Map)>($r16);

     label1:
        $r4 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.lang.String mDictName>;

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("dictionary", $r4);

        $r6 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.Locale mLocale>;

        $r7 = virtualinvoke $r6.<java.util.Locale: java.lang.String toString()>();

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("locale", $r7);

        $r9 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = virtualinvoke $r9.<java.util.concurrent.TimeUnit: long toSeconds(long)>($l0);

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l1);

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("version", $r10);

        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(10000);

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("MAX_UNIGRAM_COUNT", $r12);

        $r15 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(10000);

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("MAX_BIGRAM_COUNT", $r15);

        return r1;
    }

    private void removeBinaryDictionary()
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        com.android.inputmethod.latin.ExpandableBinaryDictionary$3 $r1;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        $r1 = new com.android.inputmethod.latin.ExpandableBinaryDictionary$3;

        specialinvoke $r1.<com.android.inputmethod.latin.ExpandableBinaryDictionary$3: void <init>(com.android.inputmethod.latin.ExpandableBinaryDictionary)>(r0);

        specialinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void asyncExecuteTaskWithWriteLock(java.lang.Runnable)>($r1);

        return;
    }

    private void removeBinaryDictionaryLocked()
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        com.android.inputmethod.latin.BinaryDictionary $r1, $r11;
        java.io.File $r2, $r3, $r7;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4, $r6, $r9;
        java.lang.String $r5, $r8, $r10;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        $r1 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        if $r1 == null goto label1;

        $r11 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        virtualinvoke $r11.<com.android.inputmethod.latin.BinaryDictionary: void close()>();

     label1:
        $r2 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.io.File mDictFile>;

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.io.File mDictFile>;

        $z1 = staticinvoke <com.android.inputmethod.latin.utils.FileUtils: boolean deleteRecursively(java.io.File)>($r3);

        if $z1 != 0 goto label2;

        $r5 = <com.android.inputmethod.latin.ExpandableBinaryDictionary: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t remove a file: ");

        $r7 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.io.File mDictFile>;

        $r8 = virtualinvoke $r7.<java.io.File: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r5, $r10);

     label2:
        r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary> = null;

        return;
    }

    private void openBinaryDictionaryLocked()
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        com.android.inputmethod.latin.BinaryDictionary $r1;
        java.io.File $r2, $r4;
        java.lang.String $r3, $r5;
        long $l0;
        java.util.Locale $r6;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        $r1 = new com.android.inputmethod.latin.BinaryDictionary;

        $r2 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.io.File mDictFile>;

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r4 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.io.File mDictFile>;

        $l0 = virtualinvoke $r4.<java.io.File: long length()>();

        $r6 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.Locale mLocale>;

        $r5 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.lang.String mDictType>;

        specialinvoke $r1.<com.android.inputmethod.latin.BinaryDictionary: void <init>(java.lang.String,long,long,boolean,java.util.Locale,java.lang.String,boolean)>($r3, 0L, $l0, 1, $r6, $r5, 1);

        r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary> = $r1;

        return;
    }

    private void createOnMemoryBinaryDictionaryLocked()
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        com.android.inputmethod.latin.BinaryDictionary $r1;
        java.io.File $r2;
        java.lang.String $r3, $r5;
        java.util.Locale $r4;
        java.util.Map $r6;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        $r1 = new com.android.inputmethod.latin.BinaryDictionary;

        $r2 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.io.File mDictFile>;

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r4 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.Locale mLocale>;

        $r5 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.lang.String mDictType>;

        $r6 = virtualinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.Map getHeaderAttributeMap()>();

        specialinvoke $r1.<com.android.inputmethod.latin.BinaryDictionary: void <init>(java.lang.String,boolean,java.util.Locale,java.lang.String,long,java.util.Map)>($r3, 1, $r4, $r5, 402L, $r6);

        r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary> = $r1;

        return;
    }

    public void clear()
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        com.android.inputmethod.latin.ExpandableBinaryDictionary$4 $r1;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        $r1 = new com.android.inputmethod.latin.ExpandableBinaryDictionary$4;

        specialinvoke $r1.<com.android.inputmethod.latin.ExpandableBinaryDictionary$4: void <init>(com.android.inputmethod.latin.ExpandableBinaryDictionary)>(r0);

        specialinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void asyncExecuteTaskWithWriteLock(java.lang.Runnable)>($r1);

        return;
    }

    protected void runGCIfRequired(boolean)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        boolean z0;
        com.android.inputmethod.latin.ExpandableBinaryDictionary$5 $r1;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        z0 := @parameter0: boolean;

        $r1 = new com.android.inputmethod.latin.ExpandableBinaryDictionary$5;

        specialinvoke $r1.<com.android.inputmethod.latin.ExpandableBinaryDictionary$5: void <init>(com.android.inputmethod.latin.ExpandableBinaryDictionary,boolean)>(r0, z0);

        specialinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void asyncExecuteTaskWithWriteLock(java.lang.Runnable)>($r1);

        return;
    }

    protected void runGCIfRequiredLocked(boolean)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        boolean z0, $z1;
        com.android.inputmethod.latin.BinaryDictionary $r1, $r2;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        $z1 = virtualinvoke $r1.<com.android.inputmethod.latin.BinaryDictionary: boolean needsToRunGC(boolean)>(z0);

        if $z1 == 0 goto label1;

        $r2 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        virtualinvoke $r2.<com.android.inputmethod.latin.BinaryDictionary: boolean flushWithGC()>();

     label1:
        return;
    }

    public void addUnigramEntryWithCheckingDistracter(java.lang.String, int, java.lang.String, int, boolean, boolean, int, com.android.inputmethod.latin.utils.DistracterFilter)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        java.lang.String r1, r2;
        int i0, i1, i2;
        boolean z0, z1;
        com.android.inputmethod.latin.utils.DistracterFilter r3;
        com.android.inputmethod.latin.ExpandableBinaryDictionary$6 $r4;
        com.android.inputmethod.latin.ExpandableBinaryDictionary$7 $r5;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        i2 := @parameter6: int;

        r3 := @parameter7: com.android.inputmethod.latin.utils.DistracterFilter;

        virtualinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void reloadDictionaryIfRequired()>();

        $r4 = new com.android.inputmethod.latin.ExpandableBinaryDictionary$6;

        specialinvoke $r4.<com.android.inputmethod.latin.ExpandableBinaryDictionary$6: void <init>(com.android.inputmethod.latin.ExpandableBinaryDictionary,com.android.inputmethod.latin.utils.DistracterFilter,java.lang.String)>(r0, r3, r1);

        $r5 = new com.android.inputmethod.latin.ExpandableBinaryDictionary$7;

        specialinvoke $r5.<com.android.inputmethod.latin.ExpandableBinaryDictionary$7: void <init>(com.android.inputmethod.latin.ExpandableBinaryDictionary,java.lang.String,int,java.lang.String,int,boolean,boolean,int)>(r0, r1, i0, r2, i1, z0, z1, i2);

        specialinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void asyncPreCheckAndExecuteTaskWithWriteLock(java.util.concurrent.Callable,java.lang.Runnable)>($r4, $r5);

        return;
    }

    protected void addUnigramLocked(java.lang.String, int, java.lang.String, int, boolean, boolean, int)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        java.lang.String r1, r2, $r5, $r8;
        int i0, i1, i2;
        boolean z0, z1, $z2;
        com.android.inputmethod.latin.BinaryDictionary $r3;
        java.lang.StringBuilder $r4, $r6, $r7;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        i2 := @parameter6: int;

        $r3 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        $z2 = virtualinvoke $r3.<com.android.inputmethod.latin.BinaryDictionary: boolean addUnigramEntry(java.lang.String,int,java.lang.String,int,boolean,boolean,boolean,int)>(r1, i0, r2, i1, 0, z0, z1, i2);

        if $z2 != 0 goto label1;

        $r5 = <com.android.inputmethod.latin.ExpandableBinaryDictionary: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot add unigram entry. word: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r5, $r8);

     label1:
        return;
    }

    public void removeUnigramEntryDynamically(java.lang.String)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        java.lang.String r1;
        com.android.inputmethod.latin.ExpandableBinaryDictionary$8 $r2;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void reloadDictionaryIfRequired()>();

        $r2 = new com.android.inputmethod.latin.ExpandableBinaryDictionary$8;

        specialinvoke $r2.<com.android.inputmethod.latin.ExpandableBinaryDictionary$8: void <init>(com.android.inputmethod.latin.ExpandableBinaryDictionary,java.lang.String)>(r0, r1);

        specialinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void asyncExecuteTaskWithWriteLock(java.lang.Runnable)>($r2);

        return;
    }

    public void addNgramEntry(com.android.inputmethod.latin.PrevWordsInfo, java.lang.String, int, int)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        com.android.inputmethod.latin.PrevWordsInfo r1;
        java.lang.String r2;
        int i0, i1;
        com.android.inputmethod.latin.ExpandableBinaryDictionary$9 $r3;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        r1 := @parameter0: com.android.inputmethod.latin.PrevWordsInfo;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        virtualinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void reloadDictionaryIfRequired()>();

        $r3 = new com.android.inputmethod.latin.ExpandableBinaryDictionary$9;

        specialinvoke $r3.<com.android.inputmethod.latin.ExpandableBinaryDictionary$9: void <init>(com.android.inputmethod.latin.ExpandableBinaryDictionary,com.android.inputmethod.latin.PrevWordsInfo,java.lang.String,int,int)>(r0, r1, r2, i0, i1);

        specialinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void asyncExecuteTaskWithWriteLock(java.lang.Runnable)>($r3);

        return;
    }

    protected void addNgramEntryLocked(com.android.inputmethod.latin.PrevWordsInfo, java.lang.String, int, int)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        com.android.inputmethod.latin.PrevWordsInfo r1;
        java.lang.String r2;
        int i0, i1;
        com.android.inputmethod.latin.BinaryDictionary $r3;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        r1 := @parameter0: com.android.inputmethod.latin.PrevWordsInfo;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        $z0 = virtualinvoke $r3.<com.android.inputmethod.latin.BinaryDictionary: boolean addNgramEntry(com.android.inputmethod.latin.PrevWordsInfo,java.lang.String,int,int)>(r1, r2, i0, i1);

        if $z0 != 0 goto label1;

     label1:
        return;
    }

    public void removeNgramDynamically(com.android.inputmethod.latin.PrevWordsInfo, java.lang.String)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        com.android.inputmethod.latin.PrevWordsInfo r1;
        java.lang.String r2;
        com.android.inputmethod.latin.ExpandableBinaryDictionary$10 $r3;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        r1 := @parameter0: com.android.inputmethod.latin.PrevWordsInfo;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void reloadDictionaryIfRequired()>();

        $r3 = new com.android.inputmethod.latin.ExpandableBinaryDictionary$10;

        specialinvoke $r3.<com.android.inputmethod.latin.ExpandableBinaryDictionary$10: void <init>(com.android.inputmethod.latin.ExpandableBinaryDictionary,com.android.inputmethod.latin.PrevWordsInfo,java.lang.String)>(r0, r1, r2);

        specialinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void asyncExecuteTaskWithWriteLock(java.lang.Runnable)>($r3);

        return;
    }

    public void addMultipleDictionaryEntriesDynamically(java.util.ArrayList, com.android.inputmethod.latin.ExpandableBinaryDictionary$AddMultipleDictionaryEntriesCallback)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        java.util.ArrayList r1;
        com.android.inputmethod.latin.ExpandableBinaryDictionary$AddMultipleDictionaryEntriesCallback r2;
        com.android.inputmethod.latin.ExpandableBinaryDictionary$11 $r3;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: com.android.inputmethod.latin.ExpandableBinaryDictionary$AddMultipleDictionaryEntriesCallback;

        virtualinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void reloadDictionaryIfRequired()>();

        $r3 = new com.android.inputmethod.latin.ExpandableBinaryDictionary$11;

        specialinvoke $r3.<com.android.inputmethod.latin.ExpandableBinaryDictionary$11: void <init>(com.android.inputmethod.latin.ExpandableBinaryDictionary,java.util.ArrayList,com.android.inputmethod.latin.ExpandableBinaryDictionary$AddMultipleDictionaryEntriesCallback)>(r0, r1, r2);

        specialinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void asyncExecuteTaskWithWriteLock(java.lang.Runnable)>($r3);

        return;
    }

    public java.util.ArrayList getSuggestions(com.android.inputmethod.latin.WordComposer, com.android.inputmethod.latin.PrevWordsInfo, com.android.inputmethod.keyboard.ProximityInfo, com.android.inputmethod.latin.settings.SettingsValuesForSuggestion, int, float[])
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        com.android.inputmethod.latin.WordComposer r1;
        com.android.inputmethod.latin.PrevWordsInfo r2;
        com.android.inputmethod.keyboard.ProximityInfo r3;
        com.android.inputmethod.latin.settings.SettingsValuesForSuggestion r4;
        int i0;
        float[] r5;
        boolean z0, $z1;
        java.util.ArrayList r6, r35;
        java.lang.Throwable r7, $r33;
        java.util.concurrent.locks.ReentrantReadWriteLock $r8, $r11, $r17, $r28, $r29, $r34;
        java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock $r9, $r13, $r16, $r26, $r30, $r32;
        java.util.concurrent.TimeUnit $r10;
        com.android.inputmethod.latin.BinaryDictionary $r12, $r14, $r15;
        java.lang.String $r18, $r20, $r24, $r31;
        java.lang.StringBuilder $r19, $r21, $r22, $r23, $r25;
        java.lang.InterruptedException $r27, r36;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        r1 := @parameter0: com.android.inputmethod.latin.WordComposer;

        r2 := @parameter1: com.android.inputmethod.latin.PrevWordsInfo;

        r3 := @parameter2: com.android.inputmethod.keyboard.ProximityInfo;

        r4 := @parameter3: com.android.inputmethod.latin.settings.SettingsValuesForSuggestion;

        i0 := @parameter4: int;

        r5 := @parameter5: float[];

        virtualinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void reloadDictionaryIfRequired()>();

        z0 = 0;

     label01:
        $r8 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r9 = virtualinvoke $r8.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        $r10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        z0 = virtualinvoke $r9.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: boolean tryLock(long,java.util.concurrent.TimeUnit)>(100L, $r10);

        if z0 == 0 goto label08;

        $r12 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        if $r12 != null goto label04;

     label02:
        if z0 == 0 goto label03;

        $r28 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r26 = virtualinvoke $r28.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        virtualinvoke $r26.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();

     label03:
        return null;

     label04:
        $r14 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        r35 = virtualinvoke $r14.<com.android.inputmethod.latin.BinaryDictionary: java.util.ArrayList getSuggestions(com.android.inputmethod.latin.WordComposer,com.android.inputmethod.latin.PrevWordsInfo,com.android.inputmethod.keyboard.ProximityInfo,com.android.inputmethod.latin.settings.SettingsValuesForSuggestion,int,float[])>(r1, r2, r3, r4, i0, r5);

        $r15 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        $z1 = virtualinvoke $r15.<com.android.inputmethod.latin.BinaryDictionary: boolean isCorrupted()>();

        if $z1 == 0 goto label05;

        $r18 = <com.android.inputmethod.latin.ExpandableBinaryDictionary: java.lang.String TAG>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dictionary (");

        $r20 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.lang.String mDictName>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is corrupted. ");

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remove and regenerate it.");

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r18, $r24);

        specialinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void removeBinaryDictionary()>();

     label05:
        r6 = r35;

     label06:
        if z0 == 0 goto label07;

        $r17 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r16 = virtualinvoke $r17.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        virtualinvoke $r16.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();

     label07:
        return r6;

     label08:
        if z0 == 0 goto label14;

        $r11 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r13 = virtualinvoke $r11.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        virtualinvoke $r13.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();

        goto label14;

     label09:
        $r27 := @caughtexception;

        r36 = $r27;

        $r31 = <com.android.inputmethod.latin.ExpandableBinaryDictionary: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r31, "Interrupted tryLock() in getSuggestionsWithSessionId().", r36);

     label10:
        if z0 == 0 goto label14;

        $r29 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r30 = virtualinvoke $r29.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        virtualinvoke $r30.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();

        goto label14;

     label11:
        $r33 := @caughtexception;

        r7 = $r33;

     label12:
        if z0 == 0 goto label13;

        $r34 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r32 = virtualinvoke $r34.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        virtualinvoke $r32.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();

     label13:
        throw r7;

     label14:
        return null;

        catch java.lang.InterruptedException from label01 to label02 with label09;
        catch java.lang.InterruptedException from label04 to label06 with label09;
        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label04 to label06 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public boolean isInDictionary(java.lang.String)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        java.lang.String r1, $r14;
        boolean z0, z1, z2;
        java.lang.Throwable r2, $r18;
        java.util.concurrent.locks.ReentrantReadWriteLock $r3, $r6, $r9, $r11, $r16, $r17;
        java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock $r4, $r7, $r10, $r13, $r15, $r19;
        java.util.concurrent.TimeUnit $r5;
        com.android.inputmethod.latin.BinaryDictionary $r8;
        java.lang.InterruptedException $r12, r20;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void reloadDictionaryIfRequired()>();

        z0 = 0;

     label01:
        $r3 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        $r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        z0 = virtualinvoke $r4.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: boolean tryLock(long,java.util.concurrent.TimeUnit)>(100L, $r5);

        if z0 == 0 goto label07;

        $r8 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        if $r8 != null goto label04;

        z1 = 0;

     label02:
        if z0 == 0 goto label03;

        $r11 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r13 = virtualinvoke $r11.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        virtualinvoke $r13.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();

     label03:
        return z1;

     label04:
        z2 = virtualinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: boolean isInDictionaryLocked(java.lang.String)>(r1);

     label05:
        if z0 == 0 goto label06;

        $r9 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r10 = virtualinvoke $r9.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        virtualinvoke $r10.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();

     label06:
        return z2;

     label07:
        if z0 == 0 goto label13;

        $r6 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r7 = virtualinvoke $r6.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        virtualinvoke $r7.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();

        goto label13;

     label08:
        $r12 := @caughtexception;

        r20 = $r12;

        $r14 = <com.android.inputmethod.latin.ExpandableBinaryDictionary: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r14, "Interrupted tryLock() in isInDictionary().", r20);

     label09:
        if z0 == 0 goto label13;

        $r16 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r15 = virtualinvoke $r16.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        virtualinvoke $r15.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();

        goto label13;

     label10:
        $r18 := @caughtexception;

        r2 = $r18;

     label11:
        if z0 == 0 goto label12;

        $r17 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r19 = virtualinvoke $r17.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        virtualinvoke $r19.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();

     label12:
        throw r2;

     label13:
        return 0;

        catch java.lang.InterruptedException from label01 to label02 with label08;
        catch java.lang.InterruptedException from label04 to label05 with label08;
        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    protected boolean isInDictionaryLocked(java.lang.String)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        java.lang.String r1;
        com.android.inputmethod.latin.BinaryDictionary $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        if $r2 != null goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        $z0 = virtualinvoke $r3.<com.android.inputmethod.latin.BinaryDictionary: boolean isInDictionary(java.lang.String)>(r1);

        return $z0;
    }

    public int getMaxFrequencyOfExactMatches(java.lang.String)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        java.lang.String r1, $r18;
        boolean z0;
        byte b0;
        java.lang.Throwable r2, $r15;
        java.util.concurrent.locks.ReentrantReadWriteLock $r3, $r6, $r10, $r13, $r14, $r20;
        java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock $r4, $r7, $r11, $r12, $r17, $r19;
        java.util.concurrent.TimeUnit $r5;
        com.android.inputmethod.latin.BinaryDictionary $r8, $r9;
        java.lang.InterruptedException $r16, r21;
        int i2;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void reloadDictionaryIfRequired()>();

        z0 = 0;

     label01:
        $r3 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        $r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        z0 = virtualinvoke $r4.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: boolean tryLock(long,java.util.concurrent.TimeUnit)>(100L, $r5);

        if z0 == 0 goto label07;

        $r8 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        if $r8 != null goto label04;

        b0 = -1;

     label02:
        if z0 == 0 goto label03;

        $r13 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r12 = virtualinvoke $r13.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        virtualinvoke $r12.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();

     label03:
        return b0;

     label04:
        $r9 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        i2 = virtualinvoke $r9.<com.android.inputmethod.latin.BinaryDictionary: int getMaxFrequencyOfExactMatches(java.lang.String)>(r1);

     label05:
        if z0 == 0 goto label06;

        $r10 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r11 = virtualinvoke $r10.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        virtualinvoke $r11.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();

     label06:
        return i2;

     label07:
        if z0 == 0 goto label13;

        $r6 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r7 = virtualinvoke $r6.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        virtualinvoke $r7.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();

        goto label13;

     label08:
        $r16 := @caughtexception;

        r21 = $r16;

        $r18 = <com.android.inputmethod.latin.ExpandableBinaryDictionary: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r18, "Interrupted tryLock() in getMaxFrequencyOfExactMatches().", r21);

     label09:
        if z0 == 0 goto label13;

        $r20 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r19 = virtualinvoke $r20.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        virtualinvoke $r19.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();

        goto label13;

     label10:
        $r15 := @caughtexception;

        r2 = $r15;

     label11:
        if z0 == 0 goto label12;

        $r14 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r17 = virtualinvoke $r14.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        virtualinvoke $r17.<java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock: void unlock()>();

     label12:
        throw r2;

     label13:
        return -1;

        catch java.lang.InterruptedException from label01 to label02 with label08;
        catch java.lang.InterruptedException from label04 to label05 with label08;
        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    protected boolean isValidNgramLocked(com.android.inputmethod.latin.PrevWordsInfo, java.lang.String)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        com.android.inputmethod.latin.PrevWordsInfo r1;
        java.lang.String r2;
        com.android.inputmethod.latin.BinaryDictionary $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        r1 := @parameter0: com.android.inputmethod.latin.PrevWordsInfo;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        if $r3 != null goto label1;

        return 0;

     label1:
        $r4 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        $z0 = virtualinvoke $r4.<com.android.inputmethod.latin.BinaryDictionary: boolean isValidNgram(com.android.inputmethod.latin.PrevWordsInfo,java.lang.String)>(r1, r2);

        return $z0;
    }

    private void loadBinaryDictionaryLocked()
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        com.android.inputmethod.latin.BinaryDictionary r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2;
        int $i0;
        java.lang.StringBuilder $r5, $r7, $r9;
        java.lang.String $r6, $r8, $r10;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        r1 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        specialinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void openBinaryDictionaryLocked()>();

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.inputmethod.latin.BinaryDictionary: void close()>();

     label1:
        $r2 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        $z0 = virtualinvoke $r2.<com.android.inputmethod.latin.BinaryDictionary: boolean isValidDictionary()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        $i0 = virtualinvoke $r3.<com.android.inputmethod.latin.BinaryDictionary: int getFormatVersion()>();

        $z1 = specialinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: boolean needsToMigrateDictionary(int)>($i0);

        if $z1 == 0 goto label2;

        $r4 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        $z2 = virtualinvoke $r4.<com.android.inputmethod.latin.BinaryDictionary: boolean migrateTo(int)>(402);

        if $z2 != 0 goto label2;

        $r6 = <com.android.inputmethod.latin.ExpandableBinaryDictionary: java.lang.String TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dictionary migration failed: ");

        $r8 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.lang.String mDictName>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r6, $r10);

        specialinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void removeBinaryDictionaryLocked()>();

     label2:
        return;
    }

    private void createNewDictionaryLocked()
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        com.android.inputmethod.latin.BinaryDictionary $r1;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        specialinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void removeBinaryDictionaryLocked()>();

        specialinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void createOnMemoryBinaryDictionaryLocked()>();

        virtualinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void loadInitialContentsLocked()>();

        $r1 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        virtualinvoke $r1.<com.android.inputmethod.latin.BinaryDictionary: boolean flushWithGCIfHasUpdated()>();

        return;
    }

    protected void setNeedsToRecreate()
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: boolean mNeedsToRecreate> = 1;

        return;
    }

    public final void reloadDictionaryIfRequired()
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        $z0 = specialinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: boolean isReloadRequired()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void asyncReloadDictionary()>();

        return;
    }

    private boolean isReloadRequired()
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        com.android.inputmethod.latin.BinaryDictionary $r1;
        boolean $z0, $z1;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        $r1 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        if $r1 == null goto label1;

        $z0 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: boolean mNeedsToRecreate>;

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private final void asyncReloadDictionary()
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        boolean $z0;
        com.android.inputmethod.latin.ExpandableBinaryDictionary$12 $r2;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        $r1 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.concurrent.atomic.AtomicBoolean mIsReloading>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        if $z0 == 0 goto label1;

        $r2 = new com.android.inputmethod.latin.ExpandableBinaryDictionary$12;

        specialinvoke $r2.<com.android.inputmethod.latin.ExpandableBinaryDictionary$12: void <init>(com.android.inputmethod.latin.ExpandableBinaryDictionary)>(r0);

        specialinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void asyncExecuteTaskWithWriteLock(java.lang.Runnable)>($r2);

     label1:
        return;
    }

    public void asyncFlushBinaryDictionary()
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        com.android.inputmethod.latin.ExpandableBinaryDictionary$13 $r1;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        $r1 = new com.android.inputmethod.latin.ExpandableBinaryDictionary$13;

        specialinvoke $r1.<com.android.inputmethod.latin.ExpandableBinaryDictionary$13: void <init>(com.android.inputmethod.latin.ExpandableBinaryDictionary)>(r0);

        specialinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void asyncExecuteTaskWithWriteLock(java.lang.Runnable)>($r1);

        return;
    }

    public void waitAllTasksForTests()
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        java.util.concurrent.CountDownLatch r1, $r3;
        java.lang.InterruptedException r2, $r7;
        java.lang.String $r4, $r8;
        java.util.concurrent.ExecutorService $r5;
        com.android.inputmethod.latin.ExpandableBinaryDictionary$14 $r6;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        $r3 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r3.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r1 = $r3;

        $r4 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.lang.String mDictName>;

        $r5 = staticinvoke <com.android.inputmethod.latin.utils.ExecutorUtils: java.util.concurrent.ExecutorService getExecutor(java.lang.String)>($r4);

        $r6 = new com.android.inputmethod.latin.ExpandableBinaryDictionary$14;

        specialinvoke $r6.<com.android.inputmethod.latin.ExpandableBinaryDictionary$14: void <init>(com.android.inputmethod.latin.ExpandableBinaryDictionary,java.util.concurrent.CountDownLatch)>(r0, r1);

        interfaceinvoke $r5.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r6);

     label1:
        virtualinvoke r1.<java.util.concurrent.CountDownLatch: void await()>();

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        $r8 = <com.android.inputmethod.latin.ExpandableBinaryDictionary: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r8, "Interrupted while waiting for finishing dictionary operations.", r2);

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public void clearAndFlushDictionaryWithAdditionalAttributes(java.util.Map)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        java.util.Map r1;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        r1 := @parameter0: java.util.Map;

        r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.Map mAdditionalAttributeMap> = r1;

        virtualinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void clear()>();

        return;
    }

    public void dumpAllWordsForDebug()
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        java.util.concurrent.locks.ReentrantReadWriteLock $r1;
        java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock $r2;
        com.android.inputmethod.latin.ExpandableBinaryDictionary$15 $r3;

        r0 := @this: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        virtualinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void reloadDictionaryIfRequired()>();

        $r1 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.concurrent.locks.ReentrantReadWriteLock mLock>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock()>();

        $r3 = new com.android.inputmethod.latin.ExpandableBinaryDictionary$15;

        specialinvoke $r3.<com.android.inputmethod.latin.ExpandableBinaryDictionary$15: void <init>(com.android.inputmethod.latin.ExpandableBinaryDictionary)>(r0);

        specialinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void asyncExecuteTaskWithLock(java.util.concurrent.locks.Lock,java.lang.Runnable)>($r2, $r3);

        return;
    }

    static java.lang.String access$000()
    {
        java.lang.String $r0;

        $r0 = <com.android.inputmethod.latin.ExpandableBinaryDictionary: java.lang.String TAG>;

        return $r0;
    }

    static com.android.inputmethod.latin.BinaryDictionary access$100(com.android.inputmethod.latin.ExpandableBinaryDictionary)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        com.android.inputmethod.latin.BinaryDictionary $r1;

        r0 := @parameter0: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        $r1 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary>;

        return $r1;
    }

    static com.android.inputmethod.latin.BinaryDictionary access$102(com.android.inputmethod.latin.ExpandableBinaryDictionary, com.android.inputmethod.latin.BinaryDictionary)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        com.android.inputmethod.latin.BinaryDictionary r1;

        r0 := @parameter0: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        r1 := @parameter1: com.android.inputmethod.latin.BinaryDictionary;

        r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: com.android.inputmethod.latin.BinaryDictionary mBinaryDictionary> = r1;

        return r1;
    }

    static void access$200(com.android.inputmethod.latin.ExpandableBinaryDictionary)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;

        r0 := @parameter0: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        specialinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void removeBinaryDictionaryLocked()>();

        return;
    }

    static void access$300(com.android.inputmethod.latin.ExpandableBinaryDictionary)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;

        r0 := @parameter0: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        specialinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void createOnMemoryBinaryDictionaryLocked()>();

        return;
    }

    static java.util.Locale access$400(com.android.inputmethod.latin.ExpandableBinaryDictionary)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        java.util.Locale $r1;

        r0 := @parameter0: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        $r1 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.Locale mLocale>;

        return $r1;
    }

    static java.io.File access$500(com.android.inputmethod.latin.ExpandableBinaryDictionary)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        java.io.File $r1;

        r0 := @parameter0: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        $r1 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.io.File mDictFile>;

        return $r1;
    }

    static boolean access$600(com.android.inputmethod.latin.ExpandableBinaryDictionary)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        boolean $z0;

        r0 := @parameter0: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        $z0 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: boolean mNeedsToRecreate>;

        return $z0;
    }

    static void access$700(com.android.inputmethod.latin.ExpandableBinaryDictionary)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;

        r0 := @parameter0: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        specialinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void createNewDictionaryLocked()>();

        return;
    }

    static void access$800(com.android.inputmethod.latin.ExpandableBinaryDictionary)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;

        r0 := @parameter0: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        specialinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: void loadBinaryDictionaryLocked()>();

        return;
    }

    static boolean access$900(com.android.inputmethod.latin.ExpandableBinaryDictionary, int)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: boolean matchesExpectedBinaryDictFormatVersionForThisType(int)>(i0);

        return $z0;
    }

    static boolean access$602(com.android.inputmethod.latin.ExpandableBinaryDictionary, boolean)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        boolean z0;

        r0 := @parameter0: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        z0 := @parameter1: boolean;

        r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: boolean mNeedsToRecreate> = z0;

        return z0;
    }

    static java.util.concurrent.atomic.AtomicBoolean access$1000(com.android.inputmethod.latin.ExpandableBinaryDictionary)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @parameter0: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        $r1 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.util.concurrent.atomic.AtomicBoolean mIsReloading>;

        return $r1;
    }

    static java.lang.String access$1100(com.android.inputmethod.latin.ExpandableBinaryDictionary)
    {
        com.android.inputmethod.latin.ExpandableBinaryDictionary r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.inputmethod.latin.ExpandableBinaryDictionary;

        $r1 = r0.<com.android.inputmethod.latin.ExpandableBinaryDictionary: java.lang.String mDictName>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.inputmethod.latin.ExpandableBinaryDictionary: java.lang.String DICT_FILE_EXTENSION> = ".dict";

        <com.android.inputmethod.latin.ExpandableBinaryDictionary: int DICTIONARY_FORMAT_VERSION> = 402;

        <com.android.inputmethod.latin.ExpandableBinaryDictionary: int MAX_WORD_LENGTH> = 48;

        <com.android.inputmethod.latin.ExpandableBinaryDictionary: int DEFAULT_MAX_BIGRAM_COUNT> = 10000;

        <com.android.inputmethod.latin.ExpandableBinaryDictionary: int DEFAULT_MAX_UNIGRAM_COUNT> = 10000;

        <com.android.inputmethod.latin.ExpandableBinaryDictionary: int TIMEOUT_FOR_READ_OPS_IN_MILLISECONDS> = 100;

        <com.android.inputmethod.latin.ExpandableBinaryDictionary: boolean DBG_STRESS_TEST> = 0;

        <com.android.inputmethod.latin.ExpandableBinaryDictionary: boolean DEBUG> = 0;

        $r0 = class "com/android/inputmethod/latin/ExpandableBinaryDictionary";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.inputmethod.latin.ExpandableBinaryDictionary: java.lang.String TAG> = $r1;

        return;
    }
}
