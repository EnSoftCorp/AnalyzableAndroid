public final class com.android.inputmethod.latin.utils.TextRange extends java.lang.Object
{
    private final java.lang.CharSequence mTextAtCursor;
    private final int mWordAtCursorStartIndex;
    private final int mWordAtCursorEndIndex;
    private final int mCursorIndex;
    public final java.lang.CharSequence mWord;
    public final boolean mHasUrlSpans;

    public int getNumberOfCharsInWordBeforeCursor()
    {
        com.android.inputmethod.latin.utils.TextRange r0;
        int $i0, $i1, $i2;

        r0 := @this: com.android.inputmethod.latin.utils.TextRange;

        $i1 = r0.<com.android.inputmethod.latin.utils.TextRange: int mCursorIndex>;

        $i0 = r0.<com.android.inputmethod.latin.utils.TextRange: int mWordAtCursorStartIndex>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public int getNumberOfCharsInWordAfterCursor()
    {
        com.android.inputmethod.latin.utils.TextRange r0;
        int $i0, $i1, $i2;

        r0 := @this: com.android.inputmethod.latin.utils.TextRange;

        $i1 = r0.<com.android.inputmethod.latin.utils.TextRange: int mWordAtCursorEndIndex>;

        $i0 = r0.<com.android.inputmethod.latin.utils.TextRange: int mCursorIndex>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public int length()
    {
        com.android.inputmethod.latin.utils.TextRange r0;
        java.lang.CharSequence $r1;
        int $i0;

        r0 := @this: com.android.inputmethod.latin.utils.TextRange;

        $r1 = r0.<com.android.inputmethod.latin.utils.TextRange: java.lang.CharSequence mWord>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        return $i0;
    }

    public android.text.style.SuggestionSpan[] getSuggestionSpansAtWord()
    {
        com.android.inputmethod.latin.utils.TextRange r0;
        android.text.Spanned r1;
        android.text.style.SuggestionSpan[] r2, $r5, $r10;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        android.text.style.SuggestionSpan r3, $r11, $r12, $r13, $r14;
        java.lang.CharSequence $r4, $r6, $r7;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r8, $r9;

        r0 := @this: com.android.inputmethod.latin.utils.TextRange;

        $r4 = r0.<com.android.inputmethod.latin.utils.TextRange: java.lang.CharSequence mTextAtCursor>;

        $z0 = $r4 instanceof android.text.Spanned;

        if $z0 == 0 goto label01;

        $r6 = r0.<com.android.inputmethod.latin.utils.TextRange: java.lang.CharSequence mWord>;

        $z1 = $r6 instanceof android.text.Spanned;

        if $z1 != 0 goto label02;

     label01:
        $r5 = newarray (android.text.style.SuggestionSpan)[0];

        return $r5;

     label02:
        $r7 = r0.<com.android.inputmethod.latin.utils.TextRange: java.lang.CharSequence mTextAtCursor>;

        r1 = (android.text.Spanned) $r7;

        $i5 = r0.<com.android.inputmethod.latin.utils.TextRange: int mWordAtCursorStartIndex>;

        $i8 = $i5 - 1;

        $i7 = r0.<com.android.inputmethod.latin.utils.TextRange: int mWordAtCursorEndIndex>;

        $i6 = $i7 + 1;

        $r8 = interfaceinvoke r1.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i8, $i6, class "android/text/style/SuggestionSpan");

        r2 = (android.text.style.SuggestionSpan[]) $r8;

        i0 = 0;

        i1 = 0;

     label03:
        $i9 = lengthof r2;

        if i0 >= $i9 goto label09;

        r3 = r2[i0];

        if null != r3 goto label04;

        goto label08;

     label04:
        i2 = interfaceinvoke r1.<android.text.Spanned: int getSpanStart(java.lang.Object)>(r3);

        i3 = interfaceinvoke r1.<android.text.Spanned: int getSpanEnd(java.lang.Object)>(r3);

        i4 = i0 + 1;

     label05:
        $i10 = lengthof r2;

        if i4 >= $i10 goto label07;

        $r12 = r2[i4];

        $z2 = virtualinvoke r3.<android.text.style.SuggestionSpan: boolean equals(java.lang.Object)>($r12);

        if $z2 == 0 goto label06;

        $r14 = r2[i4];

        $i14 = interfaceinvoke r1.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r14);

        i2 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i14);

        $r13 = r2[i4];

        $i15 = interfaceinvoke r1.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r13);

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(i3, $i15);

        r2[i4] = null;

     label06:
        i4 = i4 + 1;

        goto label05;

     label07:
        $i12 = r0.<com.android.inputmethod.latin.utils.TextRange: int mWordAtCursorStartIndex>;

        if i2 != $i12 goto label08;

        $i11 = r0.<com.android.inputmethod.latin.utils.TextRange: int mWordAtCursorEndIndex>;

        if i3 != $i11 goto label08;

        $i13 = i1;

        i1 = i1 + 1;

        $r11 = r2[i0];

        r2[$i13] = $r11;

     label08:
        i0 = i0 + 1;

        goto label03;

     label09:
        if i1 != i0 goto label10;

        $r10 = r2;

        goto label11;

     label10:
        $r9 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>(r2, 0, i1);

        $r10 = (android.text.style.SuggestionSpan[]) $r9;

     label11:
        return $r10;
    }

    public void <init>(java.lang.CharSequence, int, int, int, boolean)
    {
        com.android.inputmethod.latin.utils.TextRange r0;
        java.lang.CharSequence r1, $r3, $r4;
        int i0, i1, i2, $i3, $i4, $i5;
        boolean z0;
        java.lang.IndexOutOfBoundsException $r2;

        r0 := @this: com.android.inputmethod.latin.utils.TextRange;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 := @parameter4: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 < 0 goto label1;

        if i2 < i0 goto label1;

        if i2 > i1 goto label1;

        $i3 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if i1 <= $i3 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label2:
        r0.<com.android.inputmethod.latin.utils.TextRange: java.lang.CharSequence mTextAtCursor> = r1;

        r0.<com.android.inputmethod.latin.utils.TextRange: int mWordAtCursorStartIndex> = i0;

        r0.<com.android.inputmethod.latin.utils.TextRange: int mWordAtCursorEndIndex> = i1;

        r0.<com.android.inputmethod.latin.utils.TextRange: int mCursorIndex> = i2;

        r0.<com.android.inputmethod.latin.utils.TextRange: boolean mHasUrlSpans> = z0;

        $r3 = r0.<com.android.inputmethod.latin.utils.TextRange: java.lang.CharSequence mTextAtCursor>;

        $i5 = r0.<com.android.inputmethod.latin.utils.TextRange: int mWordAtCursorStartIndex>;

        $i4 = r0.<com.android.inputmethod.latin.utils.TextRange: int mWordAtCursorEndIndex>;

        $r4 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>($i5, $i4);

        r0.<com.android.inputmethod.latin.utils.TextRange: java.lang.CharSequence mWord> = $r4;

        return;
    }
}
