public final class com.android.inputmethod.latin.RichInputConnection extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final boolean DBG;
    private static final boolean DEBUG_PREVIOUS_TEXT;
    private static final boolean DEBUG_BATCH_NESTING;
    private static final int LOOKBACK_CHARACTER_NUM;
    private static final int INVALID_CURSOR_POSITION;
    private int mExpectedSelStart;
    private int mExpectedSelEnd;
    private final java.lang.StringBuilder mCommittedTextBeforeComposingText;
    private final java.lang.StringBuilder mComposingText;
    private android.text.SpannableStringBuilder mTempObjectForCommitText;
    private boolean mLastCommittedTextHasBackgroundColor;
    private final android.inputmethodservice.InputMethodService mParent;
    android.view.inputmethod.InputConnection mIC;
    int mNestLevel;
    private boolean mCursorAnchorInfoMonitorEnabled;

    public void <init>(android.inputmethodservice.InputMethodService)
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        android.inputmethodservice.InputMethodService r1;
        java.lang.StringBuilder $r2, $r3;
        android.text.SpannableStringBuilder $r4;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        r1 := @parameter0: android.inputmethodservice.InputMethodService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart> = -1;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelEnd> = -1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mCommittedTextBeforeComposingText> = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mComposingText> = $r3;

        $r4 = new android.text.SpannableStringBuilder;

        specialinvoke $r4.<android.text.SpannableStringBuilder: void <init>()>();

        r0.<com.android.inputmethod.latin.RichInputConnection: android.text.SpannableStringBuilder mTempObjectForCommitText> = $r4;

        r0.<com.android.inputmethod.latin.RichInputConnection: boolean mLastCommittedTextHasBackgroundColor> = 0;

        r0.<com.android.inputmethod.latin.RichInputConnection: boolean mCursorAnchorInfoMonitorEnabled> = 0;

        r0.<com.android.inputmethod.latin.RichInputConnection: android.inputmethodservice.InputMethodService mParent> = r1;

        r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC> = null;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mNestLevel> = 0;

        return;
    }

    private void checkConsistencyForDebug()
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        android.view.inputmethod.ExtractedTextRequest r1, $r7;
        android.view.inputmethod.ExtractedText r2;
        java.lang.CharSequence r3, $r13;
        java.lang.StringBuilder r4, $r9, $r10, $r11, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r28, $r32, $r34, $r35, $r36, $r38;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i18, $i19;
        java.lang.String r5, r6, $r12, $r29, $r30, $r31, $r33, $r37;
        android.view.inputmethod.InputConnection $r8;
        android.inputmethodservice.InputMethodService $r26;
        com.android.inputmethod.latin.LatinIME $r27;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        $r7 = new android.view.inputmethod.ExtractedTextRequest;

        specialinvoke $r7.<android.view.inputmethod.ExtractedTextRequest: void <init>()>();

        r1 = $r7;

        r1.<android.view.inputmethod.ExtractedTextRequest: int hintMaxChars> = 0;

        r1.<android.view.inputmethod.ExtractedTextRequest: int hintMaxLines> = 0;

        r1.<android.view.inputmethod.ExtractedTextRequest: int token> = 1;

        r1.<android.view.inputmethod.ExtractedTextRequest: int flags> = 0;

        $r8 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        r2 = interfaceinvoke $r8.<android.view.inputmethod.InputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>(r1, 0);

        r3 = virtualinvoke r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>(1024, 0);

        $r9 = new java.lang.StringBuilder;

        $r10 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mCommittedTextBeforeComposingText>;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.CharSequence)>($r10);

        $r11 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mComposingText>;

        r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r11);

        if null == r2 goto label1;

        if null != r3 goto label2;

     label1:
        return;

     label2:
        $i2 = interfaceinvoke r3.<java.lang.CharSequence: int length()>();

        $i1 = virtualinvoke r4.<java.lang.StringBuilder: int length()>();

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i1);

        $i3 = virtualinvoke r4.<java.lang.StringBuilder: int length()>();

        if $i3 <= i0 goto label3;

        $i18 = virtualinvoke r4.<java.lang.StringBuilder: int length()>();

        $i19 = $i18 - i0;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>(0, $i19);

     label3:
        $i5 = interfaceinvoke r3.<java.lang.CharSequence: int length()>();

        if $i5 > i0 goto label4;

        $r12 = interfaceinvoke r3.<java.lang.CharSequence: java.lang.String toString()>();

        goto label5;

     label4:
        $i4 = interfaceinvoke r3.<java.lang.CharSequence: int length()>();

        $i7 = $i4 - i0;

        $i6 = interfaceinvoke r3.<java.lang.CharSequence: int length()>();

        $r13 = interfaceinvoke r3.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>($i7, $i6);

        $r12 = interfaceinvoke $r13.<java.lang.CharSequence: java.lang.String toString()>();

     label5:
        r5 = $r12;

        $i8 = r2.<android.view.inputmethod.ExtractedText: int selectionStart>;

        $i9 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        if $i8 != $i9 goto label6;

        $r31 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        if $z0 != 0 goto label7;

     label6:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected selection start = ");

        $i10 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nActual selection start = ");

        $i11 = r2.<android.view.inputmethod.ExtractedText: int selectionStart>;

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nExpected text = ");

        $i12 = virtualinvoke r4.<java.lang.StringBuilder: int length()>();

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nActual text = ");

        $i13 = virtualinvoke r5.<java.lang.String: int length()>();

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r6 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = r0.<com.android.inputmethod.latin.RichInputConnection: android.inputmethodservice.InputMethodService mParent>;

        $r27 = (com.android.inputmethod.latin.LatinIME) $r26;

        virtualinvoke $r27.<com.android.inputmethod.latin.LatinIME: void debugDumpStateAndCrashWithException(java.lang.String)>(r6);

        goto label8;

     label7:
        $r30 = <com.android.inputmethod.latin.RichInputConnection: java.lang.String TAG>;

        $r29 = staticinvoke <com.android.inputmethod.latin.utils.DebugLogUtils: java.lang.String getStackTrace(int)>(2);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r30, $r29);

        $r33 = <com.android.inputmethod.latin.RichInputConnection: java.lang.String TAG>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exp <> Actual : ");

        $i16 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" <> ");

        $i15 = r2.<android.view.inputmethod.ExtractedText: int selectionStart>;

        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r33, $r37);

     label8:
        return;
    }

    public void beginBatchEdit()
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5;
        android.inputmethodservice.InputMethodService $r6;
        android.view.inputmethod.InputConnection $r7, $r8, $r9;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        $i0 = r0.<com.android.inputmethod.latin.RichInputConnection: int mNestLevel>;

        $i1 = $i0 + 1;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mNestLevel> = $i1;

        if $i1 != 1 goto label1;

        $r6 = r0.<com.android.inputmethod.latin.RichInputConnection: android.inputmethodservice.InputMethodService mParent>;

        $r7 = virtualinvoke $r6.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC> = $r7;

        $r8 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        if null == $r8 goto label2;

        $r9 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        interfaceinvoke $r9.<android.view.inputmethod.InputConnection: boolean beginBatchEdit()>();

        goto label2;

     label1:
        $r2 = <com.android.inputmethod.latin.RichInputConnection: java.lang.String TAG>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Nest level too deep : ");

        $i2 = r0.<com.android.inputmethod.latin.RichInputConnection: int mNestLevel>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, $r5);

     label2:
        return;
    }

    public void endBatchEdit()
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        int $i0, $i1, $i2;
        android.view.inputmethod.InputConnection $r1, $r2;
        java.lang.String $r3;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        $i0 = r0.<com.android.inputmethod.latin.RichInputConnection: int mNestLevel>;

        if $i0 > 0 goto label1;

        $r3 = <com.android.inputmethod.latin.RichInputConnection: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, "Batch edit not in progress!");

     label1:
        $i1 = r0.<com.android.inputmethod.latin.RichInputConnection: int mNestLevel>;

        $i2 = $i1 - 1;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mNestLevel> = $i2;

        if $i2 != 0 goto label2;

        $r1 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        if null == $r1 goto label2;

        $r2 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        interfaceinvoke $r2.<android.view.inputmethod.InputConnection: boolean endBatchEdit()>();

     label2:
        return;
    }

    public boolean resetCachesUponCursorMoveAndReturnSuccess(int, int, boolean)
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        int i0, i1;
        boolean z0, z1;
        java.lang.StringBuilder $r1;
        android.view.inputmethod.InputConnection $r2, $r3;
        java.lang.String $r4;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart> = i0;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelEnd> = i1;

        $r1 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mComposingText>;

        virtualinvoke $r1.<java.lang.StringBuilder: void setLength(int)>(0);

        z1 = specialinvoke r0.<com.android.inputmethod.latin.RichInputConnection: boolean reloadTextCache()>();

        if z1 != 0 goto label1;

        $r4 = <com.android.inputmethod.latin.RichInputConnection: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, "Will try to retrieve text later.");

        return 0;

     label1:
        $r2 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        if null == $r2 goto label2;

        if z0 == 0 goto label2;

        $r3 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        interfaceinvoke $r3.<android.view.inputmethod.InputConnection: boolean finishComposingText()>();

     label2:
        return 1;
    }

    private boolean reloadTextCache()
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        java.lang.CharSequence r1, $r7;
        java.lang.StringBuilder $r2, $r8;
        android.inputmethodservice.InputMethodService $r3;
        android.view.inputmethod.InputConnection $r4, $r5, $r6;
        java.lang.String $r10;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        $r2 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mCommittedTextBeforeComposingText>;

        virtualinvoke $r2.<java.lang.StringBuilder: void setLength(int)>(0);

        $r3 = r0.<com.android.inputmethod.latin.RichInputConnection: android.inputmethodservice.InputMethodService mParent>;

        $r4 = virtualinvoke $r3.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC> = $r4;

        $r5 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        if null != $r5 goto label1;

        $r7 = null;

        goto label2;

     label1:
        $r6 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        $r7 = interfaceinvoke $r6.<android.view.inputmethod.InputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>(1024, 0);

     label2:
        r1 = $r7;

        if null != r1 goto label3;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart> = -1;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelEnd> = -1;

        $r10 = <com.android.inputmethod.latin.RichInputConnection: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r10, "Unable to connect to the editor to retrieve text.");

        return 0;

     label3:
        $r8 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mCommittedTextBeforeComposingText>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r1);

        return 1;
    }

    private void checkBatchEdit()
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, $r6, $r7;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        $i0 = r0.<com.android.inputmethod.latin.RichInputConnection: int mNestLevel>;

        if $i0 == 1 goto label1;

        $r2 = <com.android.inputmethod.latin.RichInputConnection: java.lang.String TAG>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Batch edit level incorrect : ");

        $i1 = r0.<com.android.inputmethod.latin.RichInputConnection: int mNestLevel>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, $r5);

        $r6 = <com.android.inputmethod.latin.RichInputConnection: java.lang.String TAG>;

        $r7 = staticinvoke <com.android.inputmethod.latin.utils.DebugLogUtils: java.lang.String getStackTrace(int)>(4);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r6, $r7);

     label1:
        return;
    }

    public void finishComposingText()
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        android.view.inputmethod.InputConnection $r5, $r6;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        $r2 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mCommittedTextBeforeComposingText>;

        $r1 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mComposingText>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r1);

        $r4 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mComposingText>;

        virtualinvoke $r4.<java.lang.StringBuilder: void setLength(int)>(0);

        r0.<com.android.inputmethod.latin.RichInputConnection: boolean mLastCommittedTextHasBackgroundColor> = 0;

        $r5 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        if null == $r5 goto label1;

        $r6 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        interfaceinvoke $r6.<android.view.inputmethod.InputConnection: boolean finishComposingText()>();

     label1:
        return;
    }

    public void commitText(java.lang.CharSequence, int)
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        java.lang.CharSequence r1;
        int i0, $i1;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        $i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        virtualinvoke r0.<com.android.inputmethod.latin.RichInputConnection: void commitTextWithBackgroundColor(java.lang.CharSequence,int,int,int)>(r1, i0, 0, $i1);

        return;
    }

    public void commitTextWithBackgroundColor(java.lang.CharSequence, int, int, int)
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.text.style.BackgroundColorSpan r2, $r10;
        java.lang.StringBuilder $r3, $r5, $r7;
        android.view.inputmethod.InputConnection $r6, $r14, $r15;
        android.text.SpannableStringBuilder $r8, $r9, $r12, $r13;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r3 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mCommittedTextBeforeComposingText>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r1);

        $i4 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        $i5 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $r5 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mComposingText>;

        $i6 = virtualinvoke $r5.<java.lang.StringBuilder: int length()>();

        $i7 = $i5 - $i6;

        $i8 = $i4 + $i7;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart> = $i8;

        $i9 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelEnd> = $i9;

        $r7 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mComposingText>;

        virtualinvoke $r7.<java.lang.StringBuilder: void setLength(int)>(0);

        r0.<com.android.inputmethod.latin.RichInputConnection: boolean mLastCommittedTextHasBackgroundColor> = 0;

        $r6 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        if null == $r6 goto label2;

        if i1 != 0 goto label1;

        $r15 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        interfaceinvoke $r15.<android.view.inputmethod.InputConnection: boolean commitText(java.lang.CharSequence,int)>(r1, i0);

        goto label2;

     label1:
        $r9 = r0.<com.android.inputmethod.latin.RichInputConnection: android.text.SpannableStringBuilder mTempObjectForCommitText>;

        virtualinvoke $r9.<android.text.SpannableStringBuilder: void clear()>();

        $r8 = r0.<com.android.inputmethod.latin.RichInputConnection: android.text.SpannableStringBuilder mTempObjectForCommitText>;

        virtualinvoke $r8.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>(r1);

        $r10 = new android.text.style.BackgroundColorSpan;

        specialinvoke $r10.<android.text.style.BackgroundColorSpan: void <init>(int)>(i1);

        r2 = $r10;

        $i10 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        i3 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i10);

        $r13 = r0.<com.android.inputmethod.latin.RichInputConnection: android.text.SpannableStringBuilder mTempObjectForCommitText>;

        virtualinvoke $r13.<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>(r2, 0, i3, 289);

        $r14 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        $r12 = r0.<com.android.inputmethod.latin.RichInputConnection: android.text.SpannableStringBuilder mTempObjectForCommitText>;

        interfaceinvoke $r14.<android.view.inputmethod.InputConnection: boolean commitText(java.lang.CharSequence,int)>($r12, i0);

        r0.<com.android.inputmethod.latin.RichInputConnection: boolean mLastCommittedTextHasBackgroundColor> = 1;

     label2:
        return;
    }

    public void removeBackgroundColorFromHighlightedTextIfNecessary()
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        boolean $z0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6;
        int $i0;
        java.lang.String $r3, $r7;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        $z0 = r0.<com.android.inputmethod.latin.RichInputConnection: boolean mLastCommittedTextHasBackgroundColor>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mComposingText>;

        $i0 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label2;

        $r3 = <com.android.inputmethod.latin.RichInputConnection: java.lang.String TAG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clearSpansWithComposingFlags should be called when composing text is empty. mComposingText=");

        $r5 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mComposingText>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, $r7);

        return;

     label2:
        virtualinvoke r0.<com.android.inputmethod.latin.RichInputConnection: void finishComposingText()>();

        return;
    }

    public java.lang.CharSequence getSelectedText(int)
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        int i0;
        android.view.inputmethod.InputConnection $r1, $r2;
        java.lang.CharSequence $r3;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        if null != $r1 goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        $r3 = interfaceinvoke $r2.<android.view.inputmethod.InputConnection: java.lang.CharSequence getSelectedText(int)>(i0);

     label2:
        return $r3;
    }

    public boolean canDeleteCharacters()
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        $i0 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getCursorCapsMode(int, com.android.inputmethod.latin.settings.SpacingAndPunctuations, boolean)
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        int i0, $i1, $i2, $i3, $i5;
        com.android.inputmethod.latin.settings.SpacingAndPunctuations r1;
        boolean z0, $z1, $z2, $z3;
        android.inputmethodservice.InputMethodService $r2;
        android.view.inputmethod.InputConnection $r3, $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.inputmethod.latin.settings.SpacingAndPunctuations;

        z0 := @parameter2: boolean;

        $r2 = r0.<com.android.inputmethod.latin.RichInputConnection: android.inputmethodservice.InputMethodService mParent>;

        $r3 = virtualinvoke $r2.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC> = $r3;

        $r4 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        if null != $r4 goto label1;

        return 0;

     label1:
        $r5 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mComposingText>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z1 != 0 goto label3;

        if z0 == 0 goto label2;

        $i5 = 12288 & i0;

        return $i5;

     label2:
        $i3 = 4096 & i0;

        return $i3;

     label3:
        $r6 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mCommittedTextBeforeComposingText>;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r6);

        if $z2 == 0 goto label4;

        $i2 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        if 0 == $i2 goto label4;

        $z3 = specialinvoke r0.<com.android.inputmethod.latin.RichInputConnection: boolean reloadTextCache()>();

        if $z3 != 0 goto label4;

        $r8 = <com.android.inputmethod.latin.RichInputConnection: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r8, "Unable to connect to the editor. Setting caps mode without knowing text.");

     label4:
        $r7 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mCommittedTextBeforeComposingText>;

        $i1 = staticinvoke <com.android.inputmethod.latin.utils.CapsModeUtils: int getCapsMode(java.lang.CharSequence,int,com.android.inputmethod.latin.settings.SpacingAndPunctuations,boolean)>($r7, i0, r1, z0);

        return $i1;
    }

    public int getCodePointBeforeCursor()
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        int i0, $i1;
        java.lang.StringBuilder $r1, $r2;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        $r1 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mCommittedTextBeforeComposingText>;

        i0 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        if i0 >= 1 goto label1;

        return -1;

     label1:
        $r2 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mCommittedTextBeforeComposingText>;

        $i1 = staticinvoke <java.lang.Character: int codePointBefore(java.lang.CharSequence,int)>($r2, i0);

        return $i1;
    }

    public java.lang.CharSequence getTextBeforeCursor(int, int)
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.StringBuilder r1, $r2, $r3, $r9, $r10, $r11;
        android.inputmethodservice.InputMethodService $r4;
        android.view.inputmethod.InputConnection $r5, $r6, $r7;
        java.lang.CharSequence $r8;
        java.lang.String $r13;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mCommittedTextBeforeComposingText>;

        $i3 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        $r3 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mComposingText>;

        $i4 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>();

        i2 = $i3 + $i4;

        $i5 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        if -1 == $i5 goto label3;

        if i2 >= i0 goto label1;

        $i9 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        if i2 < $i9 goto label3;

     label1:
        $r9 = new java.lang.StringBuilder;

        $r11 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mCommittedTextBeforeComposingText>;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.CharSequence)>($r11);

        r1 = $r9;

        $r10 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mComposingText>;

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $i6 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        if $i6 <= i0 goto label2;

        $i8 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        $i7 = $i8 - i0;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>(0, $i7);

     label2:
        return r1;

     label3:
        $r4 = r0.<com.android.inputmethod.latin.RichInputConnection: android.inputmethodservice.InputMethodService mParent>;

        $r5 = virtualinvoke $r4.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC> = $r5;

        $r6 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        if null != $r6 goto label4;

        $r8 = null;

        goto label5;

     label4:
        $r7 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        $r8 = interfaceinvoke $r7.<android.view.inputmethod.InputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>(i0, i1);

     label5:
        return $r8;
    }

    public java.lang.CharSequence getTextAfterCursor(int, int)
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        int i0, i1;
        android.inputmethodservice.InputMethodService $r1;
        android.view.inputmethod.InputConnection $r2, $r3, $r4;
        java.lang.CharSequence $r5;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.inputmethod.latin.RichInputConnection: android.inputmethodservice.InputMethodService mParent>;

        $r2 = virtualinvoke $r1.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC> = $r2;

        $r3 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        if null != $r3 goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r4 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        $r5 = interfaceinvoke $r4.<android.view.inputmethod.InputConnection: java.lang.CharSequence getTextAfterCursor(int,int)>(i0, i1);

     label2:
        return $r5;
    }

    public void deleteSurroundingText(int, int)
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r7;
        android.view.inputmethod.InputConnection $r5, $r6;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mComposingText>;

        $i4 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        i2 = $i4 - i0;

        if i2 < 0 goto label1;

        $r7 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mComposingText>;

        virtualinvoke $r7.<java.lang.StringBuilder: void setLength(int)>(i2);

        goto label2;

     label1:
        $r2 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mComposingText>;

        virtualinvoke $r2.<java.lang.StringBuilder: void setLength(int)>(0);

        $r3 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mCommittedTextBeforeComposingText>;

        $i5 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>();

        $i6 = $i5 + i2;

        i3 = staticinvoke <java.lang.Math: int max(int,int)>($i6, 0);

        $r4 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mCommittedTextBeforeComposingText>;

        virtualinvoke $r4.<java.lang.StringBuilder: void setLength(int)>(i3);

     label2:
        $i7 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        if $i7 <= i0 goto label3;

        $i12 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        $i11 = $i12 - i0;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart> = $i11;

        $i14 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelEnd>;

        $i13 = $i14 - i0;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelEnd> = $i13;

        goto label4;

     label3:
        $i9 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelEnd>;

        $i8 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        $i10 = $i9 - $i8;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelEnd> = $i10;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart> = 0;

     label4:
        $r5 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        if null == $r5 goto label5;

        $r6 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        interfaceinvoke $r6.<android.view.inputmethod.InputConnection: boolean deleteSurroundingText(int,int)>(i0, i1);

     label5:
        return;
    }

    public void performEditorAction(int)
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        int i0;
        android.inputmethodservice.InputMethodService $r1;
        android.view.inputmethod.InputConnection $r2, $r3, $r4;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.inputmethod.latin.RichInputConnection: android.inputmethodservice.InputMethodService mParent>;

        $r2 = virtualinvoke $r1.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC> = $r2;

        $r3 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        if null == $r3 goto label1;

        $r4 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        interfaceinvoke $r4.<android.view.inputmethod.InputConnection: boolean performEditorAction(int)>(i0);

     label1:
        return;
    }

    public void sendKeyEvent(android.view.KeyEvent)
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        android.view.KeyEvent r1;
        java.lang.String r2, $r17, $r20, $r21;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        android.view.inputmethod.InputConnection $r3, $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r16, $r19, $r23;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        r1 := @parameter0: android.view.KeyEvent;

        $i0 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i0 != 0 goto label8;

        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        lookupswitch($i1)
        {
            case 0: goto label6;
            case 66: goto label1;
            case 67: goto label2;
            default: goto label7;
        };

     label1:
        $r16 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mCommittedTextBeforeComposingText>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $i16 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        $i17 = $i16 + 1;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart> = $i17;

        $i18 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelEnd> = $i18;

        goto label8;

     label2:
        $r5 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mComposingText>;

        $i2 = virtualinvoke $r5.<java.lang.StringBuilder: int length()>();

        if 0 != $i2 goto label3;

        $r10 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mCommittedTextBeforeComposingText>;

        $i12 = virtualinvoke $r10.<java.lang.StringBuilder: int length()>();

        if $i12 <= 0 goto label4;

        $r11 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mCommittedTextBeforeComposingText>;

        $r12 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mCommittedTextBeforeComposingText>;

        $i13 = virtualinvoke $r12.<java.lang.StringBuilder: int length()>();

        $i15 = $i13 - 1;

        $r13 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mCommittedTextBeforeComposingText>;

        $i14 = virtualinvoke $r13.<java.lang.StringBuilder: int length()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>($i15, $i14);

        goto label4;

     label3:
        $r7 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mComposingText>;

        $r6 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mComposingText>;

        $i3 = virtualinvoke $r6.<java.lang.StringBuilder: int length()>();

        $i4 = $i3 - 1;

        $r8 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mComposingText>;

        $i5 = virtualinvoke $r8.<java.lang.StringBuilder: int length()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>($i4, $i5);

     label4:
        $i7 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        if $i7 <= 0 goto label5;

        $i8 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        $i9 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelEnd>;

        if $i8 != $i9 goto label5;

        $i11 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        $i10 = $i11 - 1;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart> = $i10;

     label5:
        $i6 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelEnd> = $i6;

        goto label8;

     label6:
        $r17 = virtualinvoke r1.<android.view.KeyEvent: java.lang.String getCharacters()>();

        if null == $r17 goto label8;

        $r19 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mCommittedTextBeforeComposingText>;

        $r20 = virtualinvoke r1.<android.view.KeyEvent: java.lang.String getCharacters()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $i19 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        $r21 = virtualinvoke r1.<android.view.KeyEvent: java.lang.String getCharacters()>();

        $i22 = virtualinvoke $r21.<java.lang.String: int length()>();

        $i20 = $i19 + $i22;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart> = $i20;

        $i21 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelEnd> = $i21;

        goto label8;

     label7:
        $i23 = virtualinvoke r1.<android.view.KeyEvent: int getUnicodeChar()>();

        r2 = staticinvoke <com.android.inputmethod.latin.utils.StringUtils: java.lang.String newSingleCodePointString(int)>($i23);

        $r23 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mCommittedTextBeforeComposingText>;

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $i27 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        $i26 = virtualinvoke r2.<java.lang.String: int length()>();

        $i25 = $i27 + $i26;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart> = $i25;

        $i24 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelEnd> = $i24;

     label8:
        $r3 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        if null == $r3 goto label9;

        $r4 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        interfaceinvoke $r4.<android.view.inputmethod.InputConnection: boolean sendKeyEvent(android.view.KeyEvent)>(r1);

     label9:
        return;
    }

    public void setComposingRegion(int, int)
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.CharSequence r1, $r7, $r8;
        java.lang.StringBuilder $r2, $r5, $r9;
        boolean $z0;
        android.view.inputmethod.InputConnection $r3, $r4;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = i1 - i0;

        $i4 = 1024 + $i3;

        r1 = virtualinvoke r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>($i4, 0);

        $r2 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mCommittedTextBeforeComposingText>;

        virtualinvoke $r2.<java.lang.StringBuilder: void setLength(int)>(0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        $i5 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $i6 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        $i7 = $i6 - i0;

        $i8 = $i5 - $i7;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>($i8, 0);

        $r5 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mComposingText>;

        $i9 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $r7 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i2, $i9);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r7);

        $r9 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mCommittedTextBeforeComposingText>;

        $r8 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(0, i2);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r8);

     label1:
        $r3 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        if null == $r3 goto label2;

        $r4 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        interfaceinvoke $r4.<android.view.inputmethod.InputConnection: boolean setComposingRegion(int,int)>(i0, i1);

     label2:
        return;
    }

    public void setComposingText(java.lang.CharSequence, int)
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        java.lang.CharSequence r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.StringBuilder $r2, $r3, $r4;
        android.view.inputmethod.InputConnection $r6, $r7;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        $i1 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        $i2 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $r2 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mComposingText>;

        $i3 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        $i4 = $i2 - $i3;

        $i5 = $i1 + $i4;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart> = $i5;

        $i6 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelEnd> = $i6;

        $r3 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mComposingText>;

        virtualinvoke $r3.<java.lang.StringBuilder: void setLength(int)>(0);

        $r4 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mComposingText>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r1);

        $r6 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        if null == $r6 goto label1;

        $r7 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        interfaceinvoke $r7.<android.view.inputmethod.InputConnection: boolean setComposingText(java.lang.CharSequence,int)>(r1, i0);

     label1:
        return;
    }

    public boolean setSelection(int, int)
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        int i0, i1;
        boolean z0, $z1;
        android.view.inputmethod.InputConnection $r1, $r2;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label1;

        if i1 >= 0 goto label2;

     label1:
        return 0;

     label2:
        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart> = i0;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelEnd> = i1;

        $r1 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        if null == $r1 goto label3;

        $r2 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        z0 = interfaceinvoke $r2.<android.view.inputmethod.InputConnection: boolean setSelection(int,int)>(i0, i1);

        if z0 != 0 goto label3;

        return 0;

     label3:
        $z1 = specialinvoke r0.<com.android.inputmethod.latin.RichInputConnection: boolean reloadTextCache()>();

        return $z1;
    }

    public void commitCorrection(android.view.inputmethod.CorrectionInfo)
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        android.view.inputmethod.CorrectionInfo r1;
        android.view.inputmethod.InputConnection $r2, $r3;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        r1 := @parameter0: android.view.inputmethod.CorrectionInfo;

        $r2 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        if null == $r2 goto label1;

        $r3 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        interfaceinvoke $r3.<android.view.inputmethod.InputConnection: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>(r1);

     label1:
        return;
    }

    public void commitCompletion(android.view.inputmethod.CompletionInfo)
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        android.view.inputmethod.CompletionInfo r1;
        java.lang.CharSequence r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.inputmethod.InputConnection $r7, $r8;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        r1 := @parameter0: android.view.inputmethod.CompletionInfo;

        r2 = virtualinvoke r1.<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getText()>();

        if null != r2 goto label1;

        r2 = "";

     label1:
        $r3 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mCommittedTextBeforeComposingText>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r2);

        $i0 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        $i1 = interfaceinvoke r2.<java.lang.CharSequence: int length()>();

        $r5 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mComposingText>;

        $i2 = virtualinvoke $r5.<java.lang.StringBuilder: int length()>();

        $i3 = $i1 - $i2;

        $i4 = $i0 + $i3;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart> = $i4;

        $i5 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelEnd> = $i5;

        $r6 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mComposingText>;

        virtualinvoke $r6.<java.lang.StringBuilder: void setLength(int)>(0);

        $r7 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        if null == $r7 goto label2;

        $r8 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        interfaceinvoke $r8.<android.view.inputmethod.InputConnection: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>(r1);

     label2:
        return;
    }

    public com.android.inputmethod.latin.PrevWordsInfo getPrevWordsInfoFromNthPreviousWord(com.android.inputmethod.latin.settings.SpacingAndPunctuations, int)
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        com.android.inputmethod.latin.settings.SpacingAndPunctuations r1;
        int i0;
        java.lang.CharSequence r2;
        android.inputmethodservice.InputMethodService $r3;
        android.view.inputmethod.InputConnection $r4, $r5;
        com.android.inputmethod.latin.PrevWordsInfo $r6, $r7;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        r1 := @parameter0: com.android.inputmethod.latin.settings.SpacingAndPunctuations;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.inputmethod.latin.RichInputConnection: android.inputmethodservice.InputMethodService mParent>;

        $r4 = virtualinvoke $r3.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC> = $r4;

        $r5 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        if null != $r5 goto label1;

        $r7 = <com.android.inputmethod.latin.PrevWordsInfo: com.android.inputmethod.latin.PrevWordsInfo EMPTY_PREV_WORDS_INFO>;

        return $r7;

     label1:
        r2 = virtualinvoke r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>(146, 0);

        $r6 = staticinvoke <com.android.inputmethod.latin.utils.PrevWordsInfoUtils: com.android.inputmethod.latin.PrevWordsInfo getPrevWordsInfoFromNthPreviousWord(java.lang.CharSequence,com.android.inputmethod.latin.settings.SpacingAndPunctuations,int)>(r2, r1, i0);

        return $r6;
    }

    private static boolean isSeparator(int, int[])
    {
        int i0, $i1;
        int[] r0;
        boolean $z0;

        i0 := @parameter0: int;

        r0 := @parameter1: int[];

        $i1 = staticinvoke <java.util.Arrays: int binarySearch(int[],int)>(r0, i0);

        if $i1 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isPartOfCompositionForScript(int, com.android.inputmethod.latin.settings.SpacingAndPunctuations, int)
    {
        int i0, i1;
        com.android.inputmethod.latin.settings.SpacingAndPunctuations r0;
        boolean $z0, $z1, $z2, $z3;

        i0 := @parameter0: int;

        r0 := @parameter1: com.android.inputmethod.latin.settings.SpacingAndPunctuations;

        i1 := @parameter2: int;

        $z0 = virtualinvoke r0.<com.android.inputmethod.latin.settings.SpacingAndPunctuations: boolean isWordConnector(int)>(i0);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<com.android.inputmethod.latin.settings.SpacingAndPunctuations: boolean isWordSeparator(int)>(i0);

        if $z1 != 0 goto label2;

        $z3 = staticinvoke <com.android.inputmethod.latin.utils.ScriptUtils: boolean isLetterPartOfScript(int,int)>(i0, i1);

        if $z3 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public com.android.inputmethod.latin.utils.TextRange getWordRangeAtCursor(com.android.inputmethod.latin.settings.SpacingAndPunctuations, int)
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        com.android.inputmethod.latin.settings.SpacingAndPunctuations r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, i9;
        java.lang.CharSequence r2, r3, $r10;
        android.inputmethodservice.InputMethodService $r4;
        android.view.inputmethod.InputConnection $r5, $r6, $r7, $r8;
        com.android.inputmethod.latin.utils.TextRange $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7;
        java.lang.CharSequence[] $r11;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        r1 := @parameter0: com.android.inputmethod.latin.settings.SpacingAndPunctuations;

        i0 := @parameter1: int;

        $r4 = r0.<com.android.inputmethod.latin.RichInputConnection: android.inputmethodservice.InputMethodService mParent>;

        $r5 = virtualinvoke $r4.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC> = $r5;

        $r6 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        if $r6 != null goto label01;

        return null;

     label01:
        $r7 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        r2 = interfaceinvoke $r7.<android.view.inputmethod.InputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>(1024, 1);

        $r8 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        r3 = interfaceinvoke $r8.<android.view.inputmethod.InputConnection: java.lang.CharSequence getTextAfterCursor(int,int)>(1024, 1);

        if r2 == null goto label02;

        if r3 != null goto label03;

     label02:
        return null;

     label03:
        i1 = interfaceinvoke r2.<java.lang.CharSequence: int length()>();

     label04:
        if i1 <= 0 goto label07;

        i2 = staticinvoke <java.lang.Character: int codePointBefore(java.lang.CharSequence,int)>(r2, i1);

        $z5 = staticinvoke <com.android.inputmethod.latin.RichInputConnection: boolean isPartOfCompositionForScript(int,com.android.inputmethod.latin.settings.SpacingAndPunctuations,int)>(i2, r1, i0);

        if $z5 != 0 goto label05;

        goto label07;

     label05:
        i1 = i1 + -1;

        $z6 = staticinvoke <java.lang.Character: boolean isSupplementaryCodePoint(int)>(i2);

        if $z6 == 0 goto label06;

        i1 = i1 + -1;

     label06:
        goto label04;

     label07:
        i9 = -1;

     label08:
        i9 = i9 + 1;

        $i5 = interfaceinvoke r3.<java.lang.CharSequence: int length()>();

        if i9 >= $i5 goto label11;

        i3 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>(r3, i9);

        $z4 = staticinvoke <com.android.inputmethod.latin.RichInputConnection: boolean isPartOfCompositionForScript(int,com.android.inputmethod.latin.settings.SpacingAndPunctuations,int)>(i3, r1, i0);

        if $z4 != 0 goto label09;

        goto label11;

     label09:
        $z3 = staticinvoke <java.lang.Character: boolean isSupplementaryCodePoint(int)>(i3);

        if $z3 == 0 goto label10;

        i9 = i9 + 1;

     label10:
        goto label08;

     label11:
        $i4 = interfaceinvoke r2.<java.lang.CharSequence: int length()>();

        $z0 = staticinvoke <com.android.inputmethod.latin.utils.SpannableStringUtils: boolean hasUrlSpans(java.lang.CharSequence,int,int)>(r2, i1, $i4);

        if $z0 != 0 goto label12;

        $z1 = staticinvoke <com.android.inputmethod.latin.utils.SpannableStringUtils: boolean hasUrlSpans(java.lang.CharSequence,int,int)>(r3, 0, i9);

        if $z1 == 0 goto label13;

     label12:
        $z2 = 1;

        goto label14;

     label13:
        $z2 = 0;

     label14:
        z7 = $z2;

        $r9 = new com.android.inputmethod.latin.utils.TextRange;

        $r11 = newarray (java.lang.CharSequence)[2];

        $r11[0] = r2;

        $r11[1] = r3;

        $r10 = staticinvoke <com.android.inputmethod.latin.utils.SpannableStringUtils: java.lang.CharSequence concatWithNonParagraphSuggestionSpansOnly(java.lang.CharSequence[])>($r11);

        $i7 = interfaceinvoke r2.<java.lang.CharSequence: int length()>();

        $i6 = $i7 + i9;

        $i8 = interfaceinvoke r2.<java.lang.CharSequence: int length()>();

        specialinvoke $r9.<com.android.inputmethod.latin.utils.TextRange: void <init>(java.lang.CharSequence,int,int,int,boolean)>($r10, i1, $i6, $i8, z7);

        return $r9;
    }

    public boolean isCursorTouchingWord(com.android.inputmethod.latin.settings.SpacingAndPunctuations)
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        com.android.inputmethod.latin.settings.SpacingAndPunctuations r1;
        java.lang.String r2;
        int i0, i1, $i2, $i3, $i4, i5;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r3;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        r1 := @parameter0: com.android.inputmethod.latin.settings.SpacingAndPunctuations;

        $z0 = virtualinvoke r0.<com.android.inputmethod.latin.RichInputConnection: boolean isCursorFollowedByWordCharacter(com.android.inputmethod.latin.settings.SpacingAndPunctuations)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mCommittedTextBeforeComposingText>;

        r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if 0 != i0 goto label2;

        $i2 = -1;

        goto label3;

     label2:
        $i2 = virtualinvoke r2.<java.lang.String: int codePointBefore(int)>(i0);

     label3:
        i1 = $i2;

        $z1 = virtualinvoke r1.<com.android.inputmethod.latin.settings.SpacingAndPunctuations: boolean isWordConnector(int)>(i1);

        if $z1 == 0 goto label6;

        $i3 = staticinvoke <java.lang.Character: int charCount(int)>(i1);

        i5 = i0 - $i3;

        if 0 != i5 goto label4;

        $i4 = -1;

        goto label5;

     label4:
        $i4 = virtualinvoke r2.<java.lang.String: int codePointBefore(int)>(i5);

     label5:
        i1 = $i4;

     label6:
        if -1 == i1 goto label7;

        $z2 = virtualinvoke r1.<com.android.inputmethod.latin.settings.SpacingAndPunctuations: boolean isWordSeparator(int)>(i1);

        if $z2 != 0 goto label7;

        $z3 = virtualinvoke r1.<com.android.inputmethod.latin.settings.SpacingAndPunctuations: boolean isWordConnector(int)>(i1);

        if $z3 != 0 goto label7;

        $z4 = 1;

        goto label8;

     label7:
        $z4 = 0;

     label8:
        return $z4;
    }

    public boolean isCursorFollowedByWordCharacter(com.android.inputmethod.latin.settings.SpacingAndPunctuations)
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        com.android.inputmethod.latin.settings.SpacingAndPunctuations r1;
        java.lang.CharSequence r2;
        int i0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        r1 := @parameter0: com.android.inputmethod.latin.settings.SpacingAndPunctuations;

        r2 = virtualinvoke r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.CharSequence getTextAfterCursor(int,int)>(1, 0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        i0 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>(r2, 0);

        $z1 = virtualinvoke r1.<com.android.inputmethod.latin.settings.SpacingAndPunctuations: boolean isWordSeparator(int)>(i0);

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r1.<com.android.inputmethod.latin.settings.SpacingAndPunctuations: boolean isWordConnector(int)>(i0);

        if $z2 == 0 goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }

    public void removeTrailingSpace()
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        int i0;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        i0 = virtualinvoke r0.<com.android.inputmethod.latin.RichInputConnection: int getCodePointBeforeCursor()>();

        if 32 != i0 goto label1;

        virtualinvoke r0.<com.android.inputmethod.latin.RichInputConnection: void deleteSurroundingText(int,int)>(1, 0);

     label1:
        return;
    }

    public boolean sameAsTextBeforeCursor(java.lang.CharSequence)
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        java.lang.CharSequence r1, r2;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        r1 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        r2 = virtualinvoke r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>($i0, 0);

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, r2);

        return $z0;
    }

    public boolean revertDoubleSpacePeriod()
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        java.lang.CharSequence r1;
        boolean $z0;
        java.lang.String $r3;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        r1 = virtualinvoke r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>(2, 0);

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(". ", r1);

        if $z0 != 0 goto label1;

        $r3 = <com.android.inputmethod.latin.RichInputConnection: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, "Tried to revert double-space combo but we didn\'t find \". \" just before the cursor.");

        return 0;

     label1:
        virtualinvoke r0.<com.android.inputmethod.latin.RichInputConnection: void deleteSurroundingText(int,int)>(2, 0);

        virtualinvoke r0.<com.android.inputmethod.latin.RichInputConnection: void commitText(java.lang.CharSequence,int)>(" ", 1);

        return 1;
    }

    public boolean revertSwapPunctuation()
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        java.lang.CharSequence r1, $r6;
        java.lang.String r2, $r3;
        boolean $z0;
        char $c1;
        java.lang.StringBuilder $r4, $r5, $r7;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        r1 = virtualinvoke r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>(2, 0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        $c1 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(1);

        if 32 == $c1 goto label2;

     label1:
        $r3 = <com.android.inputmethod.latin.RichInputConnection: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, "Tried to revert a swap of punctuation but we didn\'t find a space just before the cursor.");

        return 0;

     label2:
        virtualinvoke r0.<com.android.inputmethod.latin.RichInputConnection: void deleteSurroundingText(int,int)>(2, 0);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(0, 1);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.inputmethod.latin.RichInputConnection: void commitText(java.lang.CharSequence,int)>(r2, 1);

        return 1;
    }

    public boolean isBelatedExpectedUpdate(int, int, int, int)
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $i4 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        if $i4 != i1 goto label1;

        $i14 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelEnd>;

        if $i14 != i3 goto label1;

        return 1;

     label1:
        $i5 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        if $i5 != i0 goto label3;

        $i15 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelEnd>;

        if $i15 != i2 goto label3;

        if i0 != i1 goto label2;

        if i2 == i3 goto label3;

     label2:
        return 0;

     label3:
        if i1 != i3 goto label4;

        $i8 = i1 - i0;

        $i6 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        $i7 = $i6 - i1;

        $i9 = $i8 * $i7;

        if $i9 < 0 goto label4;

        $i12 = i3 - i2;

        $i10 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelEnd>;

        $i11 = $i10 - i3;

        $i13 = $i12 * $i11;

        if $i13 < 0 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }

    public boolean textBeforeCursorLooksLikeURL()
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        java.lang.StringBuilder $r1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        $r1 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mCommittedTextBeforeComposingText>;

        $z0 = staticinvoke <com.android.inputmethod.latin.utils.StringUtils: boolean lastPartLooksLikeURL(java.lang.CharSequence)>($r1);

        return $z0;
    }

    public boolean isInsideDoubleQuoteOrAfterDigit()
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        java.lang.StringBuilder $r1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        $r1 = r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.StringBuilder mCommittedTextBeforeComposingText>;

        $z0 = staticinvoke <com.android.inputmethod.latin.utils.StringUtils: boolean isInsideDoubleQuoteOrAfterDigit(java.lang.CharSequence)>($r1);

        return $z0;
    }

    public void tryFixLyingCursorPosition()
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        java.lang.CharSequence r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean z0, $z1;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        r1 = virtualinvoke r0.<com.android.inputmethod.latin.RichInputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>(1024, 0);

        if null != r1 goto label1;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelEnd> = -1;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart> = -1;

        goto label6;

     label1:
        i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if i0 >= 1024 goto label6;

        $i1 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        if i0 > $i1 goto label2;

        $i7 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        if $i7 >= 1024 goto label6;

     label2:
        $i3 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        $i2 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelEnd>;

        if $i3 != $i2 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        z0 = $z1;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart> = i0;

        if z0 != 0 goto label5;

        $i6 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        $i5 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelEnd>;

        if $i6 <= $i5 goto label6;

     label5:
        $i4 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelEnd> = $i4;

     label6:
        return;
    }

    public int getExpectedSelectionStart()
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        int $i0;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        $i0 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        return $i0;
    }

    public int getExpectedSelectionEnd()
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        int $i0;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        $i0 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelEnd>;

        return $i0;
    }

    public boolean hasSelection()
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        $i1 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelEnd>;

        $i0 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        if $i1 == $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isCursorPositionKnown()
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        $i0 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        if -1 == $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void maybeMoveTheCursorAroundAndRestoreToWorkaroundABug()
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.view.inputmethod.InputConnection $r1, $r2, $r3;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 16 goto label3;

        $i1 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        if $i1 <= 0 goto label1;

        $r3 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        $i8 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        $i11 = $i8 - 1;

        $i9 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        $i10 = $i9 - 1;

        interfaceinvoke $r3.<android.view.inputmethod.InputConnection: boolean setSelection(int,int)>($i11, $i10);

        goto label2;

     label1:
        $r1 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        $i2 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        $i5 = $i2 + 1;

        $i3 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        $i4 = $i3 + 1;

        interfaceinvoke $r1.<android.view.inputmethod.InputConnection: boolean setSelection(int,int)>($i5, $i4);

     label2:
        $r2 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        $i7 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelStart>;

        $i6 = r0.<com.android.inputmethod.latin.RichInputConnection: int mExpectedSelEnd>;

        interfaceinvoke $r2.<android.view.inputmethod.InputConnection: boolean setSelection(int,int)>($i7, $i6);

     label3:
        return;
    }

    public boolean requestCursorUpdates(boolean, boolean)
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        boolean z0, z1, z2, $z3;
        android.inputmethodservice.InputMethodService $r1;
        android.view.inputmethod.InputConnection $r2, $r3, $r4;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r1 = r0.<com.android.inputmethod.latin.RichInputConnection: android.inputmethodservice.InputMethodService mParent>;

        $r2 = virtualinvoke $r1.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC> = $r2;

        $r3 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        if null == $r3 goto label1;

        $r4 = r0.<com.android.inputmethod.latin.RichInputConnection: android.view.inputmethod.InputConnection mIC>;

        z2 = staticinvoke <com.android.inputmethod.compat.InputConnectionCompatUtils: boolean requestCursorUpdates(android.view.inputmethod.InputConnection,boolean,boolean)>($r4, z0, z1);

        goto label2;

     label1:
        z2 = 0;

     label2:
        if z2 == 0 goto label3;

        if z0 == 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        r0.<com.android.inputmethod.latin.RichInputConnection: boolean mCursorAnchorInfoMonitorEnabled> = $z3;

        return z2;
    }

    public boolean isCursorAnchorInfoMonitorEnabled()
    {
        com.android.inputmethod.latin.RichInputConnection r0;
        boolean $z0;

        r0 := @this: com.android.inputmethod.latin.RichInputConnection;

        $z0 = r0.<com.android.inputmethod.latin.RichInputConnection: boolean mCursorAnchorInfoMonitorEnabled>;

        return $z0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.inputmethod.latin.RichInputConnection: int INVALID_CURSOR_POSITION> = -1;

        <com.android.inputmethod.latin.RichInputConnection: int LOOKBACK_CHARACTER_NUM> = 146;

        <com.android.inputmethod.latin.RichInputConnection: boolean DEBUG_BATCH_NESTING> = 0;

        <com.android.inputmethod.latin.RichInputConnection: boolean DEBUG_PREVIOUS_TEXT> = 0;

        <com.android.inputmethod.latin.RichInputConnection: boolean DBG> = 0;

        $r0 = class "com/android/inputmethod/latin/RichInputConnection";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.inputmethod.latin.RichInputConnection: java.lang.String TAG> = $r1;

        return;
    }
}
