public final class com.android.inputmethod.keyboard.MainKeyboardView extends com.android.inputmethod.keyboard.KeyboardView implements com.android.inputmethod.keyboard.PointerTracker$DrawingProxy, com.android.inputmethod.keyboard.MoreKeysPanel$Controller, com.android.inputmethod.keyboard.internal.DrawingHandler$Callbacks, com.android.inputmethod.keyboard.internal.TimerHandler$Callbacks
{
    private static final java.lang.String TAG;
    private com.android.inputmethod.keyboard.KeyboardActionListener mKeyboardActionListener;
    private com.android.inputmethod.keyboard.Key mSpaceKey;
    private final int mLanguageOnSpacebarFinalAlpha;
    private android.animation.ObjectAnimator mLanguageOnSpacebarFadeoutAnimator;
    private int mLanguageOnSpacebarFormatType;
    private boolean mHasMultipleEnabledIMEsOrSubtypes;
    private int mLanguageOnSpacebarAnimAlpha;
    private final float mLanguageOnSpacebarTextRatio;
    private float mLanguageOnSpacebarTextSize;
    private final int mLanguageOnSpacebarTextColor;
    private final float mLanguageOnSpacebarTextShadowRadius;
    private final int mLanguageOnSpacebarTextShadowColor;
    private static final float LANGUAGE_ON_SPACEBAR_TEXT_SHADOW_RADIUS_DISABLED;
    private static final float MINIMUM_XSCALE_OF_LANGUAGE_NAME;
    private final android.animation.ObjectAnimator mAltCodeKeyWhileTypingFadeoutAnimator;
    private final android.animation.ObjectAnimator mAltCodeKeyWhileTypingFadeinAnimator;
    private int mAltCodeKeyWhileTypingAnimAlpha;
    private final com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView mDrawingPreviewPlacerView;
    private final int[] mOriginCoords;
    private final com.android.inputmethod.keyboard.internal.GestureFloatingTextDrawingPreview mGestureFloatingTextDrawingPreview;
    private final com.android.inputmethod.keyboard.internal.GestureTrailsDrawingPreview mGestureTrailsDrawingPreview;
    private final com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview mSlidingKeyInputDrawingPreview;
    private final com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams mKeyPreviewDrawParams;
    private final com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer mKeyPreviewChoreographer;
    private final android.graphics.Paint mBackgroundDimAlphaPaint;
    private boolean mNeedsToDimEntireKeyboard;
    private final android.view.View mMoreKeysKeyboardContainer;
    private final android.view.View mMoreKeysKeyboardForActionContainer;
    private final java.util.WeakHashMap mMoreKeysKeyboardCache;
    private final boolean mConfigShowMoreKeysKeyboardAtTouchedPoint;
    private com.android.inputmethod.keyboard.MoreKeysPanel mMoreKeysPanel;
    private int mGestureFloatingPreviewTextLingerTimeout;
    private final com.android.inputmethod.keyboard.KeyDetector mKeyDetector;
    private final com.android.inputmethod.keyboard.internal.NonDistinctMultitouchHelper mNonDistinctMultitouchHelper;
    private final com.android.inputmethod.keyboard.internal.TimerHandler mKeyTimerHandler;
    private final int mLanguageOnSpacebarHorizontalMargin;
    private final com.android.inputmethod.keyboard.internal.DrawingHandler mDrawingHandler;
    private com.android.inputmethod.accessibility.MainKeyboardAccessibilityDelegate mAccessibilityDelegate;

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 2130771970);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        android.content.Context r1, $r35;
        android.util.AttributeSet r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13;
        android.content.res.TypedArray r3;
        float f0, f1, $f2, $f3, $f4;
        android.content.SharedPreferences r4;
        boolean z0, z1, $z2, $z3, $z4;
        int[] $r5, $r11;
        android.view.LayoutInflater r6;
        java.util.WeakHashMap $r7;
        android.graphics.Paint $r8, $r16, $r18;
        com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView $r9, $r24, $r26, $r29;
        com.android.inputmethod.keyboard.internal.DrawingHandler $r10;
        com.android.inputmethod.keyboard.internal.TimerHandler $r12, $r15;
        com.android.inputmethod.keyboard.KeyDetector $r13;
        android.content.pm.PackageManager $r14;
        com.android.inputmethod.keyboard.internal.NonDistinctMultitouchHelper $r17;
        com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams $r19, $r21;
        com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer $r20;
        com.android.inputmethod.keyboard.internal.GestureTrailsDrawingPreview $r22, $r28;
        com.android.inputmethod.keyboard.internal.GestureFloatingTextDrawingPreview $r23, $r25;
        com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview $r27, $r34;
        android.view.View $r30, $r36;
        android.animation.ObjectAnimator $r31, $r32, $r33;
        com.android.inputmethod.keyboard.KeyboardActionListener $r37;
        android.content.res.Resources $r38;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.inputmethod.keyboard.KeyboardView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: int mLanguageOnSpacebarAnimAlpha> = 255;

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: int mAltCodeKeyWhileTypingAnimAlpha> = 255;

        $r5 = staticinvoke <com.android.inputmethod.latin.utils.CoordinateUtils: int[] newInstance()>();

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: int[] mOriginCoords> = $r5;

        $r8 = new android.graphics.Paint;

        specialinvoke $r8.<android.graphics.Paint: void <init>()>();

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: android.graphics.Paint mBackgroundDimAlphaPaint> = $r8;

        $r7 = new java.util.WeakHashMap;

        specialinvoke $r7.<java.util.WeakHashMap: void <init>()>();

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: java.util.WeakHashMap mMoreKeysKeyboardCache> = $r7;

        $r10 = new com.android.inputmethod.keyboard.internal.DrawingHandler;

        specialinvoke $r10.<com.android.inputmethod.keyboard.internal.DrawingHandler: void <init>(com.android.inputmethod.keyboard.internal.DrawingHandler$Callbacks)>(r0);

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.DrawingHandler mDrawingHandler> = $r10;

        $r9 = new com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView;

        specialinvoke $r9.<com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView mDrawingPreviewPlacerView> = $r9;

        $r11 = <com.android.inputmethod.latin.R$styleable: int[] MainKeyboardView>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r11, i0, 2131623957);

        i1 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(20, 0);

        i2 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(60, 0);

        $r12 = new com.android.inputmethod.keyboard.internal.TimerHandler;

        specialinvoke $r12.<com.android.inputmethod.keyboard.internal.TimerHandler: void <init>(com.android.inputmethod.keyboard.internal.TimerHandler$Callbacks,int,int)>(r0, i1, i2);

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.TimerHandler mKeyTimerHandler> = $r12;

        f0 = virtualinvoke r3.<android.content.res.TypedArray: float getDimension(int,float)>(8, 0.0F);

        f1 = virtualinvoke r3.<android.content.res.TypedArray: float getDimension(int,float)>(9, 0.0F);

        $r13 = new com.android.inputmethod.keyboard.KeyDetector;

        specialinvoke $r13.<com.android.inputmethod.keyboard.KeyDetector: void <init>(float,float)>(f0, f1);

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.KeyDetector mKeyDetector> = $r13;

        $r15 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.TimerHandler mKeyTimerHandler>;

        staticinvoke <com.android.inputmethod.keyboard.PointerTracker: void init(android.content.res.TypedArray,com.android.inputmethod.keyboard.PointerTracker$TimerProxy,com.android.inputmethod.keyboard.PointerTracker$DrawingProxy)>(r3, $r15, r0);

        r4 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r1);

        z0 = interfaceinvoke r4.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("force_non_distinct_multitouch", 0);

        $r14 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z2 = virtualinvoke $r14.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.hardware.touchscreen.multitouch.distinct");

        if $z2 == 0 goto label1;

        if z0 != 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z1 = $z4;

        if z1 == 0 goto label3;

        $r17 = null;

        goto label4;

     label3:
        $r17 = new com.android.inputmethod.keyboard.internal.NonDistinctMultitouchHelper;

        specialinvoke $r17.<com.android.inputmethod.keyboard.internal.NonDistinctMultitouchHelper: void <init>()>();

     label4:
        r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.NonDistinctMultitouchHelper mNonDistinctMultitouchHelper> = $r17;

        i3 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(29, 0);

        $r16 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: android.graphics.Paint mBackgroundDimAlphaPaint>;

        virtualinvoke $r16.<android.graphics.Paint: void setColor(int)>(-16777216);

        $r18 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: android.graphics.Paint mBackgroundDimAlphaPaint>;

        virtualinvoke $r18.<android.graphics.Paint: void setAlpha(int)>(i3);

        $f3 = virtualinvoke r3.<android.content.res.TypedArray: float getFraction(int,int,int,float)>(0, 1, 1, 1.0F);

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: float mLanguageOnSpacebarTextRatio> = $f3;

        $i9 = virtualinvoke r3.<android.content.res.TypedArray: int getColor(int,int)>(1, 0);

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: int mLanguageOnSpacebarTextColor> = $i9;

        $f2 = virtualinvoke r3.<android.content.res.TypedArray: float getFloat(int,float)>(2, -1.0F);

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: float mLanguageOnSpacebarTextShadowRadius> = $f2;

        $i10 = virtualinvoke r3.<android.content.res.TypedArray: int getColor(int,int)>(3, 0);

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: int mLanguageOnSpacebarTextShadowColor> = $i10;

        $i11 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(4, 255);

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: int mLanguageOnSpacebarFinalAlpha> = $i11;

        i4 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(5, 0);

        i5 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(6, 0);

        i6 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(7, 0);

        $r21 = new com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams;

        specialinvoke $r21.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: void <init>(android.content.res.TypedArray)>(r3);

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams mKeyPreviewDrawParams> = $r21;

        $r20 = new com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer;

        $r19 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams mKeyPreviewDrawParams>;

        specialinvoke $r20.<com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer: void <init>(com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams)>($r19);

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer mKeyPreviewChoreographer> = $r20;

        i8 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(27, 0);

        i7 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(28, i8);

        $z3 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(30, 0);

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: boolean mConfigShowMoreKeysKeyboardAtTouchedPoint> = $z3;

        $i12 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(43, 0);

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: int mGestureFloatingPreviewTextLingerTimeout> = $i12;

        $r25 = new com.android.inputmethod.keyboard.internal.GestureFloatingTextDrawingPreview;

        specialinvoke $r25.<com.android.inputmethod.keyboard.internal.GestureFloatingTextDrawingPreview: void <init>(android.content.res.TypedArray)>(r3);

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.GestureFloatingTextDrawingPreview mGestureFloatingTextDrawingPreview> = $r25;

        $r23 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.GestureFloatingTextDrawingPreview mGestureFloatingTextDrawingPreview>;

        $r24 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView mDrawingPreviewPlacerView>;

        virtualinvoke $r23.<com.android.inputmethod.keyboard.internal.GestureFloatingTextDrawingPreview: void setDrawingView(com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView)>($r24);

        $r22 = new com.android.inputmethod.keyboard.internal.GestureTrailsDrawingPreview;

        specialinvoke $r22.<com.android.inputmethod.keyboard.internal.GestureTrailsDrawingPreview: void <init>(android.content.res.TypedArray)>(r3);

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.GestureTrailsDrawingPreview mGestureTrailsDrawingPreview> = $r22;

        $r28 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.GestureTrailsDrawingPreview mGestureTrailsDrawingPreview>;

        $r29 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView mDrawingPreviewPlacerView>;

        virtualinvoke $r28.<com.android.inputmethod.keyboard.internal.GestureTrailsDrawingPreview: void setDrawingView(com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView)>($r29);

        $r27 = new com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview;

        specialinvoke $r27.<com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview: void <init>(android.content.res.TypedArray)>(r3);

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview mSlidingKeyInputDrawingPreview> = $r27;

        $r34 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview mSlidingKeyInputDrawingPreview>;

        $r26 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView mDrawingPreviewPlacerView>;

        virtualinvoke $r34.<com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview: void setDrawingView(com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView)>($r26);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        $r35 = virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: android.content.Context getContext()>();

        r6 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r35);

        $r36 = virtualinvoke r6.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(i8, null);

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: android.view.View mMoreKeysKeyboardContainer> = $r36;

        $r30 = virtualinvoke r6.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(i7, null);

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: android.view.View mMoreKeysKeyboardForActionContainer> = $r30;

        $r31 = specialinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: android.animation.ObjectAnimator loadObjectAnimator(int,java.lang.Object)>(i4, r0);

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: android.animation.ObjectAnimator mLanguageOnSpacebarFadeoutAnimator> = $r31;

        $r32 = specialinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: android.animation.ObjectAnimator loadObjectAnimator(int,java.lang.Object)>(i5, r0);

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: android.animation.ObjectAnimator mAltCodeKeyWhileTypingFadeoutAnimator> = $r32;

        $r33 = specialinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: android.animation.ObjectAnimator loadObjectAnimator(int,java.lang.Object)>(i6, r0);

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: android.animation.ObjectAnimator mAltCodeKeyWhileTypingFadeinAnimator> = $r33;

        $r37 = <com.android.inputmethod.keyboard.KeyboardActionListener: com.android.inputmethod.keyboard.KeyboardActionListener EMPTY_LISTENER>;

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.KeyboardActionListener mKeyboardActionListener> = $r37;

        $r38 = virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: android.content.res.Resources getResources()>();

        $f4 = virtualinvoke $r38.<android.content.res.Resources: float getDimension(int)>(2131558402);

        $i13 = (int) $f4;

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: int mLanguageOnSpacebarHorizontalMargin> = $i13;

        return;
    }

    public void setHardwareAcceleratedDrawingEnabled(boolean)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        boolean z0;
        com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView $r1;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.android.inputmethod.keyboard.KeyboardView: void setHardwareAcceleratedDrawingEnabled(boolean)>(z0);

        $r1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView mDrawingPreviewPlacerView>;

        virtualinvoke $r1.<com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView: void setHardwareAcceleratedDrawingEnabled(boolean)>(z0);

        return;
    }

    private android.animation.ObjectAnimator loadObjectAnimator(int, java.lang.Object)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        int i0;
        java.lang.Object r1;
        android.animation.ObjectAnimator r2;
        android.content.Context $r3;
        android.animation.Animator $r4;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        if i0 != 0 goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: android.content.Context getContext()>();

        $r4 = staticinvoke <android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>($r3, i0);

        r2 = (android.animation.ObjectAnimator) $r4;

        if r2 == null goto label2;

        virtualinvoke r2.<android.animation.ObjectAnimator: void setTarget(java.lang.Object)>(r1);

     label2:
        return r2;
    }

    private static void cancelAndStartAnimators(android.animation.ObjectAnimator, android.animation.ObjectAnimator)
    {
        android.animation.ObjectAnimator r0, r1;
        float f0, $f1, $f2, $f3;
        long l0, $l1;
        boolean $z0;

        r0 := @parameter0: android.animation.ObjectAnimator;

        r1 := @parameter1: android.animation.ObjectAnimator;

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        return;

     label2:
        f0 = 0.0F;

        $z0 = virtualinvoke r0.<android.animation.ObjectAnimator: boolean isStarted()>();

        if $z0 == 0 goto label3;

        virtualinvoke r0.<android.animation.ObjectAnimator: void cancel()>();

        $f3 = virtualinvoke r0.<android.animation.ObjectAnimator: float getAnimatedFraction()>();

        f0 = 1.0F - $f3;

     label3:
        $l1 = virtualinvoke r1.<android.animation.ObjectAnimator: long getDuration()>();

        $f1 = (float) $l1;

        $f2 = $f1 * f0;

        l0 = (long) $f2;

        virtualinvoke r1.<android.animation.ObjectAnimator: void start()>();

        virtualinvoke r1.<android.animation.ObjectAnimator: void setCurrentPlayTime(long)>(l0);

        return;
    }

    public void startWhileTypingFadeinAnimation()
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        android.animation.ObjectAnimator $r1, $r2;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        $r2 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: android.animation.ObjectAnimator mAltCodeKeyWhileTypingFadeoutAnimator>;

        $r1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: android.animation.ObjectAnimator mAltCodeKeyWhileTypingFadeinAnimator>;

        staticinvoke <com.android.inputmethod.keyboard.MainKeyboardView: void cancelAndStartAnimators(android.animation.ObjectAnimator,android.animation.ObjectAnimator)>($r2, $r1);

        return;
    }

    public void startWhileTypingFadeoutAnimation()
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        android.animation.ObjectAnimator $r1, $r2;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        $r2 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: android.animation.ObjectAnimator mAltCodeKeyWhileTypingFadeinAnimator>;

        $r1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: android.animation.ObjectAnimator mAltCodeKeyWhileTypingFadeoutAnimator>;

        staticinvoke <com.android.inputmethod.keyboard.MainKeyboardView: void cancelAndStartAnimators(android.animation.ObjectAnimator,android.animation.ObjectAnimator)>($r2, $r1);

        return;
    }

    public int getLanguageOnSpacebarAnimAlpha()
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        int $i0;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        $i0 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: int mLanguageOnSpacebarAnimAlpha>;

        return $i0;
    }

    public void setLanguageOnSpacebarAnimAlpha(int)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        int i0;
        com.android.inputmethod.keyboard.Key $r1;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        i0 := @parameter0: int;

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: int mLanguageOnSpacebarAnimAlpha> = i0;

        $r1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.Key mSpaceKey>;

        virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void invalidateKey(com.android.inputmethod.keyboard.Key)>($r1);

        return;
    }

    public int getAltCodeKeyWhileTypingAnimAlpha()
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        int $i0;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        $i0 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: int mAltCodeKeyWhileTypingAnimAlpha>;

        return $i0;
    }

    public void setAltCodeKeyWhileTypingAnimAlpha(int)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        int i0, $i1;
        com.android.inputmethod.keyboard.Keyboard r1;
        java.util.Iterator r2;
        com.android.inputmethod.keyboard.Key r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: int mAltCodeKeyWhileTypingAnimAlpha>;

        if $i1 != i0 goto label1;

        return;

     label1:
        r0.<com.android.inputmethod.keyboard.MainKeyboardView: int mAltCodeKeyWhileTypingAnimAlpha> = i0;

        r1 = virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.Keyboard getKeyboard()>();

        if r1 != null goto label2;

        return;

     label2:
        $r4 = r1.<com.android.inputmethod.keyboard.Keyboard: java.util.List mAltCodeKeysWhileTyping>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.inputmethod.keyboard.Key) $r5;

        virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void invalidateKey(com.android.inputmethod.keyboard.Key)>(r3);

        goto label3;

     label4:
        return;
    }

    public void setKeyboardActionListener(com.android.inputmethod.keyboard.KeyboardActionListener)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        com.android.inputmethod.keyboard.KeyboardActionListener r1;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        r1 := @parameter0: com.android.inputmethod.keyboard.KeyboardActionListener;

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.KeyboardActionListener mKeyboardActionListener> = r1;

        staticinvoke <com.android.inputmethod.keyboard.PointerTracker: void setKeyboardActionListener(com.android.inputmethod.keyboard.KeyboardActionListener)>(r1);

        return;
    }

    public int getKeyX(int)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        int i0, $i1;
        boolean $z0;
        com.android.inputmethod.keyboard.KeyDetector $r1;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        i0 := @parameter0: int;

        $z0 = staticinvoke <com.android.inputmethod.latin.Constants: boolean isValidCoordinate(int)>(i0);

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.KeyDetector mKeyDetector>;

        $i1 = virtualinvoke $r1.<com.android.inputmethod.keyboard.KeyDetector: int getTouchX(int)>(i0);

        goto label2;

     label1:
        $i1 = i0;

     label2:
        return $i1;
    }

    public int getKeyY(int)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        int i0, $i1;
        boolean $z0;
        com.android.inputmethod.keyboard.KeyDetector $r1;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        i0 := @parameter0: int;

        $z0 = staticinvoke <com.android.inputmethod.latin.Constants: boolean isValidCoordinate(int)>(i0);

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.KeyDetector mKeyDetector>;

        $i1 = virtualinvoke $r1.<com.android.inputmethod.keyboard.KeyDetector: int getTouchY(int)>(i0);

        goto label2;

     label1:
        $i1 = i0;

     label2:
        return $i1;
    }

    public void setKeyboard(com.android.inputmethod.keyboard.Keyboard)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        com.android.inputmethod.keyboard.Keyboard r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.android.inputmethod.keyboard.internal.TimerHandler $r2;
        com.android.inputmethod.keyboard.KeyDetector $r3, $r4, $r11;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        java.util.WeakHashMap $r5;
        com.android.inputmethod.keyboard.Key $r6;
        com.android.inputmethod.accessibility.AccessibilityUtils $r7;
        com.android.inputmethod.accessibility.MainKeyboardAccessibilityDelegate $r8, $r9, $r10;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        r1 := @parameter0: com.android.inputmethod.keyboard.Keyboard;

        $r2 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.TimerHandler mKeyTimerHandler>;

        virtualinvoke $r2.<com.android.inputmethod.keyboard.internal.TimerHandler: void cancelLongPressTimers()>();

        specialinvoke r0.<com.android.inputmethod.keyboard.KeyboardView: void setKeyboard(com.android.inputmethod.keyboard.Keyboard)>(r1);

        $r3 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.KeyDetector mKeyDetector>;

        $i1 = virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: int getPaddingLeft()>();

        $i2 = neg $i1;

        $f0 = (float) $i2;

        $i3 = virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: int getPaddingTop()>();

        $i4 = neg $i3;

        $f1 = (float) $i4;

        $f2 = virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: float getVerticalCorrection()>();

        $f3 = $f1 + $f2;

        virtualinvoke $r3.<com.android.inputmethod.keyboard.KeyDetector: void setKeyboard(com.android.inputmethod.keyboard.Keyboard,float,float)>(r1, $f0, $f3);

        $r4 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.KeyDetector mKeyDetector>;

        staticinvoke <com.android.inputmethod.keyboard.PointerTracker: void setKeyDetector(com.android.inputmethod.keyboard.KeyDetector)>($r4);

        $r5 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: java.util.WeakHashMap mMoreKeysKeyboardCache>;

        virtualinvoke $r5.<java.util.WeakHashMap: void clear()>();

        $r6 = virtualinvoke r1.<com.android.inputmethod.keyboard.Keyboard: com.android.inputmethod.keyboard.Key getKey(int)>(32);

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.Key mSpaceKey> = $r6;

        $i5 = r1.<com.android.inputmethod.keyboard.Keyboard: int mMostCommonKeyHeight>;

        $i6 = r1.<com.android.inputmethod.keyboard.Keyboard: int mVerticalGap>;

        i0 = $i5 - $i6;

        $f4 = (float) i0;

        $f5 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: float mLanguageOnSpacebarTextRatio>;

        $f6 = $f4 * $f5;

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: float mLanguageOnSpacebarTextSize> = $f6;

        $r7 = staticinvoke <com.android.inputmethod.accessibility.AccessibilityUtils: com.android.inputmethod.accessibility.AccessibilityUtils getInstance()>();

        $z0 = virtualinvoke $r7.<com.android.inputmethod.accessibility.AccessibilityUtils: boolean isAccessibilityEnabled()>();

        if $z0 == 0 goto label2;

        $r8 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.accessibility.MainKeyboardAccessibilityDelegate mAccessibilityDelegate>;

        if $r8 != null goto label1;

        $r9 = new com.android.inputmethod.accessibility.MainKeyboardAccessibilityDelegate;

        $r11 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.KeyDetector mKeyDetector>;

        specialinvoke $r9.<com.android.inputmethod.accessibility.MainKeyboardAccessibilityDelegate: void <init>(com.android.inputmethod.keyboard.MainKeyboardView,com.android.inputmethod.keyboard.KeyDetector)>(r0, $r11);

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.accessibility.MainKeyboardAccessibilityDelegate mAccessibilityDelegate> = $r9;

     label1:
        $r10 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.accessibility.MainKeyboardAccessibilityDelegate mAccessibilityDelegate>;

        virtualinvoke $r10.<com.android.inputmethod.accessibility.MainKeyboardAccessibilityDelegate: void setKeyboard(com.android.inputmethod.keyboard.Keyboard)>(r1);

        goto label3;

     label2:
        r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.accessibility.MainKeyboardAccessibilityDelegate mAccessibilityDelegate> = null;

     label3:
        return;
    }

    public void setKeyPreviewPopupEnabled(boolean, int)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        boolean z0;
        int i0;
        com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams $r1;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        $r1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams mKeyPreviewDrawParams>;

        virtualinvoke $r1.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: void setPopupEnabled(boolean,int)>(z0, i0);

        return;
    }

    public void setKeyPreviewAnimationParams(boolean, float, float, int, float, float, int)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        boolean z0;
        float f0, f1, f2, f3;
        int i0, i1;
        com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams $r1;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        z0 := @parameter0: boolean;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        i0 := @parameter3: int;

        f2 := @parameter4: float;

        f3 := @parameter5: float;

        i1 := @parameter6: int;

        $r1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams mKeyPreviewDrawParams>;

        virtualinvoke $r1.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: void setAnimationParams(boolean,float,float,int,float,float,int)>(z0, f0, f1, i0, f2, f3, i1);

        return;
    }

    private void locatePreviewPlacerView()
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        int[] $r1, $r3;
        com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView $r2;
        int $i0, $i1;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        $r1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: int[] mOriginCoords>;

        virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void getLocationInWindow(int[])>($r1);

        $r2 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView mDrawingPreviewPlacerView>;

        $r3 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: int[] mOriginCoords>;

        $i0 = virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: int getWidth()>();

        $i1 = virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: int getHeight()>();

        virtualinvoke $r2.<com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView: void setKeyboardViewGeometry(int[],int,int)>($r3, $i0, $i1);

        return;
    }

    private void installPreviewPlacerView()
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        android.view.View r1, $r3;
        android.view.ViewGroup r2;
        com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView $r4;
        java.lang.String $r5, $r6;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        r1 = virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: android.view.View getRootView()>();

        if r1 != null goto label1;

        $r6 = <com.android.inputmethod.keyboard.MainKeyboardView: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r6, "Cannot find root view");

        return;

     label1:
        $r3 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16908290);

        r2 = (android.view.ViewGroup) $r3;

        if r2 != null goto label2;

        $r5 = <com.android.inputmethod.keyboard.MainKeyboardView: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r5, "Cannot find android.R.id.content view to add DrawingPreviewPlacerView");

        return;

     label2:
        $r4 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView mDrawingPreviewPlacerView>;

        virtualinvoke r2.<android.view.ViewGroup: void addView(android.view.View)>($r4);

        return;
    }

    public void dismissAllKeyPreviews()
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer $r1;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        $r1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer mKeyPreviewChoreographer>;

        virtualinvoke $r1.<com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer: void dismissAllKeyPreviews()>();

        staticinvoke <com.android.inputmethod.keyboard.PointerTracker: void setReleasedKeyGraphicsToAllKeys()>();

        return;
    }

    public void showKeyPreview(com.android.inputmethod.keyboard.Key)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        com.android.inputmethod.keyboard.Key r1;
        com.android.inputmethod.keyboard.Keyboard r2;
        com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams r3;
        boolean $z0, $z1, $z2;
        int[] $r4, $r8;
        com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer $r5;
        com.android.inputmethod.keyboard.internal.KeyboardIconsSet $r6;
        com.android.inputmethod.keyboard.internal.KeyDrawParams $r7;
        int $i0, $i1, $i2;
        com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView $r9;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        r1 := @parameter0: com.android.inputmethod.keyboard.Key;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.inputmethod.keyboard.Key: boolean noKeyPreview()>();

        if $z0 == 0 goto label2;

     label1:
        return;

     label2:
        r2 = virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.Keyboard getKeyboard()>();

        if r2 != null goto label3;

        return;

     label3:
        r3 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams mKeyPreviewDrawParams>;

        $z1 = virtualinvoke r3.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: boolean isPopupEnabled()>();

        if $z1 != 0 goto label4;

        $i1 = r2.<com.android.inputmethod.keyboard.Keyboard: int mVerticalGap>;

        $i2 = neg $i1;

        virtualinvoke r3.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: void setVisibleOffset(int)>($i2);

        return;

     label4:
        specialinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void locatePreviewPlacerView()>();

        $r4 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: int[] mOriginCoords>;

        virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void getLocationInWindow(int[])>($r4);

        $r5 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer mKeyPreviewChoreographer>;

        $r6 = r2.<com.android.inputmethod.keyboard.Keyboard: com.android.inputmethod.keyboard.internal.KeyboardIconsSet mIconsSet>;

        $r7 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.KeyDrawParams mKeyDrawParams>;

        $i0 = virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: int getWidth()>();

        $r8 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: int[] mOriginCoords>;

        $r9 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView mDrawingPreviewPlacerView>;

        $z2 = virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: boolean isHardwareAccelerated()>();

        virtualinvoke $r5.<com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer: void placeAndShowKeyPreview(com.android.inputmethod.keyboard.Key,com.android.inputmethod.keyboard.internal.KeyboardIconsSet,com.android.inputmethod.keyboard.internal.KeyDrawParams,int,int[],android.view.ViewGroup,boolean)>(r1, $r6, $r7, $i0, $r8, $r9, $z2);

        return;
    }

    public void dismissKeyPreviewWithoutDelay(com.android.inputmethod.keyboard.Key)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        com.android.inputmethod.keyboard.Key r1;
        com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer $r2;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        r1 := @parameter0: com.android.inputmethod.keyboard.Key;

        $r2 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer mKeyPreviewChoreographer>;

        virtualinvoke $r2.<com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer: void dismissKeyPreview(com.android.inputmethod.keyboard.Key,boolean)>(r1, 0);

        virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void invalidateKey(com.android.inputmethod.keyboard.Key)>(r1);

        return;
    }

    public void dismissKeyPreview(com.android.inputmethod.keyboard.Key)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        com.android.inputmethod.keyboard.Key r1;
        boolean $z0;
        com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer $r2;
        com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams $r3;
        com.android.inputmethod.keyboard.internal.DrawingHandler $r4;
        int $i0;
        long $l1;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        r1 := @parameter0: com.android.inputmethod.keyboard.Key;

        $z0 = virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: boolean isHardwareAccelerated()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.DrawingHandler mDrawingHandler>;

        $r3 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams mKeyPreviewDrawParams>;

        $i0 = virtualinvoke $r3.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int getLingerTimeout()>();

        $l1 = (long) $i0;

        virtualinvoke $r4.<com.android.inputmethod.keyboard.internal.DrawingHandler: void dismissKeyPreview(long,com.android.inputmethod.keyboard.Key)>($l1, r1);

        return;

     label1:
        $r2 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer mKeyPreviewChoreographer>;

        virtualinvoke $r2.<com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer: void dismissKeyPreview(com.android.inputmethod.keyboard.Key,boolean)>(r1, 1);

        return;
    }

    public void setSlidingKeyInputPreviewEnabled(boolean)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        boolean z0;
        com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview $r1;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview mSlidingKeyInputDrawingPreview>;

        virtualinvoke $r1.<com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview: void setPreviewEnabled(boolean)>(z0);

        return;
    }

    public void showSlidingKeyInputPreview(com.android.inputmethod.keyboard.PointerTracker)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        com.android.inputmethod.keyboard.PointerTracker r1;
        com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview $r2;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        r1 := @parameter0: com.android.inputmethod.keyboard.PointerTracker;

        specialinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void locatePreviewPlacerView()>();

        $r2 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview mSlidingKeyInputDrawingPreview>;

        virtualinvoke $r2.<com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview: void setPreviewPosition(com.android.inputmethod.keyboard.PointerTracker)>(r1);

        return;
    }

    public void dismissSlidingKeyInputPreview()
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview $r1;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        $r1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview mSlidingKeyInputDrawingPreview>;

        virtualinvoke $r1.<com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview: void dismissSlidingKeyInputPreview()>();

        return;
    }

    private void setGesturePreviewMode(boolean, boolean)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        boolean z0, z1;
        com.android.inputmethod.keyboard.internal.GestureFloatingTextDrawingPreview $r1;
        com.android.inputmethod.keyboard.internal.GestureTrailsDrawingPreview $r2;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.GestureFloatingTextDrawingPreview mGestureFloatingTextDrawingPreview>;

        virtualinvoke $r1.<com.android.inputmethod.keyboard.internal.GestureFloatingTextDrawingPreview: void setPreviewEnabled(boolean)>(z1);

        $r2 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.GestureTrailsDrawingPreview mGestureTrailsDrawingPreview>;

        virtualinvoke $r2.<com.android.inputmethod.keyboard.internal.GestureTrailsDrawingPreview: void setPreviewEnabled(boolean)>(z0);

        return;
    }

    public void showGestureFloatingPreviewText(com.android.inputmethod.latin.SuggestedWords)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        com.android.inputmethod.latin.SuggestedWords r1;
        com.android.inputmethod.keyboard.internal.GestureFloatingTextDrawingPreview $r2;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        r1 := @parameter0: com.android.inputmethod.latin.SuggestedWords;

        specialinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void locatePreviewPlacerView()>();

        $r2 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.GestureFloatingTextDrawingPreview mGestureFloatingTextDrawingPreview>;

        virtualinvoke $r2.<com.android.inputmethod.keyboard.internal.GestureFloatingTextDrawingPreview: void setSuggetedWords(com.android.inputmethod.latin.SuggestedWords)>(r1);

        return;
    }

    public void dismissGestureFloatingPreviewText()
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        int $i0;
        long $l1;
        com.android.inputmethod.keyboard.internal.DrawingHandler $r1;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        specialinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void locatePreviewPlacerView()>();

        $r1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.DrawingHandler mDrawingHandler>;

        $i0 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: int mGestureFloatingPreviewTextLingerTimeout>;

        $l1 = (long) $i0;

        virtualinvoke $r1.<com.android.inputmethod.keyboard.internal.DrawingHandler: void dismissGestureFloatingPreviewText(long)>($l1);

        return;
    }

    public void showGestureTrail(com.android.inputmethod.keyboard.PointerTracker, boolean)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        com.android.inputmethod.keyboard.PointerTracker r1;
        boolean z0;
        com.android.inputmethod.keyboard.internal.GestureTrailsDrawingPreview $r2;
        com.android.inputmethod.keyboard.internal.GestureFloatingTextDrawingPreview $r3;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        r1 := @parameter0: com.android.inputmethod.keyboard.PointerTracker;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void locatePreviewPlacerView()>();

        if z0 == 0 goto label1;

        $r3 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.GestureFloatingTextDrawingPreview mGestureFloatingTextDrawingPreview>;

        virtualinvoke $r3.<com.android.inputmethod.keyboard.internal.GestureFloatingTextDrawingPreview: void setPreviewPosition(com.android.inputmethod.keyboard.PointerTracker)>(r1);

     label1:
        $r2 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.GestureTrailsDrawingPreview mGestureTrailsDrawingPreview>;

        virtualinvoke $r2.<com.android.inputmethod.keyboard.internal.GestureTrailsDrawingPreview: void setPreviewPosition(com.android.inputmethod.keyboard.PointerTracker)>(r1);

        return;
    }

    public void setMainDictionaryAvailability(boolean)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        boolean z0;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        z0 := @parameter0: boolean;

        staticinvoke <com.android.inputmethod.keyboard.PointerTracker: void setMainDictionaryAvailability(boolean)>(z0);

        return;
    }

    public void setGestureHandlingEnabledByUser(boolean, boolean, boolean)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        boolean z0, z1, z2, $z3, $z4;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        staticinvoke <com.android.inputmethod.keyboard.PointerTracker: void setGestureHandlingEnabledByUser(boolean)>(z0);

        if z0 == 0 goto label1;

        if z1 == 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        if z0 == 0 goto label3;

        if z2 == 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        specialinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void setGesturePreviewMode(boolean,boolean)>($z4, $z3);

        return;
    }

    protected void onAttachedToWindow()
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        specialinvoke r0.<com.android.inputmethod.keyboard.KeyboardView: void onAttachedToWindow()>();

        specialinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void installPreviewPlacerView()>();

        return;
    }

    protected void onDetachedFromWindow()
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView $r1;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        specialinvoke r0.<com.android.inputmethod.keyboard.KeyboardView: void onDetachedFromWindow()>();

        $r1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView mDrawingPreviewPlacerView>;

        virtualinvoke $r1.<com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView: void removeAllViews()>();

        return;
    }

    private com.android.inputmethod.keyboard.MoreKeysPanel onCreateMoreKeysPanel(com.android.inputmethod.keyboard.Key, android.content.Context)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        com.android.inputmethod.keyboard.Key r1;
        android.content.Context r2;
        com.android.inputmethod.keyboard.internal.MoreKeySpec[] r3;
        com.android.inputmethod.keyboard.Keyboard r4, $r13;
        boolean z0, $z1, $z2, $z3, $z4;
        com.android.inputmethod.keyboard.MoreKeysKeyboard$Builder r5, $r11;
        java.util.WeakHashMap $r6, $r16;
        java.lang.Object $r7;
        android.view.View $r8, $r9, r19;
        com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams $r10, $r12, $r14, $r18;
        int $i0, $i1, $i2, $i3;
        android.graphics.Paint $r15;
        com.android.inputmethod.keyboard.MoreKeysKeyboardView r20;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        r1 := @parameter0: com.android.inputmethod.keyboard.Key;

        r2 := @parameter1: android.content.Context;

        r3 = virtualinvoke r1.<com.android.inputmethod.keyboard.Key: com.android.inputmethod.keyboard.internal.MoreKeySpec[] getMoreKeys()>();

        if r3 != null goto label1;

        return null;

     label1:
        $r6 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: java.util.WeakHashMap mMoreKeysKeyboardCache>;

        $r7 = virtualinvoke $r6.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.android.inputmethod.keyboard.Keyboard) $r7;

        if r4 != null goto label4;

        $r10 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams mKeyPreviewDrawParams>;

        $z2 = virtualinvoke $r10.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: boolean isPopupEnabled()>();

        if $z2 == 0 goto label2;

        $z3 = virtualinvoke r1.<com.android.inputmethod.keyboard.Key: boolean noKeyPreview()>();

        if $z3 != 0 goto label2;

        $i2 = lengthof r3;

        if $i2 != 1 goto label2;

        $r18 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams mKeyPreviewDrawParams>;

        $i3 = virtualinvoke $r18.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int getVisibleWidth()>();

        if $i3 <= 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        z0 = $z4;

        $r11 = new com.android.inputmethod.keyboard.MoreKeysKeyboard$Builder;

        $r13 = virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.Keyboard getKeyboard()>();

        $r12 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams mKeyPreviewDrawParams>;

        $i0 = virtualinvoke $r12.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int getVisibleWidth()>();

        $r14 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams mKeyPreviewDrawParams>;

        $i1 = virtualinvoke $r14.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int getVisibleHeight()>();

        $r15 = virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: android.graphics.Paint newLabelPaint(com.android.inputmethod.keyboard.Key)>(r1);

        specialinvoke $r11.<com.android.inputmethod.keyboard.MoreKeysKeyboard$Builder: void <init>(android.content.Context,com.android.inputmethod.keyboard.Key,com.android.inputmethod.keyboard.Keyboard,boolean,int,int,android.graphics.Paint)>(r2, r1, $r13, z0, $i0, $i1, $r15);

        r5 = $r11;

        r4 = virtualinvoke r5.<com.android.inputmethod.keyboard.MoreKeysKeyboard$Builder: com.android.inputmethod.keyboard.MoreKeysKeyboard build()>();

        $r16 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: java.util.WeakHashMap mMoreKeysKeyboardCache>;

        virtualinvoke $r16.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

     label4:
        $z1 = virtualinvoke r1.<com.android.inputmethod.keyboard.Key: boolean isActionKey()>();

        if $z1 == 0 goto label5;

        $r9 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: android.view.View mMoreKeysKeyboardForActionContainer>;

        goto label6;

     label5:
        $r9 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: android.view.View mMoreKeysKeyboardContainer>;

     label6:
        r19 = $r9;

        $r8 = virtualinvoke r19.<android.view.View: android.view.View findViewById(int)>(2131755128);

        r20 = (com.android.inputmethod.keyboard.MoreKeysKeyboardView) $r8;

        virtualinvoke r20.<com.android.inputmethod.keyboard.MoreKeysKeyboardView: void setKeyboard(com.android.inputmethod.keyboard.Keyboard)>(r4);

        virtualinvoke r19.<android.view.View: void measure(int,int)>(-2, -2);

        return r20;
    }

    public void onLongPress(com.android.inputmethod.keyboard.PointerTracker)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        com.android.inputmethod.keyboard.PointerTracker r1;
        com.android.inputmethod.keyboard.Key r2;
        com.android.inputmethod.keyboard.KeyboardActionListener r3;
        int i0, i1;
        boolean $z0, $z1, $z2;
        com.android.inputmethod.keyboard.internal.MoreKeySpec[] $r4;
        com.android.inputmethod.keyboard.internal.MoreKeySpec $r5;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        r1 := @parameter0: com.android.inputmethod.keyboard.PointerTracker;

        $z0 = virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: boolean isShowingMoreKeysPanel()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        r2 = virtualinvoke r1.<com.android.inputmethod.keyboard.PointerTracker: com.android.inputmethod.keyboard.Key getKey()>();

        if r2 != null goto label2;

        return;

     label2:
        r3 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.KeyboardActionListener mKeyboardActionListener>;

        $z1 = virtualinvoke r2.<com.android.inputmethod.keyboard.Key: boolean hasNoPanelAutoMoreKey()>();

        if $z1 == 0 goto label3;

        $r4 = virtualinvoke r2.<com.android.inputmethod.keyboard.Key: com.android.inputmethod.keyboard.internal.MoreKeySpec[] getMoreKeys()>();

        $r5 = $r4[0];

        i0 = $r5.<com.android.inputmethod.keyboard.internal.MoreKeySpec: int mCode>;

        virtualinvoke r1.<com.android.inputmethod.keyboard.PointerTracker: void onLongPressed()>();

        interfaceinvoke r3.<com.android.inputmethod.keyboard.KeyboardActionListener: void onPressKey(int,int,boolean)>(i0, 0, 1);

        interfaceinvoke r3.<com.android.inputmethod.keyboard.KeyboardActionListener: void onCodeInput(int,int,int,boolean)>(i0, -1, -1, 0);

        interfaceinvoke r3.<com.android.inputmethod.keyboard.KeyboardActionListener: void onReleaseKey(int,boolean)>(i0, 0);

        return;

     label3:
        i1 = virtualinvoke r2.<com.android.inputmethod.keyboard.Key: int getCode()>();

        if i1 == 32 goto label4;

        if i1 != -10 goto label5;

     label4:
        $z2 = interfaceinvoke r3.<com.android.inputmethod.keyboard.KeyboardActionListener: boolean onCustomRequest(int)>(1);

        if $z2 == 0 goto label5;

        virtualinvoke r1.<com.android.inputmethod.keyboard.PointerTracker: void onLongPressed()>();

        interfaceinvoke r3.<com.android.inputmethod.keyboard.KeyboardActionListener: void onReleaseKey(int,boolean)>(i1, 0);

        return;

     label5:
        specialinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void openMoreKeysPanel(com.android.inputmethod.keyboard.Key,com.android.inputmethod.keyboard.PointerTracker)>(r2, r1);

        return;
    }

    private void openMoreKeysPanel(com.android.inputmethod.keyboard.Key, com.android.inputmethod.keyboard.PointerTracker)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        com.android.inputmethod.keyboard.Key r1;
        com.android.inputmethod.keyboard.PointerTracker r2;
        com.android.inputmethod.keyboard.MoreKeysPanel r3;
        int[] r4;
        boolean z0, $z1, $z2, $z3, $z4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.content.Context $r5;
        com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams $r6, $r7;
        com.android.inputmethod.keyboard.KeyboardActionListener $r8;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        r1 := @parameter0: com.android.inputmethod.keyboard.Key;

        r2 := @parameter1: com.android.inputmethod.keyboard.PointerTracker;

        $r5 = virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: android.content.Context getContext()>();

        r3 = specialinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.MoreKeysPanel onCreateMoreKeysPanel(com.android.inputmethod.keyboard.Key,android.content.Context)>(r1, $r5);

        if r3 != null goto label1;

        return;

     label1:
        r4 = staticinvoke <com.android.inputmethod.latin.utils.CoordinateUtils: int[] newInstance()>();

        virtualinvoke r2.<com.android.inputmethod.keyboard.PointerTracker: void getLastCoordinates(int[])>(r4);

        $r6 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams mKeyPreviewDrawParams>;

        $z1 = virtualinvoke $r6.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: boolean isPopupEnabled()>();

        if $z1 == 0 goto label2;

        $z4 = virtualinvoke r1.<com.android.inputmethod.keyboard.Key: boolean noKeyPreview()>();

        if $z4 != 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        z0 = $z3;

        $z2 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: boolean mConfigShowMoreKeysKeyboardAtTouchedPoint>;

        if $z2 == 0 goto label4;

        if z0 != 0 goto label4;

        $i7 = staticinvoke <com.android.inputmethod.latin.utils.CoordinateUtils: int x(int[])>(r4);

        goto label5;

     label4:
        $i2 = virtualinvoke r1.<com.android.inputmethod.keyboard.Key: int getX()>();

        $i3 = virtualinvoke r1.<com.android.inputmethod.keyboard.Key: int getWidth()>();

        $i5 = $i3 / 2;

        $i7 = $i2 + $i5;

     label5:
        i0 = $i7;

        $i4 = virtualinvoke r1.<com.android.inputmethod.keyboard.Key: int getY()>();

        $r7 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams mKeyPreviewDrawParams>;

        $i6 = virtualinvoke $r7.<com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams: int getVisibleOffset()>();

        i1 = $i4 + $i6;

        $r8 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.KeyboardActionListener mKeyboardActionListener>;

        interfaceinvoke r3.<com.android.inputmethod.keyboard.MoreKeysPanel: void showMoreKeysPanel(android.view.View,com.android.inputmethod.keyboard.MoreKeysPanel$Controller,int,int,com.android.inputmethod.keyboard.KeyboardActionListener)>(r0, r0, i0, i1, $r8);

        virtualinvoke r2.<com.android.inputmethod.keyboard.PointerTracker: void onShowMoreKeysPanel(com.android.inputmethod.keyboard.MoreKeysPanel)>(r3);

        virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void dismissKeyPreviewWithoutDelay(com.android.inputmethod.keyboard.Key)>(r1);

        return;
    }

    public boolean isInDraggingFinger()
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        boolean $z0, $z1;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        $z0 = virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: boolean isShowingMoreKeysPanel()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = staticinvoke <com.android.inputmethod.keyboard.PointerTracker: boolean isAnyInDraggingFinger()>();

        return $z1;
    }

    public void onShowMoreKeysPanel(com.android.inputmethod.keyboard.MoreKeysPanel)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        com.android.inputmethod.keyboard.MoreKeysPanel r1;
        com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView $r2;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        r1 := @parameter0: com.android.inputmethod.keyboard.MoreKeysPanel;

        specialinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void locatePreviewPlacerView()>();

        $r2 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView mDrawingPreviewPlacerView>;

        interfaceinvoke r1.<com.android.inputmethod.keyboard.MoreKeysPanel: void showInParent(android.view.ViewGroup)>($r2);

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.MoreKeysPanel mMoreKeysPanel> = r1;

        specialinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void dimEntireKeyboard(boolean)>(1);

        return;
    }

    public boolean isShowingMoreKeysPanel()
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        com.android.inputmethod.keyboard.MoreKeysPanel $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        $r1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.MoreKeysPanel mMoreKeysPanel>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.MoreKeysPanel mMoreKeysPanel>;

        $z0 = interfaceinvoke $r2.<com.android.inputmethod.keyboard.MoreKeysPanel: boolean isShowingInParent()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void onCancelMoreKeysPanel()
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        staticinvoke <com.android.inputmethod.keyboard.PointerTracker: void dismissAllMoreKeysPanels()>();

        return;
    }

    public void onDismissMoreKeysPanel()
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        boolean $z0;
        com.android.inputmethod.keyboard.MoreKeysPanel $r1;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        specialinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void dimEntireKeyboard(boolean)>(0);

        $z0 = virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: boolean isShowingMoreKeysPanel()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.MoreKeysPanel mMoreKeysPanel>;

        interfaceinvoke $r1.<com.android.inputmethod.keyboard.MoreKeysPanel: void removeFromParent()>();

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.MoreKeysPanel mMoreKeysPanel> = null;

     label1:
        return;
    }

    public void startDoubleTapShiftKeyTimer()
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        com.android.inputmethod.keyboard.internal.TimerHandler $r1;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        $r1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.TimerHandler mKeyTimerHandler>;

        virtualinvoke $r1.<com.android.inputmethod.keyboard.internal.TimerHandler: void startDoubleTapShiftKeyTimer()>();

        return;
    }

    public void cancelDoubleTapShiftKeyTimer()
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        com.android.inputmethod.keyboard.internal.TimerHandler $r1;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        $r1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.TimerHandler mKeyTimerHandler>;

        virtualinvoke $r1.<com.android.inputmethod.keyboard.internal.TimerHandler: void cancelDoubleTapShiftKeyTimer()>();

        return;
    }

    public boolean isInDoubleTapShiftKeyTimeout()
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        com.android.inputmethod.keyboard.internal.TimerHandler $r1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        $r1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.TimerHandler mKeyTimerHandler>;

        $z0 = virtualinvoke $r1.<com.android.inputmethod.keyboard.internal.TimerHandler: boolean isInDoubleTapShiftKeyTimeout()>();

        return $z0;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        android.view.MotionEvent r1;
        com.android.inputmethod.keyboard.Keyboard $r2;
        com.android.inputmethod.keyboard.internal.NonDistinctMultitouchHelper $r3, $r5;
        boolean $z0, $z1;
        int $i0;
        com.android.inputmethod.keyboard.KeyDetector $r4;
        com.android.inputmethod.keyboard.internal.TimerHandler $r6, $r7;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.Keyboard getKeyboard()>();

        if $r2 != null goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.NonDistinctMultitouchHelper mNonDistinctMultitouchHelper>;

        if $r3 == null goto label3;

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getPointerCount()>();

        if $i0 <= 1 goto label2;

        $r6 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.TimerHandler mKeyTimerHandler>;

        $z1 = virtualinvoke $r6.<com.android.inputmethod.keyboard.internal.TimerHandler: boolean isInKeyRepeat()>();

        if $z1 == 0 goto label2;

        $r7 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.TimerHandler mKeyTimerHandler>;

        virtualinvoke $r7.<com.android.inputmethod.keyboard.internal.TimerHandler: void cancelKeyRepeatTimers()>();

     label2:
        $r5 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.NonDistinctMultitouchHelper mNonDistinctMultitouchHelper>;

        $r4 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.KeyDetector mKeyDetector>;

        virtualinvoke $r5.<com.android.inputmethod.keyboard.internal.NonDistinctMultitouchHelper: void processMotionEvent(android.view.MotionEvent,com.android.inputmethod.keyboard.KeyDetector)>(r1, $r4);

        return 1;

     label3:
        $z0 = virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: boolean processMotionEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public boolean processMotionEvent(android.view.MotionEvent)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        android.view.MotionEvent r1;
        int i0, i1, $i2;
        com.android.inputmethod.keyboard.PointerTracker r2;
        boolean $z0, $z1;
        com.android.inputmethod.keyboard.KeyDetector $r3;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        i1 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i0);

        r2 = staticinvoke <com.android.inputmethod.keyboard.PointerTracker: com.android.inputmethod.keyboard.PointerTracker getPointerTracker(int)>(i1);

        $z0 = virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: boolean isShowingMoreKeysPanel()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r2.<com.android.inputmethod.keyboard.PointerTracker: boolean isShowingMoreKeysPanel()>();

        if $z1 != 0 goto label1;

        $i2 = staticinvoke <com.android.inputmethod.keyboard.PointerTracker: int getActivePointerTrackerCount()>();

        if $i2 != 1 goto label1;

        return 1;

     label1:
        $r3 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.KeyDetector mKeyDetector>;

        virtualinvoke r2.<com.android.inputmethod.keyboard.PointerTracker: void processMotionEvent(android.view.MotionEvent,com.android.inputmethod.keyboard.KeyDetector)>(r1, $r3);

        return 1;
    }

    public void cancelAllOngoingEvents()
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        com.android.inputmethod.keyboard.internal.TimerHandler $r1;
        com.android.inputmethod.keyboard.internal.DrawingHandler $r2;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        $r1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.TimerHandler mKeyTimerHandler>;

        virtualinvoke $r1.<com.android.inputmethod.keyboard.internal.TimerHandler: void cancelAllMessages()>();

        $r2 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.DrawingHandler mDrawingHandler>;

        virtualinvoke $r2.<com.android.inputmethod.keyboard.internal.DrawingHandler: void cancelAllMessages()>();

        virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void dismissAllKeyPreviews()>();

        virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void dismissGestureFloatingPreviewText()>();

        virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void dismissSlidingKeyInputPreview()>();

        staticinvoke <com.android.inputmethod.keyboard.PointerTracker: void dismissAllMoreKeysPanels()>();

        staticinvoke <com.android.inputmethod.keyboard.PointerTracker: void cancelAllPointerTrackers()>();

        return;
    }

    public void closing()
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        java.util.WeakHashMap $r1;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void cancelAllOngoingEvents()>();

        $r1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: java.util.WeakHashMap mMoreKeysKeyboardCache>;

        virtualinvoke $r1.<java.util.WeakHashMap: void clear()>();

        return;
    }

    public void onHideWindow()
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        com.android.inputmethod.accessibility.MainKeyboardAccessibilityDelegate r1;
        com.android.inputmethod.accessibility.AccessibilityUtils $r2;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void onDismissMoreKeysPanel()>();

        r1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.accessibility.MainKeyboardAccessibilityDelegate mAccessibilityDelegate>;

        if r1 == null goto label1;

        $r2 = staticinvoke <com.android.inputmethod.accessibility.AccessibilityUtils: com.android.inputmethod.accessibility.AccessibilityUtils getInstance()>();

        $z0 = virtualinvoke $r2.<com.android.inputmethod.accessibility.AccessibilityUtils: boolean isAccessibilityEnabled()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<com.android.inputmethod.accessibility.MainKeyboardAccessibilityDelegate: void onHideWindow()>();

     label1:
        return;
    }

    public boolean onHoverEvent(android.view.MotionEvent)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        android.view.MotionEvent r1;
        com.android.inputmethod.accessibility.MainKeyboardAccessibilityDelegate r2;
        boolean $z0, $z1, $z2;
        com.android.inputmethod.accessibility.AccessibilityUtils $r3;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        r1 := @parameter0: android.view.MotionEvent;

        r2 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.accessibility.MainKeyboardAccessibilityDelegate mAccessibilityDelegate>;

        if r2 == null goto label1;

        $r3 = staticinvoke <com.android.inputmethod.accessibility.AccessibilityUtils: com.android.inputmethod.accessibility.AccessibilityUtils getInstance()>();

        $z1 = virtualinvoke $r3.<com.android.inputmethod.accessibility.AccessibilityUtils: boolean isTouchExplorationEnabled()>();

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r2.<com.android.inputmethod.accessibility.MainKeyboardAccessibilityDelegate: boolean onHoverEvent(android.view.MotionEvent)>(r1);

        return $z2;

     label1:
        $z0 = specialinvoke r0.<com.android.inputmethod.keyboard.KeyboardView: boolean onHoverEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public void updateShortcutKey(boolean)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        boolean z0;
        com.android.inputmethod.keyboard.Keyboard r1;
        com.android.inputmethod.keyboard.Key r2;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        z0 := @parameter0: boolean;

        r1 = virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.Keyboard getKeyboard()>();

        if r1 != null goto label1;

        return;

     label1:
        r2 = virtualinvoke r1.<com.android.inputmethod.keyboard.Keyboard: com.android.inputmethod.keyboard.Key getKey(int)>(-7);

        if r2 != null goto label2;

        return;

     label2:
        virtualinvoke r2.<com.android.inputmethod.keyboard.Key: void setEnabled(boolean)>(z0);

        virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void invalidateKey(com.android.inputmethod.keyboard.Key)>(r2);

        return;
    }

    public void startDisplayLanguageOnSpacebar(boolean, int, boolean)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        boolean z0, z1, $z2, $z3;
        int i0, $i1;
        android.animation.ObjectAnimator r1;
        com.android.inputmethod.keyboard.Key $r2;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        z1 := @parameter2: boolean;

        if z0 == 0 goto label1;

        staticinvoke <com.android.inputmethod.keyboard.internal.KeyPreviewView: void clearTextCache()>();

     label1:
        r0.<com.android.inputmethod.keyboard.MainKeyboardView: int mLanguageOnSpacebarFormatType> = i0;

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: boolean mHasMultipleEnabledIMEsOrSubtypes> = z1;

        r1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: android.animation.ObjectAnimator mLanguageOnSpacebarFadeoutAnimator>;

        if r1 != null goto label2;

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: int mLanguageOnSpacebarFormatType> = 0;

        goto label5;

     label2:
        if z0 == 0 goto label4;

        if i0 == 0 goto label4;

        virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void setLanguageOnSpacebarAnimAlpha(int)>(255);

        $z3 = virtualinvoke r1.<android.animation.ObjectAnimator: boolean isStarted()>();

        if $z3 == 0 goto label3;

        virtualinvoke r1.<android.animation.ObjectAnimator: void cancel()>();

     label3:
        virtualinvoke r1.<android.animation.ObjectAnimator: void start()>();

        goto label5;

     label4:
        $z2 = virtualinvoke r1.<android.animation.ObjectAnimator: boolean isStarted()>();

        if $z2 != 0 goto label5;

        $i1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: int mLanguageOnSpacebarFinalAlpha>;

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: int mLanguageOnSpacebarAnimAlpha> = $i1;

     label5:
        $r2 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.Key mSpaceKey>;

        virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void invalidateKey(com.android.inputmethod.keyboard.Key)>($r2);

        return;
    }

    private void dimEntireKeyboard(boolean)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        boolean z0, z1, $z2, $z3;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        z0 := @parameter0: boolean;

        $z2 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: boolean mNeedsToDimEntireKeyboard>;

        if $z2 == z0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z1 = $z3;

        r0.<com.android.inputmethod.keyboard.MainKeyboardView: boolean mNeedsToDimEntireKeyboard> = z0;

        if z1 == 0 goto label3;

        virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void invalidateAllKeys()>();

     label3:
        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        android.graphics.Canvas r1;
        boolean $z0;
        int $i0, $i1;
        float $f0, $f1;
        android.graphics.Paint $r2;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<com.android.inputmethod.keyboard.KeyboardView: void onDraw(android.graphics.Canvas)>(r1);

        $z0 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: boolean mNeedsToDimEntireKeyboard>;

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: int getWidth()>();

        $f0 = (float) $i0;

        $i1 = virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: int getHeight()>();

        $f1 = (float) $i1;

        $r2 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: android.graphics.Paint mBackgroundDimAlphaPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(0.0F, 0.0F, $f0, $f1, $r2);

     label1:
        return;
    }

    protected void onDrawKeyTopVisuals(com.android.inputmethod.keyboard.Key, android.graphics.Canvas, android.graphics.Paint, com.android.inputmethod.keyboard.internal.KeyDrawParams)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        com.android.inputmethod.keyboard.Key r1;
        android.graphics.Canvas r2;
        android.graphics.Paint r3;
        com.android.inputmethod.keyboard.internal.KeyDrawParams r4;
        int i0, $i1, $i2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        r1 := @parameter0: com.android.inputmethod.keyboard.Key;

        r2 := @parameter1: android.graphics.Canvas;

        r3 := @parameter2: android.graphics.Paint;

        r4 := @parameter3: com.android.inputmethod.keyboard.internal.KeyDrawParams;

        $z0 = virtualinvoke r1.<com.android.inputmethod.keyboard.Key: boolean altCodeWhileTyping()>();

        if $z0 == 0 goto label1;

        $z3 = virtualinvoke r1.<com.android.inputmethod.keyboard.Key: boolean isEnabled()>();

        if $z3 == 0 goto label1;

        $i2 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: int mAltCodeKeyWhileTypingAnimAlpha>;

        r4.<com.android.inputmethod.keyboard.internal.KeyDrawParams: int mAnimAlpha> = $i2;

     label1:
        specialinvoke r0.<com.android.inputmethod.keyboard.KeyboardView: void onDrawKeyTopVisuals(com.android.inputmethod.keyboard.Key,android.graphics.Canvas,android.graphics.Paint,com.android.inputmethod.keyboard.internal.KeyDrawParams)>(r1, r2, r3, r4);

        i0 = virtualinvoke r1.<com.android.inputmethod.keyboard.Key: int getCode()>();

        if i0 != 32 goto label3;

        $i1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: int mLanguageOnSpacebarFormatType>;

        if $i1 == 0 goto label2;

        specialinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void drawLanguageOnSpacebar(com.android.inputmethod.keyboard.Key,android.graphics.Canvas,android.graphics.Paint)>(r1, r2, r3);

     label2:
        $z1 = virtualinvoke r1.<com.android.inputmethod.keyboard.Key: boolean isLongPressEnabled()>();

        if $z1 == 0 goto label4;

        $z2 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: boolean mHasMultipleEnabledIMEsOrSubtypes>;

        if $z2 == 0 goto label4;

        virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void drawKeyPopupHint(com.android.inputmethod.keyboard.Key,android.graphics.Canvas,android.graphics.Paint,com.android.inputmethod.keyboard.internal.KeyDrawParams)>(r1, r2, r3, r4);

        goto label4;

     label3:
        if i0 != -10 goto label4;

        virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: void drawKeyPopupHint(com.android.inputmethod.keyboard.Key,android.graphics.Canvas,android.graphics.Paint,com.android.inputmethod.keyboard.internal.KeyDrawParams)>(r1, r2, r3, r4);

     label4:
        return;
    }

    private boolean fitsTextIntoWidth(int, java.lang.String, android.graphics.Paint)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        int i0, i1, $i2, $i3;
        java.lang.String r1;
        android.graphics.Paint r2;
        float f0, f1, $f2, $f3, $f4, $f5;
        byte $b4, $b5, $b6;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.graphics.Paint;

        $i2 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: int mLanguageOnSpacebarHorizontalMargin>;

        $i3 = $i2 * 2;

        i1 = i0 - $i3;

        virtualinvoke r2.<android.graphics.Paint: void setTextScaleX(float)>(1.0F);

        f0 = staticinvoke <com.android.inputmethod.latin.utils.TypefaceUtils: float getStringWidth(java.lang.String,android.graphics.Paint)>(r1, r2);

        $f2 = (float) i0;

        $b4 = f0 cmpg $f2;

        if $b4 >= 0 goto label1;

        return 1;

     label1:
        $f3 = (float) i1;

        f1 = $f3 / f0;

        $b5 = f1 cmpg 0.8F;

        if $b5 >= 0 goto label2;

        return 0;

     label2:
        virtualinvoke r2.<android.graphics.Paint: void setTextScaleX(float)>(f1);

        $f4 = staticinvoke <com.android.inputmethod.latin.utils.TypefaceUtils: float getStringWidth(java.lang.String,android.graphics.Paint)>(r1, r2);

        $f5 = (float) i1;

        $b6 = $f4 cmpg $f5;

        if $b6 >= 0 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    private java.lang.String layoutLanguageOnSpacebar(android.graphics.Paint, android.view.inputmethod.InputMethodSubtype, int)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        android.graphics.Paint r1;
        android.view.inputmethod.InputMethodSubtype r2;
        int i0, $i1;
        java.lang.String r3, r4;
        boolean $z0, $z1;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        r1 := @parameter0: android.graphics.Paint;

        r2 := @parameter1: android.view.inputmethod.InputMethodSubtype;

        i0 := @parameter2: int;

        $i1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: int mLanguageOnSpacebarFormatType>;

        if $i1 != 2 goto label1;

        r3 = staticinvoke <com.android.inputmethod.latin.utils.SpacebarLanguageUtils: java.lang.String getFullDisplayName(android.view.inputmethod.InputMethodSubtype)>(r2);

        $z1 = specialinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: boolean fitsTextIntoWidth(int,java.lang.String,android.graphics.Paint)>(i0, r3, r1);

        if $z1 == 0 goto label1;

        return r3;

     label1:
        r4 = staticinvoke <com.android.inputmethod.latin.utils.SpacebarLanguageUtils: java.lang.String getMiddleDisplayName(android.view.inputmethod.InputMethodSubtype)>(r2);

        $z0 = specialinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: boolean fitsTextIntoWidth(int,java.lang.String,android.graphics.Paint)>(i0, r4, r1);

        if $z0 == 0 goto label2;

        return r4;

     label2:
        return "";
    }

    private void drawLanguageOnSpacebar(com.android.inputmethod.keyboard.Key, android.graphics.Canvas, android.graphics.Paint)
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        com.android.inputmethod.keyboard.Key r1;
        android.graphics.Canvas r2;
        android.graphics.Paint r3;
        int i0, i1, $i2, $i4, $i5, $i6, $i7;
        android.view.inputmethod.InputMethodSubtype r4;
        java.lang.String r5;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        android.graphics.Paint$Align $r6;
        android.graphics.Typeface $r7;
        com.android.inputmethod.keyboard.Keyboard $r9;
        com.android.inputmethod.keyboard.KeyboardId $r10;
        byte $b3;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        r1 := @parameter0: com.android.inputmethod.keyboard.Key;

        r2 := @parameter1: android.graphics.Canvas;

        r3 := @parameter2: android.graphics.Paint;

        i0 = virtualinvoke r1.<com.android.inputmethod.keyboard.Key: int getWidth()>();

        i1 = virtualinvoke r1.<com.android.inputmethod.keyboard.Key: int getHeight()>();

        $r6 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke r3.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r6);

        $r7 = <android.graphics.Typeface: android.graphics.Typeface DEFAULT>;

        virtualinvoke r3.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r7);

        $f3 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: float mLanguageOnSpacebarTextSize>;

        virtualinvoke r3.<android.graphics.Paint: void setTextSize(float)>($f3);

        $r9 = virtualinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.Keyboard getKeyboard()>();

        $r10 = $r9.<com.android.inputmethod.keyboard.Keyboard: com.android.inputmethod.keyboard.KeyboardId mId>;

        r4 = $r10.<com.android.inputmethod.keyboard.KeyboardId: android.view.inputmethod.InputMethodSubtype mSubtype>;

        r5 = specialinvoke r0.<com.android.inputmethod.keyboard.MainKeyboardView: java.lang.String layoutLanguageOnSpacebar(android.graphics.Paint,android.view.inputmethod.InputMethodSubtype,int)>(r3, r4, i0);

        f0 = virtualinvoke r3.<android.graphics.Paint: float descent()>();

        $f4 = virtualinvoke r3.<android.graphics.Paint: float ascent()>();

        $f5 = neg $f4;

        f1 = $f5 + f0;

        $i2 = i1 / 2;

        $f6 = (float) $i2;

        $f7 = f1 / 2.0F;

        f2 = $f6 + $f7;

        $f8 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: float mLanguageOnSpacebarTextShadowRadius>;

        $b3 = $f8 cmpl 0.0F;

        if $b3 <= 0 goto label1;

        $f10 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: float mLanguageOnSpacebarTextShadowRadius>;

        $i7 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: int mLanguageOnSpacebarTextShadowColor>;

        virtualinvoke r3.<android.graphics.Paint: void setShadowLayer(float,float,float,int)>($f10, 0.0F, 0.0F, $i7);

        goto label2;

     label1:
        virtualinvoke r3.<android.graphics.Paint: void clearShadowLayer()>();

     label2:
        $i5 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: int mLanguageOnSpacebarTextColor>;

        virtualinvoke r3.<android.graphics.Paint: void setColor(int)>($i5);

        $i4 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: int mLanguageOnSpacebarAnimAlpha>;

        virtualinvoke r3.<android.graphics.Paint: void setAlpha(int)>($i4);

        $i6 = i0 / 2;

        $f11 = (float) $i6;

        $f9 = f2 - f0;

        virtualinvoke r2.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>(r5, $f11, $f9, r3);

        virtualinvoke r3.<android.graphics.Paint: void clearShadowLayer()>();

        virtualinvoke r3.<android.graphics.Paint: void setTextScaleX(float)>(1.0F);

        return;
    }

    public void deallocateMemory()
    {
        com.android.inputmethod.keyboard.MainKeyboardView r0;
        com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView $r1;

        r0 := @this: com.android.inputmethod.keyboard.MainKeyboardView;

        specialinvoke r0.<com.android.inputmethod.keyboard.KeyboardView: void deallocateMemory()>();

        $r1 = r0.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView mDrawingPreviewPlacerView>;

        virtualinvoke $r1.<com.android.inputmethod.keyboard.internal.DrawingPreviewPlacerView: void deallocateMemory()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.inputmethod.keyboard.MainKeyboardView: float MINIMUM_XSCALE_OF_LANGUAGE_NAME> = 0.8F;

        <com.android.inputmethod.keyboard.MainKeyboardView: float LANGUAGE_ON_SPACEBAR_TEXT_SHADOW_RADIUS_DISABLED> = -1.0F;

        $r0 = class "com/android/inputmethod/keyboard/MainKeyboardView";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.inputmethod.keyboard.MainKeyboardView: java.lang.String TAG> = $r1;

        return;
    }
}
