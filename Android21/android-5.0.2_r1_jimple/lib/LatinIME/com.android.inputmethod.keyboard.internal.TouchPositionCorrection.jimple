public final class com.android.inputmethod.keyboard.internal.TouchPositionCorrection extends java.lang.Object
{
    private static final int TOUCH_POSITION_CORRECTION_RECORD_SIZE;
    private boolean mEnabled;
    private float[] mXs;
    private float[] mYs;
    private float[] mRadii;

    public void <init>()
    {
        com.android.inputmethod.keyboard.internal.TouchPositionCorrection r0;

        r0 := @this: com.android.inputmethod.keyboard.internal.TouchPositionCorrection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void load(java.lang.String[])
    {
        com.android.inputmethod.keyboard.internal.TouchPositionCorrection r0;
        java.lang.String[] r1;
        int i0, i1, i2, i3, i4, $i5;
        float f0;
        float[] $r2, $r3, $r4, $r6, $r7, $r8;
        boolean $z0;
        java.lang.String $r5;
        java.lang.NumberFormatException $r9;

        r0 := @this: com.android.inputmethod.keyboard.internal.TouchPositionCorrection;

        r1 := @parameter0: java.lang.String[];

        i0 = lengthof r1;

        $i5 = i0 % 3;

        if $i5 == 0 goto label01;

        return;

     label01:
        i1 = i0 / 3;

        $r2 = newarray (float)[i1];

        r0.<com.android.inputmethod.keyboard.internal.TouchPositionCorrection: float[] mXs> = $r2;

        $r3 = newarray (float)[i1];

        r0.<com.android.inputmethod.keyboard.internal.TouchPositionCorrection: float[] mYs> = $r3;

        $r4 = newarray (float)[i1];

        r0.<com.android.inputmethod.keyboard.internal.TouchPositionCorrection: float[] mRadii> = $r4;

     label02:
        i2 = 0;

     label03:
        if i2 >= i0 goto label07;

        i3 = i2 % 3;

        i4 = i2 / 3;

        $r5 = r1[i2];

        f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r5);

        if i3 != 0 goto label04;

        $r7 = r0.<com.android.inputmethod.keyboard.internal.TouchPositionCorrection: float[] mXs>;

        $r7[i4] = f0;

        goto label06;

     label04:
        if i3 != 1 goto label05;

        $r8 = r0.<com.android.inputmethod.keyboard.internal.TouchPositionCorrection: float[] mYs>;

        $r8[i4] = f0;

        goto label06;

     label05:
        $r6 = r0.<com.android.inputmethod.keyboard.internal.TouchPositionCorrection: float[] mRadii>;

        $r6[i4] = f0;

     label06:
        i2 = i2 + 1;

        goto label03;

     label07:
        if i0 <= 0 goto label08;

        $z0 = 1;

        goto label09;

     label08:
        $z0 = 0;

     label09:
        r0.<com.android.inputmethod.keyboard.internal.TouchPositionCorrection: boolean mEnabled> = $z0;

     label10:
        goto label12;

     label11:
        $r9 := @caughtexception;

        r0.<com.android.inputmethod.keyboard.internal.TouchPositionCorrection: boolean mEnabled> = 0;

        r0.<com.android.inputmethod.keyboard.internal.TouchPositionCorrection: float[] mXs> = null;

        r0.<com.android.inputmethod.keyboard.internal.TouchPositionCorrection: float[] mYs> = null;

        r0.<com.android.inputmethod.keyboard.internal.TouchPositionCorrection: float[] mRadii> = null;

     label12:
        return;

        catch java.lang.NumberFormatException from label02 to label10 with label11;
    }

    public void setEnabled(boolean)
    {
        com.android.inputmethod.keyboard.internal.TouchPositionCorrection r0;
        boolean z0;

        r0 := @this: com.android.inputmethod.keyboard.internal.TouchPositionCorrection;

        z0 := @parameter0: boolean;

        r0.<com.android.inputmethod.keyboard.internal.TouchPositionCorrection: boolean mEnabled> = z0;

        return;
    }

    public boolean isValid()
    {
        com.android.inputmethod.keyboard.internal.TouchPositionCorrection r0;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.internal.TouchPositionCorrection;

        $z0 = r0.<com.android.inputmethod.keyboard.internal.TouchPositionCorrection: boolean mEnabled>;

        return $z0;
    }

    public int getRows()
    {
        com.android.inputmethod.keyboard.internal.TouchPositionCorrection r0;
        float[] $r1;
        int $i0;

        r0 := @this: com.android.inputmethod.keyboard.internal.TouchPositionCorrection;

        $r1 = r0.<com.android.inputmethod.keyboard.internal.TouchPositionCorrection: float[] mRadii>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public float getX(int)
    {
        com.android.inputmethod.keyboard.internal.TouchPositionCorrection r0;
        int i0;

        r0 := @this: com.android.inputmethod.keyboard.internal.TouchPositionCorrection;

        i0 := @parameter0: int;

        return 0.0F;
    }

    public float getY(int)
    {
        com.android.inputmethod.keyboard.internal.TouchPositionCorrection r0;
        int i0;
        float[] $r1;
        float $f0;

        r0 := @this: com.android.inputmethod.keyboard.internal.TouchPositionCorrection;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.inputmethod.keyboard.internal.TouchPositionCorrection: float[] mYs>;

        $f0 = $r1[i0];

        return $f0;
    }

    public float getRadius(int)
    {
        com.android.inputmethod.keyboard.internal.TouchPositionCorrection r0;
        int i0;
        float[] $r1;
        float $f0;

        r0 := @this: com.android.inputmethod.keyboard.internal.TouchPositionCorrection;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.inputmethod.keyboard.internal.TouchPositionCorrection: float[] mRadii>;

        $f0 = $r1[i0];

        return $f0;
    }

    public static void <clinit>()
    {
        <com.android.inputmethod.keyboard.internal.TouchPositionCorrection: int TOUCH_POSITION_CORRECTION_RECORD_SIZE> = 3;

        return;
    }
}
