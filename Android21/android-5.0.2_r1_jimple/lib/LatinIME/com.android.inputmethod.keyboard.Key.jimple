public class com.android.inputmethod.keyboard.Key extends java.lang.Object implements java.lang.Comparable
{
    private final int mCode;
    private final java.lang.String mLabel;
    private final java.lang.String mHintLabel;
    private final int mLabelFlags;
    private static final int LABEL_FLAGS_ALIGN_HINT_LABEL_TO_BOTTOM;
    private static final int LABEL_FLAGS_ALIGN_ICON_TO_BOTTOM;
    private static final int LABEL_FLAGS_ALIGN_LABEL_OFF_CENTER;
    private static final int LABEL_FLAGS_FONT_MASK;
    private static final int LABEL_FLAGS_FONT_NORMAL;
    private static final int LABEL_FLAGS_FONT_MONO_SPACE;
    private static final int LABEL_FLAGS_FONT_DEFAULT;
    private static final int LABEL_FLAGS_FOLLOW_KEY_TEXT_RATIO_MASK;
    private static final int LABEL_FLAGS_FOLLOW_KEY_LARGE_LETTER_RATIO;
    private static final int LABEL_FLAGS_FOLLOW_KEY_LETTER_RATIO;
    private static final int LABEL_FLAGS_FOLLOW_KEY_LABEL_RATIO;
    private static final int LABEL_FLAGS_FOLLOW_KEY_HINT_LABEL_RATIO;
    private static final int LABEL_FLAGS_HAS_POPUP_HINT;
    private static final int LABEL_FLAGS_HAS_SHIFTED_LETTER_HINT;
    private static final int LABEL_FLAGS_HAS_HINT_LABEL;
    private static final int LABEL_FLAGS_AUTO_X_SCALE;
    private static final int LABEL_FLAGS_AUTO_Y_SCALE;
    private static final int LABEL_FLAGS_AUTO_SCALE;
    private static final int LABEL_FLAGS_PRESERVE_CASE;
    private static final int LABEL_FLAGS_SHIFTED_LETTER_ACTIVATED;
    private static final int LABEL_FLAGS_FROM_CUSTOM_ACTION_LABEL;
    private static final int LABEL_FLAGS_FOLLOW_FUNCTIONAL_TEXT_COLOR;
    private static final int LABEL_FLAGS_KEEP_BACKGROUND_ASPECT_RATIO;
    private static final int LABEL_FLAGS_DISABLE_HINT_LABEL;
    private static final int LABEL_FLAGS_DISABLE_ADDITIONAL_MORE_KEYS;
    private final int mIconId;
    private final int mWidth;
    private final int mHeight;
    private final int mX;
    private final int mY;
    private final android.graphics.Rect mHitBox;
    private final com.android.inputmethod.keyboard.internal.MoreKeySpec[] mMoreKeys;
    private final int mMoreKeysColumnAndFlags;
    private static final int MORE_KEYS_COLUMN_NUMBER_MASK;
    private static final int MORE_KEYS_FLAGS_FIXED_COLUMN;
    private static final int MORE_KEYS_FLAGS_FIXED_ORDER;
    private static final int MORE_KEYS_MODE_MAX_COLUMN_WITH_AUTO_ORDER;
    private static final int MORE_KEYS_MODE_FIXED_COLUMN_WITH_AUTO_ORDER;
    private static final int MORE_KEYS_MODE_FIXED_COLUMN_WITH_FIXED_ORDER;
    private static final int MORE_KEYS_FLAGS_HAS_LABELS;
    private static final int MORE_KEYS_FLAGS_NEEDS_DIVIDERS;
    private static final int MORE_KEYS_FLAGS_NO_PANEL_AUTO_MORE_KEY;
    private static final java.lang.String MORE_KEYS_AUTO_COLUMN_ORDER;
    private static final java.lang.String MORE_KEYS_FIXED_COLUMN_ORDER;
    private static final java.lang.String MORE_KEYS_HAS_LABELS;
    private static final java.lang.String MORE_KEYS_NEEDS_DIVIDERS;
    private static final java.lang.String MORE_KEYS_NO_PANEL_AUTO_MORE_KEY;
    private final int mBackgroundType;
    public static final int BACKGROUND_TYPE_EMPTY;
    public static final int BACKGROUND_TYPE_NORMAL;
    public static final int BACKGROUND_TYPE_FUNCTIONAL;
    public static final int BACKGROUND_TYPE_STICKY_OFF;
    public static final int BACKGROUND_TYPE_STICKY_ON;
    public static final int BACKGROUND_TYPE_ACTION;
    public static final int BACKGROUND_TYPE_SPACEBAR;
    private final int mActionFlags;
    private static final int ACTION_FLAGS_IS_REPEATABLE;
    private static final int ACTION_FLAGS_NO_KEY_PREVIEW;
    private static final int ACTION_FLAGS_ALT_CODE_WHILE_TYPING;
    private static final int ACTION_FLAGS_ENABLE_LONG_PRESS;
    private final com.android.inputmethod.keyboard.internal.KeyVisualAttributes mKeyVisualAttributes;
    private final com.android.inputmethod.keyboard.Key$OptionalAttributes mOptionalAttributes;
    private final int mHashCode;
    private boolean mPressed;
    private boolean mEnabled;

    public void <init>(java.lang.String, int, int, java.lang.String, java.lang.String, int, int, int, int, int, int, int, int)
    {
        com.android.inputmethod.keyboard.Key r0;
        java.lang.String r1, r2, r3;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        android.graphics.Rect $r4, $r6;
        com.android.inputmethod.keyboard.Key$OptionalAttributes $r5;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        i5 := @parameter8: int;

        i6 := @parameter9: int;

        i7 := @parameter10: int;

        i8 := @parameter11: int;

        i9 := @parameter12: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.android.inputmethod.keyboard.Key: android.graphics.Rect mHitBox> = $r4;

        r0.<com.android.inputmethod.keyboard.Key: boolean mEnabled> = 1;

        $i10 = i7 - i9;

        r0.<com.android.inputmethod.keyboard.Key: int mHeight> = $i10;

        $i11 = i6 - i8;

        r0.<com.android.inputmethod.keyboard.Key: int mWidth> = $i11;

        r0.<com.android.inputmethod.keyboard.Key: java.lang.String mHintLabel> = r3;

        r0.<com.android.inputmethod.keyboard.Key: int mLabelFlags> = i2;

        r0.<com.android.inputmethod.keyboard.Key: int mBackgroundType> = i3;

        r0.<com.android.inputmethod.keyboard.Key: int mActionFlags> = 2;

        r0.<com.android.inputmethod.keyboard.Key: com.android.inputmethod.keyboard.internal.MoreKeySpec[] mMoreKeys> = null;

        r0.<com.android.inputmethod.keyboard.Key: int mMoreKeysColumnAndFlags> = 0;

        r0.<com.android.inputmethod.keyboard.Key: java.lang.String mLabel> = r1;

        $r5 = staticinvoke <com.android.inputmethod.keyboard.Key$OptionalAttributes: com.android.inputmethod.keyboard.Key$OptionalAttributes newInstance(java.lang.String,int,int,int,int)>(r2, -15, 0, 0, 0);

        r0.<com.android.inputmethod.keyboard.Key: com.android.inputmethod.keyboard.Key$OptionalAttributes mOptionalAttributes> = $r5;

        r0.<com.android.inputmethod.keyboard.Key: int mCode> = i1;

        if i1 == -15 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<com.android.inputmethod.keyboard.Key: boolean mEnabled> = $z0;

        r0.<com.android.inputmethod.keyboard.Key: int mIconId> = i0;

        $i13 = i8 / 2;

        $i12 = i4 + $i13;

        r0.<com.android.inputmethod.keyboard.Key: int mX> = $i12;

        r0.<com.android.inputmethod.keyboard.Key: int mY> = i5;

        $r6 = r0.<com.android.inputmethod.keyboard.Key: android.graphics.Rect mHitBox>;

        $i15 = i4 + i6;

        $i16 = $i15 + 1;

        $i14 = i5 + i7;

        virtualinvoke $r6.<android.graphics.Rect: void set(int,int,int,int)>(i4, i5, $i16, $i14);

        r0.<com.android.inputmethod.keyboard.Key: com.android.inputmethod.keyboard.internal.KeyVisualAttributes mKeyVisualAttributes> = null;

        $i17 = staticinvoke <com.android.inputmethod.keyboard.Key: int computeHashCode(com.android.inputmethod.keyboard.Key)>(r0);

        r0.<com.android.inputmethod.keyboard.Key: int mHashCode> = $i17;

        return;
    }

    public void <init>(java.lang.String, android.content.res.TypedArray, com.android.inputmethod.keyboard.internal.KeyStyle, com.android.inputmethod.keyboard.internal.KeyboardParams, com.android.inputmethod.keyboard.internal.KeyboardRow)
    {
        com.android.inputmethod.keyboard.Key r0;
        java.lang.String r1, r9, $r14, $r15, $r16, $r17, $r18, $r21, $r22, $r23, $r24, $r27, $r28, $r29, $r32, $r34;
        android.content.res.TypedArray r2;
        com.android.inputmethod.keyboard.internal.KeyStyle r3;
        com.android.inputmethod.keyboard.internal.KeyboardParams r4;
        com.android.inputmethod.keyboard.internal.KeyboardRow r5;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, i50, i51;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.util.Locale r6;
        java.lang.String[] r7, r8, r36;
        android.graphics.Rect $r10, $r11;
        com.android.inputmethod.keyboard.KeyboardId $r12, $r13, $r33;
        com.android.inputmethod.keyboard.internal.KeyVisualAttributes $r19;
        com.android.inputmethod.keyboard.Key$OptionalAttributes $r20;
        java.lang.StringBuilder $r25, $r26;
        com.android.inputmethod.keyboard.internal.MoreKeySpec $r30;
        com.android.inputmethod.keyboard.internal.MoreKeySpec[] $r31, $r35;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.res.TypedArray;

        r3 := @parameter2: com.android.inputmethod.keyboard.internal.KeyStyle;

        r4 := @parameter3: com.android.inputmethod.keyboard.internal.KeyboardParams;

        r5 := @parameter4: com.android.inputmethod.keyboard.internal.KeyboardRow;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r10 = new android.graphics.Rect;

        specialinvoke $r10.<android.graphics.Rect: void <init>()>();

        r0.<com.android.inputmethod.keyboard.Key: android.graphics.Rect mHitBox> = $r10;

        r0.<com.android.inputmethod.keyboard.Key: boolean mEnabled> = 1;

        $z1 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: boolean isSpacer()>();

        if $z1 == 0 goto label01;

        $f10 = 0.0F;

        goto label02;

     label01:
        $i12 = r4.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mHorizontalGap>;

        $f10 = (float) $i12;

     label02:
        f0 = $f10;

        i0 = virtualinvoke r5.<com.android.inputmethod.keyboard.internal.KeyboardRow: int getRowHeight()>();

        $i14 = r4.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mVerticalGap>;

        $i13 = i0 - $i14;

        r0.<com.android.inputmethod.keyboard.Key: int mHeight> = $i13;

        f1 = virtualinvoke r5.<com.android.inputmethod.keyboard.internal.KeyboardRow: float getKeyX(android.content.res.TypedArray)>(r2);

        f2 = virtualinvoke r5.<com.android.inputmethod.keyboard.internal.KeyboardRow: float getKeyWidth(android.content.res.TypedArray,float)>(r2, f1);

        i1 = virtualinvoke r5.<com.android.inputmethod.keyboard.internal.KeyboardRow: int getKeyY()>();

        $f3 = f0 / 2.0F;

        $f5 = f1 + $f3;

        $i16 = staticinvoke <java.lang.Math: int round(float)>($f5);

        r0.<com.android.inputmethod.keyboard.Key: int mX> = $i16;

        r0.<com.android.inputmethod.keyboard.Key: int mY> = i1;

        $f4 = f2 - f0;

        $i15 = staticinvoke <java.lang.Math: int round(float)>($f4);

        r0.<com.android.inputmethod.keyboard.Key: int mWidth> = $i15;

        $r11 = r0.<com.android.inputmethod.keyboard.Key: android.graphics.Rect mHitBox>;

        $i18 = staticinvoke <java.lang.Math: int round(float)>(f1);

        $f6 = f1 + f2;

        $i17 = staticinvoke <java.lang.Math: int round(float)>($f6);

        $i20 = $i17 + 1;

        $i19 = i1 + i0;

        virtualinvoke $r11.<android.graphics.Rect: void set(int,int,int,int)>($i18, i1, $i20, $i19);

        $f7 = f1 + f2;

        virtualinvoke r5.<com.android.inputmethod.keyboard.internal.KeyboardRow: void setXPos(float)>($f7);

        $i22 = virtualinvoke r5.<com.android.inputmethod.keyboard.internal.KeyboardRow: int getDefaultBackgroundType()>();

        $i21 = virtualinvoke r3.<com.android.inputmethod.keyboard.internal.KeyStyle: int getInt(android.content.res.TypedArray,int,int)>(r2, 4, $i22);

        r0.<com.android.inputmethod.keyboard.Key: int mBackgroundType> = $i21;

        i2 = r4.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mBaseWidth>;

        $f8 = virtualinvoke r2.<android.content.res.TypedArray: float getFraction(int,int,int,float)>(12, i2, i2, 0.0F);

        i3 = staticinvoke <java.lang.Math: int round(float)>($f8);

        $f9 = virtualinvoke r2.<android.content.res.TypedArray: float getFraction(int,int,int,float)>(13, i2, i2, 0.0F);

        i4 = staticinvoke <java.lang.Math: int round(float)>($f9);

        $i24 = virtualinvoke r3.<com.android.inputmethod.keyboard.internal.KeyStyle: int getFlags(android.content.res.TypedArray,int)>(r2, 9);

        $i23 = virtualinvoke r5.<com.android.inputmethod.keyboard.internal.KeyboardRow: int getDefaultKeyLabelFlags()>();

        $i27 = $i24 | $i23;

        r0.<com.android.inputmethod.keyboard.Key: int mLabelFlags> = $i27;

        $i25 = r0.<com.android.inputmethod.keyboard.Key: int mLabelFlags>;

        $r12 = r4.<com.android.inputmethod.keyboard.internal.KeyboardParams: com.android.inputmethod.keyboard.KeyboardId mId>;

        $i26 = $r12.<com.android.inputmethod.keyboard.KeyboardId: int mElementId>;

        z0 = staticinvoke <com.android.inputmethod.keyboard.Key: boolean needsToUpperCase(int,int)>($i25, $i26);

        $r13 = r4.<com.android.inputmethod.keyboard.internal.KeyboardParams: com.android.inputmethod.keyboard.KeyboardId mId>;

        r6 = $r13.<com.android.inputmethod.keyboard.KeyboardId: java.util.Locale mLocale>;

        i5 = virtualinvoke r3.<com.android.inputmethod.keyboard.internal.KeyStyle: int getFlags(android.content.res.TypedArray,int)>(r2, 5);

        r7 = virtualinvoke r3.<com.android.inputmethod.keyboard.internal.KeyStyle: java.lang.String[] getStringArray(android.content.res.TypedArray,int)>(r2, 1);

        $i29 = r4.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mMaxMoreKeysKeyboardColumn>;

        $i30 = virtualinvoke r3.<com.android.inputmethod.keyboard.internal.KeyStyle: int getInt(android.content.res.TypedArray,int,int)>(r2, 3, $i29);

        i7 = 0 | $i30;

        $i31 = staticinvoke <com.android.inputmethod.keyboard.internal.MoreKeySpec: int getIntValue(java.lang.String[],java.lang.String,int)>(r7, "!autoColumnOrder!", -1);

        i6 = $i31;

        if $i31 <= 0 goto label03;

        $i48 = i6 & 255;

        i7 = 256 | $i48;

     label03:
        $i28 = staticinvoke <com.android.inputmethod.keyboard.internal.MoreKeySpec: int getIntValue(java.lang.String[],java.lang.String,int)>(r7, "!fixedColumnOrder!", -1);

        i50 = $i28;

        if $i28 <= 0 goto label04;

        $i49 = i50 & 255;

        i7 = 768 | $i49;

     label04:
        $z2 = staticinvoke <com.android.inputmethod.keyboard.internal.MoreKeySpec: boolean getBooleanValue(java.lang.String[],java.lang.String)>(r7, "!hasLabels!");

        if $z2 == 0 goto label05;

        i7 = i7 | 1073741824;

     label05:
        $z3 = staticinvoke <com.android.inputmethod.keyboard.internal.MoreKeySpec: boolean getBooleanValue(java.lang.String[],java.lang.String)>(r7, "!needsDividers!");

        if $z3 == 0 goto label06;

        i7 = i7 | 536870912;

     label06:
        $z4 = staticinvoke <com.android.inputmethod.keyboard.internal.MoreKeySpec: boolean getBooleanValue(java.lang.String[],java.lang.String)>(r7, "!noPanelAutoMoreKey!");

        if $z4 == 0 goto label07;

        i7 = i7 | 268435456;

     label07:
        r0.<com.android.inputmethod.keyboard.Key: int mMoreKeysColumnAndFlags> = i7;

        $i33 = r0.<com.android.inputmethod.keyboard.Key: int mLabelFlags>;

        $i34 = $i33 & -2147483648;

        if $i34 == 0 goto label08;

        r8 = null;

        goto label09;

     label08:
        r8 = virtualinvoke r3.<com.android.inputmethod.keyboard.internal.KeyStyle: java.lang.String[] getStringArray(android.content.res.TypedArray,int)>(r2, 2);

     label09:
        r36 = staticinvoke <com.android.inputmethod.keyboard.internal.MoreKeySpec: java.lang.String[] insertAdditionalMoreKeys(java.lang.String[],java.lang.String[])>(r7, r8);

        if r36 == null goto label12;

        i5 = i5 | 8;

        $i47 = lengthof r36;

        $r31 = newarray (com.android.inputmethod.keyboard.internal.MoreKeySpec)[$i47];

        r0.<com.android.inputmethod.keyboard.Key: com.android.inputmethod.keyboard.internal.MoreKeySpec[] mMoreKeys> = $r31;

        i8 = 0;

     label10:
        $i46 = lengthof r36;

        if i8 >= $i46 goto label11;

        $r35 = r0.<com.android.inputmethod.keyboard.Key: com.android.inputmethod.keyboard.internal.MoreKeySpec[] mMoreKeys>;

        $r30 = new com.android.inputmethod.keyboard.internal.MoreKeySpec;

        $r29 = r36[i8];

        specialinvoke $r30.<com.android.inputmethod.keyboard.internal.MoreKeySpec: void <init>(java.lang.String,boolean,java.util.Locale)>($r29, z0, r6);

        $r35[i8] = $r30;

        i8 = i8 + 1;

        goto label10;

     label11:
        goto label13;

     label12:
        r0.<com.android.inputmethod.keyboard.Key: com.android.inputmethod.keyboard.internal.MoreKeySpec[] mMoreKeys> = null;

     label13:
        r0.<com.android.inputmethod.keyboard.Key: int mActionFlags> = i5;

        $i32 = staticinvoke <com.android.inputmethod.keyboard.internal.KeySpecParser: int getIconId(java.lang.String)>(r1);

        r0.<com.android.inputmethod.keyboard.Key: int mIconId> = $i32;

        $r14 = virtualinvoke r3.<com.android.inputmethod.keyboard.internal.KeyStyle: java.lang.String getString(android.content.res.TypedArray,int)>(r2, 10);

        i51 = staticinvoke <com.android.inputmethod.keyboard.internal.KeySpecParser: int getIconId(java.lang.String)>($r14);

        i9 = staticinvoke <com.android.inputmethod.keyboard.internal.KeySpecParser: int getCode(java.lang.String)>(r1);

        $i38 = r0.<com.android.inputmethod.keyboard.Key: int mLabelFlags>;

        $i37 = $i38 & 262144;

        if $i37 == 0 goto label14;

        $r33 = r4.<com.android.inputmethod.keyboard.internal.KeyboardParams: com.android.inputmethod.keyboard.KeyboardId mId>;

        $r32 = $r33.<com.android.inputmethod.keyboard.KeyboardId: java.lang.String mCustomActionLabel>;

        r0.<com.android.inputmethod.keyboard.Key: java.lang.String mLabel> = $r32;

        goto label16;

     label14:
        if i9 < 65536 goto label15;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder appendCodePoint(int)>(i9);

        $r34 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.inputmethod.keyboard.Key: java.lang.String mLabel> = $r34;

        goto label16;

     label15:
        $r18 = staticinvoke <com.android.inputmethod.keyboard.internal.KeySpecParser: java.lang.String getLabel(java.lang.String)>(r1);

        $r17 = staticinvoke <com.android.inputmethod.latin.utils.StringUtils: java.lang.String toUpperCaseOfStringForLocale(java.lang.String,boolean,java.util.Locale)>($r18, z0, r6);

        r0.<com.android.inputmethod.keyboard.Key: java.lang.String mLabel> = $r17;

     label16:
        $i36 = r0.<com.android.inputmethod.keyboard.Key: int mLabelFlags>;

        $i35 = $i36 & 1073741824;

        if $i35 == 0 goto label17;

        r0.<com.android.inputmethod.keyboard.Key: java.lang.String mHintLabel> = null;

        goto label18;

     label17:
        $r16 = virtualinvoke r3.<com.android.inputmethod.keyboard.internal.KeyStyle: java.lang.String getString(android.content.res.TypedArray,int)>(r2, 7);

        $r15 = staticinvoke <com.android.inputmethod.latin.utils.StringUtils: java.lang.String toUpperCaseOfStringForLocale(java.lang.String,boolean,java.util.Locale)>($r16, z0, r6);

        r0.<com.android.inputmethod.keyboard.Key: java.lang.String mHintLabel> = $r15;

     label18:
        $r21 = staticinvoke <com.android.inputmethod.keyboard.internal.KeySpecParser: java.lang.String getOutputText(java.lang.String)>(r1);

        r9 = staticinvoke <com.android.inputmethod.latin.utils.StringUtils: java.lang.String toUpperCaseOfStringForLocale(java.lang.String,boolean,java.util.Locale)>($r21, z0, r6);

        if i9 != -15 goto label21;

        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r9);

        if $z6 == 0 goto label21;

        $r24 = r0.<com.android.inputmethod.keyboard.Key: java.lang.String mLabel>;

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r24);

        if $z5 != 0 goto label21;

        $r23 = r0.<com.android.inputmethod.keyboard.Key: java.lang.String mLabel>;

        $i40 = staticinvoke <com.android.inputmethod.latin.utils.StringUtils: int codePointCount(java.lang.String)>($r23);

        if $i40 != 1 goto label20;

        $z8 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: boolean hasShiftedLetterHint()>();

        if $z8 == 0 goto label19;

        $z7 = specialinvoke r0.<com.android.inputmethod.keyboard.Key: boolean isShiftedLetterActivated()>();

        if $z7 == 0 goto label19;

        $r27 = r0.<com.android.inputmethod.keyboard.Key: java.lang.String mHintLabel>;

        $i44 = virtualinvoke $r27.<java.lang.String: int codePointAt(int)>(0);

        r0.<com.android.inputmethod.keyboard.Key: int mCode> = $i44;

        goto label24;

     label19:
        $r28 = r0.<com.android.inputmethod.keyboard.Key: java.lang.String mLabel>;

        $i45 = virtualinvoke $r28.<java.lang.String: int codePointAt(int)>(0);

        r0.<com.android.inputmethod.keyboard.Key: int mCode> = $i45;

        goto label24;

     label20:
        r9 = r0.<com.android.inputmethod.keyboard.Key: java.lang.String mLabel>;

        r0.<com.android.inputmethod.keyboard.Key: int mCode> = -4;

        goto label24;

     label21:
        if i9 != -15 goto label23;

        if r9 == null goto label23;

        $i43 = staticinvoke <com.android.inputmethod.latin.utils.StringUtils: int codePointCount(java.lang.String)>(r9);

        if $i43 != 1 goto label22;

        $i41 = virtualinvoke r9.<java.lang.String: int codePointAt(int)>(0);

        r0.<com.android.inputmethod.keyboard.Key: int mCode> = $i41;

        r9 = null;

        goto label24;

     label22:
        r0.<com.android.inputmethod.keyboard.Key: int mCode> = -4;

        goto label24;

     label23:
        $i39 = staticinvoke <com.android.inputmethod.latin.utils.StringUtils: int toUpperCaseOfCodeForLocale(int,boolean,java.util.Locale)>(i9, z0, r6);

        r0.<com.android.inputmethod.keyboard.Key: int mCode> = $i39;

     label24:
        $r22 = virtualinvoke r3.<com.android.inputmethod.keyboard.internal.KeyStyle: java.lang.String getString(android.content.res.TypedArray,int)>(r2, 0);

        i11 = staticinvoke <com.android.inputmethod.keyboard.internal.KeySpecParser: int parseCode(java.lang.String,int)>($r22, -15);

        i10 = staticinvoke <com.android.inputmethod.latin.utils.StringUtils: int toUpperCaseOfCodeForLocale(int,boolean,java.util.Locale)>(i11, z0, r6);

        $r20 = staticinvoke <com.android.inputmethod.keyboard.Key$OptionalAttributes: com.android.inputmethod.keyboard.Key$OptionalAttributes newInstance(java.lang.String,int,int,int,int)>(r9, i10, i51, i3, i4);

        r0.<com.android.inputmethod.keyboard.Key: com.android.inputmethod.keyboard.Key$OptionalAttributes mOptionalAttributes> = $r20;

        $r19 = staticinvoke <com.android.inputmethod.keyboard.internal.KeyVisualAttributes: com.android.inputmethod.keyboard.internal.KeyVisualAttributes newInstance(android.content.res.TypedArray)>(r2);

        r0.<com.android.inputmethod.keyboard.Key: com.android.inputmethod.keyboard.internal.KeyVisualAttributes mKeyVisualAttributes> = $r19;

        $i42 = staticinvoke <com.android.inputmethod.keyboard.Key: int computeHashCode(com.android.inputmethod.keyboard.Key)>(r0);

        r0.<com.android.inputmethod.keyboard.Key: int mHashCode> = $i42;

        return;
    }

    protected void <init>(com.android.inputmethod.keyboard.Key)
    {
        com.android.inputmethod.keyboard.Key r0, r1;
        android.graphics.Rect $r2, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.String $r3, $r4;
        com.android.inputmethod.keyboard.internal.MoreKeySpec[] $r7;
        com.android.inputmethod.keyboard.Key$OptionalAttributes $r8;
        com.android.inputmethod.keyboard.internal.KeyVisualAttributes $r9;
        boolean $z0, $z1;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        r1 := @parameter0: com.android.inputmethod.keyboard.Key;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<com.android.inputmethod.keyboard.Key: android.graphics.Rect mHitBox> = $r2;

        r0.<com.android.inputmethod.keyboard.Key: boolean mEnabled> = 1;

        $i0 = r1.<com.android.inputmethod.keyboard.Key: int mCode>;

        r0.<com.android.inputmethod.keyboard.Key: int mCode> = $i0;

        $r3 = r1.<com.android.inputmethod.keyboard.Key: java.lang.String mLabel>;

        r0.<com.android.inputmethod.keyboard.Key: java.lang.String mLabel> = $r3;

        $r4 = r1.<com.android.inputmethod.keyboard.Key: java.lang.String mHintLabel>;

        r0.<com.android.inputmethod.keyboard.Key: java.lang.String mHintLabel> = $r4;

        $i1 = r1.<com.android.inputmethod.keyboard.Key: int mLabelFlags>;

        r0.<com.android.inputmethod.keyboard.Key: int mLabelFlags> = $i1;

        $i2 = r1.<com.android.inputmethod.keyboard.Key: int mIconId>;

        r0.<com.android.inputmethod.keyboard.Key: int mIconId> = $i2;

        $i3 = r1.<com.android.inputmethod.keyboard.Key: int mWidth>;

        r0.<com.android.inputmethod.keyboard.Key: int mWidth> = $i3;

        $i4 = r1.<com.android.inputmethod.keyboard.Key: int mHeight>;

        r0.<com.android.inputmethod.keyboard.Key: int mHeight> = $i4;

        $i5 = r1.<com.android.inputmethod.keyboard.Key: int mX>;

        r0.<com.android.inputmethod.keyboard.Key: int mX> = $i5;

        $i6 = r1.<com.android.inputmethod.keyboard.Key: int mY>;

        r0.<com.android.inputmethod.keyboard.Key: int mY> = $i6;

        $r6 = r0.<com.android.inputmethod.keyboard.Key: android.graphics.Rect mHitBox>;

        $r5 = r1.<com.android.inputmethod.keyboard.Key: android.graphics.Rect mHitBox>;

        virtualinvoke $r6.<android.graphics.Rect: void set(android.graphics.Rect)>($r5);

        $r7 = r1.<com.android.inputmethod.keyboard.Key: com.android.inputmethod.keyboard.internal.MoreKeySpec[] mMoreKeys>;

        r0.<com.android.inputmethod.keyboard.Key: com.android.inputmethod.keyboard.internal.MoreKeySpec[] mMoreKeys> = $r7;

        $i7 = r1.<com.android.inputmethod.keyboard.Key: int mMoreKeysColumnAndFlags>;

        r0.<com.android.inputmethod.keyboard.Key: int mMoreKeysColumnAndFlags> = $i7;

        $i9 = r1.<com.android.inputmethod.keyboard.Key: int mBackgroundType>;

        r0.<com.android.inputmethod.keyboard.Key: int mBackgroundType> = $i9;

        $i8 = r1.<com.android.inputmethod.keyboard.Key: int mActionFlags>;

        r0.<com.android.inputmethod.keyboard.Key: int mActionFlags> = $i8;

        $r9 = r1.<com.android.inputmethod.keyboard.Key: com.android.inputmethod.keyboard.internal.KeyVisualAttributes mKeyVisualAttributes>;

        r0.<com.android.inputmethod.keyboard.Key: com.android.inputmethod.keyboard.internal.KeyVisualAttributes mKeyVisualAttributes> = $r9;

        $r8 = r1.<com.android.inputmethod.keyboard.Key: com.android.inputmethod.keyboard.Key$OptionalAttributes mOptionalAttributes>;

        r0.<com.android.inputmethod.keyboard.Key: com.android.inputmethod.keyboard.Key$OptionalAttributes mOptionalAttributes> = $r8;

        $i10 = r1.<com.android.inputmethod.keyboard.Key: int mHashCode>;

        r0.<com.android.inputmethod.keyboard.Key: int mHashCode> = $i10;

        $z0 = r1.<com.android.inputmethod.keyboard.Key: boolean mPressed>;

        r0.<com.android.inputmethod.keyboard.Key: boolean mPressed> = $z0;

        $z1 = r1.<com.android.inputmethod.keyboard.Key: boolean mEnabled>;

        r0.<com.android.inputmethod.keyboard.Key: boolean mEnabled> = $z1;

        return;
    }

    private static boolean needsToUpperCase(int, int)
    {
        int i0, i1, $i2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 & 65536;

        if $i2 == 0 goto label1;

        return 0;

     label1:
        tableswitch(i1)
        {
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label2;
            default: goto label3;
        };

     label2:
        return 1;

     label3:
        return 0;
    }

    private static int computeHashCode(com.android.inputmethod.keyboard.Key)
    {
        com.android.inputmethod.keyboard.Key r0;
        java.lang.Object[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.Integer $r2, $r3, $r4, $r5, $r7, $r9, $r11, $r12, $r14, $r15;
        java.lang.String $r6, $r8, $r13;
        com.android.inputmethod.keyboard.internal.MoreKeySpec[] $r10;

        r0 := @parameter0: com.android.inputmethod.keyboard.Key;

        $r1 = newarray (java.lang.Object)[13];

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mX>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        $i1 = r0.<com.android.inputmethod.keyboard.Key: int mY>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[1] = $r3;

        $i2 = r0.<com.android.inputmethod.keyboard.Key: int mWidth>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[2] = $r4;

        $i3 = r0.<com.android.inputmethod.keyboard.Key: int mHeight>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r1[3] = $r5;

        $i4 = r0.<com.android.inputmethod.keyboard.Key: int mCode>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r1[4] = $r7;

        $r6 = r0.<com.android.inputmethod.keyboard.Key: java.lang.String mLabel>;

        $r1[5] = $r6;

        $r8 = r0.<com.android.inputmethod.keyboard.Key: java.lang.String mHintLabel>;

        $r1[6] = $r8;

        $i5 = r0.<com.android.inputmethod.keyboard.Key: int mIconId>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r1[7] = $r9;

        $i6 = r0.<com.android.inputmethod.keyboard.Key: int mBackgroundType>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r1[8] = $r11;

        $r10 = r0.<com.android.inputmethod.keyboard.Key: com.android.inputmethod.keyboard.internal.MoreKeySpec[] mMoreKeys>;

        $i7 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r10);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r1[9] = $r12;

        $r13 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: java.lang.String getOutputText()>();

        $r1[10] = $r13;

        $i8 = r0.<com.android.inputmethod.keyboard.Key: int mActionFlags>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r1[11] = $r14;

        $i9 = r0.<com.android.inputmethod.keyboard.Key: int mLabelFlags>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r1[12] = $r15;

        $i10 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r1);

        return $i10;
    }

    private boolean equalsInternal(com.android.inputmethod.keyboard.Key)
    {
        com.android.inputmethod.keyboard.Key r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        java.lang.String $r2, $r3, $r4, $r5, $r8, $r9;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.inputmethod.keyboard.internal.MoreKeySpec[] $r6, $r7;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        r1 := @parameter0: com.android.inputmethod.keyboard.Key;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $i1 = r1.<com.android.inputmethod.keyboard.Key: int mX>;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mX>;

        if $i1 != $i0 goto label2;

        $i3 = r1.<com.android.inputmethod.keyboard.Key: int mY>;

        $i2 = r0.<com.android.inputmethod.keyboard.Key: int mY>;

        if $i3 != $i2 goto label2;

        $i5 = r1.<com.android.inputmethod.keyboard.Key: int mWidth>;

        $i4 = r0.<com.android.inputmethod.keyboard.Key: int mWidth>;

        if $i5 != $i4 goto label2;

        $i7 = r1.<com.android.inputmethod.keyboard.Key: int mHeight>;

        $i6 = r0.<com.android.inputmethod.keyboard.Key: int mHeight>;

        if $i7 != $i6 goto label2;

        $i9 = r1.<com.android.inputmethod.keyboard.Key: int mCode>;

        $i8 = r0.<com.android.inputmethod.keyboard.Key: int mCode>;

        if $i9 != $i8 goto label2;

        $r3 = r1.<com.android.inputmethod.keyboard.Key: java.lang.String mLabel>;

        $r2 = r0.<com.android.inputmethod.keyboard.Key: java.lang.String mLabel>;

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r3, $r2);

        if $z0 == 0 goto label2;

        $r5 = r1.<com.android.inputmethod.keyboard.Key: java.lang.String mHintLabel>;

        $r4 = r0.<com.android.inputmethod.keyboard.Key: java.lang.String mHintLabel>;

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r5, $r4);

        if $z1 == 0 goto label2;

        $i10 = r1.<com.android.inputmethod.keyboard.Key: int mIconId>;

        $i11 = r0.<com.android.inputmethod.keyboard.Key: int mIconId>;

        if $i10 != $i11 goto label2;

        $i12 = r1.<com.android.inputmethod.keyboard.Key: int mBackgroundType>;

        $i13 = r0.<com.android.inputmethod.keyboard.Key: int mBackgroundType>;

        if $i12 != $i13 goto label2;

        $r6 = r1.<com.android.inputmethod.keyboard.Key: com.android.inputmethod.keyboard.internal.MoreKeySpec[] mMoreKeys>;

        $r7 = r0.<com.android.inputmethod.keyboard.Key: com.android.inputmethod.keyboard.internal.MoreKeySpec[] mMoreKeys>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r6, $r7);

        if $z2 == 0 goto label2;

        $r8 = virtualinvoke r1.<com.android.inputmethod.keyboard.Key: java.lang.String getOutputText()>();

        $r9 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: java.lang.String getOutputText()>();

        $z3 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r8, $r9);

        if $z3 == 0 goto label2;

        $i14 = r1.<com.android.inputmethod.keyboard.Key: int mActionFlags>;

        $i15 = r0.<com.android.inputmethod.keyboard.Key: int mActionFlags>;

        if $i14 != $i15 goto label2;

        $i16 = r1.<com.android.inputmethod.keyboard.Key: int mLabelFlags>;

        $i17 = r0.<com.android.inputmethod.keyboard.Key: int mLabelFlags>;

        if $i16 != $i17 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    public int compareTo(com.android.inputmethod.keyboard.Key)
    {
        com.android.inputmethod.keyboard.Key r0, r1;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        r1 := @parameter0: com.android.inputmethod.keyboard.Key;

        $z0 = specialinvoke r0.<com.android.inputmethod.keyboard.Key: boolean equalsInternal(com.android.inputmethod.keyboard.Key)>(r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $i1 = r0.<com.android.inputmethod.keyboard.Key: int mHashCode>;

        $i0 = r1.<com.android.inputmethod.keyboard.Key: int mHashCode>;

        if $i1 <= $i0 goto label2;

        return 1;

     label2:
        return -1;
    }

    public int hashCode()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mHashCode>;

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        com.android.inputmethod.keyboard.Key r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof com.android.inputmethod.keyboard.Key;

        if $z0 == 0 goto label1;

        $r2 = (com.android.inputmethod.keyboard.Key) r1;

        $z1 = specialinvoke r0.<com.android.inputmethod.keyboard.Key: boolean equalsInternal(com.android.inputmethod.keyboard.Key)>($r2);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public java.lang.String toString()
    {
        com.android.inputmethod.keyboard.Key r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.String $r2, $r12;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: java.lang.String toShortString()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i0 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: int getX()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i1 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: int getY()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i2 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: int getWidth()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $i3 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: int getHeight()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public java.lang.String toShortString()
    {
        com.android.inputmethod.keyboard.Key r0;
        int i0;
        java.lang.String $r1, $r2;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        i0 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: int getCode()>();

        if i0 != -4 goto label1;

        $r2 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: java.lang.String getOutputText()>();

        return $r2;

     label1:
        $r1 = staticinvoke <com.android.inputmethod.latin.Constants: java.lang.String printableCode(int)>(i0);

        return $r1;
    }

    public java.lang.String toLongString()
    {
        com.android.inputmethod.keyboard.Key r0;
        int i0, $i1;
        java.lang.String r1, r2, r3, $r4, $r9, $r11, $r17, $r19, $r20;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r10, $r12, $r13, $r14, $r15, $r16, $r18, $r21, $r22;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        i0 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: int getIconId()>();

        if i0 != 0 goto label1;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!icon/");

        $r20 = staticinvoke <com.android.inputmethod.keyboard.internal.KeyboardIconsSet: java.lang.String getIconName(int)>(i0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r4 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: java.lang.String getLabel()>();

     label2:
        r1 = $r4;

        r2 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: java.lang.String getHintLabel()>();

        if r2 != null goto label3;

        $r9 = r1;

        goto label4;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("^");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        r3 = $r9;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: java.lang.String toString()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i1 = r0.<com.android.inputmethod.keyboard.Key: int mBackgroundType>;

        $r17 = staticinvoke <com.android.inputmethod.keyboard.Key: java.lang.String backgroundName(int)>($i1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r19;
    }

    private static java.lang.String backgroundName(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label7;
            default: goto label8;
        };

     label1:
        return "empty";

     label2:
        return "normal";

     label3:
        return "functional";

     label4:
        return "stickyOff";

     label5:
        return "stickyOn";

     label6:
        return "action";

     label7:
        return "spacebar";

     label8:
        return null;
    }

    public int getCode()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mCode>;

        return $i0;
    }

    public java.lang.String getLabel()
    {
        com.android.inputmethod.keyboard.Key r0;
        java.lang.String $r1;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $r1 = r0.<com.android.inputmethod.keyboard.Key: java.lang.String mLabel>;

        return $r1;
    }

    public java.lang.String getHintLabel()
    {
        com.android.inputmethod.keyboard.Key r0;
        java.lang.String $r1;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $r1 = r0.<com.android.inputmethod.keyboard.Key: java.lang.String mHintLabel>;

        return $r1;
    }

    public com.android.inputmethod.keyboard.internal.MoreKeySpec[] getMoreKeys()
    {
        com.android.inputmethod.keyboard.Key r0;
        com.android.inputmethod.keyboard.internal.MoreKeySpec[] $r1;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $r1 = r0.<com.android.inputmethod.keyboard.Key: com.android.inputmethod.keyboard.internal.MoreKeySpec[] mMoreKeys>;

        return $r1;
    }

    public void markAsLeftEdge(com.android.inputmethod.keyboard.internal.KeyboardParams)
    {
        com.android.inputmethod.keyboard.Key r0;
        com.android.inputmethod.keyboard.internal.KeyboardParams r1;
        int $i0;
        android.graphics.Rect $r2;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        r1 := @parameter0: com.android.inputmethod.keyboard.internal.KeyboardParams;

        $r2 = r0.<com.android.inputmethod.keyboard.Key: android.graphics.Rect mHitBox>;

        $i0 = r1.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mLeftPadding>;

        $r2.<android.graphics.Rect: int left> = $i0;

        return;
    }

    public void markAsRightEdge(com.android.inputmethod.keyboard.internal.KeyboardParams)
    {
        com.android.inputmethod.keyboard.Key r0;
        com.android.inputmethod.keyboard.internal.KeyboardParams r1;
        int $i0, $i1, $i2;
        android.graphics.Rect $r2;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        r1 := @parameter0: com.android.inputmethod.keyboard.internal.KeyboardParams;

        $r2 = r0.<com.android.inputmethod.keyboard.Key: android.graphics.Rect mHitBox>;

        $i1 = r1.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mOccupiedWidth>;

        $i0 = r1.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mRightPadding>;

        $i2 = $i1 - $i0;

        $r2.<android.graphics.Rect: int right> = $i2;

        return;
    }

    public void markAsTopEdge(com.android.inputmethod.keyboard.internal.KeyboardParams)
    {
        com.android.inputmethod.keyboard.Key r0;
        com.android.inputmethod.keyboard.internal.KeyboardParams r1;
        int $i0;
        android.graphics.Rect $r2;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        r1 := @parameter0: com.android.inputmethod.keyboard.internal.KeyboardParams;

        $r2 = r0.<com.android.inputmethod.keyboard.Key: android.graphics.Rect mHitBox>;

        $i0 = r1.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mTopPadding>;

        $r2.<android.graphics.Rect: int top> = $i0;

        return;
    }

    public void markAsBottomEdge(com.android.inputmethod.keyboard.internal.KeyboardParams)
    {
        com.android.inputmethod.keyboard.Key r0;
        com.android.inputmethod.keyboard.internal.KeyboardParams r1;
        int $i0, $i1, $i2;
        android.graphics.Rect $r2;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        r1 := @parameter0: com.android.inputmethod.keyboard.internal.KeyboardParams;

        $r2 = r0.<com.android.inputmethod.keyboard.Key: android.graphics.Rect mHitBox>;

        $i1 = r1.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mOccupiedHeight>;

        $i0 = r1.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mBottomPadding>;

        $i2 = $i1 + $i0;

        $r2.<android.graphics.Rect: int bottom> = $i2;

        return;
    }

    public final boolean isSpacer()
    {
        com.android.inputmethod.keyboard.Key r0;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $z0 = r0 instanceof com.android.inputmethod.keyboard.Key$Spacer;

        return $z0;
    }

    public final boolean isActionKey()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mBackgroundType>;

        if $i0 != 5 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean isShift()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mCode>;

        if $i0 != -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean isModifier()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mCode>;

        if $i0 == -1 goto label1;

        $i1 = r0.<com.android.inputmethod.keyboard.Key: int mCode>;

        if $i1 != -3 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public final boolean isRepeatable()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mActionFlags>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean noKeyPreview()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mActionFlags>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean altCodeWhileTyping()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mActionFlags>;

        $i1 = $i0 & 4;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean isLongPressEnabled()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mActionFlags>;

        $i1 = $i0 & 8;

        if $i1 == 0 goto label1;

        $i2 = r0.<com.android.inputmethod.keyboard.Key: int mLabelFlags>;

        $i3 = $i2 & 131072;

        if $i3 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public com.android.inputmethod.keyboard.internal.KeyVisualAttributes getVisualAttributes()
    {
        com.android.inputmethod.keyboard.Key r0;
        com.android.inputmethod.keyboard.internal.KeyVisualAttributes $r1;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $r1 = r0.<com.android.inputmethod.keyboard.Key: com.android.inputmethod.keyboard.internal.KeyVisualAttributes mKeyVisualAttributes>;

        return $r1;
    }

    public final android.graphics.Typeface selectTypeface(com.android.inputmethod.keyboard.internal.KeyDrawParams)
    {
        com.android.inputmethod.keyboard.Key r0;
        com.android.inputmethod.keyboard.internal.KeyDrawParams r1;
        int $i0, $i1;
        android.graphics.Typeface $r2, $r3, $r4;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        r1 := @parameter0: com.android.inputmethod.keyboard.internal.KeyDrawParams;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mLabelFlags>;

        $i1 = $i0 & 48;

        lookupswitch($i1)
        {
            case 16: goto label1;
            case 32: goto label2;
            case 48: goto label3;
            default: goto label3;
        };

     label1:
        $r3 = <android.graphics.Typeface: android.graphics.Typeface DEFAULT>;

        return $r3;

     label2:
        $r2 = <android.graphics.Typeface: android.graphics.Typeface MONOSPACE>;

        return $r2;

     label3:
        $r4 = r1.<com.android.inputmethod.keyboard.internal.KeyDrawParams: android.graphics.Typeface mTypeface>;

        return $r4;
    }

    public final int selectTextSize(com.android.inputmethod.keyboard.internal.KeyDrawParams)
    {
        com.android.inputmethod.keyboard.Key r0;
        com.android.inputmethod.keyboard.internal.KeyDrawParams r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r2;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        r1 := @parameter0: com.android.inputmethod.keyboard.internal.KeyDrawParams;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mLabelFlags>;

        $i1 = $i0 & 448;

        lookupswitch($i1)
        {
            case 64: goto label2;
            case 128: goto label1;
            case 192: goto label3;
            case 320: goto label4;
            default: goto label5;
        };

     label1:
        $i4 = r1.<com.android.inputmethod.keyboard.internal.KeyDrawParams: int mLetterSize>;

        return $i4;

     label2:
        $i5 = r1.<com.android.inputmethod.keyboard.internal.KeyDrawParams: int mLargeLetterSize>;

        return $i5;

     label3:
        $i3 = r1.<com.android.inputmethod.keyboard.internal.KeyDrawParams: int mLabelSize>;

        return $i3;

     label4:
        $i2 = r1.<com.android.inputmethod.keyboard.internal.KeyDrawParams: int mHintLabelSize>;

        return $i2;

     label5:
        $r2 = r0.<com.android.inputmethod.keyboard.Key: java.lang.String mLabel>;

        $i6 = staticinvoke <com.android.inputmethod.latin.utils.StringUtils: int codePointCount(java.lang.String)>($r2);

        if $i6 != 1 goto label6;

        $i7 = r1.<com.android.inputmethod.keyboard.internal.KeyDrawParams: int mLetterSize>;

        goto label7;

     label6:
        $i7 = r1.<com.android.inputmethod.keyboard.internal.KeyDrawParams: int mLabelSize>;

     label7:
        return $i7;
    }

    public final int selectTextColor(com.android.inputmethod.keyboard.internal.KeyDrawParams)
    {
        com.android.inputmethod.keyboard.Key r0;
        com.android.inputmethod.keyboard.internal.KeyDrawParams r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        r1 := @parameter0: com.android.inputmethod.keyboard.internal.KeyDrawParams;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mLabelFlags>;

        $i1 = $i0 & 524288;

        if $i1 == 0 goto label1;

        $i3 = r1.<com.android.inputmethod.keyboard.internal.KeyDrawParams: int mFunctionalTextColor>;

        return $i3;

     label1:
        $z0 = specialinvoke r0.<com.android.inputmethod.keyboard.Key: boolean isShiftedLetterActivated()>();

        if $z0 == 0 goto label2;

        $i2 = r1.<com.android.inputmethod.keyboard.internal.KeyDrawParams: int mTextInactivatedColor>;

        goto label3;

     label2:
        $i2 = r1.<com.android.inputmethod.keyboard.internal.KeyDrawParams: int mTextColor>;

     label3:
        return $i2;
    }

    public final int selectHintTextSize(com.android.inputmethod.keyboard.internal.KeyDrawParams)
    {
        com.android.inputmethod.keyboard.Key r0;
        com.android.inputmethod.keyboard.internal.KeyDrawParams r1;
        boolean $z0, $z1;
        int $i0, $i1, $i2;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        r1 := @parameter0: com.android.inputmethod.keyboard.internal.KeyDrawParams;

        $z0 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: boolean hasHintLabel()>();

        if $z0 == 0 goto label1;

        $i2 = r1.<com.android.inputmethod.keyboard.internal.KeyDrawParams: int mHintLabelSize>;

        return $i2;

     label1:
        $z1 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: boolean hasShiftedLetterHint()>();

        if $z1 == 0 goto label2;

        $i1 = r1.<com.android.inputmethod.keyboard.internal.KeyDrawParams: int mShiftedLetterHintSize>;

        return $i1;

     label2:
        $i0 = r1.<com.android.inputmethod.keyboard.internal.KeyDrawParams: int mHintLetterSize>;

        return $i0;
    }

    public final int selectHintTextColor(com.android.inputmethod.keyboard.internal.KeyDrawParams)
    {
        com.android.inputmethod.keyboard.Key r0;
        com.android.inputmethod.keyboard.internal.KeyDrawParams r1;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        r1 := @parameter0: com.android.inputmethod.keyboard.internal.KeyDrawParams;

        $z0 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: boolean hasHintLabel()>();

        if $z0 == 0 goto label1;

        $i2 = r1.<com.android.inputmethod.keyboard.internal.KeyDrawParams: int mHintLabelColor>;

        return $i2;

     label1:
        $z1 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: boolean hasShiftedLetterHint()>();

        if $z1 == 0 goto label4;

        $z2 = specialinvoke r0.<com.android.inputmethod.keyboard.Key: boolean isShiftedLetterActivated()>();

        if $z2 == 0 goto label2;

        $i1 = r1.<com.android.inputmethod.keyboard.internal.KeyDrawParams: int mShiftedLetterHintActivatedColor>;

        goto label3;

     label2:
        $i1 = r1.<com.android.inputmethod.keyboard.internal.KeyDrawParams: int mShiftedLetterHintInactivatedColor>;

     label3:
        return $i1;

     label4:
        $i0 = r1.<com.android.inputmethod.keyboard.internal.KeyDrawParams: int mHintLetterColor>;

        return $i0;
    }

    public final int selectMoreKeyTextSize(com.android.inputmethod.keyboard.internal.KeyDrawParams)
    {
        com.android.inputmethod.keyboard.Key r0;
        com.android.inputmethod.keyboard.internal.KeyDrawParams r1;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        r1 := @parameter0: com.android.inputmethod.keyboard.internal.KeyDrawParams;

        $z0 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: boolean hasLabelsInMoreKeys()>();

        if $z0 == 0 goto label1;

        $i0 = r1.<com.android.inputmethod.keyboard.internal.KeyDrawParams: int mLabelSize>;

        goto label2;

     label1:
        $i0 = r1.<com.android.inputmethod.keyboard.internal.KeyDrawParams: int mLetterSize>;

     label2:
        return $i0;
    }

    public final java.lang.String getPreviewLabel()
    {
        com.android.inputmethod.keyboard.Key r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $z0 = specialinvoke r0.<com.android.inputmethod.keyboard.Key: boolean isShiftedLetterActivated()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.inputmethod.keyboard.Key: java.lang.String mHintLabel>;

        goto label2;

     label1:
        $r1 = r0.<com.android.inputmethod.keyboard.Key: java.lang.String mLabel>;

     label2:
        return $r1;
    }

    private boolean previewHasLetterSize()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0, $i1, $i2;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mLabelFlags>;

        $i1 = $i0 & 128;

        if $i1 != 0 goto label1;

        $r1 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: java.lang.String getPreviewLabel()>();

        $i2 = staticinvoke <com.android.inputmethod.latin.utils.StringUtils: int codePointCount(java.lang.String)>($r1);

        if $i2 != 1 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public final int selectPreviewTextSize(com.android.inputmethod.keyboard.internal.KeyDrawParams)
    {
        com.android.inputmethod.keyboard.Key r0;
        com.android.inputmethod.keyboard.internal.KeyDrawParams r1;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        r1 := @parameter0: com.android.inputmethod.keyboard.internal.KeyDrawParams;

        $z0 = specialinvoke r0.<com.android.inputmethod.keyboard.Key: boolean previewHasLetterSize()>();

        if $z0 == 0 goto label1;

        $i1 = r1.<com.android.inputmethod.keyboard.internal.KeyDrawParams: int mPreviewTextSize>;

        return $i1;

     label1:
        $i0 = r1.<com.android.inputmethod.keyboard.internal.KeyDrawParams: int mLetterSize>;

        return $i0;
    }

    public android.graphics.Typeface selectPreviewTypeface(com.android.inputmethod.keyboard.internal.KeyDrawParams)
    {
        com.android.inputmethod.keyboard.Key r0;
        com.android.inputmethod.keyboard.internal.KeyDrawParams r1;
        boolean $z0;
        android.graphics.Typeface $r2, $r3;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        r1 := @parameter0: com.android.inputmethod.keyboard.internal.KeyDrawParams;

        $z0 = specialinvoke r0.<com.android.inputmethod.keyboard.Key: boolean previewHasLetterSize()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: android.graphics.Typeface selectTypeface(com.android.inputmethod.keyboard.internal.KeyDrawParams)>(r1);

        return $r3;

     label1:
        $r2 = <android.graphics.Typeface: android.graphics.Typeface DEFAULT_BOLD>;

        return $r2;
    }

    public final boolean isAlignHintLabelToBottom(int)
    {
        com.android.inputmethod.keyboard.Key r0;
        int i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.inputmethod.keyboard.Key: int mLabelFlags>;

        $i2 = $i1 | i0;

        $i3 = $i2 & 2;

        if $i3 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean isAlignIconToBottom()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mLabelFlags>;

        $i1 = $i0 & 4;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean isAlignLabelOffCenter()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mLabelFlags>;

        $i1 = $i0 & 8;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean hasPopupHint()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mLabelFlags>;

        $i1 = $i0 & 512;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean hasShiftedLetterHint()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0, $i1;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mLabelFlags>;

        $i1 = $i0 & 1024;

        if $i1 == 0 goto label1;

        $r1 = r0.<com.android.inputmethod.keyboard.Key: java.lang.String mHintLabel>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public final boolean hasHintLabel()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mLabelFlags>;

        $i1 = $i0 & 2048;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean needsAutoXScale()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mLabelFlags>;

        $i1 = $i0 & 16384;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean needsAutoScale()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mLabelFlags>;

        $i1 = $i0 & 49152;

        if $i1 != 49152 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean needsToKeepBackgroundAspectRatio(int)
    {
        com.android.inputmethod.keyboard.Key r0;
        int i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.inputmethod.keyboard.Key: int mLabelFlags>;

        $i2 = $i1 | i0;

        $i3 = $i2 & 1048576;

        if $i3 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean hasCustomActionLabel()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mLabelFlags>;

        $i1 = $i0 & 262144;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private final boolean isShiftedLetterActivated()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0, $i1;
        java.lang.String $r1;
        boolean $z0, $z1;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mLabelFlags>;

        $i1 = $i0 & 131072;

        if $i1 == 0 goto label1;

        $r1 = r0.<com.android.inputmethod.keyboard.Key: java.lang.String mHintLabel>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public final int getMoreKeysColumnNumber()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0, $i1;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mMoreKeysColumnAndFlags>;

        $i1 = $i0 & 255;

        return $i1;
    }

    public final boolean isMoreKeysFixedColumn()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mMoreKeysColumnAndFlags>;

        $i1 = $i0 & 256;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean isMoreKeysFixedOrder()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mMoreKeysColumnAndFlags>;

        $i1 = $i0 & 512;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean hasLabelsInMoreKeys()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mMoreKeysColumnAndFlags>;

        $i1 = $i0 & 1073741824;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final int getMoreKeyLabelFlags()
    {
        com.android.inputmethod.keyboard.Key r0;
        short s0, $s1, $s2;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $z0 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: boolean hasLabelsInMoreKeys()>();

        if $z0 == 0 goto label1;

        $s2 = 192;

        goto label2;

     label1:
        $s2 = 128;

     label2:
        s0 = $s2;

        $s1 = s0 | 16384;

        return $s1;
    }

    public final boolean needsDividersInMoreKeys()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mMoreKeysColumnAndFlags>;

        $i1 = $i0 & 536870912;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean hasNoPanelAutoMoreKey()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mMoreKeysColumnAndFlags>;

        $i1 = $i0 & 268435456;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final java.lang.String getOutputText()
    {
        com.android.inputmethod.keyboard.Key r0;
        com.android.inputmethod.keyboard.Key$OptionalAttributes r1;
        java.lang.String $r2;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        r1 = r0.<com.android.inputmethod.keyboard.Key: com.android.inputmethod.keyboard.Key$OptionalAttributes mOptionalAttributes>;

        if r1 == null goto label1;

        $r2 = r1.<com.android.inputmethod.keyboard.Key$OptionalAttributes: java.lang.String mOutputText>;

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public final int getAltCode()
    {
        com.android.inputmethod.keyboard.Key r0;
        com.android.inputmethod.keyboard.Key$OptionalAttributes r1;
        int $i0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        r1 = r0.<com.android.inputmethod.keyboard.Key: com.android.inputmethod.keyboard.Key$OptionalAttributes mOptionalAttributes>;

        if r1 == null goto label1;

        $i0 = r1.<com.android.inputmethod.keyboard.Key$OptionalAttributes: int mAltCode>;

        goto label2;

     label1:
        $i0 = -15;

     label2:
        return $i0;
    }

    public int getIconId()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mIconId>;

        return $i0;
    }

    public android.graphics.drawable.Drawable getIcon(com.android.inputmethod.keyboard.internal.KeyboardIconsSet, int)
    {
        com.android.inputmethod.keyboard.Key r0;
        com.android.inputmethod.keyboard.internal.KeyboardIconsSet r1;
        int i0, i1, i2, $i3, $i4;
        com.android.inputmethod.keyboard.Key$OptionalAttributes r2;
        android.graphics.drawable.Drawable r3;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        r1 := @parameter0: com.android.inputmethod.keyboard.internal.KeyboardIconsSet;

        i0 := @parameter1: int;

        r2 = r0.<com.android.inputmethod.keyboard.Key: com.android.inputmethod.keyboard.Key$OptionalAttributes mOptionalAttributes>;

        if r2 == null goto label1;

        $i4 = r2.<com.android.inputmethod.keyboard.Key$OptionalAttributes: int mDisabledIconId>;

        goto label2;

     label1:
        $i4 = 0;

     label2:
        i1 = $i4;

        $z0 = r0.<com.android.inputmethod.keyboard.Key: boolean mEnabled>;

        if $z0 == 0 goto label3;

        $i3 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: int getIconId()>();

        goto label4;

     label3:
        $i3 = i1;

     label4:
        i2 = $i3;

        r3 = virtualinvoke r1.<com.android.inputmethod.keyboard.internal.KeyboardIconsSet: android.graphics.drawable.Drawable getIconDrawable(int)>(i2);

        if r3 == null goto label5;

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setAlpha(int)>(i0);

     label5:
        return r3;
    }

    public android.graphics.drawable.Drawable getPreviewIcon(com.android.inputmethod.keyboard.internal.KeyboardIconsSet)
    {
        com.android.inputmethod.keyboard.Key r0;
        com.android.inputmethod.keyboard.internal.KeyboardIconsSet r1;
        int $i0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        r1 := @parameter0: com.android.inputmethod.keyboard.internal.KeyboardIconsSet;

        $i0 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: int getIconId()>();

        $r2 = virtualinvoke r1.<com.android.inputmethod.keyboard.internal.KeyboardIconsSet: android.graphics.drawable.Drawable getIconDrawable(int)>($i0);

        return $r2;
    }

    public int getWidth()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mWidth>;

        return $i0;
    }

    public int getHeight()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mHeight>;

        return $i0;
    }

    public int getX()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mX>;

        return $i0;
    }

    public int getY()
    {
        com.android.inputmethod.keyboard.Key r0;
        int $i0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mY>;

        return $i0;
    }

    public final int getDrawX()
    {
        com.android.inputmethod.keyboard.Key r0;
        int i0, $i1, $i2;
        com.android.inputmethod.keyboard.Key$OptionalAttributes r1;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        i0 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: int getX()>();

        r1 = r0.<com.android.inputmethod.keyboard.Key: com.android.inputmethod.keyboard.Key$OptionalAttributes mOptionalAttributes>;

        if r1 != null goto label1;

        $i2 = i0;

        goto label2;

     label1:
        $i1 = r1.<com.android.inputmethod.keyboard.Key$OptionalAttributes: int mVisualInsetsLeft>;

        $i2 = i0 + $i1;

     label2:
        return $i2;
    }

    public final int getDrawWidth()
    {
        com.android.inputmethod.keyboard.Key r0;
        com.android.inputmethod.keyboard.Key$OptionalAttributes r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        r1 = r0.<com.android.inputmethod.keyboard.Key: com.android.inputmethod.keyboard.Key$OptionalAttributes mOptionalAttributes>;

        if r1 != null goto label1;

        $i4 = r0.<com.android.inputmethod.keyboard.Key: int mWidth>;

        goto label2;

     label1:
        $i1 = r0.<com.android.inputmethod.keyboard.Key: int mWidth>;

        $i0 = r1.<com.android.inputmethod.keyboard.Key$OptionalAttributes: int mVisualInsetsLeft>;

        $i3 = $i1 - $i0;

        $i2 = r1.<com.android.inputmethod.keyboard.Key$OptionalAttributes: int mVisualInsetsRight>;

        $i4 = $i3 - $i2;

     label2:
        return $i4;
    }

    public void onPressed()
    {
        com.android.inputmethod.keyboard.Key r0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        r0.<com.android.inputmethod.keyboard.Key: boolean mPressed> = 1;

        return;
    }

    public void onReleased()
    {
        com.android.inputmethod.keyboard.Key r0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        r0.<com.android.inputmethod.keyboard.Key: boolean mPressed> = 0;

        return;
    }

    public final boolean isEnabled()
    {
        com.android.inputmethod.keyboard.Key r0;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $z0 = r0.<com.android.inputmethod.keyboard.Key: boolean mEnabled>;

        return $z0;
    }

    public void setEnabled(boolean)
    {
        com.android.inputmethod.keyboard.Key r0;
        boolean z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        z0 := @parameter0: boolean;

        r0.<com.android.inputmethod.keyboard.Key: boolean mEnabled> = z0;

        return;
    }

    public android.graphics.Rect getHitBox()
    {
        com.android.inputmethod.keyboard.Key r0;
        android.graphics.Rect $r1;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        $r1 = r0.<com.android.inputmethod.keyboard.Key: android.graphics.Rect mHitBox>;

        return $r1;
    }

    public boolean isOnKey(int, int)
    {
        com.android.inputmethod.keyboard.Key r0;
        int i0, i1;
        android.graphics.Rect $r1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.inputmethod.keyboard.Key: android.graphics.Rect mHitBox>;

        $z0 = virtualinvoke $r1.<android.graphics.Rect: boolean contains(int,int)>(i0, i1);

        return $z0;
    }

    public int squaredDistanceToEdge(int, int)
    {
        com.android.inputmethod.keyboard.Key r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: int getX()>();

        $i10 = r0.<com.android.inputmethod.keyboard.Key: int mWidth>;

        i3 = i2 + $i10;

        i4 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: int getY()>();

        $i11 = r0.<com.android.inputmethod.keyboard.Key: int mHeight>;

        i5 = i4 + $i11;

        if i0 >= i2 goto label1;

        $i15 = i2;

        goto label3;

     label1:
        if i0 <= i3 goto label2;

        $i15 = i3;

        goto label3;

     label2:
        $i15 = i0;

     label3:
        i6 = $i15;

        if i1 >= i4 goto label4;

        $i16 = i4;

        goto label6;

     label4:
        if i1 <= i5 goto label5;

        $i16 = i5;

        goto label6;

     label5:
        $i16 = i1;

     label6:
        i7 = $i16;

        i8 = i0 - i6;

        i9 = i1 - i7;

        $i14 = i8 * i8;

        $i12 = i9 * i9;

        $i13 = $i14 + $i12;

        return $i13;
    }

    public final android.graphics.drawable.Drawable selectBackgroundDrawable(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        com.android.inputmethod.keyboard.Key r0;
        android.graphics.drawable.Drawable r1, r2, r3, r4;
        int[] r5;
        int $i0, $i1, $i2;
        com.android.inputmethod.keyboard.Key$KeyBackgroundState[] $r6;
        boolean $z0;
        com.android.inputmethod.keyboard.Key$KeyBackgroundState $r7;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        r3 := @parameter2: android.graphics.drawable.Drawable;

        $i0 = r0.<com.android.inputmethod.keyboard.Key: int mBackgroundType>;

        if $i0 != 2 goto label1;

        r4 = r2;

        goto label3;

     label1:
        $i1 = r0.<com.android.inputmethod.keyboard.Key: int mBackgroundType>;

        if $i1 != 6 goto label2;

        r4 = r3;

        goto label3;

     label2:
        r4 = r1;

     label3:
        $r6 = <com.android.inputmethod.keyboard.Key$KeyBackgroundState: com.android.inputmethod.keyboard.Key$KeyBackgroundState[] STATES>;

        $i2 = r0.<com.android.inputmethod.keyboard.Key: int mBackgroundType>;

        $r7 = $r6[$i2];

        $z0 = r0.<com.android.inputmethod.keyboard.Key: boolean mPressed>;

        r5 = virtualinvoke $r7.<com.android.inputmethod.keyboard.Key$KeyBackgroundState: int[] getState(boolean)>($z0);

        virtualinvoke r4.<android.graphics.drawable.Drawable: boolean setState(int[])>(r5);

        return r4;
    }

    public volatile int compareTo(java.lang.Object)
    {
        com.android.inputmethod.keyboard.Key r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: com.android.inputmethod.keyboard.Key;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.android.inputmethod.keyboard.Key) r1;

        $i0 = virtualinvoke r0.<com.android.inputmethod.keyboard.Key: int compareTo(com.android.inputmethod.keyboard.Key)>($r2);

        return $i0;
    }

    public static void <clinit>()
    {
        <com.android.inputmethod.keyboard.Key: int ACTION_FLAGS_ENABLE_LONG_PRESS> = 8;

        <com.android.inputmethod.keyboard.Key: int ACTION_FLAGS_ALT_CODE_WHILE_TYPING> = 4;

        <com.android.inputmethod.keyboard.Key: int ACTION_FLAGS_NO_KEY_PREVIEW> = 2;

        <com.android.inputmethod.keyboard.Key: int ACTION_FLAGS_IS_REPEATABLE> = 1;

        <com.android.inputmethod.keyboard.Key: int BACKGROUND_TYPE_SPACEBAR> = 6;

        <com.android.inputmethod.keyboard.Key: int BACKGROUND_TYPE_ACTION> = 5;

        <com.android.inputmethod.keyboard.Key: int BACKGROUND_TYPE_STICKY_ON> = 4;

        <com.android.inputmethod.keyboard.Key: int BACKGROUND_TYPE_STICKY_OFF> = 3;

        <com.android.inputmethod.keyboard.Key: int BACKGROUND_TYPE_FUNCTIONAL> = 2;

        <com.android.inputmethod.keyboard.Key: int BACKGROUND_TYPE_NORMAL> = 1;

        <com.android.inputmethod.keyboard.Key: int BACKGROUND_TYPE_EMPTY> = 0;

        <com.android.inputmethod.keyboard.Key: java.lang.String MORE_KEYS_NO_PANEL_AUTO_MORE_KEY> = "!noPanelAutoMoreKey!";

        <com.android.inputmethod.keyboard.Key: java.lang.String MORE_KEYS_NEEDS_DIVIDERS> = "!needsDividers!";

        <com.android.inputmethod.keyboard.Key: java.lang.String MORE_KEYS_HAS_LABELS> = "!hasLabels!";

        <com.android.inputmethod.keyboard.Key: java.lang.String MORE_KEYS_FIXED_COLUMN_ORDER> = "!fixedColumnOrder!";

        <com.android.inputmethod.keyboard.Key: java.lang.String MORE_KEYS_AUTO_COLUMN_ORDER> = "!autoColumnOrder!";

        <com.android.inputmethod.keyboard.Key: int MORE_KEYS_FLAGS_NO_PANEL_AUTO_MORE_KEY> = 268435456;

        <com.android.inputmethod.keyboard.Key: int MORE_KEYS_FLAGS_NEEDS_DIVIDERS> = 536870912;

        <com.android.inputmethod.keyboard.Key: int MORE_KEYS_FLAGS_HAS_LABELS> = 1073741824;

        <com.android.inputmethod.keyboard.Key: int MORE_KEYS_MODE_FIXED_COLUMN_WITH_FIXED_ORDER> = 768;

        <com.android.inputmethod.keyboard.Key: int MORE_KEYS_MODE_FIXED_COLUMN_WITH_AUTO_ORDER> = 256;

        <com.android.inputmethod.keyboard.Key: int MORE_KEYS_MODE_MAX_COLUMN_WITH_AUTO_ORDER> = 0;

        <com.android.inputmethod.keyboard.Key: int MORE_KEYS_FLAGS_FIXED_ORDER> = 512;

        <com.android.inputmethod.keyboard.Key: int MORE_KEYS_FLAGS_FIXED_COLUMN> = 256;

        <com.android.inputmethod.keyboard.Key: int MORE_KEYS_COLUMN_NUMBER_MASK> = 255;

        <com.android.inputmethod.keyboard.Key: int LABEL_FLAGS_DISABLE_ADDITIONAL_MORE_KEYS> = -2147483648;

        <com.android.inputmethod.keyboard.Key: int LABEL_FLAGS_DISABLE_HINT_LABEL> = 1073741824;

        <com.android.inputmethod.keyboard.Key: int LABEL_FLAGS_KEEP_BACKGROUND_ASPECT_RATIO> = 1048576;

        <com.android.inputmethod.keyboard.Key: int LABEL_FLAGS_FOLLOW_FUNCTIONAL_TEXT_COLOR> = 524288;

        <com.android.inputmethod.keyboard.Key: int LABEL_FLAGS_FROM_CUSTOM_ACTION_LABEL> = 262144;

        <com.android.inputmethod.keyboard.Key: int LABEL_FLAGS_SHIFTED_LETTER_ACTIVATED> = 131072;

        <com.android.inputmethod.keyboard.Key: int LABEL_FLAGS_PRESERVE_CASE> = 65536;

        <com.android.inputmethod.keyboard.Key: int LABEL_FLAGS_AUTO_SCALE> = 49152;

        <com.android.inputmethod.keyboard.Key: int LABEL_FLAGS_AUTO_Y_SCALE> = 32768;

        <com.android.inputmethod.keyboard.Key: int LABEL_FLAGS_AUTO_X_SCALE> = 16384;

        <com.android.inputmethod.keyboard.Key: int LABEL_FLAGS_HAS_HINT_LABEL> = 2048;

        <com.android.inputmethod.keyboard.Key: int LABEL_FLAGS_HAS_SHIFTED_LETTER_HINT> = 1024;

        <com.android.inputmethod.keyboard.Key: int LABEL_FLAGS_HAS_POPUP_HINT> = 512;

        <com.android.inputmethod.keyboard.Key: int LABEL_FLAGS_FOLLOW_KEY_HINT_LABEL_RATIO> = 320;

        <com.android.inputmethod.keyboard.Key: int LABEL_FLAGS_FOLLOW_KEY_LABEL_RATIO> = 192;

        <com.android.inputmethod.keyboard.Key: int LABEL_FLAGS_FOLLOW_KEY_LETTER_RATIO> = 128;

        <com.android.inputmethod.keyboard.Key: int LABEL_FLAGS_FOLLOW_KEY_LARGE_LETTER_RATIO> = 64;

        <com.android.inputmethod.keyboard.Key: int LABEL_FLAGS_FOLLOW_KEY_TEXT_RATIO_MASK> = 448;

        <com.android.inputmethod.keyboard.Key: int LABEL_FLAGS_FONT_DEFAULT> = 48;

        <com.android.inputmethod.keyboard.Key: int LABEL_FLAGS_FONT_MONO_SPACE> = 32;

        <com.android.inputmethod.keyboard.Key: int LABEL_FLAGS_FONT_NORMAL> = 16;

        <com.android.inputmethod.keyboard.Key: int LABEL_FLAGS_FONT_MASK> = 48;

        <com.android.inputmethod.keyboard.Key: int LABEL_FLAGS_ALIGN_LABEL_OFF_CENTER> = 8;

        <com.android.inputmethod.keyboard.Key: int LABEL_FLAGS_ALIGN_ICON_TO_BOTTOM> = 4;

        <com.android.inputmethod.keyboard.Key: int LABEL_FLAGS_ALIGN_HINT_LABEL_TO_BOTTOM> = 2;

        return;
    }
}
