abstract class com.android.inputmethod.latin.InputView$MotionEventForwarder extends java.lang.Object
{
    protected final android.view.View mSenderView;
    protected final android.view.View mReceiverView;
    protected final android.graphics.Rect mEventSendingRect;
    protected final android.graphics.Rect mEventReceivingRect;

    public void <init>(android.view.View, android.view.View)
    {
        android.graphics.Rect $r0, $r4;
        com.android.inputmethod.latin.InputView$MotionEventForwarder r1;
        android.view.View r2, r3;

        r1 := @this: com.android.inputmethod.latin.InputView$MotionEventForwarder;

        r2 := @parameter0: android.view.View;

        r3 := @parameter1: android.view.View;

        specialinvoke r1.<java.lang.Object: void <init>()>();

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r1.<com.android.inputmethod.latin.InputView$MotionEventForwarder: android.graphics.Rect mEventSendingRect> = $r4;

        $r0 = new android.graphics.Rect;

        specialinvoke $r0.<android.graphics.Rect: void <init>()>();

        r1.<com.android.inputmethod.latin.InputView$MotionEventForwarder: android.graphics.Rect mEventReceivingRect> = $r0;

        r1.<com.android.inputmethod.latin.InputView$MotionEventForwarder: android.view.View mSenderView> = r2;

        r1.<com.android.inputmethod.latin.InputView$MotionEventForwarder: android.view.View mReceiverView> = r3;

        return;
    }

    protected abstract boolean needsToForward(int, int);

    protected int translateX(int)
    {
        com.android.inputmethod.latin.InputView$MotionEventForwarder r0;
        int i0, $i1, $i2;
        android.graphics.Rect $r1;

        r0 := @this: com.android.inputmethod.latin.InputView$MotionEventForwarder;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.inputmethod.latin.InputView$MotionEventForwarder: android.graphics.Rect mEventReceivingRect>;

        $i1 = $r1.<android.graphics.Rect: int left>;

        $i2 = i0 - $i1;

        return $i2;
    }

    protected int translateY(int)
    {
        com.android.inputmethod.latin.InputView$MotionEventForwarder r0;
        int i0, $i1, $i2;
        android.graphics.Rect $r1;

        r0 := @this: com.android.inputmethod.latin.InputView$MotionEventForwarder;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.inputmethod.latin.InputView$MotionEventForwarder: android.graphics.Rect mEventReceivingRect>;

        $i1 = $r1.<android.graphics.Rect: int top>;

        $i2 = i0 - $i1;

        return $i2;
    }

    protected void onForwardingEvent(android.view.MotionEvent)
    {
        com.android.inputmethod.latin.InputView$MotionEventForwarder r0;
        android.view.MotionEvent r1;

        r0 := @this: com.android.inputmethod.latin.InputView$MotionEventForwarder;

        r1 := @parameter0: android.view.MotionEvent;

        return;
    }

    public boolean onInterceptTouchEvent(int, int, android.view.MotionEvent)
    {
        com.android.inputmethod.latin.InputView$MotionEventForwarder r0;
        int i0, i1, $i2, $i3, $i4;
        android.view.MotionEvent r1;
        android.view.View $r2, $r3, $r5;
        android.graphics.Rect $r4, $r6;
        boolean $z1, $z2;

        r0 := @this: com.android.inputmethod.latin.InputView$MotionEventForwarder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.MotionEvent;

        $r2 = r0.<com.android.inputmethod.latin.InputView$MotionEventForwarder: android.view.View mSenderView>;

        $i2 = virtualinvoke $r2.<android.view.View: int getVisibility()>();

        if $i2 != 0 goto label1;

        $r3 = r0.<com.android.inputmethod.latin.InputView$MotionEventForwarder: android.view.View mReceiverView>;

        $i3 = virtualinvoke $r3.<android.view.View: int getVisibility()>();

        if $i3 == 0 goto label2;

     label1:
        return 0;

     label2:
        $r5 = r0.<com.android.inputmethod.latin.InputView$MotionEventForwarder: android.view.View mSenderView>;

        $r4 = r0.<com.android.inputmethod.latin.InputView$MotionEventForwarder: android.graphics.Rect mEventSendingRect>;

        virtualinvoke $r5.<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect)>($r4);

        $r6 = r0.<com.android.inputmethod.latin.InputView$MotionEventForwarder: android.graphics.Rect mEventSendingRect>;

        $z1 = virtualinvoke $r6.<android.graphics.Rect: boolean contains(int,int)>(i0, i1);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $i4 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i4 != 0 goto label4;

        $z2 = virtualinvoke r0.<com.android.inputmethod.latin.InputView$MotionEventForwarder: boolean needsToForward(int,int)>(i0, i1);

        if $z2 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    public boolean onTouchEvent(int, int, android.view.MotionEvent)
    {
        com.android.inputmethod.latin.InputView$MotionEventForwarder r0;
        int i0, i1, $i2, $i3;
        android.view.MotionEvent r1;
        android.graphics.Rect $r2;
        android.view.View $r3, $r4;
        float $f0, $f1;

        r0 := @this: com.android.inputmethod.latin.InputView$MotionEventForwarder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.MotionEvent;

        $r3 = r0.<com.android.inputmethod.latin.InputView$MotionEventForwarder: android.view.View mReceiverView>;

        $r2 = r0.<com.android.inputmethod.latin.InputView$MotionEventForwarder: android.graphics.Rect mEventReceivingRect>;

        virtualinvoke $r3.<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect)>($r2);

        $i2 = virtualinvoke r0.<com.android.inputmethod.latin.InputView$MotionEventForwarder: int translateX(int)>(i0);

        $f0 = (float) $i2;

        $i3 = virtualinvoke r0.<com.android.inputmethod.latin.InputView$MotionEventForwarder: int translateY(int)>(i1);

        $f1 = (float) $i3;

        virtualinvoke r1.<android.view.MotionEvent: void setLocation(float,float)>($f0, $f1);

        $r4 = r0.<com.android.inputmethod.latin.InputView$MotionEventForwarder: android.view.View mReceiverView>;

        virtualinvoke $r4.<android.view.View: boolean dispatchTouchEvent(android.view.MotionEvent)>(r1);

        virtualinvoke r0.<com.android.inputmethod.latin.InputView$MotionEventForwarder: void onForwardingEvent(android.view.MotionEvent)>(r1);

        return 1;
    }
}
