final class com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider extends android.support.v4.view.accessibility.AccessibilityNodeProviderCompat
{
    private static final java.lang.String TAG;
    private static final int UNDEFINED;
    private final com.android.inputmethod.accessibility.KeyCodeDescriptionMapper mKeyCodeDescriptionMapper;
    private final com.android.inputmethod.accessibility.AccessibilityUtils mAccessibilityUtils;
    private final android.graphics.Rect mTempBoundsInScreen;
    private final int[] mParentLocation;
    private int mAccessibilityFocusedView;
    private int mHoveringNodeId;
    private final com.android.inputmethod.keyboard.KeyboardView mKeyboardView;
    private final com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate mDelegate;
    private com.android.inputmethod.keyboard.Keyboard mKeyboard;

    public void <init>(com.android.inputmethod.keyboard.KeyboardView, com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider r0;
        com.android.inputmethod.keyboard.KeyboardView r1;
        com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate r2;
        android.graphics.Rect $r3;
        int[] $r4;
        com.android.inputmethod.accessibility.KeyCodeDescriptionMapper $r5;
        com.android.inputmethod.accessibility.AccessibilityUtils $r6;
        com.android.inputmethod.keyboard.Keyboard $r7;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider;

        r1 := @parameter0: com.android.inputmethod.keyboard.KeyboardView;

        r2 := @parameter1: com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate;

        specialinvoke r0.<android.support.v4.view.accessibility.AccessibilityNodeProviderCompat: void <init>()>();

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: android.graphics.Rect mTempBoundsInScreen> = $r3;

        $r4 = staticinvoke <com.android.inputmethod.latin.utils.CoordinateUtils: int[] newInstance()>();

        r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: int[] mParentLocation> = $r4;

        r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: int mAccessibilityFocusedView> = 2147483647;

        r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: int mHoveringNodeId> = 2147483647;

        $r5 = staticinvoke <com.android.inputmethod.accessibility.KeyCodeDescriptionMapper: com.android.inputmethod.accessibility.KeyCodeDescriptionMapper getInstance()>();

        r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.accessibility.KeyCodeDescriptionMapper mKeyCodeDescriptionMapper> = $r5;

        $r6 = staticinvoke <com.android.inputmethod.accessibility.AccessibilityUtils: com.android.inputmethod.accessibility.AccessibilityUtils getInstance()>();

        r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.accessibility.AccessibilityUtils mAccessibilityUtils> = $r6;

        r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.keyboard.KeyboardView mKeyboardView> = r1;

        r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate mDelegate> = r2;

        $r7 = virtualinvoke r1.<com.android.inputmethod.keyboard.KeyboardView: com.android.inputmethod.keyboard.Keyboard getKeyboard()>();

        virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: void setKeyboard(com.android.inputmethod.keyboard.Keyboard)>($r7);

        return;
    }

    public void setKeyboard(com.android.inputmethod.keyboard.Keyboard)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider r0;
        com.android.inputmethod.keyboard.Keyboard r1;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider;

        r1 := @parameter0: com.android.inputmethod.keyboard.Keyboard;

        r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.keyboard.Keyboard mKeyboard> = r1;

        return;
    }

    private com.android.inputmethod.keyboard.Key getKeyOf(int)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider r0;
        int i0, $i1;
        java.util.List r1;
        com.android.inputmethod.keyboard.Keyboard $r2, $r3;
        java.lang.Object $r4;
        com.android.inputmethod.keyboard.Key $r5;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.keyboard.Keyboard mKeyboard>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.keyboard.Keyboard mKeyboard>;

        r1 = virtualinvoke $r3.<com.android.inputmethod.keyboard.Keyboard: java.util.List getSortedKeys()>();

        if i0 < 0 goto label2;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if i0 >= $i1 goto label2;

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r5 = (com.android.inputmethod.keyboard.Key) $r4;

        return $r5;

     label2:
        return null;
    }

    private int getVirtualViewIdOf(com.android.inputmethod.keyboard.Key)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider r0;
        com.android.inputmethod.keyboard.Key r1;
        java.util.List r2;
        int i0, i1;
        com.android.inputmethod.keyboard.Keyboard $r3, $r4;
        java.lang.Object $r5;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider;

        r1 := @parameter0: com.android.inputmethod.keyboard.Key;

        $r3 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.keyboard.Keyboard mKeyboard>;

        if $r3 != null goto label1;

        return -1;

     label1:
        $r4 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.keyboard.Keyboard mKeyboard>;

        r2 = virtualinvoke $r4.<com.android.inputmethod.keyboard.Keyboard: java.util.List getSortedKeys()>();

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        if $r5 != r1 goto label3;

        return i1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return -1;
    }

    public android.view.accessibility.AccessibilityEvent createAccessibilityEvent(com.android.inputmethod.keyboard.Key, int)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider r0;
        com.android.inputmethod.keyboard.Key r1;
        int i0, i1;
        java.lang.String r2, $r7, $r9;
        android.view.accessibility.AccessibilityEvent r3;
        android.support.v4.view.accessibility.AccessibilityRecordCompat r4;
        com.android.inputmethod.keyboard.KeyboardView $r5, $r10;
        android.content.Context $r6;
        java.lang.Class $r8;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider;

        r1 := @parameter0: com.android.inputmethod.keyboard.Key;

        i0 := @parameter1: int;

        i1 = specialinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: int getVirtualViewIdOf(com.android.inputmethod.keyboard.Key)>(r1);

        r2 = specialinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: java.lang.String getKeyDescription(com.android.inputmethod.keyboard.Key)>(r1);

        r3 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>(i0);

        $r5 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.keyboard.KeyboardView mKeyboardView>;

        $r6 = virtualinvoke $r5.<com.android.inputmethod.keyboard.KeyboardView: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>($r7);

        $r8 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r9);

        virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: void setContentDescription(java.lang.CharSequence)>(r2);

        virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: void setEnabled(boolean)>(1);

        r4 = staticinvoke <android.support.v4.view.accessibility.AccessibilityEventCompat: android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent)>(r3);

        $r10 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.keyboard.KeyboardView mKeyboardView>;

        virtualinvoke r4.<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.View,int)>($r10, i1);

        return r3;
    }

    public void onHoverEnterTo(com.android.inputmethod.keyboard.Key)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider r0;
        com.android.inputmethod.keyboard.Key r1;
        int i0;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider;

        r1 := @parameter0: com.android.inputmethod.keyboard.Key;

        i0 = specialinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: int getVirtualViewIdOf(com.android.inputmethod.keyboard.Key)>(r1);

        if i0 != -1 goto label1;

        return;

     label1:
        r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: int mHoveringNodeId> = i0;

        virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: void sendAccessibilityEventForKey(com.android.inputmethod.keyboard.Key,int)>(r1, 2048);

        virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: void sendAccessibilityEventForKey(com.android.inputmethod.keyboard.Key,int)>(r1, 128);

        return;
    }

    public void onHoverExitFrom(com.android.inputmethod.keyboard.Key)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider r0;
        com.android.inputmethod.keyboard.Key r1;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider;

        r1 := @parameter0: com.android.inputmethod.keyboard.Key;

        r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: int mHoveringNodeId> = 2147483647;

        virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: void sendAccessibilityEventForKey(com.android.inputmethod.keyboard.Key,int)>(r1, 2048);

        virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: void sendAccessibilityEventForKey(com.android.inputmethod.keyboard.Key,int)>(r1, 256);

        return;
    }

    public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat r1, r29;
        java.util.List r2;
        com.android.inputmethod.keyboard.Key r3, r25;
        android.graphics.Rect $r4, $r6, r27, r28;
        int[] $r5, $r7;
        com.android.inputmethod.keyboard.KeyboardView $r8, $r13, $r14, $r19, $r21, $r23;
        java.lang.String $r9, $r11, $r15, $r20, r26;
        android.content.Context $r10;
        java.lang.Class $r12;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r16, $r17, $r18;
        com.android.inputmethod.keyboard.Keyboard $r22;
        java.lang.Object $r24;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider;

        i0 := @parameter0: int;

        if i0 != 2147483647 goto label01;

        return null;

     label01:
        if i0 != -1 goto label06;

        $r19 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.keyboard.KeyboardView mKeyboardView>;

        r1 = staticinvoke <android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View)>($r19);

        $r21 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.keyboard.KeyboardView mKeyboardView>;

        staticinvoke <android.support.v4.view.ViewCompat: void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>($r21, r1);

        specialinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: void updateParentLocation()>();

        $r22 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.keyboard.Keyboard mKeyboard>;

        r2 = virtualinvoke $r22.<com.android.inputmethod.keyboard.Keyboard: java.util.List getSortedKeys()>();

        i1 = interfaceinvoke r2.<java.util.List: int size()>();

        i2 = 0;

     label02:
        if i2 >= i1 goto label05;

        $r24 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        r3 = (com.android.inputmethod.keyboard.Key) $r24;

        $z2 = virtualinvoke r3.<com.android.inputmethod.keyboard.Key: boolean isSpacer()>();

        if $z2 == 0 goto label03;

        goto label04;

     label03:
        $r23 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.keyboard.KeyboardView mKeyboardView>;

        virtualinvoke r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void addChild(android.view.View,int)>($r23, i2);

     label04:
        i2 = i2 + 1;

        goto label02;

     label05:
        return r1;

     label06:
        r25 = specialinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.keyboard.Key getKeyOf(int)>(i0);

        if r25 != null goto label07;

        $r15 = <com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: java.lang.String TAG>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid virtual view ID: ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r15, $r20);

        return null;

     label07:
        r26 = specialinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: java.lang.String getKeyDescription(com.android.inputmethod.keyboard.Key)>(r25);

        r27 = virtualinvoke r25.<com.android.inputmethod.keyboard.Key: android.graphics.Rect getHitBox()>();

        $r4 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: android.graphics.Rect mTempBoundsInScreen>;

        virtualinvoke $r4.<android.graphics.Rect: void set(android.graphics.Rect)>(r27);

        $r6 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: android.graphics.Rect mTempBoundsInScreen>;

        $r5 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: int[] mParentLocation>;

        $i3 = staticinvoke <com.android.inputmethod.latin.utils.CoordinateUtils: int x(int[])>($r5);

        $r7 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: int[] mParentLocation>;

        $i4 = staticinvoke <com.android.inputmethod.latin.utils.CoordinateUtils: int y(int[])>($r7);

        virtualinvoke $r6.<android.graphics.Rect: void offset(int,int)>($i3, $i4);

        r28 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: android.graphics.Rect mTempBoundsInScreen>;

        r29 = staticinvoke <android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain()>();

        $r8 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.keyboard.KeyboardView mKeyboardView>;

        $r10 = virtualinvoke $r8.<com.android.inputmethod.keyboard.KeyboardView: android.content.Context getContext()>();

        $r9 = virtualinvoke $r10.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke r29.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setPackageName(java.lang.CharSequence)>($r9);

        $r12 = virtualinvoke r25.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r29.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>($r11);

        virtualinvoke r29.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setContentDescription(java.lang.CharSequence)>(r26);

        virtualinvoke r29.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInParent(android.graphics.Rect)>(r27);

        virtualinvoke r29.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInScreen(android.graphics.Rect)>(r28);

        $r14 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.keyboard.KeyboardView mKeyboardView>;

        virtualinvoke r29.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View)>($r14);

        $r13 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.keyboard.KeyboardView mKeyboardView>;

        virtualinvoke r29.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View,int)>($r13, i0);

        $z0 = virtualinvoke r25.<com.android.inputmethod.keyboard.Key: boolean isEnabled()>();

        virtualinvoke r29.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setEnabled(boolean)>($z0);

        virtualinvoke r29.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setVisibleToUser(boolean)>(1);

        $i5 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: int mHoveringNodeId>;

        if i0 == $i5 goto label08;

        virtualinvoke r29.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>(16);

        $z1 = virtualinvoke r25.<com.android.inputmethod.keyboard.Key: boolean isLongPressEnabled()>();

        if $z1 == 0 goto label08;

        virtualinvoke r29.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>(32);

     label08:
        $i6 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: int mAccessibilityFocusedView>;

        if $i6 != i0 goto label09;

        virtualinvoke r29.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>(128);

        goto label10;

     label09:
        virtualinvoke r29.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>(64);

     label10:
        return r29;
    }

    public boolean performAction(int, int, android.os.Bundle)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider r0;
        int i0, i1;
        android.os.Bundle r1;
        com.android.inputmethod.keyboard.Key r2;
        boolean $z0;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        r2 = specialinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.keyboard.Key getKeyOf(int)>(i0);

        if r2 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: boolean performActionForKey(com.android.inputmethod.keyboard.Key,int)>(r2, i1);

        return $z0;
    }

    boolean performActionForKey(com.android.inputmethod.keyboard.Key, int)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider r0;
        com.android.inputmethod.keyboard.Key r1;
        int i0, $i1;
        com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate $r2, $r3;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider;

        r1 := @parameter0: com.android.inputmethod.keyboard.Key;

        i0 := @parameter1: int;

        lookupswitch(i0)
        {
            case 16: goto label3;
            case 32: goto label4;
            case 64: goto label1;
            case 128: goto label2;
            default: goto label5;
        };

     label1:
        $i1 = specialinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: int getVirtualViewIdOf(com.android.inputmethod.keyboard.Key)>(r1);

        r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: int mAccessibilityFocusedView> = $i1;

        virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: void sendAccessibilityEventForKey(com.android.inputmethod.keyboard.Key,int)>(r1, 32768);

        return 1;

     label2:
        r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: int mAccessibilityFocusedView> = 2147483647;

        virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: void sendAccessibilityEventForKey(com.android.inputmethod.keyboard.Key,int)>(r1, 65536);

        return 1;

     label3:
        virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: void sendAccessibilityEventForKey(com.android.inputmethod.keyboard.Key,int)>(r1, 1);

        $r3 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate mDelegate>;

        virtualinvoke $r3.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: void performClickOn(com.android.inputmethod.keyboard.Key)>(r1);

        return 1;

     label4:
        virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: void sendAccessibilityEventForKey(com.android.inputmethod.keyboard.Key,int)>(r1, 2);

        $r2 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate mDelegate>;

        virtualinvoke $r2.<com.android.inputmethod.accessibility.KeyboardAccessibilityDelegate: void performLongClickOn(com.android.inputmethod.keyboard.Key)>(r1);

        return 1;

     label5:
        return 0;
    }

    void sendAccessibilityEventForKey(com.android.inputmethod.keyboard.Key, int)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider r0;
        com.android.inputmethod.keyboard.Key r1;
        int i0;
        android.view.accessibility.AccessibilityEvent r2;
        com.android.inputmethod.accessibility.AccessibilityUtils $r3;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider;

        r1 := @parameter0: com.android.inputmethod.keyboard.Key;

        i0 := @parameter1: int;

        r2 = virtualinvoke r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: android.view.accessibility.AccessibilityEvent createAccessibilityEvent(com.android.inputmethod.keyboard.Key,int)>(r1, i0);

        $r3 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.accessibility.AccessibilityUtils mAccessibilityUtils>;

        virtualinvoke $r3.<com.android.inputmethod.accessibility.AccessibilityUtils: void requestSendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r2);

        return;
    }

    private java.lang.String getKeyDescription(com.android.inputmethod.keyboard.Key)
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider r0;
        com.android.inputmethod.keyboard.Key r1;
        android.view.inputmethod.EditorInfo r2;
        boolean z0, $z1;
        com.android.inputmethod.latin.settings.SettingsValues r3;
        java.lang.String r4, $r14;
        com.android.inputmethod.keyboard.Keyboard $r5, $r12;
        com.android.inputmethod.keyboard.KeyboardId $r6;
        com.android.inputmethod.accessibility.AccessibilityUtils $r7, $r13;
        com.android.inputmethod.latin.settings.Settings $r8;
        com.android.inputmethod.keyboard.KeyboardView $r9;
        com.android.inputmethod.accessibility.KeyCodeDescriptionMapper $r10;
        android.content.Context $r11;
        int $i0;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider;

        r1 := @parameter0: com.android.inputmethod.keyboard.Key;

        $r5 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.keyboard.Keyboard mKeyboard>;

        $r6 = $r5.<com.android.inputmethod.keyboard.Keyboard: com.android.inputmethod.keyboard.KeyboardId mId>;

        r2 = $r6.<com.android.inputmethod.keyboard.KeyboardId: android.view.inputmethod.EditorInfo mEditorInfo>;

        $r7 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.accessibility.AccessibilityUtils mAccessibilityUtils>;

        z0 = virtualinvoke $r7.<com.android.inputmethod.accessibility.AccessibilityUtils: boolean shouldObscureInput(android.view.inputmethod.EditorInfo)>(r2);

        $r8 = staticinvoke <com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.Settings getInstance()>();

        r3 = virtualinvoke $r8.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        $r10 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.accessibility.KeyCodeDescriptionMapper mKeyCodeDescriptionMapper>;

        $r9 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.keyboard.KeyboardView mKeyboardView>;

        $r11 = virtualinvoke $r9.<com.android.inputmethod.keyboard.KeyboardView: android.content.Context getContext()>();

        $r12 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.keyboard.Keyboard mKeyboard>;

        r4 = virtualinvoke $r10.<com.android.inputmethod.accessibility.KeyCodeDescriptionMapper: java.lang.String getDescriptionForKey(android.content.Context,com.android.inputmethod.keyboard.Keyboard,com.android.inputmethod.keyboard.Key,boolean)>($r11, $r12, r1, z0);

        $i0 = virtualinvoke r1.<com.android.inputmethod.keyboard.Key: int getCode()>();

        $z1 = virtualinvoke r3.<com.android.inputmethod.latin.settings.SettingsValues: boolean isWordSeparator(int)>($i0);

        if $z1 == 0 goto label1;

        $r13 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.accessibility.AccessibilityUtils mAccessibilityUtils>;

        $r14 = virtualinvoke $r13.<com.android.inputmethod.accessibility.AccessibilityUtils: java.lang.String getAutoCorrectionDescription(java.lang.String,boolean)>(r4, z0);

        return $r14;

     label1:
        return r4;
    }

    private void updateParentLocation()
    {
        com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider r0;
        int[] $r1;
        com.android.inputmethod.keyboard.KeyboardView $r2;

        r0 := @this: com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider;

        $r2 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: com.android.inputmethod.keyboard.KeyboardView mKeyboardView>;

        $r1 = r0.<com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: int[] mParentLocation>;

        virtualinvoke $r2.<com.android.inputmethod.keyboard.KeyboardView: void getLocationOnScreen(int[])>($r1);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: int UNDEFINED> = 2147483647;

        $r0 = class "com/android/inputmethod/accessibility/KeyboardAccessibilityNodeProvider";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.inputmethod.accessibility.KeyboardAccessibilityNodeProvider: java.lang.String TAG> = $r1;

        return;
    }
}
