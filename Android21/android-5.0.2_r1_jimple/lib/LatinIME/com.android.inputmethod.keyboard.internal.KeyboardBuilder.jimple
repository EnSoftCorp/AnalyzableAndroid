public class com.android.inputmethod.keyboard.internal.KeyboardBuilder extends java.lang.Object
{
    private static final java.lang.String BUILDER_TAG;
    private static final boolean DEBUG;
    private static final java.lang.String TAG_KEYBOARD;
    private static final java.lang.String TAG_ROW;
    private static final java.lang.String TAG_GRID_ROWS;
    private static final java.lang.String TAG_KEY;
    private static final java.lang.String TAG_SPACER;
    private static final java.lang.String TAG_INCLUDE;
    private static final java.lang.String TAG_MERGE;
    private static final java.lang.String TAG_SWITCH;
    private static final java.lang.String TAG_CASE;
    private static final java.lang.String TAG_DEFAULT;
    public static final java.lang.String TAG_KEY_STYLE;
    private static final int DEFAULT_KEYBOARD_COLUMNS;
    private static final int DEFAULT_KEYBOARD_ROWS;
    protected final com.android.inputmethod.keyboard.internal.KeyboardParams mParams;
    protected final android.content.Context mContext;
    protected final android.content.res.Resources mResources;
    private int mCurrentY;
    private com.android.inputmethod.keyboard.internal.KeyboardRow mCurrentRow;
    private boolean mLeftEdge;
    private boolean mTopEdge;
    private com.android.inputmethod.keyboard.Key mRightEdgeKey;
    private int mIndent;
    private static final java.lang.String SPACES;

    public void <init>(android.content.Context, com.android.inputmethod.keyboard.internal.KeyboardParams)
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        android.content.Context r1;
        com.android.inputmethod.keyboard.internal.KeyboardParams r2;
        android.content.res.Resources r3;
        int $i0, $i1;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.inputmethod.keyboard.internal.KeyboardParams;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: int mCurrentY> = 0;

        r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardRow mCurrentRow> = null;

        r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.Key mRightEdgeKey> = null;

        r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: android.content.Context mContext> = r1;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: android.content.res.Resources mResources> = r3;

        r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams> = r2;

        $i0 = virtualinvoke r3.<android.content.res.Resources: int getInteger(int)>(2131427360);

        r2.<com.android.inputmethod.keyboard.internal.KeyboardParams: int GRID_WIDTH> = $i0;

        $i1 = virtualinvoke r3.<android.content.res.Resources: int getInteger(int)>(2131427361);

        r2.<com.android.inputmethod.keyboard.internal.KeyboardParams: int GRID_HEIGHT> = $i1;

        return;
    }

    public void setAutoGenerate(com.android.inputmethod.keyboard.internal.KeysCache)
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        com.android.inputmethod.keyboard.internal.KeysCache r1;
        com.android.inputmethod.keyboard.internal.KeyboardParams $r2;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        r1 := @parameter0: com.android.inputmethod.keyboard.internal.KeysCache;

        $r2 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        $r2.<com.android.inputmethod.keyboard.internal.KeyboardParams: com.android.inputmethod.keyboard.internal.KeysCache mKeysCache> = r1;

        return;
    }

    public com.android.inputmethod.keyboard.internal.KeyboardBuilder load(int, com.android.inputmethod.keyboard.KeyboardId)
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        int i0;
        com.android.inputmethod.keyboard.KeyboardId r1;
        android.content.res.XmlResourceParser r2;
        org.xmlpull.v1.XmlPullParserException r3, $r7;
        java.lang.Throwable r4, $r10;
        com.android.inputmethod.keyboard.internal.KeyboardParams $r5;
        android.content.res.Resources $r6;
        java.lang.IllegalArgumentException $r8;
        java.lang.String $r9, $r12;
        java.io.IOException $r11, r14;
        java.lang.RuntimeException $r13;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.inputmethod.keyboard.KeyboardId;

        $r5 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        $r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: com.android.inputmethod.keyboard.KeyboardId mId> = r1;

        $r6 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: android.content.res.Resources mResources>;

        r2 = virtualinvoke $r6.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i0);

     label1:
        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void parseKeyboard(org.xmlpull.v1.XmlPullParser)>(r2);

     label2:
        interfaceinvoke r2.<android.content.res.XmlResourceParser: void close()>();

        goto label7;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("Keyboard.Builder", "keyboard XML parse error", r3);

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke r3.<org.xmlpull.v1.XmlPullParserException: java.lang.String getMessage()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r9, r3);

        throw $r8;

     label4:
        $r11 := @caughtexception;

        r14 = $r11;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("Keyboard.Builder", "keyboard XML parse error", r14);

        $r13 = new java.lang.RuntimeException;

        $r12 = virtualinvoke r14.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r12, r14);

        throw $r13;

     label5:
        $r10 := @caughtexception;

        r4 = $r10;

     label6:
        interfaceinvoke r2.<android.content.res.XmlResourceParser: void close()>();

        throw r4;

     label7:
        return r0;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label6 with label5;
    }

    public void disableTouchPositionCorrectionDataForTest()
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        com.android.inputmethod.keyboard.internal.KeyboardParams $r1;
        com.android.inputmethod.keyboard.internal.TouchPositionCorrection $r2;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        $r1 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        $r2 = $r1.<com.android.inputmethod.keyboard.internal.KeyboardParams: com.android.inputmethod.keyboard.internal.TouchPositionCorrection mTouchPositionCorrection>;

        virtualinvoke $r2.<com.android.inputmethod.keyboard.internal.TouchPositionCorrection: void setEnabled(boolean)>(0);

        return;
    }

    public void setProximityCharsCorrectionEnabled(boolean)
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        boolean z0;
        com.android.inputmethod.keyboard.internal.KeyboardParams $r1;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        $r1.<com.android.inputmethod.keyboard.internal.KeyboardParams: boolean mProximityCharsCorrectionEnabled> = z0;

        return;
    }

    public com.android.inputmethod.keyboard.Keyboard build()
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        com.android.inputmethod.keyboard.Keyboard $r1;
        com.android.inputmethod.keyboard.internal.KeyboardParams $r2;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        $r1 = new com.android.inputmethod.keyboard.Keyboard;

        $r2 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        specialinvoke $r1.<com.android.inputmethod.keyboard.Keyboard: void <init>(com.android.inputmethod.keyboard.internal.KeyboardParams)>($r2);

        return $r1;
    }

    private static java.lang.String spaces(int)
    {
        int i0, $i1;
        java.lang.String $r0, $r1, $r2;

        i0 := @parameter0: int;

        $r0 = "                                             ";

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i0 >= $i1 goto label1;

        $r1 = "                                             ";

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        goto label2;

     label1:
        $r2 = "                                             ";

     label2:
        return $r2;
    }

    private transient void startTag(java.lang.String, java.lang.Object[])
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        java.lang.String r1, $r4, $r7, $r8;
        java.lang.Object[] r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        int $i0, $i1, $i2;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $i0 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: int mIndent>;

        $i1 = $i0 + 1;

        r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: int mIndent> = $i1;

        $i2 = $i1 * 2;

        $r4 = staticinvoke <com.android.inputmethod.keyboard.internal.KeyboardBuilder: java.lang.String spaces(int)>($i2);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r7, r2);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Keyboard.Builder", $r8);

        return;
    }

    private transient void endTag(java.lang.String, java.lang.Object[])
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        java.lang.String r1, $r4, $r7, $r8;
        java.lang.Object[] r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        int $i0, $i1, $i2;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $i0 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: int mIndent>;

        $i1 = $i0 - 1;

        r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: int mIndent> = $i1;

        $i2 = $i0 * 2;

        $r4 = staticinvoke <com.android.inputmethod.keyboard.internal.KeyboardBuilder: java.lang.String spaces(int)>($i2);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r7, r2);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Keyboard.Builder", $r8);

        return;
    }

    private transient void startEndTag(java.lang.String, java.lang.Object[])
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        java.lang.String r1, $r4, $r7, $r8;
        java.lang.Object[] r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        int $i0, $i1, $i2, $i4, $i5;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $i0 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: int mIndent>;

        $i1 = $i0 + 1;

        r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: int mIndent> = $i1;

        $i2 = $i1 * 2;

        $r4 = staticinvoke <com.android.inputmethod.keyboard.internal.KeyboardBuilder: java.lang.String spaces(int)>($i2);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r7, r2);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Keyboard.Builder", $r8);

        $i4 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: int mIndent>;

        $i5 = $i4 - 1;

        r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: int mIndent> = $i5;

        return;
    }

    private void parseKeyboard(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, $i1;
        java.lang.String r2, $r3;
        boolean $z0;
        com.android.inputmethod.latin.utils.XmlParseUtils$IllegalStartTag $r4;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

     label1:
        $i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i1 == 1 goto label4;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 != 2 goto label3;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r3 = "Keyboard";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void parseKeyboardAttributes(org.xmlpull.v1.XmlPullParser)>(r1);

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void startKeyboard()>();

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void parseKeyboardContent(org.xmlpull.v1.XmlPullParser,boolean)>(r1, 0);

        return;

     label2:
        $r4 = new com.android.inputmethod.latin.utils.XmlParseUtils$IllegalStartTag;

        specialinvoke $r4.<com.android.inputmethod.latin.utils.XmlParseUtils$IllegalStartTag: void <init>(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r1, r2, "Keyboard");

        throw $r4;

     label3:
        goto label1;

     label4:
        return;
    }

    private void parseKeyboardAttributes(org.xmlpull.v1.XmlPullParser)
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3, r4;
        com.android.inputmethod.keyboard.internal.KeyboardParams r5;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        java.lang.String[] r6;
        java.lang.Throwable r7, $r22;
        int[] $r8, $r10;
        android.content.Context $r9, $r16;
        android.content.res.Resources $r11, $r19;
        com.android.inputmethod.keyboard.KeyboardId $r12, $r13, $r17;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        com.android.inputmethod.keyboard.internal.KeyVisualAttributes $r14;
        java.util.Locale $r15;
        com.android.inputmethod.keyboard.internal.KeyboardIconsSet $r18;
        com.android.inputmethod.keyboard.internal.KeyboardTextsSet $r20;
        com.android.inputmethod.keyboard.internal.TouchPositionCorrection $r21;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

        $r9 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: android.content.Context mContext>;

        $r8 = <com.android.inputmethod.latin.R$styleable: int[] Keyboard>;

        r3 = virtualinvoke $r9.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r8, 2130771968, 2131623955);

        $r11 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: android.content.res.Resources mResources>;

        $r10 = <com.android.inputmethod.latin.R$styleable: int[] Keyboard_Key>;

        r4 = virtualinvoke $r11.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r10);

     label1:
        r5 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        $r13 = r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: com.android.inputmethod.keyboard.KeyboardId mId>;

        i0 = $r13.<com.android.inputmethod.keyboard.KeyboardId: int mHeight>;

        $r12 = r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: com.android.inputmethod.keyboard.KeyboardId mId>;

        i1 = $r12.<com.android.inputmethod.keyboard.KeyboardId: int mWidth>;

        r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mOccupiedHeight> = i0;

        r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mOccupiedWidth> = i1;

        $f0 = virtualinvoke r3.<android.content.res.TypedArray: float getFraction(int,int,int,float)>(2, i0, i0, 0.0F);

        $i5 = (int) $f0;

        r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mTopPadding> = $i5;

        $f1 = virtualinvoke r3.<android.content.res.TypedArray: float getFraction(int,int,int,float)>(3, i0, i0, 0.0F);

        $i6 = (int) $f1;

        r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mBottomPadding> = $i6;

        $f2 = virtualinvoke r3.<android.content.res.TypedArray: float getFraction(int,int,int,float)>(4, i1, i1, 0.0F);

        $i7 = (int) $f2;

        r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mLeftPadding> = $i7;

        $f3 = virtualinvoke r3.<android.content.res.TypedArray: float getFraction(int,int,int,float)>(5, i1, i1, 0.0F);

        $i8 = (int) $f3;

        r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mRightPadding> = $i8;

        $i9 = r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mOccupiedWidth>;

        $i10 = r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mLeftPadding>;

        $i13 = $i9 - $i10;

        $i12 = r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mRightPadding>;

        i2 = $i13 - $i12;

        r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mBaseWidth> = i2;

        $i11 = i2 / 10;

        $f4 = (float) $i11;

        $f6 = virtualinvoke r4.<android.content.res.TypedArray: float getFraction(int,int,int,float)>(14, i2, i2, $f4);

        $i15 = (int) $f6;

        r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mDefaultKeyWidth> = $i15;

        $f5 = virtualinvoke r3.<android.content.res.TypedArray: float getFraction(int,int,int,float)>(7, i2, i2, 0.0F);

        $i14 = (int) $f5;

        r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mHorizontalGap> = $i14;

        $f7 = virtualinvoke r3.<android.content.res.TypedArray: float getFraction(int,int,int,float)>(8, i0, i0, 0.0F);

        $i18 = (int) $f7;

        r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mVerticalGap> = $i18;

        $i17 = r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mOccupiedHeight>;

        $i16 = r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mTopPadding>;

        $i22 = $i17 - $i16;

        $i21 = r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mBottomPadding>;

        $i20 = $i22 - $i21;

        $i19 = r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mVerticalGap>;

        i3 = $i20 + $i19;

        r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mBaseHeight> = i3;

        $i24 = i3 / 4;

        $f9 = (float) $i24;

        $f8 = staticinvoke <com.android.inputmethod.latin.utils.ResourceUtils: float getDimensionOrFraction(android.content.res.TypedArray,int,int,float)>(r3, 6, i3, $f9);

        $i23 = (int) $f8;

        r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mDefaultRowHeight> = $i23;

        $r14 = staticinvoke <com.android.inputmethod.keyboard.internal.KeyVisualAttributes: com.android.inputmethod.keyboard.internal.KeyVisualAttributes newInstance(android.content.res.TypedArray)>(r4);

        r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: com.android.inputmethod.keyboard.internal.KeyVisualAttributes mKeyVisualAttributes> = $r14;

        $i27 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(9, 0);

        r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mMoreKeysTemplate> = $i27;

        $i26 = virtualinvoke r4.<android.content.res.TypedArray: int getInt(int,int)>(3, 5);

        r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mMaxMoreKeysKeyboardColumn> = $i26;

        $i25 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(0, 0);

        r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mThemeId> = $i25;

        $r18 = r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: com.android.inputmethod.keyboard.internal.KeyboardIconsSet mIconsSet>;

        virtualinvoke $r18.<com.android.inputmethod.keyboard.internal.KeyboardIconsSet: void loadIcons(android.content.res.TypedArray)>(r3);

        $r20 = r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: com.android.inputmethod.keyboard.internal.KeyboardTextsSet mTextsSet>;

        $r17 = r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: com.android.inputmethod.keyboard.KeyboardId mId>;

        $r15 = $r17.<com.android.inputmethod.keyboard.KeyboardId: java.util.Locale mLocale>;

        $r16 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: android.content.Context mContext>;

        virtualinvoke $r20.<com.android.inputmethod.keyboard.internal.KeyboardTextsSet: void setLocale(java.util.Locale,android.content.Context)>($r15, $r16);

        i4 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        if i4 == 0 goto label2;

        $r19 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: android.content.res.Resources mResources>;

        r6 = virtualinvoke $r19.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(i4);

        $r21 = r5.<com.android.inputmethod.keyboard.internal.KeyboardParams: com.android.inputmethod.keyboard.internal.TouchPositionCorrection mTouchPositionCorrection>;

        virtualinvoke $r21.<com.android.inputmethod.keyboard.internal.TouchPositionCorrection: void load(java.lang.String[])>(r6);

     label2:
        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        goto label5;

     label3:
        $r22 := @caughtexception;

        r7 = $r22;

     label4:
        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        throw r7;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void parseKeyboardContent(org.xmlpull.v1.XmlPullParser, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        org.xmlpull.v1.XmlPullParser r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        int i0, $i1;
        java.lang.String r2, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, r15;
        com.android.inputmethod.keyboard.internal.KeyboardRow r3;
        com.android.inputmethod.latin.utils.XmlParseUtils$IllegalEndTag $r8;
        com.android.inputmethod.latin.utils.XmlParseUtils$IllegalStartTag $r14;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        z0 := @parameter1: boolean;

     label01:
        $i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i1 == 1 goto label14;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 != 2 goto label09;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r9 = "Row";

        $z5 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z5 == 0 goto label03;

        r3 = specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardRow parseRowAttributes(org.xmlpull.v1.XmlPullParser)>(r1);

        if z0 != 0 goto label02;

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void startRow(com.android.inputmethod.keyboard.internal.KeyboardRow)>(r3);

     label02:
        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void parseRowContent(org.xmlpull.v1.XmlPullParser,com.android.inputmethod.keyboard.internal.KeyboardRow,boolean)>(r1, r3, z0);

        goto label08;

     label03:
        $r10 = "GridRows";

        $z6 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z6 == 0 goto label04;

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void parseGridRows(org.xmlpull.v1.XmlPullParser,boolean)>(r1, z0);

        goto label08;

     label04:
        $r11 = "include";

        $z7 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z7 == 0 goto label05;

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void parseIncludeKeyboardContent(org.xmlpull.v1.XmlPullParser,boolean)>(r1, z0);

        goto label08;

     label05:
        $r12 = "switch";

        $z8 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z8 == 0 goto label06;

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void parseSwitchKeyboardContent(org.xmlpull.v1.XmlPullParser,boolean)>(r1, z0);

        goto label08;

     label06:
        $r13 = "key-style";

        $z9 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z9 == 0 goto label07;

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void parseKeyStyle(org.xmlpull.v1.XmlPullParser,boolean)>(r1, z0);

        goto label08;

     label07:
        $r14 = new com.android.inputmethod.latin.utils.XmlParseUtils$IllegalStartTag;

        specialinvoke $r14.<com.android.inputmethod.latin.utils.XmlParseUtils$IllegalStartTag: void <init>(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r1, r2, "Row");

        throw $r14;

     label08:
        goto label13;

     label09:
        if i0 != 3 goto label13;

        r15 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r4 = "Keyboard";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z1 == 0 goto label10;

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void endKeyboard()>();

        return;

     label10:
        $r5 = "case";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z2 != 0 goto label11;

        $r6 = "default";

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z3 != 0 goto label11;

        $r7 = "merge";

        $z4 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z4 == 0 goto label12;

     label11:
        return;

     label12:
        $r8 = new com.android.inputmethod.latin.utils.XmlParseUtils$IllegalEndTag;

        specialinvoke $r8.<com.android.inputmethod.latin.utils.XmlParseUtils$IllegalEndTag: void <init>(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r1, r15, "Row");

        throw $r8;

     label13:
        goto label01;

     label14:
        return;
    }

    private com.android.inputmethod.keyboard.internal.KeyboardRow parseRowAttributes(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3;
        com.android.inputmethod.keyboard.internal.KeyboardRow r4, $r8;
        java.lang.Throwable r5, $r13;
        int[] $r6;
        android.content.res.Resources $r7, $r10;
        boolean $z0, $z1;
        int $i0;
        com.android.inputmethod.keyboard.internal.KeyboardParams $r9;
        com.android.inputmethod.latin.utils.XmlParseUtils$IllegalAttribute $r11, $r12;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

        $r7 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: android.content.res.Resources mResources>;

        $r6 = <com.android.inputmethod.latin.R$styleable: int[] Keyboard>;

        r3 = virtualinvoke $r7.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r6);

     label1:
        $z0 = virtualinvoke r3.<android.content.res.TypedArray: boolean hasValue(int)>(7);

        if $z0 == 0 goto label2;

        $r11 = new com.android.inputmethod.latin.utils.XmlParseUtils$IllegalAttribute;

        specialinvoke $r11.<com.android.inputmethod.latin.utils.XmlParseUtils$IllegalAttribute: void <init>(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r1, "Row", "horizontalGap");

        throw $r11;

     label2:
        $z1 = virtualinvoke r3.<android.content.res.TypedArray: boolean hasValue(int)>(8);

        if $z1 == 0 goto label3;

        $r12 = new com.android.inputmethod.latin.utils.XmlParseUtils$IllegalAttribute;

        specialinvoke $r12.<com.android.inputmethod.latin.utils.XmlParseUtils$IllegalAttribute: void <init>(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r1, "Row", "verticalGap");

        throw $r12;

     label3:
        $r8 = new com.android.inputmethod.keyboard.internal.KeyboardRow;

        $r10 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: android.content.res.Resources mResources>;

        $r9 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        $i0 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: int mCurrentY>;

        specialinvoke $r8.<com.android.inputmethod.keyboard.internal.KeyboardRow: void <init>(android.content.res.Resources,com.android.inputmethod.keyboard.internal.KeyboardParams,org.xmlpull.v1.XmlPullParser,int)>($r10, $r9, r1, $i0);

        r4 = $r8;

     label4:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return r4;

     label5:
        $r13 := @caughtexception;

        r5 = $r13;

     label6:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void parseRowContent(org.xmlpull.v1.XmlPullParser, com.android.inputmethod.keyboard.internal.KeyboardRow, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        org.xmlpull.v1.XmlPullParser r1;
        com.android.inputmethod.keyboard.internal.KeyboardRow r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        int i0, $i1;
        java.lang.String r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, r15;
        com.android.inputmethod.latin.utils.XmlParseUtils$IllegalEndTag $r8;
        com.android.inputmethod.latin.utils.XmlParseUtils$IllegalStartTag $r14;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: com.android.inputmethod.keyboard.internal.KeyboardRow;

        z0 := @parameter2: boolean;

     label01:
        $i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i1 == 1 goto label14;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 != 2 goto label08;

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r9 = "Key";

        $z5 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z5 == 0 goto label02;

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void parseKey(org.xmlpull.v1.XmlPullParser,com.android.inputmethod.keyboard.internal.KeyboardRow,boolean)>(r1, r2, z0);

        goto label07;

     label02:
        $r10 = "Spacer";

        $z6 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z6 == 0 goto label03;

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void parseSpacer(org.xmlpull.v1.XmlPullParser,com.android.inputmethod.keyboard.internal.KeyboardRow,boolean)>(r1, r2, z0);

        goto label07;

     label03:
        $r11 = "include";

        $z7 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z7 == 0 goto label04;

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void parseIncludeRowContent(org.xmlpull.v1.XmlPullParser,com.android.inputmethod.keyboard.internal.KeyboardRow,boolean)>(r1, r2, z0);

        goto label07;

     label04:
        $r12 = "switch";

        $z8 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z8 == 0 goto label05;

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void parseSwitchRowContent(org.xmlpull.v1.XmlPullParser,com.android.inputmethod.keyboard.internal.KeyboardRow,boolean)>(r1, r2, z0);

        goto label07;

     label05:
        $r13 = "key-style";

        $z9 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z9 == 0 goto label06;

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void parseKeyStyle(org.xmlpull.v1.XmlPullParser,boolean)>(r1, z0);

        goto label07;

     label06:
        $r14 = new com.android.inputmethod.latin.utils.XmlParseUtils$IllegalStartTag;

        specialinvoke $r14.<com.android.inputmethod.latin.utils.XmlParseUtils$IllegalStartTag: void <init>(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r1, r3, "Row");

        throw $r14;

     label07:
        goto label13;

     label08:
        if i0 != 3 goto label13;

        r15 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r4 = "Row";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z1 == 0 goto label10;

        if z0 != 0 goto label09;

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void endRow(com.android.inputmethod.keyboard.internal.KeyboardRow)>(r2);

     label09:
        return;

     label10:
        $r5 = "case";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z2 != 0 goto label11;

        $r6 = "default";

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z3 != 0 goto label11;

        $r7 = "merge";

        $z4 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z4 == 0 goto label12;

     label11:
        return;

     label12:
        $r8 = new com.android.inputmethod.latin.utils.XmlParseUtils$IllegalEndTag;

        specialinvoke $r8.<com.android.inputmethod.latin.utils.XmlParseUtils$IllegalEndTag: void <init>(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r1, r15, "Row");

        throw $r8;

     label13:
        goto label01;

     label14:
        return;
    }

    private void parseGridRows(org.xmlpull.v1.XmlPullParser, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        org.xmlpull.v1.XmlPullParser r1;
        boolean z0;
        com.android.inputmethod.keyboard.internal.KeyboardRow r2, r5, $r10, $r18;
        android.content.res.TypedArray r3;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21;
        java.lang.String[] r4;
        float f0, $f1, $f2, $f3;
        java.lang.String r6, r7, r8, r29;
        com.android.inputmethod.keyboard.Key r9, $r26;
        android.content.res.Resources $r11, $r14, $r17, $r19;
        com.android.inputmethod.keyboard.internal.KeyboardParams $r12, $r16, $r21, $r24, $r25;
        android.util.AttributeSet $r13;
        int[] $r15;
        java.lang.StringBuilder $r20, $r22, $r23;
        com.android.inputmethod.latin.utils.XmlParseUtils$ParseException $r27, $r28;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label01;

        staticinvoke <com.android.inputmethod.latin.utils.XmlParseUtils: void checkEndTag(java.lang.String,org.xmlpull.v1.XmlPullParser)>("GridRows", r1);

        return;

     label01:
        $r10 = new com.android.inputmethod.keyboard.internal.KeyboardRow;

        $r11 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: android.content.res.Resources mResources>;

        $r12 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        $i14 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: int mCurrentY>;

        specialinvoke $r10.<com.android.inputmethod.keyboard.internal.KeyboardRow: void <init>(android.content.res.Resources,com.android.inputmethod.keyboard.internal.KeyboardParams,org.xmlpull.v1.XmlPullParser,int)>($r11, $r12, r1, $i14);

        r2 = $r10;

        $r14 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: android.content.res.Resources mResources>;

        $r13 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

        $r15 = <com.android.inputmethod.latin.R$styleable: int[] Keyboard_GridRows>;

        r3 = virtualinvoke $r14.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r13, $r15);

        i0 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

        i1 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        if i0 != 0 goto label02;

        if i1 != 0 goto label02;

        $r27 = new com.android.inputmethod.latin.utils.XmlParseUtils$ParseException;

        specialinvoke $r27.<com.android.inputmethod.latin.utils.XmlParseUtils$ParseException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser)>("Missing codesArray or textsArray attributes", r1);

        throw $r27;

     label02:
        if i0 == 0 goto label03;

        if i1 == 0 goto label03;

        $r28 = new com.android.inputmethod.latin.utils.XmlParseUtils$ParseException;

        specialinvoke $r28.<com.android.inputmethod.latin.utils.XmlParseUtils$ParseException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser)>("Both codesArray and textsArray attributes specifed", r1);

        throw $r28;

     label03:
        $r17 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: android.content.res.Resources mResources>;

        if i0 == 0 goto label04;

        $i20 = i0;

        goto label05;

     label04:
        $i20 = i1;

     label05:
        r4 = virtualinvoke $r17.<android.content.res.Resources: java.lang.String[] getStringArray(int)>($i20);

        i2 = lengthof r4;

        f0 = virtualinvoke r2.<com.android.inputmethod.keyboard.internal.KeyboardRow: float getKeyWidth(android.content.res.TypedArray,float)>(null, 0.0F);

        $r16 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        $i15 = $r16.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mOccupiedWidth>;

        $f2 = (float) $i15;

        $f1 = $f2 / f0;

        i3 = (int) $f1;

        i4 = 0;

     label06:
        if i4 >= i2 goto label14;

        $r18 = new com.android.inputmethod.keyboard.internal.KeyboardRow;

        $r19 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: android.content.res.Resources mResources>;

        $r21 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        $i16 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: int mCurrentY>;

        specialinvoke $r18.<com.android.inputmethod.keyboard.internal.KeyboardRow: void <init>(android.content.res.Resources,com.android.inputmethod.keyboard.internal.KeyboardParams,org.xmlpull.v1.XmlPullParser,int)>($r19, $r21, r1, $i16);

        r5 = $r18;

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void startRow(com.android.inputmethod.keyboard.internal.KeyboardRow)>(r5);

        i5 = 0;

     label07:
        if i5 >= i3 goto label13;

        i6 = i4 + i5;

        if i6 < i2 goto label08;

        goto label13;

     label08:
        if i0 == 0 goto label09;

        r8 = r4[i6];

        r6 = staticinvoke <com.android.inputmethod.keyboard.internal.CodesArrayParser: java.lang.String parseLabel(java.lang.String)>(r8);

        i7 = staticinvoke <com.android.inputmethod.keyboard.internal.CodesArrayParser: int parseCode(java.lang.String)>(r8);

        r7 = staticinvoke <com.android.inputmethod.keyboard.internal.CodesArrayParser: java.lang.String parseOutputText(java.lang.String)>(r8);

        i8 = staticinvoke <com.android.inputmethod.keyboard.internal.CodesArrayParser: int getMinSupportSdkVersion(java.lang.String)>(r8);

        goto label10;

     label09:
        r29 = r4[i6];

        r6 = r29;

        i7 = -4;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        r7 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        i8 = 0;

     label10:
        $i17 = <android.os.Build$VERSION: int SDK_INT>;

        if $i17 >= i8 goto label11;

        goto label12;

     label11:
        i21 = virtualinvoke r5.<com.android.inputmethod.keyboard.internal.KeyboardRow: int getDefaultKeyLabelFlags()>();

        i10 = virtualinvoke r5.<com.android.inputmethod.keyboard.internal.KeyboardRow: int getDefaultBackgroundType()>();

        $f3 = virtualinvoke r5.<com.android.inputmethod.keyboard.internal.KeyboardRow: float getKeyX(android.content.res.TypedArray)>(null);

        i9 = (int) $f3;

        i12 = virtualinvoke r5.<com.android.inputmethod.keyboard.internal.KeyboardRow: int getKeyY()>();

        i11 = (int) f0;

        i13 = virtualinvoke r5.<com.android.inputmethod.keyboard.internal.KeyboardRow: int getRowHeight()>();

        $r26 = new com.android.inputmethod.keyboard.Key;

        $r25 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        $i18 = $r25.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mHorizontalGap>;

        $r24 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        $i19 = $r24.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mVerticalGap>;

        specialinvoke $r26.<com.android.inputmethod.keyboard.Key: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String,int,int,int,int,int,int,int,int)>(r6, 0, i7, r7, null, i21, i10, i9, i12, i11, i13, $i18, $i19);

        r9 = $r26;

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void endKey(com.android.inputmethod.keyboard.Key)>(r9);

        virtualinvoke r5.<com.android.inputmethod.keyboard.internal.KeyboardRow: void advanceXPos(float)>(f0);

     label12:
        i5 = i5 + 1;

        goto label07;

     label13:
        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void endRow(com.android.inputmethod.keyboard.internal.KeyboardRow)>(r5);

        i4 = i4 + i3;

        goto label06;

     label14:
        staticinvoke <com.android.inputmethod.latin.utils.XmlParseUtils: void checkEndTag(java.lang.String,org.xmlpull.v1.XmlPullParser)>("GridRows", r1);

        return;
    }

    private void parseKey(org.xmlpull.v1.XmlPullParser, com.android.inputmethod.keyboard.internal.KeyboardRow, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        org.xmlpull.v1.XmlPullParser r1;
        com.android.inputmethod.keyboard.internal.KeyboardRow r2;
        boolean z0, $z1;
        android.content.res.TypedArray r3;
        com.android.inputmethod.keyboard.internal.KeyStyle r4;
        java.lang.String r5;
        com.android.inputmethod.keyboard.Key r6, $r12;
        android.content.res.Resources $r7;
        android.util.AttributeSet $r8;
        int[] $r9;
        com.android.inputmethod.keyboard.internal.KeyboardParams $r10, $r14;
        com.android.inputmethod.keyboard.internal.KeyStylesSet $r11;
        com.android.inputmethod.latin.utils.XmlParseUtils$ParseException $r13;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: com.android.inputmethod.keyboard.internal.KeyboardRow;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        staticinvoke <com.android.inputmethod.latin.utils.XmlParseUtils: void checkEndTag(java.lang.String,org.xmlpull.v1.XmlPullParser)>("Key", r1);

        return;

     label1:
        $r7 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: android.content.res.Resources mResources>;

        $r8 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

        $r9 = <com.android.inputmethod.latin.R$styleable: int[] Keyboard_Key>;

        r3 = virtualinvoke $r7.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r8, $r9);

        $r10 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        $r11 = $r10.<com.android.inputmethod.keyboard.internal.KeyboardParams: com.android.inputmethod.keyboard.internal.KeyStylesSet mKeyStyles>;

        r4 = virtualinvoke $r11.<com.android.inputmethod.keyboard.internal.KeyStylesSet: com.android.inputmethod.keyboard.internal.KeyStyle getKeyStyle(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)>(r3, r1);

        r5 = virtualinvoke r4.<com.android.inputmethod.keyboard.internal.KeyStyle: java.lang.String getString(android.content.res.TypedArray,int)>(r3, 6);

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z1 == 0 goto label2;

        $r13 = new com.android.inputmethod.latin.utils.XmlParseUtils$ParseException;

        specialinvoke $r13.<com.android.inputmethod.latin.utils.XmlParseUtils$ParseException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser)>("Empty keySpec", r1);

        throw $r13;

     label2:
        $r12 = new com.android.inputmethod.keyboard.Key;

        $r14 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        specialinvoke $r12.<com.android.inputmethod.keyboard.Key: void <init>(java.lang.String,android.content.res.TypedArray,com.android.inputmethod.keyboard.internal.KeyStyle,com.android.inputmethod.keyboard.internal.KeyboardParams,com.android.inputmethod.keyboard.internal.KeyboardRow)>(r5, r3, r4, $r14, r2);

        r6 = $r12;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        staticinvoke <com.android.inputmethod.latin.utils.XmlParseUtils: void checkEndTag(java.lang.String,org.xmlpull.v1.XmlPullParser)>("Key", r1);

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void endKey(com.android.inputmethod.keyboard.Key)>(r6);

        return;
    }

    private void parseSpacer(org.xmlpull.v1.XmlPullParser, com.android.inputmethod.keyboard.internal.KeyboardRow, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        org.xmlpull.v1.XmlPullParser r1;
        com.android.inputmethod.keyboard.internal.KeyboardRow r2;
        boolean z0;
        android.content.res.TypedArray r3;
        com.android.inputmethod.keyboard.internal.KeyStyle r4;
        com.android.inputmethod.keyboard.Key$Spacer r5, $r11;
        android.content.res.Resources $r6;
        android.util.AttributeSet $r7;
        int[] $r8;
        com.android.inputmethod.keyboard.internal.KeyboardParams $r9, $r12;
        com.android.inputmethod.keyboard.internal.KeyStylesSet $r10;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: com.android.inputmethod.keyboard.internal.KeyboardRow;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        staticinvoke <com.android.inputmethod.latin.utils.XmlParseUtils: void checkEndTag(java.lang.String,org.xmlpull.v1.XmlPullParser)>("Spacer", r1);

        return;

     label1:
        $r6 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: android.content.res.Resources mResources>;

        $r7 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

        $r8 = <com.android.inputmethod.latin.R$styleable: int[] Keyboard_Key>;

        r3 = virtualinvoke $r6.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>($r7, $r8);

        $r9 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        $r10 = $r9.<com.android.inputmethod.keyboard.internal.KeyboardParams: com.android.inputmethod.keyboard.internal.KeyStylesSet mKeyStyles>;

        r4 = virtualinvoke $r10.<com.android.inputmethod.keyboard.internal.KeyStylesSet: com.android.inputmethod.keyboard.internal.KeyStyle getKeyStyle(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)>(r3, r1);

        $r11 = new com.android.inputmethod.keyboard.Key$Spacer;

        $r12 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        specialinvoke $r11.<com.android.inputmethod.keyboard.Key$Spacer: void <init>(android.content.res.TypedArray,com.android.inputmethod.keyboard.internal.KeyStyle,com.android.inputmethod.keyboard.internal.KeyboardParams,com.android.inputmethod.keyboard.internal.KeyboardRow)>(r3, r4, $r12, r2);

        r5 = $r11;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        staticinvoke <com.android.inputmethod.latin.utils.XmlParseUtils: void checkEndTag(java.lang.String,org.xmlpull.v1.XmlPullParser)>("Spacer", r1);

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void endKey(com.android.inputmethod.keyboard.Key)>(r5);

        return;
    }

    private void parseIncludeKeyboardContent(org.xmlpull.v1.XmlPullParser, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        org.xmlpull.v1.XmlPullParser r1;
        boolean z0;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void parseIncludeInternal(org.xmlpull.v1.XmlPullParser,com.android.inputmethod.keyboard.internal.KeyboardRow,boolean)>(r1, null, z0);

        return;
    }

    private void parseIncludeRowContent(org.xmlpull.v1.XmlPullParser, com.android.inputmethod.keyboard.internal.KeyboardRow, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        org.xmlpull.v1.XmlPullParser r1;
        com.android.inputmethod.keyboard.internal.KeyboardRow r2;
        boolean z0;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: com.android.inputmethod.keyboard.internal.KeyboardRow;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void parseIncludeInternal(org.xmlpull.v1.XmlPullParser,com.android.inputmethod.keyboard.internal.KeyboardRow,boolean)>(r1, r2, z0);

        return;
    }

    private void parseIncludeInternal(org.xmlpull.v1.XmlPullParser, com.android.inputmethod.keyboard.internal.KeyboardRow, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        org.xmlpull.v1.XmlPullParser r1;
        com.android.inputmethod.keyboard.internal.KeyboardRow r2;
        boolean z0;
        android.util.AttributeSet r3;
        android.content.res.TypedArray r4, r5;
        java.lang.Throwable r6, r7, $r13, $r14;
        int[] $r8, $r10;
        android.content.res.Resources $r9, $r11, $r12;
        float $f0;
        int i0;
        android.content.res.XmlResourceParser r15;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: com.android.inputmethod.keyboard.internal.KeyboardRow;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label01;

        staticinvoke <com.android.inputmethod.latin.utils.XmlParseUtils: void checkEndTag(java.lang.String,org.xmlpull.v1.XmlPullParser)>("include", r1);

        return;

     label01:
        r3 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

        $r9 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: android.content.res.Resources mResources>;

        $r8 = <com.android.inputmethod.latin.R$styleable: int[] Keyboard_Include>;

        r4 = virtualinvoke $r9.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r3, $r8);

        $r11 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: android.content.res.Resources mResources>;

        $r10 = <com.android.inputmethod.latin.R$styleable: int[] Keyboard_Key>;

        r5 = virtualinvoke $r11.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r3, $r10);

     label02:
        staticinvoke <com.android.inputmethod.latin.utils.XmlParseUtils: void checkAttributeExists(android.content.res.TypedArray,int,java.lang.String,java.lang.String,org.xmlpull.v1.XmlPullParser)>(r4, 0, "keyboardLayout", "include", r1);

        i0 = virtualinvoke r4.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

        if r2 == null goto label03;

        $f0 = virtualinvoke r2.<com.android.inputmethod.keyboard.internal.KeyboardRow: float getKeyX(android.content.res.TypedArray)>(r5);

        virtualinvoke r2.<com.android.inputmethod.keyboard.internal.KeyboardRow: void setXPos(float)>($f0);

        virtualinvoke r2.<com.android.inputmethod.keyboard.internal.KeyboardRow: void pushRowAttributes(android.content.res.TypedArray)>(r5);

     label03:
        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        goto label06;

     label04:
        $r13 := @caughtexception;

        r6 = $r13;

     label05:
        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        throw r6;

     label06:
        staticinvoke <com.android.inputmethod.latin.utils.XmlParseUtils: void checkEndTag(java.lang.String,org.xmlpull.v1.XmlPullParser)>("include", r1);

        $r12 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: android.content.res.Resources mResources>;

        r15 = virtualinvoke $r12.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i0);

     label07:
        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void parseMerge(org.xmlpull.v1.XmlPullParser,com.android.inputmethod.keyboard.internal.KeyboardRow,boolean)>(r15, r2, z0);

     label08:
        if r2 == null goto label09;

        virtualinvoke r2.<com.android.inputmethod.keyboard.internal.KeyboardRow: void popRowAttributes()>();

     label09:
        interfaceinvoke r15.<android.content.res.XmlResourceParser: void close()>();

        goto label13;

     label10:
        $r14 := @caughtexception;

        r7 = $r14;

     label11:
        if r2 == null goto label12;

        virtualinvoke r2.<com.android.inputmethod.keyboard.internal.KeyboardRow: void popRowAttributes()>();

     label12:
        interfaceinvoke r15.<android.content.res.XmlResourceParser: void close()>();

        throw r7;

     label13:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private void parseMerge(org.xmlpull.v1.XmlPullParser, com.android.inputmethod.keyboard.internal.KeyboardRow, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        org.xmlpull.v1.XmlPullParser r1;
        com.android.inputmethod.keyboard.internal.KeyboardRow r2;
        boolean z0, $z1;
        int i0, $i1;
        java.lang.String r3, $r4;
        com.android.inputmethod.latin.utils.XmlParseUtils$ParseException $r5;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: com.android.inputmethod.keyboard.internal.KeyboardRow;

        z0 := @parameter2: boolean;

     label1:
        $i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i1 == 1 goto label6;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 != 2 goto label5;

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r4 = "merge";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label4;

        if r2 != null goto label2;

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void parseKeyboardContent(org.xmlpull.v1.XmlPullParser,boolean)>(r1, z0);

        goto label3;

     label2:
        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void parseRowContent(org.xmlpull.v1.XmlPullParser,com.android.inputmethod.keyboard.internal.KeyboardRow,boolean)>(r1, r2, z0);

     label3:
        return;

     label4:
        $r5 = new com.android.inputmethod.latin.utils.XmlParseUtils$ParseException;

        specialinvoke $r5.<com.android.inputmethod.latin.utils.XmlParseUtils$ParseException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser)>("Included keyboard layout must have <merge> root element", r1);

        throw $r5;

     label5:
        goto label1;

     label6:
        return;
    }

    private void parseSwitchKeyboardContent(org.xmlpull.v1.XmlPullParser, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        org.xmlpull.v1.XmlPullParser r1;
        boolean z0;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void parseSwitchInternal(org.xmlpull.v1.XmlPullParser,com.android.inputmethod.keyboard.internal.KeyboardRow,boolean)>(r1, null, z0);

        return;
    }

    private void parseSwitchRowContent(org.xmlpull.v1.XmlPullParser, com.android.inputmethod.keyboard.internal.KeyboardRow, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        org.xmlpull.v1.XmlPullParser r1;
        com.android.inputmethod.keyboard.internal.KeyboardRow r2;
        boolean z0;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: com.android.inputmethod.keyboard.internal.KeyboardRow;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void parseSwitchInternal(org.xmlpull.v1.XmlPullParser,com.android.inputmethod.keyboard.internal.KeyboardRow,boolean)>(r1, r2, z0);

        return;
    }

    private void parseSwitchInternal(org.xmlpull.v1.XmlPullParser, com.android.inputmethod.keyboard.internal.KeyboardRow, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        org.xmlpull.v1.XmlPullParser r1;
        com.android.inputmethod.keyboard.internal.KeyboardRow r2;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        int i0, $i1;
        java.lang.String r3, $r4, $r6, $r7, r9;
        com.android.inputmethod.latin.utils.XmlParseUtils$IllegalEndTag $r5;
        com.android.inputmethod.latin.utils.XmlParseUtils$IllegalStartTag $r8;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: com.android.inputmethod.keyboard.internal.KeyboardRow;

        z0 := @parameter2: boolean;

        z1 = 0;

     label01:
        $i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i1 == 1 goto label12;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i0 != 2 goto label09;

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r6 = "case";

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z3 == 0 goto label04;

        if z1 == 0 goto label02;

        $z8 = 1;

        goto label03;

     label02:
        $z8 = z0;

     label03:
        $z6 = specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: boolean parseCase(org.xmlpull.v1.XmlPullParser,com.android.inputmethod.keyboard.internal.KeyboardRow,boolean)>(r1, r2, $z8);

        z1 = z1 | $z6;

        goto label08;

     label04:
        $r7 = "default";

        $z4 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z4 == 0 goto label07;

        if z1 == 0 goto label05;

        $z7 = 1;

        goto label06;

     label05:
        $z7 = z0;

     label06:
        $z5 = specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: boolean parseDefault(org.xmlpull.v1.XmlPullParser,com.android.inputmethod.keyboard.internal.KeyboardRow,boolean)>(r1, r2, $z7);

        z1 = z1 | $z5;

        goto label08;

     label07:
        $r8 = new com.android.inputmethod.latin.utils.XmlParseUtils$IllegalStartTag;

        specialinvoke $r8.<com.android.inputmethod.latin.utils.XmlParseUtils$IllegalStartTag: void <init>(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r1, r3, "switch");

        throw $r8;

     label08:
        goto label11;

     label09:
        if i0 != 3 goto label11;

        r9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r4 = "switch";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z2 == 0 goto label10;

        return;

     label10:
        $r5 = new com.android.inputmethod.latin.utils.XmlParseUtils$IllegalEndTag;

        specialinvoke $r5.<com.android.inputmethod.latin.utils.XmlParseUtils$IllegalEndTag: void <init>(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)>(r1, r9, "switch");

        throw $r5;

     label11:
        goto label01;

     label12:
        return;
    }

    private boolean parseCase(org.xmlpull.v1.XmlPullParser, com.android.inputmethod.keyboard.internal.KeyboardRow, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        org.xmlpull.v1.XmlPullParser r1;
        com.android.inputmethod.keyboard.internal.KeyboardRow r2;
        boolean z0, z1, $z2, $z3;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: com.android.inputmethod.keyboard.internal.KeyboardRow;

        z0 := @parameter2: boolean;

        z1 = specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: boolean parseCaseCondition(org.xmlpull.v1.XmlPullParser)>(r1);

        if r2 != null goto label3;

        if z1 == 0 goto label1;

        $z3 = z0;

        goto label2;

     label1:
        $z3 = 1;

     label2:
        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void parseKeyboardContent(org.xmlpull.v1.XmlPullParser,boolean)>(r1, $z3);

        goto label6;

     label3:
        if z1 == 0 goto label4;

        $z2 = z0;

        goto label5;

     label4:
        $z2 = 1;

     label5:
        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void parseRowContent(org.xmlpull.v1.XmlPullParser,com.android.inputmethod.keyboard.internal.KeyboardRow,boolean)>(r1, r2, $z2);

     label6:
        return z1;
    }

    private boolean parseCaseCondition(org.xmlpull.v1.XmlPullParser)
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        org.xmlpull.v1.XmlPullParser r1;
        com.android.inputmethod.keyboard.KeyboardId r2;
        android.util.AttributeSet r3;
        android.content.res.TypedArray r4;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13, z14, z15, z16, z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25;
        java.lang.Throwable r5, $r22;
        com.android.inputmethod.keyboard.internal.KeyboardParams $r6, $r11, $r12, $r16;
        android.content.res.Resources $r7;
        int[] $r8;
        android.view.inputmethod.InputMethodSubtype $r9;
        java.lang.String $r10, $r13, $r14, $r15, $r17, $r21, $r23;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.util.Locale $r18, $r20, $r24;
        com.android.inputmethod.keyboard.internal.KeyboardIconsSet $r19;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r6 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        r2 = $r6.<com.android.inputmethod.keyboard.internal.KeyboardParams: com.android.inputmethod.keyboard.KeyboardId mId>;

        if r2 != null goto label1;

        return 1;

     label1:
        r3 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

        $r7 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: android.content.res.Resources mResources>;

        $r8 = <com.android.inputmethod.latin.R$styleable: int[] Keyboard_Case>;

        r4 = virtualinvoke $r7.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r3, $r8);

     label2:
        $r9 = r2.<com.android.inputmethod.keyboard.KeyboardId: android.view.inputmethod.InputMethodSubtype mSubtype>;

        $r10 = staticinvoke <com.android.inputmethod.latin.utils.SubtypeLocaleUtils: java.lang.String getKeyboardLayoutSetName(android.view.inputmethod.InputMethodSubtype)>($r9);

        z0 = staticinvoke <com.android.inputmethod.keyboard.internal.KeyboardBuilder: boolean matchString(android.content.res.TypedArray,int,java.lang.String)>(r4, 0, $r10);

        $i0 = r2.<com.android.inputmethod.keyboard.KeyboardId: int mElementId>;

        $i1 = r2.<com.android.inputmethod.keyboard.KeyboardId: int mElementId>;

        $r13 = staticinvoke <com.android.inputmethod.keyboard.KeyboardId: java.lang.String elementIdToName(int)>($i1);

        z1 = staticinvoke <com.android.inputmethod.keyboard.internal.KeyboardBuilder: boolean matchTypedValue(android.content.res.TypedArray,int,int,java.lang.String)>(r4, 1, $i0, $r13);

        $r11 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        $i2 = $r11.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mThemeId>;

        $r12 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        $i3 = $r12.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mThemeId>;

        $r14 = staticinvoke <com.android.inputmethod.keyboard.KeyboardTheme: java.lang.String getKeyboardThemeName(int)>($i3);

        z2 = staticinvoke <com.android.inputmethod.keyboard.internal.KeyboardBuilder: boolean matchTypedValue(android.content.res.TypedArray,int,int,java.lang.String)>(r4, 2, $i2, $r14);

        $i4 = r2.<com.android.inputmethod.keyboard.KeyboardId: int mMode>;

        $i5 = r2.<com.android.inputmethod.keyboard.KeyboardId: int mMode>;

        $r15 = staticinvoke <com.android.inputmethod.keyboard.KeyboardId: java.lang.String modeName(int)>($i5);

        z3 = staticinvoke <com.android.inputmethod.keyboard.internal.KeyboardBuilder: boolean matchTypedValue(android.content.res.TypedArray,int,int,java.lang.String)>(r4, 3, $i4, $r15);

        $z18 = virtualinvoke r2.<com.android.inputmethod.keyboard.KeyboardId: boolean navigateNext()>();

        z4 = staticinvoke <com.android.inputmethod.keyboard.internal.KeyboardBuilder: boolean matchBoolean(android.content.res.TypedArray,int,boolean)>(r4, 4, $z18);

        $z19 = virtualinvoke r2.<com.android.inputmethod.keyboard.KeyboardId: boolean navigatePrevious()>();

        z5 = staticinvoke <com.android.inputmethod.keyboard.internal.KeyboardBuilder: boolean matchBoolean(android.content.res.TypedArray,int,boolean)>(r4, 5, $z19);

        $z21 = virtualinvoke r2.<com.android.inputmethod.keyboard.KeyboardId: boolean passwordInput()>();

        z6 = staticinvoke <com.android.inputmethod.keyboard.internal.KeyboardBuilder: boolean matchBoolean(android.content.res.TypedArray,int,boolean)>(r4, 6, $z21);

        $z20 = r2.<com.android.inputmethod.keyboard.KeyboardId: boolean mClobberSettingsKey>;

        z7 = staticinvoke <com.android.inputmethod.keyboard.internal.KeyboardBuilder: boolean matchBoolean(android.content.res.TypedArray,int,boolean)>(r4, 7, $z20);

        $z23 = r2.<com.android.inputmethod.keyboard.KeyboardId: boolean mHasShortcutKey>;

        z8 = staticinvoke <com.android.inputmethod.keyboard.internal.KeyboardBuilder: boolean matchBoolean(android.content.res.TypedArray,int,boolean)>(r4, 8, $z23);

        $z22 = r2.<com.android.inputmethod.keyboard.KeyboardId: boolean mLanguageSwitchKeyEnabled>;

        z9 = staticinvoke <com.android.inputmethod.keyboard.internal.KeyboardBuilder: boolean matchBoolean(android.content.res.TypedArray,int,boolean)>(r4, 9, $z22);

        $z24 = virtualinvoke r2.<com.android.inputmethod.keyboard.KeyboardId: boolean isMultiLine()>();

        z10 = staticinvoke <com.android.inputmethod.keyboard.internal.KeyboardBuilder: boolean matchBoolean(android.content.res.TypedArray,int,boolean)>(r4, 10, $z24);

        $i6 = virtualinvoke r2.<com.android.inputmethod.keyboard.KeyboardId: int imeAction()>();

        z12 = staticinvoke <com.android.inputmethod.keyboard.internal.KeyboardBuilder: boolean matchInteger(android.content.res.TypedArray,int,int)>(r4, 11, $i6);

        $r16 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        $r19 = $r16.<com.android.inputmethod.keyboard.internal.KeyboardParams: com.android.inputmethod.keyboard.internal.KeyboardIconsSet mIconsSet>;

        z11 = staticinvoke <com.android.inputmethod.keyboard.internal.KeyboardBuilder: boolean isIconDefined(android.content.res.TypedArray,int,com.android.inputmethod.keyboard.internal.KeyboardIconsSet)>(r4, 12, $r19);

        $r20 = r2.<com.android.inputmethod.keyboard.KeyboardId: java.util.Locale mLocale>;

        $r17 = virtualinvoke $r20.<java.util.Locale: java.lang.String toString()>();

        z14 = staticinvoke <com.android.inputmethod.keyboard.internal.KeyboardBuilder: boolean matchString(android.content.res.TypedArray,int,java.lang.String)>(r4, 13, $r17);

        $r18 = r2.<com.android.inputmethod.keyboard.KeyboardId: java.util.Locale mLocale>;

        $r23 = virtualinvoke $r18.<java.util.Locale: java.lang.String getLanguage()>();

        z13 = staticinvoke <com.android.inputmethod.keyboard.internal.KeyboardBuilder: boolean matchString(android.content.res.TypedArray,int,java.lang.String)>(r4, 14, $r23);

        $r24 = r2.<com.android.inputmethod.keyboard.KeyboardId: java.util.Locale mLocale>;

        $r21 = virtualinvoke $r24.<java.util.Locale: java.lang.String getCountry()>();

        z16 = staticinvoke <com.android.inputmethod.keyboard.internal.KeyboardBuilder: boolean matchString(android.content.res.TypedArray,int,java.lang.String)>(r4, 15, $r21);

        if z0 == 0 goto label3;

        if z1 == 0 goto label3;

        if z2 == 0 goto label3;

        if z3 == 0 goto label3;

        if z4 == 0 goto label3;

        if z5 == 0 goto label3;

        if z6 == 0 goto label3;

        if z7 == 0 goto label3;

        if z8 == 0 goto label3;

        if z9 == 0 goto label3;

        if z10 == 0 goto label3;

        if z12 == 0 goto label3;

        if z11 == 0 goto label3;

        if z14 == 0 goto label3;

        if z13 == 0 goto label3;

        if z16 == 0 goto label3;

        $z25 = 1;

        goto label4;

     label3:
        $z25 = 0;

     label4:
        z15 = $z25;

        z17 = z15;

     label5:
        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        return z17;

     label6:
        $r22 := @caughtexception;

        r5 = $r22;

     label7:
        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private static boolean matchInteger(android.content.res.TypedArray, int, int)
    {
        android.content.res.TypedArray r0;
        int i0, i1, $i2;
        boolean $z0, $z1;

        r0 := @parameter0: android.content.res.TypedArray;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = virtualinvoke r0.<android.content.res.TypedArray: boolean hasValue(int)>(i0);

        if $z0 == 0 goto label1;

        $i2 = virtualinvoke r0.<android.content.res.TypedArray: int getInt(int,int)>(i0, 0);

        if $i2 != i1 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private static boolean matchBoolean(android.content.res.TypedArray, int, boolean)
    {
        android.content.res.TypedArray r0;
        int i0;
        boolean z0, $z1, $z2, $z3;

        r0 := @parameter0: android.content.res.TypedArray;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $z1 = virtualinvoke r0.<android.content.res.TypedArray: boolean hasValue(int)>(i0);

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r0.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i0, 0);

        if $z2 != z0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    private static boolean matchString(android.content.res.TypedArray, int, java.lang.String)
    {
        android.content.res.TypedArray r0;
        int i0;
        java.lang.String r1, $r2;
        boolean $z0, $z1, $z2;
        java.lang.String[] $r3;

        r0 := @parameter0: android.content.res.TypedArray;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $z0 = virtualinvoke r0.<android.content.res.TypedArray: boolean hasValue(int)>(i0);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<android.content.res.TypedArray: java.lang.String getString(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\|");

        $z1 = staticinvoke <com.android.inputmethod.latin.utils.StringUtils: boolean containsInArray(java.lang.String,java.lang.String[])>(r1, $r3);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private static boolean matchTypedValue(android.content.res.TypedArray, int, int, java.lang.String)
    {
        android.content.res.TypedArray r0;
        int i0, i1, $i2;
        java.lang.String r1, $r3;
        android.util.TypedValue r2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String[] $r4;

        r0 := @parameter0: android.content.res.TypedArray;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 = virtualinvoke r0.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(i0);

        if r2 != null goto label1;

        return 1;

     label1:
        $z0 = staticinvoke <com.android.inputmethod.latin.utils.ResourceUtils: boolean isIntegerValue(android.util.TypedValue)>(r2);

        if $z0 == 0 goto label4;

        $i2 = virtualinvoke r0.<android.content.res.TypedArray: int getInt(int,int)>(i0, 0);

        if i1 != $i2 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;

     label4:
        $z1 = staticinvoke <com.android.inputmethod.latin.utils.ResourceUtils: boolean isStringValue(android.util.TypedValue)>(r2);

        if $z1 == 0 goto label5;

        $r3 = virtualinvoke r0.<android.content.res.TypedArray: java.lang.String getString(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\|");

        $z2 = staticinvoke <com.android.inputmethod.latin.utils.StringUtils: boolean containsInArray(java.lang.String,java.lang.String[])>(r1, $r4);

        return $z2;

     label5:
        return 0;
    }

    private static boolean isIconDefined(android.content.res.TypedArray, int, com.android.inputmethod.keyboard.internal.KeyboardIconsSet)
    {
        android.content.res.TypedArray r0;
        int i0, i1;
        com.android.inputmethod.keyboard.internal.KeyboardIconsSet r1;
        java.lang.String r2;
        boolean $z0, $z1;
        android.graphics.drawable.Drawable $r3;

        r0 := @parameter0: android.content.res.TypedArray;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.inputmethod.keyboard.internal.KeyboardIconsSet;

        $z0 = virtualinvoke r0.<android.content.res.TypedArray: boolean hasValue(int)>(i0);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        r2 = virtualinvoke r0.<android.content.res.TypedArray: java.lang.String getString(int)>(i0);

        i1 = staticinvoke <com.android.inputmethod.keyboard.internal.KeyboardIconsSet: int getIconId(java.lang.String)>(r2);

        $r3 = virtualinvoke r1.<com.android.inputmethod.keyboard.internal.KeyboardIconsSet: android.graphics.drawable.Drawable getIconDrawable(int)>(i1);

        if $r3 == null goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private boolean parseDefault(org.xmlpull.v1.XmlPullParser, com.android.inputmethod.keyboard.internal.KeyboardRow, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        org.xmlpull.v1.XmlPullParser r1;
        com.android.inputmethod.keyboard.internal.KeyboardRow r2;
        boolean z0;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: com.android.inputmethod.keyboard.internal.KeyboardRow;

        z0 := @parameter2: boolean;

        if r2 != null goto label1;

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void parseKeyboardContent(org.xmlpull.v1.XmlPullParser,boolean)>(r1, z0);

        goto label2;

     label1:
        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void parseRowContent(org.xmlpull.v1.XmlPullParser,com.android.inputmethod.keyboard.internal.KeyboardRow,boolean)>(r1, r2, z0);

     label2:
        return 1;
    }

    private void parseKeyStyle(org.xmlpull.v1.XmlPullParser, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        org.xmlpull.v1.XmlPullParser r1;
        boolean z0, $z1;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3, r4;
        java.lang.Throwable r5, $r13;
        int[] $r6, $r8;
        android.content.res.Resources $r7, $r9;
        com.android.inputmethod.keyboard.internal.KeyboardParams $r10;
        com.android.inputmethod.latin.utils.XmlParseUtils$ParseException $r11;
        com.android.inputmethod.keyboard.internal.KeyStylesSet $r12;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        z0 := @parameter1: boolean;

        r2 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

        $r7 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: android.content.res.Resources mResources>;

        $r6 = <com.android.inputmethod.latin.R$styleable: int[] Keyboard_KeyStyle>;

        r3 = virtualinvoke $r7.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r6);

        $r9 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: android.content.res.Resources mResources>;

        $r8 = <com.android.inputmethod.latin.R$styleable: int[] Keyboard_Key>;

        r4 = virtualinvoke $r9.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r2, $r8);

     label1:
        $z1 = virtualinvoke r3.<android.content.res.TypedArray: boolean hasValue(int)>(0);

        if $z1 != 0 goto label2;

        $r11 = new com.android.inputmethod.latin.utils.XmlParseUtils$ParseException;

        specialinvoke $r11.<com.android.inputmethod.latin.utils.XmlParseUtils$ParseException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser)>("<key-style/> needs styleName attribute", r1);

        throw $r11;

     label2:
        if z0 != 0 goto label3;

        $r10 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        $r12 = $r10.<com.android.inputmethod.keyboard.internal.KeyboardParams: com.android.inputmethod.keyboard.internal.KeyStylesSet mKeyStyles>;

        virtualinvoke $r12.<com.android.inputmethod.keyboard.internal.KeyStylesSet: void parseKeyStyleAttributes(android.content.res.TypedArray,android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)>(r3, r4, r1);

     label3:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        goto label6;

     label4:
        $r13 := @caughtexception;

        r5 = $r13;

     label5:
        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        throw r5;

     label6:
        staticinvoke <com.android.inputmethod.latin.utils.XmlParseUtils: void checkEndTag(java.lang.String,org.xmlpull.v1.XmlPullParser)>("key-style", r1);

        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void startKeyboard()
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        com.android.inputmethod.keyboard.internal.KeyboardParams $r1;
        int $i0, $i1, $i2;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        $i1 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: int mCurrentY>;

        $r1 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        $i0 = $r1.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mTopPadding>;

        $i2 = $i1 + $i0;

        r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: int mCurrentY> = $i2;

        r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: boolean mTopEdge> = 1;

        return;
    }

    private void startRow(com.android.inputmethod.keyboard.internal.KeyboardRow)
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        com.android.inputmethod.keyboard.internal.KeyboardRow r1;
        com.android.inputmethod.keyboard.internal.KeyboardParams $r2;
        int $i0;
        float $f0;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        r1 := @parameter0: com.android.inputmethod.keyboard.internal.KeyboardRow;

        $r2 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        $i0 = $r2.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mLeftPadding>;

        $f0 = (float) $i0;

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void addEdgeSpace(float,com.android.inputmethod.keyboard.internal.KeyboardRow)>($f0, r1);

        r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardRow mCurrentRow> = r1;

        r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: boolean mLeftEdge> = 1;

        r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.Key mRightEdgeKey> = null;

        return;
    }

    private void endRow(com.android.inputmethod.keyboard.internal.KeyboardRow)
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        com.android.inputmethod.keyboard.internal.KeyboardRow r1, $r2;
        com.android.inputmethod.keyboard.Key $r3, $r6;
        com.android.inputmethod.keyboard.internal.KeyboardParams $r4, $r5;
        int $i0, $i1, $i2, $i3;
        float $f0;
        java.lang.RuntimeException $r7;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        r1 := @parameter0: com.android.inputmethod.keyboard.internal.KeyboardRow;

        $r2 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardRow mCurrentRow>;

        if $r2 != null goto label1;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("orphan end row tag");

        throw $r7;

     label1:
        $r3 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.Key mRightEdgeKey>;

        if $r3 == null goto label2;

        $r6 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.Key mRightEdgeKey>;

        $r5 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        virtualinvoke $r6.<com.android.inputmethod.keyboard.Key: void markAsRightEdge(com.android.inputmethod.keyboard.internal.KeyboardParams)>($r5);

        r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.Key mRightEdgeKey> = null;

     label2:
        $r4 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        $i0 = $r4.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mRightPadding>;

        $f0 = (float) $i0;

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: void addEdgeSpace(float,com.android.inputmethod.keyboard.internal.KeyboardRow)>($f0, r1);

        $i1 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: int mCurrentY>;

        $i2 = virtualinvoke r1.<com.android.inputmethod.keyboard.internal.KeyboardRow: int getRowHeight()>();

        $i3 = $i1 + $i2;

        r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: int mCurrentY> = $i3;

        r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardRow mCurrentRow> = null;

        r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: boolean mTopEdge> = 0;

        return;
    }

    private void endKey(com.android.inputmethod.keyboard.Key)
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        com.android.inputmethod.keyboard.Key r1;
        com.android.inputmethod.keyboard.internal.KeyboardParams $r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        r1 := @parameter0: com.android.inputmethod.keyboard.Key;

        $r2 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        virtualinvoke $r2.<com.android.inputmethod.keyboard.internal.KeyboardParams: void onAddKey(com.android.inputmethod.keyboard.Key)>(r1);

        $z0 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: boolean mLeftEdge>;

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        virtualinvoke r1.<com.android.inputmethod.keyboard.Key: void markAsLeftEdge(com.android.inputmethod.keyboard.internal.KeyboardParams)>($r4);

        r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: boolean mLeftEdge> = 0;

     label1:
        $z1 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: boolean mTopEdge>;

        if $z1 == 0 goto label2;

        $r3 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        virtualinvoke r1.<com.android.inputmethod.keyboard.Key: void markAsTopEdge(com.android.inputmethod.keyboard.internal.KeyboardParams)>($r3);

     label2:
        r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.Key mRightEdgeKey> = r1;

        return;
    }

    private void endKeyboard()
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.android.inputmethod.keyboard.internal.KeyboardParams $r1, $r2, $r3, $r4;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        $i2 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: int mCurrentY>;

        $r1 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        $i1 = $r1.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mVerticalGap>;

        $i4 = $i2 - $i1;

        $r2 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        $i3 = $r2.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mBottomPadding>;

        i0 = $i4 + $i3;

        $r4 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        $r3 = r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.internal.KeyboardParams mParams>;

        $i5 = $r3.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mOccupiedHeight>;

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i5, i0);

        $r4.<com.android.inputmethod.keyboard.internal.KeyboardParams: int mOccupiedHeight> = $i6;

        return;
    }

    private void addEdgeSpace(float, com.android.inputmethod.keyboard.internal.KeyboardRow)
    {
        com.android.inputmethod.keyboard.internal.KeyboardBuilder r0;
        float f0;
        com.android.inputmethod.keyboard.internal.KeyboardRow r1;

        r0 := @this: com.android.inputmethod.keyboard.internal.KeyboardBuilder;

        f0 := @parameter0: float;

        r1 := @parameter1: com.android.inputmethod.keyboard.internal.KeyboardRow;

        virtualinvoke r1.<com.android.inputmethod.keyboard.internal.KeyboardRow: void advanceXPos(float)>(f0);

        r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: boolean mLeftEdge> = 0;

        r0.<com.android.inputmethod.keyboard.internal.KeyboardBuilder: com.android.inputmethod.keyboard.Key mRightEdgeKey> = null;

        return;
    }

    private static java.lang.String textAttr(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r3;
        java.lang.Object[] $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = r1;

        $r2[1] = r0;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" %s=%s", $r2);

        goto label2;

     label1:
        $r3 = "";

     label2:
        return $r3;
    }

    private static java.lang.String booleanAttr(android.content.res.TypedArray, int, java.lang.String)
    {
        android.content.res.TypedArray r0;
        int i0;
        java.lang.String r1, $r4;
        boolean $z0, $z1;
        java.lang.Object[] $r2;
        java.lang.Boolean $r3;

        r0 := @parameter0: android.content.res.TypedArray;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $z0 = virtualinvoke r0.<android.content.res.TypedArray: boolean hasValue(int)>(i0);

        if $z0 == 0 goto label1;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = r1;

        $z1 = virtualinvoke r0.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(i0, 0);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r2[1] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" %s=%s", $r2);

        goto label2;

     label1:
        $r4 = "";

     label2:
        return $r4;
    }

    public static void <clinit>()
    {
        <com.android.inputmethod.keyboard.internal.KeyboardBuilder: java.lang.String SPACES> = "                                             ";

        <com.android.inputmethod.keyboard.internal.KeyboardBuilder: int DEFAULT_KEYBOARD_ROWS> = 4;

        <com.android.inputmethod.keyboard.internal.KeyboardBuilder: int DEFAULT_KEYBOARD_COLUMNS> = 10;

        <com.android.inputmethod.keyboard.internal.KeyboardBuilder: java.lang.String TAG_KEY_STYLE> = "key-style";

        <com.android.inputmethod.keyboard.internal.KeyboardBuilder: java.lang.String TAG_DEFAULT> = "default";

        <com.android.inputmethod.keyboard.internal.KeyboardBuilder: java.lang.String TAG_CASE> = "case";

        <com.android.inputmethod.keyboard.internal.KeyboardBuilder: java.lang.String TAG_SWITCH> = "switch";

        <com.android.inputmethod.keyboard.internal.KeyboardBuilder: java.lang.String TAG_MERGE> = "merge";

        <com.android.inputmethod.keyboard.internal.KeyboardBuilder: java.lang.String TAG_INCLUDE> = "include";

        <com.android.inputmethod.keyboard.internal.KeyboardBuilder: java.lang.String TAG_SPACER> = "Spacer";

        <com.android.inputmethod.keyboard.internal.KeyboardBuilder: java.lang.String TAG_KEY> = "Key";

        <com.android.inputmethod.keyboard.internal.KeyboardBuilder: java.lang.String TAG_GRID_ROWS> = "GridRows";

        <com.android.inputmethod.keyboard.internal.KeyboardBuilder: java.lang.String TAG_ROW> = "Row";

        <com.android.inputmethod.keyboard.internal.KeyboardBuilder: java.lang.String TAG_KEYBOARD> = "Keyboard";

        <com.android.inputmethod.keyboard.internal.KeyboardBuilder: boolean DEBUG> = 0;

        <com.android.inputmethod.keyboard.internal.KeyboardBuilder: java.lang.String BUILDER_TAG> = "Keyboard.Builder";

        return;
    }
}
