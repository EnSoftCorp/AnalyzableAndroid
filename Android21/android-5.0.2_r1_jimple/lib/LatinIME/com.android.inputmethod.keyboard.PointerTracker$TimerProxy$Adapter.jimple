public class com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter extends java.lang.Object implements com.android.inputmethod.keyboard.PointerTracker$TimerProxy
{

    public void <init>()
    {
        com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter r0;

        r0 := @this: com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void startTypingStateTimer(com.android.inputmethod.keyboard.Key)
    {
        com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter r0;
        com.android.inputmethod.keyboard.Key r1;

        r0 := @this: com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter;

        r1 := @parameter0: com.android.inputmethod.keyboard.Key;

        return;
    }

    public boolean isTypingState()
    {
        com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter r0;

        r0 := @this: com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter;

        return 0;
    }

    public void startKeyRepeatTimerOf(com.android.inputmethod.keyboard.PointerTracker, int, int)
    {
        com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter r0;
        com.android.inputmethod.keyboard.PointerTracker r1;
        int i0, i1;

        r0 := @this: com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter;

        r1 := @parameter0: com.android.inputmethod.keyboard.PointerTracker;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        return;
    }

    public void startLongPressTimerOf(com.android.inputmethod.keyboard.PointerTracker, int)
    {
        com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter r0;
        com.android.inputmethod.keyboard.PointerTracker r1;
        int i0;

        r0 := @this: com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter;

        r1 := @parameter0: com.android.inputmethod.keyboard.PointerTracker;

        i0 := @parameter1: int;

        return;
    }

    public void cancelLongPressTimerOf(com.android.inputmethod.keyboard.PointerTracker)
    {
        com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter r0;
        com.android.inputmethod.keyboard.PointerTracker r1;

        r0 := @this: com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter;

        r1 := @parameter0: com.android.inputmethod.keyboard.PointerTracker;

        return;
    }

    public void cancelLongPressShiftKeyTimers()
    {
        com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter r0;

        r0 := @this: com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter;

        return;
    }

    public void cancelKeyTimersOf(com.android.inputmethod.keyboard.PointerTracker)
    {
        com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter r0;
        com.android.inputmethod.keyboard.PointerTracker r1;

        r0 := @this: com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter;

        r1 := @parameter0: com.android.inputmethod.keyboard.PointerTracker;

        return;
    }

    public void startDoubleTapShiftKeyTimer()
    {
        com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter r0;

        r0 := @this: com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter;

        return;
    }

    public void cancelDoubleTapShiftKeyTimer()
    {
        com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter r0;

        r0 := @this: com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter;

        return;
    }

    public boolean isInDoubleTapShiftKeyTimeout()
    {
        com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter r0;

        r0 := @this: com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter;

        return 0;
    }

    public void startUpdateBatchInputTimer(com.android.inputmethod.keyboard.PointerTracker)
    {
        com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter r0;
        com.android.inputmethod.keyboard.PointerTracker r1;

        r0 := @this: com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter;

        r1 := @parameter0: com.android.inputmethod.keyboard.PointerTracker;

        return;
    }

    public void cancelUpdateBatchInputTimer(com.android.inputmethod.keyboard.PointerTracker)
    {
        com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter r0;
        com.android.inputmethod.keyboard.PointerTracker r1;

        r0 := @this: com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter;

        r1 := @parameter0: com.android.inputmethod.keyboard.PointerTracker;

        return;
    }

    public void cancelAllUpdateBatchInputTimers()
    {
        com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter r0;

        r0 := @this: com.android.inputmethod.keyboard.PointerTracker$TimerProxy$Adapter;

        return;
    }
}
