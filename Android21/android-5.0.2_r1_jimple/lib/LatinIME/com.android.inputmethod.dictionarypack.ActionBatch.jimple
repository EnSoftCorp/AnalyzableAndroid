public final class com.android.inputmethod.dictionarypack.ActionBatch extends java.lang.Object
{
    private final java.util.Queue mActions;

    public void <init>()
    {
        com.android.inputmethod.dictionarypack.ActionBatch r0;
        java.util.LinkedList $r1;

        r0 := @this: com.android.inputmethod.dictionarypack.ActionBatch;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<com.android.inputmethod.dictionarypack.ActionBatch: java.util.Queue mActions> = $r1;

        return;
    }

    public void add(com.android.inputmethod.dictionarypack.ActionBatch$Action)
    {
        com.android.inputmethod.dictionarypack.ActionBatch r0;
        com.android.inputmethod.dictionarypack.ActionBatch$Action r1;
        java.util.Queue $r2;

        r0 := @this: com.android.inputmethod.dictionarypack.ActionBatch;

        r1 := @parameter0: com.android.inputmethod.dictionarypack.ActionBatch$Action;

        $r2 = r0.<com.android.inputmethod.dictionarypack.ActionBatch: java.util.Queue mActions>;

        interfaceinvoke $r2.<java.util.Queue: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void append(com.android.inputmethod.dictionarypack.ActionBatch)
    {
        com.android.inputmethod.dictionarypack.ActionBatch r0, r1;
        java.util.Iterator r2;
        com.android.inputmethod.dictionarypack.ActionBatch$Action r3;
        java.util.Queue $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: com.android.inputmethod.dictionarypack.ActionBatch;

        r1 := @parameter0: com.android.inputmethod.dictionarypack.ActionBatch;

        $r4 = r1.<com.android.inputmethod.dictionarypack.ActionBatch: java.util.Queue mActions>;

        r2 = interfaceinvoke $r4.<java.util.Queue: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.inputmethod.dictionarypack.ActionBatch$Action) $r5;

        virtualinvoke r0.<com.android.inputmethod.dictionarypack.ActionBatch: void add(com.android.inputmethod.dictionarypack.ActionBatch$Action)>(r3);

        goto label1;

     label2:
        return;
    }

    public void execute(android.content.Context, com.android.inputmethod.dictionarypack.ProblemReporter)
    {
        com.android.inputmethod.dictionarypack.ActionBatch r0;
        android.content.Context r1;
        com.android.inputmethod.dictionarypack.ProblemReporter r2;
        java.util.Queue r3;
        com.android.inputmethod.dictionarypack.ActionBatch$Action r4;
        java.lang.Exception r5, $r8;
        java.lang.Object[] $r6;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @this: com.android.inputmethod.dictionarypack.ActionBatch;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.inputmethod.dictionarypack.ProblemReporter;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = "Executing a batch of actions";

        staticinvoke <com.android.inputmethod.latin.utils.DebugLogUtils: void l(java.lang.Object[])>($r6);

        r3 = r0.<com.android.inputmethod.dictionarypack.ActionBatch: java.util.Queue mActions>;

     label1:
        $z0 = interfaceinvoke r3.<java.util.Queue: boolean isEmpty()>();

        if $z0 != 0 goto label6;

        $r7 = interfaceinvoke r3.<java.util.Queue: java.lang.Object poll()>();

        r4 = (com.android.inputmethod.dictionarypack.ActionBatch$Action) $r7;

     label2:
        interfaceinvoke r4.<com.android.inputmethod.dictionarypack.ActionBatch$Action: void execute(android.content.Context)>(r1);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        r5 = $r8;

        if null == r2 goto label5;

        interfaceinvoke r2.<com.android.inputmethod.dictionarypack.ProblemReporter: void report(java.lang.Exception)>(r5);

     label5:
        goto label1;

     label6:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }
}
