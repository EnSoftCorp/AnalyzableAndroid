public final class com.android.inputmethod.latin.utils.ResourceUtils extends java.lang.Object
{
    private static final java.lang.String TAG;
    public static final float UNDEFINED_RATIO;
    public static final int UNDEFINED_DIMENSION;
    private static final java.util.HashMap sDeviceOverrideValueMap;
    private static final java.lang.String[] BUILD_KEYS_AND_VALUES;
    private static final java.util.HashMap sBuildKeyValues;
    private static final java.lang.String sBuildKeyValuesDebugString;

    private void <init>()
    {
        com.android.inputmethod.latin.utils.ResourceUtils r0;

        r0 := @this: com.android.inputmethod.latin.utils.ResourceUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getDeviceOverrideValue(android.content.res.Resources, int, java.lang.String)
    {
        android.content.res.Resources r0;
        int i0, i1;
        java.lang.String r1, r2, r4, $r14, $r16, $r21, $r24, $r29;
        java.lang.String[] r3;
        android.content.res.Configuration $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r15, $r17, $r18, $r19, $r20, $r22, $r23;
        java.util.HashMap $r10, $r11, $r13, $r25, $r27;
        boolean $z0;
        java.lang.Object $r26;

        r0 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r5 = virtualinvoke r0.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        i1 = $r5.<android.content.res.Configuration: int orientation>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = <com.android.inputmethod.latin.utils.ResourceUtils: java.util.HashMap sDeviceOverrideValueMap>;

        $z0 = virtualinvoke $r10.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        $r25 = <com.android.inputmethod.latin.utils.ResourceUtils: java.util.HashMap sDeviceOverrideValueMap>;

        $r26 = virtualinvoke $r25.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        $r29 = (java.lang.String) $r26;

        return $r29;

     label1:
        r3 = virtualinvoke r0.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(i0);

        $r11 = <com.android.inputmethod.latin.utils.ResourceUtils: java.util.HashMap sBuildKeyValues>;

        r4 = staticinvoke <com.android.inputmethod.latin.utils.ResourceUtils: java.lang.String findConstantForKeyValuePairs(java.util.HashMap,java.lang.String[])>($r11, r3);

        if r4 == null goto label2;

        $r14 = <com.android.inputmethod.latin.utils.ResourceUtils: java.lang.String TAG>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Find override value: resource=");

        $r16 = virtualinvoke r0.<android.content.res.Resources: java.lang.String getResourceEntryName(int)>(i0);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" build=");

        $r21 = <com.android.inputmethod.latin.utils.ResourceUtils: java.lang.String sBuildKeyValuesDebugString>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" override=");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r14, $r24);

        $r27 = <com.android.inputmethod.latin.utils.ResourceUtils: java.util.HashMap sDeviceOverrideValueMap>;

        virtualinvoke $r27.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r4);

        return r4;

     label2:
        $r13 = <com.android.inputmethod.latin.utils.ResourceUtils: java.util.HashMap sDeviceOverrideValueMap>;

        virtualinvoke $r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1);

        return r1;
    }

    static java.lang.String findConstantForKeyValuePairs(java.util.HashMap, java.lang.String[])
    {
        java.util.HashMap r0;
        java.lang.String[] r1, r3;
        java.lang.String r2, r4, r5, $r7, $r11, $r12, $r16, $r17;
        int i0, i1, i2, $i3;
        com.android.inputmethod.latin.utils.ResourceUtils$DeviceOverridePatternSyntaxError r6, $r18;
        boolean $z0, $z1;
        java.lang.StringBuilder $r8, $r9, $r10, $r13, $r14, $r15;

        r0 := @parameter0: java.util.HashMap;

        r1 := @parameter1: java.lang.String[];

        if r1 == null goto label1;

        if r0 != null goto label2;

     label1:
        return null;

     label2:
        r2 = null;

        r3 = r1;

        i0 = lengthof r3;

        i1 = 0;

     label3:
        if i1 >= i0 goto label9;

        r4 = r3[i1];

        i2 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(44);

        if i2 >= 0 goto label4;

        $r12 = <com.android.inputmethod.latin.utils.ResourceUtils: java.lang.String TAG>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Array element has no comma: ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r12, $r16);

        goto label8;

     label4:
        r5 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        $z0 = virtualinvoke r5.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label5;

        $r7 = <com.android.inputmethod.latin.utils.ResourceUtils: java.lang.String TAG>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Array element has no condition: ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r7, $r11);

        goto label8;

     label5:
        $z1 = staticinvoke <com.android.inputmethod.latin.utils.ResourceUtils: boolean fulfillsCondition(java.util.HashMap,java.lang.String)>(r0, r5);

        if $z1 == 0 goto label6;

        if r2 != null goto label6;

        $i3 = i2 + 1;

        r2 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i3);

     label6:
        goto label8;

     label7:
        $r18 := @caughtexception;

        r6 = $r18;

        $r17 = <com.android.inputmethod.latin.utils.ResourceUtils: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r17, "Syntax error, ignored", r6);

     label8:
        i1 = i1 + 1;

        goto label3;

     label9:
        return r2;

        catch com.android.inputmethod.latin.utils.ResourceUtils$DeviceOverridePatternSyntaxError from label5 to label6 with label7;
    }

    private static boolean fulfillsCondition(java.util.HashMap, java.lang.String) throws com.android.inputmethod.latin.utils.ResourceUtils$DeviceOverridePatternSyntaxError
    {
        java.util.HashMap r0;
        java.lang.String r1, r4, r5, r6, r7;
        java.lang.String[] r2, r3;
        boolean z0, $z1;
        int i0, i1, i2, $i3;
        java.util.regex.PatternSyntaxException r8, $r13;
        java.lang.Object $r9;
        com.android.inputmethod.latin.utils.ResourceUtils$DeviceOverridePatternSyntaxError $r10, $r11, $r12;

        r0 := @parameter0: java.util.HashMap;

        r1 := @parameter1: java.lang.String;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        z0 = 1;

        r3 = r2;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label8;

        r4 = r3[i1];

        i2 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(61);

        if i2 >= 0 goto label2;

        $r10 = new com.android.inputmethod.latin.utils.ResourceUtils$DeviceOverridePatternSyntaxError;

        specialinvoke $r10.<com.android.inputmethod.latin.utils.ResourceUtils$DeviceOverridePatternSyntaxError: void <init>(java.lang.String,java.lang.String)>("Pattern has no \'=\'", r1);

        throw $r10;

     label2:
        r5 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        $r9 = virtualinvoke r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (java.lang.String) $r9;

        if r6 != null goto label3;

        $r11 = new com.android.inputmethod.latin.utils.ResourceUtils$DeviceOverridePatternSyntaxError;

        specialinvoke $r11.<com.android.inputmethod.latin.utils.ResourceUtils$DeviceOverridePatternSyntaxError: void <init>(java.lang.String,java.lang.String)>("Unknown key", r1);

        throw $r11;

     label3:
        $i3 = i2 + 1;

        r7 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i3);

     label4:
        $z1 = virtualinvoke r6.<java.lang.String: boolean matches(java.lang.String)>(r7);

        if $z1 != 0 goto label5;

        z0 = 0;

     label5:
        goto label7;

     label6:
        $r13 := @caughtexception;

        r8 = $r13;

        $r12 = new com.android.inputmethod.latin.utils.ResourceUtils$DeviceOverridePatternSyntaxError;

        specialinvoke $r12.<com.android.inputmethod.latin.utils.ResourceUtils$DeviceOverridePatternSyntaxError: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>("Syntax error", r1, r8);

        throw $r12;

     label7:
        i1 = i1 + 1;

        goto label1;

     label8:
        return z0;

        catch java.util.regex.PatternSyntaxException from label4 to label5 with label6;
    }

    public static int getDefaultKeyboardWidth(android.content.res.Resources)
    {
        android.content.res.Resources r0;
        android.util.DisplayMetrics r1;
        int $i0;

        r0 := @parameter0: android.content.res.Resources;

        r1 = virtualinvoke r0.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i0 = r1.<android.util.DisplayMetrics: int widthPixels>;

        return $i0;
    }

    public static int getDefaultKeyboardHeight(android.content.res.Resources)
    {
        android.content.res.Resources r0;
        android.util.DisplayMetrics r1;
        java.lang.String r2;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7;
        byte $b4;

        r0 := @parameter0: android.content.res.Resources;

        r1 = virtualinvoke r0.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        r2 = staticinvoke <com.android.inputmethod.latin.utils.ResourceUtils: java.lang.String getDeviceOverrideValue(android.content.res.Resources,int,java.lang.String)>(r0, 2131296273, null);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        f0 = virtualinvoke r0.<android.content.res.Resources: float getDimension(int)>(2131558416);

        goto label2;

     label1:
        $f3 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r2);

        $f4 = r1.<android.util.DisplayMetrics: float density>;

        f0 = $f3 * $f4;

     label2:
        $i1 = r1.<android.util.DisplayMetrics: int heightPixels>;

        $i0 = r1.<android.util.DisplayMetrics: int heightPixels>;

        f1 = virtualinvoke r0.<android.content.res.Resources: float getFraction(int,int,int)>(2131492875, $i1, $i0);

        $i3 = r1.<android.util.DisplayMetrics: int heightPixels>;

        $i2 = r1.<android.util.DisplayMetrics: int heightPixels>;

        f2 = virtualinvoke r0.<android.content.res.Resources: float getFraction(int,int,int)>(2131492876, $i3, $i2);

        $b4 = f2 cmpg 0.0F;

        if $b4 >= 0 goto label3;

        $i7 = r1.<android.util.DisplayMetrics: int widthPixels>;

        $i5 = r1.<android.util.DisplayMetrics: int widthPixels>;

        $f7 = virtualinvoke r0.<android.content.res.Resources: float getFraction(int,int,int)>(2131492876, $i7, $i5);

        f2 = neg $f7;

     label3:
        $f6 = staticinvoke <java.lang.Math: float min(float,float)>(f0, f1);

        $f5 = staticinvoke <java.lang.Math: float max(float,float)>($f6, f2);

        $i6 = (int) $f5;

        return $i6;
    }

    public static boolean isValidFraction(float)
    {
        float f0;
        byte $b0;
        boolean $z0;

        f0 := @parameter0: float;

        $b0 = f0 cmpl 0.0F;

        if $b0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isValidDimensionPixelSize(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isValidDimensionPixelOffset(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static float getFloatFromFraction(android.content.res.Resources, int)
    {
        android.content.res.Resources r0;
        int i0;
        float $f0;

        r0 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        $f0 = virtualinvoke r0.<android.content.res.Resources: float getFraction(int,int,int)>(i0, 1, 1);

        return $f0;
    }

    public static float getFraction(android.content.res.TypedArray, int, float)
    {
        android.content.res.TypedArray r0;
        int i0;
        float f0, $f1;
        android.util.TypedValue r1;
        boolean $z0;

        r0 := @parameter0: android.content.res.TypedArray;

        i0 := @parameter1: int;

        f0 := @parameter2: float;

        r1 = virtualinvoke r0.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(i0);

        if r1 == null goto label1;

        $z0 = staticinvoke <com.android.inputmethod.latin.utils.ResourceUtils: boolean isFractionValue(android.util.TypedValue)>(r1);

        if $z0 != 0 goto label2;

     label1:
        return f0;

     label2:
        $f1 = virtualinvoke r0.<android.content.res.TypedArray: float getFraction(int,int,int,float)>(i0, 1, 1, f0);

        return $f1;
    }

    public static float getFraction(android.content.res.TypedArray, int)
    {
        android.content.res.TypedArray r0;
        int i0;
        float $f0;

        r0 := @parameter0: android.content.res.TypedArray;

        i0 := @parameter1: int;

        $f0 = staticinvoke <com.android.inputmethod.latin.utils.ResourceUtils: float getFraction(android.content.res.TypedArray,int,float)>(r0, i0, -1.0F);

        return $f0;
    }

    public static int getDimensionPixelSize(android.content.res.TypedArray, int)
    {
        android.content.res.TypedArray r0;
        int i0, $i1;
        android.util.TypedValue r1;
        boolean $z0;

        r0 := @parameter0: android.content.res.TypedArray;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(i0);

        if r1 == null goto label1;

        $z0 = staticinvoke <com.android.inputmethod.latin.utils.ResourceUtils: boolean isDimensionValue(android.util.TypedValue)>(r1);

        if $z0 != 0 goto label2;

     label1:
        return -1;

     label2:
        $i1 = virtualinvoke r0.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(i0, -1);

        return $i1;
    }

    public static float getDimensionOrFraction(android.content.res.TypedArray, int, int, float)
    {
        android.content.res.TypedArray r0;
        int i0, i1;
        float f0, $f1, $f2;
        android.util.TypedValue r1;
        boolean $z0, $z1;

        r0 := @parameter0: android.content.res.TypedArray;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        f0 := @parameter3: float;

        r1 = virtualinvoke r0.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(i0);

        if r1 != null goto label1;

        return f0;

     label1:
        $z0 = staticinvoke <com.android.inputmethod.latin.utils.ResourceUtils: boolean isFractionValue(android.util.TypedValue)>(r1);

        if $z0 == 0 goto label2;

        $f2 = virtualinvoke r0.<android.content.res.TypedArray: float getFraction(int,int,int,float)>(i0, i1, i1, f0);

        return $f2;

     label2:
        $z1 = staticinvoke <com.android.inputmethod.latin.utils.ResourceUtils: boolean isDimensionValue(android.util.TypedValue)>(r1);

        if $z1 == 0 goto label3;

        $f1 = virtualinvoke r0.<android.content.res.TypedArray: float getDimension(int,float)>(i0, f0);

        return $f1;

     label3:
        return f0;
    }

    public static int getEnumValue(android.content.res.TypedArray, int, int)
    {
        android.content.res.TypedArray r0;
        int i0, i1, $i2;
        android.util.TypedValue r1;
        boolean $z0;

        r0 := @parameter0: android.content.res.TypedArray;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = virtualinvoke r0.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(i0);

        if r1 != null goto label1;

        return i1;

     label1:
        $z0 = staticinvoke <com.android.inputmethod.latin.utils.ResourceUtils: boolean isIntegerValue(android.util.TypedValue)>(r1);

        if $z0 == 0 goto label2;

        $i2 = virtualinvoke r0.<android.content.res.TypedArray: int getInt(int,int)>(i0, i1);

        return $i2;

     label2:
        return i1;
    }

    public static boolean isFractionValue(android.util.TypedValue)
    {
        android.util.TypedValue r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.util.TypedValue;

        $i0 = r0.<android.util.TypedValue: int type>;

        if $i0 != 6 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isDimensionValue(android.util.TypedValue)
    {
        android.util.TypedValue r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.util.TypedValue;

        $i0 = r0.<android.util.TypedValue: int type>;

        if $i0 != 5 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isIntegerValue(android.util.TypedValue)
    {
        android.util.TypedValue r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: android.util.TypedValue;

        $i0 = r0.<android.util.TypedValue: int type>;

        if $i0 < 16 goto label1;

        $i1 = r0.<android.util.TypedValue: int type>;

        if $i1 > 31 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isStringValue(android.util.TypedValue)
    {
        android.util.TypedValue r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.util.TypedValue;

        $i0 = r0.<android.util.TypedValue: int type>;

        if $i0 != 3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void <clinit>()
    {
        java.util.ArrayList r0, $r12;
        int i0, i1, i2, $i3, $i4;
        java.lang.String r1, r2, $r4, $r7, $r8, $r9, $r10, $r17, $r18, $r28;
        java.lang.Class $r3;
        java.util.HashMap $r5, $r11, $r21;
        java.lang.String[] $r6, $r13, $r20, $r22;
        java.lang.StringBuilder $r14, $r15, $r16, $r19, $r23, $r25, $r26, $r27;

        <com.android.inputmethod.latin.utils.ResourceUtils: int UNDEFINED_DIMENSION> = -1;

        <com.android.inputmethod.latin.utils.ResourceUtils: float UNDEFINED_RATIO> = -1.0F;

        $r3 = class "com/android/inputmethod/latin/utils/ResourceUtils";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.inputmethod.latin.utils.ResourceUtils: java.lang.String TAG> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        <com.android.inputmethod.latin.utils.ResourceUtils: java.util.HashMap sDeviceOverrideValueMap> = $r5;

        $r6 = newarray (java.lang.String)[8];

        $r6[0] = "HARDWARE";

        $r7 = <android.os.Build: java.lang.String HARDWARE>;

        $r6[1] = $r7;

        $r6[2] = "MODEL";

        $r8 = <android.os.Build: java.lang.String MODEL>;

        $r6[3] = $r8;

        $r6[4] = "BRAND";

        $r9 = <android.os.Build: java.lang.String BRAND>;

        $r6[5] = $r9;

        $r6[6] = "MANUFACTURER";

        $r10 = <android.os.Build: java.lang.String MANUFACTURER>;

        $r6[7] = $r10;

        <com.android.inputmethod.latin.utils.ResourceUtils: java.lang.String[] BUILD_KEYS_AND_VALUES> = $r6;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        <com.android.inputmethod.latin.utils.ResourceUtils: java.util.HashMap sBuildKeyValues> = $r11;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r0 = $r12;

        $r13 = <com.android.inputmethod.latin.utils.ResourceUtils: java.lang.String[] BUILD_KEYS_AND_VALUES>;

        $i3 = lengthof $r13;

        i0 = $i3 / 2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        i2 = i1 * 2;

        $r20 = <com.android.inputmethod.latin.utils.ResourceUtils: java.lang.String[] BUILD_KEYS_AND_VALUES>;

        r1 = $r20[i2];

        $r22 = <com.android.inputmethod.latin.utils.ResourceUtils: java.lang.String[] BUILD_KEYS_AND_VALUES>;

        $i4 = i2 + 1;

        r2 = $r22[$i4];

        $r21 = <com.android.inputmethod.latin.utils.ResourceUtils: java.util.HashMap sBuildKeyValues>;

        virtualinvoke $r21.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r28);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r17 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(" ", r0);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.inputmethod.latin.utils.ResourceUtils: java.lang.String sBuildKeyValuesDebugString> = $r18;

        return;
    }
}
