public final class com.android.inputmethod.latin.BinaryDictionaryFileDumper extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private static final int FILE_READ_BUFFER_SIZE;
    private static final byte[] MAGIC_NUMBER_VERSION_1;
    private static final byte[] MAGIC_NUMBER_VERSION_2;
    private static final java.lang.String[] DICTIONARY_PROJECTION;
    private static final java.lang.String QUERY_PARAMETER_MAY_PROMPT_USER;
    private static final java.lang.String QUERY_PARAMETER_TRUE;
    private static final java.lang.String QUERY_PARAMETER_DELETE_RESULT;
    private static final java.lang.String QUERY_PARAMETER_SUCCESS;
    private static final java.lang.String QUERY_PARAMETER_FAILURE;
    private static final java.lang.String QUERY_PARAMETER_PROTOCOL;
    private static final java.lang.String QUERY_PARAMETER_PROTOCOL_VALUE;
    private static final java.lang.String QUERY_PATH_DICT_INFO;
    private static final java.lang.String QUERY_PATH_DATAFILE;
    private static final java.lang.String QUERY_PATH_METADATA;
    private static final java.lang.String INSERT_METADATA_CLIENT_ID_COLUMN;
    private static final java.lang.String INSERT_METADATA_METADATA_URI_COLUMN;
    private static final java.lang.String INSERT_METADATA_METADATA_ADDITIONAL_ID_COLUMN;

    private void <init>()
    {
        com.android.inputmethod.latin.BinaryDictionaryFileDumper r0;

        r0 := @this: com.android.inputmethod.latin.BinaryDictionaryFileDumper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.net.Uri$Builder getProviderUriBuilder(java.lang.String)
    {
        java.lang.String r0;
        android.net.Uri$Builder $r1, $r2, $r3, $r4;

        r0 := @parameter0: java.lang.String;

        $r1 = new android.net.Uri$Builder;

        specialinvoke $r1.<android.net.Uri$Builder: void <init>()>();

        $r2 = virtualinvoke $r1.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>("com.android.inputmethod.dictionarypack.aosp");

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r0);

        return $r4;
    }

    private static android.net.Uri$Builder getContentUriBuilderForType(java.lang.String, android.content.ContentProviderClient, java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        java.lang.String r0, r2, r3, $r9;
        android.content.ContentProviderClient r1;
        android.net.Uri$Builder r4, $r10;
        android.net.Uri $r8;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.content.ContentProviderClient;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 = staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: android.net.Uri$Builder getProviderUriBuilder(java.lang.String)>(r0);

        virtualinvoke r4.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r2);

        virtualinvoke r4.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r3);

        virtualinvoke r4.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("protocol", "2");

        $r8 = virtualinvoke r4.<android.net.Uri$Builder: android.net.Uri build()>();

        $r9 = virtualinvoke r1.<android.content.ContentProviderClient: java.lang.String getType(android.net.Uri)>($r8);

        if null == $r9 goto label1;

        return r4;

     label1:
        $r10 = staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: android.net.Uri$Builder getProviderUriBuilder(java.lang.String)>(r3);

        return $r10;
    }

    private static java.util.List getWordListWordListInfos(java.util.Locale, android.content.Context, boolean)
    {
        java.util.Locale r0;
        android.content.Context r1;
        boolean z0, z1, $z2, $z5, $z6;
        java.lang.String r2, r8, r9, r10, $r15, $r16, $r17, $r25, $r26;
        android.content.ContentProviderClient r3;
        android.database.Cursor r4;
        android.net.Uri$Builder r5, $r14;
        android.net.Uri r6, $r13;
        java.util.List r7, $r22, r29, r33, r35;
        java.lang.Throwable r11, $r28;
        android.content.ContentResolver $r12;
        java.lang.String[] $r18, $r21;
        int $i0;
        java.util.ArrayList $r19, r30, r31;
        com.android.inputmethod.latin.WordListInfo $r20;
        java.lang.Exception $r23, r34;
        android.os.RemoteException $r27, r32;

        r0 := @parameter0: java.util.Locale;

        r1 := @parameter1: android.content.Context;

        z0 := @parameter2: boolean;

        r2 = virtualinvoke r1.<android.content.Context: java.lang.String getString(int)>(2131361797);

        $r12 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r14 = staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: android.net.Uri$Builder getProviderUriBuilder(java.lang.String)>("");

        $r13 = virtualinvoke $r14.<android.net.Uri$Builder: android.net.Uri build()>();

        r3 = virtualinvoke $r12.<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(android.net.Uri)>($r13);

        if null != r3 goto label01;

        $r22 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r22;

     label01:
        r4 = null;

     label02:
        $r15 = virtualinvoke r0.<java.util.Locale: java.lang.String toString()>();

        r5 = staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: android.net.Uri$Builder getContentUriBuilderForType(java.lang.String,android.content.ContentProviderClient,java.lang.String,java.lang.String)>(r2, r3, "dict", $r15);

        if z0 != 0 goto label03;

        virtualinvoke r5.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("mayPrompt", "true");

     label03:
        r6 = virtualinvoke r5.<android.net.Uri$Builder: android.net.Uri build()>();

        $r16 = "2";

        $r17 = virtualinvoke r6.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("protocol");

        z1 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        $r18 = <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String[] DICTIONARY_PROJECTION>;

        r4 = virtualinvoke r3.<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r6, $r18, null, null, null);

        if z1 == 0 goto label04;

        if null != r4 goto label04;

        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void reinitializeClientRecordInDictionaryContentProvider(android.content.Context,android.content.ContentProviderClient,java.lang.String)>(r1, r3, r2);

        $r21 = <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String[] DICTIONARY_PROJECTION>;

        r4 = virtualinvoke r3.<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r6, $r21, null, null, null);

     label04:
        if null != r4 goto label07;

        r7 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label05:
        if null == r4 goto label06;

        interfaceinvoke r4.<android.database.Cursor: void close()>();

     label06:
        virtualinvoke r3.<android.content.ContentProviderClient: boolean release()>();

        return r7;

     label07:
        $i0 = interfaceinvoke r4.<android.database.Cursor: int getCount()>();

        if $i0 <= 0 goto label08;

        $z2 = interfaceinvoke r4.<android.database.Cursor: boolean moveToFirst()>();

        if $z2 != 0 goto label11;

     label08:
        r29 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label09:
        if null == r4 goto label10;

        interfaceinvoke r4.<android.database.Cursor: void close()>();

     label10:
        virtualinvoke r3.<android.content.ContentProviderClient: boolean release()>();

        return r29;

     label11:
        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r30 = $r19;

     label12:
        r8 = interfaceinvoke r4.<android.database.Cursor: java.lang.String getString(int)>(0);

        r9 = interfaceinvoke r4.<android.database.Cursor: java.lang.String getString(int)>(1);

        r10 = interfaceinvoke r4.<android.database.Cursor: java.lang.String getString(int)>(2);

        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r8);

        if $z6 == 0 goto label13;

        goto label14;

     label13:
        $r20 = new com.android.inputmethod.latin.WordListInfo;

        specialinvoke $r20.<com.android.inputmethod.latin.WordListInfo: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r8, r9, r10);

        virtualinvoke r30.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

     label14:
        $z5 = interfaceinvoke r4.<android.database.Cursor: boolean moveToNext()>();

        if $z5 != 0 goto label12;

        r31 = r30;

     label15:
        if null == r4 goto label16;

        interfaceinvoke r4.<android.database.Cursor: void close()>();

     label16:
        virtualinvoke r3.<android.content.ContentProviderClient: boolean release()>();

        return r31;

     label17:
        $r27 := @caughtexception;

        r32 = $r27;

        $r26 = <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r26, "RemoteException: communication with the dictionary pack cut", r32);

        r33 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label18:
        if null == r4 goto label19;

        interfaceinvoke r4.<android.database.Cursor: void close()>();

     label19:
        virtualinvoke r3.<android.content.ContentProviderClient: boolean release()>();

        return r33;

     label20:
        $r23 := @caughtexception;

        r34 = $r23;

        $r25 = <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r25, "Unexpected exception communicating with the dictionary pack", r34);

        r35 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label21:
        if null == r4 goto label22;

        interfaceinvoke r4.<android.database.Cursor: void close()>();

     label22:
        virtualinvoke r3.<android.content.ContentProviderClient: boolean release()>();

        return r35;

     label23:
        $r28 := @caughtexception;

        r11 = $r28;

     label24:
        if null == r4 goto label25;

        interfaceinvoke r4.<android.database.Cursor: void close()>();

     label25:
        virtualinvoke r3.<android.content.ContentProviderClient: boolean release()>();

        throw r11;

        catch android.os.RemoteException from label02 to label05 with label17;
        catch android.os.RemoteException from label07 to label09 with label17;
        catch android.os.RemoteException from label11 to label15 with label17;
        catch java.lang.Exception from label02 to label05 with label20;
        catch java.lang.Exception from label07 to label09 with label20;
        catch java.lang.Exception from label11 to label15 with label20;
        catch java.lang.Throwable from label02 to label05 with label23;
        catch java.lang.Throwable from label07 to label09 with label23;
        catch java.lang.Throwable from label11 to label15 with label23;
        catch java.lang.Throwable from label17 to label18 with label23;
        catch java.lang.Throwable from label20 to label21 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
    }

    private static android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.content.ContentProviderClient, android.net.Uri)
    {
        android.content.ContentProviderClient r0;
        android.net.Uri r1;
        android.content.res.AssetFileDescriptor $r3;
        java.io.FileNotFoundException $r4;
        java.lang.String $r5, $r7;
        android.os.RemoteException $r6, r8;

        r0 := @parameter0: android.content.ContentProviderClient;

        r1 := @parameter1: android.net.Uri;

     label1:
        $r3 = virtualinvoke r0.<android.content.ContentProviderClient: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>(r1, "r");

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r5, "Could not find a word list from the dictionary provider.");

        return null;

     label4:
        $r6 := @caughtexception;

        r8 = $r6;

        $r7 = <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r7, "Can\'t communicate with the dictionary pack", r8);

        return null;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
        catch android.os.RemoteException from label1 to label2 with label4;
    }

    private static void cacheWordList(java.lang.String, java.lang.String, java.lang.String, android.content.ContentProviderClient, android.content.Context)
    {
        java.lang.String r0, r1, r2, r5, r9, r18, $r22, $r33, $r34, $r38, $r41, $r45, $r47, $r50, r53;
        android.content.ContentProviderClient r3;
        android.content.Context r4;
        android.net.Uri$Builder r6;
        android.os.RemoteException r7, $r49;
        java.io.IOException r8, $r44, $r46, $r48;
        java.io.InputStream r10, r12, r13;
        java.io.FileInputStream r11, $r28;
        java.io.File r14, r21, $r23, $r37;
        java.io.BufferedInputStream r15, $r26, $r29;
        android.content.res.AssetFileDescriptor r16;
        java.io.BufferedOutputStream r17, $r24;
        android.net.Uri r19, $r42;
        java.lang.Throwable r20, $r52;
        java.io.FileOutputStream $r25;
        java.lang.StringBuilder $r27, $r30, $r31, $r32, $r35, $r39, $r40, $r43;
        boolean $z5, $z6, $z8;
        int $i7, i12;
        java.lang.Exception $r51;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.content.ContentProviderClient;

        r4 := @parameter4: android.content.Context;

        r5 = virtualinvoke r4.<android.content.Context: java.lang.String getString(int)>(2131361797);

     label01:
        r6 = staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: android.net.Uri$Builder getContentUriBuilderForType(java.lang.String,android.content.ContentProviderClient,java.lang.String,java.lang.String)>(r5, r3, "datafile", r0);

     label02:
        goto label04;

     label03:
        $r49 := @caughtexception;

        r7 = $r49;

        $r50 = <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r50, "Can\'t communicate with the dictionary pack", r7);

        return;

     label04:
        r53 = staticinvoke <com.android.inputmethod.latin.utils.DictionaryInfoUtils: java.lang.String getCacheFileName(java.lang.String,java.lang.String,android.content.Context)>(r0, r1, r4);

     label05:
        r9 = staticinvoke <com.android.inputmethod.latin.BinaryDictionaryGetter: java.lang.String getTempFileName(java.lang.String,android.content.Context)>(r0, r4);

     label06:
        goto label08;

     label07:
        $r48 := @caughtexception;

        r8 = $r48;

        $r47 = <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r47, "Can\'t open the temporary file", r8);

        return;

     label08:
        i12 = 0;

     label09:
        if i12 > 5 goto label29;

        r10 = null;

        r13 = null;

        r12 = null;

        r15 = null;

        r14 = null;

        r17 = null;

        r16 = null;

        r19 = virtualinvoke r6.<android.net.Uri$Builder: android.net.Uri build()>();

     label10:
        r16 = staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.content.ContentProviderClient,android.net.Uri)>(r3, r19);

        if null != r16 goto label12;

     label11:
        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void closeAssetFileDescriptorAndReportAnyException(android.content.res.AssetFileDescriptor)>(r16);

        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void closeCloseableAndReportAnyException(java.io.Closeable)>(r10);

        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void closeCloseableAndReportAnyException(java.io.Closeable)>(r13);

        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void closeCloseableAndReportAnyException(java.io.Closeable)>(r12);

        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void closeCloseableAndReportAnyException(java.io.Closeable)>(r15);

        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void closeCloseableAndReportAnyException(java.io.Closeable)>(r17);

        return;

     label12:
        r11 = virtualinvoke r16.<android.content.res.AssetFileDescriptor: java.io.FileInputStream createInputStream()>();

        $r23 = new java.io.File;

        specialinvoke $r23.<java.io.File: void <init>(java.lang.String)>(r9);

        r14 = $r23;

        virtualinvoke r14.<java.io.File: boolean delete()>();

        tableswitch(i12)
        {
            case 0: goto label13;
            case 1: goto label14;
            case 2: goto label15;
            case 3: goto label16;
            case 4: goto label17;
            case 5: goto label18;
            default: goto label19;
        };

     label13:
        r13 = staticinvoke <com.android.inputmethod.latin.utils.FileTransforms: java.io.InputStream getUncompressedStream(java.io.InputStream)>(r11);

        r12 = staticinvoke <com.android.inputmethod.latin.utils.FileTransforms: java.io.InputStream getDecryptedStream(java.io.InputStream)>(r13);

        r10 = staticinvoke <com.android.inputmethod.latin.utils.FileTransforms: java.io.InputStream getUncompressedStream(java.io.InputStream)>(r12);

        goto label19;

     label14:
        r12 = staticinvoke <com.android.inputmethod.latin.utils.FileTransforms: java.io.InputStream getDecryptedStream(java.io.InputStream)>(r11);

        r10 = staticinvoke <com.android.inputmethod.latin.utils.FileTransforms: java.io.InputStream getUncompressedStream(java.io.InputStream)>(r12);

        goto label19;

     label15:
        r13 = staticinvoke <com.android.inputmethod.latin.utils.FileTransforms: java.io.InputStream getUncompressedStream(java.io.InputStream)>(r11);

        r10 = staticinvoke <com.android.inputmethod.latin.utils.FileTransforms: java.io.InputStream getDecryptedStream(java.io.InputStream)>(r13);

        goto label19;

     label16:
        r10 = staticinvoke <com.android.inputmethod.latin.utils.FileTransforms: java.io.InputStream getUncompressedStream(java.io.InputStream)>(r11);

        goto label19;

     label17:
        r10 = staticinvoke <com.android.inputmethod.latin.utils.FileTransforms: java.io.InputStream getDecryptedStream(java.io.InputStream)>(r11);

        goto label19;

     label18:
        r10 = r11;

     label19:
        $r26 = new java.io.BufferedInputStream;

        specialinvoke $r26.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r10);

        r15 = $r26;

        $r24 = new java.io.BufferedOutputStream;

        $r25 = new java.io.FileOutputStream;

        specialinvoke $r25.<java.io.FileOutputStream: void <init>(java.io.File)>(r14);

        specialinvoke $r24.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r25);

        r17 = $r24;

        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void checkMagicAndCopyFileTo(java.io.BufferedInputStream,java.io.BufferedOutputStream)>(r15, r17);

        virtualinvoke r17.<java.io.BufferedOutputStream: void flush()>();

        virtualinvoke r17.<java.io.BufferedOutputStream: void close()>();

        $r29 = new java.io.BufferedInputStream;

        $r28 = new java.io.FileInputStream;

        specialinvoke $r28.<java.io.FileInputStream: void <init>(java.io.File)>(r14);

        specialinvoke $r29.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r28);

        r18 = staticinvoke <com.android.inputmethod.dictionarypack.MD5Calculator: java.lang.String checksum(java.io.InputStream)>($r29);

        $r33 = <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String TAG>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Computed checksum for downloaded dictionary. Expected = ");

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ; actual = ");

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r33, $r34);

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z5 != 0 goto label20;

        $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r18);

        if $z8 != 0 goto label20;

        $r44 = new java.io.IOException;

        specialinvoke $r44.<java.io.IOException: void <init>(java.lang.String)>("Could not decode the file correctly : checksum differs");

        throw $r44;

     label20:
        $r37 = new java.io.File;

        specialinvoke $r37.<java.io.File: void <init>(java.lang.String)>(r53);

        r21 = $r37;

        virtualinvoke r21.<java.io.File: boolean delete()>();

        $z6 = virtualinvoke r14.<java.io.File: boolean renameTo(java.io.File)>(r21);

        if $z6 != 0 goto label21;

        $r46 = new java.io.IOException;

        specialinvoke $r46.<java.io.IOException: void <init>(java.lang.String)>("Can\'t move the file to its final name");

        throw $r46;

     label21:
        virtualinvoke r6.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("result", "success");

        $r42 = virtualinvoke r6.<android.net.Uri$Builder: android.net.Uri build()>();

        $i7 = virtualinvoke r3.<android.content.ContentProviderClient: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r42, null, null);

        if 0 < $i7 goto label22;

        $r45 = <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r45, "Could not have the dictionary pack delete a word list");

     label22:
        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryGetter: void removeFilesWithIdExcept(android.content.Context,java.lang.String,java.io.File)>(r4, r0, r21);

        $r38 = <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String TAG>;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Successfully copied file for wordlist ID ");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r38, $r41);

     label23:
        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void closeAssetFileDescriptorAndReportAnyException(android.content.res.AssetFileDescriptor)>(r16);

        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void closeCloseableAndReportAnyException(java.io.Closeable)>(r10);

        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void closeCloseableAndReportAnyException(java.io.Closeable)>(r13);

        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void closeCloseableAndReportAnyException(java.io.Closeable)>(r12);

        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void closeCloseableAndReportAnyException(java.io.Closeable)>(r15);

        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void closeCloseableAndReportAnyException(java.io.Closeable)>(r17);

        return;

     label24:
        $r51 := @caughtexception;

        if null == r14 goto label25;

        virtualinvoke r14.<java.io.File: boolean delete()>();

     label25:
        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void closeAssetFileDescriptorAndReportAnyException(android.content.res.AssetFileDescriptor)>(r16);

        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void closeCloseableAndReportAnyException(java.io.Closeable)>(r10);

        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void closeCloseableAndReportAnyException(java.io.Closeable)>(r13);

        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void closeCloseableAndReportAnyException(java.io.Closeable)>(r12);

        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void closeCloseableAndReportAnyException(java.io.Closeable)>(r15);

        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void closeCloseableAndReportAnyException(java.io.Closeable)>(r17);

        goto label28;

     label26:
        $r52 := @caughtexception;

        r20 = $r52;

     label27:
        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void closeAssetFileDescriptorAndReportAnyException(android.content.res.AssetFileDescriptor)>(r16);

        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void closeCloseableAndReportAnyException(java.io.Closeable)>(r10);

        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void closeCloseableAndReportAnyException(java.io.Closeable)>(r13);

        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void closeCloseableAndReportAnyException(java.io.Closeable)>(r12);

        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void closeCloseableAndReportAnyException(java.io.Closeable)>(r15);

        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void closeCloseableAndReportAnyException(java.io.Closeable)>(r17);

        throw r20;

     label28:
        i12 = i12 + 1;

        goto label09;

     label29:
        $r22 = <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r22, "Could not copy a word list. Will not be able to use it.");

        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: boolean reportBrokenFileToDictionaryProvider(android.content.ContentProviderClient,java.lang.String,java.lang.String)>(r3, r5, r0);

        return;

        catch android.os.RemoteException from label01 to label02 with label03;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.lang.Exception from label10 to label11 with label24;
        catch java.lang.Exception from label12 to label23 with label24;
        catch java.lang.Throwable from label10 to label11 with label26;
        catch java.lang.Throwable from label12 to label23 with label26;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label26 to label27 with label26;
    }

    public static boolean reportBrokenFileToDictionaryProvider(android.content.ContentProviderClient, java.lang.String, java.lang.String)
    {
        android.content.ContentProviderClient r0;
        java.lang.String r1, r2, $r6, $r8;
        android.net.Uri$Builder r3;
        android.net.Uri $r5;
        int $i0;
        android.os.RemoteException $r7, r9;

        r0 := @parameter0: android.content.ContentProviderClient;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

     label1:
        r3 = staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: android.net.Uri$Builder getContentUriBuilderForType(java.lang.String,android.content.ContentProviderClient,java.lang.String,java.lang.String)>(r1, r0, "datafile", r2);

        virtualinvoke r3.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("result", "failure");

        $r5 = virtualinvoke r3.<android.net.Uri$Builder: android.net.Uri build()>();

        $i0 = virtualinvoke r0.<android.content.ContentProviderClient: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r5, null, null);

        if 0 < $i0 goto label2;

        $r6 = <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r6, "Unable to delete a word list.");

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r9 = $r7;

        $r8 = <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r8, "Communication with the dictionary provider was cut", r9);

        return 0;

     label4:
        return 1;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private static void closeAssetFileDescriptorAndReportAnyException(android.content.res.AssetFileDescriptor)
    {
        android.content.res.AssetFileDescriptor r0;
        java.lang.Exception r1, $r2;
        java.lang.String $r3;

        r0 := @parameter0: android.content.res.AssetFileDescriptor;

     label1:
        if null == r0 goto label2;

        virtualinvoke r0.<android.content.res.AssetFileDescriptor: void close()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        $r3 = <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Exception while closing a file", r1);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static void closeCloseableAndReportAnyException(java.io.Closeable)
    {
        java.io.Closeable r0;
        java.lang.Exception r1, $r2;
        java.lang.String $r3;

        r0 := @parameter0: java.io.Closeable;

     label1:
        if null == r0 goto label2;

        interfaceinvoke r0.<java.io.Closeable: void close()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        $r3 = <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Exception while closing a file", r1);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void cacheWordListsFromContentProvider(java.util.Locale, android.content.Context, boolean)
    {
        java.util.Locale r0;
        android.content.Context r1;
        boolean z0, $z1;
        android.content.ContentProviderClient r2;
        java.lang.SecurityException r3, $r16;
        java.util.Iterator r4;
        com.android.inputmethod.latin.WordListInfo r5;
        java.lang.Throwable r6, $r17;
        android.content.ContentResolver $r7;
        android.net.Uri$Builder $r8;
        android.net.Uri $r9;
        java.lang.String $r10, $r12, $r13, $r14, $r15;
        java.lang.Object $r11;
        java.util.List r18;

        r0 := @parameter0: java.util.Locale;

        r1 := @parameter1: android.content.Context;

        z0 := @parameter2: boolean;

     label01:
        $r7 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r8 = staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: android.net.Uri$Builder getProviderUriBuilder(java.lang.String)>("");

        $r9 = virtualinvoke $r8.<android.net.Uri$Builder: android.net.Uri build()>();

        r2 = virtualinvoke $r7.<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(android.net.Uri)>($r9);

     label02:
        goto label04;

     label03:
        $r16 := @caughtexception;

        r3 = $r16;

        $r15 = <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r15, "No permission to communicate with the dictionary provider", r3);

        return;

     label04:
        if null != r2 goto label05;

        $r14 = <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r14, "Can\'t establish communication with the dictionary provider");

        return;

     label05:
        r18 = staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.util.List getWordListWordListInfos(java.util.Locale,android.content.Context,boolean)>(r0, r1, z0);

        r4 = interfaceinvoke r18.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.inputmethod.latin.WordListInfo) $r11;

        $r12 = r5.<com.android.inputmethod.latin.WordListInfo: java.lang.String mId>;

        $r13 = r5.<com.android.inputmethod.latin.WordListInfo: java.lang.String mLocale>;

        $r10 = r5.<com.android.inputmethod.latin.WordListInfo: java.lang.String mRawChecksum>;

        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void cacheWordList(java.lang.String,java.lang.String,java.lang.String,android.content.ContentProviderClient,android.content.Context)>($r12, $r13, $r10, r2, r1);

        goto label06;

     label07:
        virtualinvoke r2.<android.content.ContentProviderClient: boolean release()>();

        goto label10;

     label08:
        $r17 := @caughtexception;

        r6 = $r17;

     label09:
        virtualinvoke r2.<android.content.ContentProviderClient: boolean release()>();

        throw r6;

     label10:
        return;

        catch java.lang.SecurityException from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public static void checkMagicAndCopyFileTo(java.io.BufferedInputStream, java.io.BufferedOutputStream) throws java.io.FileNotFoundException, java.io.IOException
    {
        java.io.BufferedInputStream r0;
        java.io.BufferedOutputStream r1;
        int i0, i1, i2;
        byte[] r2, r3, $r4, $r5, $r6;
        boolean $z0, $z1;
        java.io.IOException $r7, $r8;

        r0 := @parameter0: java.io.BufferedInputStream;

        r1 := @parameter1: java.io.BufferedOutputStream;

        $r4 = <com.android.inputmethod.latin.BinaryDictionaryFileDumper: byte[] MAGIC_NUMBER_VERSION_2>;

        i0 = lengthof $r4;

        r2 = newarray (byte)[i0];

        i1 = virtualinvoke r0.<java.io.BufferedInputStream: int read(byte[],int,int)>(r2, 0, i0);

        if i1 >= i0 goto label1;

        $r8 = new java.io.IOException;

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("Less bytes to read than the magic number length");

        throw $r8;

     label1:
        $r5 = <com.android.inputmethod.latin.BinaryDictionaryFileDumper: byte[] MAGIC_NUMBER_VERSION_2>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r5, r2);

        if $z0 != 0 goto label2;

        $r6 = <com.android.inputmethod.latin.BinaryDictionaryFileDumper: byte[] MAGIC_NUMBER_VERSION_1>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r6, r2);

        if $z1 != 0 goto label2;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("Wrong magic number for downloaded file");

        throw $r7;

     label2:
        virtualinvoke r1.<java.io.BufferedOutputStream: void write(byte[])>(r2);

        r3 = newarray (byte)[8192];

        i2 = virtualinvoke r0.<java.io.BufferedInputStream: int read(byte[])>(r3);

     label3:
        if i2 < 0 goto label4;

        virtualinvoke r1.<java.io.BufferedOutputStream: void write(byte[],int,int)>(r3, 0, i2);

        i2 = virtualinvoke r0.<java.io.BufferedInputStream: int read(byte[])>(r3);

        goto label3;

     label4:
        virtualinvoke r0.<java.io.BufferedInputStream: void close()>();

        return;
    }

    private static void reinitializeClientRecordInDictionaryContentProvider(android.content.Context, android.content.ContentProviderClient, java.lang.String) throws android.os.RemoteException
    {
        android.content.Context r0;
        android.content.ContentProviderClient r1;
        java.lang.String r2, r3, r4, $r20;
        android.net.Uri r5, r7, $r19;
        android.content.ContentValues r6, $r13, $r22;
        java.util.ArrayList r8;
        int i0, i1;
        com.android.inputmethod.latin.utils.DictionaryInfoUtils$DictionaryInfo r9;
        android.net.Uri$Builder $r10, $r11, $r12, $r14, $r16, $r17;
        java.lang.Object $r18;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.ContentProviderClient;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <com.android.inputmethod.latin.utils.MetadataFileUriGetter: java.lang.String getMetadataUri(android.content.Context)>(r0);

        r4 = staticinvoke <com.android.inputmethod.latin.utils.MetadataFileUriGetter: java.lang.String getMetadataAdditionalId(android.content.Context)>(r0);

        $r10 = staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: android.net.Uri$Builder getProviderUriBuilder(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("metadata");

        $r12 = virtualinvoke $r11.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("protocol", "2");

        r5 = virtualinvoke $r12.<android.net.Uri$Builder: android.net.Uri build()>();

        virtualinvoke r1.<android.content.ContentProviderClient: int delete(android.net.Uri,java.lang.String,java.lang.String[])>(r5, null, null);

        $r13 = new android.content.ContentValues;

        specialinvoke $r13.<android.content.ContentValues: void <init>()>();

        r6 = $r13;

        virtualinvoke r6.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("clientid", r2);

        virtualinvoke r6.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("uri", r3);

        virtualinvoke r6.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("additionalid", r4);

        virtualinvoke r1.<android.content.ContentProviderClient: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>(r5, r6);

        $r14 = staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: android.net.Uri$Builder getProviderUriBuilder(java.lang.String)>(r2);

        $r17 = virtualinvoke $r14.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("dict");

        $r16 = virtualinvoke $r17.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("protocol", "2");

        r7 = virtualinvoke $r16.<android.net.Uri$Builder: android.net.Uri build()>();

        r8 = staticinvoke <com.android.inputmethod.latin.utils.DictionaryInfoUtils: java.util.ArrayList getCurrentDictionaryFileNameAndVersionInfo(android.content.Context)>(r0);

        i0 = virtualinvoke r8.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r18 = virtualinvoke r8.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r9 = (com.android.inputmethod.latin.utils.DictionaryInfoUtils$DictionaryInfo) $r18;

        $r20 = r9.<com.android.inputmethod.latin.utils.DictionaryInfoUtils$DictionaryInfo: java.lang.String mId>;

        $r19 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>(r7, $r20);

        $r22 = virtualinvoke r9.<com.android.inputmethod.latin.utils.DictionaryInfoUtils$DictionaryInfo: android.content.ContentValues toContentValues()>();

        virtualinvoke r1.<android.content.ContentProviderClient: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r19, $r22);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static void initializeClientRecordHelper(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, $r7;
        android.content.ContentProviderClient r2;
        android.content.ContentResolver $r3;
        android.net.Uri$Builder $r4;
        android.net.Uri $r5;
        android.os.RemoteException $r6, r8;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

     label1:
        $r3 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: android.net.Uri$Builder getProviderUriBuilder(java.lang.String)>("");

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri build()>();

        r2 = virtualinvoke $r3.<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(android.net.Uri)>($r5);

        if null != r2 goto label3;

     label2:
        return;

     label3:
        staticinvoke <com.android.inputmethod.latin.BinaryDictionaryFileDumper: void reinitializeClientRecordInDictionaryContentProvider(android.content.Context,android.content.ContentProviderClient,java.lang.String)>(r0, r2, r1);

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;

        r8 = $r6;

        $r7 = <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r7, "Cannot contact the dictionary content provider", r8);

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        byte[] $r2, $r3;
        java.lang.String[] $r4;

        <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String INSERT_METADATA_METADATA_ADDITIONAL_ID_COLUMN> = "additionalid";

        <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String INSERT_METADATA_METADATA_URI_COLUMN> = "uri";

        <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String INSERT_METADATA_CLIENT_ID_COLUMN> = "clientid";

        <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String QUERY_PATH_METADATA> = "metadata";

        <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String QUERY_PATH_DATAFILE> = "datafile";

        <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String QUERY_PATH_DICT_INFO> = "dict";

        <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String QUERY_PARAMETER_PROTOCOL_VALUE> = "2";

        <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String QUERY_PARAMETER_PROTOCOL> = "protocol";

        <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String QUERY_PARAMETER_FAILURE> = "failure";

        <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String QUERY_PARAMETER_SUCCESS> = "success";

        <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String QUERY_PARAMETER_DELETE_RESULT> = "result";

        <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String QUERY_PARAMETER_TRUE> = "true";

        <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String QUERY_PARAMETER_MAY_PROMPT_USER> = "mayPrompt";

        <com.android.inputmethod.latin.BinaryDictionaryFileDumper: int FILE_READ_BUFFER_SIZE> = 8192;

        <com.android.inputmethod.latin.BinaryDictionaryFileDumper: boolean DEBUG> = 0;

        $r0 = class "com/android/inputmethod/latin/BinaryDictionaryFileDumper";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String TAG> = $r1;

        $r2 = newarray (byte)[4];

        $r2[0] = 120;

        $r2[1] = -79;

        $r2[2] = 0;

        $r2[3] = 0;

        <com.android.inputmethod.latin.BinaryDictionaryFileDumper: byte[] MAGIC_NUMBER_VERSION_1> = $r2;

        $r3 = newarray (byte)[4];

        $r3[0] = -101;

        $r3[1] = -63;

        $r3[2] = 58;

        $r3[3] = -2;

        <com.android.inputmethod.latin.BinaryDictionaryFileDumper: byte[] MAGIC_NUMBER_VERSION_2> = $r3;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = "id";

        <com.android.inputmethod.latin.BinaryDictionaryFileDumper: java.lang.String[] DICTIONARY_PROJECTION> = $r4;

        return;
    }
}
