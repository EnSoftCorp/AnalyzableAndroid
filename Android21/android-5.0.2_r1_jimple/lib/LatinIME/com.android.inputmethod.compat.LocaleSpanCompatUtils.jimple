public final class com.android.inputmethod.compat.LocaleSpanCompatUtils extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final java.lang.Class LOCALE_SPAN_TYPE;
    private static final java.lang.reflect.Constructor LOCALE_SPAN_CONSTRUCTOR;
    private static final java.lang.reflect.Method LOCALE_SPAN_GET_LOCALE;

    public void <init>()
    {
        com.android.inputmethod.compat.LocaleSpanCompatUtils r0;

        r0 := @this: com.android.inputmethod.compat.LocaleSpanCompatUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.Class getLocaleSpanClass()
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.text.style.LocaleSpan");

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        return null;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static boolean isLocaleSpanAvailable()
    {
        java.lang.reflect.Constructor $r0;
        java.lang.reflect.Method $r1;
        boolean $z0;

        $r0 = <com.android.inputmethod.compat.LocaleSpanCompatUtils: java.lang.reflect.Constructor LOCALE_SPAN_CONSTRUCTOR>;

        if $r0 == null goto label1;

        $r1 = <com.android.inputmethod.compat.LocaleSpanCompatUtils: java.lang.reflect.Method LOCALE_SPAN_GET_LOCALE>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static java.lang.Object newLocaleSpan(java.util.Locale)
    {
        java.util.Locale r0;
        java.lang.Object[] $r1;
        java.lang.reflect.Constructor $r2;
        java.lang.Object $r3;

        r0 := @parameter0: java.util.Locale;

        $r2 = <com.android.inputmethod.compat.LocaleSpanCompatUtils: java.lang.reflect.Constructor LOCALE_SPAN_CONSTRUCTOR>;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r0;

        $r3 = staticinvoke <com.android.inputmethod.compat.CompatUtils: java.lang.Object newInstance(java.lang.reflect.Constructor,java.lang.Object[])>($r2, $r1);

        return $r3;
    }

    public static java.util.Locale getLocaleFromLocaleSpan(java.lang.Object)
    {
        java.lang.Object r0, $r3;
        java.lang.Object[] $r1;
        java.lang.reflect.Method $r2;
        java.util.Locale $r4;

        r0 := @parameter0: java.lang.Object;

        $r2 = <com.android.inputmethod.compat.LocaleSpanCompatUtils: java.lang.reflect.Method LOCALE_SPAN_GET_LOCALE>;

        $r1 = newarray (java.lang.Object)[0];

        $r3 = staticinvoke <com.android.inputmethod.compat.CompatUtils: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>(r0, null, $r2, $r1);

        $r4 = (java.util.Locale) $r3;

        return $r4;
    }

    public static void updateLocaleSpan(android.text.Spannable, int, int, java.util.Locale)
    {
        android.text.Spannable r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, i19;
        java.util.Locale r1, r6;
        java.lang.Object[] r2, r4;
        java.util.ArrayList r3, $r8;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object r5, $r9, r24;
        java.lang.Class $r7;
        java.lang.StringBuilder $r10, $r12, $r13, $r14, $r15, $r17, $r19, $r20, $r21, $r22;
        java.lang.String $r11, $r16, $r18, $r23;

        r0 := @parameter0: android.text.Spannable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.util.Locale;

        if i1 >= i0 goto label01;

        $r16 = <com.android.inputmethod.compat.LocaleSpanCompatUtils: java.lang.String TAG>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid range: start=");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end=");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r16, $r23);

        return;

     label01:
        $z2 = staticinvoke <com.android.inputmethod.compat.LocaleSpanCompatUtils: boolean isLocaleSpanAvailable()>();

        if $z2 != 0 goto label02;

        return;

     label02:
        $i11 = i0 - 1;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>($i11, 0);

        $i12 = i1 + 1;

        $i13 = interfaceinvoke r0.<android.text.Spannable: int length()>();

        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i12, $i13);

        $r7 = <com.android.inputmethod.compat.LocaleSpanCompatUtils: java.lang.Class LOCALE_SPAN_TYPE>;

        r2 = interfaceinvoke r0.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i2, i3, $r7);

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r3 = $r8;

        z0 = 1;

        z1 = 1;

        i4 = i0;

        i5 = i1;

        r4 = r2;

        i6 = lengthof r4;

        i7 = 0;

     label03:
        if i7 >= i6 goto label14;

        r5 = r4[i7];

        r6 = staticinvoke <com.android.inputmethod.compat.LocaleSpanCompatUtils: java.util.Locale getLocaleFromLocaleSpan(java.lang.Object)>(r5);

        $z4 = virtualinvoke r1.<java.util.Locale: boolean equals(java.lang.Object)>(r6);

        if $z4 != 0 goto label04;

        staticinvoke <com.android.inputmethod.compat.LocaleSpanCompatUtils: void removeLocaleSpanFromRange(java.lang.Object,android.text.Spannable,int,int)>(r5, r0, i0, i1);

        goto label13;

     label04:
        i8 = interfaceinvoke r0.<android.text.Spannable: int getSpanStart(java.lang.Object)>(r5);

        i10 = interfaceinvoke r0.<android.text.Spannable: int getSpanEnd(java.lang.Object)>(r5);

        if i10 >= i8 goto label05;

        $r11 = <com.android.inputmethod.compat.LocaleSpanCompatUtils: java.lang.String TAG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid span: spanStart=");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" spanEnd=");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r18 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r11, $r18);

        goto label13;

     label05:
        if i10 < i0 goto label13;

        if i1 >= i8 goto label06;

        goto label13;

     label06:
        i9 = interfaceinvoke r0.<android.text.Spannable: int getSpanFlags(java.lang.Object)>(r5);

        if i8 >= i4 goto label09;

        i4 = i8;

        $i16 = i9 & 33;

        if $i16 != 33 goto label07;

        $z6 = 1;

        goto label08;

     label07:
        $z6 = 0;

     label08:
        z0 = $z6;

     label09:
        if i5 >= i10 goto label12;

        i5 = i10;

        $i15 = i9 & 33;

        if $i15 != 33 goto label10;

        $z5 = 1;

        goto label11;

     label10:
        $z5 = 0;

     label11:
        z1 = $z5;

     label12:
        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label13:
        i7 = i7 + 1;

        goto label03;

     label14:
        i17 = 0;

        $z3 = virtualinvoke r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z3 == 0 goto label15;

        r24 = staticinvoke <com.android.inputmethod.compat.LocaleSpanCompatUtils: java.lang.Object newLocaleSpan(java.util.Locale)>(r1);

        goto label17;

     label15:
        r24 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(0);

        i17 = interfaceinvoke r0.<android.text.Spannable: int getSpanFlags(java.lang.Object)>(r24);

        i18 = 1;

     label16:
        $i14 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i18 >= $i14 goto label17;

        $r9 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i18);

        interfaceinvoke r0.<android.text.Spannable: void removeSpan(java.lang.Object)>($r9);

        i18 = i18 + 1;

        goto label16;

     label17:
        i19 = staticinvoke <com.android.inputmethod.compat.LocaleSpanCompatUtils: int getSpanFlag(int,boolean,boolean)>(i17, z0, z1);

        interfaceinvoke r0.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>(r24, i4, i5, i19);

        return;
    }

    private static void removeLocaleSpanFromRange(java.lang.Object, android.text.Spannable, int, int)
    {
        java.lang.Object r0, r3;
        android.text.Spannable r1;
        int i0, i1, i2, i3, i4;
        java.util.Locale r2;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r10;
        java.lang.String $r6, $r9;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: android.text.Spannable;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $z0 = staticinvoke <com.android.inputmethod.compat.LocaleSpanCompatUtils: boolean isLocaleSpanAvailable()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        i2 = interfaceinvoke r1.<android.text.Spannable: int getSpanStart(java.lang.Object)>(r0);

        i3 = interfaceinvoke r1.<android.text.Spannable: int getSpanEnd(java.lang.Object)>(r0);

        if i2 <= i3 goto label2;

        $r6 = <com.android.inputmethod.compat.LocaleSpanCompatUtils: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid span: spanStart=");

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" spanEnd=");

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r6, $r9);

        return;

     label2:
        if i3 >= i0 goto label3;

        return;

     label3:
        if i1 >= i2 goto label4;

        return;

     label4:
        i4 = interfaceinvoke r1.<android.text.Spannable: int getSpanFlags(java.lang.Object)>(r0);

        if i2 >= i0 goto label6;

        if i1 >= i3 goto label5;

        r2 = staticinvoke <com.android.inputmethod.compat.LocaleSpanCompatUtils: java.util.Locale getLocaleFromLocaleSpan(java.lang.Object)>(r0);

        interfaceinvoke r1.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>(r0, i2, i0, i4);

        r3 = staticinvoke <com.android.inputmethod.compat.LocaleSpanCompatUtils: java.lang.Object newLocaleSpan(java.util.Locale)>(r2);

        interfaceinvoke r1.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>(r3, i1, i3, i4);

        return;

     label5:
        interfaceinvoke r1.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>(r0, i2, i0, i4);

        return;

     label6:
        if i1 >= i3 goto label7;

        interfaceinvoke r1.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>(r0, i1, i3, i4);

        return;

     label7:
        interfaceinvoke r1.<android.text.Spannable: void removeSpan(java.lang.Object)>(r0);

        return;
    }

    private static int getSpanFlag(int, boolean, boolean)
    {
        int i0, $i1, $i2, $i3;
        boolean z0, z1;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $i1 = i0 & -52;

        $i2 = staticinvoke <com.android.inputmethod.compat.LocaleSpanCompatUtils: int getSpanPointMarkFlag(boolean,boolean)>(z0, z1);

        $i3 = $i1 | $i2;

        return $i3;
    }

    private static int getSpanPointMarkFlag(boolean, boolean)
    {
        boolean z0, z1;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        if z0 == 0 goto label2;

        if z1 == 0 goto label1;

        return 33;

     label1:
        return 34;

     label2:
        if z1 == 0 goto label3;

        return 17;

     label3:
        return 18;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r2, $r4, $r7;
        java.lang.String $r1;
        java.lang.Class[] $r3, $r6;
        java.lang.reflect.Constructor $r5;
        java.lang.reflect.Method $r8;

        $r0 = class "com/android/inputmethod/compat/LocaleSpanCompatUtils";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.inputmethod.compat.LocaleSpanCompatUtils: java.lang.String TAG> = $r1;

        $r2 = staticinvoke <com.android.inputmethod.compat.LocaleSpanCompatUtils: java.lang.Class getLocaleSpanClass()>();

        <com.android.inputmethod.compat.LocaleSpanCompatUtils: java.lang.Class LOCALE_SPAN_TYPE> = $r2;

        $r4 = <com.android.inputmethod.compat.LocaleSpanCompatUtils: java.lang.Class LOCALE_SPAN_TYPE>;

        $r3 = newarray (java.lang.Class)[1];

        $r3[0] = class "java/util/Locale";

        $r5 = staticinvoke <com.android.inputmethod.compat.CompatUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])>($r4, $r3);

        <com.android.inputmethod.compat.LocaleSpanCompatUtils: java.lang.reflect.Constructor LOCALE_SPAN_CONSTRUCTOR> = $r5;

        $r7 = <com.android.inputmethod.compat.LocaleSpanCompatUtils: java.lang.Class LOCALE_SPAN_TYPE>;

        $r6 = newarray (java.lang.Class)[0];

        $r8 = staticinvoke <com.android.inputmethod.compat.CompatUtils: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r7, "getLocale", $r6);

        <com.android.inputmethod.compat.LocaleSpanCompatUtils: java.lang.reflect.Method LOCALE_SPAN_GET_LOCALE> = $r8;

        return;
    }
}
