public final class com.android.inputmethod.compat.CompatUtils extends java.lang.Object
{
    private static final java.lang.String TAG;

    private void <init>()
    {
        com.android.inputmethod.compat.CompatUtils r0;

        r0 := @this: com.android.inputmethod.compat.CompatUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Class getClass(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Class $r2;
        java.lang.ClassNotFoundException $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        return null;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static transient java.lang.reflect.Method getMethod(java.lang.Class, java.lang.String, java.lang.Class[])
    {
        java.lang.Class r0;
        java.lang.String r1;
        java.lang.Class[] r2;
        boolean $z0;
        java.lang.reflect.Method $r4;
        java.lang.Exception $r5;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Class[];

        if r0 == null goto label1;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        $r4 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(r1, r2);

     label3:
        return $r4;

     label4:
        $r5 := @caughtexception;

        return null;

        catch java.lang.SecurityException from label2 to label3 with label4;
        catch java.lang.NoSuchMethodException from label2 to label3 with label4;
    }

    public static java.lang.reflect.Field getField(java.lang.Class, java.lang.String)
    {
        java.lang.Class r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.reflect.Field $r3;
        java.lang.Exception $r4;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(r1);

     label3:
        return $r3;

     label4:
        $r4 := @caughtexception;

        return null;

        catch java.lang.SecurityException from label2 to label3 with label4;
        catch java.lang.NoSuchFieldException from label2 to label3 with label4;
    }

    public static transient java.lang.reflect.Constructor getConstructor(java.lang.Class, java.lang.Class[])
    {
        java.lang.Class r0;
        java.lang.Class[] r1;
        java.lang.reflect.Constructor $r3;
        java.lang.Exception $r4;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Class[];

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        return null;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(r1);

     label3:
        return $r3;

     label4:
        $r4 := @caughtexception;

        return null;

        catch java.lang.SecurityException from label2 to label3 with label4;
        catch java.lang.NoSuchMethodException from label2 to label3 with label4;
    }

    public static transient java.lang.Object newInstance(java.lang.reflect.Constructor, java.lang.Object[])
    {
        java.lang.reflect.Constructor r0;
        java.lang.Object[] r1;
        java.lang.Exception r2, $r4;
        java.lang.Object $r3;
        java.lang.String $r5;

        r0 := @parameter0: java.lang.reflect.Constructor;

        r1 := @parameter1: java.lang.Object[];

        if r0 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r0.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = <com.android.inputmethod.compat.CompatUtils: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Exception in newInstance", r2);

        return null;

        catch java.lang.InstantiationException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }

    public static transient java.lang.Object invoke(java.lang.Object, java.lang.Object, java.lang.reflect.Method, java.lang.Object[])
    {
        java.lang.Object r0, r1, $r5;
        java.lang.reflect.Method r2;
        java.lang.Object[] r3;
        java.lang.Exception r4, $r6;
        java.lang.String $r7;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.reflect.Method;

        r3 := @parameter3: java.lang.Object[];

        if r2 != null goto label1;

        return r1;

     label1:
        $r5 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, r3);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        $r7 = <com.android.inputmethod.compat.CompatUtils: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r7, "Exception in invoke", r4);

        return r1;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }

    public static java.lang.Object getFieldValue(java.lang.Object, java.lang.Object, java.lang.reflect.Field)
    {
        java.lang.Object r0, r1, $r4;
        java.lang.reflect.Field r2;
        java.lang.Exception r3, $r5;
        java.lang.String $r6;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.reflect.Field;

        if r2 != null goto label1;

        return r1;

     label1:
        $r4 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        $r6 = <com.android.inputmethod.compat.CompatUtils: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, "Exception in getFieldValue", r3);

        return r1;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public static void setFieldValue(java.lang.Object, java.lang.reflect.Field, java.lang.Object)
    {
        java.lang.Object r0, r2;
        java.lang.reflect.Field r1;
        java.lang.Exception r3, $r4;
        java.lang.String $r5;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.reflect.Field;

        r2 := @parameter2: java.lang.Object;

        if r1 != null goto label1;

        return;

     label1:
        virtualinvoke r1.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(r0, r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

        $r5 = <com.android.inputmethod.compat.CompatUtils: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Exception in setFieldValue", r3);

     label4:
        return;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public static com.android.inputmethod.compat.CompatUtils$ClassWrapper getClassWrapper(java.lang.String)
    {
        java.lang.String r0;
        com.android.inputmethod.compat.CompatUtils$ClassWrapper $r1;
        java.lang.Class $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = new com.android.inputmethod.compat.CompatUtils$ClassWrapper;

        $r2 = staticinvoke <com.android.inputmethod.compat.CompatUtils: java.lang.Class getClass(java.lang.String)>(r0);

        specialinvoke $r1.<com.android.inputmethod.compat.CompatUtils$ClassWrapper: void <init>(java.lang.Class)>($r2);

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "com/android/inputmethod/compat/CompatUtils";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.inputmethod.compat.CompatUtils: java.lang.String TAG> = $r1;

        return;
    }
}
