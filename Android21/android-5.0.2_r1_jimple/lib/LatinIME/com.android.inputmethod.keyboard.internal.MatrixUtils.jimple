public class com.android.inputmethod.keyboard.internal.MatrixUtils extends java.lang.Object
{
    private static final java.lang.String TAG;

    public void <init>()
    {
        com.android.inputmethod.keyboard.internal.MatrixUtils r0;

        r0 := @this: com.android.inputmethod.keyboard.internal.MatrixUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void findPivotAndSwapRow(int, float[][], float[][], int)
    {
        int i0, i1, i2, i3, i5;
        float[][] r0, r1;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8;
        float[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        byte $b4;

        i0 := @parameter0: int;

        r0 := @parameter1: float[][];

        r1 := @parameter2: float[][];

        i1 := @parameter3: int;

        i2 = i0;

        $r2 = r0[i0];

        $f3 = $r2[i0];

        f0 = staticinvoke <java.lang.Math: float abs(float)>($f3);

        i3 = i0 + 1;

     label1:
        if i3 >= i1 goto label3;

        $r11 = r0[i3];

        $f6 = $r11[i0];

        $f7 = staticinvoke <java.lang.Math: float abs(float)>($f6);

        $b4 = f0 cmpg $f7;

        if $b4 >= 0 goto label2;

        i2 = i3;

        $r12 = r0[i3];

        $f8 = $r12[i0];

        f0 = staticinvoke <java.lang.Math: float abs(float)>($f8);

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        if i2 == i0 goto label5;

        i5 = 0;

     label4:
        if i5 >= i1 goto label5;

        $r3 = r0[i2];

        f1 = $r3[i5];

        $r5 = r0[i2];

        $r4 = r0[i0];

        $f4 = $r4[i5];

        $r5[i5] = $f4;

        $r7 = r0[i0];

        $r7[i5] = f1;

        $r6 = r1[i2];

        f2 = $r6[i5];

        $r10 = r1[i2];

        $r8 = r1[i0];

        $f5 = $r8[i5];

        $r10[i5] = $f5;

        $r9 = r1[i0];

        $r9[i5] = f2;

        i5 = i5 + 1;

        goto label4;

     label5:
        return;
    }

    private static void sweep(int, float[][], float[][], int) throws com.android.inputmethod.keyboard.internal.MatrixUtils$MatrixOperationFailedException
    {
        int i0, i1, i2, i3, i5, i6;
        float[][] r0, r1;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13;
        float[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        byte $b4;
        com.android.inputmethod.keyboard.internal.MatrixUtils$MatrixOperationFailedException $r10;

        i0 := @parameter0: int;

        r0 := @parameter1: float[][];

        r1 := @parameter2: float[][];

        i1 := @parameter3: int;

        $r2 = r0[i0];

        f0 = $r2[i0];

        $b4 = f0 cmpl 0.0F;

        if $b4 != 0 goto label1;

        $r10 = new com.android.inputmethod.keyboard.internal.MatrixUtils$MatrixOperationFailedException;

        specialinvoke $r10.<com.android.inputmethod.keyboard.internal.MatrixUtils$MatrixOperationFailedException: void <init>(java.lang.String)>("Inverse failed. Invalid pivot");

        throw $r10;

     label1:
        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        $r8 = r0[i0];

        $f11 = $r8[i2];

        $f10 = $f11 / f0;

        $r8[i2] = $f10;

        $r9 = r1[i0];

        $f12 = $r9[i2];

        $f13 = $f12 / f0;

        $r9[i2] = $f13;

        i2 = i2 + 1;

        goto label2;

     label3:
        i5 = 0;

     label4:
        if i5 >= i1 goto label9;

        $r3 = r0[i5];

        f1 = $r3[i0];

        if i5 == i0 goto label8;

        i3 = i0;

     label5:
        if i3 >= i1 goto label6;

        $r6 = r0[i5];

        $f7 = $r6[i3];

        $r7 = r0[i0];

        $f6 = $r7[i3];

        $f8 = f1 * $f6;

        $f9 = $f7 - $f8;

        $r6[i3] = $f9;

        i3 = i3 + 1;

        goto label5;

     label6:
        i6 = 0;

     label7:
        if i6 >= i1 goto label8;

        $r4 = r1[i5];

        $f4 = $r4[i6];

        $r5 = r1[i0];

        $f2 = $r5[i6];

        $f3 = f1 * $f2;

        $f5 = $f4 - $f3;

        $r4[i6] = $f5;

        i6 = i6 + 1;

        goto label7;

     label8:
        i5 = i5 + 1;

        goto label4;

     label9:
        return;
    }

    public static void inverse(float[][], float[][]) throws com.android.inputmethod.keyboard.internal.MatrixUtils$MatrixOperationFailedException
    {
        float[][] r0, r1;
        int i0, i1, $i2, $i3, $i4, i5;
        float[] $r2, $r4, $r5, $r6;
        com.android.inputmethod.keyboard.internal.MatrixUtils$MatrixOperationFailedException $r3;

        r0 := @parameter0: float[][];

        r1 := @parameter1: float[][];

        i0 = lengthof r0;

        $r2 = r0[0];

        $i2 = lengthof $r2;

        if $i2 != i0 goto label1;

        $i3 = lengthof r1;

        if $i3 != i0 goto label1;

        $r4 = r1[0];

        $i4 = lengthof $r4;

        if $i4 == i0 goto label2;

     label1:
        $r3 = new com.android.inputmethod.keyboard.internal.MatrixUtils$MatrixOperationFailedException;

        specialinvoke $r3.<com.android.inputmethod.keyboard.internal.MatrixUtils$MatrixOperationFailedException: void <init>(java.lang.String)>("--- invalid length. column should be 2 times larger than row.");

        throw $r3;

     label2:
        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        $r5 = r1[i1];

        staticinvoke <java.util.Arrays: void fill(float[],float)>($r5, 0.0F);

        $r6 = r1[i1];

        $r6[i1] = 1.0F;

        i1 = i1 + 1;

        goto label3;

     label4:
        i5 = 0;

     label5:
        if i5 >= i0 goto label6;

        staticinvoke <com.android.inputmethod.keyboard.internal.MatrixUtils: void findPivotAndSwapRow(int,float[][],float[][],int)>(i5, r0, r1, i0);

        staticinvoke <com.android.inputmethod.keyboard.internal.MatrixUtils: void sweep(int,float[][],float[][],int)>(i5, r0, r1, i0);

        i5 = i5 + 1;

        goto label5;

     label6:
        return;
    }

    public static void multiply(float[][], float[][], float[][]) throws com.android.inputmethod.keyboard.internal.MatrixUtils$MatrixOperationFailedException
    {
        float[][] r0, r1, r2;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        float[] $r3, $r4, $r5, $r10, $r13, $r15, $r16, $r17, $r18, $r20;
        com.android.inputmethod.keyboard.internal.MatrixUtils$MatrixOperationFailedException $r6, $r21;
        java.lang.StringBuilder $r7, $r8, $r9, $r11, $r12, $r19, $r22, $r23, $r24, $r25;
        java.lang.String $r14, $r26;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @parameter0: float[][];

        r1 := @parameter1: float[][];

        r2 := @parameter2: float[][];

        $r3 = r0[0];

        $i7 = lengthof $r3;

        $i6 = lengthof r1;

        if $i7 == $i6 goto label1;

        $r21 = new com.android.inputmethod.keyboard.internal.MatrixUtils$MatrixOperationFailedException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--- invalid length for multiply ");

        $r20 = r0[0];

        $i13 = lengthof $r20;

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i12 = lengthof r1;

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<com.android.inputmethod.keyboard.internal.MatrixUtils$MatrixOperationFailedException: void <init>(java.lang.String)>($r26);

        throw $r21;

     label1:
        i0 = lengthof r0;

        $r4 = r0[0];

        i1 = lengthof $r4;

        $r5 = r1[0];

        i2 = lengthof $r5;

        $i8 = lengthof r2;

        if $i8 != i0 goto label2;

        $r13 = r2[0];

        $i11 = lengthof $r13;

        if $i11 == i2 goto label3;

     label2:
        $r6 = new com.android.inputmethod.keyboard.internal.MatrixUtils$MatrixOperationFailedException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--- invalid length of retval ");

        $i9 = lengthof r2;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r10 = r2[0];

        $i10 = lengthof $r10;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.android.inputmethod.keyboard.internal.MatrixUtils$MatrixOperationFailedException: void <init>(java.lang.String)>($r14);

        throw $r6;

     label3:
        i3 = 0;

     label4:
        if i3 >= i0 goto label9;

        $r15 = r2[i3];

        staticinvoke <java.util.Arrays: void fill(float[],float)>($r15, 0.0F);

        i4 = 0;

     label5:
        if i4 >= i2 goto label8;

        i5 = 0;

     label6:
        if i5 >= i1 goto label7;

        $r17 = r2[i3];

        $f1 = $r17[i4];

        $r16 = r0[i3];

        $f3 = $r16[i5];

        $r18 = r1[i5];

        $f0 = $r18[i4];

        $f4 = $f3 * $f0;

        $f2 = $f1 + $f4;

        $r17[i4] = $f2;

        i5 = i5 + 1;

        goto label6;

     label7:
        i4 = i4 + 1;

        goto label5;

     label8:
        i3 = i3 + 1;

        goto label4;

     label9:
        return;
    }

    public static void dump(java.lang.String, float[][])
    {
        java.lang.String r0, $r5, $r8, $r9, $r10, $r12, $r13, $r18;
        float[][] r1;
        int i0, i1, i2, i3;
        java.lang.StringBuilder r2, $r4, $r6, $r7, $r11, $r17;
        float[] $r3, $r14;
        java.lang.Object[] $r15;
        float $f0;
        java.lang.Float $r16;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: float[][];

        $r3 = r1[0];

        i0 = lengthof $r3;

        i1 = lengthof r1;

        $r5 = <com.android.inputmethod.keyboard.internal.MatrixUtils: java.lang.String TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dump matrix: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, $r8);

        $r9 = <com.android.inputmethod.keyboard.internal.MatrixUtils: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r9, "/*---------------------");

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        r2 = $r11;

        i2 = 0;

     label1:
        if i2 >= i1 goto label4;

        virtualinvoke r2.<java.lang.StringBuilder: void setLength(int)>(0);

        i3 = 0;

     label2:
        if i3 >= i0 goto label3;

        $r15 = newarray (java.lang.Object)[1];

        $r14 = r1[i2];

        $f0 = $r14[i3];

        $r16 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r15[0] = $r16;

        $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%4f", $r15);

        $r17 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        i3 = i3 + 1;

        goto label2;

     label3:
        $r12 = <com.android.inputmethod.keyboard.internal.MatrixUtils: java.lang.String TAG>;

        $r13 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r12, $r13);

        i2 = i2 + 1;

        goto label1;

     label4:
        $r10 = <com.android.inputmethod.keyboard.internal.MatrixUtils: java.lang.String TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r10, "---------------------*/");

        return;
    }

    static java.lang.String access$000()
    {
        java.lang.String $r0;

        $r0 = <com.android.inputmethod.keyboard.internal.MatrixUtils: java.lang.String TAG>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "com/android/inputmethod/keyboard/internal/MatrixUtils";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.inputmethod.keyboard.internal.MatrixUtils: java.lang.String TAG> = $r1;

        return;
    }
}
