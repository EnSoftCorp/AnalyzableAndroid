final class com.android.inputmethod.latin.utils.ExecutorUtils$1 extends java.lang.Object implements java.lang.Runnable
{
    final java.util.concurrent.ExecutorService val$executor;

    void <init>(java.util.concurrent.ExecutorService)
    {
        com.android.inputmethod.latin.utils.ExecutorUtils$1 r0;
        java.util.concurrent.ExecutorService r1;

        r0 := @this: com.android.inputmethod.latin.utils.ExecutorUtils$1;

        r1 := @parameter0: java.util.concurrent.ExecutorService;

        r0.<com.android.inputmethod.latin.utils.ExecutorUtils$1: java.util.concurrent.ExecutorService val$executor> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        com.android.inputmethod.latin.utils.ExecutorUtils$1 r0;
        java.util.concurrent.ExecutorService $r1, $r3;
        java.util.concurrent.ConcurrentHashMap $r2;

        r0 := @this: com.android.inputmethod.latin.utils.ExecutorUtils$1;

        $r1 = r0.<com.android.inputmethod.latin.utils.ExecutorUtils$1: java.util.concurrent.ExecutorService val$executor>;

        interfaceinvoke $r1.<java.util.concurrent.ExecutorService: void shutdown()>();

        $r2 = staticinvoke <com.android.inputmethod.latin.utils.ExecutorUtils: java.util.concurrent.ConcurrentHashMap access$000()>();

        $r3 = r0.<com.android.inputmethod.latin.utils.ExecutorUtils$1: java.util.concurrent.ExecutorService val$executor>;

        virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>($r3);

        return;
    }
}
