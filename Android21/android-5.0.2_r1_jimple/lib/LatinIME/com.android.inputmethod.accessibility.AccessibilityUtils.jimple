public final class com.android.inputmethod.accessibility.AccessibilityUtils extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final java.lang.String CLASS;
    private static final java.lang.String PACKAGE;
    private static final com.android.inputmethod.accessibility.AccessibilityUtils sInstance;
    private android.content.Context mContext;
    private android.view.accessibility.AccessibilityManager mAccessibilityManager;
    private android.media.AudioManager mAudioManager;
    private java.lang.String mAutoCorrectionWord;
    private java.lang.String mTypedWord;
    private static final boolean ENABLE_ACCESSIBILITY;

    public static void init(android.content.Context)
    {
        android.content.Context r0;
        com.android.inputmethod.accessibility.AccessibilityUtils $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = <com.android.inputmethod.accessibility.AccessibilityUtils: com.android.inputmethod.accessibility.AccessibilityUtils sInstance>;

        specialinvoke $r1.<com.android.inputmethod.accessibility.AccessibilityUtils: void initInternal(android.content.Context)>(r0);

        return;
    }

    public static com.android.inputmethod.accessibility.AccessibilityUtils getInstance()
    {
        com.android.inputmethod.accessibility.AccessibilityUtils $r0;

        $r0 = <com.android.inputmethod.accessibility.AccessibilityUtils: com.android.inputmethod.accessibility.AccessibilityUtils sInstance>;

        return $r0;
    }

    private void <init>()
    {
        com.android.inputmethod.accessibility.AccessibilityUtils r0;

        r0 := @this: com.android.inputmethod.accessibility.AccessibilityUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private void initInternal(android.content.Context)
    {
        com.android.inputmethod.accessibility.AccessibilityUtils r0;
        android.content.Context r1;
        java.lang.Object $r2, $r4;
        android.view.accessibility.AccessibilityManager $r3;
        android.media.AudioManager $r5;

        r0 := @this: com.android.inputmethod.accessibility.AccessibilityUtils;

        r1 := @parameter0: android.content.Context;

        r0.<com.android.inputmethod.accessibility.AccessibilityUtils: android.content.Context mContext> = r1;

        $r2 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("accessibility");

        $r3 = (android.view.accessibility.AccessibilityManager) $r2;

        r0.<com.android.inputmethod.accessibility.AccessibilityUtils: android.view.accessibility.AccessibilityManager mAccessibilityManager> = $r3;

        $r4 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r5 = (android.media.AudioManager) $r4;

        r0.<com.android.inputmethod.accessibility.AccessibilityUtils: android.media.AudioManager mAudioManager> = $r5;

        return;
    }

    public boolean isAccessibilityEnabled()
    {
        com.android.inputmethod.accessibility.AccessibilityUtils r0;
        android.view.accessibility.AccessibilityManager $r1;
        boolean $z0;

        r0 := @this: com.android.inputmethod.accessibility.AccessibilityUtils;

        $r1 = r0.<com.android.inputmethod.accessibility.AccessibilityUtils: android.view.accessibility.AccessibilityManager mAccessibilityManager>;

        $z0 = virtualinvoke $r1.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        return $z0;
    }

    public boolean isTouchExplorationEnabled()
    {
        com.android.inputmethod.accessibility.AccessibilityUtils r0;
        boolean $z0, $z1, $z2;
        android.view.accessibility.AccessibilityManager $r1;

        r0 := @this: com.android.inputmethod.accessibility.AccessibilityUtils;

        $z0 = virtualinvoke r0.<com.android.inputmethod.accessibility.AccessibilityUtils: boolean isAccessibilityEnabled()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.inputmethod.accessibility.AccessibilityUtils: android.view.accessibility.AccessibilityManager mAccessibilityManager>;

        $z1 = virtualinvoke $r1.<android.view.accessibility.AccessibilityManager: boolean isTouchExplorationEnabled()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public static boolean isTouchExplorationEvent(android.view.MotionEvent)
    {
        android.view.MotionEvent r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r0.<android.view.MotionEvent: int getAction()>();

        if i0 == 9 goto label1;

        if i0 == 10 goto label1;

        if i0 != 7 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean shouldObscureInput(android.view.inputmethod.EditorInfo)
    {
        com.android.inputmethod.accessibility.AccessibilityUtils r0;
        android.view.inputmethod.EditorInfo r1;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.String $r2, $r7;
        android.media.AudioManager $r3, $r4;
        int $i0, $i1;
        android.content.Context $r5;
        android.content.ContentResolver $r6;

        r0 := @this: com.android.inputmethod.accessibility.AccessibilityUtils;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = <com.android.inputmethod.compat.SettingsSecureCompatUtils: java.lang.String ACCESSIBILITY_SPEAK_PASSWORD>;

        if $r2 == null goto label4;

        $r5 = r0.<com.android.inputmethod.accessibility.AccessibilityUtils: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r7 = <com.android.inputmethod.compat.SettingsSecureCompatUtils: java.lang.String ACCESSIBILITY_SPEAK_PASSWORD>;

        $i1 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r6, $r7, 0);

        if $i1 == 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        z0 = $z4;

        if z0 == 0 goto label4;

        return 0;

     label4:
        $r3 = r0.<com.android.inputmethod.accessibility.AccessibilityUtils: android.media.AudioManager mAudioManager>;

        $z1 = virtualinvoke $r3.<android.media.AudioManager: boolean isWiredHeadsetOn()>();

        if $z1 != 0 goto label5;

        $r4 = r0.<com.android.inputmethod.accessibility.AccessibilityUtils: android.media.AudioManager mAudioManager>;

        $z2 = virtualinvoke $r4.<android.media.AudioManager: boolean isBluetoothA2dpOn()>();

        if $z2 == 0 goto label6;

     label5:
        return 0;

     label6:
        $i0 = r1.<android.view.inputmethod.EditorInfo: int inputType>;

        $z3 = staticinvoke <com.android.inputmethod.latin.utils.InputTypeUtils: boolean isPasswordInputType(int)>($i0);

        return $z3;
    }

    public void setAutoCorrection(com.android.inputmethod.latin.SuggestedWords, java.lang.String)
    {
        com.android.inputmethod.accessibility.AccessibilityUtils r0;
        com.android.inputmethod.latin.SuggestedWords r1;
        java.lang.String r2, $r3;
        boolean $z0;

        r0 := @this: com.android.inputmethod.accessibility.AccessibilityUtils;

        r1 := @parameter0: com.android.inputmethod.latin.SuggestedWords;

        r2 := @parameter1: java.lang.String;

        $z0 = r1.<com.android.inputmethod.latin.SuggestedWords: boolean mWillAutoCorrect>;

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r1.<com.android.inputmethod.latin.SuggestedWords: java.lang.String getWord(int)>(1);

        r0.<com.android.inputmethod.accessibility.AccessibilityUtils: java.lang.String mAutoCorrectionWord> = $r3;

        r0.<com.android.inputmethod.accessibility.AccessibilityUtils: java.lang.String mTypedWord> = r2;

        goto label2;

     label1:
        r0.<com.android.inputmethod.accessibility.AccessibilityUtils: java.lang.String mAutoCorrectionWord> = null;

        r0.<com.android.inputmethod.accessibility.AccessibilityUtils: java.lang.String mTypedWord> = null;

     label2:
        return;
    }

    public java.lang.String getAutoCorrectionDescription(java.lang.String, boolean)
    {
        com.android.inputmethod.accessibility.AccessibilityUtils r0;
        java.lang.String r1, $r2, $r3, $r4, $r6, $r7, $r9, $r12;
        boolean z0, $z1, $z2;
        java.lang.Object[] $r5, $r10;
        android.content.Context $r8, $r11;

        r0 := @this: com.android.inputmethod.accessibility.AccessibilityUtils;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.inputmethod.accessibility.AccessibilityUtils: java.lang.String mAutoCorrectionWord>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z1 != 0 goto label2;

        $r4 = r0.<com.android.inputmethod.accessibility.AccessibilityUtils: java.lang.String mAutoCorrectionWord>;

        $r3 = r0.<com.android.inputmethod.accessibility.AccessibilityUtils: java.lang.String mTypedWord>;

        $z2 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r4, $r3);

        if $z2 != 0 goto label2;

        if z0 == 0 goto label1;

        $r11 = r0.<com.android.inputmethod.accessibility.AccessibilityUtils: android.content.Context mContext>;

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r1;

        $r12 = virtualinvoke $r11.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(2131362859, $r10);

        return $r12;

     label1:
        $r8 = r0.<com.android.inputmethod.accessibility.AccessibilityUtils: android.content.Context mContext>;

        $r5 = newarray (java.lang.Object)[3];

        $r5[0] = r1;

        $r6 = r0.<com.android.inputmethod.accessibility.AccessibilityUtils: java.lang.String mTypedWord>;

        $r5[1] = $r6;

        $r7 = r0.<com.android.inputmethod.accessibility.AccessibilityUtils: java.lang.String mAutoCorrectionWord>;

        $r5[2] = $r7;

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(2131362858, $r5);

        return $r9;

     label2:
        return r1;
    }

    public void announceForAccessibility(android.view.View, java.lang.CharSequence)
    {
        com.android.inputmethod.accessibility.AccessibilityUtils r0;
        android.view.View r1;
        java.lang.CharSequence r2;
        android.view.accessibility.AccessibilityEvent r3;
        android.view.ViewParent r4;
        android.view.accessibility.AccessibilityManager $r5;
        boolean $z0, $z2;
        java.lang.String $r6, $r7, $r9, $r10;
        long $l0;
        java.util.List $r8;
        int $i1;

        r0 := @this: com.android.inputmethod.accessibility.AccessibilityUtils;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.lang.CharSequence;

        $r5 = r0.<com.android.inputmethod.accessibility.AccessibilityUtils: android.view.accessibility.AccessibilityManager mAccessibilityManager>;

        $z0 = virtualinvoke $r5.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 != 0 goto label1;

        $r10 = <com.android.inputmethod.accessibility.AccessibilityUtils: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r10, "Attempted to speak when accessibility was disabled!");

        return;

     label1:
        r3 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain()>();

        $r6 = <com.android.inputmethod.accessibility.AccessibilityUtils: java.lang.String PACKAGE>;

        virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>($r6);

        $r7 = <com.android.inputmethod.accessibility.AccessibilityUtils: java.lang.String CLASS>;

        virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r7);

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: void setEventTime(long)>($l0);

        virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: void setEnabled(boolean)>(1);

        $r8 = virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r2);

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 16 goto label2;

        virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: void setEventType(int)>(16384);

        goto label3;

     label2:
        virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: void setEventType(int)>(8);

     label3:
        r4 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        if r4 == null goto label4;

        $z2 = r4 instanceof android.view.ViewGroup;

        if $z2 != 0 goto label5;

     label4:
        $r9 = <com.android.inputmethod.accessibility.AccessibilityUtils: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r9, "Failed to obtain ViewParent in announceForAccessibility");

        return;

     label5:
        interfaceinvoke r4.<android.view.ViewParent: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>(r1, r3);

        return;
    }

    public void onStartInputViewInternal(android.view.View, android.view.inputmethod.EditorInfo, boolean)
    {
        com.android.inputmethod.accessibility.AccessibilityUtils r0;
        android.view.View r1;
        android.view.inputmethod.EditorInfo r2;
        boolean z0, $z1;
        java.lang.CharSequence r3;
        android.content.Context $r4;

        r0 := @this: com.android.inputmethod.accessibility.AccessibilityUtils;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.inputmethod.EditorInfo;

        z0 := @parameter2: boolean;

        $z1 = virtualinvoke r0.<com.android.inputmethod.accessibility.AccessibilityUtils: boolean shouldObscureInput(android.view.inputmethod.EditorInfo)>(r2);

        if $z1 == 0 goto label1;

        $r4 = r0.<com.android.inputmethod.accessibility.AccessibilityUtils: android.content.Context mContext>;

        r3 = virtualinvoke $r4.<android.content.Context: java.lang.CharSequence getText(int)>(2131362855);

        virtualinvoke r0.<com.android.inputmethod.accessibility.AccessibilityUtils: void announceForAccessibility(android.view.View,java.lang.CharSequence)>(r1, r3);

     label1:
        return;
    }

    public void requestSendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        com.android.inputmethod.accessibility.AccessibilityUtils r0;
        android.view.accessibility.AccessibilityEvent r1;
        android.view.accessibility.AccessibilityManager $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.inputmethod.accessibility.AccessibilityUtils;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r2 = r0.<com.android.inputmethod.accessibility.AccessibilityUtils: android.view.accessibility.AccessibilityManager mAccessibilityManager>;

        $z0 = virtualinvoke $r2.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.inputmethod.accessibility.AccessibilityUtils: android.view.accessibility.AccessibilityManager mAccessibilityManager>;

        virtualinvoke $r3.<android.view.accessibility.AccessibilityManager: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

     label1:
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r2, $r3, $r5, $r6;
        java.lang.String $r1, $r4, $r8;
        java.lang.Package $r7;
        com.android.inputmethod.accessibility.AccessibilityUtils $r9;

        <com.android.inputmethod.accessibility.AccessibilityUtils: boolean ENABLE_ACCESSIBILITY> = 1;

        $r0 = class "com/android/inputmethod/accessibility/AccessibilityUtils";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.inputmethod.accessibility.AccessibilityUtils: java.lang.String TAG> = $r1;

        $r2 = class "com/android/inputmethod/accessibility/AccessibilityUtils";

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        <com.android.inputmethod.accessibility.AccessibilityUtils: java.lang.String CLASS> = $r4;

        $r5 = class "com/android/inputmethod/accessibility/AccessibilityUtils";

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.Package getPackage()>();

        $r8 = virtualinvoke $r7.<java.lang.Package: java.lang.String getName()>();

        <com.android.inputmethod.accessibility.AccessibilityUtils: java.lang.String PACKAGE> = $r8;

        $r9 = new com.android.inputmethod.accessibility.AccessibilityUtils;

        specialinvoke $r9.<com.android.inputmethod.accessibility.AccessibilityUtils: void <init>()>();

        <com.android.inputmethod.accessibility.AccessibilityUtils: com.android.inputmethod.accessibility.AccessibilityUtils sInstance> = $r9;

        return;
    }
}
