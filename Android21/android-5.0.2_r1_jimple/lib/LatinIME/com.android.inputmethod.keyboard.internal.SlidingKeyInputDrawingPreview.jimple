public final class com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview extends com.android.inputmethod.keyboard.internal.AbstractDrawingPreview
{
    private final float mPreviewBodyRadius;
    private boolean mShowsSlidingKeyInputPreview;
    private final int[] mPreviewFrom;
    private final int[] mPreviewTo;
    private final com.android.inputmethod.keyboard.internal.RoundedLine mRoundedLine;
    private final android.graphics.Paint mPaint;

    public void <init>(android.content.res.TypedArray)
    {
        com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview r0;
        android.content.res.TypedArray r1;
        int i0, i2, $i3;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7;
        int[] $r2, $r3;
        com.android.inputmethod.keyboard.internal.RoundedLine $r4;
        android.graphics.Paint $r5, $r6, $r7;

        r0 := @this: com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview;

        r1 := @parameter0: android.content.res.TypedArray;

        specialinvoke r0.<com.android.inputmethod.keyboard.internal.AbstractDrawingPreview: void <init>()>();

        $r2 = staticinvoke <com.android.inputmethod.latin.utils.CoordinateUtils: int[] newInstance()>();

        r0.<com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview: int[] mPreviewFrom> = $r2;

        $r3 = staticinvoke <com.android.inputmethod.latin.utils.CoordinateUtils: int[] newInstance()>();

        r0.<com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview: int[] mPreviewTo> = $r3;

        $r4 = new com.android.inputmethod.keyboard.internal.RoundedLine;

        specialinvoke $r4.<com.android.inputmethod.keyboard.internal.RoundedLine: void <init>()>();

        r0.<com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview: com.android.inputmethod.keyboard.internal.RoundedLine mRoundedLine> = $r4;

        $r5 = new android.graphics.Paint;

        specialinvoke $r5.<android.graphics.Paint: void <init>()>();

        r0.<com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview: android.graphics.Paint mPaint> = $r5;

        i0 = virtualinvoke r1.<android.content.res.TypedArray: int getColor(int,int)>(13, 0);

        $f4 = virtualinvoke r1.<android.content.res.TypedArray: float getDimension(int,float)>(14, 0.0F);

        f0 = $f4 / 2.0F;

        $i3 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(15, 100);

        $f6 = (float) $i3;

        f1 = $f6 / 100.0F;

        $f5 = f0 * f1;

        r0.<com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview: float mPreviewBodyRadius> = $f5;

        i2 = virtualinvoke r1.<android.content.res.TypedArray: int getInt(int,int)>(16, 0);

        if i2 <= 0 goto label1;

        $f7 = (float) i2;

        f2 = $f7 / 100.0F;

        f3 = f0 * f2;

        $r7 = r0.<com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview: android.graphics.Paint mPaint>;

        virtualinvoke $r7.<android.graphics.Paint: void setShadowLayer(float,float,float,int)>(f3, 0.0F, 0.0F, i0);

     label1:
        $r6 = r0.<com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview: android.graphics.Paint mPaint>;

        virtualinvoke $r6.<android.graphics.Paint: void setColor(int)>(i0);

        return;
    }

    public void onDeallocateMemory()
    {
        com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview r0;

        r0 := @this: com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview;

        return;
    }

    public void dismissSlidingKeyInputPreview()
    {
        com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview r0;

        r0 := @this: com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview;

        r0.<com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview: boolean mShowsSlidingKeyInputPreview> = 0;

        virtualinvoke r0.<com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview: void invalidateDrawingView()>();

        return;
    }

    public void drawPreview(android.graphics.Canvas)
    {
        com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview r0;
        android.graphics.Canvas r1;
        float f0, $f1, $f2, $f3, $f4;
        android.graphics.Path r2;
        boolean $z0, $z1;
        int[] $r3, $r5, $r6, $r7;
        com.android.inputmethod.keyboard.internal.RoundedLine $r4;
        int $i0, $i1, $i2, $i3;
        android.graphics.Paint $r8;

        r0 := @this: com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview;

        r1 := @parameter0: android.graphics.Canvas;

        $z0 = virtualinvoke r0.<com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview: boolean isPreviewEnabled()>();

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview: boolean mShowsSlidingKeyInputPreview>;

        if $z1 != 0 goto label2;

     label1:
        return;

     label2:
        f0 = r0.<com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview: float mPreviewBodyRadius>;

        $r4 = r0.<com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview: com.android.inputmethod.keyboard.internal.RoundedLine mRoundedLine>;

        $r3 = r0.<com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview: int[] mPreviewFrom>;

        $i0 = staticinvoke <com.android.inputmethod.latin.utils.CoordinateUtils: int x(int[])>($r3);

        $f1 = (float) $i0;

        $r5 = r0.<com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview: int[] mPreviewFrom>;

        $i1 = staticinvoke <com.android.inputmethod.latin.utils.CoordinateUtils: int y(int[])>($r5);

        $f2 = (float) $i1;

        $r6 = r0.<com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview: int[] mPreviewTo>;

        $i2 = staticinvoke <com.android.inputmethod.latin.utils.CoordinateUtils: int x(int[])>($r6);

        $f3 = (float) $i2;

        $r7 = r0.<com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview: int[] mPreviewTo>;

        $i3 = staticinvoke <com.android.inputmethod.latin.utils.CoordinateUtils: int y(int[])>($r7);

        $f4 = (float) $i3;

        r2 = virtualinvoke $r4.<com.android.inputmethod.keyboard.internal.RoundedLine: android.graphics.Path makePath(float,float,float,float,float,float)>($f1, $f2, f0, $f3, $f4, f0);

        $r8 = r0.<com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r2, $r8);

        return;
    }

    public void setPreviewPosition(com.android.inputmethod.keyboard.PointerTracker)
    {
        com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview r0;
        com.android.inputmethod.keyboard.PointerTracker r1;
        int[] $r2, $r3;

        r0 := @this: com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview;

        r1 := @parameter0: com.android.inputmethod.keyboard.PointerTracker;

        $r2 = r0.<com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview: int[] mPreviewFrom>;

        virtualinvoke r1.<com.android.inputmethod.keyboard.PointerTracker: void getDownCoordinates(int[])>($r2);

        $r3 = r0.<com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview: int[] mPreviewTo>;

        virtualinvoke r1.<com.android.inputmethod.keyboard.PointerTracker: void getLastCoordinates(int[])>($r3);

        r0.<com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview: boolean mShowsSlidingKeyInputPreview> = 1;

        virtualinvoke r0.<com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview: void invalidateDrawingView()>();

        return;
    }
}
