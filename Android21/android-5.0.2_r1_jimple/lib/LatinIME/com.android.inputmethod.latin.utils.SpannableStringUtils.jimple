public final class com.android.inputmethod.latin.utils.SpannableStringUtils extends java.lang.Object
{

    public void <init>()
    {
        com.android.inputmethod.latin.utils.SpannableStringUtils r0;

        r0 := @this: com.android.inputmethod.latin.utils.SpannableStringUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void copyNonParagraphSuggestionSpansFrom(android.text.Spanned, int, int, android.text.Spannable, int)
    {
        android.text.Spanned r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, i12;
        android.text.Spannable r1;
        java.lang.Object[] r2;
        java.lang.Object $r3, $r4, $r5, $r6;

        r0 := @parameter0: android.text.Spanned;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: android.text.Spannable;

        i2 := @parameter4: int;

        r2 = interfaceinvoke r0.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i1, class "android/text/style/SuggestionSpan");

        i3 = 0;

     label1:
        $i7 = lengthof r2;

        if i3 >= $i7 goto label4;

        $r3 = r2[i3];

        i4 = interfaceinvoke r0.<android.text.Spanned: int getSpanFlags(java.lang.Object)>($r3);

        i12 = i4 & -52;

        $r4 = r2[i3];

        i5 = interfaceinvoke r0.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r4);

        $r5 = r2[i3];

        i6 = interfaceinvoke r0.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r5);

        if i5 >= i0 goto label2;

        i5 = i0;

     label2:
        if i6 <= i1 goto label3;

        i6 = i1;

     label3:
        $r6 = r2[i3];

        $i9 = i5 - i0;

        $i10 = $i9 + i2;

        $i8 = i6 - i0;

        $i11 = $i8 + i2;

        interfaceinvoke r1.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r6, $i10, $i11, i12);

        i3 = i3 + 1;

        goto label1;

     label4:
        return;
    }

    public static transient java.lang.CharSequence concatWithNonParagraphSuggestionSpansOnly(java.lang.CharSequence[])
    {
        java.lang.CharSequence[] r0;
        boolean z0, $z1, $z2;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.StringBuilder $r1, r13;
        android.text.SpannableString $r2, r14;
        android.text.SpannedString $r3;
        java.lang.CharSequence $r4, $r5, $r6, $r10, $r11, $r12;
        java.lang.String $r7;
        android.text.Spanned $r8;

        r0 := @parameter0: java.lang.CharSequence[];

        $i5 = lengthof r0;

        if $i5 != 0 goto label01;

        return "";

     label01:
        $i6 = lengthof r0;

        if $i6 != 1 goto label02;

        $r12 = r0[0];

        return $r12;

     label02:
        z0 = 0;

        i0 = 0;

     label03:
        $i7 = lengthof r0;

        if i0 >= $i7 goto label05;

        $r11 = r0[i0];

        $z2 = $r11 instanceof android.text.Spanned;

        if $z2 == 0 goto label04;

        z0 = 1;

        goto label05;

     label04:
        i0 = i0 + 1;

        goto label03;

     label05:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        r13 = $r1;

        i1 = 0;

     label06:
        $i8 = lengthof r0;

        if i1 >= $i8 goto label07;

        $r10 = r0[i1];

        virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r10);

        i1 = i1 + 1;

        goto label06;

     label07:
        if z0 != 0 goto label08;

        $r7 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;

     label08:
        $r2 = new android.text.SpannableString;

        specialinvoke $r2.<android.text.SpannableString: void <init>(java.lang.CharSequence)>(r13);

        r14 = $r2;

        i2 = 0;

        i3 = 0;

     label09:
        $i9 = lengthof r0;

        if i3 >= $i9 goto label11;

        $r4 = r0[i3];

        i4 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        $r5 = r0[i3];

        $z1 = $r5 instanceof android.text.Spanned;

        if $z1 == 0 goto label10;

        $r6 = r0[i3];

        $r8 = (android.text.Spanned) $r6;

        staticinvoke <com.android.inputmethod.latin.utils.SpannableStringUtils: void copyNonParagraphSuggestionSpansFrom(android.text.Spanned,int,int,android.text.Spannable,int)>($r8, 0, i4, r14, i2);

     label10:
        i2 = i2 + i4;

        i3 = i3 + 1;

        goto label09;

     label11:
        $r3 = new android.text.SpannedString;

        specialinvoke $r3.<android.text.SpannedString: void <init>(java.lang.CharSequence)>(r14);

        return $r3;
    }

    public static boolean hasUrlSpans(java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence r0;
        int i0, i1, $i2, $i3, $i4;
        android.text.Spanned r1;
        android.text.style.URLSpan[] r2;
        boolean $z0, $z1;
        java.lang.Object[] $r3;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0 instanceof android.text.Spanned;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (android.text.Spanned) r0;

        $i3 = i0 - 1;

        $i2 = i1 + 1;

        $r3 = interfaceinvoke r1.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i3, $i2, class "android/text/style/URLSpan");

        r2 = (android.text.style.URLSpan[]) $r3;

        if null == r2 goto label2;

        $i4 = lengthof r2;

        if $i4 <= 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }
}
