public final class com.android.inputmethod.latin.Constants extends java.lang.Object
{
    public static final int NOT_A_CODE;
    public static final int NOT_A_CURSOR_POSITION;
    public static final int NOT_A_COORDINATE;
    public static final int SUGGESTION_STRIP_COORDINATE;
    public static final int SPELL_CHECKER_COORDINATE;
    public static final int EXTERNAL_KEYBOARD_COORDINATE;
    public static final int EDITOR_CONTENTS_CACHE_SIZE;
    public static final int MAX_CHARACTERS_FOR_RECAPITALIZATION;
    public static final int DICTIONARY_MAX_WORD_LENGTH;
    public static final int MAX_PREV_WORD_COUNT_FOR_N_GRAM;
    public static final int LONG_PRESS_MILLISECONDS;
    public static final int GET_SUGGESTED_WORDS_TIMEOUT;
    public static final int DELETE_ACCELERATE_AT;
    public static final java.lang.String WORD_SEPARATOR;
    public static final int CUSTOM_CODE_SHOW_INPUT_METHOD_PICKER;
    public static final int CODE_ENTER;
    public static final int CODE_TAB;
    public static final int CODE_SPACE;
    public static final int CODE_PERIOD;
    public static final int CODE_COMMA;
    public static final int CODE_DASH;
    public static final int CODE_SINGLE_QUOTE;
    public static final int CODE_DOUBLE_QUOTE;
    public static final int CODE_QUESTION_MARK;
    public static final int CODE_EXCLAMATION_MARK;
    public static final int CODE_SLASH;
    public static final int CODE_BACKSLASH;
    public static final int CODE_VERTICAL_BAR;
    public static final int CODE_COMMERCIAL_AT;
    public static final int CODE_PLUS;
    public static final int CODE_PERCENT;
    public static final int CODE_CLOSING_PARENTHESIS;
    public static final int CODE_CLOSING_SQUARE_BRACKET;
    public static final int CODE_CLOSING_CURLY_BRACKET;
    public static final int CODE_CLOSING_ANGLE_BRACKET;
    public static final int CODE_INVERTED_QUESTION_MARK;
    public static final int CODE_INVERTED_EXCLAMATION_MARK;
    public static final java.lang.String REGEXP_PERIOD;
    public static final java.lang.String STRING_SPACE;
    public static final java.lang.String STRING_PERIOD_AND_SPACE;
    public static final int CODE_SHIFT;
    public static final int CODE_CAPSLOCK;
    public static final int CODE_SWITCH_ALPHA_SYMBOL;
    public static final int CODE_OUTPUT_TEXT;
    public static final int CODE_DELETE;
    public static final int CODE_SETTINGS;
    public static final int CODE_SHORTCUT;
    public static final int CODE_ACTION_NEXT;
    public static final int CODE_ACTION_PREVIOUS;
    public static final int CODE_LANGUAGE_SWITCH;
    public static final int CODE_EMOJI;
    public static final int CODE_SHIFT_ENTER;
    public static final int CODE_SYMBOL_SHIFT;
    public static final int CODE_ALPHA_FROM_EMOJI;
    public static final int CODE_UNSPECIFIED;
    public static final int MAX_INT_BIT_COUNT;
    public static final int SCREEN_METRICS_SMALL_PHONE;
    public static final int SCREEN_METRICS_LARGE_PHONE;
    public static final int SCREEN_METRICS_LARGE_TABLET;
    public static final int SCREEN_METRICS_SMALL_TABLET;
    public static final int DEFAULT_GESTURE_POINTS_CAPACITY;

    public static boolean isValidCoordinate(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isLetterCode(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 < 32 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static java.lang.String printableCode(int)
    {
        int i0;
        java.lang.Object[] $r0, $r3, $r6, $r9;
        java.lang.Integer $r1, $r4, $r7, $r10;
        java.lang.String $r2, $r5, $r8, $r11;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -15: goto label14;
            case -14: goto label13;
            case -13: goto label18;
            case -12: goto label12;
            case -11: goto label11;
            case -10: goto label10;
            case -9: goto label09;
            case -8: goto label08;
            case -7: goto label07;
            case -6: goto label06;
            case -5: goto label05;
            case -4: goto label04;
            case -3: goto label03;
            case -2: goto label02;
            case -1: goto label01;
            case 0: goto label18;
            case 1: goto label18;
            case 2: goto label18;
            case 3: goto label18;
            case 4: goto label18;
            case 5: goto label18;
            case 6: goto label18;
            case 7: goto label18;
            case 8: goto label18;
            case 9: goto label15;
            case 10: goto label16;
            case 11: goto label18;
            case 12: goto label18;
            case 13: goto label18;
            case 14: goto label18;
            case 15: goto label18;
            case 16: goto label18;
            case 17: goto label18;
            case 18: goto label18;
            case 19: goto label18;
            case 20: goto label18;
            case 21: goto label18;
            case 22: goto label18;
            case 23: goto label18;
            case 24: goto label18;
            case 25: goto label18;
            case 26: goto label18;
            case 27: goto label18;
            case 28: goto label18;
            case 29: goto label18;
            case 30: goto label18;
            case 31: goto label18;
            case 32: goto label17;
            default: goto label18;
        };

     label01:
        return "shift";

     label02:
        return "capslock";

     label03:
        return "symbol";

     label04:
        return "text";

     label05:
        return "delete";

     label06:
        return "settings";

     label07:
        return "shortcut";

     label08:
        return "actionNext";

     label09:
        return "actionPrevious";

     label10:
        return "languageSwitch";

     label11:
        return "emoji";

     label12:
        return "shiftEnter";

     label13:
        return "alpha";

     label14:
        return "unspec";

     label15:
        return "tab";

     label16:
        return "enter";

     label17:
        return "space";

     label18:
        if i0 >= 32 goto label19;

        $r9 = newarray (java.lang.Object)[1];

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r9[0] = $r10;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\\u%02X", $r9);

        return $r11;

     label19:
        if i0 >= 256 goto label20;

        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6[0] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%c", $r6);

        return $r8;

     label20:
        if i0 >= 65536 goto label21;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\\u%04X", $r3);

        return $r5;

     label21:
        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r0[0] = $r1;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\\U%05X", $r0);

        return $r2;
    }

    public static java.lang.String printableCodes(int[])
    {
        int[] r0, r2;
        java.lang.StringBuilder r1, $r3, $r4, $r5, $r6, $r7;
        boolean z0;
        int i0, i1, i2;
        java.lang.String $r8, $r9;

        r0 := @parameter0: int[];

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r1 = $r3;

        z0 = 0;

        r2 = r0;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        i2 = r2[i1];

        if i2 != -1 goto label2;

        goto label4;

     label2:
        if z0 == 0 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label3:
        $r9 = staticinvoke <com.android.inputmethod.latin.Constants: java.lang.String printableCode(int)>(i2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        z0 = 1;

        i1 = i1 + 1;

        goto label1;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private void <init>()
    {
        com.android.inputmethod.latin.Constants r0;

        r0 := @this: com.android.inputmethod.latin.Constants;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.inputmethod.latin.Constants: int DEFAULT_GESTURE_POINTS_CAPACITY> = 128;

        <com.android.inputmethod.latin.Constants: int SCREEN_METRICS_SMALL_TABLET> = 3;

        <com.android.inputmethod.latin.Constants: int SCREEN_METRICS_LARGE_TABLET> = 2;

        <com.android.inputmethod.latin.Constants: int SCREEN_METRICS_LARGE_PHONE> = 1;

        <com.android.inputmethod.latin.Constants: int SCREEN_METRICS_SMALL_PHONE> = 0;

        <com.android.inputmethod.latin.Constants: int MAX_INT_BIT_COUNT> = 32;

        <com.android.inputmethod.latin.Constants: int CODE_UNSPECIFIED> = -15;

        <com.android.inputmethod.latin.Constants: int CODE_ALPHA_FROM_EMOJI> = -14;

        <com.android.inputmethod.latin.Constants: int CODE_SYMBOL_SHIFT> = -13;

        <com.android.inputmethod.latin.Constants: int CODE_SHIFT_ENTER> = -12;

        <com.android.inputmethod.latin.Constants: int CODE_EMOJI> = -11;

        <com.android.inputmethod.latin.Constants: int CODE_LANGUAGE_SWITCH> = -10;

        <com.android.inputmethod.latin.Constants: int CODE_ACTION_PREVIOUS> = -9;

        <com.android.inputmethod.latin.Constants: int CODE_ACTION_NEXT> = -8;

        <com.android.inputmethod.latin.Constants: int CODE_SHORTCUT> = -7;

        <com.android.inputmethod.latin.Constants: int CODE_SETTINGS> = -6;

        <com.android.inputmethod.latin.Constants: int CODE_DELETE> = -5;

        <com.android.inputmethod.latin.Constants: int CODE_OUTPUT_TEXT> = -4;

        <com.android.inputmethod.latin.Constants: int CODE_SWITCH_ALPHA_SYMBOL> = -3;

        <com.android.inputmethod.latin.Constants: int CODE_CAPSLOCK> = -2;

        <com.android.inputmethod.latin.Constants: int CODE_SHIFT> = -1;

        <com.android.inputmethod.latin.Constants: java.lang.String STRING_PERIOD_AND_SPACE> = ". ";

        <com.android.inputmethod.latin.Constants: java.lang.String STRING_SPACE> = " ";

        <com.android.inputmethod.latin.Constants: java.lang.String REGEXP_PERIOD> = "\\.";

        <com.android.inputmethod.latin.Constants: int CODE_INVERTED_EXCLAMATION_MARK> = 161;

        <com.android.inputmethod.latin.Constants: int CODE_INVERTED_QUESTION_MARK> = 191;

        <com.android.inputmethod.latin.Constants: int CODE_CLOSING_ANGLE_BRACKET> = 62;

        <com.android.inputmethod.latin.Constants: int CODE_CLOSING_CURLY_BRACKET> = 125;

        <com.android.inputmethod.latin.Constants: int CODE_CLOSING_SQUARE_BRACKET> = 93;

        <com.android.inputmethod.latin.Constants: int CODE_CLOSING_PARENTHESIS> = 41;

        <com.android.inputmethod.latin.Constants: int CODE_PERCENT> = 37;

        <com.android.inputmethod.latin.Constants: int CODE_PLUS> = 43;

        <com.android.inputmethod.latin.Constants: int CODE_COMMERCIAL_AT> = 64;

        <com.android.inputmethod.latin.Constants: int CODE_VERTICAL_BAR> = 124;

        <com.android.inputmethod.latin.Constants: int CODE_BACKSLASH> = 92;

        <com.android.inputmethod.latin.Constants: int CODE_SLASH> = 47;

        <com.android.inputmethod.latin.Constants: int CODE_EXCLAMATION_MARK> = 33;

        <com.android.inputmethod.latin.Constants: int CODE_QUESTION_MARK> = 63;

        <com.android.inputmethod.latin.Constants: int CODE_DOUBLE_QUOTE> = 34;

        <com.android.inputmethod.latin.Constants: int CODE_SINGLE_QUOTE> = 39;

        <com.android.inputmethod.latin.Constants: int CODE_DASH> = 45;

        <com.android.inputmethod.latin.Constants: int CODE_COMMA> = 44;

        <com.android.inputmethod.latin.Constants: int CODE_PERIOD> = 46;

        <com.android.inputmethod.latin.Constants: int CODE_SPACE> = 32;

        <com.android.inputmethod.latin.Constants: int CODE_TAB> = 9;

        <com.android.inputmethod.latin.Constants: int CODE_ENTER> = 10;

        <com.android.inputmethod.latin.Constants: int CUSTOM_CODE_SHOW_INPUT_METHOD_PICKER> = 1;

        <com.android.inputmethod.latin.Constants: java.lang.String WORD_SEPARATOR> = " ";

        <com.android.inputmethod.latin.Constants: int DELETE_ACCELERATE_AT> = 20;

        <com.android.inputmethod.latin.Constants: int GET_SUGGESTED_WORDS_TIMEOUT> = 200;

        <com.android.inputmethod.latin.Constants: int LONG_PRESS_MILLISECONDS> = 200;

        <com.android.inputmethod.latin.Constants: int MAX_PREV_WORD_COUNT_FOR_N_GRAM> = 2;

        <com.android.inputmethod.latin.Constants: int DICTIONARY_MAX_WORD_LENGTH> = 48;

        <com.android.inputmethod.latin.Constants: int MAX_CHARACTERS_FOR_RECAPITALIZATION> = 102400;

        <com.android.inputmethod.latin.Constants: int EDITOR_CONTENTS_CACHE_SIZE> = 1024;

        <com.android.inputmethod.latin.Constants: int EXTERNAL_KEYBOARD_COORDINATE> = -4;

        <com.android.inputmethod.latin.Constants: int SPELL_CHECKER_COORDINATE> = -3;

        <com.android.inputmethod.latin.Constants: int SUGGESTION_STRIP_COORDINATE> = -2;

        <com.android.inputmethod.latin.Constants: int NOT_A_COORDINATE> = -1;

        <com.android.inputmethod.latin.Constants: int NOT_A_CURSOR_POSITION> = -1;

        <com.android.inputmethod.latin.Constants: int NOT_A_CODE> = -1;

        return;
    }
}
