public final class com.android.inputmethod.keyboard.KeyboardSwitcher extends java.lang.Object implements com.android.inputmethod.keyboard.internal.KeyboardState$SwitchActions
{
    private static final java.lang.String TAG;
    private com.android.inputmethod.latin.SubtypeSwitcher mSubtypeSwitcher;
    private android.content.SharedPreferences mPrefs;
    private com.android.inputmethod.latin.InputView mCurrentInputView;
    private android.view.View mMainKeyboardFrame;
    private com.android.inputmethod.keyboard.MainKeyboardView mKeyboardView;
    private com.android.inputmethod.keyboard.emoji.EmojiPalettesView mEmojiPalettesView;
    private com.android.inputmethod.latin.LatinIME mLatinIME;
    private boolean mIsHardwareAcceleratedDrawingEnabled;
    private com.android.inputmethod.keyboard.internal.KeyboardState mState;
    private com.android.inputmethod.keyboard.KeyboardLayoutSet mKeyboardLayoutSet;
    private final com.android.inputmethod.keyboard.internal.KeyboardTextsSet mKeyboardTextsSet;
    private com.android.inputmethod.keyboard.KeyboardTheme mKeyboardTheme;
    private android.content.Context mThemeContext;
    private static final com.android.inputmethod.keyboard.KeyboardSwitcher sInstance;

    public static com.android.inputmethod.keyboard.KeyboardSwitcher getInstance()
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher $r0;

        $r0 = <com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.KeyboardSwitcher sInstance>;

        return $r0;
    }

    private void <init>()
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        com.android.inputmethod.keyboard.internal.KeyboardTextsSet $r1;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.android.inputmethod.keyboard.internal.KeyboardTextsSet;

        specialinvoke $r1.<com.android.inputmethod.keyboard.internal.KeyboardTextsSet: void <init>()>();

        r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.internal.KeyboardTextsSet mKeyboardTextsSet> = $r1;

        return;
    }

    public static void init(com.android.inputmethod.latin.LatinIME)
    {
        com.android.inputmethod.latin.LatinIME r0;
        android.content.SharedPreferences r1;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r2;

        r0 := @parameter0: com.android.inputmethod.latin.LatinIME;

        r1 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>(r0);

        $r2 = <com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.KeyboardSwitcher sInstance>;

        specialinvoke $r2.<com.android.inputmethod.keyboard.KeyboardSwitcher: void initInternal(com.android.inputmethod.latin.LatinIME,android.content.SharedPreferences)>(r0, r1);

        return;
    }

    private void initInternal(com.android.inputmethod.latin.LatinIME, android.content.SharedPreferences)
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        com.android.inputmethod.latin.LatinIME r1, $r5;
        android.content.SharedPreferences r2;
        com.android.inputmethod.latin.SubtypeSwitcher $r3;
        com.android.inputmethod.keyboard.internal.KeyboardState $r4;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        r1 := @parameter0: com.android.inputmethod.latin.LatinIME;

        r2 := @parameter1: android.content.SharedPreferences;

        r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.latin.LatinIME mLatinIME> = r1;

        r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: android.content.SharedPreferences mPrefs> = r2;

        $r3 = staticinvoke <com.android.inputmethod.latin.SubtypeSwitcher: com.android.inputmethod.latin.SubtypeSwitcher getInstance()>();

        r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.latin.SubtypeSwitcher mSubtypeSwitcher> = $r3;

        $r4 = new com.android.inputmethod.keyboard.internal.KeyboardState;

        specialinvoke $r4.<com.android.inputmethod.keyboard.internal.KeyboardState: void <init>(com.android.inputmethod.keyboard.internal.KeyboardState$SwitchActions)>(r0);

        r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.internal.KeyboardState mState> = $r4;

        $r5 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.latin.LatinIME mLatinIME>;

        $z0 = staticinvoke <com.android.inputmethod.compat.InputMethodServiceCompatUtils: boolean enableHardwareAcceleration(android.inputmethodservice.InputMethodService)>($r5);

        r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: boolean mIsHardwareAcceleratedDrawingEnabled> = $z0;

        return;
    }

    public void updateKeyboardTheme()
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        boolean z0, $z1;
        android.content.SharedPreferences $r1;
        com.android.inputmethod.latin.LatinIME $r2, $r5;
        com.android.inputmethod.keyboard.KeyboardTheme $r3;
        com.android.inputmethod.keyboard.MainKeyboardView $r4;
        android.view.View $r6;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        $r2 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.latin.LatinIME mLatinIME>;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: android.content.SharedPreferences mPrefs>;

        $r3 = staticinvoke <com.android.inputmethod.keyboard.KeyboardTheme: com.android.inputmethod.keyboard.KeyboardTheme getKeyboardTheme(android.content.SharedPreferences)>($r1);

        z0 = specialinvoke r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: boolean updateKeyboardThemeAndContextThemeWrapper(android.content.Context,com.android.inputmethod.keyboard.KeyboardTheme)>($r2, $r3);

        if z0 == 0 goto label1;

        $r4 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView mKeyboardView>;

        if $r4 == null goto label1;

        $r5 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.latin.LatinIME mLatinIME>;

        $z1 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: boolean mIsHardwareAcceleratedDrawingEnabled>;

        $r6 = virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: android.view.View onCreateInputView(boolean)>($z1);

        virtualinvoke $r5.<com.android.inputmethod.latin.LatinIME: void setInputView(android.view.View)>($r6);

     label1:
        return;
    }

    private boolean updateKeyboardThemeAndContextThemeWrapper(android.content.Context, com.android.inputmethod.keyboard.KeyboardTheme)
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        android.content.Context r1, $r3;
        com.android.inputmethod.keyboard.KeyboardTheme r2, $r5;
        android.view.ContextThemeWrapper $r4;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.inputmethod.keyboard.KeyboardTheme;

        $r3 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: android.content.Context mThemeContext>;

        if $r3 == null goto label1;

        $r5 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.KeyboardTheme mKeyboardTheme>;

        $z0 = virtualinvoke r2.<com.android.inputmethod.keyboard.KeyboardTheme: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label2;

     label1:
        r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.KeyboardTheme mKeyboardTheme> = r2;

        $r4 = new android.view.ContextThemeWrapper;

        $i0 = r2.<com.android.inputmethod.keyboard.KeyboardTheme: int mStyleId>;

        specialinvoke $r4.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>(r1, $i0);

        r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: android.content.Context mThemeContext> = $r4;

        staticinvoke <com.android.inputmethod.keyboard.KeyboardLayoutSet: void onKeyboardThemeChanged()>();

        return 1;

     label2:
        return 0;
    }

    public void loadKeyboard(android.view.inputmethod.EditorInfo, com.android.inputmethod.latin.settings.SettingsValues, int, int)
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        android.view.inputmethod.EditorInfo r1;
        com.android.inputmethod.latin.settings.SettingsValues r2;
        int i0, i1, i2, i3;
        com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder r3, $r6;
        android.content.res.Resources r4;
        com.android.inputmethod.keyboard.KeyboardLayoutSet$KeyboardLayoutSetException r5, $r21;
        android.content.Context $r7, $r8, $r22;
        com.android.inputmethod.latin.SubtypeSwitcher $r9, $r17;
        android.view.inputmethod.InputMethodSubtype $r12;
        boolean $z0, $z1;
        com.android.inputmethod.latin.LatinIME $r14;
        com.android.inputmethod.keyboard.KeyboardLayoutSet $r15;
        com.android.inputmethod.keyboard.internal.KeyboardState $r18;
        java.util.Locale $r19;
        com.android.inputmethod.keyboard.internal.KeyboardTextsSet $r20;
        java.lang.StringBuilder $r23, $r25, $r28;
        com.android.inputmethod.keyboard.KeyboardId $r24;
        java.lang.String $r26, $r29;
        java.lang.Throwable $r27;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        r2 := @parameter1: com.android.inputmethod.latin.settings.SettingsValues;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r6 = new com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder;

        $r7 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: android.content.Context mThemeContext>;

        specialinvoke $r6.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: void <init>(android.content.Context,android.view.inputmethod.EditorInfo)>($r7, r1);

        r3 = $r6;

        $r8 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: android.content.Context mThemeContext>;

        r4 = virtualinvoke $r8.<android.content.Context: android.content.res.Resources getResources()>();

        i2 = staticinvoke <com.android.inputmethod.latin.utils.ResourceUtils: int getDefaultKeyboardWidth(android.content.res.Resources)>(r4);

        i3 = staticinvoke <com.android.inputmethod.latin.utils.ResourceUtils: int getDefaultKeyboardHeight(android.content.res.Resources)>(r4);

        virtualinvoke r3.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder setKeyboardGeometry(int,int)>(i2, i3);

        $r9 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.latin.SubtypeSwitcher mSubtypeSwitcher>;

        $r12 = virtualinvoke $r9.<com.android.inputmethod.latin.SubtypeSwitcher: android.view.inputmethod.InputMethodSubtype getCurrentSubtype()>();

        virtualinvoke r3.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder setSubtype(android.view.inputmethod.InputMethodSubtype)>($r12);

        $z0 = r2.<com.android.inputmethod.latin.settings.SettingsValues: boolean mShowsVoiceInputKey>;

        virtualinvoke r3.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder setVoiceInputKeyEnabled(boolean)>($z0);

        $r14 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.latin.LatinIME mLatinIME>;

        $z1 = virtualinvoke $r14.<com.android.inputmethod.latin.LatinIME: boolean shouldShowLanguageSwitchKey()>();

        virtualinvoke r3.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder setLanguageSwitchKeyEnabled(boolean)>($z1);

        $r15 = virtualinvoke r3.<com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder: com.android.inputmethod.keyboard.KeyboardLayoutSet build()>();

        r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.KeyboardLayoutSet mKeyboardLayoutSet> = $r15;

     label1:
        $r18 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.internal.KeyboardState mState>;

        virtualinvoke $r18.<com.android.inputmethod.keyboard.internal.KeyboardState: void onLoadKeyboard(int,int)>(i0, i1);

        $r20 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.internal.KeyboardTextsSet mKeyboardTextsSet>;

        $r17 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.latin.SubtypeSwitcher mSubtypeSwitcher>;

        $r19 = virtualinvoke $r17.<com.android.inputmethod.latin.SubtypeSwitcher: java.util.Locale getCurrentSubtypeLocale()>();

        $r22 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: android.content.Context mThemeContext>;

        virtualinvoke $r20.<com.android.inputmethod.keyboard.internal.KeyboardTextsSet: void setLocale(java.util.Locale,android.content.Context)>($r19, $r22);

     label2:
        goto label4;

     label3:
        $r21 := @caughtexception;

        r5 = $r21;

        $r26 = <com.android.inputmethod.keyboard.KeyboardSwitcher: java.lang.String TAG>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loading keyboard failed: ");

        $r24 = r5.<com.android.inputmethod.keyboard.KeyboardLayoutSet$KeyboardLayoutSetException: com.android.inputmethod.keyboard.KeyboardId mKeyboardId>;

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27 = virtualinvoke r5.<com.android.inputmethod.keyboard.KeyboardLayoutSet$KeyboardLayoutSetException: java.lang.Throwable getCause()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r26, $r29, $r27);

        return;

     label4:
        return;

        catch com.android.inputmethod.keyboard.KeyboardLayoutSet$KeyboardLayoutSetException from label1 to label2 with label3;
    }

    public void saveKeyboardState()
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        com.android.inputmethod.keyboard.Keyboard $r1;
        com.android.inputmethod.keyboard.internal.KeyboardState $r2;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        $r1 = virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.Keyboard getKeyboard()>();

        if $r1 != null goto label1;

        $z0 = virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: boolean isShowingEmojiPalettes()>();

        if $z0 == 0 goto label2;

     label1:
        $r2 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.internal.KeyboardState mState>;

        virtualinvoke $r2.<com.android.inputmethod.keyboard.internal.KeyboardState: void onSaveKeyboardState()>();

     label2:
        return;
    }

    public void onHideWindow()
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        com.android.inputmethod.keyboard.MainKeyboardView $r1, $r2;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView mKeyboardView>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView mKeyboardView>;

        virtualinvoke $r2.<com.android.inputmethod.keyboard.MainKeyboardView: void onHideWindow()>();

     label1:
        return;
    }

    private void setKeyboard(com.android.inputmethod.keyboard.Keyboard)
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        com.android.inputmethod.keyboard.Keyboard r1, r4;
        com.android.inputmethod.latin.settings.SettingsValues r2;
        com.android.inputmethod.keyboard.MainKeyboardView r3;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        int i0, $i1, $i2, $i3, $i4;
        com.android.inputmethod.latin.settings.Settings $r5;
        com.android.inputmethod.latin.InputView $r6;
        float $f0, $f1, $f2, $f3;
        com.android.inputmethod.latin.SubtypeSwitcher $r7, $r10;
        android.view.inputmethod.InputMethodSubtype $r8;
        com.android.inputmethod.keyboard.KeyboardId $r9, $r12, $r13;
        com.android.inputmethod.latin.RichInputMethodManager $r11;
        java.util.Locale $r14, $r15;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        r1 := @parameter0: com.android.inputmethod.keyboard.Keyboard;

        $r5 = staticinvoke <com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.Settings getInstance()>();

        r2 = virtualinvoke $r5.<com.android.inputmethod.latin.settings.Settings: com.android.inputmethod.latin.settings.SettingsValues getCurrent()>();

        specialinvoke r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: void setMainKeyboardFrame(com.android.inputmethod.latin.settings.SettingsValues)>(r2);

        r3 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView mKeyboardView>;

        r4 = virtualinvoke r3.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.Keyboard getKeyboard()>();

        virtualinvoke r3.<com.android.inputmethod.keyboard.MainKeyboardView: void setKeyboard(com.android.inputmethod.keyboard.Keyboard)>(r1);

        $r6 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.latin.InputView mCurrentInputView>;

        $i1 = r1.<com.android.inputmethod.keyboard.Keyboard: int mTopPadding>;

        virtualinvoke $r6.<com.android.inputmethod.latin.InputView: void setKeyboardTopPadding(int)>($i1);

        $z2 = r2.<com.android.inputmethod.latin.settings.SettingsValues: boolean mKeyPreviewPopupOn>;

        $i2 = r2.<com.android.inputmethod.latin.settings.SettingsValues: int mKeyPreviewPopupDismissDelay>;

        virtualinvoke r3.<com.android.inputmethod.keyboard.MainKeyboardView: void setKeyPreviewPopupEnabled(boolean,int)>($z2, $i2);

        $z3 = r2.<com.android.inputmethod.latin.settings.SettingsValues: boolean mHasCustomKeyPreviewAnimationParams>;

        $f3 = r2.<com.android.inputmethod.latin.settings.SettingsValues: float mKeyPreviewShowUpStartXScale>;

        $f2 = r2.<com.android.inputmethod.latin.settings.SettingsValues: float mKeyPreviewShowUpStartYScale>;

        $i4 = r2.<com.android.inputmethod.latin.settings.SettingsValues: int mKeyPreviewShowUpDuration>;

        $f0 = r2.<com.android.inputmethod.latin.settings.SettingsValues: float mKeyPreviewDismissEndXScale>;

        $f1 = r2.<com.android.inputmethod.latin.settings.SettingsValues: float mKeyPreviewDismissEndYScale>;

        $i3 = r2.<com.android.inputmethod.latin.settings.SettingsValues: int mKeyPreviewDismissDuration>;

        virtualinvoke r3.<com.android.inputmethod.keyboard.MainKeyboardView: void setKeyPreviewAnimationParams(boolean,float,float,int,float,float,int)>($z3, $f3, $f2, $i4, $f0, $f1, $i3);

        $r7 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.latin.SubtypeSwitcher mSubtypeSwitcher>;

        $z4 = virtualinvoke $r7.<com.android.inputmethod.latin.SubtypeSwitcher: boolean isShortcutImeReady()>();

        virtualinvoke r3.<com.android.inputmethod.keyboard.MainKeyboardView: void updateShortcutKey(boolean)>($z4);

        if r4 == null goto label1;

        $r13 = r1.<com.android.inputmethod.keyboard.Keyboard: com.android.inputmethod.keyboard.KeyboardId mId>;

        $r15 = $r13.<com.android.inputmethod.keyboard.KeyboardId: java.util.Locale mLocale>;

        $r12 = r4.<com.android.inputmethod.keyboard.Keyboard: com.android.inputmethod.keyboard.KeyboardId mId>;

        $r14 = $r12.<com.android.inputmethod.keyboard.KeyboardId: java.util.Locale mLocale>;

        $z5 = virtualinvoke $r15.<java.util.Locale: boolean equals(java.lang.Object)>($r14);

        if $z5 != 0 goto label2;

     label1:
        $z6 = 1;

        goto label3;

     label2:
        $z6 = 0;

     label3:
        z0 = $z6;

        $r10 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.latin.SubtypeSwitcher mSubtypeSwitcher>;

        $r9 = r1.<com.android.inputmethod.keyboard.Keyboard: com.android.inputmethod.keyboard.KeyboardId mId>;

        $r8 = $r9.<com.android.inputmethod.keyboard.KeyboardId: android.view.inputmethod.InputMethodSubtype mSubtype>;

        i0 = virtualinvoke $r10.<com.android.inputmethod.latin.SubtypeSwitcher: int getLanguageOnSpacebarFormatType(android.view.inputmethod.InputMethodSubtype)>($r8);

        $r11 = staticinvoke <com.android.inputmethod.latin.RichInputMethodManager: com.android.inputmethod.latin.RichInputMethodManager getInstance()>();

        z1 = virtualinvoke $r11.<com.android.inputmethod.latin.RichInputMethodManager: boolean hasMultipleEnabledIMEsOrSubtypes(boolean)>(1);

        virtualinvoke r3.<com.android.inputmethod.keyboard.MainKeyboardView: void startDisplayLanguageOnSpacebar(boolean,int,boolean)>(z0, i0, z1);

        return;
    }

    public com.android.inputmethod.keyboard.Keyboard getKeyboard()
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        com.android.inputmethod.keyboard.MainKeyboardView $r1, $r2;
        com.android.inputmethod.keyboard.Keyboard $r3;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView mKeyboardView>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView mKeyboardView>;

        $r3 = virtualinvoke $r2.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.Keyboard getKeyboard()>();

        return $r3;

     label1:
        return null;
    }

    public void resetKeyboardStateToAlphabet(int, int)
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        int i0, i1;
        com.android.inputmethod.keyboard.internal.KeyboardState $r1;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.internal.KeyboardState mState>;

        virtualinvoke $r1.<com.android.inputmethod.keyboard.internal.KeyboardState: void onResetKeyboardStateToAlphabet(int,int)>(i0, i1);

        return;
    }

    public void onPressKey(int, boolean, int, int)
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        int i0, i1, i2;
        boolean z0;
        com.android.inputmethod.keyboard.internal.KeyboardState $r1;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.internal.KeyboardState mState>;

        virtualinvoke $r1.<com.android.inputmethod.keyboard.internal.KeyboardState: void onPressKey(int,boolean,int,int)>(i0, z0, i1, i2);

        return;
    }

    public void onReleaseKey(int, boolean, int, int)
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        int i0, i1, i2;
        boolean z0;
        com.android.inputmethod.keyboard.internal.KeyboardState $r1;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.internal.KeyboardState mState>;

        virtualinvoke $r1.<com.android.inputmethod.keyboard.internal.KeyboardState: void onReleaseKey(int,boolean,int,int)>(i0, z0, i1, i2);

        return;
    }

    public void onFinishSlidingInput(int, int)
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        int i0, i1;
        com.android.inputmethod.keyboard.internal.KeyboardState $r1;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.internal.KeyboardState mState>;

        virtualinvoke $r1.<com.android.inputmethod.keyboard.internal.KeyboardState: void onFinishSlidingInput(int,int)>(i0, i1);

        return;
    }

    public void setAlphabetKeyboard()
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        com.android.inputmethod.keyboard.KeyboardLayoutSet $r1;
        com.android.inputmethod.keyboard.Keyboard $r2;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.KeyboardLayoutSet mKeyboardLayoutSet>;

        $r2 = virtualinvoke $r1.<com.android.inputmethod.keyboard.KeyboardLayoutSet: com.android.inputmethod.keyboard.Keyboard getKeyboard(int)>(0);

        specialinvoke r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: void setKeyboard(com.android.inputmethod.keyboard.Keyboard)>($r2);

        return;
    }

    public void setAlphabetManualShiftedKeyboard()
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        com.android.inputmethod.keyboard.KeyboardLayoutSet $r1;
        com.android.inputmethod.keyboard.Keyboard $r2;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.KeyboardLayoutSet mKeyboardLayoutSet>;

        $r2 = virtualinvoke $r1.<com.android.inputmethod.keyboard.KeyboardLayoutSet: com.android.inputmethod.keyboard.Keyboard getKeyboard(int)>(1);

        specialinvoke r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: void setKeyboard(com.android.inputmethod.keyboard.Keyboard)>($r2);

        return;
    }

    public void setAlphabetAutomaticShiftedKeyboard()
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        com.android.inputmethod.keyboard.KeyboardLayoutSet $r1;
        com.android.inputmethod.keyboard.Keyboard $r2;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.KeyboardLayoutSet mKeyboardLayoutSet>;

        $r2 = virtualinvoke $r1.<com.android.inputmethod.keyboard.KeyboardLayoutSet: com.android.inputmethod.keyboard.Keyboard getKeyboard(int)>(2);

        specialinvoke r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: void setKeyboard(com.android.inputmethod.keyboard.Keyboard)>($r2);

        return;
    }

    public void setAlphabetShiftLockedKeyboard()
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        com.android.inputmethod.keyboard.KeyboardLayoutSet $r1;
        com.android.inputmethod.keyboard.Keyboard $r2;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.KeyboardLayoutSet mKeyboardLayoutSet>;

        $r2 = virtualinvoke $r1.<com.android.inputmethod.keyboard.KeyboardLayoutSet: com.android.inputmethod.keyboard.Keyboard getKeyboard(int)>(3);

        specialinvoke r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: void setKeyboard(com.android.inputmethod.keyboard.Keyboard)>($r2);

        return;
    }

    public void setAlphabetShiftLockShiftedKeyboard()
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        com.android.inputmethod.keyboard.KeyboardLayoutSet $r1;
        com.android.inputmethod.keyboard.Keyboard $r2;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.KeyboardLayoutSet mKeyboardLayoutSet>;

        $r2 = virtualinvoke $r1.<com.android.inputmethod.keyboard.KeyboardLayoutSet: com.android.inputmethod.keyboard.Keyboard getKeyboard(int)>(4);

        specialinvoke r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: void setKeyboard(com.android.inputmethod.keyboard.Keyboard)>($r2);

        return;
    }

    public void setSymbolsKeyboard()
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        com.android.inputmethod.keyboard.KeyboardLayoutSet $r1;
        com.android.inputmethod.keyboard.Keyboard $r2;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.KeyboardLayoutSet mKeyboardLayoutSet>;

        $r2 = virtualinvoke $r1.<com.android.inputmethod.keyboard.KeyboardLayoutSet: com.android.inputmethod.keyboard.Keyboard getKeyboard(int)>(5);

        specialinvoke r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: void setKeyboard(com.android.inputmethod.keyboard.Keyboard)>($r2);

        return;
    }

    private void setMainKeyboardFrame(com.android.inputmethod.latin.settings.SettingsValues)
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        com.android.inputmethod.latin.settings.SettingsValues r1;
        boolean $z0;
        android.view.View $r2;
        com.android.inputmethod.keyboard.emoji.EmojiPalettesView $r3, $r4;
        byte $b0;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        r1 := @parameter0: com.android.inputmethod.latin.settings.SettingsValues;

        $r2 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: android.view.View mMainKeyboardFrame>;

        $z0 = r1.<com.android.inputmethod.latin.settings.SettingsValues: boolean mHasHardwareKeyboard>;

        if $z0 == 0 goto label1;

        $b0 = 8;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke $r2.<android.view.View: void setVisibility(int)>($b0);

        $r3 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.emoji.EmojiPalettesView mEmojiPalettesView>;

        virtualinvoke $r3.<com.android.inputmethod.keyboard.emoji.EmojiPalettesView: void setVisibility(int)>(8);

        $r4 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.emoji.EmojiPalettesView mEmojiPalettesView>;

        virtualinvoke $r4.<com.android.inputmethod.keyboard.emoji.EmojiPalettesView: void stopEmojiPalettes()>();

        return;
    }

    public void setEmojiKeyboard()
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        com.android.inputmethod.keyboard.Keyboard r1;
        com.android.inputmethod.keyboard.KeyboardLayoutSet $r2;
        android.view.View $r3;
        com.android.inputmethod.keyboard.internal.KeyboardTextsSet $r4;
        com.android.inputmethod.keyboard.emoji.EmojiPalettesView $r5, $r10;
        java.lang.String $r6;
        com.android.inputmethod.keyboard.MainKeyboardView $r7;
        com.android.inputmethod.keyboard.internal.KeyVisualAttributes $r8;
        com.android.inputmethod.keyboard.internal.KeyboardIconsSet $r9;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        $r2 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.KeyboardLayoutSet mKeyboardLayoutSet>;

        r1 = virtualinvoke $r2.<com.android.inputmethod.keyboard.KeyboardLayoutSet: com.android.inputmethod.keyboard.Keyboard getKeyboard(int)>(0);

        $r3 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: android.view.View mMainKeyboardFrame>;

        virtualinvoke $r3.<android.view.View: void setVisibility(int)>(8);

        $r5 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.emoji.EmojiPalettesView mEmojiPalettesView>;

        $r4 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.internal.KeyboardTextsSet mKeyboardTextsSet>;

        $r6 = virtualinvoke $r4.<com.android.inputmethod.keyboard.internal.KeyboardTextsSet: java.lang.String getText(java.lang.String)>("keylabel_to_alpha");

        $r7 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView mKeyboardView>;

        $r8 = virtualinvoke $r7.<com.android.inputmethod.keyboard.MainKeyboardView: com.android.inputmethod.keyboard.internal.KeyVisualAttributes getKeyVisualAttribute()>();

        $r9 = r1.<com.android.inputmethod.keyboard.Keyboard: com.android.inputmethod.keyboard.internal.KeyboardIconsSet mIconsSet>;

        virtualinvoke $r5.<com.android.inputmethod.keyboard.emoji.EmojiPalettesView: void startEmojiPalettes(java.lang.String,com.android.inputmethod.keyboard.internal.KeyVisualAttributes,com.android.inputmethod.keyboard.internal.KeyboardIconsSet)>($r6, $r8, $r9);

        $r10 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.emoji.EmojiPalettesView mEmojiPalettesView>;

        virtualinvoke $r10.<com.android.inputmethod.keyboard.emoji.EmojiPalettesView: void setVisibility(int)>(0);

        return;
    }

    public void onToggleEmojiKeyboard()
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        com.android.inputmethod.keyboard.KeyboardLayoutSet $r1;
        com.android.inputmethod.latin.LatinIME $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.KeyboardLayoutSet mKeyboardLayoutSet>;

        if $r1 == null goto label1;

        $z0 = virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: boolean isShowingEmojiPalettes()>();

        if $z0 != 0 goto label2;

     label1:
        $r2 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.latin.LatinIME mLatinIME>;

        virtualinvoke $r2.<com.android.inputmethod.latin.LatinIME: void startShowingInputView()>();

        virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: void setEmojiKeyboard()>();

        goto label3;

     label2:
        $r3 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.latin.LatinIME mLatinIME>;

        virtualinvoke $r3.<com.android.inputmethod.latin.LatinIME: void stopShowingInputView()>();

        virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: void setAlphabetKeyboard()>();

     label3:
        return;
    }

    public void setSymbolsShiftedKeyboard()
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        com.android.inputmethod.keyboard.KeyboardLayoutSet $r1;
        com.android.inputmethod.keyboard.Keyboard $r2;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.KeyboardLayoutSet mKeyboardLayoutSet>;

        $r2 = virtualinvoke $r1.<com.android.inputmethod.keyboard.KeyboardLayoutSet: com.android.inputmethod.keyboard.Keyboard getKeyboard(int)>(6);

        specialinvoke r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: void setKeyboard(com.android.inputmethod.keyboard.Keyboard)>($r2);

        return;
    }

    public void requestUpdatingShiftState(int, int)
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        int i0, i1;
        com.android.inputmethod.keyboard.internal.KeyboardState $r1;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.internal.KeyboardState mState>;

        virtualinvoke $r1.<com.android.inputmethod.keyboard.internal.KeyboardState: void onUpdateShiftState(int,int)>(i0, i1);

        return;
    }

    public void startDoubleTapShiftKeyTimer()
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        com.android.inputmethod.keyboard.MainKeyboardView r1;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        r1 = virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView getMainKeyboardView()>();

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.inputmethod.keyboard.MainKeyboardView: void startDoubleTapShiftKeyTimer()>();

     label1:
        return;
    }

    public void cancelDoubleTapShiftKeyTimer()
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        com.android.inputmethod.keyboard.MainKeyboardView r1;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        r1 = virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView getMainKeyboardView()>();

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.inputmethod.keyboard.MainKeyboardView: void cancelDoubleTapShiftKeyTimer()>();

     label1:
        return;
    }

    public boolean isInDoubleTapShiftKeyTimeout()
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        com.android.inputmethod.keyboard.MainKeyboardView r1;
        boolean $z0, $z1;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        r1 = virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView getMainKeyboardView()>();

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.inputmethod.keyboard.MainKeyboardView: boolean isInDoubleTapShiftKeyTimeout()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void onCodeInput(int, int, int)
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        int i0, i1, i2;
        com.android.inputmethod.keyboard.internal.KeyboardState $r1;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.internal.KeyboardState mState>;

        virtualinvoke $r1.<com.android.inputmethod.keyboard.internal.KeyboardState: void onCodeInput(int,int,int)>(i0, i1, i2);

        return;
    }

    public boolean isShowingEmojiPalettes()
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        com.android.inputmethod.keyboard.emoji.EmojiPalettesView $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.emoji.EmojiPalettesView mEmojiPalettesView>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.emoji.EmojiPalettesView mEmojiPalettesView>;

        $z0 = virtualinvoke $r2.<com.android.inputmethod.keyboard.emoji.EmojiPalettesView: boolean isShown()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isShowingMoreKeysPanel()
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        boolean $z0, $z1;
        com.android.inputmethod.keyboard.MainKeyboardView $r1;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        $z0 = virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: boolean isShowingEmojiPalettes()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView mKeyboardView>;

        $z1 = virtualinvoke $r1.<com.android.inputmethod.keyboard.MainKeyboardView: boolean isShowingMoreKeysPanel()>();

        return $z1;
    }

    public android.view.View getVisibleKeyboardView()
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        boolean $z0;
        com.android.inputmethod.keyboard.MainKeyboardView $r1;
        com.android.inputmethod.keyboard.emoji.EmojiPalettesView $r2;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        $z0 = virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: boolean isShowingEmojiPalettes()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.emoji.EmojiPalettesView mEmojiPalettesView>;

        return $r2;

     label1:
        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView mKeyboardView>;

        return $r1;
    }

    public com.android.inputmethod.keyboard.MainKeyboardView getMainKeyboardView()
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        com.android.inputmethod.keyboard.MainKeyboardView $r1;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView mKeyboardView>;

        return $r1;
    }

    public void deallocateMemory()
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        com.android.inputmethod.keyboard.MainKeyboardView $r1, $r4, $r5;
        com.android.inputmethod.keyboard.emoji.EmojiPalettesView $r2, $r3;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView mKeyboardView>;

        if $r1 == null goto label1;

        $r4 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView mKeyboardView>;

        virtualinvoke $r4.<com.android.inputmethod.keyboard.MainKeyboardView: void cancelAllOngoingEvents()>();

        $r5 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView mKeyboardView>;

        virtualinvoke $r5.<com.android.inputmethod.keyboard.MainKeyboardView: void deallocateMemory()>();

     label1:
        $r2 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.emoji.EmojiPalettesView mEmojiPalettesView>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.emoji.EmojiPalettesView mEmojiPalettesView>;

        virtualinvoke $r3.<com.android.inputmethod.keyboard.emoji.EmojiPalettesView: void stopEmojiPalettes()>();

     label2:
        return;
    }

    public android.view.View onCreateInputView(boolean)
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        boolean z0;
        com.android.inputmethod.keyboard.MainKeyboardView $r1, $r16, $r17, $r18, $r24;
        android.content.SharedPreferences $r2;
        com.android.inputmethod.latin.LatinIME $r3, $r19, $r20;
        com.android.inputmethod.keyboard.KeyboardTheme $r4;
        android.content.Context $r5;
        android.view.LayoutInflater $r6;
        android.view.View $r7, $r10, $r12, $r14;
        com.android.inputmethod.latin.InputView $r8, $r9, $r11, $r15, $r22;
        com.android.inputmethod.keyboard.emoji.EmojiPalettesView $r13, $r21, $r23;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView mKeyboardView>;

        if $r1 == null goto label1;

        $r24 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView mKeyboardView>;

        virtualinvoke $r24.<com.android.inputmethod.keyboard.MainKeyboardView: void closing()>();

     label1:
        $r3 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.latin.LatinIME mLatinIME>;

        $r2 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: android.content.SharedPreferences mPrefs>;

        $r4 = staticinvoke <com.android.inputmethod.keyboard.KeyboardTheme: com.android.inputmethod.keyboard.KeyboardTheme getKeyboardTheme(android.content.SharedPreferences)>($r2);

        specialinvoke r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: boolean updateKeyboardThemeAndContextThemeWrapper(android.content.Context,com.android.inputmethod.keyboard.KeyboardTheme)>($r3, $r4);

        $r5 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: android.content.Context mThemeContext>;

        $r6 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r5);

        $r7 = virtualinvoke $r6.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(2130903046, null);

        $r8 = (com.android.inputmethod.latin.InputView) $r7;

        r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.latin.InputView mCurrentInputView> = $r8;

        $r9 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.latin.InputView mCurrentInputView>;

        $r10 = virtualinvoke $r9.<com.android.inputmethod.latin.InputView: android.view.View findViewById(int)>(2131755122);

        r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: android.view.View mMainKeyboardFrame> = $r10;

        $r11 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.latin.InputView mCurrentInputView>;

        $r12 = virtualinvoke $r11.<com.android.inputmethod.latin.InputView: android.view.View findViewById(int)>(2131755123);

        $r13 = (com.android.inputmethod.keyboard.emoji.EmojiPalettesView) $r12;

        r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.emoji.EmojiPalettesView mEmojiPalettesView> = $r13;

        $r15 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.latin.InputView mCurrentInputView>;

        $r14 = virtualinvoke $r15.<com.android.inputmethod.latin.InputView: android.view.View findViewById(int)>(2131755127);

        $r17 = (com.android.inputmethod.keyboard.MainKeyboardView) $r14;

        r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView mKeyboardView> = $r17;

        $r16 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView mKeyboardView>;

        virtualinvoke $r16.<com.android.inputmethod.keyboard.MainKeyboardView: void setHardwareAcceleratedDrawingEnabled(boolean)>(z0);

        $r18 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView mKeyboardView>;

        $r19 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.latin.LatinIME mLatinIME>;

        virtualinvoke $r18.<com.android.inputmethod.keyboard.MainKeyboardView: void setKeyboardActionListener(com.android.inputmethod.keyboard.KeyboardActionListener)>($r19);

        $r21 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.emoji.EmojiPalettesView mEmojiPalettesView>;

        virtualinvoke $r21.<com.android.inputmethod.keyboard.emoji.EmojiPalettesView: void setHardwareAcceleratedDrawingEnabled(boolean)>(z0);

        $r23 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.emoji.EmojiPalettesView mEmojiPalettesView>;

        $r20 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.latin.LatinIME mLatinIME>;

        virtualinvoke $r23.<com.android.inputmethod.keyboard.emoji.EmojiPalettesView: void setKeyboardActionListener(com.android.inputmethod.keyboard.KeyboardActionListener)>($r20);

        $r22 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.latin.InputView mCurrentInputView>;

        return $r22;
    }

    public void onNetworkStateChanged()
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        com.android.inputmethod.keyboard.MainKeyboardView $r1, $r3;
        com.android.inputmethod.latin.SubtypeSwitcher $r2;
        boolean $z0;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView mKeyboardView>;

        if $r1 == null goto label1;

        $r3 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.MainKeyboardView mKeyboardView>;

        $r2 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.latin.SubtypeSwitcher mSubtypeSwitcher>;

        $z0 = virtualinvoke $r2.<com.android.inputmethod.latin.SubtypeSwitcher: boolean isShortcutImeReady()>();

        virtualinvoke $r3.<com.android.inputmethod.keyboard.MainKeyboardView: void updateShortcutKey(boolean)>($z0);

     label1:
        return;
    }

    public int getKeyboardShiftMode()
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        com.android.inputmethod.keyboard.Keyboard r1;
        com.android.inputmethod.keyboard.KeyboardId $r2;
        int $i0;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        r1 = virtualinvoke r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.Keyboard getKeyboard()>();

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = r1.<com.android.inputmethod.keyboard.Keyboard: com.android.inputmethod.keyboard.KeyboardId mId>;

        $i0 = $r2.<com.android.inputmethod.keyboard.KeyboardId: int mElementId>;

        tableswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label2;
            case 4: goto label2;
            default: goto label5;
        };

     label2:
        return 3;

     label3:
        return 1;

     label4:
        return 5;

     label5:
        return 0;
    }

    public int getCurrentKeyboardScriptId()
    {
        com.android.inputmethod.keyboard.KeyboardSwitcher r0;
        com.android.inputmethod.keyboard.KeyboardLayoutSet $r1, $r2;
        int $i0;

        r0 := @this: com.android.inputmethod.keyboard.KeyboardSwitcher;

        $r1 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.KeyboardLayoutSet mKeyboardLayoutSet>;

        if null != $r1 goto label1;

        return -1;

     label1:
        $r2 = r0.<com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.KeyboardLayoutSet mKeyboardLayoutSet>;

        $i0 = virtualinvoke $r2.<com.android.inputmethod.keyboard.KeyboardLayoutSet: int getScriptId()>();

        return $i0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        com.android.inputmethod.keyboard.KeyboardSwitcher $r2;

        $r0 = class "com/android/inputmethod/keyboard/KeyboardSwitcher";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.inputmethod.keyboard.KeyboardSwitcher: java.lang.String TAG> = $r1;

        $r2 = new com.android.inputmethod.keyboard.KeyboardSwitcher;

        specialinvoke $r2.<com.android.inputmethod.keyboard.KeyboardSwitcher: void <init>()>();

        <com.android.inputmethod.keyboard.KeyboardSwitcher: com.android.inputmethod.keyboard.KeyboardSwitcher sInstance> = $r2;

        return;
    }
}
