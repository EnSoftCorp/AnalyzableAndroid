public final class com.android.commands.ime.Ime extends java.lang.Object
{
    com.android.internal.view.IInputMethodManager mImm;
    private java.lang.String[] mArgs;
    private int mNextArg;
    private java.lang.String mCurArgData;
    private static final java.lang.String IMM_NOT_RUNNING_ERR;

    public void <init>()
    {
        com.android.commands.ime.Ime r0;

        r0 := @this: com.android.commands.ime.Ime;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        com.android.commands.ime.Ime $r1;

        r0 := @parameter0: java.lang.String[];

        $r1 = new com.android.commands.ime.Ime;

        specialinvoke $r1.<com.android.commands.ime.Ime: void <init>()>();

        virtualinvoke $r1.<com.android.commands.ime.Ime: void run(java.lang.String[])>(r0);

        return;
    }

    public void run(java.lang.String[])
    {
        com.android.commands.ime.Ime r0;
        java.lang.String[] r1;
        java.lang.String r2, $r6, $r7, $r8, $r9, $r16;
        int $i0;
        android.os.IBinder $r3;
        com.android.internal.view.IInputMethodManager $r4, $r5;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r10, $r11, $r13, $r14;
        java.io.PrintStream $r12, $r15;

        r0 := @this: com.android.commands.ime.Ime;

        r1 := @parameter0: java.lang.String[];

        $i0 = lengthof r1;

        if $i0 >= 1 goto label1;

        staticinvoke <com.android.commands.ime.Ime: void showUsage()>();

        return;

     label1:
        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("input_method");

        $r4 = staticinvoke <com.android.internal.view.IInputMethodManager$Stub: com.android.internal.view.IInputMethodManager asInterface(android.os.IBinder)>($r3);

        r0.<com.android.commands.ime.Ime: com.android.internal.view.IInputMethodManager mImm> = $r4;

        $r5 = r0.<com.android.commands.ime.Ime: com.android.internal.view.IInputMethodManager mImm>;

        if $r5 != null goto label2;

        $r15 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Input Method Manager.  Is the system running?");

        return;

     label2:
        r0.<com.android.commands.ime.Ime: java.lang.String[] mArgs> = r1;

        r2 = r1[0];

        r0.<com.android.commands.ime.Ime: int mNextArg> = 1;

        $r6 = "list";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label3;

        specialinvoke r0.<com.android.commands.ime.Ime: void runList()>();

        return;

     label3:
        $r7 = "enable";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label4;

        specialinvoke r0.<com.android.commands.ime.Ime: void runSetEnabled(boolean)>(1);

        return;

     label4:
        $r8 = "disable";

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label5;

        specialinvoke r0.<com.android.commands.ime.Ime: void runSetEnabled(boolean)>(0);

        return;

     label5:
        $r9 = "set";

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label6;

        specialinvoke r0.<com.android.commands.ime.Ime: void runSet()>();

        return;

     label6:
        if r2 == null goto label7;

        $r12 = <java.lang.System: java.io.PrintStream err>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: unknown command \'");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r16);

     label7:
        staticinvoke <com.android.commands.ime.Ime: void showUsage()>();

        return;
    }

    private void runList()
    {
        com.android.commands.ime.Ime r0;
        java.lang.String r1, $r5, $r11, $r16, $r18, $r22, $r24, $r28;
        boolean z0, z1, $z2, $z3;
        java.util.List r2;
        android.os.RemoteException r3, $r26, $r30, r32;
        int i0, $i1;
        android.view.inputmethod.InputMethodInfo r4;
        com.android.internal.view.IInputMethodManager $r6, $r17;
        android.util.PrintStreamPrinter $r7, r33;
        java.io.PrintStream $r8, $r12, $r15, $r21, $r25, $r27, $r29, $r31;
        java.lang.Object $r9;
        java.lang.StringBuilder $r10, $r13, $r14, $r19, $r20, $r23;

        r0 := @this: com.android.commands.ime.Ime;

        z0 = 0;

        z1 = 0;

     label01:
        $r5 = specialinvoke r0.<com.android.commands.ime.Ime: java.lang.String nextOption()>();

        r1 = $r5;

        if $r5 == null goto label04;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-a");

        if $z2 == 0 goto label02;

        z0 = 1;

        goto label01;

     label02:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-s");

        if $z3 == 0 goto label03;

        z1 = 1;

        goto label01;

     label03:
        $r21 = <java.lang.System: java.io.PrintStream err>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown option: ");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r22);

        staticinvoke <com.android.commands.ime.Ime: void showUsage()>();

        return;

     label04:
        if z0 != 0 goto label08;

     label05:
        $r17 = r0.<com.android.commands.ime.Ime: com.android.internal.view.IInputMethodManager mImm>;

        r2 = interfaceinvoke $r17.<com.android.internal.view.IInputMethodManager: java.util.List getEnabledInputMethodList()>();

     label06:
        goto label11;

     label07:
        $r30 := @caughtexception;

        r3 = $r30;

        $r31 = <java.lang.System: java.io.PrintStream err>;

        $r28 = virtualinvoke r3.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r28);

        $r29 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Input Method Manager.  Is the system running?");

        return;

     label08:
        $r6 = r0.<com.android.commands.ime.Ime: com.android.internal.view.IInputMethodManager mImm>;

        r2 = interfaceinvoke $r6.<com.android.internal.view.IInputMethodManager: java.util.List getInputMethodList()>();

     label09:
        goto label11;

     label10:
        $r26 := @caughtexception;

        r32 = $r26;

        $r27 = <java.lang.System: java.io.PrintStream err>;

        $r24 = virtualinvoke r32.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r24);

        $r25 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Input Method Manager.  Is the system running?");

        return;

     label11:
        if r2 == null goto label15;

        $r7 = new android.util.PrintStreamPrinter;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r7.<android.util.PrintStreamPrinter: void <init>(java.io.PrintStream)>($r8);

        r33 = $r7;

        i0 = 0;

     label12:
        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if i0 >= $i1 goto label15;

        $r9 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);

        r4 = (android.view.inputmethod.InputMethodInfo) $r9;

        if z1 == 0 goto label13;

        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r18 = virtualinvoke r4.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r18);

        goto label14;

     label13:
        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke r4.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r16);

        virtualinvoke r4.<android.view.inputmethod.InputMethodInfo: void dump(android.util.Printer,java.lang.String)>(r33, "  ");

     label14:
        i0 = i0 + 1;

        goto label12;

     label15:
        return;

        catch android.os.RemoteException from label05 to label06 with label07;
        catch android.os.RemoteException from label08 to label09 with label10;
    }

    private void runSetEnabled(boolean)
    {
        com.android.commands.ime.Ime r0;
        boolean z0, z1;
        java.lang.String r1, $r9, $r10, $r16, $r19, $r25, $r27, $r30;
        com.android.internal.view.IInputMethodManager $r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r7, $r8, $r11, $r12, $r14, $r15, $r17, $r20, $r22, $r24;
        java.io.PrintStream $r4, $r13, $r18, $r23, $r28, $r29;
        java.lang.IllegalArgumentException $r21, r31;
        android.os.RemoteException $r26, r32;

        r0 := @this: com.android.commands.ime.Ime;

        z0 := @parameter0: boolean;

        r1 = specialinvoke r0.<com.android.commands.ime.Ime: java.lang.String nextArg()>();

        if r1 != null goto label01;

        $r18 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>("Error: no input method ID specified");

        staticinvoke <com.android.commands.ime.Ime: void showUsage()>();

        return;

     label01:
        $r2 = r0.<com.android.commands.ime.Ime: com.android.internal.view.IInputMethodManager mImm>;

        z1 = interfaceinvoke $r2.<com.android.internal.view.IInputMethodManager: boolean setInputMethodEnabled(java.lang.String,boolean)>(r1, z0);

        if z0 == 0 goto label04;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input method ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        if z1 == 0 goto label02;

        $r19 = "already enabled";

        goto label03;

     label02:
        $r19 = "now enabled";

     label03:
        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r16);

        goto label07;

     label04:
        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input method ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        if z1 == 0 goto label05;

        $r10 = "now disabled";

        goto label06;

     label05:
        $r10 = "already disabled";

     label06:
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r9);

     label07:
        goto label10;

     label08:
        $r21 := @caughtexception;

        r31 = $r21;

        $r23 = <java.lang.System: java.io.PrintStream err>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");

        $r25 = virtualinvoke r31.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r27);

        return;

     label09:
        $r26 := @caughtexception;

        r32 = $r26;

        $r29 = <java.lang.System: java.io.PrintStream err>;

        $r30 = virtualinvoke r32.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r30);

        $r28 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Input Method Manager.  Is the system running?");

        return;

     label10:
        return;

        catch java.lang.IllegalArgumentException from label01 to label07 with label08;
        catch android.os.RemoteException from label01 to label07 with label09;
    }

    private void runSet()
    {
        com.android.commands.ime.Ime r0;
        java.lang.String r1, $r9, $r16, $r18, $r19;
        java.lang.IllegalArgumentException r2, $r11;
        com.android.internal.view.IInputMethodManager $r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r12, $r14, $r15;
        java.io.PrintStream $r5, $r10, $r13, $r20, $r21;
        android.os.RemoteException $r17, r22;

        r0 := @this: com.android.commands.ime.Ime;

        r1 = specialinvoke r0.<com.android.commands.ime.Ime: java.lang.String nextArg()>();

        if r1 != null goto label1;

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("Error: no input method ID specified");

        staticinvoke <com.android.commands.ime.Ime: void showUsage()>();

        return;

     label1:
        $r3 = r0.<com.android.commands.ime.Ime: com.android.internal.view.IInputMethodManager mImm>;

        interfaceinvoke $r3.<com.android.internal.view.IInputMethodManager: void setInputMethod(android.os.IBinder,java.lang.String)>(null, r1);

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input method ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" selected");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r9);

     label2:
        goto label5;

     label3:
        $r11 := @caughtexception;

        r2 = $r11;

        $r13 = <java.lang.System: java.io.PrintStream err>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");

        $r16 = virtualinvoke r2.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r18);

        return;

     label4:
        $r17 := @caughtexception;

        r22 = $r17;

        $r20 = <java.lang.System: java.io.PrintStream err>;

        $r19 = virtualinvoke r22.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r19);

        $r21 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Input Method Manager.  Is the system running?");

        return;

     label5:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch android.os.RemoteException from label1 to label2 with label4;
    }

    private java.lang.String nextOption()
    {
        com.android.commands.ime.Ime r0;
        java.lang.String r1, $r4, $r5;
        java.lang.String[] $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        boolean $z0, $z1;
        char $c6;

        r0 := @this: com.android.commands.ime.Ime;

        $i1 = r0.<com.android.commands.ime.Ime: int mNextArg>;

        $r2 = r0.<com.android.commands.ime.Ime: java.lang.String[] mArgs>;

        $i0 = lengthof $r2;

        if $i1 < $i0 goto label1;

        return null;

     label1:
        $r3 = r0.<com.android.commands.ime.Ime: java.lang.String[] mArgs>;

        $i2 = r0.<com.android.commands.ime.Ime: int mNextArg>;

        r1 = $r3[$i2];

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z0 != 0 goto label2;

        return null;

     label2:
        $i3 = r0.<com.android.commands.ime.Ime: int mNextArg>;

        $i4 = $i3 + 1;

        r0.<com.android.commands.ime.Ime: int mNextArg> = $i4;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--");

        if $z1 == 0 goto label3;

        return null;

     label3:
        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i5 <= 1 goto label5;

        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(1);

        if $c6 == 45 goto label5;

        $i7 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i7 <= 2 goto label4;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(2);

        r0.<com.android.commands.ime.Ime: java.lang.String mCurArgData> = $r4;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        return $r5;

     label4:
        r0.<com.android.commands.ime.Ime: java.lang.String mCurArgData> = null;

        return r1;

     label5:
        r0.<com.android.commands.ime.Ime: java.lang.String mCurArgData> = null;

        return r1;
    }

    private java.lang.String nextOptionData()
    {
        com.android.commands.ime.Ime r0;
        java.lang.String r1, $r2, $r5;
        java.lang.String[] $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.commands.ime.Ime;

        $r2 = r0.<com.android.commands.ime.Ime: java.lang.String mCurArgData>;

        if $r2 == null goto label1;

        $r5 = r0.<com.android.commands.ime.Ime: java.lang.String mCurArgData>;

        return $r5;

     label1:
        $i1 = r0.<com.android.commands.ime.Ime: int mNextArg>;

        $r3 = r0.<com.android.commands.ime.Ime: java.lang.String[] mArgs>;

        $i0 = lengthof $r3;

        if $i1 < $i0 goto label2;

        return null;

     label2:
        $r4 = r0.<com.android.commands.ime.Ime: java.lang.String[] mArgs>;

        $i2 = r0.<com.android.commands.ime.Ime: int mNextArg>;

        r1 = $r4[$i2];

        $i3 = r0.<com.android.commands.ime.Ime: int mNextArg>;

        $i4 = $i3 + 1;

        r0.<com.android.commands.ime.Ime: int mNextArg> = $i4;

        return r1;
    }

    private java.lang.String nextArg()
    {
        com.android.commands.ime.Ime r0;
        java.lang.String r1;
        java.lang.String[] $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.commands.ime.Ime;

        $i1 = r0.<com.android.commands.ime.Ime: int mNextArg>;

        $r2 = r0.<com.android.commands.ime.Ime: java.lang.String[] mArgs>;

        $i0 = lengthof $r2;

        if $i1 < $i0 goto label1;

        return null;

     label1:
        $r3 = r0.<com.android.commands.ime.Ime: java.lang.String[] mArgs>;

        $i2 = r0.<com.android.commands.ime.Ime: int mNextArg>;

        r1 = $r3[$i2];

        $i3 = r0.<com.android.commands.ime.Ime: int mNextArg>;

        $i4 = $i3 + 1;

        r0.<com.android.commands.ime.Ime: int mNextArg> = $i4;

        return r1;
    }

    private static void showUsage()
    {
        java.io.PrintStream $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("usage: ime list [-a] [-s]");

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("       ime enable ID");

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("       ime disable ID");

        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("       ime set ID");

        $r4 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("");

        $r5 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("The list command prints all enabled input methods.  Use");

        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("the -a option to see all input methods.  Use");

        $r7 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("the -s option to see only a single summary line of each.");

        $r8 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("");

        $r9 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("The enable command allows the given input method ID to be used.");

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("");

        $r11 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("The disable command disallows the given input method ID from use.");

        $r12 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("");

        $r13 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("The set command switches to the given input method ID.");

        return;
    }

    public static void <clinit>()
    {
        <com.android.commands.ime.Ime: java.lang.String IMM_NOT_RUNNING_ERR> = "Error: Could not access the Input Method Manager.  Is the system running?";

        return;
    }
}
