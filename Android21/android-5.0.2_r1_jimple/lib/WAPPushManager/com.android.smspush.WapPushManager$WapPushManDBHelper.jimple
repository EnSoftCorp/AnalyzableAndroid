class com.android.smspush.WapPushManager$WapPushManDBHelper extends android.database.sqlite.SQLiteOpenHelper
{
    final com.android.smspush.WapPushManager this$0;

    void <init>(com.android.smspush.WapPushManager, android.content.Context)
    {
        com.android.smspush.WapPushManager$WapPushManDBHelper r0;
        com.android.smspush.WapPushManager r1;
        android.content.Context r2;

        r0 := @this: com.android.smspush.WapPushManager$WapPushManDBHelper;

        r1 := @parameter0: com.android.smspush.WapPushManager;

        r2 := @parameter1: android.content.Context;

        r0.<com.android.smspush.WapPushManager$WapPushManDBHelper: com.android.smspush.WapPushManager this$0> = r1;

        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>(r2, "wappush.db", null, 1);

        return;
    }

    public void onCreate(android.database.sqlite.SQLiteDatabase)
    {
        com.android.smspush.WapPushManager$WapPushManDBHelper r0;
        android.database.sqlite.SQLiteDatabase r1;
        java.lang.String r2;

        r0 := @this: com.android.smspush.WapPushManager$WapPushManDBHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 = "CREATE TABLE appid_tbl (id INTEGER PRIMARY KEY, x_wap_application TEXT, content_type TEXT, package_name TEXT, class_name TEXT, app_type INTEGER, need_signature INTEGER, further_processing INTEGER, install_order INTEGER )";

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>(r2);

        return;
    }

    public void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        com.android.smspush.WapPushManager$WapPushManDBHelper r0;
        android.database.sqlite.SQLiteDatabase r1;
        int i0, i1;

        r0 := @this: com.android.smspush.WapPushManager$WapPushManDBHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WAP PUSH", "onUpgrade is not implemented yet. do nothing.");

        return;
    }

    protected com.android.smspush.WapPushManager$WapPushManDBHelper$queryData queryLastApp(android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.String)
    {
        com.android.smspush.WapPushManager$WapPushManDBHelper r0;
        android.database.sqlite.SQLiteDatabase r1;
        java.lang.String r2, r3, $r9, $r10;
        android.database.Cursor r4;
        com.android.smspush.WapPushManager$WapPushManDBHelper$queryData r5, $r8;
        java.lang.String[] $r6, $r7;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @this: com.android.smspush.WapPushManager$WapPushManDBHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r6 = newarray (java.lang.String)[6];

        $r6[0] = "install_order";

        $r6[1] = "package_name";

        $r6[2] = "class_name";

        $r6[3] = "app_type";

        $r6[4] = "need_signature";

        $r6[5] = "further_processing";

        $r7 = newarray (java.lang.String)[2];

        $r7[0] = r2;

        $r7[1] = r3;

        r4 = virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("appid_tbl", $r6, "x_wap_application=? and content_type=?", $r7, null, null, "install_order desc");

        r5 = null;

        $z0 = interfaceinvoke r4.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label1;

        $r8 = new com.android.smspush.WapPushManager$WapPushManDBHelper$queryData;

        specialinvoke $r8.<com.android.smspush.WapPushManager$WapPushManDBHelper$queryData: void <init>(com.android.smspush.WapPushManager$WapPushManDBHelper)>(r0);

        r5 = $r8;

        $i0 = interfaceinvoke r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("install_order");

        $i1 = interfaceinvoke r4.<android.database.Cursor: int getInt(int)>($i0);

        r5.<com.android.smspush.WapPushManager$WapPushManDBHelper$queryData: int installOrder> = $i1;

        $i2 = interfaceinvoke r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("package_name");

        $r9 = interfaceinvoke r4.<android.database.Cursor: java.lang.String getString(int)>($i2);

        r5.<com.android.smspush.WapPushManager$WapPushManDBHelper$queryData: java.lang.String packageName> = $r9;

        $i3 = interfaceinvoke r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("class_name");

        $r10 = interfaceinvoke r4.<android.database.Cursor: java.lang.String getString(int)>($i3);

        r5.<com.android.smspush.WapPushManager$WapPushManDBHelper$queryData: java.lang.String className> = $r10;

        $i4 = interfaceinvoke r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("app_type");

        $i6 = interfaceinvoke r4.<android.database.Cursor: int getInt(int)>($i4);

        r5.<com.android.smspush.WapPushManager$WapPushManDBHelper$queryData: int appType> = $i6;

        $i5 = interfaceinvoke r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("need_signature");

        $i8 = interfaceinvoke r4.<android.database.Cursor: int getInt(int)>($i5);

        r5.<com.android.smspush.WapPushManager$WapPushManDBHelper$queryData: int needSignature> = $i8;

        $i7 = interfaceinvoke r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("further_processing");

        $i9 = interfaceinvoke r4.<android.database.Cursor: int getInt(int)>($i7);

        r5.<com.android.smspush.WapPushManager$WapPushManDBHelper$queryData: int furtherProcessing> = $i9;

     label1:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        return r5;
    }
}
