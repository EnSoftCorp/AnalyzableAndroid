final class com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl extends com.android.printspooler.renderer.IPdfRenderer$Stub
{
    private final java.lang.Object mLock;
    private android.graphics.Bitmap mBitmap;
    private android.graphics.pdf.PdfRenderer mRenderer;
    final com.android.printspooler.renderer.PdfManipulationService this$0;

    private void <init>(com.android.printspooler.renderer.PdfManipulationService)
    {
        com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl r0;
        com.android.printspooler.renderer.PdfManipulationService r1;
        java.lang.Object $r2;

        r0 := @this: com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl;

        r1 := @parameter0: com.android.printspooler.renderer.PdfManipulationService;

        r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: com.android.printspooler.renderer.PdfManipulationService this$0> = r1;

        specialinvoke r0.<com.android.printspooler.renderer.IPdfRenderer$Stub: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: java.lang.Object mLock> = $r2;

        return;
    }

    public int openDocument(android.os.ParcelFileDescriptor) throws android.os.RemoteException
    {
        com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl r0;
        android.os.ParcelFileDescriptor r1;
        java.lang.Object r2, $r5;
        java.lang.Exception r3, $r9;
        java.lang.Throwable r4, $r8;
        android.graphics.pdf.PdfRenderer $r6, $r7;
        int $i0;

        r0 := @this: com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        $r5 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        specialinvoke r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: void throwIfOpened()>();

        $r6 = new android.graphics.pdf.PdfRenderer;

        specialinvoke $r6.<android.graphics.pdf.PdfRenderer: void <init>(android.os.ParcelFileDescriptor)>(r1);

        r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: android.graphics.pdf.PdfRenderer mRenderer> = $r6;

        $r7 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: android.graphics.pdf.PdfRenderer mRenderer>;

        $i0 = virtualinvoke $r7.<android.graphics.pdf.PdfRenderer: int getPageCount()>();

     label2:
        exitmonitor r2;

     label3:
        return $i0;

     label4:
        $r9 := @caughtexception;

        r3 = $r9;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PdfManipulationService", "Cannot open file", r3);

        exitmonitor r2;

     label5:
        return -2;

     label6:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r2;

     label7:
        throw r4;

        catch java.io.IOException from label1 to label2 with label4;
        catch java.lang.IllegalStateException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void renderPage(int, int, int, android.print.PrintAttributes, android.os.ParcelFileDescriptor)
    {
        com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        android.print.PrintAttributes r1;
        android.os.ParcelFileDescriptor r2;
        java.lang.Object r3, $r13;
        android.graphics.pdf.PdfRenderer$Page r4;
        boolean z0, z1, $z2, $z5;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26;
        android.graphics.Matrix r5, $r18;
        android.print.PrintAttributes$Margins r6;
        android.content.res.Configuration r7;
        android.graphics.Bitmap r8;
        android.graphics.Rect r9, $r21;
        java.lang.Throwable r10, r11, $r22, $r23;
        android.graphics.pdf.PdfRenderer $r12, $r17;
        android.print.PrintAttributes$MediaSize $r14, $r15, $r16;
        android.content.res.Resources $r19;
        com.android.printspooler.renderer.PdfManipulationService $r20;

        r0 := @this: com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: android.print.PrintAttributes;

        r2 := @parameter4: android.os.ParcelFileDescriptor;

        $r13 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: java.lang.Object mLock>;

        r3 = $r13;

        entermonitor $r13;

     label01:
        specialinvoke r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: void throwIfNotOpened()>();

        $r12 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: android.graphics.pdf.PdfRenderer mRenderer>;

        r4 = virtualinvoke $r12.<android.graphics.pdf.PdfRenderer: android.graphics.pdf.PdfRenderer$Page openPage(int)>(i0);

        i3 = virtualinvoke r4.<android.graphics.pdf.PdfRenderer$Page: int getWidth()>();

        i4 = virtualinvoke r4.<android.graphics.pdf.PdfRenderer$Page: int getHeight()>();

        $r14 = virtualinvoke r1.<android.print.PrintAttributes: android.print.PrintAttributes$MediaSize getMediaSize()>();

        $i12 = virtualinvoke $r14.<android.print.PrintAttributes$MediaSize: int getWidthMils()>();

        i5 = staticinvoke <com.android.printspooler.renderer.PdfManipulationService: int access$200(int)>($i12);

        $r15 = virtualinvoke r1.<android.print.PrintAttributes: android.print.PrintAttributes$MediaSize getMediaSize()>();

        $i11 = virtualinvoke $r15.<android.print.PrintAttributes$MediaSize: int getHeightMils()>();

        i6 = staticinvoke <com.android.printspooler.renderer.PdfManipulationService: int access$200(int)>($i11);

        $r17 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: android.graphics.pdf.PdfRenderer mRenderer>;

        z0 = virtualinvoke $r17.<android.graphics.pdf.PdfRenderer: boolean shouldScaleForPrinting()>();

        $r16 = virtualinvoke r1.<android.print.PrintAttributes: android.print.PrintAttributes$MediaSize getMediaSize()>();

        $z2 = virtualinvoke $r16.<android.print.PrintAttributes$MediaSize: boolean isPortrait()>();

        if $z2 != 0 goto label02;

        $z5 = 1;

        goto label03;

     label02:
        $z5 = 0;

     label03:
        z1 = $z5;

        $r18 = new android.graphics.Matrix;

        specialinvoke $r18.<android.graphics.Matrix: void <init>()>();

        r5 = $r18;

        if z0 == 0 goto label04;

        $f18 = (float) i1;

        $f19 = (float) i3;

        $f25 = $f18 / $f19;

        $f20 = (float) i2;

        $f21 = (float) i4;

        $f26 = $f20 / $f21;

        f0 = staticinvoke <java.lang.Math: float min(float,float)>($f25, $f26);

        goto label06;

     label04:
        if z1 == 0 goto label05;

        $f23 = (float) i2;

        $f24 = (float) i6;

        f0 = $f23 / $f24;

        goto label06;

     label05:
        $f2 = (float) i1;

        $f1 = (float) i5;

        f0 = $f2 / $f1;

     label06:
        virtualinvoke r5.<android.graphics.Matrix: boolean postScale(float,float)>(f0, f0);

        $r20 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: com.android.printspooler.renderer.PdfManipulationService this$0>;

        $r19 = virtualinvoke $r20.<com.android.printspooler.renderer.PdfManipulationService: android.content.res.Resources getResources()>();

        r7 = virtualinvoke $r19.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i14 = virtualinvoke r7.<android.content.res.Configuration: int getLayoutDirection()>();

        if $i14 != 1 goto label07;

        $f15 = (float) i1;

        $f13 = (float) i3;

        $f14 = $f13 * f0;

        $f22 = $f15 - $f14;

        virtualinvoke r5.<android.graphics.Matrix: boolean postTranslate(float,float)>($f22, 0.0F);

     label07:
        r6 = virtualinvoke r1.<android.print.PrintAttributes: android.print.PrintAttributes$Margins getMinMargins()>();

        $i13 = virtualinvoke r6.<android.print.PrintAttributes$Margins: int getLeftMils()>();

        i8 = staticinvoke <com.android.printspooler.renderer.PdfManipulationService: int access$200(int)>($i13);

        $i16 = virtualinvoke r6.<android.print.PrintAttributes$Margins: int getTopMils()>();

        i7 = staticinvoke <com.android.printspooler.renderer.PdfManipulationService: int access$200(int)>($i16);

        $i15 = virtualinvoke r6.<android.print.PrintAttributes$Margins: int getRightMils()>();

        i10 = staticinvoke <com.android.printspooler.renderer.PdfManipulationService: int access$200(int)>($i15);

        $i17 = virtualinvoke r6.<android.print.PrintAttributes$Margins: int getBottomMils()>();

        i9 = staticinvoke <com.android.printspooler.renderer.PdfManipulationService: int access$200(int)>($i17);

        $r21 = new android.graphics.Rect;

        specialinvoke $r21.<android.graphics.Rect: void <init>()>();

        r9 = $r21;

        $f3 = (float) i8;

        $f6 = $f3 * f0;

        $i18 = (int) $f6;

        r9.<android.graphics.Rect: int left> = $i18;

        $f5 = (float) i7;

        $f4 = $f5 * f0;

        $i20 = (int) $f4;

        r9.<android.graphics.Rect: int top> = $i20;

        $f12 = (float) i1;

        $f10 = (float) i10;

        $f11 = $f10 * f0;

        $f7 = $f12 - $f11;

        $i19 = (int) $f7;

        r9.<android.graphics.Rect: int right> = $i19;

        $f16 = (float) i2;

        $f8 = (float) i9;

        $f9 = $f8 * f0;

        $f17 = $f16 - $f9;

        $i21 = (int) $f17;

        r9.<android.graphics.Rect: int bottom> = $i21;

        r8 = specialinvoke r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: android.graphics.Bitmap getBitmapForSize(int,int)>(i1, i2);

        virtualinvoke r4.<android.graphics.pdf.PdfRenderer$Page: void render(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Matrix,int)>(r8, r9, r5, 1);

        virtualinvoke r4.<android.graphics.pdf.PdfRenderer$Page: void close()>();

        staticinvoke <com.android.printspooler.util.BitmapSerializeUtils: void writeBitmapPixels(android.graphics.Bitmap,android.os.ParcelFileDescriptor)>(r8, r2);

     label08:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r2);

        goto label11;

     label09:
        $r23 := @caughtexception;

        r11 = $r23;

     label10:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r2);

        throw r11;

     label11:
        exitmonitor r3;

     label12:
        goto label15;

     label13:
        $r22 := @caughtexception;

        r10 = $r22;

        exitmonitor r3;

     label14:
        throw r10;

     label15:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.Throwable from label01 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public void closeDocument()
    {
        com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        android.graphics.pdf.PdfRenderer $r4;

        r0 := @this: com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl;

        $r3 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: void throwIfNotOpened()>();

        $r4 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: android.graphics.pdf.PdfRenderer mRenderer>;

        virtualinvoke $r4.<android.graphics.pdf.PdfRenderer: void close()>();

        r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: android.graphics.pdf.PdfRenderer mRenderer> = null;

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private android.graphics.Bitmap getBitmapForSize(int, int)
    {
        com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl r0;
        int i0, i1, $i2, $i3;
        android.graphics.Bitmap $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        android.graphics.Bitmap$Config $r2;

        r0 := @this: com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: android.graphics.Bitmap mBitmap>;

        if $r1 == null goto label2;

        $r6 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: android.graphics.Bitmap mBitmap>;

        $i2 = virtualinvoke $r6.<android.graphics.Bitmap: int getWidth()>();

        if $i2 != i0 goto label1;

        $r8 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: android.graphics.Bitmap mBitmap>;

        $i3 = virtualinvoke $r8.<android.graphics.Bitmap: int getHeight()>();

        if $i3 != i1 goto label1;

        $r9 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: android.graphics.Bitmap mBitmap>;

        virtualinvoke $r9.<android.graphics.Bitmap: void eraseColor(int)>(-1);

        $r10 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: android.graphics.Bitmap mBitmap>;

        return $r10;

     label1:
        $r7 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: android.graphics.Bitmap mBitmap>;

        virtualinvoke $r7.<android.graphics.Bitmap: void recycle()>();

     label2:
        $r2 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i0, i1, $r2);

        r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: android.graphics.Bitmap mBitmap> = $r3;

        $r4 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: android.graphics.Bitmap mBitmap>;

        virtualinvoke $r4.<android.graphics.Bitmap: void eraseColor(int)>(-1);

        $r5 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: android.graphics.Bitmap mBitmap>;

        return $r5;
    }

    private void throwIfOpened()
    {
        com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl r0;
        android.graphics.pdf.PdfRenderer $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl;

        $r1 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: android.graphics.pdf.PdfRenderer mRenderer>;

        if $r1 == null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already opened");

        throw $r2;

     label1:
        return;
    }

    private void throwIfNotOpened()
    {
        com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl r0;
        android.graphics.pdf.PdfRenderer $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl;

        $r1 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: android.graphics.pdf.PdfRenderer mRenderer>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not opened");

        throw $r2;

     label1:
        return;
    }

    void <init>(com.android.printspooler.renderer.PdfManipulationService, com.android.printspooler.renderer.PdfManipulationService$1)
    {
        com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl r0;
        com.android.printspooler.renderer.PdfManipulationService r1;
        com.android.printspooler.renderer.PdfManipulationService$1 r2;

        r0 := @this: com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl;

        r1 := @parameter0: com.android.printspooler.renderer.PdfManipulationService;

        r2 := @parameter1: com.android.printspooler.renderer.PdfManipulationService$1;

        specialinvoke r0.<com.android.printspooler.renderer.PdfManipulationService$PdfRendererImpl: void <init>(com.android.printspooler.renderer.PdfManipulationService)>(r1);

        return;
    }
}
