public class android.support.v7.widget.GridLayoutManager extends android.support.v7.widget.LinearLayoutManager
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    public static final int DEFAULT_SPAN_COUNT;
    static final int MAIN_DIR_SPEC;
    int mSpanCount;
    int mSizePerSpan;
    android.view.View[] mSet;
    final android.util.SparseIntArray mPreLayoutSpanSizeCache;
    final android.util.SparseIntArray mPreLayoutSpanIndexCache;
    android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup;
    final android.graphics.Rect mDecorInsets;

    public void <init>(android.content.Context, int)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.content.Context r1;
        int i0;
        android.util.SparseIntArray $r2, $r3;
        android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup $r4;
        android.graphics.Rect $r5;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void <init>(android.content.Context)>(r1);

        r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount> = -1;

        $r2 = new android.util.SparseIntArray;

        specialinvoke $r2.<android.util.SparseIntArray: void <init>()>();

        r0.<android.support.v7.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanSizeCache> = $r2;

        $r3 = new android.util.SparseIntArray;

        specialinvoke $r3.<android.util.SparseIntArray: void <init>()>();

        r0.<android.support.v7.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanIndexCache> = $r3;

        $r4 = new android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup;

        specialinvoke $r4.<android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup: void <init>()>();

        r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup> = $r4;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<android.support.v7.widget.GridLayoutManager: android.graphics.Rect mDecorInsets> = $r5;

        virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: void setSpanCount(int)>(i0);

        return;
    }

    public void <init>(android.content.Context, int, int, boolean)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.content.Context r1;
        int i0, i1;
        boolean z0;
        android.util.SparseIntArray $r2, $r3;
        android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup $r4;
        android.graphics.Rect $r5;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void <init>(android.content.Context,int,boolean)>(r1, i1, z0);

        r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount> = -1;

        $r2 = new android.util.SparseIntArray;

        specialinvoke $r2.<android.util.SparseIntArray: void <init>()>();

        r0.<android.support.v7.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanSizeCache> = $r2;

        $r3 = new android.util.SparseIntArray;

        specialinvoke $r3.<android.util.SparseIntArray: void <init>()>();

        r0.<android.support.v7.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanIndexCache> = $r3;

        $r4 = new android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup;

        specialinvoke $r4.<android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup: void <init>()>();

        r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup> = $r4;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<android.support.v7.widget.GridLayoutManager: android.graphics.Rect mDecorInsets> = $r5;

        virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: void setSpanCount(int)>(i0);

        return;
    }

    public void setStackFromEnd(boolean)
    {
        android.support.v7.widget.GridLayoutManager r0;
        boolean z0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("GridLayoutManager does not support stack from end. Consider using reverse layout");

        throw $r1;

     label1:
        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void setStackFromEnd(boolean)>(0);

        return;
    }

    public int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        android.support.v7.widget.RecyclerView$State r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $i0 = r0.<android.support.v7.widget.GridLayoutManager: int mOrientation>;

        if $i0 != 0 goto label1;

        $i5 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        return $i5;

     label1:
        $i1 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$State: int getItemCount()>();

        if $i1 >= 1 goto label2;

        return 0;

     label2:
        $i2 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$State: int getItemCount()>();

        $i3 = $i2 - 1;

        $i4 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int getSpanGroupIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int)>(r1, r2, $i3);

        return $i4;
    }

    public int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        android.support.v7.widget.RecyclerView$State r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $i0 = r0.<android.support.v7.widget.GridLayoutManager: int mOrientation>;

        if $i0 != 1 goto label1;

        $i5 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        return $i5;

     label1:
        $i1 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$State: int getItemCount()>();

        if $i1 >= 1 goto label2;

        return 0;

     label2:
        $i2 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$State: int getItemCount()>();

        $i3 = $i2 - 1;

        $i4 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int getSpanGroupIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int)>(r1, r2, $i3);

        return $i4;
    }

    public void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, android.view.View, android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        android.support.v7.widget.RecyclerView$State r2;
        android.view.View r3;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat r4;
        android.view.ViewGroup$LayoutParams r5;
        android.support.v7.widget.GridLayoutManager$LayoutParams r6;
        int i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14;
        boolean $z0, $z1, $z2;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat $r7, $r8;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        r3 := @parameter2: android.view.View;

        r4 := @parameter3: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        r5 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z0 = r5 instanceof android.support.v7.widget.GridLayoutManager$LayoutParams;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void onInitializeAccessibilityNodeInfoForItem(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>(r3, r4);

        return;

     label1:
        r6 = (android.support.v7.widget.GridLayoutManager$LayoutParams) r5;

        $i1 = virtualinvoke r6.<android.support.v7.widget.GridLayoutManager$LayoutParams: int getViewPosition()>();

        i0 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int getSpanGroupIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int)>(r1, r2, $i1);

        $i2 = r0.<android.support.v7.widget.GridLayoutManager: int mOrientation>;

        if $i2 != 0 goto label4;

        $i9 = virtualinvoke r6.<android.support.v7.widget.GridLayoutManager$LayoutParams: int getSpanIndex()>();

        $i11 = virtualinvoke r6.<android.support.v7.widget.GridLayoutManager$LayoutParams: int getSpanSize()>();

        $i10 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        if $i10 <= 1 goto label2;

        $i14 = virtualinvoke r6.<android.support.v7.widget.GridLayoutManager$LayoutParams: int getSpanSize()>();

        $i13 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        if $i14 != $i13 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        $r8 = staticinvoke <android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean)>($i9, $i11, i0, 1, $z2, 0);

        virtualinvoke r4.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionItemInfo(java.lang.Object)>($r8);

        goto label7;

     label4:
        $i4 = virtualinvoke r6.<android.support.v7.widget.GridLayoutManager$LayoutParams: int getSpanIndex()>();

        $i5 = virtualinvoke r6.<android.support.v7.widget.GridLayoutManager$LayoutParams: int getSpanSize()>();

        $i6 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        if $i6 <= 1 goto label5;

        $i8 = virtualinvoke r6.<android.support.v7.widget.GridLayoutManager$LayoutParams: int getSpanSize()>();

        $i7 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        if $i8 != $i7 goto label5;

        $z1 = 1;

        goto label6;

     label5:
        $z1 = 0;

     label6:
        $r7 = staticinvoke <android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean)>(i0, 1, $i4, $i5, $z1, 0);

        virtualinvoke r4.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionItemInfo(java.lang.Object)>($r7);

     label7:
        return;
    }

    public void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        android.support.v7.widget.RecyclerView$State r2;
        boolean $z0;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $z0 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.support.v7.widget.GridLayoutManager: void cachePreLayoutSpanMapping()>();

     label1:
        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>(r1, r2);

        specialinvoke r0.<android.support.v7.widget.GridLayoutManager: void clearPreLayoutSpanMappingCache()>();

        return;
    }

    private void clearPreLayoutSpanMappingCache()
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.util.SparseIntArray $r1, $r2;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 = r0.<android.support.v7.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanSizeCache>;

        virtualinvoke $r1.<android.util.SparseIntArray: void clear()>();

        $r2 = r0.<android.support.v7.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanIndexCache>;

        virtualinvoke $r2.<android.util.SparseIntArray: void clear()>();

        return;
    }

    private void cachePreLayoutSpanMapping()
    {
        android.support.v7.widget.GridLayoutManager r0;
        int i0, i1, i2, $i3, $i4;
        android.support.v7.widget.GridLayoutManager$LayoutParams r1;
        android.view.View $r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.util.SparseIntArray $r4, $r5;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        i0 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: android.view.View getChildAt(int)>(i1);

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r1 = (android.support.v7.widget.GridLayoutManager$LayoutParams) $r3;

        i2 = virtualinvoke r1.<android.support.v7.widget.GridLayoutManager$LayoutParams: int getViewPosition()>();

        $r4 = r0.<android.support.v7.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanSizeCache>;

        $i3 = virtualinvoke r1.<android.support.v7.widget.GridLayoutManager$LayoutParams: int getSpanSize()>();

        virtualinvoke $r4.<android.util.SparseIntArray: void put(int,int)>(i2, $i3);

        $r5 = r0.<android.support.v7.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanIndexCache>;

        $i4 = virtualinvoke r1.<android.support.v7.widget.GridLayoutManager$LayoutParams: int getSpanIndex()>();

        virtualinvoke $r5.<android.util.SparseIntArray: void put(int,int)>(i2, $i4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void onItemsAdded(android.support.v7.widget.RecyclerView, int, int)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView r1;
        int i0, i1;
        android.support.v7.widget.GridLayoutManager$SpanSizeLookup $r2;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r2.<android.support.v7.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()>();

        return;
    }

    public void onItemsChanged(android.support.v7.widget.RecyclerView)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView r1;
        android.support.v7.widget.GridLayoutManager$SpanSizeLookup $r2;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView;

        $r2 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r2.<android.support.v7.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()>();

        return;
    }

    public void onItemsRemoved(android.support.v7.widget.RecyclerView, int, int)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView r1;
        int i0, i1;
        android.support.v7.widget.GridLayoutManager$SpanSizeLookup $r2;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r2.<android.support.v7.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()>();

        return;
    }

    public void onItemsUpdated(android.support.v7.widget.RecyclerView, int, int)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView r1;
        int i0, i1;
        android.support.v7.widget.GridLayoutManager$SpanSizeLookup $r2;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r2.<android.support.v7.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()>();

        return;
    }

    public void onItemsMoved(android.support.v7.widget.RecyclerView, int, int, int)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView r1;
        int i0, i1, i2;
        android.support.v7.widget.GridLayoutManager$SpanSizeLookup $r2;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r2.<android.support.v7.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()>();

        return;
    }

    public android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.GridLayoutManager$LayoutParams $r1;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 = new android.support.v7.widget.GridLayoutManager$LayoutParams;

        specialinvoke $r1.<android.support.v7.widget.GridLayoutManager$LayoutParams: void <init>(int,int)>(-2, -2);

        return $r1;
    }

    public android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context, android.util.AttributeSet)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.support.v7.widget.GridLayoutManager$LayoutParams $r3;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        $r3 = new android.support.v7.widget.GridLayoutManager$LayoutParams;

        specialinvoke $r3.<android.support.v7.widget.GridLayoutManager$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        return $r3;
    }

    public android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;
        android.support.v7.widget.GridLayoutManager$LayoutParams $r2, $r3;
        android.view.ViewGroup$MarginLayoutParams $r4;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z0 == 0 goto label1;

        $r3 = new android.support.v7.widget.GridLayoutManager$LayoutParams;

        $r4 = (android.view.ViewGroup$MarginLayoutParams) r1;

        specialinvoke $r3.<android.support.v7.widget.GridLayoutManager$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($r4);

        return $r3;

     label1:
        $r2 = new android.support.v7.widget.GridLayoutManager$LayoutParams;

        specialinvoke $r2.<android.support.v7.widget.GridLayoutManager$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    public boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView$LayoutParams r1;
        boolean $z0;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$LayoutParams;

        $z0 = r1 instanceof android.support.v7.widget.GridLayoutManager$LayoutParams;

        return $z0;
    }

    public void setSpanSizeLookup(android.support.v7.widget.GridLayoutManager$SpanSizeLookup)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.GridLayoutManager$SpanSizeLookup r1;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        r1 := @parameter0: android.support.v7.widget.GridLayoutManager$SpanSizeLookup;

        r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup> = r1;

        return;
    }

    public android.support.v7.widget.GridLayoutManager$SpanSizeLookup getSpanSizeLookup()
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.GridLayoutManager$SpanSizeLookup $r1;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        return $r1;
    }

    private void updateMeasurements()
    {
        android.support.v7.widget.GridLayoutManager r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $i1 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: int getOrientation()>();

        if $i1 != 1 goto label1;

        $i8 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: int getWidth()>();

        $i9 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: int getPaddingRight()>();

        $i10 = $i8 - $i9;

        $i11 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: int getPaddingLeft()>();

        i0 = $i10 - $i11;

        goto label2;

     label1:
        $i2 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: int getHeight()>();

        $i3 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: int getPaddingBottom()>();

        $i4 = $i2 - $i3;

        $i5 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: int getPaddingTop()>();

        i0 = $i4 - $i5;

     label2:
        $i6 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        $i7 = i0 / $i6;

        r0.<android.support.v7.widget.GridLayoutManager: int mSizePerSpan> = $i7;

        return;
    }

    void onAnchorReady(android.support.v7.widget.RecyclerView$State, android.support.v7.widget.LinearLayoutManager$AnchorInfo)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView$State r1;
        android.support.v7.widget.LinearLayoutManager$AnchorInfo r2;
        int $i0, $i1, $i2, $i3;
        android.view.View[] $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$State;

        r2 := @parameter1: android.support.v7.widget.LinearLayoutManager$AnchorInfo;

        specialinvoke r0.<android.support.v7.widget.LinearLayoutManager: void onAnchorReady(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo)>(r1, r2);

        specialinvoke r0.<android.support.v7.widget.GridLayoutManager: void updateMeasurements()>();

        $i0 = virtualinvoke r1.<android.support.v7.widget.RecyclerView$State: int getItemCount()>();

        if $i0 <= 0 goto label1;

        $z0 = virtualinvoke r1.<android.support.v7.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.support.v7.widget.GridLayoutManager: void ensureAnchorIsInFirstSpan(android.support.v7.widget.LinearLayoutManager$AnchorInfo)>(r2);

     label1:
        $r3 = r0.<android.support.v7.widget.GridLayoutManager: android.view.View[] mSet>;

        if $r3 == null goto label2;

        $r5 = r0.<android.support.v7.widget.GridLayoutManager: android.view.View[] mSet>;

        $i3 = lengthof $r5;

        $i2 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        if $i3 == $i2 goto label3;

     label2:
        $i1 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        $r4 = newarray (android.view.View)[$i1];

        r0.<android.support.v7.widget.GridLayoutManager: android.view.View[] mSet> = $r4;

     label3:
        return;
    }

    private void ensureAnchorIsInFirstSpan(android.support.v7.widget.LinearLayoutManager$AnchorInfo)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.LinearLayoutManager$AnchorInfo r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.support.v7.widget.GridLayoutManager$SpanSizeLookup $r2, $r3;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        r1 := @parameter0: android.support.v7.widget.LinearLayoutManager$AnchorInfo;

        $r2 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i2 = r1.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: int mPosition>;

        $i1 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        i0 = virtualinvoke $r2.<android.support.v7.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanIndex(int,int)>($i2, $i1);

     label1:
        if i0 <= 0 goto label2;

        $i3 = r1.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: int mPosition>;

        if $i3 <= 0 goto label2;

        $i4 = r1.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: int mPosition>;

        $i5 = $i4 - 1;

        r1.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: int mPosition> = $i5;

        $r3 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i7 = r1.<android.support.v7.widget.LinearLayoutManager$AnchorInfo: int mPosition>;

        $i6 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        i0 = virtualinvoke $r3.<android.support.v7.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanIndex(int,int)>($i7, $i6);

        goto label1;

     label2:
        return;
    }

    private int getSpanGroupIndex(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, int)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        android.support.v7.widget.RecyclerView$State r2;
        int i0, i1, $i2, $i3, $i5, $i6;
        boolean $z0;
        android.support.v7.widget.GridLayoutManager$SpanSizeLookup $r3, $r8;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 != 0 goto label1;

        $r8 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i5 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        $i6 = virtualinvoke $r8.<android.support.v7.widget.GridLayoutManager$SpanSizeLookup: int getSpanGroupIndex(int,int)>(i0, $i5);

        return $i6;

     label1:
        i1 = virtualinvoke r1.<android.support.v7.widget.RecyclerView$Recycler: int convertPreLayoutPositionToPostLayout(int)>(i0);

        if i1 != -1 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find span size for pre layout position. ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GridLayoutManager", $r7);

        return 0;

     label2:
        $r3 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i2 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        $i3 = virtualinvoke $r3.<android.support.v7.widget.GridLayoutManager$SpanSizeLookup: int getSpanGroupIndex(int,int)>(i1, $i2);

        return $i3;
    }

    private int getSpanIndex(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, int)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        android.support.v7.widget.RecyclerView$State r2;
        int i0, i1, i2, $i3, $i4, $i5, $i7;
        boolean $z0;
        android.util.SparseIntArray $r3;
        android.support.v7.widget.GridLayoutManager$SpanSizeLookup $r4, $r9;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r7;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 != 0 goto label1;

        $r9 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i5 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        $i7 = virtualinvoke $r9.<android.support.v7.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanIndex(int,int)>(i0, $i5);

        return $i7;

     label1:
        $r3 = r0.<android.support.v7.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanIndexCache>;

        i1 = virtualinvoke $r3.<android.util.SparseIntArray: int get(int,int)>(i0, -1);

        if i1 == -1 goto label2;

        return i1;

     label2:
        i2 = virtualinvoke r1.<android.support.v7.widget.RecyclerView$Recycler: int convertPreLayoutPositionToPostLayout(int)>(i0);

        if i2 != -1 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find span size for pre layout position. It is not cached, not in the adapter. Pos:");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GridLayoutManager", $r7);

        return 0;

     label3:
        $r4 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i3 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        $i4 = virtualinvoke $r4.<android.support.v7.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanIndex(int,int)>(i2, $i3);

        return $i4;
    }

    private int getSpanSize(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, int)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        android.support.v7.widget.RecyclerView$State r2;
        int i0, i1, i2, $i3, $i5;
        boolean $z0;
        android.util.SparseIntArray $r3;
        android.support.v7.widget.GridLayoutManager$SpanSizeLookup $r4, $r9;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        i0 := @parameter2: int;

        $z0 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z0 != 0 goto label1;

        $r9 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i5 = virtualinvoke $r9.<android.support.v7.widget.GridLayoutManager$SpanSizeLookup: int getSpanSize(int)>(i0);

        return $i5;

     label1:
        $r3 = r0.<android.support.v7.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanSizeCache>;

        i1 = virtualinvoke $r3.<android.util.SparseIntArray: int get(int,int)>(i0, -1);

        if i1 == -1 goto label2;

        return i1;

     label2:
        i2 = virtualinvoke r1.<android.support.v7.widget.RecyclerView$Recycler: int convertPreLayoutPositionToPostLayout(int)>(i0);

        if i2 != -1 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find span size for pre layout position. It is not cached, not in the adapter. Pos:");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("GridLayoutManager", $r8);

        return 1;

     label3:
        $r4 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        $i3 = virtualinvoke $r4.<android.support.v7.widget.GridLayoutManager$SpanSizeLookup: int getSpanSize(int)>(i2);

        return $i3;
    }

    void layoutChunk(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, android.support.v7.widget.LinearLayoutManager$LayoutState, android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        android.support.v7.widget.RecyclerView$State r2;
        android.support.v7.widget.LinearLayoutManager$LayoutState r3;
        android.support.v7.widget.LinearLayoutManager$LayoutChunkResult r4;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, i49, i50, i51, i52, i53, i54, i55, i56, i57, i58, i59, i60, i61;
        android.view.View r5, r8, r31, r32;
        android.support.v7.widget.GridLayoutManager$LayoutParams r6, r7;
        android.view.View[] $r9, $r11, $r15, $r17, $r24;
        android.view.ViewGroup$LayoutParams $r10, $r18;
        android.support.v7.widget.OrientationHelper $r12, $r13, $r14, $r19;
        java.util.List $r16;
        java.lang.StringBuilder $r20, $r21, $r22, $r23, $r25, $r28, $r29, $r30;
        java.lang.IllegalArgumentException $r26;
        java.lang.String $r27;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        r3 := @parameter2: android.support.v7.widget.LinearLayoutManager$LayoutState;

        r4 := @parameter3: android.support.v7.widget.LinearLayoutManager$LayoutChunkResult;

        $i9 = r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mItemDirection>;

        if $i9 != 1 goto label01;

        $z7 = 1;

        goto label02;

     label01:
        $z7 = 0;

     label02:
        z0 = $z7;

        i0 = 0;

        i1 = 0;

        i2 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        if z0 != 0 goto label03;

        $i46 = r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        i3 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int getSpanIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int)>(r1, r2, $i46);

        $i47 = r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        i4 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int getSpanSize(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int)>(r1, r2, $i47);

        i2 = i3 + i4;

     label03:
        $i8 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        if i0 >= $i8 goto label07;

        $z6 = virtualinvoke r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: boolean hasMore(android.support.v7.widget.RecyclerView$State)>(r2);

        if $z6 == 0 goto label07;

        if i2 <= 0 goto label07;

        i49 = r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mCurrentPosition>;

        i50 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int getSpanSize(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int)>(r1, r2, i49);

        $i43 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        if i50 <= $i43 goto label04;

        $r26 = new java.lang.IllegalArgumentException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Item at position ");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i49);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requires ");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i50);

        $r28 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" spans but GridLayoutManager has only ");

        $i48 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i48);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" spans.");

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r27);

        throw $r26;

     label04:
        i2 = i2 - i50;

        if i2 >= 0 goto label05;

        goto label07;

     label05:
        r5 = virtualinvoke r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: android.view.View next(android.support.v7.widget.RecyclerView$Recycler)>(r1);

        if r5 != null goto label06;

        goto label07;

     label06:
        i1 = i1 + i50;

        $r24 = r0.<android.support.v7.widget.GridLayoutManager: android.view.View[] mSet>;

        $r24[i0] = r5;

        i0 = i0 + 1;

        goto label03;

     label07:
        if i0 != 0 goto label08;

        r4.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: boolean mFinished> = 1;

        return;

     label08:
        i51 = 0;

        specialinvoke r0.<android.support.v7.widget.GridLayoutManager: void assignSpans(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,boolean)>(r1, r2, i0, i1, z0);

        i52 = 0;

     label09:
        if i52 >= i0 goto label17;

        $r17 = r0.<android.support.v7.widget.GridLayoutManager: android.view.View[] mSet>;

        r31 = $r17[i52];

        $r16 = r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: java.util.List mScrapList>;

        if $r16 != null goto label11;

        if z0 == 0 goto label10;

        virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: void addView(android.view.View)>(r31);

        goto label13;

     label10:
        virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: void addView(android.view.View,int)>(r31, 0);

        goto label13;

     label11:
        if z0 == 0 goto label12;

        virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: void addDisappearingView(android.view.View)>(r31);

        goto label13;

     label12:
        virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: void addDisappearingView(android.view.View,int)>(r31, 0);

     label13:
        $i39 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: int getPosition(android.view.View)>(r31);

        i5 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int getSpanSize(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int)>(r1, r2, $i39);

        $i40 = r0.<android.support.v7.widget.GridLayoutManager: int mSizePerSpan>;

        $i41 = $i40 * i5;

        i6 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i41, 1073741824);

        $r18 = virtualinvoke r31.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r6 = (android.support.v7.widget.GridLayoutManager$LayoutParams) $r18;

        $i37 = r0.<android.support.v7.widget.GridLayoutManager: int mOrientation>;

        if $i37 != 1 goto label14;

        $i45 = r6.<android.support.v7.widget.GridLayoutManager$LayoutParams: int height>;

        $i42 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int getMainDirSpec(int)>($i45);

        specialinvoke r0.<android.support.v7.widget.GridLayoutManager: void measureChildWithDecorationsAndMargin(android.view.View,int,int)>(r31, i6, $i42);

        goto label15;

     label14:
        $i38 = r6.<android.support.v7.widget.GridLayoutManager$LayoutParams: int width>;

        $i44 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int getMainDirSpec(int)>($i38);

        specialinvoke r0.<android.support.v7.widget.GridLayoutManager: void measureChildWithDecorationsAndMargin(android.view.View,int,int)>(r31, $i44, i6);

     label15:
        $r19 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        i7 = virtualinvoke $r19.<android.support.v7.widget.OrientationHelper: int getDecoratedMeasurement(android.view.View)>(r31);

        if i7 <= i51 goto label16;

        i51 = i7;

     label16:
        i52 = i52 + 1;

        goto label09;

     label17:
        i53 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int getMainDirSpec(int)>(i51);

        i54 = 0;

     label18:
        if i54 >= i0 goto label21;

        $r15 = r0.<android.support.v7.widget.GridLayoutManager: android.view.View[] mSet>;

        r32 = $r15[i54];

        $r14 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i31 = virtualinvoke $r14.<android.support.v7.widget.OrientationHelper: int getDecoratedMeasurement(android.view.View)>(r32);

        if $i31 == i51 goto label20;

        $i35 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: int getPosition(android.view.View)>(r32);

        i55 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int getSpanSize(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int)>(r1, r2, $i35);

        $i34 = r0.<android.support.v7.widget.GridLayoutManager: int mSizePerSpan>;

        $i33 = $i34 * i55;

        i56 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i33, 1073741824);

        $i36 = r0.<android.support.v7.widget.GridLayoutManager: int mOrientation>;

        if $i36 != 1 goto label19;

        specialinvoke r0.<android.support.v7.widget.GridLayoutManager: void measureChildWithDecorationsAndMargin(android.view.View,int,int)>(r32, i56, i53);

        goto label20;

     label19:
        specialinvoke r0.<android.support.v7.widget.GridLayoutManager: void measureChildWithDecorationsAndMargin(android.view.View,int,int)>(r32, i53, i56);

     label20:
        i54 = i54 + 1;

        goto label18;

     label21:
        r4.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed> = i51;

        i57 = 0;

        i58 = 0;

        i59 = 0;

        i60 = 0;

        $i10 = r0.<android.support.v7.widget.GridLayoutManager: int mOrientation>;

        if $i10 != 1 goto label23;

        $i32 = r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mLayoutDirection>;

        if $i32 != -1 goto label22;

        i60 = r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset>;

        i59 = i60 - i51;

        goto label25;

     label22:
        i59 = r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset>;

        i60 = i59 + i51;

        goto label25;

     label23:
        $i11 = r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mLayoutDirection>;

        if $i11 != -1 goto label24;

        i58 = r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset>;

        i57 = i58 - i51;

        goto label25;

     label24:
        i57 = r3.<android.support.v7.widget.LinearLayoutManager$LayoutState: int mOffset>;

        i58 = i57 + i51;

     label25:
        i61 = 0;

     label26:
        if i61 >= i0 goto label31;

        $r11 = r0.<android.support.v7.widget.GridLayoutManager: android.view.View[] mSet>;

        r8 = $r11[i61];

        $r10 = virtualinvoke r8.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r7 = (android.support.v7.widget.GridLayoutManager$LayoutParams) $r10;

        $i13 = r0.<android.support.v7.widget.GridLayoutManager: int mOrientation>;

        if $i13 != 1 goto label27;

        $i26 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: int getPaddingLeft()>();

        $i27 = r0.<android.support.v7.widget.GridLayoutManager: int mSizePerSpan>;

        $i30 = staticinvoke <android.support.v7.widget.GridLayoutManager$LayoutParams: int access$000(android.support.v7.widget.GridLayoutManager$LayoutParams)>(r7);

        $i29 = $i27 * $i30;

        i57 = $i26 + $i29;

        $r13 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i28 = virtualinvoke $r13.<android.support.v7.widget.OrientationHelper: int getDecoratedMeasurementInOther(android.view.View)>(r8);

        i58 = i57 + $i28;

        goto label28;

     label27:
        $i12 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: int getPaddingTop()>();

        $i15 = r0.<android.support.v7.widget.GridLayoutManager: int mSizePerSpan>;

        $i14 = staticinvoke <android.support.v7.widget.GridLayoutManager$LayoutParams: int access$000(android.support.v7.widget.GridLayoutManager$LayoutParams)>(r7);

        $i16 = $i15 * $i14;

        i59 = $i12 + $i16;

        $r12 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.OrientationHelper mOrientationHelper>;

        $i19 = virtualinvoke $r12.<android.support.v7.widget.OrientationHelper: int getDecoratedMeasurementInOther(android.view.View)>(r8);

        i60 = i59 + $i19;

     label28:
        $i20 = r7.<android.support.v7.widget.GridLayoutManager$LayoutParams: int leftMargin>;

        $i25 = i57 + $i20;

        $i17 = r7.<android.support.v7.widget.GridLayoutManager$LayoutParams: int topMargin>;

        $i22 = i59 + $i17;

        $i18 = r7.<android.support.v7.widget.GridLayoutManager$LayoutParams: int rightMargin>;

        $i21 = i58 - $i18;

        $i23 = r7.<android.support.v7.widget.GridLayoutManager$LayoutParams: int bottomMargin>;

        $i24 = i60 - $i23;

        virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: void layoutDecorated(android.view.View,int,int,int,int)>(r8, $i25, $i22, $i21, $i24);

        $z3 = virtualinvoke r7.<android.support.v7.widget.GridLayoutManager$LayoutParams: boolean isItemRemoved()>();

        if $z3 != 0 goto label29;

        $z5 = virtualinvoke r7.<android.support.v7.widget.GridLayoutManager$LayoutParams: boolean isItemChanged()>();

        if $z5 == 0 goto label30;

     label29:
        r4.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: boolean mIgnoreConsumed> = 1;

     label30:
        $z1 = r4.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: boolean mFocusable>;

        $z2 = virtualinvoke r8.<android.view.View: boolean isFocusable()>();

        $z4 = $z1 | $z2;

        r4.<android.support.v7.widget.LinearLayoutManager$LayoutChunkResult: boolean mFocusable> = $z4;

        i61 = i61 + 1;

        goto label26;

     label31:
        $r9 = r0.<android.support.v7.widget.GridLayoutManager: android.view.View[] mSet>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r9, null);

        return;
    }

    private int getMainDirSpec(int)
    {
        android.support.v7.widget.GridLayoutManager r0;
        int i0, $i1, $i2;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $i2 = <android.support.v7.widget.GridLayoutManager: int MAIN_DIR_SPEC>;

        return $i2;

     label1:
        $i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i0, 1073741824);

        return $i1;
    }

    private void measureChildWithDecorationsAndMargin(android.view.View, int, int)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.view.View r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15;
        android.support.v7.widget.RecyclerView$LayoutParams r2;
        android.graphics.Rect $r3, $r5, $r6, $r7, $r8;
        android.view.ViewGroup$LayoutParams $r4;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = r0.<android.support.v7.widget.GridLayoutManager: android.graphics.Rect mDecorInsets>;

        virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect)>(r1, $r3);

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.v7.widget.RecyclerView$LayoutParams) $r4;

        $i3 = r2.<android.support.v7.widget.RecyclerView$LayoutParams: int leftMargin>;

        $r5 = r0.<android.support.v7.widget.GridLayoutManager: android.graphics.Rect mDecorInsets>;

        $i2 = $r5.<android.graphics.Rect: int left>;

        $i7 = $i3 + $i2;

        $i5 = r2.<android.support.v7.widget.RecyclerView$LayoutParams: int rightMargin>;

        $r6 = r0.<android.support.v7.widget.GridLayoutManager: android.graphics.Rect mDecorInsets>;

        $i4 = $r6.<android.graphics.Rect: int right>;

        $i6 = $i5 + $i4;

        i14 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int updateSpecWithExtra(int,int,int)>(i0, $i7, $i6);

        $i9 = r2.<android.support.v7.widget.RecyclerView$LayoutParams: int topMargin>;

        $r7 = r0.<android.support.v7.widget.GridLayoutManager: android.graphics.Rect mDecorInsets>;

        $i8 = $r7.<android.graphics.Rect: int top>;

        $i12 = $i9 + $i8;

        $i10 = r2.<android.support.v7.widget.RecyclerView$LayoutParams: int bottomMargin>;

        $r8 = r0.<android.support.v7.widget.GridLayoutManager: android.graphics.Rect mDecorInsets>;

        $i11 = $r8.<android.graphics.Rect: int bottom>;

        $i13 = $i10 + $i11;

        i15 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int updateSpecWithExtra(int,int,int)>(i1, $i12, $i13);

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i14, i15);

        return;
    }

    private int updateSpecWithExtra(int, int, int)
    {
        android.support.v7.widget.GridLayoutManager r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i1 != 0 goto label1;

        if i2 != 0 goto label1;

        return i0;

     label1:
        i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        if i3 == -2147483648 goto label2;

        if i3 != 1073741824 goto label3;

     label2:
        $i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        $i5 = $i4 - i1;

        $i6 = $i5 - i2;

        $i7 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i6, i3);

        return $i7;

     label3:
        return i0;
    }

    private void assignSpans(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, int, int, boolean)
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        android.support.v7.widget.RecyclerView$State r2;
        int i0, i1, i2, i4, i5, i7, $i8, $i9, $i11, $i12, $i14, $i15, $i16, $i17, $i19;
        boolean z0, $z1;
        byte b3, b6;
        android.view.View r3;
        android.support.v7.widget.GridLayoutManager$LayoutParams r4;
        android.view.View[] $r5;
        android.view.ViewGroup$LayoutParams $r6;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

        if z0 == 0 goto label1;

        i4 = 0;

        i5 = i0;

        b6 = 1;

        goto label2;

     label1:
        i4 = i0 - 1;

        i5 = -1;

        b6 = -1;

     label2:
        $i8 = r0.<android.support.v7.widget.GridLayoutManager: int mOrientation>;

        if $i8 != 1 goto label3;

        $z1 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: boolean isLayoutRTL()>();

        if $z1 == 0 goto label3;

        i2 = i1 - 1;

        b3 = -1;

        goto label4;

     label3:
        i2 = 0;

        b3 = 1;

     label4:
        i7 = i4;

     label5:
        if i7 == i5 goto label8;

        $r5 = r0.<android.support.v7.widget.GridLayoutManager: android.view.View[] mSet>;

        r3 = $r5[i7];

        $r6 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.v7.widget.GridLayoutManager$LayoutParams) $r6;

        $i9 = virtualinvoke r0.<android.support.v7.widget.GridLayoutManager: int getPosition(android.view.View)>(r3);

        $i11 = specialinvoke r0.<android.support.v7.widget.GridLayoutManager: int getSpanSize(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int)>(r1, r2, $i9);

        staticinvoke <android.support.v7.widget.GridLayoutManager$LayoutParams: int access$102(android.support.v7.widget.GridLayoutManager$LayoutParams,int)>(r4, $i11);

        if b3 != -1 goto label6;

        $i14 = staticinvoke <android.support.v7.widget.GridLayoutManager$LayoutParams: int access$100(android.support.v7.widget.GridLayoutManager$LayoutParams)>(r4);

        if $i14 <= 1 goto label6;

        $i17 = staticinvoke <android.support.v7.widget.GridLayoutManager$LayoutParams: int access$100(android.support.v7.widget.GridLayoutManager$LayoutParams)>(r4);

        $i16 = $i17 - 1;

        $i19 = i2 - $i16;

        staticinvoke <android.support.v7.widget.GridLayoutManager$LayoutParams: int access$002(android.support.v7.widget.GridLayoutManager$LayoutParams,int)>(r4, $i19);

        goto label7;

     label6:
        staticinvoke <android.support.v7.widget.GridLayoutManager$LayoutParams: int access$002(android.support.v7.widget.GridLayoutManager$LayoutParams,int)>(r4, i2);

     label7:
        $i12 = staticinvoke <android.support.v7.widget.GridLayoutManager$LayoutParams: int access$100(android.support.v7.widget.GridLayoutManager$LayoutParams)>(r4);

        $i15 = b3 * $i12;

        i2 = i2 + $i15;

        i7 = i7 + b6;

        goto label5;

     label8:
        return;
    }

    public int getSpanCount()
    {
        android.support.v7.widget.GridLayoutManager r0;
        int $i0;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $i0 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        return $i0;
    }

    public void setSpanCount(int)
    {
        android.support.v7.widget.GridLayoutManager r0;
        int i0, $i1;
        android.support.v7.widget.GridLayoutManager$SpanSizeLookup $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        i0 := @parameter0: int;

        $i1 = r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount>;

        if i0 != $i1 goto label1;

        return;

     label1:
        if i0 >= 1 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Span count should be at least 1. Provided ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label2:
        r0.<android.support.v7.widget.GridLayoutManager: int mSpanCount> = i0;

        $r1 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup>;

        virtualinvoke $r1.<android.support.v7.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()>();

        return;
    }

    public boolean supportsPredictiveItemAnimations()
    {
        android.support.v7.widget.GridLayoutManager r0;
        android.support.v7.widget.LinearLayoutManager$SavedState $r1;
        boolean $z0;

        r0 := @this: android.support.v7.widget.GridLayoutManager;

        $r1 = r0.<android.support.v7.widget.GridLayoutManager: android.support.v7.widget.LinearLayoutManager$SavedState mPendingSavedState>;

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void <clinit>()
    {
        int $i0;

        <android.support.v7.widget.GridLayoutManager: int DEFAULT_SPAN_COUNT> = -1;

        <android.support.v7.widget.GridLayoutManager: java.lang.String TAG> = "GridLayoutManager";

        <android.support.v7.widget.GridLayoutManager: boolean DEBUG> = 0;

        $i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(0, 0);

        <android.support.v7.widget.GridLayoutManager: int MAIN_DIR_SPEC> = $i0;

        return;
    }
}
