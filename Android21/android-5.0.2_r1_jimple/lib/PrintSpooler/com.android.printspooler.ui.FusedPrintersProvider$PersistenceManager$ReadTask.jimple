final class com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask extends android.os.AsyncTask
{
    final com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager this$1;

    private void <init>(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager)
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask r0;
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager r1;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask;

        r1 := @parameter0: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager;

        r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager this$1> = r1;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        return;
    }

    protected transient java.util.List doInBackground(java.lang.Void[])
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask r0;
        java.lang.Void[] r1;
        java.util.List $r2;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask;

        r1 := @parameter0: java.lang.Void[];

        $r2 = specialinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: java.util.List doReadPrinterHistory()>();

        return $r2;
    }

    protected void onPostExecute(java.util.List)
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask r0;
        java.util.List r1, r3, $r15, $r20, $r21, $r23, $r29, $r35;
        android.print.PrintManager r2;
        android.util.ArraySet r4, $r11;
        int i0, i1, i2, i3;
        android.content.pm.ServiceInfo r5;
        android.content.ComponentName r6, $r42, r48;
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager $r7, $r12, $r13, $r18, $r19, $r22, $r24, $r25, $r26, $r27, $r32, $r34, $r38;
        com.android.printspooler.ui.FusedPrintersProvider $r8, $r16, $r17, $r30, $r31, $r33;
        android.content.Context $r9;
        java.lang.Object $r10, $r36, $r45;
        android.print.PrinterDiscoverySession $r28;
        android.print.PrinterInfo $r37;
        boolean $z3;
        android.print.PrinterId $r41;
        android.content.pm.ResolveInfo $r43;
        android.printservice.PrintServiceInfo $r44;
        java.lang.String $r46, $r47;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask;

        r1 := @parameter0: java.util.List;

        $r7 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager this$1>;

        $r8 = $r7.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: com.android.printspooler.ui.FusedPrintersProvider this$0>;

        $r9 = virtualinvoke $r8.<com.android.printspooler.ui.FusedPrintersProvider: android.content.Context getContext()>();

        $r10 = virtualinvoke $r9.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("print");

        r2 = (android.print.PrintManager) $r10;

        r3 = virtualinvoke r2.<android.print.PrintManager: java.util.List getEnabledPrintServices()>();

        $r11 = new android.util.ArraySet;

        specialinvoke $r11.<android.util.ArraySet: void <init>()>();

        r4 = $r11;

        i0 = interfaceinvoke r3.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r45 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1);

        $r44 = (android.printservice.PrintServiceInfo) $r45;

        $r43 = virtualinvoke $r44.<android.printservice.PrintServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>();

        r5 = $r43.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r42 = new android.content.ComponentName;

        $r46 = r5.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r47 = r5.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r42.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r46, $r47);

        r6 = $r42;

        interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        i2 = interfaceinvoke r1.<java.util.List: int size()>();

        i3 = i2 - 1;

     label3:
        if i3 < 0 goto label5;

        $r36 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        $r37 = (android.print.PrinterInfo) $r36;

        $r41 = virtualinvoke $r37.<android.print.PrinterInfo: android.print.PrinterId getId()>();

        r48 = virtualinvoke $r41.<android.print.PrinterId: android.content.ComponentName getServiceName()>();

        $z3 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>(r48);

        if $z3 != 0 goto label4;

        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(i3);

     label4:
        i3 = i3 + -1;

        goto label3;

     label5:
        $r12 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager this$1>;

        staticinvoke <com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: java.util.List access$702(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager,java.util.List)>($r12, r1);

        $r13 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager this$1>;

        $r16 = $r13.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: com.android.printspooler.ui.FusedPrintersProvider this$0>;

        $r15 = staticinvoke <com.android.printspooler.ui.FusedPrintersProvider: java.util.List access$200(com.android.printspooler.ui.FusedPrintersProvider)>($r16);

        interfaceinvoke $r15.<java.util.List: void clear()>();

        $r18 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager this$1>;

        $r17 = $r18.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: com.android.printspooler.ui.FusedPrintersProvider this$0>;

        $r20 = staticinvoke <com.android.printspooler.ui.FusedPrintersProvider: java.util.List access$200(com.android.printspooler.ui.FusedPrintersProvider)>($r17);

        $r22 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager this$1>;

        $r19 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager this$1>;

        $r21 = staticinvoke <com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: java.util.List access$700(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager)>($r19);

        $r23 = staticinvoke <com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: java.util.List access$800(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager,java.util.List)>($r22, $r21);

        interfaceinvoke $r20.<java.util.List: boolean addAll(java.util.Collection)>($r23);

        $r24 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager this$1>;

        staticinvoke <com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: boolean access$902(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager,boolean)>($r24, 0);

        $r27 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager this$1>;

        staticinvoke <com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: boolean access$402(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager,boolean)>($r27, 1);

        $r25 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager this$1>;

        $r31 = $r25.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: com.android.printspooler.ui.FusedPrintersProvider this$0>;

        $r26 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager this$1>;

        $r30 = $r26.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: com.android.printspooler.ui.FusedPrintersProvider this$0>;

        $r28 = staticinvoke <com.android.printspooler.ui.FusedPrintersProvider: android.print.PrinterDiscoverySession access$100(com.android.printspooler.ui.FusedPrintersProvider)>($r30);

        $r29 = virtualinvoke $r28.<android.print.PrinterDiscoverySession: java.util.List getPrinters()>();

        $r34 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager this$1>;

        $r35 = staticinvoke <com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: java.util.List access$700(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager)>($r34);

        staticinvoke <com.android.printspooler.ui.FusedPrintersProvider: void access$300(com.android.printspooler.ui.FusedPrintersProvider,java.util.List,java.util.List)>($r31, $r29, $r35);

        $r32 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager this$1>;

        $r33 = $r32.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: com.android.printspooler.ui.FusedPrintersProvider this$0>;

        staticinvoke <com.android.printspooler.ui.FusedPrintersProvider: void access$1000(com.android.printspooler.ui.FusedPrintersProvider)>($r33);

        $r38 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager this$1>;

        staticinvoke <com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask access$1102(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager,com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask)>($r38, null);

        return;
    }

    private java.util.List doReadPrinterHistory()
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask r0;
        java.io.FileInputStream r1;
        org.xmlpull.v1.XmlPullParser r3;
        java.util.ArrayList r4, $r8, $r17, r18;
        java.lang.Throwable r5, $r13;
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager $r6, $r9, $r10;
        android.util.AtomicFile $r7, $r11;
        java.io.File $r12;
        long $l0;
        java.lang.Exception $r14, r19;
        java.io.FileNotFoundException $r15;
        java.util.List $r16;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask;

     label01:
        $r6 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager this$1>;

        $r7 = staticinvoke <com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: android.util.AtomicFile access$1200(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager)>($r6);

        r1 = virtualinvoke $r7.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label02:
        goto label04;

     label03:
        $r15 := @caughtexception;

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        return $r17;

     label04:
        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r18 = $r8;

        r3 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r1, null);

        specialinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: void parseState(org.xmlpull.v1.XmlPullParser,java.util.List)>(r3, r18);

        $r10 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager this$1>;

        $r9 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager this$1>;

        $r11 = staticinvoke <com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: android.util.AtomicFile access$1200(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager)>($r9);

        $r12 = virtualinvoke $r11.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $l0 = virtualinvoke $r12.<java.io.File: long lastModified()>();

        staticinvoke <com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: long access$1302(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager,long)>($r10, $l0);

        r4 = r18;

     label05:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        return r4;

     label06:
        $r14 := @caughtexception;

        r19 = $r14;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("FusedPrintersProvider", "Failed parsing ", r19);

     label07:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        goto label10;

     label08:
        $r13 := @caughtexception;

        r5 = $r13;

     label09:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        throw r5;

     label10:
        $r16 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r16;

        catch java.io.FileNotFoundException from label01 to label02 with label03;
        catch java.lang.IllegalStateException from label04 to label05 with label06;
        catch java.lang.NullPointerException from label04 to label05 with label06;
        catch java.lang.NumberFormatException from label04 to label05 with label06;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label06;
        catch java.io.IOException from label04 to label05 with label06;
        catch java.lang.IndexOutOfBoundsException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private void parseState(org.xmlpull.v1.XmlPullParser, java.util.List) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.util.List r2;
        boolean $z0, $z1;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.util.List;

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        specialinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        specialinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: void expect(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 2, "printers");

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

     label1:
        $z0 = specialinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: boolean parsePrinter(org.xmlpull.v1.XmlPullParser,java.util.List)>(r1, r2);

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: boolean isCancelled()>();

        if $z1 == 0 goto label2;

        return;

     label2:
        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label1;

     label3:
        specialinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        specialinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: void expect(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 3, "printers");

        return;
    }

    private boolean parsePrinter(org.xmlpull.v1.XmlPullParser, java.util.List) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.util.List r2;
        java.lang.String r3, r4, r5, $r10, $r11;
        int i0;
        android.content.ComponentName r6;
        android.print.PrinterId r7, $r12;
        android.print.PrinterInfo$Builder r8, $r13;
        android.print.PrinterInfo r9;
        boolean $z0;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        $z0 = specialinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: boolean accept(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 2, "printer");

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "description");

        $r10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "status");

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        specialinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        specialinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: void expect(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 2, "printerId");

        r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "localId");

        $r11 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "serviceName");

        r6 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>($r11);

        $r12 = new android.print.PrinterId;

        specialinvoke $r12.<android.print.PrinterId: void <init>(android.content.ComponentName,java.lang.String)>(r6, r5);

        r7 = $r12;

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        specialinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        specialinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: void expect(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 3, "printerId");

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        $r13 = new android.print.PrinterInfo$Builder;

        specialinvoke $r13.<android.print.PrinterInfo$Builder: void <init>(android.print.PrinterId,java.lang.String,int)>(r7, r3, i0);

        r8 = $r13;

        virtualinvoke r8.<android.print.PrinterInfo$Builder: android.print.PrinterInfo$Builder setDescription(java.lang.String)>(r4);

        r9 = virtualinvoke r8.<android.print.PrinterInfo$Builder: android.print.PrinterInfo build()>();

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r9);

        specialinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        specialinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: void expect(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 3, "printer");

        return 1;
    }

    private void expect(org.xmlpull.v1.XmlPullParser, int, java.lang.String) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, $i1;
        java.lang.String r2, $r12, $r13;
        boolean $z0;
        org.xmlpull.v1.XmlPullParserException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r14;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $z0 = specialinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: boolean accept(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, i0, r2);

        if $z0 != 0 goto label1;

        $r3 = new org.xmlpull.v1.XmlPullParserException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exepected event: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and tag: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but got event: ");

        $i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and tag:");

        $r12 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r13);

        throw $r3;

     label1:
        return;
    }

    private void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask r0;
        org.xmlpull.v1.XmlPullParser r1;
        boolean $z0, $z1;
        java.lang.String $r2, $r3;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

     label1:
        $z0 = specialinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: boolean accept(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 4, null);

        if $z0 == 0 goto label2;

        $r2 = "\n";

        $r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label1;

     label2:
        return;
    }

    private boolean accept(org.xmlpull.v1.XmlPullParser, int, java.lang.String) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, $i1;
        java.lang.String r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i1 == i0 goto label1;

        return 0;

     label1:
        if r2 == null goto label2;

        $r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label3;

        return 0;

     label2:
        $r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        if $r3 == null goto label3;

        return 0;

     label3:
        return 1;
    }

    protected volatile void onPostExecute(java.lang.Object)
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask r0;
        java.lang.Object r1;
        java.util.List $r2;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.List) r1;

        virtualinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: void onPostExecute(java.util.List)>($r2);

        return;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask r0;
        java.lang.Object[] r1;
        java.lang.Void[] $r2;
        java.util.List $r3;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (java.lang.Void[]) r1;

        $r3 = virtualinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: java.util.List doInBackground(java.lang.Void[])>($r2);

        return $r3;
    }

    void <init>(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager, com.android.printspooler.ui.FusedPrintersProvider$1)
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask r0;
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager r1;
        com.android.printspooler.ui.FusedPrintersProvider$1 r2;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask;

        r1 := @parameter0: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager;

        r2 := @parameter1: com.android.printspooler.ui.FusedPrintersProvider$1;

        specialinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: void <init>(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager)>(r1);

        return;
    }
}
