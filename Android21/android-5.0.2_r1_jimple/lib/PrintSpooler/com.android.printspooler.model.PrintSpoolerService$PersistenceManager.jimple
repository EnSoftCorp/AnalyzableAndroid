final class com.android.printspooler.model.PrintSpoolerService$PersistenceManager extends java.lang.Object
{
    private static final java.lang.String PERSIST_FILE_NAME;
    private static final java.lang.String TAG_SPOOLER;
    private static final java.lang.String TAG_JOB;
    private static final java.lang.String TAG_PRINTER_ID;
    private static final java.lang.String TAG_PAGE_RANGE;
    private static final java.lang.String TAG_ATTRIBUTES;
    private static final java.lang.String TAG_DOCUMENT_INFO;
    private static final java.lang.String ATTR_ID;
    private static final java.lang.String ATTR_LABEL;
    private static final java.lang.String ATTR_LABEL_RES_ID;
    private static final java.lang.String ATTR_PACKAGE_NAME;
    private static final java.lang.String ATTR_STATE;
    private static final java.lang.String ATTR_APP_ID;
    private static final java.lang.String ATTR_TAG;
    private static final java.lang.String ATTR_CREATION_TIME;
    private static final java.lang.String ATTR_COPIES;
    private static final java.lang.String ATTR_PRINTER_NAME;
    private static final java.lang.String ATTR_STATE_REASON;
    private static final java.lang.String ATTR_CANCELLING;
    private static final java.lang.String TAG_ADVANCED_OPTIONS;
    private static final java.lang.String TAG_ADVANCED_OPTION;
    private static final java.lang.String ATTR_KEY;
    private static final java.lang.String ATTR_TYPE;
    private static final java.lang.String ATTR_VALUE;
    private static final java.lang.String TYPE_STRING;
    private static final java.lang.String TYPE_INT;
    private static final java.lang.String TAG_MEDIA_SIZE;
    private static final java.lang.String TAG_RESOLUTION;
    private static final java.lang.String TAG_MARGINS;
    private static final java.lang.String ATTR_COLOR_MODE;
    private static final java.lang.String ATTR_LOCAL_ID;
    private static final java.lang.String ATTR_SERVICE_NAME;
    private static final java.lang.String ATTR_WIDTH_MILS;
    private static final java.lang.String ATTR_HEIGHT_MILS;
    private static final java.lang.String ATTR_HORIZONTAL_DPI;
    private static final java.lang.String ATTR_VERTICAL_DPI;
    private static final java.lang.String ATTR_LEFT_MILS;
    private static final java.lang.String ATTR_TOP_MILS;
    private static final java.lang.String ATTR_RIGHT_MILS;
    private static final java.lang.String ATTR_BOTTOM_MILS;
    private static final java.lang.String ATTR_START;
    private static final java.lang.String ATTR_END;
    private static final java.lang.String ATTR_NAME;
    private static final java.lang.String ATTR_PAGE_COUNT;
    private static final java.lang.String ATTR_CONTENT_TYPE;
    private static final java.lang.String ATTR_DATA_SIZE;
    private final android.util.AtomicFile mStatePersistFile;
    private boolean mWriteStateScheduled;
    final com.android.printspooler.model.PrintSpoolerService this$0;

    private void <init>(com.android.printspooler.model.PrintSpoolerService)
    {
        com.android.printspooler.model.PrintSpoolerService$PersistenceManager r0;
        com.android.printspooler.model.PrintSpoolerService r1;
        android.util.AtomicFile $r2;
        java.io.File $r3, $r4;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService$PersistenceManager;

        r1 := @parameter0: com.android.printspooler.model.PrintSpoolerService;

        r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: com.android.printspooler.model.PrintSpoolerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.util.AtomicFile;

        $r3 = new java.io.File;

        $r4 = virtualinvoke r1.<com.android.printspooler.model.PrintSpoolerService: java.io.File getFilesDir()>();

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, "print_spooler_state.xml");

        specialinvoke $r2.<android.util.AtomicFile: void <init>(java.io.File)>($r3);

        r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: android.util.AtomicFile mStatePersistFile> = $r2;

        return;
    }

    public void writeStateLocked()
    {
        com.android.printspooler.model.PrintSpoolerService$PersistenceManager r0;
        boolean $z0;
        com.android.printspooler.model.PrintSpoolerService$PersistenceManager$1 $r1;
        java.lang.Void[] $r2;
        java.util.concurrent.Executor $r3;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService$PersistenceManager;

        $z0 = r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: boolean mWriteStateScheduled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: boolean mWriteStateScheduled> = 1;

        $r1 = new com.android.printspooler.model.PrintSpoolerService$PersistenceManager$1;

        specialinvoke $r1.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager$1: void <init>(com.android.printspooler.model.PrintSpoolerService$PersistenceManager)>(r0);

        $r3 = <android.os.AsyncTask: java.util.concurrent.Executor SERIAL_EXECUTOR>;

        $r2 = (java.lang.Void[]) null;

        virtualinvoke $r1.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager$1: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r3, $r2);

        return;
    }

    private void doWriteStateLocked()
    {
        com.android.printspooler.model.PrintSpoolerService$PersistenceManager r0;
        java.io.FileOutputStream r1;
        com.android.internal.util.FastXmlSerializer r2, $r17;
        java.util.List r3;
        int i0, i1, i2, i3, $i4, $i5, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        android.print.PrintJobInfo r4;
        java.lang.String r5, r6, r7, r15, $r26, $r29, $r30, $r33, $r35, $r36, $r38, $r40, $r59, $r60, $r63, $r68, $r70, $r71, $r73, $r76, $r80, $r82, $r85, $r88, $r91, $r92, $r95, $r96, $r97, $r101, $r102, $r104, $r109, $r114, $r125, $r128, r134, r135;
        android.print.PrinterId r8;
        android.print.PageRange[] r9;
        android.print.PrintAttributes$MediaSize r10;
        android.print.PrintAttributes$Resolution r11;
        java.lang.Object r12, $r22, $r43;
        android.print.PrintAttributes$Margins r13;
        java.lang.Throwable r14, $r129;
        android.util.AtomicFile $r16, $r23, $r118;
        java.lang.Boolean $r19;
        com.android.printspooler.model.PrintSpoolerService $r20, $r25, $r108;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.print.PrintJobId $r28;
        long $l6, $l11;
        java.util.Set $r46;
        java.lang.Integer $r50;
        android.content.pm.PackageManager $r105;
        android.print.PageRange $r113, $r117;
        java.io.IOException $r119, r136;
        android.content.ComponentName $r126;
        android.print.PrintAttributes r130;
        android.print.PrintDocumentInfo r131;
        android.os.Bundle r132;
        java.util.Iterator r133;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService$PersistenceManager;

        r1 = null;

     label01:
        $r16 = r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: android.util.AtomicFile mStatePersistFile>;

        r1 = virtualinvoke $r16.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

        $r17 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r17.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r2 = $r17;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r1, "utf-8");

        $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r19);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "spooler");

        $r20 = r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: com.android.printspooler.model.PrintSpoolerService this$0>;

        r3 = staticinvoke <com.android.printspooler.model.PrintSpoolerService: java.util.List access$800(com.android.printspooler.model.PrintSpoolerService)>($r20);

        i0 = interfaceinvoke r3.<java.util.List: int size()>();

        i1 = 0;

     label02:
        if i1 >= i0 goto label23;

        $r22 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (android.print.PrintJobInfo) $r22;

        $r25 = r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: com.android.printspooler.model.PrintSpoolerService this$0>;

        $z0 = staticinvoke <com.android.printspooler.model.PrintSpoolerService: boolean access$900(com.android.printspooler.model.PrintSpoolerService,android.print.PrintJobInfo)>($r25, r4);

        if $z0 != 0 goto label03;

        goto label22;

     label03:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "job");

        $r28 = virtualinvoke r4.<android.print.PrintJobInfo: android.print.PrintJobId getId()>();

        $r26 = virtualinvoke $r28.<android.print.PrintJobId: java.lang.String flattenToString()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "id", $r26);

        $r29 = virtualinvoke r4.<android.print.PrintJobInfo: java.lang.String getLabel()>();

        $r30 = virtualinvoke $r29.<java.lang.String: java.lang.String toString()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "label", $r30);

        $i4 = virtualinvoke r4.<android.print.PrintJobInfo: int getState()>();

        $r33 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i4);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "state", $r33);

        $i5 = virtualinvoke r4.<android.print.PrintJobInfo: int getAppId()>();

        $r35 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i5);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "appId", $r35);

        r5 = virtualinvoke r4.<android.print.PrintJobInfo: java.lang.String getTag()>();

        if r5 == null goto label04;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "tag", r5);

     label04:
        $l6 = virtualinvoke r4.<android.print.PrintJobInfo: long getCreationTime()>();

        $r36 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l6);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "creationTime", $r36);

        $i7 = virtualinvoke r4.<android.print.PrintJobInfo: int getCopies()>();

        $r38 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i7);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "copies", $r38);

        r6 = virtualinvoke r4.<android.print.PrintJobInfo: java.lang.String getPrinterName()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z2 != 0 goto label05;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "printerName", r6);

     label05:
        r7 = virtualinvoke r4.<android.print.PrintJobInfo: java.lang.String getStateReason()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r7);

        if $z1 != 0 goto label06;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "stateReason", r7);

     label06:
        $z3 = virtualinvoke r4.<android.print.PrintJobInfo: boolean isCancelling()>();

        $r40 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z3);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "cancelling", $r40);

        r8 = virtualinvoke r4.<android.print.PrintJobInfo: android.print.PrinterId getPrinterId()>();

        if r8 == null goto label07;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "printerId");

        $r128 = virtualinvoke r8.<android.print.PrinterId: java.lang.String getLocalId()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "localId", $r128);

        $r126 = virtualinvoke r8.<android.print.PrinterId: android.content.ComponentName getServiceName()>();

        $r125 = virtualinvoke $r126.<android.content.ComponentName: java.lang.String flattenToString()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "serviceName", $r125);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "printerId");

     label07:
        r9 = virtualinvoke r4.<android.print.PrintJobInfo: android.print.PageRange[] getPages()>();

        if r9 == null goto label09;

        i2 = 0;

     label08:
        $i24 = lengthof r9;

        if i2 >= $i24 goto label09;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "pageRange");

        $r117 = r9[i2];

        $i23 = virtualinvoke $r117.<android.print.PageRange: int getStart()>();

        $r114 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i23);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "start", $r114);

        $r113 = r9[i2];

        $i22 = virtualinvoke $r113.<android.print.PageRange: int getEnd()>();

        $r109 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i22);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "end", $r109);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "pageRange");

        i2 = i2 + 1;

        goto label08;

     label09:
        r130 = virtualinvoke r4.<android.print.PrintJobInfo: android.print.PrintAttributes getAttributes()>();

        if r130 == null goto label15;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "attributes");

        i3 = virtualinvoke r130.<android.print.PrintAttributes: int getColorMode()>();

        $r73 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i3);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "colorMode", $r73);

        r10 = virtualinvoke r130.<android.print.PrintAttributes: android.print.PrintAttributes$MediaSize getMediaSize()>();

        if r10 == null goto label12;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "mediaSize");

        $r97 = virtualinvoke r10.<android.print.PrintAttributes$MediaSize: java.lang.String getId()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "id", $r97);

        $i19 = virtualinvoke r10.<android.print.PrintAttributes$MediaSize: int getWidthMils()>();

        $r92 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i19);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "widthMils", $r92);

        $i18 = virtualinvoke r10.<android.print.PrintAttributes$MediaSize: int getHeightMils()>();

        $r96 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i18);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "heightMils", $r96);

        $r95 = r10.<android.print.PrintAttributes$MediaSize: java.lang.String mPackageName>;

        $z7 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r95);

        if $z7 != 0 goto label10;

        $i20 = r10.<android.print.PrintAttributes$MediaSize: int mLabelResId>;

        if $i20 <= 0 goto label10;

        $r102 = r10.<android.print.PrintAttributes$MediaSize: java.lang.String mPackageName>;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "packageName", $r102);

        $i21 = r10.<android.print.PrintAttributes$MediaSize: int mLabelResId>;

        $r101 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i21);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "labelResId", $r101);

        goto label11;

     label10:
        $r108 = r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: com.android.printspooler.model.PrintSpoolerService this$0>;

        $r105 = virtualinvoke $r108.<com.android.printspooler.model.PrintSpoolerService: android.content.pm.PackageManager getPackageManager()>();

        $r104 = virtualinvoke r10.<android.print.PrintAttributes$MediaSize: java.lang.String getLabel(android.content.pm.PackageManager)>($r105);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "label", $r104);

     label11:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "mediaSize");

     label12:
        r11 = virtualinvoke r130.<android.print.PrintAttributes: android.print.PrintAttributes$Resolution getResolution()>();

        if r11 == null goto label13;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "resolution");

        $r80 = virtualinvoke r11.<android.print.PrintAttributes$Resolution: java.lang.String getId()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "id", $r80);

        $i17 = virtualinvoke r11.<android.print.PrintAttributes$Resolution: int getHorizontalDpi()>();

        $r91 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i17);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "horizontalDip", $r91);

        $i16 = virtualinvoke r11.<android.print.PrintAttributes$Resolution: int getVerticalDpi()>();

        $r85 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i16);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "verticalDpi", $r85);

        $r88 = virtualinvoke r11.<android.print.PrintAttributes$Resolution: java.lang.String getLabel()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "label", $r88);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "resolution");

     label13:
        r13 = virtualinvoke r130.<android.print.PrintAttributes: android.print.PrintAttributes$Margins getMinMargins()>();

        if r13 == null goto label14;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "margins");

        $i12 = virtualinvoke r13.<android.print.PrintAttributes$Margins: int getLeftMils()>();

        $r70 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i12);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "leftMils", $r70);

        $i13 = virtualinvoke r13.<android.print.PrintAttributes$Margins: int getTopMils()>();

        $r71 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i13);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "topMils", $r71);

        $i15 = virtualinvoke r13.<android.print.PrintAttributes$Margins: int getRightMils()>();

        $r82 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i15);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "rightMils", $r82);

        $i14 = virtualinvoke r13.<android.print.PrintAttributes$Margins: int getBottomMils()>();

        $r76 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i14);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "bottomMils", $r76);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "margins");

     label14:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "attributes");

     label15:
        r131 = virtualinvoke r4.<android.print.PrintJobInfo: android.print.PrintDocumentInfo getDocumentInfo()>();

        if r131 == null goto label16;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "documentInfo");

        $r60 = virtualinvoke r131.<android.print.PrintDocumentInfo: java.lang.String getName()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r60);

        $i9 = virtualinvoke r131.<android.print.PrintDocumentInfo: int getContentType()>();

        $r59 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i9);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "contentType", $r59);

        $i10 = virtualinvoke r131.<android.print.PrintDocumentInfo: int getPageCount()>();

        $r63 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i10);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "pageCount", $r63);

        $l11 = virtualinvoke r131.<android.print.PrintDocumentInfo: long getDataSize()>();

        $r68 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l11);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "dataSize", $r68);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "documentInfo");

     label16:
        r132 = virtualinvoke r4.<android.print.PrintJobInfo: android.os.Bundle getAdvancedOptions()>();

        if r132 == null goto label21;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "advancedOptions");

        $r46 = virtualinvoke r132.<android.os.Bundle: java.util.Set keySet()>();

        r133 = interfaceinvoke $r46.<java.util.Set: java.util.Iterator iterator()>();

     label17:
        $z4 = interfaceinvoke r133.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label20;

        $r43 = interfaceinvoke r133.<java.util.Iterator: java.lang.Object next()>();

        r134 = (java.lang.String) $r43;

        r12 = virtualinvoke r132.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r134);

        $z6 = r12 instanceof java.lang.String;

        if $z6 == 0 goto label18;

        r15 = (java.lang.String) r12;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "advancedOption");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "key", r134);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "string");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", r15);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "advancedOption");

        goto label19;

     label18:
        $z5 = r12 instanceof java.lang.Integer;

        if $z5 == 0 goto label19;

        $r50 = (java.lang.Integer) r12;

        $i8 = virtualinvoke $r50.<java.lang.Integer: int intValue()>();

        r135 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i8);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "advancedOption");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "key", r134);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "int");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", r135);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "advancedOption");

     label19:
        goto label17;

     label20:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "advancedOptions");

     label21:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "job");

     label22:
        i1 = i1 + 1;

        goto label02;

     label23:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "spooler");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        $r23 = r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: android.util.AtomicFile mStatePersistFile>;

        virtualinvoke $r23.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r1);

     label24:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        goto label29;

     label25:
        $r119 := @caughtexception;

        r136 = $r119;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PrintSpoolerService", "Failed to write state, restoring backup.", r136);

        $r118 = r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: android.util.AtomicFile mStatePersistFile>;

        virtualinvoke $r118.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r1);

     label26:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        goto label29;

     label27:
        $r129 := @caughtexception;

        r14 = $r129;

     label28:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        throw r14;

     label29:
        return;

        catch java.io.IOException from label01 to label24 with label25;
        catch java.lang.Throwable from label01 to label24 with label27;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label27 to label28 with label27;
    }

    public void readStateLocked()
    {
        com.android.printspooler.model.PrintSpoolerService$PersistenceManager r0;
        java.lang.Throwable r1, $r6;
        android.util.AtomicFile $r2;
        java.lang.IllegalStateException $r3, r13;
        java.lang.NumberFormatException $r4, r15;
        java.io.IOException $r5, r17;
        java.io.FileNotFoundException $r7;
        java.lang.NullPointerException $r8, r14;
        java.lang.IndexOutOfBoundsException $r9, r18;
        org.xmlpull.v1.XmlPullParserException $r10, r16;
        java.io.FileInputStream r11;
        org.xmlpull.v1.XmlPullParser r12;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService$PersistenceManager;

     label01:
        $r2 = r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: android.util.AtomicFile mStatePersistFile>;

        r11 = virtualinvoke $r2.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label02:
        goto label04;

     label03:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PrintSpoolerService", "No existing print spooler state.");

        return;

     label04:
        r12 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r12.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r11, null);

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void parseState(org.xmlpull.v1.XmlPullParser)>(r12);

     label05:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r11);

        goto label20;

     label06:
        $r3 := @caughtexception;

        r13 = $r3;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PrintSpoolerService", "Failed parsing ", r13);

     label07:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r11);

        goto label20;

     label08:
        $r8 := @caughtexception;

        r14 = $r8;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PrintSpoolerService", "Failed parsing ", r14);

     label09:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r11);

        goto label20;

     label10:
        $r4 := @caughtexception;

        r15 = $r4;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PrintSpoolerService", "Failed parsing ", r15);

     label11:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r11);

        goto label20;

     label12:
        $r10 := @caughtexception;

        r16 = $r10;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PrintSpoolerService", "Failed parsing ", r16);

     label13:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r11);

        goto label20;

     label14:
        $r5 := @caughtexception;

        r17 = $r5;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PrintSpoolerService", "Failed parsing ", r17);

     label15:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r11);

        goto label20;

     label16:
        $r9 := @caughtexception;

        r18 = $r9;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PrintSpoolerService", "Failed parsing ", r18);

     label17:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r11);

        goto label20;

     label18:
        $r6 := @caughtexception;

        r1 = $r6;

     label19:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r11);

        throw r1;

     label20:
        return;

        catch java.io.FileNotFoundException from label01 to label02 with label03;
        catch java.lang.IllegalStateException from label04 to label05 with label06;
        catch java.lang.NullPointerException from label04 to label05 with label08;
        catch java.lang.NumberFormatException from label04 to label05 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label12;
        catch java.io.IOException from label04 to label05 with label14;
        catch java.lang.IndexOutOfBoundsException from label04 to label05 with label16;
        catch java.lang.Throwable from label04 to label05 with label18;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label12 to label13 with label18;
        catch java.lang.Throwable from label14 to label15 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    private void parseState(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.printspooler.model.PrintSpoolerService$PersistenceManager r0;
        org.xmlpull.v1.XmlPullParser r1;
        boolean $z0;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService$PersistenceManager;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void expect(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 2, "spooler");

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

     label1:
        $z0 = specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: boolean parsePrintJob(org.xmlpull.v1.XmlPullParser)>(r1);

        if $z0 == 0 goto label2;

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label1;

     label2:
        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void expect(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 3, "spooler");

        return;
    }

    private boolean parsePrintJob(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.printspooler.model.PrintSpoolerService$PersistenceManager r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.print.PrintJobInfo r2, $r18;
        android.print.PrintJobId r3;
        java.lang.String r4, r5, r6, r7, r8, r9, r10, r11, r14, r15, $r17, $r19, $r20, $r24, $r25, $r27, $r28, $r29, $r36, $r37, $r38, $r39, $r40, $r45, $r46, $r47, $r48, $r52, $r54, r60, r61, r63, r64, r65, r68, r71, r72, r73;
        int i0, i1, i2, i3, i4, i5, $i7, $i13, $i17, $i24, $i25, i32, i33, i34, i35, i36, i37, i38, i39, i40, i41;
        android.content.ComponentName r12;
        android.print.PageRange r13, $r55;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        android.print.PrintAttributes$MediaSize r16, $r51;
        long $l6, $l14;
        com.android.printspooler.model.PrintSpoolerService $r21;
        android.os.Bundle $r22, r70;
        java.util.List $r23;
        java.lang.Integer $r26;
        android.print.PrintAttributes$Builder $r30, r59;
        android.print.PrintDocumentInfo$Builder $r31, $r32, $r33;
        android.print.PrintAttributes $r34;
        android.print.PrintAttributes$Margins $r42, r67;
        android.print.PrintAttributes$Resolution $r44, r66;
        android.print.PrinterId $r53;
        java.util.ArrayList $r56, r57;
        android.print.PageRange[] r58;
        android.print.PrintDocumentInfo r69;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService$PersistenceManager;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        $z0 = specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: boolean accept(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 2, "job");

        if $z0 != 0 goto label01;

        return 0;

     label01:
        $r18 = new android.print.PrintJobInfo;

        specialinvoke $r18.<android.print.PrintJobInfo: void <init>()>();

        r2 = $r18;

        $r17 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "id");

        r3 = staticinvoke <android.print.PrintJobId: android.print.PrintJobId unflattenFromString(java.lang.String)>($r17);

        virtualinvoke r2.<android.print.PrintJobInfo: void setId(android.print.PrintJobId)>(r3);

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "label");

        virtualinvoke r2.<android.print.PrintJobInfo: void setLabel(java.lang.String)>(r4);

        $r19 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "state");

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r19);

        virtualinvoke r2.<android.print.PrintJobInfo: void setState(int)>(i0);

        $r20 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "appId");

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r20);

        virtualinvoke r2.<android.print.PrintJobInfo: void setAppId(int)>(i1);

        r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "tag");

        virtualinvoke r2.<android.print.PrintJobInfo: void setTag(java.lang.String)>(r5);

        r6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "creationTime");

        $l6 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r6);

        virtualinvoke r2.<android.print.PrintJobInfo: void setCreationTime(long)>($l6);

        r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "copies");

        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r7);

        virtualinvoke r2.<android.print.PrintJobInfo: void setCopies(int)>($i7);

        r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "printerName");

        virtualinvoke r2.<android.print.PrintJobInfo: void setPrinterName(java.lang.String)>(r8);

        r9 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "stateReason");

        virtualinvoke r2.<android.print.PrintJobInfo: void setStateReason(java.lang.String)>(r9);

        r10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "cancelling");

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r10);

        if $z3 != 0 goto label02;

        $z14 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r10);

        goto label03;

     label02:
        $z14 = 0;

     label03:
        virtualinvoke r2.<android.print.PrintJobInfo: void setCancelling(boolean)>($z14);

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        $z1 = specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: boolean accept(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 2, "printerId");

        if $z1 == 0 goto label04;

        r11 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "localId");

        $r52 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "serviceName");

        r12 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>($r52);

        $r53 = new android.print.PrinterId;

        specialinvoke $r53.<android.print.PrinterId: void <init>(android.content.ComponentName,java.lang.String)>(r12, r11);

        virtualinvoke r2.<android.print.PrintJobInfo: void setPrinterId(android.print.PrinterId)>($r53);

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void expect(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 3, "printerId");

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

     label04:
        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        r57 = null;

     label05:
        $z2 = specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: boolean accept(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 2, "pageRange");

        if $z2 == 0 goto label07;

        $r48 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "start");

        i32 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r48);

        $r54 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "end");

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r54);

        $r55 = new android.print.PageRange;

        specialinvoke $r55.<android.print.PageRange: void <init>(int,int)>(i32, i2);

        r13 = $r55;

        if r57 != null goto label06;

        $r56 = new java.util.ArrayList;

        specialinvoke $r56.<java.util.ArrayList: void <init>()>();

        r57 = $r56;

     label06:
        interfaceinvoke r57.<java.util.List: boolean add(java.lang.Object)>(r13);

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void expect(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 3, "pageRange");

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label05;

     label07:
        if r57 == null goto label08;

        $i24 = interfaceinvoke r57.<java.util.List: int size()>();

        r58 = newarray (android.print.PageRange)[$i24];

        interfaceinvoke r57.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r58);

        virtualinvoke r2.<android.print.PrintJobInfo: void setPages(android.print.PageRange[])>(r58);

     label08:
        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        $z5 = specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: boolean accept(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 2, "attributes");

        if $z5 == 0 goto label14;

        $r30 = new android.print.PrintAttributes$Builder;

        specialinvoke $r30.<android.print.PrintAttributes$Builder: void <init>()>();

        r59 = $r30;

        r60 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "colorMode");

        $i17 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r60);

        virtualinvoke r59.<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setColorMode(int)>($i17);

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        $z12 = specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: boolean accept(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 2, "mediaSize");

        if $z12 == 0 goto label11;

        r61 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "id");

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "label");

        $r47 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "widthMils");

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r47);

        $r46 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "heightMils");

        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r46);

        r14 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "packageName");

        r15 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "labelResId");

        if r15 == null goto label09;

        $i25 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r15);

        goto label10;

     label09:
        $i25 = 0;

     label10:
        i5 = $i25;

        r63 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "label");

        $r51 = new android.print.PrintAttributes$MediaSize;

        specialinvoke $r51.<android.print.PrintAttributes$MediaSize: void <init>(java.lang.String,java.lang.String,java.lang.String,int,int,int)>(r61, r63, r14, i3, i4, i5);

        r16 = $r51;

        virtualinvoke r59.<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setMediaSize(android.print.PrintAttributes$MediaSize)>(r16);

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void expect(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 3, "mediaSize");

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

     label11:
        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        $z11 = specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: boolean accept(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 2, "resolution");

        if $z11 == 0 goto label12;

        r64 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "id");

        r65 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "label");

        $r40 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "horizontalDip");

        i33 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r40);

        $r45 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "verticalDpi");

        i34 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r45);

        $r44 = new android.print.PrintAttributes$Resolution;

        specialinvoke $r44.<android.print.PrintAttributes$Resolution: void <init>(java.lang.String,java.lang.String,int,int)>(r64, r65, i33, i34);

        r66 = $r44;

        virtualinvoke r59.<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setResolution(android.print.PrintAttributes$Resolution)>(r66);

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void expect(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 3, "resolution");

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

     label12:
        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        $z13 = specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: boolean accept(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 2, "margins");

        if $z13 == 0 goto label13;

        $r38 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "leftMils");

        i35 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r38);

        $r39 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "topMils");

        i36 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r39);

        $r36 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "rightMils");

        i37 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r36);

        $r37 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "bottomMils");

        i38 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r37);

        $r42 = new android.print.PrintAttributes$Margins;

        specialinvoke $r42.<android.print.PrintAttributes$Margins: void <init>(int,int,int,int)>(i35, i36, i37, i38);

        r67 = $r42;

        virtualinvoke r59.<android.print.PrintAttributes$Builder: android.print.PrintAttributes$Builder setMinMargins(android.print.PrintAttributes$Margins)>(r67);

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void expect(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 3, "margins");

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

     label13:
        $r34 = virtualinvoke r59.<android.print.PrintAttributes$Builder: android.print.PrintAttributes build()>();

        virtualinvoke r2.<android.print.PrintJobInfo: void setAttributes(android.print.PrintAttributes)>($r34);

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void expect(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 3, "attributes");

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

     label14:
        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        $z6 = specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: boolean accept(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 2, "documentInfo");

        if $z6 == 0 goto label15;

        r68 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        $r29 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "pageCount");

        i39 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r29);

        $r27 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "contentType");

        i40 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r27);

        $r28 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "dataSize");

        i41 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r28);

        $r31 = new android.print.PrintDocumentInfo$Builder;

        specialinvoke $r31.<android.print.PrintDocumentInfo$Builder: void <init>(java.lang.String)>(r68);

        $r32 = virtualinvoke $r31.<android.print.PrintDocumentInfo$Builder: android.print.PrintDocumentInfo$Builder setPageCount(int)>(i39);

        $r33 = virtualinvoke $r32.<android.print.PrintDocumentInfo$Builder: android.print.PrintDocumentInfo$Builder setContentType(int)>(i40);

        r69 = virtualinvoke $r33.<android.print.PrintDocumentInfo$Builder: android.print.PrintDocumentInfo build()>();

        virtualinvoke r2.<android.print.PrintJobInfo: void setDocumentInfo(android.print.PrintDocumentInfo)>(r69);

        $l14 = (long) i41;

        virtualinvoke r69.<android.print.PrintDocumentInfo: void setDataSize(long)>($l14);

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void expect(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 3, "documentInfo");

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

     label15:
        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        $z4 = specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: boolean accept(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 2, "advancedOptions");

        if $z4 == 0 goto label20;

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        $r22 = new android.os.Bundle;

        specialinvoke $r22.<android.os.Bundle: void <init>()>();

        r70 = $r22;

     label16:
        $z8 = specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: boolean accept(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 2, "advancedOption");

        if $z8 == 0 goto label19;

        r71 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "key");

        r72 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        r73 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "type");

        $r25 = "string";

        $z9 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>(r73);

        if $z9 == 0 goto label17;

        virtualinvoke r70.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>(r71, r72);

        goto label18;

     label17:
        $r24 = "int";

        $z10 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r73);

        if $z10 == 0 goto label18;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(r72);

        $i13 = virtualinvoke $r26.<java.lang.Integer: int intValue()>();

        virtualinvoke r70.<android.os.Bundle: void putInt(java.lang.String,int)>(r71, $i13);

     label18:
        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void expect(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 3, "advancedOption");

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label16;

     label19:
        virtualinvoke r2.<android.print.PrintJobInfo: void setAdvancedOptions(android.os.Bundle)>(r70);

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void expect(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 3, "advancedOptions");

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

     label20:
        $r21 = r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: com.android.printspooler.model.PrintSpoolerService this$0>;

        $r23 = staticinvoke <com.android.printspooler.model.PrintSpoolerService: java.util.List access$800(com.android.printspooler.model.PrintSpoolerService)>($r21);

        interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>(r2);

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser)>(r1);

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void expect(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 3, "job");

        return 1;
    }

    private void expect(org.xmlpull.v1.XmlPullParser, int, java.lang.String) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.printspooler.model.PrintSpoolerService$PersistenceManager r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, $i1;
        java.lang.String r2, $r12, $r13;
        boolean $z0;
        org.xmlpull.v1.XmlPullParserException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r14;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService$PersistenceManager;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $z0 = specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: boolean accept(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, i0, r2);

        if $z0 != 0 goto label1;

        $r3 = new org.xmlpull.v1.XmlPullParserException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exepected event: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and tag: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but got event: ");

        $i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and tag:");

        $r12 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r13);

        throw $r3;

     label1:
        return;
    }

    private void skipEmptyTextTags(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.printspooler.model.PrintSpoolerService$PersistenceManager r0;
        org.xmlpull.v1.XmlPullParser r1;
        boolean $z0, $z1;
        java.lang.String $r2, $r3;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService$PersistenceManager;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

     label1:
        $z0 = specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: boolean accept(org.xmlpull.v1.XmlPullParser,int,java.lang.String)>(r1, 4, null);

        if $z0 == 0 goto label2;

        $r2 = "\n";

        $r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label1;

     label2:
        return;
    }

    private boolean accept(org.xmlpull.v1.XmlPullParser, int, java.lang.String) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.printspooler.model.PrintSpoolerService$PersistenceManager r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, $i1;
        java.lang.String r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService$PersistenceManager;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i1 == i0 goto label1;

        return 0;

     label1:
        if r2 == null goto label2;

        $r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label3;

        return 0;

     label2:
        $r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        if $r3 == null goto label3;

        return 0;

     label3:
        return 1;
    }

    void <init>(com.android.printspooler.model.PrintSpoolerService, com.android.printspooler.model.PrintSpoolerService$1)
    {
        com.android.printspooler.model.PrintSpoolerService$PersistenceManager r0;
        com.android.printspooler.model.PrintSpoolerService r1;
        com.android.printspooler.model.PrintSpoolerService$1 r2;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService$PersistenceManager;

        r1 := @parameter0: com.android.printspooler.model.PrintSpoolerService;

        r2 := @parameter1: com.android.printspooler.model.PrintSpoolerService$1;

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void <init>(com.android.printspooler.model.PrintSpoolerService)>(r1);

        return;
    }

    static boolean access$602(com.android.printspooler.model.PrintSpoolerService$PersistenceManager, boolean)
    {
        com.android.printspooler.model.PrintSpoolerService$PersistenceManager r0;
        boolean z0;

        r0 := @parameter0: com.android.printspooler.model.PrintSpoolerService$PersistenceManager;

        z0 := @parameter1: boolean;

        r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: boolean mWriteStateScheduled> = z0;

        return z0;
    }

    static void access$700(com.android.printspooler.model.PrintSpoolerService$PersistenceManager)
    {
        com.android.printspooler.model.PrintSpoolerService$PersistenceManager r0;

        r0 := @parameter0: com.android.printspooler.model.PrintSpoolerService$PersistenceManager;

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void doWriteStateLocked()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_DATA_SIZE> = "dataSize";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_CONTENT_TYPE> = "contentType";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_PAGE_COUNT> = "pageCount";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_NAME> = "name";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_END> = "end";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_START> = "start";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_BOTTOM_MILS> = "bottomMils";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_RIGHT_MILS> = "rightMils";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_TOP_MILS> = "topMils";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_LEFT_MILS> = "leftMils";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_VERTICAL_DPI> = "verticalDpi";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_HORIZONTAL_DPI> = "horizontalDip";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_HEIGHT_MILS> = "heightMils";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_WIDTH_MILS> = "widthMils";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_SERVICE_NAME> = "serviceName";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_LOCAL_ID> = "localId";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_COLOR_MODE> = "colorMode";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String TAG_MARGINS> = "margins";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String TAG_RESOLUTION> = "resolution";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String TAG_MEDIA_SIZE> = "mediaSize";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String TYPE_INT> = "int";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String TYPE_STRING> = "string";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_VALUE> = "value";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_TYPE> = "type";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_KEY> = "key";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String TAG_ADVANCED_OPTION> = "advancedOption";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String TAG_ADVANCED_OPTIONS> = "advancedOptions";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_CANCELLING> = "cancelling";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_STATE_REASON> = "stateReason";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_PRINTER_NAME> = "printerName";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_COPIES> = "copies";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_CREATION_TIME> = "creationTime";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_TAG> = "tag";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_APP_ID> = "appId";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_STATE> = "state";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_PACKAGE_NAME> = "packageName";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_LABEL_RES_ID> = "labelResId";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_LABEL> = "label";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String ATTR_ID> = "id";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String TAG_DOCUMENT_INFO> = "documentInfo";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String TAG_ATTRIBUTES> = "attributes";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String TAG_PAGE_RANGE> = "pageRange";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String TAG_PRINTER_ID> = "printerId";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String TAG_JOB> = "job";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String TAG_SPOOLER> = "spooler";

        <com.android.printspooler.model.PrintSpoolerService$PersistenceManager: java.lang.String PERSIST_FILE_NAME> = "print_spooler_state.xml";

        return;
    }
}
