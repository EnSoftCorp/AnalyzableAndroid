public final class com.android.printspooler.model.MutexFileProvider extends java.lang.Object
{
    private static final java.lang.String LOG_TAG;
    private static final boolean DEBUG;
    private final java.lang.Object mLock;
    private final java.io.File mFile;
    private java.lang.Thread mOwnerThread;
    private com.android.printspooler.model.MutexFileProvider$OnReleaseRequestCallback mOnReleaseRequestCallback;

    public void <init>(java.io.File) throws java.io.IOException
    {
        com.android.printspooler.model.MutexFileProvider r0;
        java.io.File r1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: com.android.printspooler.model.MutexFileProvider;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.printspooler.model.MutexFileProvider: java.lang.Object mLock> = $r2;

        r0.<com.android.printspooler.model.MutexFileProvider: java.io.File mFile> = r1;

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.io.File: boolean delete()>();

     label1:
        virtualinvoke r1.<java.io.File: boolean createNewFile()>();

        return;
    }

    public java.io.File acquireFile(com.android.printspooler.model.MutexFileProvider$OnReleaseRequestCallback)
    {
        com.android.printspooler.model.MutexFileProvider r0;
        com.android.printspooler.model.MutexFileProvider$OnReleaseRequestCallback r1, $r22, $r23;
        java.lang.Object r2, $r5, $r19;
        java.lang.Throwable r4, $r24;
        java.lang.Thread $r6, $r7, $r8, $r9, $r10, $r15;
        java.lang.StringBuilder $r11, $r12, $r14, $r16, $r18;
        java.io.File $r13, $r20, $r21, $r25;
        java.lang.String $r17;
        java.lang.InterruptedException $r26;

        r0 := @this: com.android.printspooler.model.MutexFileProvider;

        r1 := @parameter0: com.android.printspooler.model.MutexFileProvider$OnReleaseRequestCallback;

        $r5 = r0.<com.android.printspooler.model.MutexFileProvider: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label01:
        $r6 = r0.<com.android.printspooler.model.MutexFileProvider: java.lang.Thread mOwnerThread>;

        $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        if $r6 != $r7 goto label03;

        $r25 = r0.<com.android.printspooler.model.MutexFileProvider: java.io.File mFile>;

        exitmonitor r2;

     label02:
        return $r25;

     label03:
        $r8 = r0.<com.android.printspooler.model.MutexFileProvider: java.lang.Thread mOwnerThread>;

        if $r8 == null goto label04;

        $r22 = r0.<com.android.printspooler.model.MutexFileProvider: com.android.printspooler.model.MutexFileProvider$OnReleaseRequestCallback mOnReleaseRequestCallback>;

        if $r22 == null goto label04;

        $r23 = r0.<com.android.printspooler.model.MutexFileProvider: com.android.printspooler.model.MutexFileProvider$OnReleaseRequestCallback mOnReleaseRequestCallback>;

        $r21 = r0.<com.android.printspooler.model.MutexFileProvider: java.io.File mFile>;

        interfaceinvoke $r23.<com.android.printspooler.model.MutexFileProvider$OnReleaseRequestCallback: void onReleaseRequested(java.io.File)>($r21);

     label04:
        $r9 = r0.<com.android.printspooler.model.MutexFileProvider: java.lang.Thread mOwnerThread>;

        if $r9 == null goto label08;

     label05:
        $r19 = r0.<com.android.printspooler.model.MutexFileProvider: java.lang.Object mLock>;

        virtualinvoke $r19.<java.lang.Object: void wait()>();

     label06:
        goto label04;

     label07:
        $r26 := @caughtexception;

        goto label04;

     label08:
        $r10 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r0.<com.android.printspooler.model.MutexFileProvider: java.lang.Thread mOwnerThread> = $r10;

        r0.<com.android.printspooler.model.MutexFileProvider: com.android.printspooler.model.MutexFileProvider$OnReleaseRequestCallback mOnReleaseRequestCallback> = r1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Acquired file: ");

        $r13 = r0.<com.android.printspooler.model.MutexFileProvider: java.io.File mFile>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" by thread: ");

        $r15 = r0.<com.android.printspooler.model.MutexFileProvider: java.lang.Thread mOwnerThread>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MutexFileProvider", $r17);

        $r20 = r0.<com.android.printspooler.model.MutexFileProvider: java.io.File mFile>;

        exitmonitor r2;

     label09:
        return $r20;

     label10:
        $r24 := @caughtexception;

        r4 = $r24;

        exitmonitor r2;

     label11:
        throw r4;

        catch java.lang.InterruptedException from label05 to label06 with label07;
        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void releaseFile()
    {
        com.android.printspooler.model.MutexFileProvider r0;
        java.lang.Object r1, $r3, $r14;
        java.lang.Throwable r2, $r15;
        java.lang.Thread $r4, $r5, $r11;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r12;
        java.io.File $r8;
        java.lang.String $r13;

        r0 := @this: com.android.printspooler.model.MutexFileProvider;

        $r3 = r0.<com.android.printspooler.model.MutexFileProvider: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.printspooler.model.MutexFileProvider: java.lang.Thread mOwnerThread>;

        $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        if $r4 == $r5 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Released file: ");

        $r8 = r0.<com.android.printspooler.model.MutexFileProvider: java.io.File mFile>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from thread: ");

        $r11 = r0.<com.android.printspooler.model.MutexFileProvider: java.lang.Thread mOwnerThread>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MutexFileProvider", $r13);

        r0.<com.android.printspooler.model.MutexFileProvider: java.lang.Thread mOwnerThread> = null;

        r0.<com.android.printspooler.model.MutexFileProvider: com.android.printspooler.model.MutexFileProvider$OnReleaseRequestCallback mOnReleaseRequestCallback> = null;

        $r14 = r0.<com.android.printspooler.model.MutexFileProvider: java.lang.Object mLock>;

        virtualinvoke $r14.<java.lang.Object: void notifyAll()>();

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r15 := @caughtexception;

        r2 = $r15;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static void <clinit>()
    {
        <com.android.printspooler.model.MutexFileProvider: boolean DEBUG> = 1;

        <com.android.printspooler.model.MutexFileProvider: java.lang.String LOG_TAG> = "MutexFileProvider";

        return;
    }
}
