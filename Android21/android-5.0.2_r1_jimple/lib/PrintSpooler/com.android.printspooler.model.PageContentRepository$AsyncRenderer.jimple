final class com.android.printspooler.model.PageContentRepository$AsyncRenderer extends java.lang.Object implements android.content.ServiceConnection
{
    private final java.lang.Object mLock;
    private final android.content.Context mContext;
    private final com.android.printspooler.model.PageContentRepository$PageContentLruCache mPageContentCache;
    private final android.util.ArrayMap mPageToRenderTaskMap;
    private final com.android.printspooler.model.PageContentRepository$OnMalformedPdfFileListener mOnMalformedPdfFileListener;
    private int mPageCount;
    private com.android.printspooler.renderer.IPdfRenderer mRenderer;
    private boolean mBoundToService;

    public void <init>(android.content.Context, com.android.printspooler.model.PageContentRepository$OnMalformedPdfFileListener)
    {
        com.android.printspooler.model.PageContentRepository$AsyncRenderer r0;
        android.content.Context r1, $r6;
        com.android.printspooler.model.PageContentRepository$OnMalformedPdfFileListener r2;
        android.app.ActivityManager r3;
        int i0, $i1, $i2;
        java.lang.Object $r4, $r7;
        android.util.ArrayMap $r5;
        com.android.printspooler.model.PageContentRepository$PageContentLruCache $r8;

        r0 := @this: com.android.printspooler.model.PageContentRepository$AsyncRenderer;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.printspooler.model.PageContentRepository$OnMalformedPdfFileListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: java.lang.Object mLock> = $r4;

        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: android.util.ArrayMap mPageToRenderTaskMap> = $r5;

        r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: int mPageCount> = -1;

        r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: android.content.Context mContext> = r1;

        r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: com.android.printspooler.model.PageContentRepository$OnMalformedPdfFileListener mOnMalformedPdfFileListener> = r2;

        $r6 = r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("activity");

        r3 = (android.app.ActivityManager) $r7;

        $i1 = virtualinvoke r3.<android.app.ActivityManager: int getMemoryClass()>();

        $i2 = $i1 * 1048576;

        i0 = $i2 / 4;

        $r8 = new com.android.printspooler.model.PageContentRepository$PageContentLruCache;

        specialinvoke $r8.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: void <init>(int)>(i0);

        r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: com.android.printspooler.model.PageContentRepository$PageContentLruCache mPageContentCache> = $r8;

        return;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        com.android.printspooler.model.PageContentRepository$AsyncRenderer r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        java.lang.Object r3, $r5, $r7;
        java.lang.Throwable r4, $r8;
        com.android.printspooler.renderer.IPdfRenderer $r6;

        r0 := @this: com.android.printspooler.model.PageContentRepository$AsyncRenderer;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: boolean mBoundToService> = 1;

        $r5 = r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: java.lang.Object mLock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = staticinvoke <com.android.printspooler.renderer.IPdfRenderer$Stub: com.android.printspooler.renderer.IPdfRenderer asInterface(android.os.IBinder)>(r2);

        r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: com.android.printspooler.renderer.IPdfRenderer mRenderer> = $r6;

        $r7 = r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: java.lang.Object mLock>;

        virtualinvoke $r7.<java.lang.Object: void notifyAll()>();

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        com.android.printspooler.model.PageContentRepository$AsyncRenderer r0;
        android.content.ComponentName r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.printspooler.model.PageContentRepository$AsyncRenderer;

        r1 := @parameter0: android.content.ComponentName;

        $r4 = r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: com.android.printspooler.renderer.IPdfRenderer mRenderer> = null;

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void open(android.os.ParcelFileDescriptor, java.lang.Runnable)
    {
        com.android.printspooler.model.PageContentRepository$AsyncRenderer r0;
        android.os.ParcelFileDescriptor r1;
        java.lang.Runnable r2;
        com.android.printspooler.model.PageContentRepository$PageContentLruCache $r3;
        com.android.printspooler.model.PageContentRepository$AsyncRenderer$1 $r4;
        java.lang.Void[] $r5;
        java.util.concurrent.Executor $r6;

        r0 := @this: com.android.printspooler.model.PageContentRepository$AsyncRenderer;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 := @parameter1: java.lang.Runnable;

        $r3 = r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: com.android.printspooler.model.PageContentRepository$PageContentLruCache mPageContentCache>;

        virtualinvoke $r3.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: void invalidate()>();

        $r4 = new com.android.printspooler.model.PageContentRepository$AsyncRenderer$1;

        specialinvoke $r4.<com.android.printspooler.model.PageContentRepository$AsyncRenderer$1: void <init>(com.android.printspooler.model.PageContentRepository$AsyncRenderer,android.os.ParcelFileDescriptor,java.lang.Runnable)>(r0, r1, r2);

        $r6 = <android.os.AsyncTask: java.util.concurrent.Executor SERIAL_EXECUTOR>;

        $r5 = newarray (java.lang.Void)[0];

        virtualinvoke $r4.<com.android.printspooler.model.PageContentRepository$AsyncRenderer$1: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r6, $r5);

        return;
    }

    public void close(java.lang.Runnable)
    {
        com.android.printspooler.model.PageContentRepository$AsyncRenderer r0;
        java.lang.Runnable r1;
        com.android.printspooler.model.PageContentRepository$AsyncRenderer$2 $r2;
        java.lang.Void[] $r3;
        java.util.concurrent.Executor $r4;

        r0 := @this: com.android.printspooler.model.PageContentRepository$AsyncRenderer;

        r1 := @parameter0: java.lang.Runnable;

        specialinvoke r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: void cancelAllRendering()>();

        $r2 = new com.android.printspooler.model.PageContentRepository$AsyncRenderer$2;

        specialinvoke $r2.<com.android.printspooler.model.PageContentRepository$AsyncRenderer$2: void <init>(com.android.printspooler.model.PageContentRepository$AsyncRenderer,java.lang.Runnable)>(r0, r1);

        $r4 = <android.os.AsyncTask: java.util.concurrent.Executor SERIAL_EXECUTOR>;

        $r3 = newarray (java.lang.Void)[0];

        virtualinvoke $r2.<com.android.printspooler.model.PageContentRepository$AsyncRenderer$2: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r4, $r3);

        return;
    }

    public void destroy(java.lang.Runnable)
    {
        com.android.printspooler.model.PageContentRepository$AsyncRenderer r0;
        java.lang.Runnable r1;
        com.android.printspooler.model.PageContentRepository$AsyncRenderer$3 $r2;
        java.lang.Void[] $r3;
        java.util.concurrent.Executor $r4;

        r0 := @this: com.android.printspooler.model.PageContentRepository$AsyncRenderer;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = new com.android.printspooler.model.PageContentRepository$AsyncRenderer$3;

        specialinvoke $r2.<com.android.printspooler.model.PageContentRepository$AsyncRenderer$3: void <init>(com.android.printspooler.model.PageContentRepository$AsyncRenderer,java.lang.Runnable)>(r0, r1);

        $r4 = <android.os.AsyncTask: java.util.concurrent.Executor SERIAL_EXECUTOR>;

        $r3 = newarray (java.lang.Void)[0];

        virtualinvoke $r2.<com.android.printspooler.model.PageContentRepository$AsyncRenderer$3: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r4, $r3);

        return;
    }

    public void startPreload(int, int, com.android.printspooler.model.PageContentRepository$RenderSpec)
    {
        com.android.printspooler.model.PageContentRepository$AsyncRenderer r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        com.android.printspooler.model.PageContentRepository$RenderSpec r1;
        com.android.printspooler.model.PageContentRepository$PageContentLruCache $r2;

        r0 := @this: com.android.printspooler.model.PageContentRepository$AsyncRenderer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.printspooler.model.PageContentRepository$RenderSpec;

        $i11 = r1.<com.android.printspooler.model.PageContentRepository$RenderSpec: int bitmapWidth>;

        $i10 = r1.<com.android.printspooler.model.PageContentRepository$RenderSpec: int bitmapHeight>;

        $i12 = $i11 * $i10;

        i2 = $i12 * 4;

        $r2 = r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: com.android.printspooler.model.PageContentRepository$PageContentLruCache mPageContentCache>;

        $i14 = virtualinvoke $r2.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: int getMaxSizeInBytes()>();

        i3 = $i14 / i2;

        $i13 = i1 - i0;

        $i16 = i3 - $i13;

        $i15 = $i16 / 2;

        i4 = $i15 - 1;

        $i18 = i0 - i4;

        if $i18 >= 0 goto label1;

        i5 = i4 - i0;

        goto label2;

     label1:
        i5 = 0;

     label2:
        $i20 = i1 + i4;

        $i17 = r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: int mPageCount>;

        if $i20 < $i17 goto label3;

        $i27 = i1 + i4;

        $i26 = r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: int mPageCount>;

        i6 = $i27 - $i26;

        goto label4;

     label3:
        i6 = 0;

     label4:
        $i19 = i0 - i4;

        $i21 = $i19 - i6;

        i7 = staticinvoke <java.lang.Math: int max(int,int)>($i21, 0);

        $i23 = i1 + i4;

        $i24 = $i23 + i5;

        $i22 = r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: int mPageCount>;

        $i25 = $i22 - 1;

        i8 = staticinvoke <java.lang.Math: int min(int,int)>($i24, $i25);

        i9 = i7;

     label5:
        if i9 > i8 goto label6;

        virtualinvoke r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: void renderPage(int,com.android.printspooler.model.PageContentRepository$RenderSpec,com.android.printspooler.model.PageContentRepository$OnPageContentAvailableCallback)>(i9, r1, null);

        i9 = i9 + 1;

        goto label5;

     label6:
        return;
    }

    public void stopPreload()
    {
        com.android.printspooler.model.PageContentRepository$AsyncRenderer r0;
        int i0, i1;
        com.android.printspooler.model.PageContentRepository$AsyncRenderer$RenderPageTask r1;
        android.util.ArrayMap $r2, $r3;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r0 := @this: com.android.printspooler.model.PageContentRepository$AsyncRenderer;

        $r2 = r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: android.util.ArrayMap mPageToRenderTaskMap>;

        i0 = virtualinvoke $r2.<android.util.ArrayMap: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: android.util.ArrayMap mPageToRenderTaskMap>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r1 = (com.android.printspooler.model.PageContentRepository$AsyncRenderer$RenderPageTask) $r4;

        $z0 = virtualinvoke r1.<com.android.printspooler.model.PageContentRepository$AsyncRenderer$RenderPageTask: boolean isPreload()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r1.<com.android.printspooler.model.PageContentRepository$AsyncRenderer$RenderPageTask: boolean isCancelled()>();

        if $z1 != 0 goto label2;

        virtualinvoke r1.<com.android.printspooler.model.PageContentRepository$AsyncRenderer$RenderPageTask: boolean cancel(boolean)>(1);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public int getPageCount()
    {
        com.android.printspooler.model.PageContentRepository$AsyncRenderer r0;
        int $i0;

        r0 := @this: com.android.printspooler.model.PageContentRepository$AsyncRenderer;

        $i0 = r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: int mPageCount>;

        return $i0;
    }

    public void getCachedPage(int, com.android.printspooler.model.PageContentRepository$RenderSpec, com.android.printspooler.model.PageContentRepository$OnPageContentAvailableCallback)
    {
        com.android.printspooler.model.PageContentRepository$AsyncRenderer r0;
        int i0, $i1;
        com.android.printspooler.model.PageContentRepository$RenderSpec r1, $r5;
        com.android.printspooler.model.PageContentRepository$OnPageContentAvailableCallback r2;
        com.android.printspooler.model.PageContentRepository$RenderedPage r3;
        com.android.printspooler.model.PageContentRepository$PageContentLruCache $r4;
        boolean $z0;
        android.graphics.drawable.BitmapDrawable $r6;

        r0 := @this: com.android.printspooler.model.PageContentRepository$AsyncRenderer;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.printspooler.model.PageContentRepository$RenderSpec;

        r2 := @parameter2: com.android.printspooler.model.PageContentRepository$OnPageContentAvailableCallback;

        $r4 = r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: com.android.printspooler.model.PageContentRepository$PageContentLruCache mPageContentCache>;

        r3 = virtualinvoke $r4.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: com.android.printspooler.model.PageContentRepository$RenderedPage getRenderedPage(int)>(i0);

        if r3 == null goto label1;

        $i1 = r3.<com.android.printspooler.model.PageContentRepository$RenderedPage: int state>;

        if $i1 != 0 goto label1;

        $r5 = r3.<com.android.printspooler.model.PageContentRepository$RenderedPage: com.android.printspooler.model.PageContentRepository$RenderSpec renderSpec>;

        $z0 = virtualinvoke $r5.<com.android.printspooler.model.PageContentRepository$RenderSpec: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        if r2 == null goto label1;

        $r6 = r3.<com.android.printspooler.model.PageContentRepository$RenderedPage: android.graphics.drawable.BitmapDrawable content>;

        interfaceinvoke r2.<com.android.printspooler.model.PageContentRepository$OnPageContentAvailableCallback: void onPageContentAvailable(android.graphics.drawable.BitmapDrawable)>($r6);

     label1:
        return;
    }

    public void renderPage(int, com.android.printspooler.model.PageContentRepository$RenderSpec, com.android.printspooler.model.PageContentRepository$OnPageContentAvailableCallback)
    {
        com.android.printspooler.model.PageContentRepository$AsyncRenderer r0;
        int i0, $i1;
        com.android.printspooler.model.PageContentRepository$RenderSpec r1, $r16, $r20;
        com.android.printspooler.model.PageContentRepository$OnPageContentAvailableCallback r2, $r17, $r18;
        com.android.printspooler.model.PageContentRepository$RenderedPage r3;
        com.android.printspooler.model.PageContentRepository$AsyncRenderer$RenderPageTask r4, $r9, r22;
        com.android.printspooler.model.PageContentRepository$PageContentLruCache $r5;
        android.util.ArrayMap $r6, $r10;
        java.lang.Integer $r7, $r11;
        java.lang.Object $r8;
        java.lang.Void[] $r13;
        java.util.concurrent.Executor $r15;
        boolean $z0, $z2, $z3;
        java.lang.IllegalStateException $r19;
        android.graphics.drawable.BitmapDrawable $r21;

        r0 := @this: com.android.printspooler.model.PageContentRepository$AsyncRenderer;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.printspooler.model.PageContentRepository$RenderSpec;

        r2 := @parameter2: com.android.printspooler.model.PageContentRepository$OnPageContentAvailableCallback;

        $r5 = r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: com.android.printspooler.model.PageContentRepository$PageContentLruCache mPageContentCache>;

        r3 = virtualinvoke $r5.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: com.android.printspooler.model.PageContentRepository$RenderedPage getRenderedPage(int)>(i0);

        if r3 == null goto label3;

        $i1 = r3.<com.android.printspooler.model.PageContentRepository$RenderedPage: int state>;

        if $i1 != 0 goto label3;

        $r20 = r3.<com.android.printspooler.model.PageContentRepository$RenderedPage: com.android.printspooler.model.PageContentRepository$RenderSpec renderSpec>;

        $z3 = virtualinvoke $r20.<com.android.printspooler.model.PageContentRepository$RenderSpec: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label2;

        if r2 == null goto label1;

        $r21 = r3.<com.android.printspooler.model.PageContentRepository$RenderedPage: android.graphics.drawable.BitmapDrawable content>;

        interfaceinvoke r2.<com.android.printspooler.model.PageContentRepository$OnPageContentAvailableCallback: void onPageContentAvailable(android.graphics.drawable.BitmapDrawable)>($r21);

     label1:
        return;

     label2:
        r3.<com.android.printspooler.model.PageContentRepository$RenderedPage: int state> = 2;

     label3:
        $r6 = r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: android.util.ArrayMap mPageToRenderTaskMap>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r8 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r7);

        r4 = (com.android.printspooler.model.PageContentRepository$AsyncRenderer$RenderPageTask) $r8;

        if r4 == null goto label7;

        $z0 = virtualinvoke r4.<com.android.printspooler.model.PageContentRepository$AsyncRenderer$RenderPageTask: boolean isCancelled()>();

        if $z0 != 0 goto label7;

        $r16 = r4.<com.android.printspooler.model.PageContentRepository$AsyncRenderer$RenderPageTask: com.android.printspooler.model.PageContentRepository$RenderSpec mRenderSpec>;

        $z2 = virtualinvoke $r16.<com.android.printspooler.model.PageContentRepository$RenderSpec: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label6;

        $r18 = r4.<com.android.printspooler.model.PageContentRepository$AsyncRenderer$RenderPageTask: com.android.printspooler.model.PageContentRepository$OnPageContentAvailableCallback mCallback>;

        if $r18 == null goto label4;

        if r2 == null goto label5;

        $r17 = r4.<com.android.printspooler.model.PageContentRepository$AsyncRenderer$RenderPageTask: com.android.printspooler.model.PageContentRepository$OnPageContentAvailableCallback mCallback>;

        if $r17 == r2 goto label5;

        $r19 = new java.lang.IllegalStateException;

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Page rendering not cancelled");

        throw $r19;

     label4:
        r4.<com.android.printspooler.model.PageContentRepository$AsyncRenderer$RenderPageTask: com.android.printspooler.model.PageContentRepository$OnPageContentAvailableCallback mCallback> = r2;

     label5:
        return;

     label6:
        virtualinvoke r4.<com.android.printspooler.model.PageContentRepository$AsyncRenderer$RenderPageTask: boolean cancel(boolean)>(1);

     label7:
        $r9 = new com.android.printspooler.model.PageContentRepository$AsyncRenderer$RenderPageTask;

        specialinvoke $r9.<com.android.printspooler.model.PageContentRepository$AsyncRenderer$RenderPageTask: void <init>(com.android.printspooler.model.PageContentRepository$AsyncRenderer,int,com.android.printspooler.model.PageContentRepository$RenderSpec,com.android.printspooler.model.PageContentRepository$OnPageContentAvailableCallback)>(r0, i0, r1, r2);

        r22 = $r9;

        $r10 = r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: android.util.ArrayMap mPageToRenderTaskMap>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, r22);

        $r15 = <android.os.AsyncTask: java.util.concurrent.Executor SERIAL_EXECUTOR>;

        $r13 = newarray (java.lang.Void)[0];

        virtualinvoke r22.<com.android.printspooler.model.PageContentRepository$AsyncRenderer$RenderPageTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r15, $r13);

        return;
    }

    public void cancelRendering(int)
    {
        com.android.printspooler.model.PageContentRepository$AsyncRenderer r0;
        int i0;
        com.android.printspooler.model.PageContentRepository$AsyncRenderer$RenderPageTask r1;
        android.util.ArrayMap $r2;
        java.lang.Integer $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.android.printspooler.model.PageContentRepository$AsyncRenderer;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: android.util.ArrayMap mPageToRenderTaskMap>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r3);

        r1 = (com.android.printspooler.model.PageContentRepository$AsyncRenderer$RenderPageTask) $r4;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.printspooler.model.PageContentRepository$AsyncRenderer$RenderPageTask: boolean isCancelled()>();

        if $z0 != 0 goto label1;

        virtualinvoke r1.<com.android.printspooler.model.PageContentRepository$AsyncRenderer$RenderPageTask: boolean cancel(boolean)>(1);

     label1:
        return;
    }

    private void cancelAllRendering()
    {
        com.android.printspooler.model.PageContentRepository$AsyncRenderer r0;
        int i0, i1;
        com.android.printspooler.model.PageContentRepository$AsyncRenderer$RenderPageTask r1;
        android.util.ArrayMap $r2, $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.android.printspooler.model.PageContentRepository$AsyncRenderer;

        $r2 = r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: android.util.ArrayMap mPageToRenderTaskMap>;

        i0 = virtualinvoke $r2.<android.util.ArrayMap: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: android.util.ArrayMap mPageToRenderTaskMap>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r1 = (com.android.printspooler.model.PageContentRepository$AsyncRenderer$RenderPageTask) $r4;

        $z0 = virtualinvoke r1.<com.android.printspooler.model.PageContentRepository$AsyncRenderer$RenderPageTask: boolean isCancelled()>();

        if $z0 != 0 goto label2;

        virtualinvoke r1.<com.android.printspooler.model.PageContentRepository$AsyncRenderer$RenderPageTask: boolean cancel(boolean)>(1);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    static android.content.Context access$600(com.android.printspooler.model.PageContentRepository$AsyncRenderer)
    {
        com.android.printspooler.model.PageContentRepository$AsyncRenderer r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.printspooler.model.PageContentRepository$AsyncRenderer;

        $r1 = r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: android.content.Context mContext>;

        return $r1;
    }

    static java.lang.Object access$700(com.android.printspooler.model.PageContentRepository$AsyncRenderer)
    {
        com.android.printspooler.model.PageContentRepository$AsyncRenderer r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.printspooler.model.PageContentRepository$AsyncRenderer;

        $r1 = r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: java.lang.Object mLock>;

        return $r1;
    }

    static com.android.printspooler.renderer.IPdfRenderer access$800(com.android.printspooler.model.PageContentRepository$AsyncRenderer)
    {
        com.android.printspooler.model.PageContentRepository$AsyncRenderer r0;
        com.android.printspooler.renderer.IPdfRenderer $r1;

        r0 := @parameter0: com.android.printspooler.model.PageContentRepository$AsyncRenderer;

        $r1 = r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: com.android.printspooler.renderer.IPdfRenderer mRenderer>;

        return $r1;
    }

    static com.android.printspooler.model.PageContentRepository$OnMalformedPdfFileListener access$900(com.android.printspooler.model.PageContentRepository$AsyncRenderer)
    {
        com.android.printspooler.model.PageContentRepository$AsyncRenderer r0;
        com.android.printspooler.model.PageContentRepository$OnMalformedPdfFileListener $r1;

        r0 := @parameter0: com.android.printspooler.model.PageContentRepository$AsyncRenderer;

        $r1 = r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: com.android.printspooler.model.PageContentRepository$OnMalformedPdfFileListener mOnMalformedPdfFileListener>;

        return $r1;
    }

    static int access$1002(com.android.printspooler.model.PageContentRepository$AsyncRenderer, int)
    {
        com.android.printspooler.model.PageContentRepository$AsyncRenderer r0;
        int i0;

        r0 := @parameter0: com.android.printspooler.model.PageContentRepository$AsyncRenderer;

        i0 := @parameter1: int;

        r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: int mPageCount> = i0;

        return i0;
    }

    static boolean access$1100(com.android.printspooler.model.PageContentRepository$AsyncRenderer)
    {
        com.android.printspooler.model.PageContentRepository$AsyncRenderer r0;
        boolean $z0;

        r0 := @parameter0: com.android.printspooler.model.PageContentRepository$AsyncRenderer;

        $z0 = r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: boolean mBoundToService>;

        return $z0;
    }

    static boolean access$1102(com.android.printspooler.model.PageContentRepository$AsyncRenderer, boolean)
    {
        com.android.printspooler.model.PageContentRepository$AsyncRenderer r0;
        boolean z0;

        r0 := @parameter0: com.android.printspooler.model.PageContentRepository$AsyncRenderer;

        z0 := @parameter1: boolean;

        r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: boolean mBoundToService> = z0;

        return z0;
    }

    static com.android.printspooler.model.PageContentRepository$PageContentLruCache access$1200(com.android.printspooler.model.PageContentRepository$AsyncRenderer)
    {
        com.android.printspooler.model.PageContentRepository$AsyncRenderer r0;
        com.android.printspooler.model.PageContentRepository$PageContentLruCache $r1;

        r0 := @parameter0: com.android.printspooler.model.PageContentRepository$AsyncRenderer;

        $r1 = r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: com.android.printspooler.model.PageContentRepository$PageContentLruCache mPageContentCache>;

        return $r1;
    }

    static android.util.ArrayMap access$1300(com.android.printspooler.model.PageContentRepository$AsyncRenderer)
    {
        com.android.printspooler.model.PageContentRepository$AsyncRenderer r0;
        android.util.ArrayMap $r1;

        r0 := @parameter0: com.android.printspooler.model.PageContentRepository$AsyncRenderer;

        $r1 = r0.<com.android.printspooler.model.PageContentRepository$AsyncRenderer: android.util.ArrayMap mPageToRenderTaskMap>;

        return $r1;
    }
}
