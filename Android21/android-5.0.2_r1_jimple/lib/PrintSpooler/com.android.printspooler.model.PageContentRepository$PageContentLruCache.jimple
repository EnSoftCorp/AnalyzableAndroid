final class com.android.printspooler.model.PageContentRepository$PageContentLruCache extends java.lang.Object
{
    private final java.util.LinkedHashMap mRenderedPages;
    private final int mMaxSizeInBytes;
    private int mSizeInBytes;

    public void <init>(int)
    {
        com.android.printspooler.model.PageContentRepository$PageContentLruCache r0;
        int i0;
        java.util.LinkedHashMap $r1;

        r0 := @this: com.android.printspooler.model.PageContentRepository$PageContentLruCache;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: java.util.LinkedHashMap mRenderedPages> = $r1;

        r0.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: int mMaxSizeInBytes> = i0;

        return;
    }

    public com.android.printspooler.model.PageContentRepository$RenderedPage getRenderedPage(int)
    {
        com.android.printspooler.model.PageContentRepository$PageContentLruCache r0;
        int i0;
        java.util.LinkedHashMap $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        com.android.printspooler.model.PageContentRepository$RenderedPage $r4;

        r0 := @this: com.android.printspooler.model.PageContentRepository$PageContentLruCache;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: java.util.LinkedHashMap mRenderedPages>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = virtualinvoke $r1.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (com.android.printspooler.model.PageContentRepository$RenderedPage) $r3;

        return $r4;
    }

    public com.android.printspooler.model.PageContentRepository$RenderedPage removeRenderedPage(int)
    {
        com.android.printspooler.model.PageContentRepository$PageContentLruCache r0;
        int i0, $i1, $i2, $i3;
        com.android.printspooler.model.PageContentRepository$RenderedPage r1;
        java.util.LinkedHashMap $r2;
        java.lang.Integer $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.printspooler.model.PageContentRepository$PageContentLruCache;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: java.util.LinkedHashMap mRenderedPages>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = virtualinvoke $r2.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r3);

        r1 = (com.android.printspooler.model.PageContentRepository$RenderedPage) $r4;

        if r1 == null goto label1;

        $i1 = r0.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: int mSizeInBytes>;

        $i2 = virtualinvoke r1.<com.android.printspooler.model.PageContentRepository$RenderedPage: int getSizeInBytes()>();

        $i3 = $i1 - $i2;

        r0.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: int mSizeInBytes> = $i3;

     label1:
        return r1;
    }

    public com.android.printspooler.model.PageContentRepository$RenderedPage putRenderedPage(int, com.android.printspooler.model.PageContentRepository$RenderedPage)
    {
        com.android.printspooler.model.PageContentRepository$PageContentLruCache r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        com.android.printspooler.model.PageContentRepository$RenderedPage r1, r2, $r8;
        java.util.LinkedHashMap $r3, $r6;
        java.lang.Integer $r4, $r7;
        java.lang.Object $r5, $r9;
        com.android.printspooler.model.PageContentRepository$RenderSpec $r10, $r12;
        java.lang.IllegalStateException $r11, $r13;
        boolean $z0;

        r0 := @this: com.android.printspooler.model.PageContentRepository$PageContentLruCache;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.printspooler.model.PageContentRepository$RenderedPage;

        $r3 = r0.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: java.util.LinkedHashMap mRenderedPages>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = virtualinvoke $r3.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r4);

        r2 = (com.android.printspooler.model.PageContentRepository$RenderedPage) $r5;

        if r2 == null goto label1;

        $r12 = r2.<com.android.printspooler.model.PageContentRepository$RenderedPage: com.android.printspooler.model.PageContentRepository$RenderSpec renderSpec>;

        $r10 = r1.<com.android.printspooler.model.PageContentRepository$RenderedPage: com.android.printspooler.model.PageContentRepository$RenderSpec renderSpec>;

        $z0 = virtualinvoke $r12.<com.android.printspooler.model.PageContentRepository$RenderSpec: boolean equals(java.lang.Object)>($r10);

        if $z0 != 0 goto label3;

        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Wrong page size");

        throw $r13;

     label1:
        i1 = virtualinvoke r1.<com.android.printspooler.model.PageContentRepository$RenderedPage: int getSizeInBytes()>();

        $i2 = r0.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: int mSizeInBytes>;

        $i4 = $i2 + i1;

        $i3 = r0.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: int mMaxSizeInBytes>;

        if $i4 <= $i3 goto label2;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Client didn\'t free space");

        throw $r11;

     label2:
        $i5 = r0.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: int mSizeInBytes>;

        $i6 = $i5 + i1;

        r0.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: int mSizeInBytes> = $i6;

     label3:
        $r6 = r0.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: java.util.LinkedHashMap mRenderedPages>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r9 = virtualinvoke $r6.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r1);

        $r8 = (com.android.printspooler.model.PageContentRepository$RenderedPage) $r9;

        return $r8;
    }

    public void invalidate()
    {
        com.android.printspooler.model.PageContentRepository$PageContentLruCache r0;
        java.util.Iterator r1;
        java.util.Map$Entry r2;
        java.util.LinkedHashMap $r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r6;
        com.android.printspooler.model.PageContentRepository$RenderedPage $r7;

        r0 := @this: com.android.printspooler.model.PageContentRepository$PageContentLruCache;

        $r3 = r0.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: java.util.LinkedHashMap mRenderedPages>;

        $r4 = virtualinvoke $r3.<java.util.LinkedHashMap: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r5;

        $r6 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (com.android.printspooler.model.PageContentRepository$RenderedPage) $r6;

        $r7.<com.android.printspooler.model.PageContentRepository$RenderedPage: int state> = 2;

        goto label1;

     label2:
        return;
    }

    public com.android.printspooler.model.PageContentRepository$RenderedPage removeLeastNeeded()
    {
        com.android.printspooler.model.PageContentRepository$PageContentLruCache r0;
        java.util.Iterator r1;
        java.util.Map$Entry r2, $r9;
        com.android.printspooler.model.PageContentRepository$RenderedPage r3, r20;
        java.lang.Integer r4, $r11, $r12;
        java.util.LinkedHashMap $r5, $r6, $r8, $r13, $r19;
        boolean $z0, $z1;
        java.util.Set $r7;
        java.lang.Object $r10, $r14, $r15, $r16, $r17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;

        r0 := @this: com.android.printspooler.model.PageContentRepository$PageContentLruCache;

        $r5 = r0.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: java.util.LinkedHashMap mRenderedPages>;

        $z0 = virtualinvoke $r5.<java.util.LinkedHashMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r6 = r0.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: java.util.LinkedHashMap mRenderedPages>;

        $r7 = virtualinvoke $r6.<java.util.LinkedHashMap: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r16 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r16;

        $r15 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        r3 = (com.android.printspooler.model.PageContentRepository$RenderedPage) $r15;

        $i3 = r3.<com.android.printspooler.model.PageContentRepository$RenderedPage: int state>;

        if $i3 != 2 goto label3;

        $r17 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        r4 = (java.lang.Integer) $r17;

        $r19 = r0.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: java.util.LinkedHashMap mRenderedPages>;

        virtualinvoke $r19.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>(r4);

        $i5 = r0.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: int mSizeInBytes>;

        $i4 = virtualinvoke r3.<com.android.printspooler.model.PageContentRepository$RenderedPage: int getSizeInBytes()>();

        $i6 = $i5 - $i4;

        r0.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: int mSizeInBytes> = $i6;

        return r3;

     label3:
        goto label2;

     label4:
        $r8 = r0.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: java.util.LinkedHashMap mRenderedPages>;

        $r9 = virtualinvoke $r8.<java.util.LinkedHashMap: java.util.Map$Entry eldest()>();

        $r10 = interfaceinvoke $r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = (java.lang.Integer) $r10;

        i7 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        $r13 = r0.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: java.util.LinkedHashMap mRenderedPages>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);

        $r14 = virtualinvoke $r13.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r12);

        r20 = (com.android.printspooler.model.PageContentRepository$RenderedPage) $r14;

        $i0 = r0.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: int mSizeInBytes>;

        $i2 = virtualinvoke r20.<com.android.printspooler.model.PageContentRepository$RenderedPage: int getSizeInBytes()>();

        $i1 = $i0 - $i2;

        r0.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: int mSizeInBytes> = $i1;

        return r20;
    }

    public int getSizeInBytes()
    {
        com.android.printspooler.model.PageContentRepository$PageContentLruCache r0;
        int $i0;

        r0 := @this: com.android.printspooler.model.PageContentRepository$PageContentLruCache;

        $i0 = r0.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: int mSizeInBytes>;

        return $i0;
    }

    public int getMaxSizeInBytes()
    {
        com.android.printspooler.model.PageContentRepository$PageContentLruCache r0;
        int $i0;

        r0 := @this: com.android.printspooler.model.PageContentRepository$PageContentLruCache;

        $i0 = r0.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: int mMaxSizeInBytes>;

        return $i0;
    }

    public void clear()
    {
        com.android.printspooler.model.PageContentRepository$PageContentLruCache r0;
        java.util.Iterator r1;
        java.util.LinkedHashMap $r2;
        java.util.Set $r3;
        boolean $z0;

        r0 := @this: com.android.printspooler.model.PageContentRepository$PageContentLruCache;

        $r2 = r0.<com.android.printspooler.model.PageContentRepository$PageContentLruCache: java.util.LinkedHashMap mRenderedPages>;

        $r3 = virtualinvoke $r2.<java.util.LinkedHashMap: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke r1.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        return;
    }
}
