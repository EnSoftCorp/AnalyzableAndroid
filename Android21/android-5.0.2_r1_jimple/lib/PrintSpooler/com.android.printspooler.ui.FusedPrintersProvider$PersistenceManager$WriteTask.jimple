final class com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$WriteTask extends android.os.AsyncTask
{
    final com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager this$1;

    private void <init>(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager)
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$WriteTask r0;
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager r1;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$WriteTask;

        r1 := @parameter0: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager;

        r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$WriteTask: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager this$1> = r1;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        return;
    }

    protected transient java.lang.Void doInBackground(java.util.List[])
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$WriteTask r0;
        java.util.List[] r1;
        java.util.List $r2;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$WriteTask;

        r1 := @parameter0: java.util.List[];

        $r2 = r1[0];

        specialinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$WriteTask: void doWritePrinterHistory(java.util.List)>($r2);

        return null;
    }

    private void doWritePrinterHistory(java.util.List)
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$WriteTask r0;
        java.util.List r1;
        java.io.FileOutputStream r2;
        com.android.internal.util.FastXmlSerializer r3, $r10;
        int i0, i1;
        android.print.PrinterInfo r4;
        java.lang.String r5, $r18, $r20, $r23, $r28;
        android.print.PrinterId r6;
        java.lang.Throwable r7, $r29;
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager $r8, $r13, $r34;
        android.util.AtomicFile $r9, $r16, $r33;
        java.lang.Boolean $r11;
        java.lang.Object $r15;
        android.content.ComponentName $r27;
        java.io.IOException $r30, r35;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$WriteTask;

        r1 := @parameter0: java.util.List;

        r2 = null;

     label01:
        $r8 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$WriteTask: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager this$1>;

        $r9 = staticinvoke <com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: android.util.AtomicFile access$1200(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager)>($r8);

        r2 = virtualinvoke $r9.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

        $r10 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r10.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r3 = $r10;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r2, "utf-8");

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r11);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "printers");

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

     label02:
        if i1 >= i0 goto label04;

        $r15 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (android.print.PrinterInfo) $r15;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "printer");

        $r18 = virtualinvoke r4.<android.print.PrinterInfo: java.lang.String getName()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r18);

        $r20 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(3);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "status", $r20);

        r5 = virtualinvoke r4.<android.print.PrinterInfo: java.lang.String getDescription()>();

        if r5 == null goto label03;

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "description", r5);

     label03:
        r6 = virtualinvoke r4.<android.print.PrinterInfo: android.print.PrinterId getId()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "printerId");

        $r23 = virtualinvoke r6.<android.print.PrinterId: java.lang.String getLocalId()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "localId", $r23);

        $r27 = virtualinvoke r6.<android.print.PrinterId: android.content.ComponentName getServiceName()>();

        $r28 = virtualinvoke $r27.<android.content.ComponentName: java.lang.String flattenToString()>();

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "serviceName", $r28);

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "printerId");

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "printer");

        i1 = i1 + 1;

        goto label02;

     label04:
        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "printers");

        interfaceinvoke r3.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        $r13 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$WriteTask: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager this$1>;

        $r16 = staticinvoke <com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: android.util.AtomicFile access$1200(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager)>($r13);

        virtualinvoke $r16.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r2);

     label05:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r2);

        goto label10;

     label06:
        $r30 := @caughtexception;

        r35 = $r30;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("FusedPrintersProvider", "Failed to write printer history, restoring backup.", r35);

        $r34 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$WriteTask: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager this$1>;

        $r33 = staticinvoke <com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: android.util.AtomicFile access$1200(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager)>($r34);

        virtualinvoke $r33.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r2);

     label07:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r2);

        goto label10;

     label08:
        $r29 := @caughtexception;

        r7 = $r29;

     label09:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r2);

        throw r7;

     label10:
        return;

        catch java.io.IOException from label01 to label05 with label06;
        catch java.lang.Throwable from label01 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$WriteTask r0;
        java.lang.Object[] r1;
        java.util.List[] $r2;
        java.lang.Void $r3;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$WriteTask;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (java.util.List[]) r1;

        $r3 = virtualinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$WriteTask: java.lang.Void doInBackground(java.util.List[])>($r2);

        return $r3;
    }

    void <init>(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager, com.android.printspooler.ui.FusedPrintersProvider$1)
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$WriteTask r0;
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager r1;
        com.android.printspooler.ui.FusedPrintersProvider$1 r2;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$WriteTask;

        r1 := @parameter0: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager;

        r2 := @parameter1: com.android.printspooler.ui.FusedPrintersProvider$1;

        specialinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$WriteTask: void <init>(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager)>(r1);

        return;
    }
}
