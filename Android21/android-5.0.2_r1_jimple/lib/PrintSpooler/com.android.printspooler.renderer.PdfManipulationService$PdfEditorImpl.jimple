final class com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl extends com.android.printspooler.renderer.IPdfEditor$Stub
{
    private final java.lang.Object mLock;
    private android.graphics.pdf.PdfEditor mEditor;
    final com.android.printspooler.renderer.PdfManipulationService this$0;

    private void <init>(com.android.printspooler.renderer.PdfManipulationService)
    {
        com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl r0;
        com.android.printspooler.renderer.PdfManipulationService r1;
        java.lang.Object $r2;

        r0 := @this: com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl;

        r1 := @parameter0: com.android.printspooler.renderer.PdfManipulationService;

        r0.<com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl: com.android.printspooler.renderer.PdfManipulationService this$0> = r1;

        specialinvoke r0.<com.android.printspooler.renderer.IPdfEditor$Stub: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl: java.lang.Object mLock> = $r2;

        return;
    }

    public int openDocument(android.os.ParcelFileDescriptor) throws android.os.RemoteException
    {
        com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl r0;
        android.os.ParcelFileDescriptor r1;
        java.lang.Object r2, $r5;
        java.lang.Exception r3, $r8;
        java.lang.Throwable r4, $r11;
        android.graphics.pdf.PdfEditor $r6, $r7;
        int $i0;
        android.os.RemoteException $r9;
        java.lang.String $r10;

        r0 := @this: com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        $r5 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        specialinvoke r0.<com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl: void throwIfOpened()>();

        $r6 = new android.graphics.pdf.PdfEditor;

        specialinvoke $r6.<android.graphics.pdf.PdfEditor: void <init>(android.os.ParcelFileDescriptor)>(r1);

        r0.<com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl: android.graphics.pdf.PdfEditor mEditor> = $r6;

        $r7 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl: android.graphics.pdf.PdfEditor mEditor>;

        $i0 = virtualinvoke $r7.<android.graphics.pdf.PdfEditor: int getPageCount()>();

     label2:
        exitmonitor r2;

     label3:
        return $i0;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PdfManipulationService", "Cannot open file", r3);

        $r9 = new android.os.RemoteException;

        $r10 = virtualinvoke r3.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r9.<android.os.RemoteException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label5:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r2;

     label6:
        throw r4;

        catch java.io.IOException from label1 to label2 with label4;
        catch java.lang.IllegalStateException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
    }

    public void removePages(android.print.PageRange[])
    {
        com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl r0;
        android.print.PageRange[] r1, r8;
        java.lang.Object r2, $r5;
        int i0, i1, i2, $i3;
        android.print.PageRange r3;
        java.lang.Throwable r4, $r7;
        android.graphics.pdf.PdfEditor $r6;

        r0 := @this: com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl;

        r1 := @parameter0: android.print.PageRange[];

        $r5 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        specialinvoke r0.<com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl: void throwIfNotOpened()>();

        r8 = staticinvoke <com.android.printspooler.util.PageRangeUtils: android.print.PageRange[] normalize(android.print.PageRange[])>(r1);

        i0 = lengthof r8;

        i1 = i0 - 1;

     label2:
        if i1 < 0 goto label5;

        r3 = r8[i1];

        i2 = virtualinvoke r3.<android.print.PageRange: int getEnd()>();

     label3:
        $i3 = virtualinvoke r3.<android.print.PageRange: int getStart()>();

        if i2 < $i3 goto label4;

        $r6 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl: android.graphics.pdf.PdfEditor mEditor>;

        virtualinvoke $r6.<android.graphics.pdf.PdfEditor: void removePage(int)>(i2);

        i2 = i2 + -1;

        goto label3;

     label4:
        i1 = i1 + -1;

        goto label2;

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r7 := @caughtexception;

        r4 = $r7;

        exitmonitor r2;

     label8:
        throw r4;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void write(android.os.ParcelFileDescriptor) throws android.os.RemoteException
    {
        com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl r0;
        android.os.ParcelFileDescriptor r1;
        java.lang.Object r2, $r5;
        java.lang.Exception r3, $r8;
        java.lang.Throwable r4, $r7;
        android.graphics.pdf.PdfEditor $r6;
        android.os.RemoteException $r9;
        java.lang.String $r10;

        r0 := @this: com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        $r5 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        specialinvoke r0.<com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl: void throwIfNotOpened()>();

        $r6 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl: android.graphics.pdf.PdfEditor mEditor>;

        virtualinvoke $r6.<android.graphics.pdf.PdfEditor: void write(android.os.ParcelFileDescriptor)>(r1);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PdfManipulationService", "Error writing PDF to file.", r3);

        $r9 = new android.os.RemoteException;

        $r10 = virtualinvoke r3.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r9.<android.os.RemoteException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label4:
        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r7 := @caughtexception;

        r4 = $r7;

        exitmonitor r2;

     label7:
        throw r4;

     label8:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.IllegalStateException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void closeDocument()
    {
        com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        android.graphics.pdf.PdfEditor $r4;

        r0 := @this: com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl;

        $r3 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl: void throwIfNotOpened()>();

        $r4 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl: android.graphics.pdf.PdfEditor mEditor>;

        virtualinvoke $r4.<android.graphics.pdf.PdfEditor: void close()>();

        r0.<com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl: android.graphics.pdf.PdfEditor mEditor> = null;

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void throwIfOpened()
    {
        com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl r0;
        android.graphics.pdf.PdfEditor $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl;

        $r1 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl: android.graphics.pdf.PdfEditor mEditor>;

        if $r1 == null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already opened");

        throw $r2;

     label1:
        return;
    }

    private void throwIfNotOpened()
    {
        com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl r0;
        android.graphics.pdf.PdfEditor $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl;

        $r1 = r0.<com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl: android.graphics.pdf.PdfEditor mEditor>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not opened");

        throw $r2;

     label1:
        return;
    }

    void <init>(com.android.printspooler.renderer.PdfManipulationService, com.android.printspooler.renderer.PdfManipulationService$1)
    {
        com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl r0;
        com.android.printspooler.renderer.PdfManipulationService r1;
        com.android.printspooler.renderer.PdfManipulationService$1 r2;

        r0 := @this: com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl;

        r1 := @parameter0: com.android.printspooler.renderer.PdfManipulationService;

        r2 := @parameter1: com.android.printspooler.renderer.PdfManipulationService$1;

        specialinvoke r0.<com.android.printspooler.renderer.PdfManipulationService$PdfEditorImpl: void <init>(com.android.printspooler.renderer.PdfManipulationService)>(r1);

        return;
    }
}
