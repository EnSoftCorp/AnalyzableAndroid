final class com.android.printspooler.model.RemotePrintDocument$LayoutCommand extends com.android.printspooler.model.RemotePrintDocument$AsyncCommand
{
    private final android.print.PrintAttributes mOldAttributes;
    private final android.print.PrintAttributes mNewAttributes;
    private final android.os.Bundle mMetadata;
    private final android.print.ILayoutResultCallback mRemoteResultCallback;
    private final android.os.Handler mHandler;

    public void <init>(android.os.Looper, android.print.IPrintDocumentAdapter, com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo, android.print.PrintAttributes, android.print.PrintAttributes, boolean, com.android.printspooler.model.RemotePrintDocument$CommandDoneCallback)
    {
        com.android.printspooler.model.RemotePrintDocument$LayoutCommand r0;
        android.os.Looper r1;
        android.print.IPrintDocumentAdapter r2;
        com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo r3;
        android.print.PrintAttributes r4, r5, $r8, $r10, $r15, $r16;
        boolean z0;
        com.android.printspooler.model.RemotePrintDocument$CommandDoneCallback r6;
        android.print.PrintAttributes$Builder $r7, $r9;
        android.os.Bundle $r11, $r17;
        com.android.printspooler.model.RemotePrintDocument$LayoutCommand$LayoutHandler $r12;
        com.android.printspooler.model.RemotePrintDocument$LayoutCommand$LayoutResultCallback $r13;
        android.os.Handler $r14;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument$LayoutCommand;

        r1 := @parameter0: android.os.Looper;

        r2 := @parameter1: android.print.IPrintDocumentAdapter;

        r3 := @parameter2: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo;

        r4 := @parameter3: android.print.PrintAttributes;

        r5 := @parameter4: android.print.PrintAttributes;

        z0 := @parameter5: boolean;

        r6 := @parameter6: com.android.printspooler.model.RemotePrintDocument$CommandDoneCallback;

        specialinvoke r0.<com.android.printspooler.model.RemotePrintDocument$AsyncCommand: void <init>(android.print.IPrintDocumentAdapter,com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo,com.android.printspooler.model.RemotePrintDocument$CommandDoneCallback)>(r2, r3, r6);

        $r7 = new android.print.PrintAttributes$Builder;

        specialinvoke $r7.<android.print.PrintAttributes$Builder: void <init>()>();

        $r8 = virtualinvoke $r7.<android.print.PrintAttributes$Builder: android.print.PrintAttributes build()>();

        r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: android.print.PrintAttributes mOldAttributes> = $r8;

        $r9 = new android.print.PrintAttributes$Builder;

        specialinvoke $r9.<android.print.PrintAttributes$Builder: void <init>()>();

        $r10 = virtualinvoke $r9.<android.print.PrintAttributes$Builder: android.print.PrintAttributes build()>();

        r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: android.print.PrintAttributes mNewAttributes> = $r10;

        $r11 = new android.os.Bundle;

        specialinvoke $r11.<android.os.Bundle: void <init>()>();

        r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: android.os.Bundle mMetadata> = $r11;

        $r12 = new com.android.printspooler.model.RemotePrintDocument$LayoutCommand$LayoutHandler;

        specialinvoke $r12.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand$LayoutHandler: void <init>(com.android.printspooler.model.RemotePrintDocument$LayoutCommand,android.os.Looper)>(r0, r1);

        r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: android.os.Handler mHandler> = $r12;

        $r13 = new com.android.printspooler.model.RemotePrintDocument$LayoutCommand$LayoutResultCallback;

        $r14 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: android.os.Handler mHandler>;

        specialinvoke $r13.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand$LayoutResultCallback: void <init>(android.os.Handler)>($r14);

        r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: android.print.ILayoutResultCallback mRemoteResultCallback> = $r13;

        $r16 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: android.print.PrintAttributes mOldAttributes>;

        virtualinvoke $r16.<android.print.PrintAttributes: void copyFrom(android.print.PrintAttributes)>(r4);

        $r15 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: android.print.PrintAttributes mNewAttributes>;

        virtualinvoke $r15.<android.print.PrintAttributes: void copyFrom(android.print.PrintAttributes)>(r5);

        $r17 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: android.os.Bundle mMetadata>;

        virtualinvoke $r17.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("EXTRA_PRINT_PREVIEW", z0);

        return;
    }

    public void run()
    {
        com.android.printspooler.model.RemotePrintDocument$LayoutCommand r0;
        android.os.RemoteException r1, $r8;
        com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo $r2;
        int $i0, $i2;
        android.os.Bundle $r3;
        android.print.ILayoutResultCallback $r4;
        android.print.PrintAttributes $r5, $r6;
        android.print.IPrintDocumentAdapter $r7;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument$LayoutCommand;

        virtualinvoke r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: void running()>();

     label1:
        $r2 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocument>;

        $r2.<com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo: boolean changed> = 0;

        $r7 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: android.print.IPrintDocumentAdapter mAdapter>;

        $r6 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: android.print.PrintAttributes mOldAttributes>;

        $r5 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: android.print.PrintAttributes mNewAttributes>;

        $r4 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: android.print.ILayoutResultCallback mRemoteResultCallback>;

        $r3 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: android.os.Bundle mMetadata>;

        $i0 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: int mSequence>;

        interfaceinvoke $r7.<android.print.IPrintDocumentAdapter: void layout(android.print.PrintAttributes,android.print.PrintAttributes,android.print.ILayoutResultCallback,android.os.Bundle,int)>($r6, $r5, $r4, $r3, $i0);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r1 = $r8;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintDocument", "Error calling layout", r1);

        $i2 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: int mSequence>;

        specialinvoke r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: void handleOnLayoutFailed(java.lang.CharSequence,int)>(null, $i2);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void handleOnLayoutStarted(android.os.ICancellationSignal, int)
    {
        com.android.printspooler.model.RemotePrintDocument$LayoutCommand r0;
        android.os.ICancellationSignal r1;
        int i0, $i1, $i3;
        android.os.RemoteException r2, $r3;
        boolean $z0;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument$LayoutCommand;

        r1 := @parameter0: android.os.ICancellationSignal;

        i0 := @parameter1: int;

        $i1 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: int mSequence>;

        if i0 == $i1 goto label1;

        return;

     label1:
        $z0 = virtualinvoke r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: boolean isCanceling()>();

        if $z0 == 0 goto label5;

     label2:
        interfaceinvoke r1.<android.os.ICancellationSignal: void cancel()>();

     label3:
        goto label6;

     label4:
        $r3 := @caughtexception;

        r2 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintDocument", "Error cancelling", r2);

        $i3 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: int mSequence>;

        specialinvoke r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: void handleOnLayoutFailed(java.lang.CharSequence,int)>(null, $i3);

        goto label6;

     label5:
        r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: android.os.ICancellationSignal mCancellation> = r1;

     label6:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void handleOnLayoutFinished(android.print.PrintDocumentInfo, boolean, int)
    {
        com.android.printspooler.model.RemotePrintDocument$LayoutCommand r0;
        android.print.PrintDocumentInfo r1, $r13;
        boolean z0, $z1;
        int i0, $i1;
        com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo $r2, $r3, $r4, $r6, $r8, $r9, $r10, $r12;
        android.print.PrintAttributes $r5;
        android.os.Bundle $r7;
        com.android.printspooler.model.RemotePrintDocument$CommandDoneCallback $r11;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument$LayoutCommand;

        r1 := @parameter0: android.print.PrintDocumentInfo;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        $i1 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: int mSequence>;

        if i0 == $i1 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: void completed()>();

        if z0 != 0 goto label2;

        $r12 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocument>;

        $r13 = $r12.<com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo: android.print.PrintDocumentInfo info>;

        $z1 = specialinvoke r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: boolean equalsIgnoreSize(android.print.PrintDocumentInfo,android.print.PrintDocumentInfo)>($r13, r1);

        if $z1 != 0 goto label3;

     label2:
        $r2 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocument>;

        $r2.<com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo: android.print.PageRange[] writtenPages> = null;

        $r3 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocument>;

        $r3.<com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo: android.print.PageRange[] printedPages> = null;

        $r4 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocument>;

        $r4.<com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo: boolean changed> = 1;

     label3:
        $r6 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocument>;

        $r5 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: android.print.PrintAttributes mNewAttributes>;

        $r6.<com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo: android.print.PrintAttributes attributes> = $r5;

        $r8 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocument>;

        $r7 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: android.os.Bundle mMetadata>;

        $r8.<com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo: android.os.Bundle metadata> = $r7;

        $r9 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocument>;

        $r9.<com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo: boolean laidout> = 1;

        $r10 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocument>;

        $r10.<com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo: android.print.PrintDocumentInfo info> = r1;

        r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: android.os.ICancellationSignal mCancellation> = null;

        $r11 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: com.android.printspooler.model.RemotePrintDocument$CommandDoneCallback mDoneCallback>;

        interfaceinvoke $r11.<com.android.printspooler.model.RemotePrintDocument$CommandDoneCallback: void onDone()>();

        return;
    }

    private void handleOnLayoutFailed(java.lang.CharSequence, int)
    {
        com.android.printspooler.model.RemotePrintDocument$LayoutCommand r0;
        java.lang.CharSequence r1;
        int i0, $i1;
        com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo $r2;
        com.android.printspooler.model.RemotePrintDocument$CommandDoneCallback $r3;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument$LayoutCommand;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        $i1 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: int mSequence>;

        if i0 == $i1 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocument>;

        $r2.<com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo: boolean laidout> = 0;

        virtualinvoke r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: void failed(java.lang.CharSequence)>(r1);

        r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: android.os.ICancellationSignal mCancellation> = null;

        $r3 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: com.android.printspooler.model.RemotePrintDocument$CommandDoneCallback mDoneCallback>;

        interfaceinvoke $r3.<com.android.printspooler.model.RemotePrintDocument$CommandDoneCallback: void onDone()>();

        return;
    }

    private void handleOnLayoutCanceled(int)
    {
        com.android.printspooler.model.RemotePrintDocument$LayoutCommand r0;
        int i0, $i1;
        com.android.printspooler.model.RemotePrintDocument$CommandDoneCallback $r1;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument$LayoutCommand;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: int mSequence>;

        if i0 == $i1 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: void canceled()>();

        r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: android.os.ICancellationSignal mCancellation> = null;

        $r1 = r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: com.android.printspooler.model.RemotePrintDocument$CommandDoneCallback mDoneCallback>;

        interfaceinvoke $r1.<com.android.printspooler.model.RemotePrintDocument$CommandDoneCallback: void onDone()>();

        return;
    }

    private boolean equalsIgnoreSize(android.print.PrintDocumentInfo, android.print.PrintDocumentInfo)
    {
        com.android.printspooler.model.RemotePrintDocument$LayoutCommand r0;
        android.print.PrintDocumentInfo r1, r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument$LayoutCommand;

        r1 := @parameter0: android.print.PrintDocumentInfo;

        r2 := @parameter1: android.print.PrintDocumentInfo;

        if r1 != r2 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        if r2 != null goto label3;

        return 0;

     label3:
        $i0 = virtualinvoke r1.<android.print.PrintDocumentInfo: int getContentType()>();

        $i1 = virtualinvoke r2.<android.print.PrintDocumentInfo: int getContentType()>();

        if $i0 != $i1 goto label4;

        $i2 = virtualinvoke r1.<android.print.PrintDocumentInfo: int getPageCount()>();

        $i3 = virtualinvoke r2.<android.print.PrintDocumentInfo: int getPageCount()>();

        if $i2 == $i3 goto label5;

     label4:
        return 0;

     label5:
        return 1;
    }

    static void access$1400(com.android.printspooler.model.RemotePrintDocument$LayoutCommand, android.os.ICancellationSignal, int)
    {
        com.android.printspooler.model.RemotePrintDocument$LayoutCommand r0;
        android.os.ICancellationSignal r1;
        int i0;

        r0 := @parameter0: com.android.printspooler.model.RemotePrintDocument$LayoutCommand;

        r1 := @parameter1: android.os.ICancellationSignal;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: void handleOnLayoutStarted(android.os.ICancellationSignal,int)>(r1, i0);

        return;
    }

    static void access$1500(com.android.printspooler.model.RemotePrintDocument$LayoutCommand, android.print.PrintDocumentInfo, boolean, int)
    {
        com.android.printspooler.model.RemotePrintDocument$LayoutCommand r0;
        android.print.PrintDocumentInfo r1;
        boolean z0;
        int i0;

        r0 := @parameter0: com.android.printspooler.model.RemotePrintDocument$LayoutCommand;

        r1 := @parameter1: android.print.PrintDocumentInfo;

        z0 := @parameter2: boolean;

        i0 := @parameter3: int;

        specialinvoke r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: void handleOnLayoutFinished(android.print.PrintDocumentInfo,boolean,int)>(r1, z0, i0);

        return;
    }

    static void access$1600(com.android.printspooler.model.RemotePrintDocument$LayoutCommand, java.lang.CharSequence, int)
    {
        com.android.printspooler.model.RemotePrintDocument$LayoutCommand r0;
        java.lang.CharSequence r1;
        int i0;

        r0 := @parameter0: com.android.printspooler.model.RemotePrintDocument$LayoutCommand;

        r1 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: void handleOnLayoutFailed(java.lang.CharSequence,int)>(r1, i0);

        return;
    }

    static void access$1700(com.android.printspooler.model.RemotePrintDocument$LayoutCommand, int)
    {
        com.android.printspooler.model.RemotePrintDocument$LayoutCommand r0;
        int i0;

        r0 := @parameter0: com.android.printspooler.model.RemotePrintDocument$LayoutCommand;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: void handleOnLayoutCanceled(int)>(i0);

        return;
    }
}
