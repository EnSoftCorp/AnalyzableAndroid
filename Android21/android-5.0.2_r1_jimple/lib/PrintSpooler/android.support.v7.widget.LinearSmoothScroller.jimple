public abstract class android.support.v7.widget.LinearSmoothScroller extends android.support.v7.widget.RecyclerView$SmoothScroller
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private static final float MILLISECONDS_PER_INCH;
    private static final int TARGET_SEEK_SCROLL_DISTANCE_PX;
    public static final int SNAP_TO_START;
    public static final int SNAP_TO_END;
    public static final int SNAP_TO_ANY;
    private static final float TARGET_SEEK_EXTRA_SCROLL_RATIO;
    protected final android.view.animation.LinearInterpolator mLinearInterpolator;
    protected final android.view.animation.DecelerateInterpolator mDecelerateInterpolator;
    protected android.graphics.PointF mTargetVector;
    private final float MILLISECONDS_PER_PX;
    protected int mInterimTargetDx;
    protected int mInterimTargetDy;

    public void <init>(android.content.Context)
    {
        android.support.v7.widget.LinearSmoothScroller r0;
        android.content.Context r1;
        android.view.animation.LinearInterpolator $r2;
        android.view.animation.DecelerateInterpolator $r3;
        android.content.res.Resources $r4;
        android.util.DisplayMetrics $r5;
        float $f0;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.v7.widget.RecyclerView$SmoothScroller: void <init>()>();

        $r2 = new android.view.animation.LinearInterpolator;

        specialinvoke $r2.<android.view.animation.LinearInterpolator: void <init>()>();

        r0.<android.support.v7.widget.LinearSmoothScroller: android.view.animation.LinearInterpolator mLinearInterpolator> = $r2;

        $r3 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r3.<android.view.animation.DecelerateInterpolator: void <init>()>();

        r0.<android.support.v7.widget.LinearSmoothScroller: android.view.animation.DecelerateInterpolator mDecelerateInterpolator> = $r3;

        r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDx> = 0;

        r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDy> = 0;

        $r4 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: float calculateSpeedPerPixel(android.util.DisplayMetrics)>($r5);

        r0.<android.support.v7.widget.LinearSmoothScroller: float MILLISECONDS_PER_PX> = $f0;

        return;
    }

    protected void onStart()
    {
        android.support.v7.widget.LinearSmoothScroller r0;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        return;
    }

    protected void onTargetFound(android.view.View, android.support.v7.widget.RecyclerView$State, android.support.v7.widget.RecyclerView$SmoothScroller$Action)
    {
        android.support.v7.widget.LinearSmoothScroller r0;
        android.view.View r1;
        android.support.v7.widget.RecyclerView$State r2;
        android.support.v7.widget.RecyclerView$SmoothScroller$Action r3;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        double $d0, $d1;
        android.view.animation.DecelerateInterpolator $r4;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        r3 := @parameter2: android.support.v7.widget.RecyclerView$SmoothScroller$Action;

        $i4 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int getHorizontalSnapPreference()>();

        i0 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int calculateDxToMakeVisible(android.view.View,int)>(r1, $i4);

        $i5 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int getVerticalSnapPreference()>();

        i1 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int calculateDyToMakeVisible(android.view.View,int)>(r1, $i5);

        $i7 = i0 * i0;

        $i6 = i1 * i1;

        $i8 = $i7 + $i6;

        $d0 = (double) $i8;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        i2 = (int) $d1;

        i3 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int calculateTimeForDeceleration(int)>(i2);

        if i3 <= 0 goto label1;

        $i10 = neg i0;

        $i9 = neg i1;

        $r4 = r0.<android.support.v7.widget.LinearSmoothScroller: android.view.animation.DecelerateInterpolator mDecelerateInterpolator>;

        virtualinvoke r3.<android.support.v7.widget.RecyclerView$SmoothScroller$Action: void update(int,int,int,android.view.animation.Interpolator)>($i10, $i9, i3, $r4);

     label1:
        return;
    }

    protected void onSeekTargetStep(int, int, android.support.v7.widget.RecyclerView$State, android.support.v7.widget.RecyclerView$SmoothScroller$Action)
    {
        android.support.v7.widget.LinearSmoothScroller r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.support.v7.widget.RecyclerView$State r1;
        android.support.v7.widget.RecyclerView$SmoothScroller$Action r2;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.support.v7.widget.RecyclerView$State;

        r2 := @parameter3: android.support.v7.widget.RecyclerView$SmoothScroller$Action;

        $i2 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int getChildCount()>();

        if $i2 != 0 goto label1;

        virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: void stop()>();

        return;

     label1:
        $i3 = r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDx>;

        $i4 = specialinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int clampApplyScroll(int,int)>($i3, i0);

        r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDx> = $i4;

        $i5 = r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDy>;

        $i6 = specialinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int clampApplyScroll(int,int)>($i5, i1);

        r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDy> = $i6;

        $i7 = r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDx>;

        if $i7 != 0 goto label2;

        $i8 = r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDy>;

        if $i8 != 0 goto label2;

        virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: void updateActionForInterimTarget(android.support.v7.widget.RecyclerView$SmoothScroller$Action)>(r2);

     label2:
        return;
    }

    protected void onStop()
    {
        android.support.v7.widget.LinearSmoothScroller r0;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDy> = 0;

        r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDx> = 0;

        r0.<android.support.v7.widget.LinearSmoothScroller: android.graphics.PointF mTargetVector> = null;

        return;
    }

    protected float calculateSpeedPerPixel(android.util.DisplayMetrics)
    {
        android.support.v7.widget.LinearSmoothScroller r0;
        android.util.DisplayMetrics r1;
        int $i0;
        float $f0, $f1;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        r1 := @parameter0: android.util.DisplayMetrics;

        $i0 = r1.<android.util.DisplayMetrics: int densityDpi>;

        $f0 = (float) $i0;

        $f1 = 25.0F / $f0;

        return $f1;
    }

    protected int calculateTimeForDeceleration(int)
    {
        android.support.v7.widget.LinearSmoothScroller r0;
        int i0, $i1, $i2;
        double $d0, $d1, $d2;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int calculateTimeForScrolling(int)>(i0);

        $d0 = (double) $i1;

        $d1 = $d0 / 0.3356;

        $d2 = staticinvoke <java.lang.Math: double ceil(double)>($d1);

        $i2 = (int) $d2;

        return $i2;
    }

    protected int calculateTimeForScrolling(int)
    {
        android.support.v7.widget.LinearSmoothScroller r0;
        int i0, $i1, $i2;
        float $f0, $f1, $f2;
        double $d0, $d1;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        i0 := @parameter0: int;

        $i1 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        $f1 = (float) $i1;

        $f0 = r0.<android.support.v7.widget.LinearSmoothScroller: float MILLISECONDS_PER_PX>;

        $f2 = $f1 * $f0;

        $d0 = (double) $f2;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i2 = (int) $d1;

        return $i2;
    }

    protected int getHorizontalSnapPreference()
    {
        android.support.v7.widget.LinearSmoothScroller r0;
        android.graphics.PointF $r1, $r2, $r3;
        float $f0, $f1;
        byte $b0, $b1, $b2;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        $r1 = r0.<android.support.v7.widget.LinearSmoothScroller: android.graphics.PointF mTargetVector>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.LinearSmoothScroller: android.graphics.PointF mTargetVector>;

        $f0 = $r2.<android.graphics.PointF: float x>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label2;

     label1:
        $b2 = 0;

        goto label4;

     label2:
        $r3 = r0.<android.support.v7.widget.LinearSmoothScroller: android.graphics.PointF mTargetVector>;

        $f1 = $r3.<android.graphics.PointF: float x>;

        $b1 = $f1 cmpl 0.0F;

        if $b1 <= 0 goto label3;

        $b2 = 1;

        goto label4;

     label3:
        $b2 = -1;

     label4:
        return $b2;
    }

    protected int getVerticalSnapPreference()
    {
        android.support.v7.widget.LinearSmoothScroller r0;
        android.graphics.PointF $r1, $r2, $r3;
        float $f0, $f1;
        byte $b0, $b1, $b2;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        $r1 = r0.<android.support.v7.widget.LinearSmoothScroller: android.graphics.PointF mTargetVector>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.LinearSmoothScroller: android.graphics.PointF mTargetVector>;

        $f0 = $r2.<android.graphics.PointF: float y>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label2;

     label1:
        $b2 = 0;

        goto label4;

     label2:
        $r3 = r0.<android.support.v7.widget.LinearSmoothScroller: android.graphics.PointF mTargetVector>;

        $f1 = $r3.<android.graphics.PointF: float y>;

        $b1 = $f1 cmpl 0.0F;

        if $b1 <= 0 goto label3;

        $b2 = 1;

        goto label4;

     label3:
        $b2 = -1;

     label4:
        return $b2;
    }

    protected void updateActionForInterimTarget(android.support.v7.widget.RecyclerView$SmoothScroller$Action)
    {
        android.support.v7.widget.LinearSmoothScroller r0;
        android.support.v7.widget.RecyclerView$SmoothScroller$Action r1;
        android.graphics.PointF r2;
        int i0, $i1, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i12;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        byte $b3, $b11;
        android.view.animation.LinearInterpolator $r3;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$SmoothScroller$Action;

        $i1 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int getTargetPosition()>();

        r2 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: android.graphics.PointF computeScrollVectorForPosition(int)>($i1);

        if r2 == null goto label1;

        $f0 = r2.<android.graphics.PointF: float x>;

        $b3 = $f0 cmpl 0.0F;

        if $b3 != 0 goto label2;

        $f11 = r2.<android.graphics.PointF: float y>;

        $b11 = $f11 cmpl 0.0F;

        if $b11 != 0 goto label2;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("LinearSmoothScroller", "To support smooth scrolling, you should override \nLayoutManager#computeScrollVectorForPosition.\nFalling back to instant scroll");

        i0 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int getTargetPosition()>();

        virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: void stop()>();

        virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: void instantScrollToPosition(int)>(i0);

        return;

     label2:
        virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: void normalize(android.graphics.PointF)>(r2);

        r0.<android.support.v7.widget.LinearSmoothScroller: android.graphics.PointF mTargetVector> = r2;

        $f1 = r2.<android.graphics.PointF: float x>;

        $f2 = 10000.0F * $f1;

        $i4 = (int) $f2;

        r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDx> = $i4;

        $f3 = r2.<android.graphics.PointF: float y>;

        $f4 = 10000.0F * $f3;

        $i5 = (int) $f4;

        r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDy> = $i5;

        i12 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int calculateTimeForScrolling(int)>(10000);

        $i6 = r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDx>;

        $f6 = (float) $i6;

        $f5 = $f6 * 1.2F;

        $i10 = (int) $f5;

        $i7 = r0.<android.support.v7.widget.LinearSmoothScroller: int mInterimTargetDy>;

        $f7 = (float) $i7;

        $f9 = $f7 * 1.2F;

        $i8 = (int) $f9;

        $f8 = (float) i12;

        $f10 = $f8 * 1.2F;

        $i9 = (int) $f10;

        $r3 = r0.<android.support.v7.widget.LinearSmoothScroller: android.view.animation.LinearInterpolator mLinearInterpolator>;

        virtualinvoke r1.<android.support.v7.widget.RecyclerView$SmoothScroller$Action: void update(int,int,int,android.view.animation.Interpolator)>($i10, $i8, $i9, $r3);

        return;
    }

    private int clampApplyScroll(int, int)
    {
        android.support.v7.widget.LinearSmoothScroller r0;
        int i0, i1, i2, $i3, i4;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = i0;

        i4 = i0 - i1;

        $i3 = i2 * i4;

        if $i3 > 0 goto label1;

        return 0;

     label1:
        return i4;
    }

    public int calculateDtToFit(int, int, int, int, int)
    {
        android.support.v7.widget.LinearSmoothScroller r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        tableswitch(i4)
        {
            case -1: goto label1;
            case 0: goto label3;
            case 1: goto label2;
            default: goto label5;
        };

     label1:
        $i7 = i2 - i0;

        return $i7;

     label2:
        $i8 = i3 - i1;

        return $i8;

     label3:
        i5 = i2 - i0;

        if i5 <= 0 goto label4;

        return i5;

     label4:
        i6 = i3 - i1;

        if i6 >= 0 goto label6;

        return i6;

     label5:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("snap preference should be one of the constants defined in SmoothScroller, starting with SNAP_");

        throw $r1;

     label6:
        return 0;
    }

    public int calculateDyToMakeVisible(android.view.View, int)
    {
        android.support.v7.widget.LinearSmoothScroller r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.support.v7.widget.RecyclerView$LayoutManager r2;
        android.support.v7.widget.RecyclerView$LayoutParams r3;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r4;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: android.support.v7.widget.RecyclerView$LayoutManager getLayoutManager()>();

        $z0 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.v7.widget.RecyclerView$LayoutParams) $r4;

        $i5 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$LayoutManager: int getDecoratedTop(android.view.View)>(r1);

        $i6 = r3.<android.support.v7.widget.RecyclerView$LayoutParams: int topMargin>;

        i1 = $i5 - $i6;

        $i7 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$LayoutManager: int getDecoratedBottom(android.view.View)>(r1);

        $i8 = r3.<android.support.v7.widget.RecyclerView$LayoutParams: int bottomMargin>;

        i2 = $i7 + $i8;

        i3 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        $i9 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$LayoutManager: int getHeight()>();

        $i11 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        i4 = $i9 - $i11;

        $i10 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int calculateDtToFit(int,int,int,int,int)>(i1, i2, i3, i4, i0);

        return $i10;
    }

    public int calculateDxToMakeVisible(android.view.View, int)
    {
        android.support.v7.widget.LinearSmoothScroller r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.support.v7.widget.RecyclerView$LayoutManager r2;
        android.support.v7.widget.RecyclerView$LayoutParams r3;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r4;

        r0 := @this: android.support.v7.widget.LinearSmoothScroller;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: android.support.v7.widget.RecyclerView$LayoutManager getLayoutManager()>();

        $z0 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.v7.widget.RecyclerView$LayoutParams) $r4;

        $i5 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$LayoutManager: int getDecoratedLeft(android.view.View)>(r1);

        $i6 = r3.<android.support.v7.widget.RecyclerView$LayoutParams: int leftMargin>;

        i1 = $i5 - $i6;

        $i7 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$LayoutManager: int getDecoratedRight(android.view.View)>(r1);

        $i8 = r3.<android.support.v7.widget.RecyclerView$LayoutParams: int rightMargin>;

        i2 = $i7 + $i8;

        i3 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        $i9 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$LayoutManager: int getWidth()>();

        $i11 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        i4 = $i9 - $i11;

        $i10 = virtualinvoke r0.<android.support.v7.widget.LinearSmoothScroller: int calculateDtToFit(int,int,int,int,int)>(i1, i2, i3, i4, i0);

        return $i10;
    }

    public abstract android.graphics.PointF computeScrollVectorForPosition(int);

    public static void <clinit>()
    {
        <android.support.v7.widget.LinearSmoothScroller: float TARGET_SEEK_EXTRA_SCROLL_RATIO> = 1.2F;

        <android.support.v7.widget.LinearSmoothScroller: int SNAP_TO_ANY> = 0;

        <android.support.v7.widget.LinearSmoothScroller: int SNAP_TO_END> = 1;

        <android.support.v7.widget.LinearSmoothScroller: int SNAP_TO_START> = -1;

        <android.support.v7.widget.LinearSmoothScroller: int TARGET_SEEK_SCROLL_DISTANCE_PX> = 10000;

        <android.support.v7.widget.LinearSmoothScroller: float MILLISECONDS_PER_INCH> = 25.0F;

        <android.support.v7.widget.LinearSmoothScroller: boolean DEBUG> = 0;

        <android.support.v7.widget.LinearSmoothScroller: java.lang.String TAG> = "LinearSmoothScroller";

        return;
    }
}
