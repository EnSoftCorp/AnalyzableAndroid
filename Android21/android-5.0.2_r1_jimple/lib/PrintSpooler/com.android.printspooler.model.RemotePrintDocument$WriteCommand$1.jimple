class com.android.printspooler.model.RemotePrintDocument$WriteCommand$1 extends android.os.AsyncTask
{
    final com.android.printspooler.model.RemotePrintDocument$WriteCommand this$0;

    void <init>(com.android.printspooler.model.RemotePrintDocument$WriteCommand)
    {
        com.android.printspooler.model.RemotePrintDocument$WriteCommand$1 r0;
        com.android.printspooler.model.RemotePrintDocument$WriteCommand r1;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument$WriteCommand$1;

        r1 := @parameter0: com.android.printspooler.model.RemotePrintDocument$WriteCommand;

        r0.<com.android.printspooler.model.RemotePrintDocument$WriteCommand$1: com.android.printspooler.model.RemotePrintDocument$WriteCommand this$0> = r1;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        return;
    }

    protected transient java.lang.Void doInBackground(java.lang.Void[])
    {
        com.android.printspooler.model.RemotePrintDocument$WriteCommand$1 r0;
        java.lang.Void[] r1;
        java.io.File r2;
        java.io.FileInputStream r3, $r12;
        java.io.FileOutputStream r4, $r13;
        android.os.ParcelFileDescriptor r5, r6;
        android.os.ParcelFileDescriptor[] r7;
        byte[] r8;
        int i0, $i1;
        java.lang.Throwable r9, $r23;
        com.android.printspooler.model.RemotePrintDocument$WriteCommand $r10, $r15, $r16, $r20, $r21, $r22, $r26, $r27;
        com.android.printspooler.model.MutexFileProvider $r11, $r24, $r25, $r28;
        java.io.FileDescriptor $r14;
        android.print.PageRange[] $r17;
        android.print.IPrintDocumentAdapter $r18;
        android.print.IWriteResultCallback $r19;
        java.lang.Exception $r29, r30;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument$WriteCommand$1;

        r1 := @parameter0: java.lang.Void[];

        r2 = null;

        r3 = null;

        r4 = null;

        r5 = null;

        r6 = null;

     label01:
        $r10 = r0.<com.android.printspooler.model.RemotePrintDocument$WriteCommand$1: com.android.printspooler.model.RemotePrintDocument$WriteCommand this$0>;

        $r11 = staticinvoke <com.android.printspooler.model.RemotePrintDocument$WriteCommand: com.android.printspooler.model.MutexFileProvider access$1800(com.android.printspooler.model.RemotePrintDocument$WriteCommand)>($r10);

        r2 = virtualinvoke $r11.<com.android.printspooler.model.MutexFileProvider: java.io.File acquireFile(com.android.printspooler.model.MutexFileProvider$OnReleaseRequestCallback)>(null);

        r7 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createPipe()>();

        r5 = r7[0];

        r6 = r7[1];

        $r12 = new java.io.FileInputStream;

        $r14 = virtualinvoke r5.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r12.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>($r14);

        r3 = $r12;

        $r13 = new java.io.FileOutputStream;

        specialinvoke $r13.<java.io.FileOutputStream: void <init>(java.io.File)>(r2);

        r4 = $r13;

        $r16 = r0.<com.android.printspooler.model.RemotePrintDocument$WriteCommand$1: com.android.printspooler.model.RemotePrintDocument$WriteCommand this$0>;

        $r18 = $r16.<com.android.printspooler.model.RemotePrintDocument$WriteCommand: android.print.IPrintDocumentAdapter mAdapter>;

        $r15 = r0.<com.android.printspooler.model.RemotePrintDocument$WriteCommand$1: com.android.printspooler.model.RemotePrintDocument$WriteCommand this$0>;

        $r17 = staticinvoke <com.android.printspooler.model.RemotePrintDocument$WriteCommand: android.print.PageRange[] access$1900(com.android.printspooler.model.RemotePrintDocument$WriteCommand)>($r15);

        $r20 = r0.<com.android.printspooler.model.RemotePrintDocument$WriteCommand$1: com.android.printspooler.model.RemotePrintDocument$WriteCommand this$0>;

        $r19 = staticinvoke <com.android.printspooler.model.RemotePrintDocument$WriteCommand: android.print.IWriteResultCallback access$2000(com.android.printspooler.model.RemotePrintDocument$WriteCommand)>($r20);

        $r21 = r0.<com.android.printspooler.model.RemotePrintDocument$WriteCommand$1: com.android.printspooler.model.RemotePrintDocument$WriteCommand this$0>;

        $i1 = $r21.<com.android.printspooler.model.RemotePrintDocument$WriteCommand: int mSequence>;

        interfaceinvoke $r18.<android.print.IPrintDocumentAdapter: void write(android.print.PageRange[],android.os.ParcelFileDescriptor,android.print.IWriteResultCallback,int)>($r17, r6, $r19, $i1);

        virtualinvoke r6.<android.os.ParcelFileDescriptor: void close()>();

        r6 = null;

        r8 = newarray (byte)[8192];

     label02:
        i0 = virtualinvoke r3.<java.io.InputStream: int read(byte[])>(r8);

        if i0 >= 0 goto label03;

        goto label04;

     label03:
        virtualinvoke r4.<java.io.OutputStream: void write(byte[],int,int)>(r8, 0, i0);

        goto label02;

     label04:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r6);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r5);

        if r2 == null goto label10;

        $r22 = r0.<com.android.printspooler.model.RemotePrintDocument$WriteCommand$1: com.android.printspooler.model.RemotePrintDocument$WriteCommand this$0>;

        $r24 = staticinvoke <com.android.printspooler.model.RemotePrintDocument$WriteCommand: com.android.printspooler.model.MutexFileProvider access$1800(com.android.printspooler.model.RemotePrintDocument$WriteCommand)>($r22);

        virtualinvoke $r24.<com.android.printspooler.model.MutexFileProvider: void releaseFile()>();

        goto label10;

     label05:
        $r29 := @caughtexception;

        r30 = $r29;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintDocument", "Error calling write()", r30);

     label06:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r6);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r5);

        if r2 == null goto label10;

        $r27 = r0.<com.android.printspooler.model.RemotePrintDocument$WriteCommand$1: com.android.printspooler.model.RemotePrintDocument$WriteCommand this$0>;

        $r28 = staticinvoke <com.android.printspooler.model.RemotePrintDocument$WriteCommand: com.android.printspooler.model.MutexFileProvider access$1800(com.android.printspooler.model.RemotePrintDocument$WriteCommand)>($r27);

        virtualinvoke $r28.<com.android.printspooler.model.MutexFileProvider: void releaseFile()>();

        goto label10;

     label07:
        $r23 := @caughtexception;

        r9 = $r23;

     label08:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r6);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r5);

        if r2 == null goto label09;

        $r26 = r0.<com.android.printspooler.model.RemotePrintDocument$WriteCommand$1: com.android.printspooler.model.RemotePrintDocument$WriteCommand this$0>;

        $r25 = staticinvoke <com.android.printspooler.model.RemotePrintDocument$WriteCommand: com.android.printspooler.model.MutexFileProvider access$1800(com.android.printspooler.model.RemotePrintDocument$WriteCommand)>($r26);

        virtualinvoke $r25.<com.android.printspooler.model.MutexFileProvider: void releaseFile()>();

     label09:
        throw r9;

     label10:
        return null;

        catch android.os.RemoteException from label01 to label04 with label05;
        catch java.io.IOException from label01 to label04 with label05;
        catch java.lang.Throwable from label01 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.android.printspooler.model.RemotePrintDocument$WriteCommand$1 r0;
        java.lang.Object[] r1;
        java.lang.Void[] $r2;
        java.lang.Void $r3;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument$WriteCommand$1;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (java.lang.Void[]) r1;

        $r3 = virtualinvoke r0.<com.android.printspooler.model.RemotePrintDocument$WriteCommand$1: java.lang.Void doInBackground(java.lang.Void[])>($r2);

        return $r3;
    }
}
