class com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver$2 extends android.os.AsyncTask
{
    final android.print.PrintJobId val$printJobId;
    final android.os.PowerManager$WakeLock val$wakeLock;
    final com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver this$0;

    void <init>(com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver, android.print.PrintJobId, android.os.PowerManager$WakeLock)
    {
        com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver$2 r0;
        com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver r1;
        android.print.PrintJobId r2;
        android.os.PowerManager$WakeLock r3;

        r0 := @this: com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver$2;

        r1 := @parameter0: com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver;

        r2 := @parameter1: android.print.PrintJobId;

        r3 := @parameter2: android.os.PowerManager$WakeLock;

        r0.<com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver$2: com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver this$0> = r1;

        r0.<com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver$2: android.print.PrintJobId val$printJobId> = r2;

        r0.<com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver$2: android.os.PowerManager$WakeLock val$wakeLock> = r3;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        return;
    }

    protected transient java.lang.Void doInBackground(java.lang.Void[])
    {
        com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver$2 r0;
        java.lang.Void[] r1;
        android.print.IPrintManager r2;
        java.lang.Throwable r3, $r7;
        android.os.IBinder $r4;
        android.print.PrintJobId $r5;
        int $i0;
        android.os.PowerManager$WakeLock $r6, $r8, $r10;
        android.os.RemoteException $r9, r11;

        r0 := @this: com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver$2;

        r1 := @parameter0: java.lang.Void[];

     label1:
        $r4 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("print");

        r2 = staticinvoke <android.print.IPrintManager$Stub: android.print.IPrintManager asInterface(android.os.IBinder)>($r4);

        $r5 = r0.<com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver$2: android.print.PrintJobId val$printJobId>;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        interfaceinvoke r2.<android.print.IPrintManager: void restartPrintJob(android.print.PrintJobId,int,int)>($r5, -2, $i0);

     label2:
        $r6 = r0.<com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver$2: android.os.PowerManager$WakeLock val$wakeLock>;

        virtualinvoke $r6.<android.os.PowerManager$WakeLock: void release()>();

        goto label7;

     label3:
        $r9 := @caughtexception;

        r11 = $r9;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationBroadcastReceiver", "Error requesting print job restart", r11);

     label4:
        $r10 = r0.<com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver$2: android.os.PowerManager$WakeLock val$wakeLock>;

        virtualinvoke $r10.<android.os.PowerManager$WakeLock: void release()>();

        goto label7;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

     label6:
        $r8 = r0.<com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver$2: android.os.PowerManager$WakeLock val$wakeLock>;

        virtualinvoke $r8.<android.os.PowerManager$WakeLock: void release()>();

        throw r3;

     label7:
        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver$2 r0;
        java.lang.Object[] r1;
        java.lang.Void[] $r2;
        java.lang.Void $r3;

        r0 := @this: com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver$2;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (java.lang.Void[]) r1;

        $r3 = virtualinvoke r0.<com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver$2: java.lang.Void doInBackground(java.lang.Void[])>($r2);

        return $r3;
    }
}
