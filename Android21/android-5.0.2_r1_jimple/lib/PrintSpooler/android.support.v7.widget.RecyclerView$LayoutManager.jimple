public abstract class android.support.v7.widget.RecyclerView$LayoutManager extends java.lang.Object
{
    android.support.v7.widget.ChildHelper mChildHelper;
    android.support.v7.widget.RecyclerView mRecyclerView;
    android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller;
    private boolean mRequestedSimpleAnimations;

    public void <init>()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean mRequestedSimpleAnimations> = 0;

        return;
    }

    void setRecyclerView(android.support.v7.widget.RecyclerView)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView r1;
        android.support.v7.widget.ChildHelper $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView;

        if r1 != null goto label1;

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView> = null;

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper> = null;

        goto label2;

     label1:
        r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView> = r1;

        $r2 = r1.<android.support.v7.widget.RecyclerView: android.support.v7.widget.ChildHelper mChildHelper>;

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper> = $r2;

     label2:
        return;
    }

    public void requestLayout()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1, $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView: void requestLayout()>();

     label1:
        return;
    }

    public void assertInLayoutOrScroll(java.lang.String)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        java.lang.String r1;
        android.support.v7.widget.RecyclerView $r2, $r3;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r2 == null goto label1;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r3.<android.support.v7.widget.RecyclerView: void assertInLayoutOrScroll(java.lang.String)>(r1);

     label1:
        return;
    }

    public void assertNotInLayoutOrScroll(java.lang.String)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        java.lang.String r1;
        android.support.v7.widget.RecyclerView $r2, $r3;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r2 == null goto label1;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r3.<android.support.v7.widget.RecyclerView: void assertNotInLayoutOrScroll(java.lang.String)>(r1);

     label1:
        return;
    }

    public boolean supportsPredictiveItemAnimations()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        return 0;
    }

    public void onAttachedToWindow(android.support.v7.widget.RecyclerView)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView;

        return;
    }

    public void onDetachedFromWindow(android.support.v7.widget.RecyclerView)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView;

        return;
    }

    public void onDetachedFromWindow(android.support.v7.widget.RecyclerView, android.support.v7.widget.RecyclerView$Recycler)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView r1;
        android.support.v7.widget.RecyclerView$Recycler r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$Recycler;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void onDetachedFromWindow(android.support.v7.widget.RecyclerView)>(r1);

        return;
    }

    public boolean getClipToPadding()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z0 = staticinvoke <android.support.v7.widget.RecyclerView: boolean access$4400(android.support.v7.widget.RecyclerView)>($r2);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        android.support.v7.widget.RecyclerView$State r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "You must override onLayoutChildren(Recycler recycler, State state) ");

        return;
    }

    public abstract android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams();

    public boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$LayoutParams r1;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$LayoutParams;

        if r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0, $z1;
        android.support.v7.widget.RecyclerView$LayoutParams $r2, $r3, $r5, $r6;
        android.view.ViewGroup$MarginLayoutParams $r4;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.support.v7.widget.RecyclerView$LayoutParams;

        if $z0 == 0 goto label1;

        $r5 = new android.support.v7.widget.RecyclerView$LayoutParams;

        $r6 = (android.support.v7.widget.RecyclerView$LayoutParams) r1;

        specialinvoke $r5.<android.support.v7.widget.RecyclerView$LayoutParams: void <init>(android.support.v7.widget.RecyclerView$LayoutParams)>($r6);

        return $r5;

     label1:
        $z1 = r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z1 == 0 goto label2;

        $r3 = new android.support.v7.widget.RecyclerView$LayoutParams;

        $r4 = (android.view.ViewGroup$MarginLayoutParams) r1;

        specialinvoke $r3.<android.support.v7.widget.RecyclerView$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($r4);

        return $r3;

     label2:
        $r2 = new android.support.v7.widget.RecyclerView$LayoutParams;

        specialinvoke $r2.<android.support.v7.widget.RecyclerView$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    public android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context, android.util.AttributeSet)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.support.v7.widget.RecyclerView$LayoutParams $r3;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        $r3 = new android.support.v7.widget.RecyclerView$LayoutParams;

        specialinvoke $r3.<android.support.v7.widget.RecyclerView$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        return $r3;
    }

    public int scrollHorizontallyBy(int, android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int i0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        android.support.v7.widget.RecyclerView$State r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.v7.widget.RecyclerView$Recycler;

        r2 := @parameter2: android.support.v7.widget.RecyclerView$State;

        return 0;
    }

    public int scrollVerticallyBy(int, android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int i0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        android.support.v7.widget.RecyclerView$State r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.v7.widget.RecyclerView$Recycler;

        r2 := @parameter2: android.support.v7.widget.RecyclerView$State;

        return 0;
    }

    public boolean canScrollHorizontally()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        return 0;
    }

    public boolean canScrollVertically()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        return 0;
    }

    public void scrollToPosition(int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        return;
    }

    public void smoothScrollToPosition(android.support.v7.widget.RecyclerView, android.support.v7.widget.RecyclerView$State, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView r1;
        android.support.v7.widget.RecyclerView$State r2;
        int i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        i0 := @parameter2: int;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecyclerView", "You must override smoothScrollToPosition to support smooth scrolling");

        return;
    }

    public void startSmoothScroll(android.support.v7.widget.RecyclerView$SmoothScroller)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$SmoothScroller r1, $r2, $r4, $r5, $r6, $r7;
        android.support.v7.widget.RecyclerView $r3;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$SmoothScroller;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        if $r2 == null goto label1;

        $r5 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        if r1 == $r5 goto label1;

        $r6 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        $z0 = virtualinvoke $r6.<android.support.v7.widget.RecyclerView$SmoothScroller: boolean isRunning()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        virtualinvoke $r7.<android.support.v7.widget.RecyclerView$SmoothScroller: void stop()>();

     label1:
        r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller> = r1;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r4.<android.support.v7.widget.RecyclerView$SmoothScroller: void start(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$LayoutManager)>($r3, r0);

        return;
    }

    public boolean isSmoothScrolling()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$SmoothScroller $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$SmoothScroller: boolean isRunning()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public int getLayoutDirection()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>($r1);

        return $i0;
    }

    public void endAnimation(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.support.v7.widget.RecyclerView $r2, $r4;
        android.support.v7.widget.RecyclerView$ItemAnimator $r3, $r5;
        android.support.v7.widget.RecyclerView$ViewHolder $r6;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r3 = $r2.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        if $r3 == null goto label1;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r5 = $r4.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ItemAnimator mItemAnimator>;

        $r6 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        virtualinvoke $r5.<android.support.v7.widget.RecyclerView$ItemAnimator: void endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)>($r6);

     label1:
        return;
    }

    public void addDisappearingView(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void addDisappearingView(android.view.View,int)>(r1, -1);

        return;
    }

    public void addDisappearingView(android.view.View, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        specialinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void addViewInt(android.view.View,int,boolean)>(r1, i0, 1);

        return;
    }

    public void addView(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void addView(android.view.View,int)>(r1, -1);

        return;
    }

    public void addView(android.view.View, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        specialinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void addViewInt(android.view.View,int,boolean)>(r1, i0, 0);

        return;
    }

    private void addViewInt(android.view.View, int, boolean)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0, $r16;
        android.view.View r1, $r8;
        int i0, i1, $i2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.support.v7.widget.RecyclerView$ViewHolder r2;
        android.support.v7.widget.RecyclerView$LayoutParams r3;
        android.support.v7.widget.RecyclerView $r4, $r11, $r17, $r20, $r25;
        android.view.ViewGroup$LayoutParams $r5, $r7;
        android.support.v7.widget.ChildHelper $r6, $r10, $r15, $r23;
        android.view.ViewParent $r9;
        android.support.v7.widget.RecyclerView$SmoothScroller $r12, $r13, $r14;
        java.lang.StringBuilder $r18, $r21, $r24;
        java.lang.IllegalStateException $r19;
        java.lang.String $r22;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        if z0 != 0 goto label01;

        $z6 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z6 == 0 goto label02;

     label01:
        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        staticinvoke <android.support.v7.widget.RecyclerView: void access$4500(android.support.v7.widget.RecyclerView,android.view.View)>($r4, r1);

        goto label03;

     label02:
        $r25 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        staticinvoke <android.support.v7.widget.RecyclerView: void access$4600(android.support.v7.widget.RecyclerView,android.view.View)>($r25, r1);

     label03:
        $r5 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.v7.widget.RecyclerView$LayoutParams) $r5;

        $z1 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$ViewHolder: boolean wasReturnedFromScrap()>();

        if $z1 != 0 goto label04;

        $z4 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isScrap()>();

        if $z4 == 0 goto label07;

     label04:
        $z2 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isScrap()>();

        if $z2 == 0 goto label05;

        virtualinvoke r2.<android.support.v7.widget.RecyclerView$ViewHolder: void unScrap()>();

        goto label06;

     label05:
        virtualinvoke r2.<android.support.v7.widget.RecyclerView$ViewHolder: void clearReturnedFromScrapFlag()>();

     label06:
        $r6 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        $r7 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        virtualinvoke $r6.<android.support.v7.widget.ChildHelper: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)>(r1, i0, $r7, 0);

        goto label12;

     label07:
        $r9 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        $r11 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r9 != $r11 goto label11;

        $r15 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        i1 = virtualinvoke $r15.<android.support.v7.widget.ChildHelper: int indexOfChild(android.view.View)>(r1);

        if i0 != -1 goto label08;

        $r23 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        i0 = virtualinvoke $r23.<android.support.v7.widget.ChildHelper: int getChildCount()>();

     label08:
        if i1 != -1 goto label09;

        $r19 = new java.lang.IllegalStateException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added View has RecyclerView as parent but view is not a real child. Unfiltered index:");

        $r20 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $i2 = virtualinvoke $r20.<android.support.v7.widget.RecyclerView: int indexOfChild(android.view.View)>(r1);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r22);

        throw $r19;

     label09:
        if i1 == i0 goto label10;

        $r17 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r16 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$LayoutManager access$1100(android.support.v7.widget.RecyclerView)>($r17);

        virtualinvoke $r16.<android.support.v7.widget.RecyclerView$LayoutManager: void moveView(int,int)>(i1, i0);

     label10:
        goto label12;

     label11:
        $r10 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        virtualinvoke $r10.<android.support.v7.widget.ChildHelper: void addView(android.view.View,int,boolean)>(r1, i0, 0);

        r3.<android.support.v7.widget.RecyclerView$LayoutParams: boolean mInsetsDirty> = 1;

        $r13 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        if $r13 == null goto label12;

        $r12 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        $z5 = virtualinvoke $r12.<android.support.v7.widget.RecyclerView$SmoothScroller: boolean isRunning()>();

        if $z5 == 0 goto label12;

        $r14 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        virtualinvoke $r14.<android.support.v7.widget.RecyclerView$SmoothScroller: void onChildAttachedToWindow(android.view.View)>(r1);

     label12:
        $z3 = r3.<android.support.v7.widget.RecyclerView$LayoutParams: boolean mPendingInvalidate>;

        if $z3 == 0 goto label13;

        $r8 = r2.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        virtualinvoke $r8.<android.view.View: void invalidate()>();

        r3.<android.support.v7.widget.RecyclerView$LayoutParams: boolean mPendingInvalidate> = 0;

     label13:
        return;
    }

    public void removeView(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.support.v7.widget.ChildHelper $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        virtualinvoke $r2.<android.support.v7.widget.ChildHelper: void removeView(android.view.View)>(r1);

        return;
    }

    public void removeViewAt(int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int i0;
        android.view.View r1;
        android.support.v7.widget.ChildHelper $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i0);

        if r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        virtualinvoke $r2.<android.support.v7.widget.ChildHelper: void removeViewAt(int)>(i0);

     label1:
        return;
    }

    public void removeAllViews()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int i0, i1;
        android.support.v7.widget.ChildHelper $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getChildCount()>();

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label2;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i1);

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        virtualinvoke $r2.<android.support.v7.widget.ChildHelper: void removeViewAt(int)>(i1);

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    public int getPosition(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v7.widget.RecyclerView$LayoutParams $r3;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v7.widget.RecyclerView$LayoutParams) $r2;

        $i0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$LayoutParams: int getViewPosition()>();

        return $i0;
    }

    public int getItemViewType(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.support.v7.widget.RecyclerView$ViewHolder $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        $i0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView$ViewHolder: int getItemViewType()>();

        return $i0;
    }

    public android.view.View findViewByPosition(int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int i0, i1, i2, $i3;
        android.view.View r1;
        android.support.v7.widget.RecyclerView$ViewHolder r2;
        boolean $z0, $z1, $z2;
        android.support.v7.widget.RecyclerView $r3;
        android.support.v7.widget.RecyclerView$State $r4;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getChildCount()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label5;

        r1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i2);

        r2 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        if r2 != null goto label2;

        goto label4;

     label2:
        $i3 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$ViewHolder: int getPosition()>();

        if $i3 != i0 goto label4;

        $z0 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 != 0 goto label4;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $z1 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView$State: boolean isPreLayout()>();

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r2.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z2 != 0 goto label4;

     label3:
        return r1;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        return null;
    }

    public void detachView(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0;
        android.support.v7.widget.ChildHelper $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        i0 = virtualinvoke $r2.<android.support.v7.widget.ChildHelper: int indexOfChild(android.view.View)>(r1);

        if i0 < 0 goto label1;

        specialinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void detachViewInternal(int,android.view.View)>(i0, r1);

     label1:
        return;
    }

    public void detachViewAt(int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int i0;
        android.view.View $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i0);

        specialinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void detachViewInternal(int,android.view.View)>(i0, $r1);

        return;
    }

    private void detachViewInternal(int, android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int i0;
        android.view.View r1;
        android.support.v7.widget.ChildHelper $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        virtualinvoke $r2.<android.support.v7.widget.ChildHelper: void detachViewFromParent(int)>(i0);

        return;
    }

    public void attachView(android.view.View, int, android.support.v7.widget.RecyclerView$LayoutParams)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0;
        android.support.v7.widget.RecyclerView$LayoutParams r2;
        android.support.v7.widget.RecyclerView$ViewHolder r3;
        boolean $z0, $z1;
        android.support.v7.widget.RecyclerView $r4, $r6;
        android.support.v7.widget.ChildHelper $r5;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.support.v7.widget.RecyclerView$LayoutParams;

        r3 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        $z0 = virtualinvoke r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        staticinvoke <android.support.v7.widget.RecyclerView: void access$4500(android.support.v7.widget.RecyclerView,android.view.View)>($r6, r1);

        goto label2;

     label1:
        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        staticinvoke <android.support.v7.widget.RecyclerView: void access$4600(android.support.v7.widget.RecyclerView,android.view.View)>($r4, r1);

     label2:
        $r5 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        $z1 = virtualinvoke r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        virtualinvoke $r5.<android.support.v7.widget.ChildHelper: void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)>(r1, i0, r2, $z1);

        return;
    }

    public void attachView(android.view.View, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v7.widget.RecyclerView$LayoutParams $r3;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v7.widget.RecyclerView$LayoutParams) $r2;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void attachView(android.view.View,int,android.support.v7.widget.RecyclerView$LayoutParams)>(r1, i0, $r3);

        return;
    }

    public void attachView(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void attachView(android.view.View,int)>(r1, -1);

        return;
    }

    public void removeDetachedView(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.support.v7.widget.RecyclerView $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        staticinvoke <android.support.v7.widget.RecyclerView: void access$4700(android.support.v7.widget.RecyclerView,android.view.View,boolean)>($r2, r1, 0);

        return;
    }

    public void moveView(int, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int i0, i1;
        android.view.View r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i0);

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot move a child from non-existing index:");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void detachViewAt(int)>(i0);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void attachView(android.view.View,int)>(r1, i1);

        return;
    }

    public void detachAndScrapView(android.view.View, android.support.v7.widget.RecyclerView$Recycler)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.support.v7.widget.RecyclerView$Recycler r2;
        int i0;
        android.support.v7.widget.ChildHelper $r3;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$Recycler;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        i0 = virtualinvoke $r3.<android.support.v7.widget.ChildHelper: int indexOfChild(android.view.View)>(r1);

        specialinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void scrapOrRecycleView(android.support.v7.widget.RecyclerView$Recycler,int,android.view.View)>(r2, i0, r1);

        return;
    }

    public void detachAndScrapViewAt(int, android.support.v7.widget.RecyclerView$Recycler)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int i0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        android.view.View r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.v7.widget.RecyclerView$Recycler;

        r2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i0);

        specialinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void scrapOrRecycleView(android.support.v7.widget.RecyclerView$Recycler,int,android.view.View)>(r1, i0, r2);

        return;
    }

    public void removeAndRecycleView(android.view.View, android.support.v7.widget.RecyclerView$Recycler)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.support.v7.widget.RecyclerView$Recycler r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$Recycler;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void removeView(android.view.View)>(r1);

        virtualinvoke r2.<android.support.v7.widget.RecyclerView$Recycler: void recycleView(android.view.View)>(r1);

        return;
    }

    public void removeAndRecycleViewAt(int, android.support.v7.widget.RecyclerView$Recycler)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int i0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        android.view.View r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.support.v7.widget.RecyclerView$Recycler;

        r2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i0);

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void removeViewAt(int)>(i0);

        virtualinvoke r1.<android.support.v7.widget.RecyclerView$Recycler: void recycleView(android.view.View)>(r2);

        return;
    }

    public int getChildCount()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.ChildHelper $r1, $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        $i0 = virtualinvoke $r2.<android.support.v7.widget.ChildHelper: int getChildCount()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public android.view.View getChildAt(int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int i0;
        android.support.v7.widget.ChildHelper $r1, $r2;
        android.view.View $r3;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        $r3 = virtualinvoke $r2.<android.support.v7.widget.ChildHelper: android.view.View getChildAt(int)>(i0);

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public int getWidth()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1, $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $i0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: int getWidth()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public int getHeight()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1, $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $i0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: int getHeight()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public int getPaddingLeft()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1, $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $i0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: int getPaddingLeft()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public int getPaddingTop()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1, $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $i0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: int getPaddingTop()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public int getPaddingRight()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1, $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $i0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: int getPaddingRight()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public int getPaddingBottom()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1, $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $i0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: int getPaddingBottom()>();

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public int getPaddingStart()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1, $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getPaddingStart(android.view.View)>($r2);

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public int getPaddingEnd()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1, $r2;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getPaddingEnd(android.view.View)>($r2);

        goto label2;

     label1:
        $i0 = 0;

     label2:
        return $i0;
    }

    public boolean isFocused()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: boolean isFocused()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean hasFocus()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.RecyclerView: boolean hasFocus()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public android.view.View getFocusedChild()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.support.v7.widget.RecyclerView $r2, $r3;
        android.support.v7.widget.ChildHelper $r4;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        r1 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView: android.view.View getFocusedChild()>();

        if r1 == null goto label2;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.ChildHelper mChildHelper>;

        $z0 = virtualinvoke $r4.<android.support.v7.widget.ChildHelper: boolean isHidden(android.view.View)>(r1);

        if $z0 == 0 goto label3;

     label2:
        return null;

     label3:
        return r1;
    }

    public int getItemCount()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Adapter r1, $r4;
        android.support.v7.widget.RecyclerView $r2, $r3;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r2 == null goto label1;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r4 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter getAdapter()>();

        goto label2;

     label1:
        $r4 = null;

     label2:
        r1 = $r4;

        if r1 == null goto label3;

        $i0 = virtualinvoke r1.<android.support.v7.widget.RecyclerView$Adapter: int getItemCount()>();

        goto label4;

     label3:
        $i0 = 0;

     label4:
        return $i0;
    }

    public void offsetChildrenHorizontal(int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int i0;
        android.support.v7.widget.RecyclerView $r1, $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView: void offsetChildrenHorizontal(int)>(i0);

     label1:
        return;
    }

    public void offsetChildrenVertical(int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int i0;
        android.support.v7.widget.RecyclerView $r1, $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView: void offsetChildrenVertical(int)>(i0);

     label1:
        return;
    }

    public void ignoreView(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.support.v7.widget.RecyclerView$ViewHolder r2;
        android.view.ViewParent $r3;
        android.support.v7.widget.RecyclerView $r4, $r6, $r7;
        java.lang.IllegalArgumentException $r5;
        int $i0;
        android.support.v7.widget.RecyclerView$State $r8;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r3 != $r4 goto label1;

        $r6 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $i0 = virtualinvoke $r6.<android.support.v7.widget.RecyclerView: int indexOfChild(android.view.View)>(r1);

        if $i0 != -1 goto label2;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("View should be fully attached to be ignored");

        throw $r5;

     label2:
        r2 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        virtualinvoke r2.<android.support.v7.widget.RecyclerView$ViewHolder: void addFlags(int)>(128);

        $r7 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r8 = $r7.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        virtualinvoke $r8.<android.support.v7.widget.RecyclerView$State: void onViewIgnored(android.support.v7.widget.RecyclerView$ViewHolder)>(r2);

        return;
    }

    public void stopIgnoringView(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.support.v7.widget.RecyclerView$ViewHolder r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        r2 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r1);

        virtualinvoke r2.<android.support.v7.widget.RecyclerView$ViewHolder: void stopIgnoring()>();

        virtualinvoke r2.<android.support.v7.widget.RecyclerView$ViewHolder: void resetInternal()>();

        virtualinvoke r2.<android.support.v7.widget.RecyclerView$ViewHolder: void addFlags(int)>(4);

        return;
    }

    public void detachAndScrapAttachedViews(android.support.v7.widget.RecyclerView$Recycler)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        int i0, i1;
        android.view.View r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getChildCount()>();

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label2;

        r2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i1);

        specialinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void scrapOrRecycleView(android.support.v7.widget.RecyclerView$Recycler,int,android.view.View)>(r1, i1, r2);

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    private void scrapOrRecycleView(android.support.v7.widget.RecyclerView$Recycler, int, android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        int i0;
        android.view.View r2;
        android.support.v7.widget.RecyclerView$ViewHolder r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.support.v7.widget.RecyclerView $r4;
        android.support.v7.widget.RecyclerView$Adapter $r5;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.View;

        r3 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r2);

        $z0 = virtualinvoke r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = virtualinvoke r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isInvalid()>();

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isRemoved()>();

        if $z2 != 0 goto label2;

        $z3 = virtualinvoke r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean isChanged()>();

        if $z3 != 0 goto label2;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r5 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter access$2200(android.support.v7.widget.RecyclerView)>($r4);

        $z4 = virtualinvoke $r5.<android.support.v7.widget.RecyclerView$Adapter: boolean hasStableIds()>();

        if $z4 != 0 goto label2;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void removeViewAt(int)>(i0);

        virtualinvoke r1.<android.support.v7.widget.RecyclerView$Recycler: void recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder)>(r3);

        goto label3;

     label2:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void detachViewAt(int)>(i0);

        virtualinvoke r1.<android.support.v7.widget.RecyclerView$Recycler: void scrapView(android.view.View)>(r2);

     label3:
        return;
    }

    void removeAndRecycleScrapInt(android.support.v7.widget.RecyclerView$Recycler, boolean)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        boolean z0, $z1;
        int i0, i1;
        android.view.View r2;
        android.support.v7.widget.RecyclerView $r3, $r5;
        android.support.v7.widget.RecyclerView$ViewHolder $r4;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        z0 := @parameter1: boolean;

        i0 = virtualinvoke r1.<android.support.v7.widget.RecyclerView$Recycler: int getScrapCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        r2 = virtualinvoke r1.<android.support.v7.widget.RecyclerView$Recycler: android.view.View getScrapViewAt(int)>(i1);

        $r4 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r2);

        $z1 = virtualinvoke $r4.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z1 == 0 goto label2;

        goto label4;

     label2:
        if z0 == 0 goto label3;

        $r5 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        staticinvoke <android.support.v7.widget.RecyclerView: void access$4800(android.support.v7.widget.RecyclerView,android.view.View,boolean)>($r5, r2, 0);

     label3:
        virtualinvoke r1.<android.support.v7.widget.RecyclerView$Recycler: void quickRecycleScrapView(android.view.View)>(r2);

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        virtualinvoke r1.<android.support.v7.widget.RecyclerView$Recycler: void clearScrap()>();

        if z0 == 0 goto label6;

        if i0 <= 0 goto label6;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r3.<android.support.v7.widget.RecyclerView: void invalidate()>();

     label6:
        return;
    }

    public void measureChild(android.view.View, int, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23;
        android.support.v7.widget.RecyclerView$LayoutParams r2;
        android.graphics.Rect r3;
        android.view.ViewGroup$LayoutParams $r4;
        android.support.v7.widget.RecyclerView $r5;
        boolean $z0, $z1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.v7.widget.RecyclerView$LayoutParams) $r4;

        $r5 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        r3 = virtualinvoke $r5.<android.support.v7.widget.RecyclerView: android.graphics.Rect getItemDecorInsetsForChild(android.view.View)>(r1);

        $i5 = r3.<android.graphics.Rect: int left>;

        $i4 = r3.<android.graphics.Rect: int right>;

        $i6 = $i5 + $i4;

        i22 = i0 + $i6;

        $i8 = r3.<android.graphics.Rect: int top>;

        $i7 = r3.<android.graphics.Rect: int bottom>;

        $i10 = $i8 + $i7;

        i23 = i1 + $i10;

        $i9 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getWidth()>();

        $i12 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        $i11 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        $i14 = $i12 + $i11;

        $i13 = $i14 + i22;

        $i15 = r2.<android.support.v7.widget.RecyclerView$LayoutParams: int width>;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        i2 = staticinvoke <android.support.v7.widget.RecyclerView$LayoutManager: int getChildMeasureSpec(int,int,int,boolean)>($i9, $i13, $i15, $z0);

        $i16 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getHeight()>();

        $i18 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        $i17 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        $i20 = $i18 + $i17;

        $i19 = $i20 + i23;

        $i21 = r2.<android.support.v7.widget.RecyclerView$LayoutParams: int height>;

        $z1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        i3 = staticinvoke <android.support.v7.widget.RecyclerView$LayoutManager: int getChildMeasureSpec(int,int,int,boolean)>($i16, $i19, $i21, $z1);

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i2, i3);

        return;
    }

    public void measureChildWithMargins(android.view.View, int, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i30, i31;
        android.support.v7.widget.RecyclerView$LayoutParams r2;
        android.graphics.Rect r3;
        android.view.ViewGroup$LayoutParams $r4;
        android.support.v7.widget.RecyclerView $r5;
        boolean $z0, $z1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.v7.widget.RecyclerView$LayoutParams) $r4;

        $r5 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        r3 = virtualinvoke $r5.<android.support.v7.widget.RecyclerView: android.graphics.Rect getItemDecorInsetsForChild(android.view.View)>(r1);

        $i5 = r3.<android.graphics.Rect: int left>;

        $i4 = r3.<android.graphics.Rect: int right>;

        $i6 = $i5 + $i4;

        i30 = i0 + $i6;

        $i8 = r3.<android.graphics.Rect: int top>;

        $i7 = r3.<android.graphics.Rect: int bottom>;

        $i10 = $i8 + $i7;

        i31 = i1 + $i10;

        $i9 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getWidth()>();

        $i12 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        $i11 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        $i13 = $i12 + $i11;

        $i14 = r2.<android.support.v7.widget.RecyclerView$LayoutParams: int leftMargin>;

        $i15 = $i13 + $i14;

        $i16 = r2.<android.support.v7.widget.RecyclerView$LayoutParams: int rightMargin>;

        $i18 = $i15 + $i16;

        $i17 = $i18 + i30;

        $i19 = r2.<android.support.v7.widget.RecyclerView$LayoutParams: int width>;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        i2 = staticinvoke <android.support.v7.widget.RecyclerView$LayoutManager: int getChildMeasureSpec(int,int,int,boolean)>($i9, $i17, $i19, $z0);

        $i20 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getHeight()>();

        $i22 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        $i21 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        $i26 = $i22 + $i21;

        $i25 = r2.<android.support.v7.widget.RecyclerView$LayoutParams: int topMargin>;

        $i24 = $i26 + $i25;

        $i23 = r2.<android.support.v7.widget.RecyclerView$LayoutParams: int bottomMargin>;

        $i28 = $i24 + $i23;

        $i29 = $i28 + i31;

        $i27 = r2.<android.support.v7.widget.RecyclerView$LayoutParams: int height>;

        $z1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        i3 = staticinvoke <android.support.v7.widget.RecyclerView$LayoutManager: int getChildMeasureSpec(int,int,int,boolean)>($i20, $i29, $i27, $z1);

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i2, i3);

        return;
    }

    public static int getChildMeasureSpec(int, int, int, boolean)
    {
        int i0, i1, i2, i3, i4, i5, $i6, $i7;
        boolean z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        $i6 = i0 - i1;

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i6);

        i4 = 0;

        i5 = 0;

        if z0 == 0 goto label2;

        if i2 < 0 goto label1;

        i4 = i2;

        i5 = 1073741824;

        goto label5;

     label1:
        i4 = 0;

        i5 = 0;

        goto label5;

     label2:
        if i2 < 0 goto label3;

        i4 = i2;

        i5 = 1073741824;

        goto label5;

     label3:
        if i2 != -1 goto label4;

        i4 = i3;

        i5 = 1073741824;

        goto label5;

     label4:
        if i2 != -2 goto label5;

        i4 = i3;

        i5 = -2147483648;

     label5:
        $i7 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i4, i5);

        return $i7;
    }

    public int getDecoratedMeasuredWidth(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.graphics.Rect r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.v7.widget.RecyclerView$LayoutParams $r4;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (android.support.v7.widget.RecyclerView$LayoutParams) $r3;

        r2 = $r4.<android.support.v7.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i0 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $i1 = r2.<android.graphics.Rect: int left>;

        $i3 = $i0 + $i1;

        $i2 = r2.<android.graphics.Rect: int right>;

        $i4 = $i3 + $i2;

        return $i4;
    }

    public int getDecoratedMeasuredHeight(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.graphics.Rect r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.v7.widget.RecyclerView$LayoutParams $r4;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (android.support.v7.widget.RecyclerView$LayoutParams) $r3;

        r2 = $r4.<android.support.v7.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i0 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i1 = r2.<android.graphics.Rect: int top>;

        $i3 = $i0 + $i1;

        $i2 = r2.<android.graphics.Rect: int bottom>;

        $i4 = $i3 + $i2;

        return $i4;
    }

    public void layoutDecorated(android.view.View, int, int, int, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.graphics.Rect r2;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.v7.widget.RecyclerView$LayoutParams $r4;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (android.support.v7.widget.RecyclerView$LayoutParams) $r3;

        r2 = $r4.<android.support.v7.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i4 = r2.<android.graphics.Rect: int left>;

        $i11 = i0 + $i4;

        $i5 = r2.<android.graphics.Rect: int top>;

        $i10 = i1 + $i5;

        $i6 = r2.<android.graphics.Rect: int right>;

        $i9 = i2 - $i6;

        $i7 = r2.<android.graphics.Rect: int bottom>;

        $i8 = i3 - $i7;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>($i11, $i10, $i9, $i8);

        return;
    }

    public int getDecoratedLeft(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int $i0, $i1, $i2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getLeftDecorationWidth(android.view.View)>(r1);

        $i2 = $i0 - $i1;

        return $i2;
    }

    public int getDecoratedTop(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int $i0, $i1, $i2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getTopDecorationHeight(android.view.View)>(r1);

        $i2 = $i0 - $i1;

        return $i2;
    }

    public int getDecoratedRight(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int $i0, $i1, $i2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getRight()>();

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getRightDecorationWidth(android.view.View)>(r1);

        $i2 = $i0 + $i1;

        return $i2;
    }

    public int getDecoratedBottom(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int $i0, $i1, $i2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getBottom()>();

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getBottomDecorationHeight(android.view.View)>(r1);

        $i2 = $i0 + $i1;

        return $i2;
    }

    public void calculateItemDecorationsForChild(android.view.View, android.graphics.Rect)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.graphics.Rect r2, r3;
        android.support.v7.widget.RecyclerView $r4, $r5;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Rect;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r4 != null goto label1;

        virtualinvoke r2.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

        return;

     label1:
        $r5 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        r3 = virtualinvoke $r5.<android.support.v7.widget.RecyclerView: android.graphics.Rect getItemDecorInsetsForChild(android.view.View)>(r1);

        virtualinvoke r2.<android.graphics.Rect: void set(android.graphics.Rect)>(r3);

        return;
    }

    public int getTopDecorationHeight(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v7.widget.RecyclerView$LayoutParams $r3;
        android.graphics.Rect $r4;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v7.widget.RecyclerView$LayoutParams) $r2;

        $r4 = $r3.<android.support.v7.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i0 = $r4.<android.graphics.Rect: int top>;

        return $i0;
    }

    public int getBottomDecorationHeight(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v7.widget.RecyclerView$LayoutParams $r3;
        android.graphics.Rect $r4;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v7.widget.RecyclerView$LayoutParams) $r2;

        $r4 = $r3.<android.support.v7.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i0 = $r4.<android.graphics.Rect: int bottom>;

        return $i0;
    }

    public int getLeftDecorationWidth(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v7.widget.RecyclerView$LayoutParams $r3;
        android.graphics.Rect $r4;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v7.widget.RecyclerView$LayoutParams) $r2;

        $r4 = $r3.<android.support.v7.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i0 = $r4.<android.graphics.Rect: int left>;

        return $i0;
    }

    public int getRightDecorationWidth(android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v7.widget.RecyclerView$LayoutParams $r3;
        android.graphics.Rect $r4;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v7.widget.RecyclerView$LayoutParams) $r2;

        $r4 = $r3.<android.support.v7.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets>;

        $i0 = $r4.<android.graphics.Rect: int right>;

        return $i0;
    }

    public android.view.View onFocusSearchFailed(android.view.View, int, android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0;
        android.support.v7.widget.RecyclerView$Recycler r2;
        android.support.v7.widget.RecyclerView$State r3;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.support.v7.widget.RecyclerView$Recycler;

        r3 := @parameter3: android.support.v7.widget.RecyclerView$State;

        return null;
    }

    public android.view.View onInterceptFocusSearch(android.view.View, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        return null;
    }

    public boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView, android.view.View, android.graphics.Rect, boolean)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView r1;
        android.view.View r2;
        android.graphics.Rect r3;
        boolean z0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.graphics.Rect;

        z0 := @parameter3: boolean;

        i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        $i14 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getWidth()>();

        $i16 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        i2 = $i14 - $i16;

        $i15 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getHeight()>();

        $i18 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        i3 = $i15 - $i18;

        $i17 = virtualinvoke r2.<android.view.View: int getLeft()>();

        $i20 = r3.<android.graphics.Rect: int left>;

        i4 = $i17 + $i20;

        $i19 = virtualinvoke r2.<android.view.View: int getTop()>();

        $i22 = r3.<android.graphics.Rect: int top>;

        i5 = $i19 + $i22;

        $i21 = r3.<android.graphics.Rect: int right>;

        i6 = i4 + $i21;

        $i24 = r3.<android.graphics.Rect: int bottom>;

        i7 = i5 + $i24;

        $i23 = i4 - i0;

        i8 = staticinvoke <java.lang.Math: int min(int,int)>(0, $i23);

        $i26 = i5 - i1;

        i9 = staticinvoke <java.lang.Math: int min(int,int)>(0, $i26);

        $i25 = i6 - i2;

        i10 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i25);

        $i28 = i7 - i3;

        i12 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i28);

        $i27 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>(r1);

        if $i27 != 1 goto label03;

        if i10 == 0 goto label01;

        $i29 = i10;

        goto label02;

     label01:
        $i29 = i8;

     label02:
        i11 = $i29;

        goto label06;

     label03:
        if i8 == 0 goto label04;

        $i31 = i8;

        goto label05;

     label04:
        $i31 = i10;

     label05:
        i11 = $i31;

     label06:
        if i9 == 0 goto label07;

        $i30 = i9;

        goto label08;

     label07:
        $i30 = i12;

     label08:
        i13 = $i30;

        if i11 != 0 goto label09;

        if i13 == 0 goto label12;

     label09:
        if z0 == 0 goto label10;

        virtualinvoke r1.<android.support.v7.widget.RecyclerView: void scrollBy(int,int)>(i11, i13);

        goto label11;

     label10:
        virtualinvoke r1.<android.support.v7.widget.RecyclerView: void smoothScrollBy(int,int)>(i11, i13);

     label11:
        return 1;

     label12:
        return 0;
    }

    public boolean onRequestChildFocus(android.support.v7.widget.RecyclerView, android.view.View, android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView r1;
        android.view.View r2, r3;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.view.View;

        return 0;
    }

    public boolean onRequestChildFocus(android.support.v7.widget.RecyclerView, android.support.v7.widget.RecyclerView$State, android.view.View, android.view.View)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView r1;
        android.support.v7.widget.RecyclerView$State r2;
        android.view.View r3, r4;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        r3 := @parameter2: android.view.View;

        r4 := @parameter3: android.view.View;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean onRequestChildFocus(android.support.v7.widget.RecyclerView,android.view.View,android.view.View)>(r1, r3, r4);

        return $z0;
    }

    public void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter, android.support.v7.widget.RecyclerView$Adapter)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Adapter r1, r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$Adapter;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$Adapter;

        return;
    }

    public boolean onAddFocusables(android.support.v7.widget.RecyclerView, java.util.ArrayList, int, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView r1;
        java.util.ArrayList r2;
        int i0, i1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView;

        r2 := @parameter1: java.util.ArrayList;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        return 0;
    }

    public void onItemsChanged(android.support.v7.widget.RecyclerView)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView;

        return;
    }

    public void onItemsAdded(android.support.v7.widget.RecyclerView, int, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView r1;
        int i0, i1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        return;
    }

    public void onItemsRemoved(android.support.v7.widget.RecyclerView, int, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView r1;
        int i0, i1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        return;
    }

    public void onItemsUpdated(android.support.v7.widget.RecyclerView, int, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView r1;
        int i0, i1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        return;
    }

    public void onItemsMoved(android.support.v7.widget.RecyclerView, int, int, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView r1;
        int i0, i1, i2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        return;
    }

    public int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$State r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$State;

        return 0;
    }

    public int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$State r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$State;

        return 0;
    }

    public int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$State r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$State;

        return 0;
    }

    public int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$State r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$State;

        return 0;
    }

    public int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$State r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$State;

        return 0;
    }

    public int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$State r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$State;

        return 0;
    }

    public void onMeasure(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, int, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        android.support.v7.widget.RecyclerView$State r2;
        int i0, i1, i2, i3, i4, i5, i6, i7;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i5 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        lookupswitch(i2)
        {
            case -2147483648: goto label1;
            case 0: goto label2;
            case 1073741824: goto label1;
            default: goto label2;
        };

     label1:
        i6 = i4;

        goto label3;

     label2:
        i6 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getMinimumWidth()>();

     label3:
        lookupswitch(i3)
        {
            case -2147483648: goto label4;
            case 0: goto label5;
            case 1073741824: goto label4;
            default: goto label5;
        };

     label4:
        i7 = i5;

        goto label6;

     label5:
        i7 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getMinimumHeight()>();

     label6:
        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void setMeasuredDimension(int,int)>(i6, i7);

        return;
    }

    public void setMeasuredDimension(int, int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int i0, i1;
        android.support.v7.widget.RecyclerView $r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        staticinvoke <android.support.v7.widget.RecyclerView: void access$4900(android.support.v7.widget.RecyclerView,int,int)>($r1, i0, i1);

        return;
    }

    public int getMinimumWidth()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getMinimumWidth(android.view.View)>($r1);

        return $i0;
    }

    public int getMinimumHeight()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView $r1;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getMinimumHeight(android.view.View)>($r1);

        return $i0;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        return null;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.os.Parcelable r1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.os.Parcelable;

        return;
    }

    void stopSmoothScroller()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$SmoothScroller $r1, $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        $r1 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        virtualinvoke $r2.<android.support.v7.widget.RecyclerView$SmoothScroller: void stop()>();

     label1:
        return;
    }

    private void onSmoothScrollerStopped(android.support.v7.widget.RecyclerView$SmoothScroller)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$SmoothScroller r1, $r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$SmoothScroller;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller>;

        if $r2 != r1 goto label1;

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView$SmoothScroller mSmoothScroller> = null;

     label1:
        return;
    }

    public void onScrollStateChanged(int)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        return;
    }

    public void removeAndRecycleAllViews(android.support.v7.widget.RecyclerView$Recycler)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        int i0, $i1;
        android.view.View r2;
        android.support.v7.widget.RecyclerView$ViewHolder $r3;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getChildCount()>();

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label3;

        r2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)>(i0);

        $r3 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)>(r2);

        $z0 = virtualinvoke $r3.<android.support.v7.widget.RecyclerView$ViewHolder: boolean shouldIgnore()>();

        if $z0 != 0 goto label2;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void removeAndRecycleViewAt(int,android.support.v7.widget.RecyclerView$Recycler)>(i0, r1);

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        return;
    }

    void onInitializeAccessibilityNodeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat r1;
        android.support.v7.widget.RecyclerView $r2, $r3;
        android.support.v7.widget.RecyclerView$State $r4;
        android.support.v7.widget.RecyclerView$Recycler $r5;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r5 = $r2.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityNodeInfo(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>($r5, $r4, r1);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        android.support.v7.widget.RecyclerView$State r2;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat r3;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat r4;
        java.lang.Class $r5;
        java.lang.String $r6;
        android.support.v7.widget.RecyclerView $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        r3 := @parameter2: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        $r5 = class "android/support/v7/widget/RecyclerView";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r3.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>($r6);

        $r7 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean canScrollVertically(android.view.View,int)>($r7, -1);

        if $z0 != 0 goto label1;

        $r10 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z4 = staticinvoke <android.support.v4.view.ViewCompat: boolean canScrollHorizontally(android.view.View,int)>($r10, -1);

        if $z4 == 0 goto label2;

     label1:
        virtualinvoke r3.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>(8192);

        virtualinvoke r3.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setScrollable(boolean)>(1);

     label2:
        $r8 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z1 = staticinvoke <android.support.v4.view.ViewCompat: boolean canScrollVertically(android.view.View,int)>($r8, 1);

        if $z1 != 0 goto label3;

        $r9 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z3 = staticinvoke <android.support.v4.view.ViewCompat: boolean canScrollHorizontally(android.view.View,int)>($r9, 1);

        if $z3 == 0 goto label4;

     label3:
        virtualinvoke r3.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>(4096);

        virtualinvoke r3.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setScrollable(boolean)>(1);

     label4:
        $i0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>(r1, r2);

        $i1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>(r1, r2);

        $z2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean isLayoutHierarchical(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>(r1, r2);

        $i2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getSelectionModeForAccessibility(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)>(r1, r2);

        r4 = staticinvoke <android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int)>($i0, $i1, $z2, $i2);

        virtualinvoke r3.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionInfo(java.lang.Object)>(r4);

        return;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.accessibility.AccessibilityEvent r1;
        android.support.v7.widget.RecyclerView $r2, $r3;
        android.support.v7.widget.RecyclerView$State $r4;
        android.support.v7.widget.RecyclerView$Recycler $r5;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r5 = $r2.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityEvent(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent)>($r5, $r4, r1);

        return;
    }

    public void onInitializeAccessibilityEvent(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, android.view.accessibility.AccessibilityEvent)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        android.support.v7.widget.RecyclerView$State r2;
        android.view.accessibility.AccessibilityEvent r3;
        android.support.v4.view.accessibility.AccessibilityRecordCompat r4;
        android.support.v7.widget.RecyclerView $r5, $r6, $r7, $r9, $r11, $r12, $r13;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.support.v7.widget.RecyclerView$Adapter $r8, $r10;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        r3 := @parameter2: android.view.accessibility.AccessibilityEvent;

        r4 = staticinvoke <android.support.v4.view.accessibility.AccessibilityEventCompat: android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent)>(r3);

        $r5 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r5 == null goto label1;

        if r4 != null goto label2;

     label1:
        return;

     label2:
        $r6 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean canScrollVertically(android.view.View,int)>($r6, 1);

        if $z0 != 0 goto label3;

        $r11 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z1 = staticinvoke <android.support.v4.view.ViewCompat: boolean canScrollVertically(android.view.View,int)>($r11, -1);

        if $z1 != 0 goto label3;

        $r12 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z2 = staticinvoke <android.support.v4.view.ViewCompat: boolean canScrollHorizontally(android.view.View,int)>($r12, -1);

        if $z2 != 0 goto label3;

        $r13 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z3 = staticinvoke <android.support.v4.view.ViewCompat: boolean canScrollHorizontally(android.view.View,int)>($r13, 1);

        if $z3 == 0 goto label4;

     label3:
        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        virtualinvoke r4.<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setScrollable(boolean)>($z4);

        $r7 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r8 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter access$2200(android.support.v7.widget.RecyclerView)>($r7);

        if $r8 == null goto label6;

        $r9 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r10 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter access$2200(android.support.v7.widget.RecyclerView)>($r9);

        $i0 = virtualinvoke $r10.<android.support.v7.widget.RecyclerView$Adapter: int getItemCount()>();

        virtualinvoke r4.<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setItemCount(int)>($i0);

     label6:
        return;
    }

    void onInitializeAccessibilityNodeInfoForItem(android.view.View, android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat r2;
        android.support.v7.widget.RecyclerView $r3, $r4;
        android.support.v7.widget.RecyclerView$State $r5;
        android.support.v7.widget.RecyclerView$Recycler $r6;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r6 = $r3.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r5 = $r4.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>($r6, $r5, r1, r2);

        return;
    }

    public void onInitializeAccessibilityNodeInfoForItem(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, android.view.View, android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        android.support.v7.widget.RecyclerView$State r2;
        android.view.View r3;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat r4;
        int i0, i1, $i2, $i3;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat r5;
        boolean $z0, $z1;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        r3 := @parameter2: android.view.View;

        r4 := @parameter3: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z0 == 0 goto label1;

        $i3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPosition(android.view.View)>(r3);

        goto label2;

     label1:
        $i3 = 0;

     label2:
        i0 = $i3;

        $z1 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z1 == 0 goto label3;

        $i2 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPosition(android.view.View)>(r3);

        goto label4;

     label3:
        $i2 = 0;

     label4:
        i1 = $i2;

        r5 = staticinvoke <android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean)>(i0, 1, i1, 1, 0, 0);

        virtualinvoke r4.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionItemInfo(java.lang.Object)>(r5);

        return;
    }

    public void requestSimpleAnimationsInNextLayout()
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean mRequestedSimpleAnimations> = 1;

        return;
    }

    public int getSelectionModeForAccessibility(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        android.support.v7.widget.RecyclerView$State r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        return 0;
    }

    public int getRowCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        android.support.v7.widget.RecyclerView$State r2;
        android.support.v7.widget.RecyclerView $r3, $r4, $r6;
        android.support.v7.widget.RecyclerView$Adapter $r5, $r7;
        boolean $z0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r3 == null goto label1;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r5 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter access$2200(android.support.v7.widget.RecyclerView)>($r4);

        if $r5 != null goto label2;

     label1:
        return 1;

     label2:
        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollVertically()>();

        if $z0 == 0 goto label3;

        $r6 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r7 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter access$2200(android.support.v7.widget.RecyclerView)>($r6);

        $i0 = virtualinvoke $r7.<android.support.v7.widget.RecyclerView$Adapter: int getItemCount()>();

        goto label4;

     label3:
        $i0 = 1;

     label4:
        return $i0;
    }

    public int getColumnCountForAccessibility(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        android.support.v7.widget.RecyclerView$State r2;
        android.support.v7.widget.RecyclerView $r3, $r4, $r6;
        android.support.v7.widget.RecyclerView$Adapter $r5, $r7;
        boolean $z0;
        int $i0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r3 == null goto label1;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r5 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter access$2200(android.support.v7.widget.RecyclerView)>($r4);

        if $r5 != null goto label2;

     label1:
        return 1;

     label2:
        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()>();

        if $z0 == 0 goto label3;

        $r6 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r7 = staticinvoke <android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Adapter access$2200(android.support.v7.widget.RecyclerView)>($r6);

        $i0 = virtualinvoke $r7.<android.support.v7.widget.RecyclerView$Adapter: int getItemCount()>();

        goto label4;

     label3:
        $i0 = 1;

     label4:
        return $i0;
    }

    public boolean isLayoutHierarchical(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        android.support.v7.widget.RecyclerView$State r2;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        return 0;
    }

    boolean performAccessibilityAction(int, android.os.Bundle)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        int i0;
        android.os.Bundle r1;
        android.support.v7.widget.RecyclerView $r2, $r3;
        android.support.v7.widget.RecyclerView$State $r4;
        android.support.v7.widget.RecyclerView$Recycler $r5;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r2 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r5 = $r2.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r4 = $r3.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean performAccessibilityAction(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,android.os.Bundle)>($r5, $r4, i0, r1);

        return $z0;
    }

    public boolean performAccessibilityAction(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, int, android.os.Bundle)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        android.support.v7.widget.RecyclerView$State r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        android.os.Bundle r3;
        android.support.v7.widget.RecyclerView $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        i0 := @parameter2: int;

        r3 := @parameter3: android.os.Bundle;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        if $r4 != null goto label1;

        return 0;

     label1:
        i1 = 0;

        i2 = 0;

        lookupswitch(i0)
        {
            case 4096: goto label4;
            case 8192: goto label2;
            default: goto label6;
        };

     label2:
        $r5 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean canScrollVertically(android.view.View,int)>($r5, -1);

        if $z0 == 0 goto label3;

        $i9 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getHeight()>();

        $i8 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        $i11 = $i9 - $i8;

        $i10 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        $i12 = $i11 - $i10;

        i1 = neg $i12;

     label3:
        $r6 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z1 = staticinvoke <android.support.v4.view.ViewCompat: boolean canScrollHorizontally(android.view.View,int)>($r6, -1);

        if $z1 == 0 goto label6;

        $i3 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getWidth()>();

        $i4 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        $i5 = $i3 - $i4;

        $i7 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        $i6 = $i5 - $i7;

        i2 = neg $i6;

        goto label6;

     label4:
        $r8 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z2 = staticinvoke <android.support.v4.view.ViewCompat: boolean canScrollVertically(android.view.View,int)>($r8, 1);

        if $z2 == 0 goto label5;

        $i16 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getHeight()>();

        $i19 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingTop()>();

        $i20 = $i16 - $i19;

        $i18 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingBottom()>();

        i1 = $i20 - $i18;

     label5:
        $r9 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $z3 = staticinvoke <android.support.v4.view.ViewCompat: boolean canScrollHorizontally(android.view.View,int)>($r9, 1);

        if $z3 == 0 goto label6;

        $i13 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getWidth()>();

        $i15 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingLeft()>();

        $i14 = $i13 - $i15;

        $i17 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: int getPaddingRight()>();

        i2 = $i14 - $i17;

     label6:
        if i1 != 0 goto label7;

        if i2 != 0 goto label7;

        return 0;

     label7:
        $r7 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        virtualinvoke $r7.<android.support.v7.widget.RecyclerView: void scrollBy(int,int)>(i2, i1);

        return 1;
    }

    boolean performAccessibilityActionForItem(android.view.View, int, android.os.Bundle)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.view.View r1;
        int i0;
        android.os.Bundle r2;
        android.support.v7.widget.RecyclerView $r3, $r4;
        android.support.v7.widget.RecyclerView$State $r5;
        android.support.v7.widget.RecyclerView$Recycler $r6;
        boolean $z0;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        $r3 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r6 = $r3.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$Recycler mRecycler>;

        $r4 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: android.support.v7.widget.RecyclerView mRecyclerView>;

        $r5 = $r4.<android.support.v7.widget.RecyclerView: android.support.v7.widget.RecyclerView$State mState>;

        $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean performAccessibilityActionForItem(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.view.View,int,android.os.Bundle)>($r6, $r5, r1, i0, r2);

        return $z0;
    }

    public boolean performAccessibilityActionForItem(android.support.v7.widget.RecyclerView$Recycler, android.support.v7.widget.RecyclerView$State, android.view.View, int, android.os.Bundle)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$Recycler r1;
        android.support.v7.widget.RecyclerView$State r2;
        android.view.View r3;
        int i0;
        android.os.Bundle r4;

        r0 := @this: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$Recycler;

        r2 := @parameter1: android.support.v7.widget.RecyclerView$State;

        r3 := @parameter2: android.view.View;

        i0 := @parameter3: int;

        r4 := @parameter4: android.os.Bundle;

        return 0;
    }

    static boolean access$1700(android.support.v7.widget.RecyclerView$LayoutManager)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        boolean $z0;

        r0 := @parameter0: android.support.v7.widget.RecyclerView$LayoutManager;

        $z0 = r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean mRequestedSimpleAnimations>;

        return $z0;
    }

    static boolean access$1702(android.support.v7.widget.RecyclerView$LayoutManager, boolean)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        boolean z0;

        r0 := @parameter0: android.support.v7.widget.RecyclerView$LayoutManager;

        z0 := @parameter1: boolean;

        r0.<android.support.v7.widget.RecyclerView$LayoutManager: boolean mRequestedSimpleAnimations> = z0;

        return z0;
    }

    static void access$5200(android.support.v7.widget.RecyclerView$LayoutManager, android.support.v7.widget.RecyclerView$SmoothScroller)
    {
        android.support.v7.widget.RecyclerView$LayoutManager r0;
        android.support.v7.widget.RecyclerView$SmoothScroller r1;

        r0 := @parameter0: android.support.v7.widget.RecyclerView$LayoutManager;

        r1 := @parameter1: android.support.v7.widget.RecyclerView$SmoothScroller;

        specialinvoke r0.<android.support.v7.widget.RecyclerView$LayoutManager: void onSmoothScrollerStopped(android.support.v7.widget.RecyclerView$SmoothScroller)>(r1);

        return;
    }
}
