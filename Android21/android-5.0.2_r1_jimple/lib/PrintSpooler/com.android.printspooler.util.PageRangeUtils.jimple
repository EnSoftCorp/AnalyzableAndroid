public final class com.android.printspooler.util.PageRangeUtils extends java.lang.Object
{
    private static final android.print.PageRange[] ALL_PAGES_RANGE;
    private static final java.util.Comparator sComparator;

    private void <init>()
    {
        com.android.printspooler.util.PageRangeUtils r0;

        r0 := @this: com.android.printspooler.util.PageRangeUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean contains(android.print.PageRange[], int)
    {
        android.print.PageRange[] r0;
        int i0, i1, i2;
        android.print.PageRange r1;
        boolean $z0;

        r0 := @parameter0: android.print.PageRange[];

        i0 := @parameter1: int;

        i1 = lengthof r0;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        r1 = r0[i2];

        $z0 = virtualinvoke r1.<android.print.PageRange: boolean contains(int)>(i0);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static boolean contains(android.print.PageRange[], android.print.PageRange[], int)
    {
        android.print.PageRange[] r0, r1, $r4, $r5, r7, r8;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.print.PageRange r2, r3, $r6;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: android.print.PageRange[];

        r1 := @parameter1: android.print.PageRange[];

        i0 := @parameter2: int;

        if r0 == null goto label01;

        if r1 != null goto label02;

     label01:
        return 0;

     label02:
        $r4 = <com.android.printspooler.util.PageRangeUtils: android.print.PageRange[] ALL_PAGES_RANGE>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>(r0, $r4);

        if $z0 == 0 goto label03;

        return 1;

     label03:
        $r5 = <com.android.printspooler.util.PageRangeUtils: android.print.PageRange[] ALL_PAGES_RANGE>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>(r1, $r5);

        if $z1 == 0 goto label04;

        $r6 = new android.print.PageRange;

        $i11 = i0 - 1;

        specialinvoke $r6.<android.print.PageRange: void <init>(int,int)>(0, $i11);

        r1[0] = $r6;

     label04:
        r7 = staticinvoke <com.android.printspooler.util.PageRangeUtils: android.print.PageRange[] normalize(android.print.PageRange[])>(r0);

        r8 = staticinvoke <com.android.printspooler.util.PageRangeUtils: android.print.PageRange[] normalize(android.print.PageRange[])>(r1);

        i1 = 0;

        i2 = lengthof r7;

        i3 = lengthof r8;

        i4 = 0;

     label05:
        if i4 >= i2 goto label11;

        r2 = r7[i4];

     label06:
        if i1 >= i3 goto label10;

        r3 = r8[i1];

        $i6 = virtualinvoke r3.<android.print.PageRange: int getStart()>();

        $i5 = virtualinvoke r2.<android.print.PageRange: int getEnd()>();

        if $i6 <= $i5 goto label07;

        goto label10;

     label07:
        $i8 = virtualinvoke r3.<android.print.PageRange: int getStart()>();

        $i7 = virtualinvoke r2.<android.print.PageRange: int getStart()>();

        if $i8 < $i7 goto label08;

        $i10 = virtualinvoke r3.<android.print.PageRange: int getEnd()>();

        $i9 = virtualinvoke r2.<android.print.PageRange: int getEnd()>();

        if $i10 <= $i9 goto label09;

     label08:
        return 0;

     label09:
        i1 = i1 + 1;

        goto label06;

     label10:
        i4 = i4 + 1;

        goto label05;

     label11:
        if i1 < i3 goto label12;

        $z2 = 1;

        goto label13;

     label12:
        $z2 = 0;

     label13:
        return $z2;
    }

    public static android.print.PageRange[] normalize(android.print.PageRange[])
    {
        android.print.PageRange[] r0, r6;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14;
        android.print.PageRange r1, r2, r3, $r5;
        java.util.Comparator $r4;

        r0 := @parameter0: android.print.PageRange[];

        if r0 != null goto label01;

        return null;

     label01:
        i0 = lengthof r0;

        if i0 > 1 goto label02;

        return r0;

     label02:
        $r4 = <com.android.printspooler.util.PageRangeUtils: java.util.Comparator sComparator>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r0, $r4);

        i1 = 1;

        i2 = 0;

     label03:
        $i3 = i0 - 1;

        if i2 >= $i3 goto label06;

        r1 = r0[i2];

        $i4 = i2 + 1;

        r2 = r0[$i4];

        $i5 = virtualinvoke r1.<android.print.PageRange: int getEnd()>();

        $i6 = $i5 + 1;

        $i7 = virtualinvoke r2.<android.print.PageRange: int getStart()>();

        if $i6 < $i7 goto label04;

        r0[i2] = null;

        $i8 = i2 + 1;

        $r5 = new android.print.PageRange;

        $i9 = virtualinvoke r1.<android.print.PageRange: int getStart()>();

        $i11 = virtualinvoke r1.<android.print.PageRange: int getEnd()>();

        $i10 = virtualinvoke r2.<android.print.PageRange: int getEnd()>();

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>($i11, $i10);

        specialinvoke $r5.<android.print.PageRange: void <init>(int,int)>($i9, $i12);

        r0[$i8] = $r5;

        goto label05;

     label04:
        i1 = i1 + 1;

     label05:
        i2 = i2 + 1;

        goto label03;

     label06:
        if i1 != i0 goto label07;

        return r0;

     label07:
        i13 = 0;

        r6 = newarray (android.print.PageRange)[i1];

        i14 = 0;

     label08:
        if i14 >= i0 goto label10;

        r3 = r0[i14];

        if r3 == null goto label09;

        r6[i13] = r3;

        i13 = i13 + 1;

     label09:
        i14 = i14 + 1;

        goto label08;

     label10:
        return r6;
    }

    public static void offset(android.print.PageRange[], int)
    {
        android.print.PageRange[] r0;
        int i0, i1, i2, i3, i4, $i5, $i6;
        android.print.PageRange $r1, $r2, $r3;

        r0 := @parameter0: android.print.PageRange[];

        i0 := @parameter1: int;

        if i0 != 0 goto label1;

        return;

     label1:
        i1 = lengthof r0;

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        $r1 = r0[i2];

        $i5 = virtualinvoke $r1.<android.print.PageRange: int getStart()>();

        i3 = $i5 + i0;

        $r2 = r0[i2];

        $i6 = virtualinvoke $r2.<android.print.PageRange: int getEnd()>();

        i4 = $i6 + i0;

        $r3 = new android.print.PageRange;

        specialinvoke $r3.<android.print.PageRange: void <init>(int,int)>(i3, i4);

        r0[i2] = $r3;

        i2 = i2 + 1;

        goto label2;

     label3:
        return;
    }

    public static int getNormalizedPageCount(android.print.PageRange[], int)
    {
        android.print.PageRange[] r0;
        int i0, i1, i2, i3, $i4;
        android.print.PageRange r1, $r2;
        boolean $z0;

        r0 := @parameter0: android.print.PageRange[];

        i0 := @parameter1: int;

        i1 = 0;

        if r0 == null goto label3;

        i2 = lengthof r0;

        i3 = 0;

     label1:
        if i3 >= i2 goto label3;

        r1 = r0[i3];

        $r2 = <android.print.PageRange: android.print.PageRange ALL_PAGES>;

        $z0 = virtualinvoke $r2.<android.print.PageRange: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return i0;

     label2:
        $i4 = virtualinvoke r1.<android.print.PageRange: int getSize()>();

        i1 = i1 + $i4;

        i3 = i3 + 1;

        goto label1;

     label3:
        return i1;
    }

    public static android.print.PageRange asAbsoluteRange(android.print.PageRange, int)
    {
        android.print.PageRange r0, $r1, $r2;
        int i0, $i1;
        boolean $z0;

        r0 := @parameter0: android.print.PageRange;

        i0 := @parameter1: int;

        $r1 = <android.print.PageRange: android.print.PageRange ALL_PAGES>;

        $z0 = virtualinvoke $r1.<android.print.PageRange: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r2 = new android.print.PageRange;

        $i1 = i0 - 1;

        specialinvoke $r2.<android.print.PageRange: void <init>(int,int)>(0, $i1);

        return $r2;

     label1:
        return r0;
    }

    public static boolean isAllPages(android.print.PageRange[])
    {
        android.print.PageRange[] r0;
        int i0, i1;
        android.print.PageRange r1;
        boolean $z0;

        r0 := @parameter0: android.print.PageRange[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r1 = r0[i1];

        $z0 = staticinvoke <com.android.printspooler.util.PageRangeUtils: boolean isAllPages(android.print.PageRange)>(r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static boolean isAllPages(android.print.PageRange)
    {
        android.print.PageRange r0, $r1;
        boolean $z0;

        r0 := @parameter0: android.print.PageRange;

        $r1 = <android.print.PageRange: android.print.PageRange ALL_PAGES>;

        $z0 = virtualinvoke $r1.<android.print.PageRange: boolean equals(java.lang.Object)>(r0);

        return $z0;
    }

    public static boolean isAllPages(android.print.PageRange[], int)
    {
        android.print.PageRange[] r0;
        int i0, i1, i2;
        android.print.PageRange r1;
        boolean $z0;

        r0 := @parameter0: android.print.PageRange[];

        i0 := @parameter1: int;

        i1 = lengthof r0;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        r1 = r0[i2];

        $z0 = staticinvoke <com.android.printspooler.util.PageRangeUtils: boolean isAllPages(android.print.PageRange,int)>(r1, i0);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static boolean isAllPages(android.print.PageRange, int)
    {
        android.print.PageRange r0;
        int i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @parameter0: android.print.PageRange;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<android.print.PageRange: int getStart()>();

        if $i1 != 0 goto label1;

        $i2 = virtualinvoke r0.<android.print.PageRange: int getEnd()>();

        $i3 = i0 - 1;

        if $i2 != $i3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static android.print.PageRange[] computePrintedPages(android.print.PageRange[], android.print.PageRange[], int)
    {
        android.print.PageRange[] r0, r1, $r2, $r3, $r4, $r5, $r7, $r8;
        int i0, i1, $i2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.print.PageRange $r6;

        r0 := @parameter0: android.print.PageRange[];

        r1 := @parameter1: android.print.PageRange[];

        i0 := @parameter2: int;

        $r2 = <com.android.printspooler.util.PageRangeUtils: android.print.PageRange[] ALL_PAGES_RANGE>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>(r0, $r2);

        if $z0 == 0 goto label1;

        if i0 != -1 goto label1;

        $r7 = <com.android.printspooler.util.PageRangeUtils: android.print.PageRange[] ALL_PAGES_RANGE>;

        return $r7;

     label1:
        $z1 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>(r1, r0);

        if $z1 == 0 goto label2;

        $r8 = <com.android.printspooler.util.PageRangeUtils: android.print.PageRange[] ALL_PAGES_RANGE>;

        return $r8;

     label2:
        $r3 = <com.android.printspooler.util.PageRangeUtils: android.print.PageRange[] ALL_PAGES_RANGE>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>(r1, $r3);

        if $z2 == 0 goto label3;

        return r0;

     label3:
        $z3 = staticinvoke <com.android.printspooler.util.PageRangeUtils: boolean contains(android.print.PageRange[],android.print.PageRange[],int)>(r1, r0, i0);

        if $z3 == 0 goto label4;

        $r6 = r1[0];

        $i2 = virtualinvoke $r6.<android.print.PageRange: int getStart()>();

        i1 = neg $i2;

        staticinvoke <com.android.printspooler.util.PageRangeUtils: void offset(android.print.PageRange[],int)>(r0, i1);

        return r0;

     label4:
        $r4 = <com.android.printspooler.util.PageRangeUtils: android.print.PageRange[] ALL_PAGES_RANGE>;

        $z4 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>(r0, $r4);

        if $z4 == 0 goto label5;

        $z5 = staticinvoke <com.android.printspooler.util.PageRangeUtils: boolean isAllPages(android.print.PageRange[],int)>(r1, i0);

        if $z5 == 0 goto label5;

        $r5 = <com.android.printspooler.util.PageRangeUtils: android.print.PageRange[] ALL_PAGES_RANGE>;

        return $r5;

     label5:
        return null;
    }

    static void <clinit>()
    {
        android.print.PageRange[] $r0;
        android.print.PageRange $r1;
        com.android.printspooler.util.PageRangeUtils$1 $r2;

        $r0 = newarray (android.print.PageRange)[1];

        $r1 = <android.print.PageRange: android.print.PageRange ALL_PAGES>;

        $r0[0] = $r1;

        <com.android.printspooler.util.PageRangeUtils: android.print.PageRange[] ALL_PAGES_RANGE> = $r0;

        $r2 = new com.android.printspooler.util.PageRangeUtils$1;

        specialinvoke $r2.<com.android.printspooler.util.PageRangeUtils$1: void <init>()>();

        <com.android.printspooler.util.PageRangeUtils: java.util.Comparator sComparator> = $r2;

        return;
    }
}
