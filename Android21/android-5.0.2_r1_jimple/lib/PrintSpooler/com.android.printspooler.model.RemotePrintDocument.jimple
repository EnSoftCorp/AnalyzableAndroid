public final class com.android.printspooler.model.RemotePrintDocument extends java.lang.Object
{
    private static final java.lang.String LOG_TAG;
    private static final boolean DEBUG;
    private static final int STATE_INITIAL;
    private static final int STATE_STARTED;
    private static final int STATE_UPDATING;
    private static final int STATE_UPDATED;
    private static final int STATE_FAILED;
    private static final int STATE_FINISHED;
    private static final int STATE_CANCELING;
    private static final int STATE_CANCELED;
    private static final int STATE_DESTROYED;
    private final android.content.Context mContext;
    private final com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocumentInfo;
    private final com.android.printspooler.model.RemotePrintDocument$UpdateSpec mUpdateSpec;
    private final android.os.Looper mLooper;
    private final android.print.IPrintDocumentAdapter mPrintDocumentAdapter;
    private final com.android.printspooler.model.RemotePrintDocument$RemoteAdapterDeathObserver mAdapterDeathObserver;
    private final com.android.printspooler.model.RemotePrintDocument$UpdateResultCallbacks mUpdateCallbacks;
    private final com.android.printspooler.model.RemotePrintDocument$CommandDoneCallback mCommandResultCallback;
    private final android.os.IBinder$DeathRecipient mDeathRecipient;
    private int mState;
    private com.android.printspooler.model.RemotePrintDocument$AsyncCommand mCurrentCommand;
    private com.android.printspooler.model.RemotePrintDocument$AsyncCommand mNextCommand;

    public void <init>(android.content.Context, android.print.IPrintDocumentAdapter, com.android.printspooler.model.MutexFileProvider, com.android.printspooler.model.RemotePrintDocument$RemoteAdapterDeathObserver, com.android.printspooler.model.RemotePrintDocument$UpdateResultCallbacks)
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        android.content.Context r1;
        android.print.IPrintDocumentAdapter r2;
        com.android.printspooler.model.MutexFileProvider r3;
        com.android.printspooler.model.RemotePrintDocument$RemoteAdapterDeathObserver r4;
        com.android.printspooler.model.RemotePrintDocument$UpdateResultCallbacks r5;
        com.android.printspooler.model.RemotePrintDocument$UpdateSpec $r6;
        com.android.printspooler.model.RemotePrintDocument$1 $r7;
        com.android.printspooler.model.RemotePrintDocument$2 $r8;
        android.os.Looper $r9;
        com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo $r10, $r11;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.print.IPrintDocumentAdapter;

        r3 := @parameter2: com.android.printspooler.model.MutexFileProvider;

        r4 := @parameter3: com.android.printspooler.model.RemotePrintDocument$RemoteAdapterDeathObserver;

        r5 := @parameter4: com.android.printspooler.model.RemotePrintDocument$UpdateResultCallbacks;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = new com.android.printspooler.model.RemotePrintDocument$UpdateSpec;

        specialinvoke $r6.<com.android.printspooler.model.RemotePrintDocument$UpdateSpec: void <init>()>();

        r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$UpdateSpec mUpdateSpec> = $r6;

        $r7 = new com.android.printspooler.model.RemotePrintDocument$1;

        specialinvoke $r7.<com.android.printspooler.model.RemotePrintDocument$1: void <init>(com.android.printspooler.model.RemotePrintDocument)>(r0);

        r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$CommandDoneCallback mCommandResultCallback> = $r7;

        $r8 = new com.android.printspooler.model.RemotePrintDocument$2;

        specialinvoke $r8.<com.android.printspooler.model.RemotePrintDocument$2: void <init>(com.android.printspooler.model.RemotePrintDocument)>(r0);

        r0.<com.android.printspooler.model.RemotePrintDocument: android.os.IBinder$DeathRecipient mDeathRecipient> = $r8;

        r0.<com.android.printspooler.model.RemotePrintDocument: int mState> = 0;

        r0.<com.android.printspooler.model.RemotePrintDocument: android.print.IPrintDocumentAdapter mPrintDocumentAdapter> = r2;

        $r9 = virtualinvoke r1.<android.content.Context: android.os.Looper getMainLooper()>();

        r0.<com.android.printspooler.model.RemotePrintDocument: android.os.Looper mLooper> = $r9;

        r0.<com.android.printspooler.model.RemotePrintDocument: android.content.Context mContext> = r1;

        r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$RemoteAdapterDeathObserver mAdapterDeathObserver> = r4;

        $r10 = new com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo;

        specialinvoke $r10.<com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo: void <init>()>();

        r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocumentInfo> = $r10;

        $r11 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocumentInfo>;

        $r11.<com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo: com.android.printspooler.model.MutexFileProvider fileProvider> = r3;

        r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$UpdateResultCallbacks mUpdateCallbacks> = r5;

        specialinvoke r0.<com.android.printspooler.model.RemotePrintDocument: void connectToRemoteDocument()>();

        return;
    }

    public void start()
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        android.os.RemoteException r1, $r9;
        int $i0, $i1;
        android.print.IPrintDocumentAdapter $r2;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument;

        $i0 = r0.<com.android.printspooler.model.RemotePrintDocument: int mState>;

        if $i0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot start in state:");

        $i1 = r0.<com.android.printspooler.model.RemotePrintDocument: int mState>;

        $r6 = staticinvoke <com.android.printspooler.model.RemotePrintDocument: java.lang.String stateToString(int)>($i1);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label1:
        $r2 = r0.<com.android.printspooler.model.RemotePrintDocument: android.print.IPrintDocumentAdapter mPrintDocumentAdapter>;

        interfaceinvoke $r2.<android.print.IPrintDocumentAdapter: void start()>();

        r0.<com.android.printspooler.model.RemotePrintDocument: int mState> = 1;

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        r1 = $r9;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintDocument", "Error calling start()", r1);

        r0.<com.android.printspooler.model.RemotePrintDocument: int mState> = 4;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean update(android.print.PrintAttributes, android.print.PageRange[], boolean)
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        android.print.PrintAttributes r1, r3, $r35, $r37;
        android.print.PageRange[] r2, $r17;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        com.android.printspooler.model.RemotePrintDocument$LayoutCommand r4, $r42;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.IllegalStateException $r5, $r48;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r8, $r10;
        com.android.printspooler.model.RemotePrintDocument$UpdateSpec $r11, $r13, $r14;
        com.android.printspooler.model.RemotePrintDocument$AsyncCommand $r12, $r18, $r27, $r30, $r31, $r32, $r33, $r34, $r43, $r46, $r47;
        android.print.PrintDocumentInfo $r15, $r23;
        com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo $r16, $r22, $r24, $r26, $r38, $r40, $r44;
        com.android.printspooler.model.RemotePrintDocument$WriteCommand $r19, r49;
        android.content.Context $r20;
        android.os.Looper $r21, $r45;
        android.print.IPrintDocumentAdapter $r25, $r39;
        com.android.printspooler.model.RemotePrintDocument$CommandDoneCallback $r28, $r41;
        com.android.printspooler.model.MutexFileProvider $r29;
        android.print.PrintAttributes$Builder $r36;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument;

        r1 := @parameter0: android.print.PrintAttributes;

        r2 := @parameter1: android.print.PageRange[];

        z0 := @parameter2: boolean;

        $z2 = virtualinvoke r0.<com.android.printspooler.model.RemotePrintDocument: boolean hasUpdateError()>();

        if $z2 == 0 goto label01;

        $r48 = new java.lang.IllegalStateException;

        specialinvoke $r48.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot update without a clearing the failure");

        throw $r48;

     label01:
        $i0 = r0.<com.android.printspooler.model.RemotePrintDocument: int mState>;

        if $i0 == 0 goto label02;

        $i3 = r0.<com.android.printspooler.model.RemotePrintDocument: int mState>;

        if $i3 == 5 goto label02;

        $i2 = r0.<com.android.printspooler.model.RemotePrintDocument: int mState>;

        if $i2 != 8 goto label03;

     label02:
        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot update in state:");

        $i1 = r0.<com.android.printspooler.model.RemotePrintDocument: int mState>;

        $r8 = staticinvoke <com.android.printspooler.model.RemotePrintDocument: java.lang.String stateToString(int)>($i1);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label03:
        $r11 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$UpdateSpec mUpdateSpec>;

        $z3 = virtualinvoke $r11.<com.android.printspooler.model.RemotePrintDocument$UpdateSpec: boolean hasSameConstraints(android.print.PrintAttributes,boolean)>(r1, z0);

        if $z3 != 0 goto label08;

        z1 = 1;

        $r33 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mCurrentCommand>;

        if $r33 == null goto label05;

        $r43 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mCurrentCommand>;

        $z11 = virtualinvoke $r43.<com.android.printspooler.model.RemotePrintDocument$AsyncCommand: boolean isRunning()>();

        if $z11 != 0 goto label04;

        $r47 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mCurrentCommand>;

        $z12 = virtualinvoke $r47.<com.android.printspooler.model.RemotePrintDocument$AsyncCommand: boolean isPending()>();

        if $z12 == 0 goto label05;

     label04:
        $r46 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mCurrentCommand>;

        virtualinvoke $r46.<com.android.printspooler.model.RemotePrintDocument$AsyncCommand: void cancel()>();

     label05:
        $r38 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocumentInfo>;

        $r37 = $r38.<com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo: android.print.PrintAttributes attributes>;

        if $r37 == null goto label06;

        $r44 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocumentInfo>;

        $r35 = $r44.<com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo: android.print.PrintAttributes attributes>;

        goto label07;

     label06:
        $r36 = new android.print.PrintAttributes$Builder;

        specialinvoke $r36.<android.print.PrintAttributes$Builder: void <init>()>();

        $r35 = virtualinvoke $r36.<android.print.PrintAttributes$Builder: android.print.PrintAttributes build()>();

     label07:
        r3 = $r35;

        $r42 = new com.android.printspooler.model.RemotePrintDocument$LayoutCommand;

        $r45 = r0.<com.android.printspooler.model.RemotePrintDocument: android.os.Looper mLooper>;

        $r39 = r0.<com.android.printspooler.model.RemotePrintDocument: android.print.IPrintDocumentAdapter mPrintDocumentAdapter>;

        $r40 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocumentInfo>;

        $r41 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$CommandDoneCallback mCommandResultCallback>;

        specialinvoke $r42.<com.android.printspooler.model.RemotePrintDocument$LayoutCommand: void <init>(android.os.Looper,android.print.IPrintDocumentAdapter,com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo,android.print.PrintAttributes,android.print.PrintAttributes,boolean,com.android.printspooler.model.RemotePrintDocument$CommandDoneCallback)>($r45, $r39, $r40, r3, r1, z0, $r41);

        r4 = $r42;

        specialinvoke r0.<com.android.printspooler.model.RemotePrintDocument: void scheduleCommand(com.android.printspooler.model.RemotePrintDocument$AsyncCommand)>(r4);

        r0.<com.android.printspooler.model.RemotePrintDocument: int mState> = 2;

        goto label13;

     label08:
        $r12 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mCurrentCommand>;

        $z4 = $r12 instanceof com.android.printspooler.model.RemotePrintDocument$LayoutCommand;

        if $z4 == 0 goto label09;

        $r30 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mCurrentCommand>;

        $z10 = virtualinvoke $r30.<com.android.printspooler.model.RemotePrintDocument$AsyncCommand: boolean isPending()>();

        if $z10 != 0 goto label12;

        $r34 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mCurrentCommand>;

        $z9 = virtualinvoke $r34.<com.android.printspooler.model.RemotePrintDocument$AsyncCommand: boolean isRunning()>();

        if $z9 != 0 goto label12;

     label09:
        if r2 == null goto label12;

        $r13 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$UpdateSpec mUpdateSpec>;

        $r17 = $r13.<com.android.printspooler.model.RemotePrintDocument$UpdateSpec: android.print.PageRange[] pages>;

        $r16 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocumentInfo>;

        $r15 = $r16.<com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo: android.print.PrintDocumentInfo info>;

        $i4 = virtualinvoke $r15.<android.print.PrintDocumentInfo: int getPageCount()>();

        $z5 = staticinvoke <com.android.printspooler.util.PageRangeUtils: boolean contains(android.print.PageRange[],android.print.PageRange[],int)>($r17, r2, $i4);

        if $z5 != 0 goto label12;

        z1 = 1;

        $r18 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mCurrentCommand>;

        $z6 = $r18 instanceof com.android.printspooler.model.RemotePrintDocument$WriteCommand;

        if $z6 == 0 goto label11;

        $r27 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mCurrentCommand>;

        $z7 = virtualinvoke $r27.<com.android.printspooler.model.RemotePrintDocument$AsyncCommand: boolean isPending()>();

        if $z7 != 0 goto label10;

        $r32 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mCurrentCommand>;

        $z8 = virtualinvoke $r32.<com.android.printspooler.model.RemotePrintDocument$AsyncCommand: boolean isRunning()>();

        if $z8 == 0 goto label11;

     label10:
        $r31 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mCurrentCommand>;

        virtualinvoke $r31.<com.android.printspooler.model.RemotePrintDocument$AsyncCommand: void cancel()>();

     label11:
        $r19 = new com.android.printspooler.model.RemotePrintDocument$WriteCommand;

        $r20 = r0.<com.android.printspooler.model.RemotePrintDocument: android.content.Context mContext>;

        $r21 = r0.<com.android.printspooler.model.RemotePrintDocument: android.os.Looper mLooper>;

        $r25 = r0.<com.android.printspooler.model.RemotePrintDocument: android.print.IPrintDocumentAdapter mPrintDocumentAdapter>;

        $r26 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocumentInfo>;

        $r22 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocumentInfo>;

        $r23 = $r22.<com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo: android.print.PrintDocumentInfo info>;

        $i5 = virtualinvoke $r23.<android.print.PrintDocumentInfo: int getPageCount()>();

        $r24 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocumentInfo>;

        $r29 = $r24.<com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo: com.android.printspooler.model.MutexFileProvider fileProvider>;

        $r28 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$CommandDoneCallback mCommandResultCallback>;

        specialinvoke $r19.<com.android.printspooler.model.RemotePrintDocument$WriteCommand: void <init>(android.content.Context,android.os.Looper,android.print.IPrintDocumentAdapter,com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo,int,android.print.PageRange[],com.android.printspooler.model.MutexFileProvider,com.android.printspooler.model.RemotePrintDocument$CommandDoneCallback)>($r20, $r21, $r25, $r26, $i5, r2, $r29, $r28);

        r49 = $r19;

        specialinvoke r0.<com.android.printspooler.model.RemotePrintDocument: void scheduleCommand(com.android.printspooler.model.RemotePrintDocument$AsyncCommand)>(r49);

        r0.<com.android.printspooler.model.RemotePrintDocument: int mState> = 2;

        goto label13;

     label12:
        z1 = 0;

     label13:
        $r14 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$UpdateSpec mUpdateSpec>;

        virtualinvoke $r14.<com.android.printspooler.model.RemotePrintDocument$UpdateSpec: void update(android.print.PrintAttributes,boolean,android.print.PageRange[])>(r1, z0, r2);

        specialinvoke r0.<com.android.printspooler.model.RemotePrintDocument: void runPendingCommand()>();

        return z1;
    }

    public void finish()
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        android.os.RemoteException r1, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.print.IPrintDocumentAdapter $r2;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument;

        $i0 = r0.<com.android.printspooler.model.RemotePrintDocument: int mState>;

        if $i0 == 1 goto label1;

        $i1 = r0.<com.android.printspooler.model.RemotePrintDocument: int mState>;

        if $i1 == 3 goto label1;

        $i2 = r0.<com.android.printspooler.model.RemotePrintDocument: int mState>;

        if $i2 == 4 goto label1;

        $i3 = r0.<com.android.printspooler.model.RemotePrintDocument: int mState>;

        if $i3 == 6 goto label1;

        $i4 = r0.<com.android.printspooler.model.RemotePrintDocument: int mState>;

        if $i4 == 7 goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot finish in state:");

        $i5 = r0.<com.android.printspooler.model.RemotePrintDocument: int mState>;

        $r6 = staticinvoke <com.android.printspooler.model.RemotePrintDocument: java.lang.String stateToString(int)>($i5);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label1:
        $r2 = r0.<com.android.printspooler.model.RemotePrintDocument: android.print.IPrintDocumentAdapter mPrintDocumentAdapter>;

        interfaceinvoke $r2.<android.print.IPrintDocumentAdapter: void finish()>();

        r0.<com.android.printspooler.model.RemotePrintDocument: int mState> = 5;

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        r1 = $r9;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintDocument", "Error calling finish()", r1);

        r0.<com.android.printspooler.model.RemotePrintDocument: int mState> = 4;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void cancel()
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        int $i0, $i1, $i2;
        com.android.printspooler.model.RemotePrintDocument$AsyncCommand $r1;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument;

        $i0 = r0.<com.android.printspooler.model.RemotePrintDocument: int mState>;

        if $i0 != 6 goto label1;

        return;

     label1:
        $i1 = r0.<com.android.printspooler.model.RemotePrintDocument: int mState>;

        if $i1 == 2 goto label2;

        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot cancel in state:");

        $i2 = r0.<com.android.printspooler.model.RemotePrintDocument: int mState>;

        $r5 = staticinvoke <com.android.printspooler.model.RemotePrintDocument: java.lang.String stateToString(int)>($i2);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label2:
        r0.<com.android.printspooler.model.RemotePrintDocument: int mState> = 6;

        $r1 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mCurrentCommand>;

        virtualinvoke $r1.<com.android.printspooler.model.RemotePrintDocument$AsyncCommand: void cancel()>();

        return;
    }

    public void destroy()
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        int $i0, $i1;
        java.lang.IllegalStateException $r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r4, $r6;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument;

        $i0 = r0.<com.android.printspooler.model.RemotePrintDocument: int mState>;

        if $i0 != 8 goto label1;

        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot destroy in state:");

        $i1 = r0.<com.android.printspooler.model.RemotePrintDocument: int mState>;

        $r4 = staticinvoke <com.android.printspooler.model.RemotePrintDocument: java.lang.String stateToString(int)>($i1);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r1;

     label1:
        r0.<com.android.printspooler.model.RemotePrintDocument: int mState> = 8;

        specialinvoke r0.<com.android.printspooler.model.RemotePrintDocument: void disconnectFromRemoteDocument()>();

        return;
    }

    public boolean isUpdating()
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument;

        $i0 = r0.<com.android.printspooler.model.RemotePrintDocument: int mState>;

        if $i0 == 2 goto label1;

        $i1 = r0.<com.android.printspooler.model.RemotePrintDocument: int mState>;

        if $i1 != 6 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean isDestroyed()
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument;

        $i0 = r0.<com.android.printspooler.model.RemotePrintDocument: int mState>;

        if $i0 != 8 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasUpdateError()
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument;

        $i0 = r0.<com.android.printspooler.model.RemotePrintDocument: int mState>;

        if $i0 != 4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasLaidOutPages()
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo $r1, $r3;
        android.print.PrintDocumentInfo $r2, $r4;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument;

        $r1 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocumentInfo>;

        $r2 = $r1.<com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo: android.print.PrintDocumentInfo info>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocumentInfo>;

        $r4 = $r3.<com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo: android.print.PrintDocumentInfo info>;

        $i0 = virtualinvoke $r4.<android.print.PrintDocumentInfo: int getPageCount()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void clearUpdateError()
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument;

        $z0 = virtualinvoke r0.<com.android.printspooler.model.RemotePrintDocument: boolean hasUpdateError()>();

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No update error to clear");

        throw $r1;

     label1:
        r0.<com.android.printspooler.model.RemotePrintDocument: int mState> = 1;

        return;
    }

    public com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo getDocumentInfo()
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo $r1;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument;

        $r1 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocumentInfo>;

        return $r1;
    }

    public void writeContent(android.content.ContentResolver, android.net.Uri)
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        android.content.ContentResolver r1;
        android.net.Uri r2;
        java.io.File r3;
        java.io.FileInputStream r4, $r10;
        java.io.OutputStream r5;
        byte[] r6;
        int i0;
        java.lang.Throwable r7, $r15;
        com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo $r8, $r11, $r14, $r18;
        com.android.printspooler.model.MutexFileProvider $r9, $r13, $r16, $r17;
        java.io.IOException $r12, r19;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument;

        r1 := @parameter0: android.content.ContentResolver;

        r2 := @parameter1: android.net.Uri;

        r3 = null;

        r4 = null;

        r5 = null;

     label01:
        $r8 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocumentInfo>;

        $r9 = $r8.<com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo: com.android.printspooler.model.MutexFileProvider fileProvider>;

        r3 = virtualinvoke $r9.<com.android.printspooler.model.MutexFileProvider: java.io.File acquireFile(com.android.printspooler.model.MutexFileProvider$OnReleaseRequestCallback)>(null);

        $r10 = new java.io.FileInputStream;

        specialinvoke $r10.<java.io.FileInputStream: void <init>(java.io.File)>(r3);

        r4 = $r10;

        r5 = virtualinvoke r1.<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri)>(r2);

        r6 = newarray (byte)[8192];

     label02:
        i0 = virtualinvoke r4.<java.io.InputStream: int read(byte[])>(r6);

        if i0 >= 0 goto label03;

        goto label04;

     label03:
        virtualinvoke r5.<java.io.OutputStream: void write(byte[],int,int)>(r6, 0, i0);

        goto label02;

     label04:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r5);

        if r3 == null goto label10;

        $r11 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocumentInfo>;

        $r13 = $r11.<com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo: com.android.printspooler.model.MutexFileProvider fileProvider>;

        virtualinvoke $r13.<com.android.printspooler.model.MutexFileProvider: void releaseFile()>();

        goto label10;

     label05:
        $r12 := @caughtexception;

        r19 = $r12;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintDocument", "Error writing document content.", r19);

     label06:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r5);

        if r3 == null goto label10;

        $r14 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocumentInfo>;

        $r16 = $r14.<com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo: com.android.printspooler.model.MutexFileProvider fileProvider>;

        virtualinvoke $r16.<com.android.printspooler.model.MutexFileProvider: void releaseFile()>();

        goto label10;

     label07:
        $r15 := @caughtexception;

        r7 = $r15;

     label08:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r5);

        if r3 == null goto label09;

        $r18 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocumentInfo>;

        $r17 = $r18.<com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo: com.android.printspooler.model.MutexFileProvider fileProvider>;

        virtualinvoke $r17.<com.android.printspooler.model.MutexFileProvider: void releaseFile()>();

     label09:
        throw r7;

     label10:
        return;

        catch java.io.IOException from label01 to label04 with label05;
        catch java.lang.Throwable from label01 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    private void notifyUpdateCanceled()
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        com.android.printspooler.model.RemotePrintDocument$UpdateResultCallbacks $r1;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument;

        $r1 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$UpdateResultCallbacks mUpdateCallbacks>;

        interfaceinvoke $r1.<com.android.printspooler.model.RemotePrintDocument$UpdateResultCallbacks: void onUpdateCanceled()>();

        return;
    }

    private void notifyUpdateCompleted()
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo $r1;
        com.android.printspooler.model.RemotePrintDocument$UpdateResultCallbacks $r2;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument;

        $r2 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$UpdateResultCallbacks mUpdateCallbacks>;

        $r1 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocumentInfo>;

        interfaceinvoke $r2.<com.android.printspooler.model.RemotePrintDocument$UpdateResultCallbacks: void onUpdateCompleted(com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo)>($r1);

        return;
    }

    private void notifyUpdateFailed(java.lang.CharSequence)
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        java.lang.CharSequence r1;
        com.android.printspooler.model.RemotePrintDocument$UpdateResultCallbacks $r2;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$UpdateResultCallbacks mUpdateCallbacks>;

        interfaceinvoke $r2.<com.android.printspooler.model.RemotePrintDocument$UpdateResultCallbacks: void onUpdateFailed(java.lang.CharSequence)>(r1);

        return;
    }

    private void connectToRemoteDocument()
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        android.print.IPrintDocumentAdapter $r2, $r6;
        android.os.IBinder $r3;
        android.os.IBinder$DeathRecipient $r4;
        com.android.printspooler.model.RemotePrintDocument$PrintDocumentAdapterObserver $r5;
        android.os.RemoteException $r7, $r8;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument;

     label1:
        $r2 = r0.<com.android.printspooler.model.RemotePrintDocument: android.print.IPrintDocumentAdapter mPrintDocumentAdapter>;

        $r3 = interfaceinvoke $r2.<android.print.IPrintDocumentAdapter: android.os.IBinder asBinder()>();

        $r4 = r0.<com.android.printspooler.model.RemotePrintDocument: android.os.IBinder$DeathRecipient mDeathRecipient>;

        interfaceinvoke $r3.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r4, 0);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RemotePrintDocument", "The printing process is dead.");

        virtualinvoke r0.<com.android.printspooler.model.RemotePrintDocument: void destroy()>();

        return;

     label4:
        $r6 = r0.<com.android.printspooler.model.RemotePrintDocument: android.print.IPrintDocumentAdapter mPrintDocumentAdapter>;

        $r5 = new com.android.printspooler.model.RemotePrintDocument$PrintDocumentAdapterObserver;

        specialinvoke $r5.<com.android.printspooler.model.RemotePrintDocument$PrintDocumentAdapterObserver: void <init>(com.android.printspooler.model.RemotePrintDocument)>(r0);

        interfaceinvoke $r6.<android.print.IPrintDocumentAdapter: void setObserver(android.print.IPrintDocumentAdapterObserver)>($r5);

     label5:
        goto label7;

     label6:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RemotePrintDocument", "Error setting observer to the print adapter.");

        virtualinvoke r0.<com.android.printspooler.model.RemotePrintDocument: void destroy()>();

     label7:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    private void disconnectFromRemoteDocument()
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        android.print.IPrintDocumentAdapter $r2, $r3;
        android.os.IBinder $r4;
        android.os.IBinder$DeathRecipient $r5;
        android.os.RemoteException $r6;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument;

     label1:
        $r2 = r0.<com.android.printspooler.model.RemotePrintDocument: android.print.IPrintDocumentAdapter mPrintDocumentAdapter>;

        interfaceinvoke $r2.<android.print.IPrintDocumentAdapter: void setObserver(android.print.IPrintDocumentAdapterObserver)>(null);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RemotePrintDocument", "Error setting observer to the print adapter.");

     label4:
        $r3 = r0.<com.android.printspooler.model.RemotePrintDocument: android.print.IPrintDocumentAdapter mPrintDocumentAdapter>;

        $r4 = interfaceinvoke $r3.<android.print.IPrintDocumentAdapter: android.os.IBinder asBinder()>();

        $r5 = r0.<com.android.printspooler.model.RemotePrintDocument: android.os.IBinder$DeathRecipient mDeathRecipient>;

        interfaceinvoke $r4.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r5, 0);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void scheduleCommand(com.android.printspooler.model.RemotePrintDocument$AsyncCommand)
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        com.android.printspooler.model.RemotePrintDocument$AsyncCommand r1, $r2;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument;

        r1 := @parameter0: com.android.printspooler.model.RemotePrintDocument$AsyncCommand;

        $r2 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mCurrentCommand>;

        if $r2 != null goto label1;

        r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mCurrentCommand> = r1;

        goto label2;

     label1:
        r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mNextCommand> = r1;

     label2:
        return;
    }

    private void runPendingCommand()
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        com.android.printspooler.model.RemotePrintDocument$AsyncCommand $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument;

        $r1 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mCurrentCommand>;

        if $r1 == null goto label2;

        $r5 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mCurrentCommand>;

        $z1 = virtualinvoke $r5.<com.android.printspooler.model.RemotePrintDocument$AsyncCommand: boolean isCompleted()>();

        if $z1 != 0 goto label1;

        $r7 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mCurrentCommand>;

        $z2 = virtualinvoke $r7.<com.android.printspooler.model.RemotePrintDocument$AsyncCommand: boolean isCanceled()>();

        if $z2 == 0 goto label2;

     label1:
        $r6 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mNextCommand>;

        r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mCurrentCommand> = $r6;

        r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mNextCommand> = null;

     label2:
        $r2 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mCurrentCommand>;

        if $r2 == null goto label4;

        $r3 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mCurrentCommand>;

        $z0 = virtualinvoke $r3.<com.android.printspooler.model.RemotePrintDocument$AsyncCommand: boolean isPending()>();

        if $z0 == 0 goto label3;

        $r4 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mCurrentCommand>;

        virtualinvoke $r4.<com.android.printspooler.model.RemotePrintDocument$AsyncCommand: void run()>();

     label3:
        r0.<com.android.printspooler.model.RemotePrintDocument: int mState> = 2;

        goto label5;

     label4:
        r0.<com.android.printspooler.model.RemotePrintDocument: int mState> = 3;

     label5:
        return;
    }

    private static java.lang.String stateToString(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label2;
            case 5: goto label1;
            case 6: goto label6;
            case 7: goto label7;
            case 8: goto label8;
            default: goto label9;
        };

     label1:
        return "STATE_FINISHED";

     label2:
        return "STATE_FAILED";

     label3:
        return "STATE_STARTED";

     label4:
        return "STATE_UPDATING";

     label5:
        return "STATE_UPDATED";

     label6:
        return "STATE_CANCELING";

     label7:
        return "STATE_CANCELED";

     label8:
        return "STATE_DESTROYED";

     label9:
        return "STATE_UNKNOWN";
    }

    private void notifyPrintingAppDied()
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        android.os.Handler $r1;
        android.os.Looper $r2;
        com.android.printspooler.model.RemotePrintDocument$3 $r3;

        r0 := @this: com.android.printspooler.model.RemotePrintDocument;

        $r1 = new android.os.Handler;

        $r2 = r0.<com.android.printspooler.model.RemotePrintDocument: android.os.Looper mLooper>;

        specialinvoke $r1.<android.os.Handler: void <init>(android.os.Looper)>($r2);

        $r3 = new com.android.printspooler.model.RemotePrintDocument$3;

        specialinvoke $r3.<com.android.printspooler.model.RemotePrintDocument$3: void <init>(com.android.printspooler.model.RemotePrintDocument)>(r0);

        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    static com.android.printspooler.model.RemotePrintDocument$AsyncCommand access$000(com.android.printspooler.model.RemotePrintDocument)
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        com.android.printspooler.model.RemotePrintDocument$AsyncCommand $r1;

        r0 := @parameter0: com.android.printspooler.model.RemotePrintDocument;

        $r1 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mCurrentCommand>;

        return $r1;
    }

    static com.android.printspooler.model.RemotePrintDocument$AsyncCommand access$100(com.android.printspooler.model.RemotePrintDocument)
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        com.android.printspooler.model.RemotePrintDocument$AsyncCommand $r1;

        r0 := @parameter0: com.android.printspooler.model.RemotePrintDocument;

        $r1 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mNextCommand>;

        return $r1;
    }

    static com.android.printspooler.model.RemotePrintDocument$UpdateSpec access$200(com.android.printspooler.model.RemotePrintDocument)
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        com.android.printspooler.model.RemotePrintDocument$UpdateSpec $r1;

        r0 := @parameter0: com.android.printspooler.model.RemotePrintDocument;

        $r1 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$UpdateSpec mUpdateSpec>;

        return $r1;
    }

    static com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo access$300(com.android.printspooler.model.RemotePrintDocument)
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo $r1;

        r0 := @parameter0: com.android.printspooler.model.RemotePrintDocument;

        $r1 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$RemotePrintDocumentInfo mDocumentInfo>;

        return $r1;
    }

    static com.android.printspooler.model.RemotePrintDocument$AsyncCommand access$102(com.android.printspooler.model.RemotePrintDocument, com.android.printspooler.model.RemotePrintDocument$AsyncCommand)
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        com.android.printspooler.model.RemotePrintDocument$AsyncCommand r1;

        r0 := @parameter0: com.android.printspooler.model.RemotePrintDocument;

        r1 := @parameter1: com.android.printspooler.model.RemotePrintDocument$AsyncCommand;

        r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mNextCommand> = r1;

        return r1;
    }

    static android.content.Context access$400(com.android.printspooler.model.RemotePrintDocument)
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.printspooler.model.RemotePrintDocument;

        $r1 = r0.<com.android.printspooler.model.RemotePrintDocument: android.content.Context mContext>;

        return $r1;
    }

    static android.os.Looper access$500(com.android.printspooler.model.RemotePrintDocument)
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        android.os.Looper $r1;

        r0 := @parameter0: com.android.printspooler.model.RemotePrintDocument;

        $r1 = r0.<com.android.printspooler.model.RemotePrintDocument: android.os.Looper mLooper>;

        return $r1;
    }

    static android.print.IPrintDocumentAdapter access$600(com.android.printspooler.model.RemotePrintDocument)
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        android.print.IPrintDocumentAdapter $r1;

        r0 := @parameter0: com.android.printspooler.model.RemotePrintDocument;

        $r1 = r0.<com.android.printspooler.model.RemotePrintDocument: android.print.IPrintDocumentAdapter mPrintDocumentAdapter>;

        return $r1;
    }

    static com.android.printspooler.model.RemotePrintDocument$CommandDoneCallback access$700(com.android.printspooler.model.RemotePrintDocument)
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        com.android.printspooler.model.RemotePrintDocument$CommandDoneCallback $r1;

        r0 := @parameter0: com.android.printspooler.model.RemotePrintDocument;

        $r1 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$CommandDoneCallback mCommandResultCallback>;

        return $r1;
    }

    static int access$802(com.android.printspooler.model.RemotePrintDocument, int)
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        int i0;

        r0 := @parameter0: com.android.printspooler.model.RemotePrintDocument;

        i0 := @parameter1: int;

        r0.<com.android.printspooler.model.RemotePrintDocument: int mState> = i0;

        return i0;
    }

    static void access$900(com.android.printspooler.model.RemotePrintDocument)
    {
        com.android.printspooler.model.RemotePrintDocument r0;

        r0 := @parameter0: com.android.printspooler.model.RemotePrintDocument;

        specialinvoke r0.<com.android.printspooler.model.RemotePrintDocument: void notifyUpdateCompleted()>();

        return;
    }

    static void access$1000(com.android.printspooler.model.RemotePrintDocument)
    {
        com.android.printspooler.model.RemotePrintDocument r0;

        r0 := @parameter0: com.android.printspooler.model.RemotePrintDocument;

        specialinvoke r0.<com.android.printspooler.model.RemotePrintDocument: void runPendingCommand()>();

        return;
    }

    static com.android.printspooler.model.RemotePrintDocument$AsyncCommand access$002(com.android.printspooler.model.RemotePrintDocument, com.android.printspooler.model.RemotePrintDocument$AsyncCommand)
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        com.android.printspooler.model.RemotePrintDocument$AsyncCommand r1;

        r0 := @parameter0: com.android.printspooler.model.RemotePrintDocument;

        r1 := @parameter1: com.android.printspooler.model.RemotePrintDocument$AsyncCommand;

        r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$AsyncCommand mCurrentCommand> = r1;

        return r1;
    }

    static void access$1100(com.android.printspooler.model.RemotePrintDocument, java.lang.CharSequence)
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        java.lang.CharSequence r1;

        r0 := @parameter0: com.android.printspooler.model.RemotePrintDocument;

        r1 := @parameter1: java.lang.CharSequence;

        specialinvoke r0.<com.android.printspooler.model.RemotePrintDocument: void notifyUpdateFailed(java.lang.CharSequence)>(r1);

        return;
    }

    static int access$800(com.android.printspooler.model.RemotePrintDocument)
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        int $i0;

        r0 := @parameter0: com.android.printspooler.model.RemotePrintDocument;

        $i0 = r0.<com.android.printspooler.model.RemotePrintDocument: int mState>;

        return $i0;
    }

    static void access$1200(com.android.printspooler.model.RemotePrintDocument)
    {
        com.android.printspooler.model.RemotePrintDocument r0;

        r0 := @parameter0: com.android.printspooler.model.RemotePrintDocument;

        specialinvoke r0.<com.android.printspooler.model.RemotePrintDocument: void notifyUpdateCanceled()>();

        return;
    }

    static void access$1300(com.android.printspooler.model.RemotePrintDocument)
    {
        com.android.printspooler.model.RemotePrintDocument r0;

        r0 := @parameter0: com.android.printspooler.model.RemotePrintDocument;

        specialinvoke r0.<com.android.printspooler.model.RemotePrintDocument: void notifyPrintingAppDied()>();

        return;
    }

    static com.android.printspooler.model.RemotePrintDocument$RemoteAdapterDeathObserver access$2500(com.android.printspooler.model.RemotePrintDocument)
    {
        com.android.printspooler.model.RemotePrintDocument r0;
        com.android.printspooler.model.RemotePrintDocument$RemoteAdapterDeathObserver $r1;

        r0 := @parameter0: com.android.printspooler.model.RemotePrintDocument;

        $r1 = r0.<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument$RemoteAdapterDeathObserver mAdapterDeathObserver>;

        return $r1;
    }

    public static void <clinit>()
    {
        <com.android.printspooler.model.RemotePrintDocument: int STATE_DESTROYED> = 8;

        <com.android.printspooler.model.RemotePrintDocument: int STATE_CANCELED> = 7;

        <com.android.printspooler.model.RemotePrintDocument: int STATE_CANCELING> = 6;

        <com.android.printspooler.model.RemotePrintDocument: int STATE_FINISHED> = 5;

        <com.android.printspooler.model.RemotePrintDocument: int STATE_FAILED> = 4;

        <com.android.printspooler.model.RemotePrintDocument: int STATE_UPDATED> = 3;

        <com.android.printspooler.model.RemotePrintDocument: int STATE_UPDATING> = 2;

        <com.android.printspooler.model.RemotePrintDocument: int STATE_STARTED> = 1;

        <com.android.printspooler.model.RemotePrintDocument: int STATE_INITIAL> = 0;

        <com.android.printspooler.model.RemotePrintDocument: boolean DEBUG> = 0;

        <com.android.printspooler.model.RemotePrintDocument: java.lang.String LOG_TAG> = "RemotePrintDocument";

        return;
    }
}
