public final class com.android.printspooler.model.PrintSpoolerService extends android.app.Service
{
    private static final java.lang.String LOG_TAG;
    private static final boolean DEBUG_PRINT_JOB_LIFECYCLE;
    private static final boolean DEBUG_PERSISTENCE;
    private static final boolean PERSISTNECE_MANAGER_ENABLED;
    private static final long CHECK_ALL_PRINTJOBS_HANDLED_DELAY;
    private static final java.lang.String PRINT_JOB_FILE_PREFIX;
    private static final java.lang.String PRINT_FILE_EXTENSION;
    private static final java.lang.Object sLock;
    private final java.lang.Object mLock;
    private final java.util.List mPrintJobs;
    private static com.android.printspooler.model.PrintSpoolerService sInstance;
    private android.print.IPrintSpoolerClient mClient;
    private com.android.internal.os.HandlerCaller mHandlerCaller;
    private com.android.printspooler.model.PrintSpoolerService$PersistenceManager mPersistanceManager;
    private com.android.printspooler.model.NotificationController mNotificationController;

    public void <init>()
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        java.lang.Object $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<com.android.printspooler.model.PrintSpoolerService: java.lang.Object mLock> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.printspooler.model.PrintSpoolerService: java.util.List mPrintJobs> = $r2;

        return;
    }

    public static com.android.printspooler.model.PrintSpoolerService peekInstance()
    {
        java.lang.Object r0, $r2;
        java.lang.Throwable r1, $r4;
        com.android.printspooler.model.PrintSpoolerService $r3;

        $r2 = <com.android.printspooler.model.PrintSpoolerService: java.lang.Object sLock>;

        r0 = $r2;

        entermonitor $r2;

     label1:
        $r3 = <com.android.printspooler.model.PrintSpoolerService: com.android.printspooler.model.PrintSpoolerService sInstance>;

        exitmonitor r0;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        exitmonitor r0;

     label4:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void onCreate()
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        java.lang.Object r1, $r9, $r11, r14;
        java.lang.Throwable r2, r3, $r12, $r13;
        com.android.internal.os.HandlerCaller $r4;
        android.os.Looper $r5;
        com.android.printspooler.model.PrintSpoolerService$HandlerCallerCallback $r6;
        com.android.printspooler.model.PrintSpoolerService$PersistenceManager $r7, $r10;
        com.android.printspooler.model.NotificationController $r8;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        specialinvoke r0.<android.app.Service: void onCreate()>();

        $r4 = new com.android.internal.os.HandlerCaller;

        $r5 = virtualinvoke r0.<com.android.printspooler.model.PrintSpoolerService: android.os.Looper getMainLooper()>();

        $r6 = new com.android.printspooler.model.PrintSpoolerService$HandlerCallerCallback;

        specialinvoke $r6.<com.android.printspooler.model.PrintSpoolerService$HandlerCallerCallback: void <init>(com.android.printspooler.model.PrintSpoolerService,com.android.printspooler.model.PrintSpoolerService$1)>(r0, null);

        specialinvoke $r4.<com.android.internal.os.HandlerCaller: void <init>(android.content.Context,android.os.Looper,com.android.internal.os.HandlerCaller$Callback,boolean)>(r0, $r5, $r6, 0);

        r0.<com.android.printspooler.model.PrintSpoolerService: com.android.internal.os.HandlerCaller mHandlerCaller> = $r4;

        $r7 = new com.android.printspooler.model.PrintSpoolerService$PersistenceManager;

        specialinvoke $r7.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void <init>(com.android.printspooler.model.PrintSpoolerService,com.android.printspooler.model.PrintSpoolerService$1)>(r0, null);

        r0.<com.android.printspooler.model.PrintSpoolerService: com.android.printspooler.model.PrintSpoolerService$PersistenceManager mPersistanceManager> = $r7;

        $r8 = new com.android.printspooler.model.NotificationController;

        specialinvoke $r8.<com.android.printspooler.model.NotificationController: void <init>(android.content.Context)>(r0);

        r0.<com.android.printspooler.model.PrintSpoolerService: com.android.printspooler.model.NotificationController mNotificationController> = $r8;

        $r9 = r0.<com.android.printspooler.model.PrintSpoolerService: java.lang.Object mLock>;

        r1 = $r9;

        entermonitor $r9;

     label01:
        $r10 = r0.<com.android.printspooler.model.PrintSpoolerService: com.android.printspooler.model.PrintSpoolerService$PersistenceManager mPersistanceManager>;

        virtualinvoke $r10.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void readStateLocked()>();

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService: void handleReadPrintJobsLocked()>();

        exitmonitor r1;

     label02:
        goto label05;

     label03:
        $r12 := @caughtexception;

        r2 = $r12;

        exitmonitor r1;

     label04:
        throw r2;

     label05:
        $r11 = <com.android.printspooler.model.PrintSpoolerService: java.lang.Object sLock>;

        r14 = $r11;

        entermonitor $r11;

     label06:
        <com.android.printspooler.model.PrintSpoolerService: com.android.printspooler.model.PrintSpoolerService sInstance> = r0;

        exitmonitor r14;

     label07:
        goto label10;

     label08:
        $r13 := @caughtexception;

        r3 = $r13;

        exitmonitor r14;

     label09:
        throw r3;

     label10:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        android.content.Intent r1;
        com.android.printspooler.model.PrintSpoolerService$PrintSpooler $r2;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        r1 := @parameter0: android.content.Intent;

        $r2 = new com.android.printspooler.model.PrintSpoolerService$PrintSpooler;

        specialinvoke $r2.<com.android.printspooler.model.PrintSpoolerService$PrintSpooler: void <init>(com.android.printspooler.model.PrintSpoolerService)>(r0);

        return $r2;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2, $r11, $r13, $r14, $r16, $r18, $r20, $r22, $r23, $r26;
        java.lang.String[] r3;
        java.lang.Object r4, $r10, $r25;
        java.lang.String r5, r6, $r17, $r19, $r24, $r29;
        int i0, i1, i2, $i3, i4;
        android.print.PrintJobInfo r7;
        java.io.File r8, $r15;
        java.lang.Throwable r9, $r27;
        java.util.List $r12, $r21;
        boolean $z0, $z1;
        java.io.File[] r30;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r10 = r0.<com.android.printspooler.model.PrintSpoolerService: java.lang.Object mLock>;

        r4 = $r10;

        entermonitor $r10;

     label01:
        $i3 = lengthof r3;

        if $i3 <= 0 goto label02;

        $r29 = r3[0];

        goto label03;

     label02:
        $r29 = "";

     label03:
        r5 = $r29;

        r6 = "  ";

        $r11 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r5);

        $r13 = virtualinvoke $r11.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("print jobs:");

        virtualinvoke $r13.<java.io.PrintWriter: void println()>();

        $r12 = r0.<com.android.printspooler.model.PrintSpoolerService: java.util.List mPrintJobs>;

        i0 = interfaceinvoke $r12.<java.util.List: int size()>();

        i1 = 0;

     label04:
        if i1 >= i0 goto label05;

        $r21 = r0.<com.android.printspooler.model.PrintSpoolerService: java.util.List mPrintJobs>;

        $r25 = interfaceinvoke $r21.<java.util.List: java.lang.Object get(int)>(i1);

        r7 = (android.print.PrintJobInfo) $r25;

        $r26 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r5);

        $r23 = virtualinvoke $r26.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r6);

        $r24 = virtualinvoke r7.<android.print.PrintJobInfo: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r24);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        i1 = i1 + 1;

        goto label04;

     label05:
        $r14 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r5);

        $r16 = virtualinvoke $r14.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("print job files:");

        virtualinvoke $r16.<java.io.PrintWriter: void println()>();

        $r15 = virtualinvoke r0.<com.android.printspooler.model.PrintSpoolerService: java.io.File getFilesDir()>();

        r30 = virtualinvoke $r15.<java.io.File: java.io.File[] listFiles()>();

        if r30 == null goto label08;

        i4 = lengthof r30;

        i2 = 0;

     label06:
        if i2 >= i4 goto label08;

        r8 = r30[i2];

        $z0 = virtualinvoke r8.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label07;

        $r17 = virtualinvoke r8.<java.io.File: java.lang.String getName()>();

        $z1 = virtualinvoke $r17.<java.lang.String: boolean startsWith(java.lang.String)>("print_job_");

        if $z1 == 0 goto label07;

        $r18 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r5);

        $r20 = virtualinvoke $r18.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r6);

        $r19 = virtualinvoke r8.<java.io.File: java.lang.String getName()>();

        $r22 = virtualinvoke $r20.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r19);

        virtualinvoke $r22.<java.io.PrintWriter: void println()>();

     label07:
        i2 = i2 + 1;

        goto label06;

     label08:
        exitmonitor r4;

     label09:
        goto label12;

     label10:
        $r27 := @caughtexception;

        r9 = $r27;

        exitmonitor r4;

     label11:
        throw r9;

     label12:
        return;

        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private void sendOnPrintJobQueued(android.print.PrintJobInfo)
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        android.print.PrintJobInfo r1;
        android.os.Message r2;
        com.android.internal.os.HandlerCaller $r3, $r4;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        r1 := @parameter0: android.print.PrintJobInfo;

        $r3 = r0.<com.android.printspooler.model.PrintSpoolerService: com.android.internal.os.HandlerCaller mHandlerCaller>;

        r2 = virtualinvoke $r3.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(2, r1);

        $r4 = r0.<com.android.printspooler.model.PrintSpoolerService: com.android.internal.os.HandlerCaller mHandlerCaller>;

        virtualinvoke $r4.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>(r2);

        return;
    }

    private void sendOnAllPrintJobsForServiceHandled(android.content.ComponentName)
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        android.content.ComponentName r1;
        android.os.Message r2;
        com.android.internal.os.HandlerCaller $r3, $r4;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        r1 := @parameter0: android.content.ComponentName;

        $r3 = r0.<com.android.printspooler.model.PrintSpoolerService: com.android.internal.os.HandlerCaller mHandlerCaller>;

        r2 = virtualinvoke $r3.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(3, r1);

        $r4 = r0.<com.android.printspooler.model.PrintSpoolerService: com.android.internal.os.HandlerCaller mHandlerCaller>;

        virtualinvoke $r4.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>(r2);

        return;
    }

    private void sendOnAllPrintJobsHandled()
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        android.os.Message r1;
        com.android.internal.os.HandlerCaller $r2, $r3;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        $r2 = r0.<com.android.printspooler.model.PrintSpoolerService: com.android.internal.os.HandlerCaller mHandlerCaller>;

        r1 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessage(int)>(4);

        $r3 = r0.<com.android.printspooler.model.PrintSpoolerService: com.android.internal.os.HandlerCaller mHandlerCaller>;

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>(r1);

        return;
    }

    public java.util.List getPrintJobInfos(android.content.ComponentName, int, int)
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        android.content.ComponentName r1, $r12;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8;
        java.util.ArrayList r2, $r11;
        java.lang.Object r3, $r7, $r9;
        android.print.PrintJobInfo r4;
        android.print.PrinterId r5;
        boolean z0, z1, z2, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.Throwable r6, $r13;
        java.util.List $r8, $r10;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = null;

        $r7 = r0.<com.android.printspooler.model.PrintSpoolerService: java.lang.Object mLock>;

        r3 = $r7;

        entermonitor $r7;

     label01:
        $r8 = r0.<com.android.printspooler.model.PrintSpoolerService: java.util.List mPrintJobs>;

        i2 = interfaceinvoke $r8.<java.util.List: int size()>();

        i3 = 0;

     label02:
        if i3 >= i2 goto label16;

        $r10 = r0.<com.android.printspooler.model.PrintSpoolerService: java.util.List mPrintJobs>;

        $r9 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i3);

        r4 = (android.print.PrintJobInfo) $r9;

        r5 = virtualinvoke r4.<android.print.PrintJobInfo: android.print.PrinterId getPrinterId()>();

        if r1 == null goto label03;

        if r5 == null goto label04;

        $r12 = virtualinvoke r5.<android.print.PrinterId: android.content.ComponentName getServiceName()>();

        $z8 = virtualinvoke r1.<android.content.ComponentName: boolean equals(java.lang.Object)>($r12);

        if $z8 == 0 goto label04;

     label03:
        $z10 = 1;

        goto label05;

     label04:
        $z10 = 0;

     label05:
        z0 = $z10;

        if i1 == -2 goto label06;

        $i8 = virtualinvoke r4.<android.print.PrintJobInfo: int getAppId()>();

        if $i8 != i1 goto label07;

     label06:
        $z9 = 1;

        goto label08;

     label07:
        $z9 = 0;

     label08:
        z1 = $z9;

        $i4 = virtualinvoke r4.<android.print.PrintJobInfo: int getState()>();

        if i0 == $i4 goto label11;

        if i0 == -1 goto label11;

        if i0 != -2 goto label09;

        $i7 = virtualinvoke r4.<android.print.PrintJobInfo: int getState()>();

        $z7 = specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService: boolean isStateVisibleToUser(int)>($i7);

        if $z7 != 0 goto label11;

     label09:
        if i0 != -3 goto label10;

        $i6 = virtualinvoke r4.<android.print.PrintJobInfo: int getState()>();

        $z6 = specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService: boolean isActiveState(int)>($i6);

        if $z6 != 0 goto label11;

     label10:
        if i0 != -4 goto label12;

        $i5 = virtualinvoke r4.<android.print.PrintJobInfo: int getState()>();

        $z5 = specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService: boolean isScheduledState(int)>($i5);

        if $z5 == 0 goto label12;

     label11:
        $z4 = 1;

        goto label13;

     label12:
        $z4 = 0;

     label13:
        z2 = $z4;

        if z0 == 0 goto label15;

        if z1 == 0 goto label15;

        if z2 == 0 goto label15;

        if r2 != null goto label14;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r2 = $r11;

     label14:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4);

     label15:
        i3 = i3 + 1;

        goto label02;

     label16:
        exitmonitor r3;

     label17:
        goto label20;

     label18:
        $r13 := @caughtexception;

        r6 = $r13;

        exitmonitor r3;

     label19:
        throw r6;

     label20:
        return r2;

        catch java.lang.Throwable from label01 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    private boolean isStateVisibleToUser(int)
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        int i0;
        boolean $z0, $z1;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService: boolean isActiveState(int)>(i0);

        if $z0 == 0 goto label2;

        if i0 == 6 goto label1;

        if i0 == 5 goto label1;

        if i0 == 7 goto label1;

        if i0 != 4 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId, int)
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        android.print.PrintJobId r1, $r9;
        int i0, i1, i2, $i3;
        java.lang.Object r2, $r5, $r8;
        android.print.PrintJobInfo r3;
        java.lang.Throwable r4, $r10;
        java.util.List $r6, $r7;
        boolean $z0;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        r1 := @parameter0: android.print.PrintJobId;

        i0 := @parameter1: int;

        $r5 = r0.<com.android.printspooler.model.PrintSpoolerService: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.printspooler.model.PrintSpoolerService: java.util.List mPrintJobs>;

        i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        i2 = 0;

     label2:
        if i2 >= i1 goto label6;

        $r7 = r0.<com.android.printspooler.model.PrintSpoolerService: java.util.List mPrintJobs>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i2);

        r3 = (android.print.PrintJobInfo) $r8;

        $r9 = virtualinvoke r3.<android.print.PrintJobInfo: android.print.PrintJobId getId()>();

        $z0 = virtualinvoke $r9.<android.print.PrintJobId: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label5;

        if i0 == -2 goto label3;

        $i3 = virtualinvoke r3.<android.print.PrintJobInfo: int getAppId()>();

        if i0 != $i3 goto label5;

     label3:
        exitmonitor r2;

     label4:
        return r3;

     label5:
        i2 = i2 + 1;

        goto label2;

     label6:
        exitmonitor r2;

     label7:
        return null;

     label8:
        $r10 := @caughtexception;

        r4 = $r10;

        exitmonitor r2;

     label9:
        throw r4;

        catch java.lang.Throwable from label1 to label4 with label8;
        catch java.lang.Throwable from label5 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public void createPrintJob(android.print.PrintJobInfo)
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        android.print.PrintJobInfo r1;
        java.lang.Object r2, $r5;
        android.os.Message r3;
        java.lang.Throwable r4, $r9;
        android.print.PrintJobId $r6;
        com.android.internal.os.HandlerCaller $r7, $r8;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        r1 := @parameter0: android.print.PrintJobInfo;

        $r5 = r0.<com.android.printspooler.model.PrintSpoolerService: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService: void addPrintJobLocked(android.print.PrintJobInfo)>(r1);

        $r6 = virtualinvoke r1.<android.print.PrintJobInfo: android.print.PrintJobId getId()>();

        virtualinvoke r0.<com.android.printspooler.model.PrintSpoolerService: boolean setPrintJobState(android.print.PrintJobId,int,java.lang.String)>($r6, 1, null);

        $r7 = r0.<com.android.printspooler.model.PrintSpoolerService: com.android.internal.os.HandlerCaller mHandlerCaller>;

        r3 = virtualinvoke $r7.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(6, r1);

        $r8 = r0.<com.android.printspooler.model.PrintSpoolerService: com.android.internal.os.HandlerCaller mHandlerCaller>;

        virtualinvoke $r8.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>(r3);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r2;

     label4:
        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void handleReadPrintJobsLocked()
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        android.util.ArrayMap r1, $r23;
        java.io.File[] r2;
        int i0, i1, $i2, $i3, $i4, i5, i6, i7, i8;
        java.io.File r3, $r6, r25;
        java.lang.String r4, $r15, $r18, $r19, $r20, $r21;
        android.print.PrintJobId r5, $r14, $r17;
        java.util.List $r7, $r8, $r10, $r11;
        boolean $z0, $z3, $z4;
        java.lang.Object $r9, $r13;
        com.android.printspooler.model.NotificationController $r12;
        android.print.PrintJobInfo r24;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        r1 = null;

        $r6 = virtualinvoke r0.<com.android.printspooler.model.PrintSpoolerService: java.io.File getFilesDir()>();

        r2 = virtualinvoke $r6.<java.io.File: java.io.File[] listFiles()>();

        if r2 == null goto label04;

        i0 = lengthof r2;

        i1 = 0;

     label01:
        if i1 >= i0 goto label04;

        r3 = r2[i1];

        $z3 = virtualinvoke r3.<java.io.File: boolean isFile()>();

        if $z3 == 0 goto label03;

        $r18 = virtualinvoke r3.<java.io.File: java.lang.String getName()>();

        $z4 = virtualinvoke $r18.<java.lang.String: boolean startsWith(java.lang.String)>("print_job_");

        if $z4 == 0 goto label03;

        if r1 != null goto label02;

        $r23 = new android.util.ArrayMap;

        specialinvoke $r23.<android.util.ArrayMap: void <init>()>();

        r1 = $r23;

     label02:
        $r19 = virtualinvoke r3.<java.io.File: java.lang.String getName()>();

        $r21 = "print_job_";

        $i4 = virtualinvoke $r21.<java.lang.String: int length()>();

        $r20 = virtualinvoke r3.<java.io.File: java.lang.String getName()>();

        $i3 = virtualinvoke $r20.<java.lang.String: int indexOf(int)>(46);

        r4 = virtualinvoke $r19.<java.lang.String: java.lang.String substring(int,int)>($i4, $i3);

        r5 = staticinvoke <android.print.PrintJobId: android.print.PrintJobId unflattenFromString(java.lang.String)>(r4);

        virtualinvoke r1.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r3);

     label03:
        i1 = i1 + 1;

        goto label01;

     label04:
        $r7 = r0.<com.android.printspooler.model.PrintSpoolerService: java.util.List mPrintJobs>;

        i5 = interfaceinvoke $r7.<java.util.List: int size()>();

        i6 = 0;

     label05:
        if i6 >= i5 goto label09;

        $r11 = r0.<com.android.printspooler.model.PrintSpoolerService: java.util.List mPrintJobs>;

        $r13 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i6);

        r24 = (android.print.PrintJobInfo) $r13;

        if r1 == null goto label06;

        $r17 = virtualinvoke r24.<android.print.PrintJobInfo: android.print.PrintJobId getId()>();

        virtualinvoke r1.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r17);

     label06:
        $i2 = virtualinvoke r24.<android.print.PrintJobInfo: int getState()>();

        tableswitch($i2)
        {
            case 2: goto label07;
            case 3: goto label07;
            case 4: goto label07;
            default: goto label08;
        };

     label07:
        $r14 = virtualinvoke r24.<android.print.PrintJobInfo: android.print.PrintJobId getId()>();

        $r15 = virtualinvoke r0.<com.android.printspooler.model.PrintSpoolerService: java.lang.String getString(int)>(2131296308);

        virtualinvoke r0.<com.android.printspooler.model.PrintSpoolerService: boolean setPrintJobState(android.print.PrintJobId,int,java.lang.String)>($r14, 6, $r15);

     label08:
        i6 = i6 + 1;

        goto label05;

     label09:
        $r8 = r0.<com.android.printspooler.model.PrintSpoolerService: java.util.List mPrintJobs>;

        $z0 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label10;

        $r12 = r0.<com.android.printspooler.model.PrintSpoolerService: com.android.printspooler.model.NotificationController mNotificationController>;

        $r10 = r0.<com.android.printspooler.model.PrintSpoolerService: java.util.List mPrintJobs>;

        virtualinvoke $r12.<com.android.printspooler.model.NotificationController: void onUpdateNotifications(java.util.List)>($r10);

     label10:
        if r1 == null goto label12;

        i7 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

        i8 = 0;

     label11:
        if i8 >= i7 goto label12;

        $r9 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i8);

        r25 = (java.io.File) $r9;

        virtualinvoke r25.<java.io.File: boolean delete()>();

        i8 = i8 + 1;

        goto label11;

     label12:
        return;
    }

    public void checkAllPrintJobsHandled()
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;
        boolean $z0;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        $r3 = r0.<com.android.printspooler.model.PrintSpoolerService: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $z0 = virtualinvoke r0.<com.android.printspooler.model.PrintSpoolerService: boolean hasActivePrintJobsLocked()>();

        if $z0 != 0 goto label2;

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService: void notifyOnAllPrintJobsHandled()>();

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void writePrintJobData(android.os.ParcelFileDescriptor, android.print.PrintJobId)
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        android.os.ParcelFileDescriptor r1;
        android.print.PrintJobId r2;
        android.print.PrintJobInfo r3;
        java.lang.Object r4, $r6;
        java.lang.Throwable r5, $r11;
        com.android.printspooler.model.PrintSpoolerService$1 $r7;
        java.lang.Void[] $r8;
        java.util.concurrent.Executor $r9;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 := @parameter1: android.print.PrintJobId;

        $r6 = r0.<com.android.printspooler.model.PrintSpoolerService: java.lang.Object mLock>;

        r4 = $r6;

        entermonitor $r6;

     label1:
        r3 = virtualinvoke r0.<com.android.printspooler.model.PrintSpoolerService: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId,int)>(r2, -2);

        exitmonitor r4;

     label2:
        goto label5;

     label3:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r4;

     label4:
        throw r5;

     label5:
        $r7 = new com.android.printspooler.model.PrintSpoolerService$1;

        specialinvoke $r7.<com.android.printspooler.model.PrintSpoolerService$1: void <init>(com.android.printspooler.model.PrintSpoolerService,android.print.PrintJobInfo,android.print.PrintJobId,android.os.ParcelFileDescriptor)>(r0, r3, r2, r1);

        $r9 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r8 = (java.lang.Void[]) null;

        virtualinvoke $r7.<com.android.printspooler.model.PrintSpoolerService$1: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r9, $r8);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static java.io.File generateFileForPrintJob(android.content.Context, android.print.PrintJobId)
    {
        android.content.Context r0;
        android.print.PrintJobId r1;
        java.io.File $r2, $r3;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r9;
        java.lang.String $r6, $r10;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.print.PrintJobId;

        $r2 = new java.io.File;

        $r3 = virtualinvoke r0.<android.content.Context: java.io.File getFilesDir()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("print_job_");

        $r6 = virtualinvoke r1.<android.print.PrintJobId: java.lang.String flattenToString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pdf");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r10);

        return $r2;
    }

    private void addPrintJobLocked(android.print.PrintJobInfo)
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        android.print.PrintJobInfo r1;
        java.util.List $r2;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        r1 := @parameter0: android.print.PrintJobInfo;

        $r2 = r0.<com.android.printspooler.model.PrintSpoolerService: java.util.List mPrintJobs>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    private void removeObsoletePrintJobs()
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        java.lang.Object r1, $r4, $r8;
        boolean z0, $z1;
        int i0, i1, $i2;
        android.print.PrintJobInfo r2;
        java.lang.Throwable r3, $r11;
        java.util.List $r5, $r7, $r10;
        com.android.printspooler.model.PrintSpoolerService$PersistenceManager $r6;
        android.print.PrintJobId $r12;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        $r4 = r0.<com.android.printspooler.model.PrintSpoolerService: java.lang.Object mLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        z0 = 0;

        $r5 = r0.<com.android.printspooler.model.PrintSpoolerService: java.util.List mPrintJobs>;

        i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        i1 = i0 - 1;

     label2:
        if i1 < 0 goto label4;

        $r7 = r0.<com.android.printspooler.model.PrintSpoolerService: java.util.List mPrintJobs>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i1);

        r2 = (android.print.PrintJobInfo) $r8;

        $i2 = virtualinvoke r2.<android.print.PrintJobInfo: int getState()>();

        $z1 = specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService: boolean isObsoleteState(int)>($i2);

        if $z1 == 0 goto label3;

        $r10 = r0.<com.android.printspooler.model.PrintSpoolerService: java.util.List mPrintJobs>;

        interfaceinvoke $r10.<java.util.List: java.lang.Object remove(int)>(i1);

        $r12 = virtualinvoke r2.<android.print.PrintJobInfo: android.print.PrintJobId getId()>();

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService: void removePrintJobFileLocked(android.print.PrintJobId)>($r12);

        z0 = 1;

     label3:
        i1 = i1 + -1;

        goto label2;

     label4:
        if z0 == 0 goto label5;

        $r6 = r0.<com.android.printspooler.model.PrintSpoolerService: com.android.printspooler.model.PrintSpoolerService$PersistenceManager mPersistanceManager>;

        virtualinvoke $r6.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void writeStateLocked()>();

     label5:
        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r1;

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private void removePrintJobFileLocked(android.print.PrintJobId)
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        android.print.PrintJobId r1;
        java.io.File r2;
        boolean $z0;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        r1 := @parameter0: android.print.PrintJobId;

        r2 = staticinvoke <com.android.printspooler.model.PrintSpoolerService: java.io.File generateFileForPrintJob(android.content.Context,android.print.PrintJobId)>(r0, r1);

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        virtualinvoke r2.<java.io.File: boolean delete()>();

     label1:
        return;
    }

    public boolean setPrintJobState(android.print.PrintJobId, int, java.lang.String)
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        android.print.PrintJobId r1, $r10;
        int i0, i1;
        java.lang.String r2;
        boolean z0, $z2, $z3, $z4;
        java.lang.Object r3, $r8;
        android.print.PrintJobInfo r4, $r16;
        android.print.PrinterId r5;
        android.content.ComponentName r6;
        java.lang.Throwable r7, $r17;
        java.util.List $r9, $r14;
        com.android.internal.os.HandlerCaller $r11, $r12;
        com.android.printspooler.model.NotificationController $r13;
        com.android.printspooler.model.PrintSpoolerService$PersistenceManager $r15;
        android.os.Message r18;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        r1 := @parameter0: android.print.PrintJobId;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        z0 = 0;

        $r8 = r0.<com.android.printspooler.model.PrintSpoolerService: java.lang.Object mLock>;

        r3 = $r8;

        entermonitor $r8;

     label01:
        r4 = virtualinvoke r0.<com.android.printspooler.model.PrintSpoolerService: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId,int)>(r1, -2);

        if r4 == null goto label11;

        i1 = virtualinvoke r4.<android.print.PrintJobInfo: int getState()>();

        if i1 != i0 goto label03;

        exitmonitor r3;

     label02:
        return 0;

     label03:
        z0 = 1;

        virtualinvoke r4.<android.print.PrintJobInfo: void setState(int)>(i0);

        virtualinvoke r4.<android.print.PrintJobInfo: void setStateReason(java.lang.String)>(r2);

        virtualinvoke r4.<android.print.PrintJobInfo: void setCancelling(boolean)>(0);

        tableswitch(i0)
        {
            case 2: goto label07;
            case 3: goto label08;
            case 4: goto label08;
            case 5: goto label04;
            case 6: goto label05;
            case 7: goto label04;
            default: goto label08;
        };

     label04:
        $r9 = r0.<com.android.printspooler.model.PrintSpoolerService: java.util.List mPrintJobs>;

        interfaceinvoke $r9.<java.util.List: boolean remove(java.lang.Object)>(r4);

        $r10 = virtualinvoke r4.<android.print.PrintJobInfo: android.print.PrintJobId getId()>();

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService: void removePrintJobFileLocked(android.print.PrintJobId)>($r10);

     label05:
        r5 = virtualinvoke r4.<android.print.PrintJobInfo: android.print.PrinterId getPrinterId()>();

        if r5 == null goto label06;

        r6 = virtualinvoke r5.<android.print.PrinterId: android.content.ComponentName getServiceName()>();

        $z4 = virtualinvoke r0.<com.android.printspooler.model.PrintSpoolerService: boolean hasActivePrintJobsForServiceLocked(android.content.ComponentName)>(r6);

        if $z4 != 0 goto label06;

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService: void sendOnAllPrintJobsForServiceHandled(android.content.ComponentName)>(r6);

     label06:
        goto label08;

     label07:
        $r16 = new android.print.PrintJobInfo;

        specialinvoke $r16.<android.print.PrintJobInfo: void <init>(android.print.PrintJobInfo)>(r4);

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService: void sendOnPrintJobQueued(android.print.PrintJobInfo)>($r16);

     label08:
        $z2 = specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService: boolean shouldPersistPrintJob(android.print.PrintJobInfo)>(r4);

        if $z2 == 0 goto label09;

        $r15 = r0.<com.android.printspooler.model.PrintSpoolerService: com.android.printspooler.model.PrintSpoolerService$PersistenceManager mPersistanceManager>;

        virtualinvoke $r15.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void writeStateLocked()>();

     label09:
        $z3 = virtualinvoke r0.<com.android.printspooler.model.PrintSpoolerService: boolean hasActivePrintJobsLocked()>();

        if $z3 != 0 goto label10;

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService: void notifyOnAllPrintJobsHandled()>();

     label10:
        $r11 = r0.<com.android.printspooler.model.PrintSpoolerService: com.android.internal.os.HandlerCaller mHandlerCaller>;

        r18 = virtualinvoke $r11.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(6, r4);

        $r12 = r0.<com.android.printspooler.model.PrintSpoolerService: com.android.internal.os.HandlerCaller mHandlerCaller>;

        virtualinvoke $r12.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>(r18);

        $r13 = r0.<com.android.printspooler.model.PrintSpoolerService: com.android.printspooler.model.NotificationController mNotificationController>;

        $r14 = r0.<com.android.printspooler.model.PrintSpoolerService: java.util.List mPrintJobs>;

        virtualinvoke $r13.<com.android.printspooler.model.NotificationController: void onUpdateNotifications(java.util.List)>($r14);

     label11:
        exitmonitor r3;

     label12:
        goto label15;

     label13:
        $r17 := @caughtexception;

        r7 = $r17;

        exitmonitor r3;

     label14:
        throw r7;

     label15:
        return z0;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public boolean hasActivePrintJobsLocked()
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        int i0, i1, $i2;
        android.print.PrintJobInfo r1;
        java.util.List $r2, $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        $r2 = r0.<com.android.printspooler.model.PrintSpoolerService: java.util.List mPrintJobs>;

        i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = r0.<com.android.printspooler.model.PrintSpoolerService: java.util.List mPrintJobs>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        r1 = (android.print.PrintJobInfo) $r4;

        $i2 = virtualinvoke r1.<android.print.PrintJobInfo: int getState()>();

        $z0 = specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService: boolean isActiveState(int)>($i2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public boolean hasActivePrintJobsForServiceLocked(android.content.ComponentName)
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        android.content.ComponentName r1, $r8;
        int i0, i1, $i2;
        android.print.PrintJobInfo r2;
        java.util.List $r3, $r4;
        java.lang.Object $r5;
        boolean $z0, $z1;
        android.print.PrinterId $r6, $r7;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        r1 := @parameter0: android.content.ComponentName;

        $r3 = r0.<com.android.printspooler.model.PrintSpoolerService: java.util.List mPrintJobs>;

        i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r4 = r0.<com.android.printspooler.model.PrintSpoolerService: java.util.List mPrintJobs>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r2 = (android.print.PrintJobInfo) $r5;

        $i2 = virtualinvoke r2.<android.print.PrintJobInfo: int getState()>();

        $z0 = specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService: boolean isActiveState(int)>($i2);

        if $z0 == 0 goto label2;

        $r6 = virtualinvoke r2.<android.print.PrintJobInfo: android.print.PrinterId getPrinterId()>();

        if $r6 == null goto label2;

        $r7 = virtualinvoke r2.<android.print.PrintJobInfo: android.print.PrinterId getPrinterId()>();

        $r8 = virtualinvoke $r7.<android.print.PrinterId: android.content.ComponentName getServiceName()>();

        $z1 = virtualinvoke $r8.<android.content.ComponentName: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private boolean isObsoleteState(int)
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        int i0;
        boolean $z0, $z1;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService: boolean isTerminalState(int)>(i0);

        if $z0 != 0 goto label1;

        if i0 != 2 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private boolean isScheduledState(int)
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        i0 := @parameter0: int;

        if i0 == 2 goto label1;

        if i0 == 3 goto label1;

        if i0 != 4 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private boolean isActiveState(int)
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        i0 := @parameter0: int;

        if i0 == 1 goto label1;

        if i0 == 2 goto label1;

        if i0 == 3 goto label1;

        if i0 != 4 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private boolean isTerminalState(int)
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        i0 := @parameter0: int;

        if i0 == 5 goto label1;

        if i0 != 7 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean setPrintJobTag(android.print.PrintJobId, java.lang.String)
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        android.print.PrintJobId r1;
        java.lang.String r2, r5;
        java.lang.Object r3, $r7;
        android.print.PrintJobInfo r4;
        java.lang.Throwable r6, $r9;
        boolean $z0, $z1;
        com.android.printspooler.model.PrintSpoolerService$PersistenceManager $r8;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        r1 := @parameter0: android.print.PrintJobId;

        r2 := @parameter1: java.lang.String;

        $r7 = r0.<com.android.printspooler.model.PrintSpoolerService: java.lang.Object mLock>;

        r3 = $r7;

        entermonitor $r7;

     label01:
        r4 = virtualinvoke r0.<com.android.printspooler.model.PrintSpoolerService: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId,int)>(r1, -2);

        if r4 == null goto label08;

        r5 = virtualinvoke r4.<android.print.PrintJobInfo: java.lang.String getTag()>();

        if r5 != null goto label03;

        if r2 != null goto label05;

        exitmonitor r3;

     label02:
        return 0;

     label03:
        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label05;

        exitmonitor r3;

     label04:
        return 0;

     label05:
        virtualinvoke r4.<android.print.PrintJobInfo: void setTag(java.lang.String)>(r2);

        $z1 = specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService: boolean shouldPersistPrintJob(android.print.PrintJobInfo)>(r4);

        if $z1 == 0 goto label06;

        $r8 = r0.<com.android.printspooler.model.PrintSpoolerService: com.android.printspooler.model.PrintSpoolerService$PersistenceManager mPersistanceManager>;

        virtualinvoke $r8.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void writeStateLocked()>();

     label06:
        exitmonitor r3;

     label07:
        return 1;

     label08:
        exitmonitor r3;

     label09:
        goto label12;

     label10:
        $r9 := @caughtexception;

        r6 = $r9;

        exitmonitor r3;

     label11:
        throw r6;

     label12:
        return 0;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void setPrintJobCancelling(android.print.PrintJobId, boolean)
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        android.print.PrintJobId r1;
        boolean z0, $z1;
        java.lang.Object r2, $r6;
        android.print.PrintJobInfo r3;
        android.os.Message r4;
        java.lang.Throwable r5, $r11;
        java.util.List $r7;
        com.android.printspooler.model.NotificationController $r8;
        com.android.internal.os.HandlerCaller $r9, $r10;
        com.android.printspooler.model.PrintSpoolerService$PersistenceManager $r12;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        r1 := @parameter0: android.print.PrintJobId;

        z0 := @parameter1: boolean;

        $r6 = r0.<com.android.printspooler.model.PrintSpoolerService: java.lang.Object mLock>;

        r2 = $r6;

        entermonitor $r6;

     label1:
        r3 = virtualinvoke r0.<com.android.printspooler.model.PrintSpoolerService: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId,int)>(r1, -2);

        if r3 == null goto label3;

        virtualinvoke r3.<android.print.PrintJobInfo: void setCancelling(boolean)>(z0);

        $z1 = specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService: boolean shouldPersistPrintJob(android.print.PrintJobInfo)>(r3);

        if $z1 == 0 goto label2;

        $r12 = r0.<com.android.printspooler.model.PrintSpoolerService: com.android.printspooler.model.PrintSpoolerService$PersistenceManager mPersistanceManager>;

        virtualinvoke $r12.<com.android.printspooler.model.PrintSpoolerService$PersistenceManager: void writeStateLocked()>();

     label2:
        $r8 = r0.<com.android.printspooler.model.PrintSpoolerService: com.android.printspooler.model.NotificationController mNotificationController>;

        $r7 = r0.<com.android.printspooler.model.PrintSpoolerService: java.util.List mPrintJobs>;

        virtualinvoke $r8.<com.android.printspooler.model.NotificationController: void onUpdateNotifications(java.util.List)>($r7);

        $r9 = r0.<com.android.printspooler.model.PrintSpoolerService: com.android.internal.os.HandlerCaller mHandlerCaller>;

        r4 = virtualinvoke $r9.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>(6, r3);

        $r10 = r0.<com.android.printspooler.model.PrintSpoolerService: com.android.internal.os.HandlerCaller mHandlerCaller>;

        virtualinvoke $r10.<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>(r4);

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r2;

     label6:
        throw r5;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void updatePrintJobUserConfigurableOptionsNoPersistence(android.print.PrintJobInfo)
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        android.print.PrintJobInfo r1, r3;
        java.lang.Object r2, $r5, $r13;
        int i0, i1, $i2;
        java.lang.Throwable r4, $r23;
        java.util.List $r6, $r14;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8, $r9, $r11;
        android.print.PrintJobId $r10, $r15, $r16;
        java.lang.String $r12, $r18;
        android.print.PrinterId $r17;
        boolean $z0;
        android.print.PageRange[] $r19;
        android.print.PrintDocumentInfo $r20;
        android.os.Bundle $r21;
        android.print.PrintAttributes $r22;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        r1 := @parameter0: android.print.PrintJobInfo;

        $r5 = r0.<com.android.printspooler.model.PrintSpoolerService: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.printspooler.model.PrintSpoolerService: java.util.List mPrintJobs>;

        i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label5;

        $r14 = r0.<com.android.printspooler.model.PrintSpoolerService: java.util.List mPrintJobs>;

        $r13 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (android.print.PrintJobInfo) $r13;

        $r16 = virtualinvoke r3.<android.print.PrintJobInfo: android.print.PrintJobId getId()>();

        $r15 = virtualinvoke r1.<android.print.PrintJobInfo: android.print.PrintJobId getId()>();

        $z0 = virtualinvoke $r16.<android.print.PrintJobId: boolean equals(java.lang.Object)>($r15);

        if $z0 == 0 goto label4;

        $r17 = virtualinvoke r1.<android.print.PrintJobInfo: android.print.PrinterId getPrinterId()>();

        virtualinvoke r3.<android.print.PrintJobInfo: void setPrinterId(android.print.PrinterId)>($r17);

        $r18 = virtualinvoke r1.<android.print.PrintJobInfo: java.lang.String getPrinterName()>();

        virtualinvoke r3.<android.print.PrintJobInfo: void setPrinterName(java.lang.String)>($r18);

        $i2 = virtualinvoke r1.<android.print.PrintJobInfo: int getCopies()>();

        virtualinvoke r3.<android.print.PrintJobInfo: void setCopies(int)>($i2);

        $r20 = virtualinvoke r1.<android.print.PrintJobInfo: android.print.PrintDocumentInfo getDocumentInfo()>();

        virtualinvoke r3.<android.print.PrintJobInfo: void setDocumentInfo(android.print.PrintDocumentInfo)>($r20);

        $r19 = virtualinvoke r1.<android.print.PrintJobInfo: android.print.PageRange[] getPages()>();

        virtualinvoke r3.<android.print.PrintJobInfo: void setPages(android.print.PageRange[])>($r19);

        $r22 = virtualinvoke r1.<android.print.PrintJobInfo: android.print.PrintAttributes getAttributes()>();

        virtualinvoke r3.<android.print.PrintJobInfo: void setAttributes(android.print.PrintAttributes)>($r22);

        $r21 = virtualinvoke r1.<android.print.PrintJobInfo: android.os.Bundle getAdvancedOptions()>();

        virtualinvoke r3.<android.print.PrintJobInfo: void setAdvancedOptions(android.os.Bundle)>($r21);

        exitmonitor r2;

     label3:
        return;

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No print job with id:");

        $r10 = virtualinvoke r1.<android.print.PrintJobInfo: android.print.PrintJobId getId()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label6:
        $r23 := @caughtexception;

        r4 = $r23;

        exitmonitor r2;

     label7:
        throw r4;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label7 with label6;
    }

    private boolean shouldPersistPrintJob(android.print.PrintJobInfo)
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        android.print.PrintJobInfo r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        r1 := @parameter0: android.print.PrintJobInfo;

        $i0 = virtualinvoke r1.<android.print.PrintJobInfo: int getState()>();

        if $i0 < 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void notifyOnAllPrintJobsHandled()
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        com.android.printspooler.model.PrintSpoolerService$2 $r1;
        java.lang.Void[] $r2;
        java.util.concurrent.Executor $r3;

        r0 := @this: com.android.printspooler.model.PrintSpoolerService;

        $r1 = new com.android.printspooler.model.PrintSpoolerService$2;

        specialinvoke $r1.<com.android.printspooler.model.PrintSpoolerService$2: void <init>(com.android.printspooler.model.PrintSpoolerService)>(r0);

        $r3 = <android.os.AsyncTask: java.util.concurrent.Executor SERIAL_EXECUTOR>;

        $r2 = (java.lang.Void[]) null;

        virtualinvoke $r1.<com.android.printspooler.model.PrintSpoolerService$2: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r3, $r2);

        return;
    }

    static java.lang.Object access$200(com.android.printspooler.model.PrintSpoolerService)
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.printspooler.model.PrintSpoolerService;

        $r1 = r0.<com.android.printspooler.model.PrintSpoolerService: java.lang.Object mLock>;

        return $r1;
    }

    static android.print.IPrintSpoolerClient access$302(com.android.printspooler.model.PrintSpoolerService, android.print.IPrintSpoolerClient)
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        android.print.IPrintSpoolerClient r1;

        r0 := @parameter0: com.android.printspooler.model.PrintSpoolerService;

        r1 := @parameter1: android.print.IPrintSpoolerClient;

        r0.<com.android.printspooler.model.PrintSpoolerService: android.print.IPrintSpoolerClient mClient> = r1;

        return r1;
    }

    static android.print.IPrintSpoolerClient access$300(com.android.printspooler.model.PrintSpoolerService)
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        android.print.IPrintSpoolerClient $r1;

        r0 := @parameter0: com.android.printspooler.model.PrintSpoolerService;

        $r1 = r0.<com.android.printspooler.model.PrintSpoolerService: android.print.IPrintSpoolerClient mClient>;

        return $r1;
    }

    static com.android.internal.os.HandlerCaller access$400(com.android.printspooler.model.PrintSpoolerService)
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        com.android.internal.os.HandlerCaller $r1;

        r0 := @parameter0: com.android.printspooler.model.PrintSpoolerService;

        $r1 = r0.<com.android.printspooler.model.PrintSpoolerService: com.android.internal.os.HandlerCaller mHandlerCaller>;

        return $r1;
    }

    static void access$500(com.android.printspooler.model.PrintSpoolerService)
    {
        com.android.printspooler.model.PrintSpoolerService r0;

        r0 := @parameter0: com.android.printspooler.model.PrintSpoolerService;

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService: void sendOnAllPrintJobsHandled()>();

        return;
    }

    static java.util.List access$800(com.android.printspooler.model.PrintSpoolerService)
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        java.util.List $r1;

        r0 := @parameter0: com.android.printspooler.model.PrintSpoolerService;

        $r1 = r0.<com.android.printspooler.model.PrintSpoolerService: java.util.List mPrintJobs>;

        return $r1;
    }

    static boolean access$900(com.android.printspooler.model.PrintSpoolerService, android.print.PrintJobInfo)
    {
        com.android.printspooler.model.PrintSpoolerService r0;
        android.print.PrintJobInfo r1;
        boolean $z0;

        r0 := @parameter0: com.android.printspooler.model.PrintSpoolerService;

        r1 := @parameter1: android.print.PrintJobInfo;

        $z0 = specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService: boolean shouldPersistPrintJob(android.print.PrintJobInfo)>(r1);

        return $z0;
    }

    static void access$1000(com.android.printspooler.model.PrintSpoolerService)
    {
        com.android.printspooler.model.PrintSpoolerService r0;

        r0 := @parameter0: com.android.printspooler.model.PrintSpoolerService;

        specialinvoke r0.<com.android.printspooler.model.PrintSpoolerService: void removeObsoletePrintJobs()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        <com.android.printspooler.model.PrintSpoolerService: java.lang.String PRINT_FILE_EXTENSION> = "pdf";

        <com.android.printspooler.model.PrintSpoolerService: java.lang.String PRINT_JOB_FILE_PREFIX> = "print_job_";

        <com.android.printspooler.model.PrintSpoolerService: long CHECK_ALL_PRINTJOBS_HANDLED_DELAY> = 5000L;

        <com.android.printspooler.model.PrintSpoolerService: boolean PERSISTNECE_MANAGER_ENABLED> = 1;

        <com.android.printspooler.model.PrintSpoolerService: boolean DEBUG_PERSISTENCE> = 0;

        <com.android.printspooler.model.PrintSpoolerService: boolean DEBUG_PRINT_JOB_LIFECYCLE> = 0;

        <com.android.printspooler.model.PrintSpoolerService: java.lang.String LOG_TAG> = "PrintSpoolerService";

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.android.printspooler.model.PrintSpoolerService: java.lang.Object sLock> = $r0;

        return;
    }
}
