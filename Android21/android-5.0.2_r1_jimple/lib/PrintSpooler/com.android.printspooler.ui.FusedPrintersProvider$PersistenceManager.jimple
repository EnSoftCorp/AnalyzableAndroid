final class com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager extends java.lang.Object
{
    private static final java.lang.String PERSIST_FILE_NAME;
    private static final java.lang.String TAG_PRINTERS;
    private static final java.lang.String TAG_PRINTER;
    private static final java.lang.String TAG_PRINTER_ID;
    private static final java.lang.String ATTR_LOCAL_ID;
    private static final java.lang.String ATTR_SERVICE_NAME;
    private static final java.lang.String ATTR_NAME;
    private static final java.lang.String ATTR_DESCRIPTION;
    private static final java.lang.String ATTR_STATUS;
    private final android.util.AtomicFile mStatePersistFile;
    private java.util.List mHistoricalPrinters;
    private boolean mReadHistoryCompleted;
    private boolean mReadHistoryInProgress;
    private com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask mReadTask;
    private volatile long mLastReadHistoryTimestamp;
    final com.android.printspooler.ui.FusedPrintersProvider this$0;

    private void <init>(com.android.printspooler.ui.FusedPrintersProvider, android.content.Context)
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager r0;
        com.android.printspooler.ui.FusedPrintersProvider r1;
        android.content.Context r2;
        java.util.ArrayList $r3;
        android.util.AtomicFile $r4;
        java.io.File $r5, $r6;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager;

        r1 := @parameter0: com.android.printspooler.ui.FusedPrintersProvider;

        r2 := @parameter1: android.content.Context;

        r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: com.android.printspooler.ui.FusedPrintersProvider this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: java.util.List mHistoricalPrinters> = $r3;

        $r4 = new android.util.AtomicFile;

        $r5 = new java.io.File;

        $r6 = virtualinvoke r2.<android.content.Context: java.io.File getFilesDir()>();

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, "printer_history.xml");

        specialinvoke $r4.<android.util.AtomicFile: void <init>(java.io.File)>($r5);

        r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: android.util.AtomicFile mStatePersistFile> = $r4;

        return;
    }

    public boolean isReadHistoryInProgress()
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager r0;
        boolean $z0;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager;

        $z0 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: boolean mReadHistoryInProgress>;

        return $z0;
    }

    public boolean isReadHistoryCompleted()
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager r0;
        boolean $z0;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager;

        $z0 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: boolean mReadHistoryCompleted>;

        return $z0;
    }

    public boolean stopReadPrinterHistory()
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager r0;
        boolean z0;
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask $r1;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager;

        $r1 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask mReadTask>;

        z0 = virtualinvoke $r1.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: boolean cancel(boolean)>(1);

        r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask mReadTask> = null;

        return z0;
    }

    public void readPrinterHistory()
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager r0;
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask $r1, $r4;
        java.lang.Void[] $r2;
        java.util.concurrent.Executor $r3;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager;

        r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: boolean mReadHistoryInProgress> = 1;

        $r1 = new com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask;

        specialinvoke $r1.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: void <init>(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager,com.android.printspooler.ui.FusedPrintersProvider$1)>(r0, null);

        r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask mReadTask> = $r1;

        $r4 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask mReadTask>;

        $r3 = <android.os.AsyncTask: java.util.concurrent.Executor SERIAL_EXECUTOR>;

        $r2 = (java.lang.Void[]) null;

        virtualinvoke $r4.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r3, $r2);

        return;
    }

    public void updatePrintersHistoricalNamesIfNeeded(java.util.List)
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager r0;
        java.util.List r1;
        boolean z0, $z1;
        int i0, i1;
        android.print.PrinterInfo r2;
        java.lang.Object $r3;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager;

        r1 := @parameter0: java.util.List;

        z0 = 0;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        r2 = (android.print.PrinterInfo) $r3;

        $z1 = virtualinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: boolean renamePrinterIfNeeded(android.print.PrinterInfo)>(r2);

        z0 = z0 | $z1;

        i1 = i1 + 1;

        goto label1;

     label2:
        if z0 == 0 goto label3;

        specialinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: void writePrinterHistory()>();

     label3:
        return;
    }

    public boolean renamePrinterIfNeeded(android.print.PrinterInfo)
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager r0;
        android.print.PrinterInfo r1, r2;
        boolean z0, $z1, $z2;
        int i0, i1;
        java.util.List $r3, $r4, $r11;
        java.lang.Object $r5;
        android.print.PrinterId $r6, $r7;
        java.lang.String $r8, $r9;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager;

        r1 := @parameter0: android.print.PrinterInfo;

        z0 = 0;

        $r3 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: java.util.List mHistoricalPrinters>;

        i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r4 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: java.util.List mHistoricalPrinters>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r2 = (android.print.PrinterInfo) $r5;

        $r6 = virtualinvoke r2.<android.print.PrinterInfo: android.print.PrinterId getId()>();

        $r7 = virtualinvoke r1.<android.print.PrinterInfo: android.print.PrinterId getId()>();

        $z1 = virtualinvoke $r6.<android.print.PrinterId: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label2;

        $r8 = virtualinvoke r2.<android.print.PrinterInfo: java.lang.String getName()>();

        $r9 = virtualinvoke r1.<android.print.PrinterInfo: java.lang.String getName()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r8, $r9);

        if $z2 != 0 goto label2;

        $r11 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: java.util.List mHistoricalPrinters>;

        interfaceinvoke $r11.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, r1);

        z0 = 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return z0;
    }

    public void addPrinterAndWritePrinterHistory(android.print.PrinterInfo)
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager r0;
        android.print.PrinterInfo r1;
        java.util.List $r2, $r3, $r4;
        int $i0;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager;

        r1 := @parameter0: android.print.PrinterInfo;

        $r2 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: java.util.List mHistoricalPrinters>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 < 50 goto label1;

        $r4 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: java.util.List mHistoricalPrinters>;

        interfaceinvoke $r4.<java.util.List: java.lang.Object remove(int)>(0);

     label1:
        $r3 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: java.util.List mHistoricalPrinters>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        specialinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: void writePrinterHistory()>();

        return;
    }

    public void removeHistoricalPrinterAndWritePrinterHistory(android.print.PrinterId)
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager r0;
        android.print.PrinterId r1, $r6;
        boolean z0, $z1;
        int i0, i1;
        android.print.PrinterInfo r2;
        java.util.List $r3, $r4, $r7;
        java.lang.Object $r5;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager;

        r1 := @parameter0: android.print.PrinterId;

        z0 = 0;

        $r3 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: java.util.List mHistoricalPrinters>;

        i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r4 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: java.util.List mHistoricalPrinters>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        r2 = (android.print.PrinterInfo) $r5;

        $r6 = virtualinvoke r2.<android.print.PrinterInfo: android.print.PrinterId getId()>();

        $z1 = virtualinvoke $r6.<android.print.PrinterId: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        $r7 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: java.util.List mHistoricalPrinters>;

        interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>(i1);

        z0 = 1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        if z0 == 0 goto label4;

        specialinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: void writePrinterHistory()>();

     label4:
        return;
    }

    private void writePrinterHistory()
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager r0;
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$WriteTask $r1;
        java.util.List[] $r2;
        java.util.ArrayList $r3;
        java.util.List $r4;
        java.util.concurrent.Executor $r5;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager;

        $r1 = new com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$WriteTask;

        specialinvoke $r1.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$WriteTask: void <init>(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager,com.android.printspooler.ui.FusedPrintersProvider$1)>(r0, null);

        $r5 = <android.os.AsyncTask: java.util.concurrent.Executor SERIAL_EXECUTOR>;

        $r2 = newarray (java.util.List)[1];

        $r3 = new java.util.ArrayList;

        $r4 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: java.util.List mHistoricalPrinters>;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        $r2[0] = $r3;

        virtualinvoke $r1.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$WriteTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r5, $r2);

        return;
    }

    public boolean isHistoryChanged()
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager r0;
        android.util.AtomicFile $r1;
        long $l0, $l1;
        java.io.File $r2;
        byte $b2;
        boolean $z0;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager;

        $l0 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: long mLastReadHistoryTimestamp>;

        $r1 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: android.util.AtomicFile mStatePersistFile>;

        $r2 = virtualinvoke $r1.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $l1 = virtualinvoke $r2.<java.io.File: long lastModified()>();

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private java.util.List computeFavoritePrinters(java.util.List)
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager r0;
        java.util.List r1;
        android.util.ArrayMap r2, $r6;
        float f0, $f1, $f2;
        int i0, i1, i2, $i3, i4;
        android.print.PrinterInfo r3, r5;
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$PrinterRecord r4, $r11, $r15;
        java.util.ArrayList $r7, $r10, r18, r19;
        java.util.Collection $r8;
        java.lang.Object $r9, $r13, $r14;
        android.print.PrinterId $r12, $r17;
        double $d0, $d1;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager;

        r1 := @parameter0: java.util.List;

        $r6 = new android.util.ArrayMap;

        specialinvoke $r6.<android.util.ArrayMap: void <init>()>();

        r2 = $r6;

        f0 = 1.0F;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r13 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (android.print.PrinterInfo) $r13;

        $r12 = virtualinvoke r3.<android.print.PrinterInfo: android.print.PrinterId getId()>();

        $r14 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r12);

        r4 = (com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$PrinterRecord) $r14;

        if r4 != null goto label2;

        $r15 = new com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$PrinterRecord;

        specialinvoke $r15.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$PrinterRecord: void <init>(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager,android.print.PrinterInfo)>(r0, r3);

        r4 = $r15;

        $r17 = virtualinvoke r3.<android.print.PrinterInfo: android.print.PrinterId getId()>();

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, r4);

     label2:
        $f1 = r4.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$PrinterRecord: float weight>;

        $f2 = $f1 + f0;

        r4.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$PrinterRecord: float weight> = $f2;

        $d0 = (double) f0;

        $d1 = $d0 * 0.949999988079071;

        f0 = (float) $d1;

        i1 = i1 + -1;

        goto label1;

     label3:
        $r7 = new java.util.ArrayList;

        $r8 = interfaceinvoke r2.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r7.<java.util.ArrayList: void <init>(java.util.Collection)>($r8);

        r18 = $r7;

        staticinvoke <java.util.Collections: void sort(java.util.List)>(r18);

        $i3 = interfaceinvoke r18.<java.util.List: int size()>();

        i4 = staticinvoke <java.lang.Math: int min(int,int)>($i3, 4);

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>(i4);

        r19 = $r10;

        i2 = 0;

     label4:
        if i2 >= i4 goto label5;

        $r9 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(i2);

        $r11 = (com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$PrinterRecord) $r9;

        r5 = $r11.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$PrinterRecord: android.print.PrinterInfo printer>;

        interfaceinvoke r19.<java.util.List: boolean add(java.lang.Object)>(r5);

        i2 = i2 + 1;

        goto label4;

     label5:
        return r19;
    }

    void <init>(com.android.printspooler.ui.FusedPrintersProvider, android.content.Context, com.android.printspooler.ui.FusedPrintersProvider$1)
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager r0;
        com.android.printspooler.ui.FusedPrintersProvider r1;
        android.content.Context r2;
        com.android.printspooler.ui.FusedPrintersProvider$1 r3;

        r0 := @this: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager;

        r1 := @parameter0: com.android.printspooler.ui.FusedPrintersProvider;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: com.android.printspooler.ui.FusedPrintersProvider$1;

        specialinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: void <init>(com.android.printspooler.ui.FusedPrintersProvider,android.content.Context)>(r1, r2);

        return;
    }

    static boolean access$400(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager)
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager r0;
        boolean $z0;

        r0 := @parameter0: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager;

        $z0 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: boolean mReadHistoryCompleted>;

        return $z0;
    }

    static java.util.List access$702(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager, java.util.List)
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager r0;
        java.util.List r1;

        r0 := @parameter0: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager;

        r1 := @parameter1: java.util.List;

        r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: java.util.List mHistoricalPrinters> = r1;

        return r1;
    }

    static java.util.List access$700(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager)
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager r0;
        java.util.List $r1;

        r0 := @parameter0: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager;

        $r1 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: java.util.List mHistoricalPrinters>;

        return $r1;
    }

    static java.util.List access$800(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager, java.util.List)
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager r0;
        java.util.List r1, $r2;

        r0 := @parameter0: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager;

        r1 := @parameter1: java.util.List;

        $r2 = specialinvoke r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: java.util.List computeFavoritePrinters(java.util.List)>(r1);

        return $r2;
    }

    static boolean access$902(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager, boolean)
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager r0;
        boolean z0;

        r0 := @parameter0: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager;

        z0 := @parameter1: boolean;

        r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: boolean mReadHistoryInProgress> = z0;

        return z0;
    }

    static boolean access$402(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager, boolean)
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager r0;
        boolean z0;

        r0 := @parameter0: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager;

        z0 := @parameter1: boolean;

        r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: boolean mReadHistoryCompleted> = z0;

        return z0;
    }

    static com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask access$1102(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager, com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask)
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager r0;
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask r1;

        r0 := @parameter0: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager;

        r1 := @parameter1: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask;

        r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager$ReadTask mReadTask> = r1;

        return r1;
    }

    static android.util.AtomicFile access$1200(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager)
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager r0;
        android.util.AtomicFile $r1;

        r0 := @parameter0: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager;

        $r1 = r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: android.util.AtomicFile mStatePersistFile>;

        return $r1;
    }

    static long access$1302(com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager, long)
    {
        com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager r0;
        long l0;

        r0 := @parameter0: com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager;

        l0 := @parameter1: long;

        r0.<com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: long mLastReadHistoryTimestamp> = l0;

        return l0;
    }

    public static void <clinit>()
    {
        <com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: java.lang.String ATTR_STATUS> = "status";

        <com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: java.lang.String ATTR_DESCRIPTION> = "description";

        <com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: java.lang.String ATTR_NAME> = "name";

        <com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: java.lang.String ATTR_SERVICE_NAME> = "serviceName";

        <com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: java.lang.String ATTR_LOCAL_ID> = "localId";

        <com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: java.lang.String TAG_PRINTER_ID> = "printerId";

        <com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: java.lang.String TAG_PRINTER> = "printer";

        <com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: java.lang.String TAG_PRINTERS> = "printers";

        <com.android.printspooler.ui.FusedPrintersProvider$PersistenceManager: java.lang.String PERSIST_FILE_NAME> = "printer_history.xml";

        return;
    }
}
