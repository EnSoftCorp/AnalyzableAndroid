public final class com.android.printspooler.ui.PageAdapter extends android.support.v7.widget.RecyclerView$Adapter implements com.android.printspooler.model.PageContentRepository$OnMalformedPdfFileListener
{
    private static final java.lang.String LOG_TAG;
    private static final int MAX_PREVIEW_PAGES_BATCH;
    private static final boolean DEBUG;
    private static final android.print.PageRange[] ALL_PAGES_ARRAY;
    private static final int INVALID_PAGE_INDEX;
    private static final int STATE_CLOSED;
    private static final int STATE_OPENED;
    private static final int STATE_DESTROYED;
    private final dalvik.system.CloseGuard mCloseGuard;
    private final android.util.SparseArray mBoundPagesInAdapter;
    private final android.util.SparseArray mConfirmedPagesInDocument;
    private final com.android.printspooler.ui.PageAdapter$PageClickListener mPageClickListener;
    private final android.content.Context mContext;
    private final android.view.LayoutInflater mLayoutInflater;
    private final com.android.printspooler.ui.PageAdapter$ContentCallbacks mCallbacks;
    private final com.android.printspooler.model.PageContentRepository mPageContentRepository;
    private final com.android.printspooler.ui.PageAdapter$PreviewArea mPreviewArea;
    private android.print.PageRange[] mRequestedPages;
    private android.print.PageRange[] mWrittenPages;
    private android.print.PageRange[] mSelectedPages;
    private android.graphics.drawable.BitmapDrawable mEmptyState;
    private int mDocumentPageCount;
    private int mSelectedPageCount;
    private int mPreviewPageMargin;
    private int mPreviewPageMinWidth;
    private int mPreviewListPadding;
    private int mFooterHeight;
    private int mColumnCount;
    private android.print.PrintAttributes$MediaSize mMediaSize;
    private android.print.PrintAttributes$Margins mMinMargins;
    private int mState;
    private int mPageContentWidth;
    private int mPageContentHeight;

    public void <init>(android.content.Context, com.android.printspooler.ui.PageAdapter$ContentCallbacks, com.android.printspooler.ui.PageAdapter$PreviewArea)
    {
        com.android.printspooler.ui.PageAdapter r0;
        android.content.Context r1, $r11, $r13, $r15, $r18, $r19;
        com.android.printspooler.ui.PageAdapter$ContentCallbacks r2;
        com.android.printspooler.ui.PageAdapter$PreviewArea r3;
        dalvik.system.CloseGuard $r4, $r21;
        android.util.SparseArray $r5, $r6;
        com.android.printspooler.ui.PageAdapter$PageClickListener $r7;
        java.lang.Object $r8;
        android.view.LayoutInflater $r9;
        com.android.printspooler.model.PageContentRepository $r10;
        android.content.res.Resources $r12, $r14, $r16, $r17, $r20;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.printspooler.ui.PageAdapter$ContentCallbacks;

        r3 := @parameter2: com.android.printspooler.ui.PageAdapter$PreviewArea;

        specialinvoke r0.<android.support.v7.widget.RecyclerView$Adapter: void <init>()>();

        $r4 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<com.android.printspooler.ui.PageAdapter: dalvik.system.CloseGuard mCloseGuard> = $r4;

        $r5 = new android.util.SparseArray;

        specialinvoke $r5.<android.util.SparseArray: void <init>()>();

        r0.<com.android.printspooler.ui.PageAdapter: android.util.SparseArray mBoundPagesInAdapter> = $r5;

        $r6 = new android.util.SparseArray;

        specialinvoke $r6.<android.util.SparseArray: void <init>()>();

        r0.<com.android.printspooler.ui.PageAdapter: android.util.SparseArray mConfirmedPagesInDocument> = $r6;

        $r7 = new com.android.printspooler.ui.PageAdapter$PageClickListener;

        specialinvoke $r7.<com.android.printspooler.ui.PageAdapter$PageClickListener: void <init>(com.android.printspooler.ui.PageAdapter,com.android.printspooler.ui.PageAdapter$1)>(r0, null);

        r0.<com.android.printspooler.ui.PageAdapter: com.android.printspooler.ui.PageAdapter$PageClickListener mPageClickListener> = $r7;

        r0.<com.android.printspooler.ui.PageAdapter: int mDocumentPageCount> = -1;

        r0.<com.android.printspooler.ui.PageAdapter: android.content.Context mContext> = r1;

        r0.<com.android.printspooler.ui.PageAdapter: com.android.printspooler.ui.PageAdapter$ContentCallbacks mCallbacks> = r2;

        $r8 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        $r9 = (android.view.LayoutInflater) $r8;

        r0.<com.android.printspooler.ui.PageAdapter: android.view.LayoutInflater mLayoutInflater> = $r9;

        $r10 = new com.android.printspooler.model.PageContentRepository;

        specialinvoke $r10.<com.android.printspooler.model.PageContentRepository: void <init>(android.content.Context,com.android.printspooler.model.PageContentRepository$OnMalformedPdfFileListener)>(r1, r0);

        r0.<com.android.printspooler.ui.PageAdapter: com.android.printspooler.model.PageContentRepository mPageContentRepository> = $r10;

        $r11 = r0.<com.android.printspooler.ui.PageAdapter: android.content.Context mContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r12.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131165187);

        r0.<com.android.printspooler.ui.PageAdapter: int mPreviewPageMargin> = $i0;

        $r13 = r0.<com.android.printspooler.ui.PageAdapter: android.content.Context mContext>;

        $r14 = virtualinvoke $r13.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = virtualinvoke $r14.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131165191);

        r0.<com.android.printspooler.ui.PageAdapter: int mPreviewPageMinWidth> = $i1;

        $r15 = r0.<com.android.printspooler.ui.PageAdapter: android.content.Context mContext>;

        $r16 = virtualinvoke $r15.<android.content.Context: android.content.res.Resources getResources()>();

        $i2 = virtualinvoke $r16.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131165188);

        r0.<com.android.printspooler.ui.PageAdapter: int mPreviewListPadding> = $i2;

        $r18 = r0.<com.android.printspooler.ui.PageAdapter: android.content.Context mContext>;

        $r17 = virtualinvoke $r18.<android.content.Context: android.content.res.Resources getResources()>();

        $i3 = virtualinvoke $r17.<android.content.res.Resources: int getInteger(int)>(2131099650);

        r0.<com.android.printspooler.ui.PageAdapter: int mColumnCount> = $i3;

        $r19 = r0.<com.android.printspooler.ui.PageAdapter: android.content.Context mContext>;

        $r20 = virtualinvoke $r19.<android.content.Context: android.content.res.Resources getResources()>();

        $i4 = virtualinvoke $r20.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131165190);

        r0.<com.android.printspooler.ui.PageAdapter: int mFooterHeight> = $i4;

        r0.<com.android.printspooler.ui.PageAdapter: com.android.printspooler.ui.PageAdapter$PreviewArea mPreviewArea> = r3;

        $r21 = r0.<com.android.printspooler.ui.PageAdapter: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r21.<dalvik.system.CloseGuard: void open(java.lang.String)>("destroy");

        virtualinvoke r0.<com.android.printspooler.ui.PageAdapter: void setHasStableIds(boolean)>(1);

        r0.<com.android.printspooler.ui.PageAdapter: int mState> = 0;

        return;
    }

    public void onMalformedPdfFile()
    {
        com.android.printspooler.ui.PageAdapter r0;
        com.android.printspooler.ui.PageAdapter$ContentCallbacks $r1;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        $r1 = r0.<com.android.printspooler.ui.PageAdapter: com.android.printspooler.ui.PageAdapter$ContentCallbacks mCallbacks>;

        interfaceinvoke $r1.<com.android.printspooler.ui.PageAdapter$ContentCallbacks: void onMalformedPdfFile()>();

        return;
    }

    public void onOrientationChanged()
    {
        com.android.printspooler.ui.PageAdapter r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        int $i0;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        $r1 = r0.<com.android.printspooler.ui.PageAdapter: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r2.<android.content.res.Resources: int getInteger(int)>(2131099650);

        r0.<com.android.printspooler.ui.PageAdapter: int mColumnCount> = $i0;

        virtualinvoke r0.<com.android.printspooler.ui.PageAdapter: void notifyDataSetChanged()>();

        return;
    }

    public boolean isOpened()
    {
        com.android.printspooler.ui.PageAdapter r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        $i0 = r0.<com.android.printspooler.ui.PageAdapter: int mState>;

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getFilePageCount()
    {
        com.android.printspooler.ui.PageAdapter r0;
        com.android.printspooler.model.PageContentRepository $r1;
        int $i0;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        $r1 = r0.<com.android.printspooler.ui.PageAdapter: com.android.printspooler.model.PageContentRepository mPageContentRepository>;

        $i0 = virtualinvoke $r1.<com.android.printspooler.model.PageContentRepository: int getFilePageCount()>();

        return $i0;
    }

    public void open(android.os.ParcelFileDescriptor, java.lang.Runnable)
    {
        com.android.printspooler.ui.PageAdapter r0;
        android.os.ParcelFileDescriptor r1;
        java.lang.Runnable r2;
        com.android.printspooler.ui.PageAdapter$1 $r3;
        com.android.printspooler.model.PageContentRepository $r4;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 := @parameter1: java.lang.Runnable;

        specialinvoke r0.<com.android.printspooler.ui.PageAdapter: void throwIfNotClosed()>();

        r0.<com.android.printspooler.ui.PageAdapter: int mState> = 1;

        $r4 = r0.<com.android.printspooler.ui.PageAdapter: com.android.printspooler.model.PageContentRepository mPageContentRepository>;

        $r3 = new com.android.printspooler.ui.PageAdapter$1;

        specialinvoke $r3.<com.android.printspooler.ui.PageAdapter$1: void <init>(com.android.printspooler.ui.PageAdapter,java.lang.Runnable)>(r0, r2);

        virtualinvoke $r4.<com.android.printspooler.model.PageContentRepository: void open(android.os.ParcelFileDescriptor,java.lang.Runnable)>(r1, $r3);

        return;
    }

    public void update(android.print.PageRange[], android.print.PageRange[], int, android.print.PrintAttributes$MediaSize, android.print.PrintAttributes$Margins)
    {
        com.android.printspooler.ui.PageAdapter r0;
        android.print.PageRange[] r1, r2, $r5, $r8, $r11, $r13, $r14, $r15, $r17;
        int i0, $i1, $i2;
        android.print.PrintAttributes$MediaSize r3, $r6, $r10;
        android.print.PrintAttributes$Margins r4, $r7, $r9;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.android.printspooler.model.PageContentRepository $r12;
        com.android.printspooler.ui.PageAdapter$ContentCallbacks $r16;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        r1 := @parameter0: android.print.PageRange[];

        r2 := @parameter1: android.print.PageRange[];

        i0 := @parameter2: int;

        r3 := @parameter3: android.print.PrintAttributes$MediaSize;

        r4 := @parameter4: android.print.PrintAttributes$Margins;

        z0 = 0;

        z1 = 0;

        if i0 != -1 goto label03;

        if r1 != null goto label02;

        $r15 = <com.android.printspooler.ui.PageAdapter: android.print.PageRange[] ALL_PAGES_ARRAY>;

        $r14 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mRequestedPages>;

        $z7 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r15, $r14);

        if $z7 != 0 goto label01;

        $r17 = <com.android.printspooler.ui.PageAdapter: android.print.PageRange[] ALL_PAGES_ARRAY>;

        r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mRequestedPages> = $r17;

        $r16 = r0.<com.android.printspooler.ui.PageAdapter: com.android.printspooler.ui.PageAdapter$ContentCallbacks mCallbacks>;

        interfaceinvoke $r16.<com.android.printspooler.ui.PageAdapter$ContentCallbacks: void onRequestContentUpdate()>();

     label01:
        return;

     label02:
        $r12 = r0.<com.android.printspooler.ui.PageAdapter: com.android.printspooler.model.PageContentRepository mPageContentRepository>;

        i0 = virtualinvoke $r12.<com.android.printspooler.model.PageContentRepository: int getFilePageCount()>();

        if i0 > 0 goto label03;

        return;

     label03:
        $r5 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mSelectedPages>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r5, r2);

        if $z2 != 0 goto label04;

        r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mSelectedPages> = r2;

        $r11 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mSelectedPages>;

        $i2 = staticinvoke <com.android.printspooler.util.PageRangeUtils: int getNormalizedPageCount(android.print.PageRange[],int)>($r11, i0);

        r0.<com.android.printspooler.ui.PageAdapter: int mSelectedPageCount> = $i2;

        $r13 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mSelectedPages>;

        specialinvoke r0.<com.android.printspooler.ui.PageAdapter: void setConfirmedPages(android.print.PageRange[],int)>($r13, i0);

        z1 = 1;

        z0 = 1;

     label04:
        $i1 = r0.<com.android.printspooler.ui.PageAdapter: int mDocumentPageCount>;

        if $i1 == i0 goto label05;

        r0.<com.android.printspooler.ui.PageAdapter: int mDocumentPageCount> = i0;

        z0 = 1;

     label05:
        $r6 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PrintAttributes$MediaSize mMediaSize>;

        if $r6 == null goto label06;

        $r10 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PrintAttributes$MediaSize mMediaSize>;

        $z6 = virtualinvoke $r10.<android.print.PrintAttributes$MediaSize: boolean equals(java.lang.Object)>(r3);

        if $z6 != 0 goto label07;

     label06:
        r0.<com.android.printspooler.ui.PageAdapter: android.print.PrintAttributes$MediaSize mMediaSize> = r3;

        z1 = 1;

        z0 = 1;

     label07:
        $r7 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PrintAttributes$Margins mMinMargins>;

        if $r7 == null goto label08;

        $r9 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PrintAttributes$Margins mMinMargins>;

        $z5 = virtualinvoke $r9.<android.print.PrintAttributes$Margins: boolean equals(java.lang.Object)>(r4);

        if $z5 != 0 goto label09;

     label08:
        r0.<com.android.printspooler.ui.PageAdapter: android.print.PrintAttributes$Margins mMinMargins> = r4;

        z1 = 1;

        z0 = 1;

     label09:
        if r1 == null goto label11;

        $z3 = staticinvoke <com.android.printspooler.util.PageRangeUtils: boolean isAllPages(android.print.PageRange[])>(r1);

        if $z3 == 0 goto label10;

        r1 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mRequestedPages>;

     label10:
        $r8 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mWrittenPages>;

        $z4 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r8, r1);

        if $z4 != 0 goto label11;

        r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mWrittenPages> = r1;

        z0 = 1;

     label11:
        if z1 == 0 goto label12;

        specialinvoke r0.<com.android.printspooler.ui.PageAdapter: void updatePreviewAreaPageSizeAndEmptyState()>();

     label12:
        if z0 == 0 goto label13;

        virtualinvoke r0.<com.android.printspooler.ui.PageAdapter: void notifyDataSetChanged()>();

     label13:
        return;
    }

    public void close(java.lang.Runnable)
    {
        com.android.printspooler.ui.PageAdapter r0;
        java.lang.Runnable r1;
        com.android.printspooler.model.PageContentRepository $r2;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        r1 := @parameter0: java.lang.Runnable;

        specialinvoke r0.<com.android.printspooler.ui.PageAdapter: void throwIfNotOpened()>();

        r0.<com.android.printspooler.ui.PageAdapter: int mState> = 0;

        $r2 = r0.<com.android.printspooler.ui.PageAdapter: com.android.printspooler.model.PageContentRepository mPageContentRepository>;

        virtualinvoke $r2.<com.android.printspooler.model.PageContentRepository: void close(java.lang.Runnable)>(r1);

        return;
    }

    public android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup, int)
    {
        com.android.printspooler.ui.PageAdapter r0;
        android.view.ViewGroup r1;
        int i0;
        android.view.View r2;
        android.view.LayoutInflater $r3;
        com.android.printspooler.ui.PageAdapter$MyViewHolder $r4;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        r1 := @parameter0: android.view.ViewGroup;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.printspooler.ui.PageAdapter: android.view.LayoutInflater mLayoutInflater>;

        r2 = virtualinvoke $r3.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(2130903040, r1, 0);

        $r4 = new com.android.printspooler.ui.PageAdapter$MyViewHolder;

        specialinvoke $r4.<com.android.printspooler.ui.PageAdapter$MyViewHolder: void <init>(com.android.printspooler.ui.PageAdapter,android.view.View,com.android.printspooler.ui.PageAdapter$1)>(r0, r2, null);

        return $r4;
    }

    public void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder, int)
    {
        com.android.printspooler.ui.PageAdapter r0;
        android.support.v7.widget.RecyclerView$ViewHolder r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        com.android.printspooler.ui.PageAdapter$MyViewHolder r2;
        com.android.printspooler.widget.PreviewPageFrame r3;
        com.android.printspooler.widget.PageContentView r4;
        android.view.ViewGroup$LayoutParams r5;
        com.android.printspooler.model.PageContentRepository$PageContentProvider r6;
        android.widget.TextView r7;
        java.lang.String r8, $r20;
        android.view.View $r9, $r11, $r22;
        com.android.printspooler.ui.PageAdapter$PageClickListener $r10;
        android.print.PrintAttributes$Margins $r12;
        android.graphics.drawable.BitmapDrawable $r13;
        android.print.PrintAttributes$MediaSize $r14;
        android.util.SparseArray $r15, $r27;
        java.lang.Object[] $r16, $r23;
        android.content.Context $r17, $r21;
        java.lang.Integer $r18, $r19, $r24, $r26;
        com.android.printspooler.model.PageContentRepository $r25;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$ViewHolder;

        i0 := @parameter1: int;

        r2 = (com.android.printspooler.ui.PageAdapter$MyViewHolder) r1;

        $r9 = r1.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        r3 = (com.android.printspooler.widget.PreviewPageFrame) $r9;

        $r10 = r0.<com.android.printspooler.ui.PageAdapter: com.android.printspooler.ui.PageAdapter$PageClickListener mPageClickListener>;

        virtualinvoke r3.<com.android.printspooler.widget.PreviewPageFrame: void setOnClickListener(android.view.View$OnClickListener)>($r10);

        virtualinvoke r3.<com.android.printspooler.widget.PreviewPageFrame: void setTag(java.lang.Object)>(r1);

        r2.<com.android.printspooler.ui.PageAdapter$MyViewHolder: int mPageInAdapter> = i0;

        i1 = specialinvoke r0.<com.android.printspooler.ui.PageAdapter: int computePageIndexInDocument(int)>(i0);

        i2 = specialinvoke r0.<com.android.printspooler.ui.PageAdapter: int computePageIndexInFile(int)>(i1);

        $r11 = virtualinvoke r3.<com.android.printspooler.widget.PreviewPageFrame: android.view.View findViewById(int)>(2131558401);

        r4 = (com.android.printspooler.widget.PageContentView) $r11;

        r5 = virtualinvoke r4.<com.android.printspooler.widget.PageContentView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $i4 = r0.<com.android.printspooler.ui.PageAdapter: int mPageContentWidth>;

        r5.<android.view.ViewGroup$LayoutParams: int width> = $i4;

        $i3 = r0.<com.android.printspooler.ui.PageAdapter: int mPageContentHeight>;

        r5.<android.view.ViewGroup$LayoutParams: int height> = $i3;

        r6 = virtualinvoke r4.<com.android.printspooler.widget.PageContentView: com.android.printspooler.model.PageContentRepository$PageContentProvider getPageContentProvider()>();

        if i2 == -1 goto label1;

        $r25 = r0.<com.android.printspooler.ui.PageAdapter: com.android.printspooler.model.PageContentRepository mPageContentRepository>;

        r6 = virtualinvoke $r25.<com.android.printspooler.model.PageContentRepository: com.android.printspooler.model.PageContentRepository$PageContentProvider acquirePageContentProvider(int,android.view.View)>(i2, r4);

        $r27 = r0.<com.android.printspooler.ui.PageAdapter: android.util.SparseArray mBoundPagesInAdapter>;

        virtualinvoke $r27.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, null);

        goto label2;

     label1:
        specialinvoke r0.<com.android.printspooler.ui.PageAdapter: void onSelectedPageNotInFile(int)>(i1);

     label2:
        $r13 = r0.<com.android.printspooler.ui.PageAdapter: android.graphics.drawable.BitmapDrawable mEmptyState>;

        $r14 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PrintAttributes$MediaSize mMediaSize>;

        $r12 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PrintAttributes$Margins mMinMargins>;

        virtualinvoke r4.<com.android.printspooler.widget.PageContentView: void init(com.android.printspooler.model.PageContentRepository$PageContentProvider,android.graphics.drawable.Drawable,android.print.PrintAttributes$MediaSize,android.print.PrintAttributes$Margins)>(r6, $r13, $r14, $r12);

        $r15 = r0.<com.android.printspooler.ui.PageAdapter: android.util.SparseArray mConfirmedPagesInDocument>;

        $i5 = virtualinvoke $r15.<android.util.SparseArray: int indexOfKey(int)>(i1);

        if $i5 < 0 goto label3;

        virtualinvoke r3.<com.android.printspooler.widget.PreviewPageFrame: void setSelected(boolean,boolean)>(1, 0);

        goto label4;

     label3:
        virtualinvoke r3.<com.android.printspooler.widget.PreviewPageFrame: void setSelected(boolean,boolean)>(0, 0);

     label4:
        $r17 = r0.<com.android.printspooler.ui.PageAdapter: android.content.Context mContext>;

        $r16 = newarray (java.lang.Object)[2];

        $i6 = i1 + 1;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r16[0] = $r18;

        $i7 = r0.<com.android.printspooler.ui.PageAdapter: int mDocumentPageCount>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r16[1] = $r19;

        $r20 = virtualinvoke $r17.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(2131296283, $r16);

        virtualinvoke r3.<com.android.printspooler.widget.PreviewPageFrame: void setContentDescription(java.lang.CharSequence)>($r20);

        $r22 = virtualinvoke r3.<com.android.printspooler.widget.PreviewPageFrame: android.view.View findViewById(int)>(2131558403);

        r7 = (android.widget.TextView) $r22;

        $r21 = r0.<com.android.printspooler.ui.PageAdapter: android.content.Context mContext>;

        $r23 = newarray (java.lang.Object)[2];

        $i8 = i1 + 1;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r23[0] = $r24;

        $i9 = r0.<com.android.printspooler.ui.PageAdapter: int mDocumentPageCount>;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r23[1] = $r26;

        r8 = virtualinvoke $r21.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(2131296282, $r23);

        virtualinvoke r7.<android.widget.TextView: void setText(java.lang.CharSequence)>(r8);

        return;
    }

    public int getItemCount()
    {
        com.android.printspooler.ui.PageAdapter r0;
        int $i0;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        $i0 = r0.<com.android.printspooler.ui.PageAdapter: int mSelectedPageCount>;

        return $i0;
    }

    public long getItemId(int)
    {
        com.android.printspooler.ui.PageAdapter r0;
        int i0, $i1;
        long $l2;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        i0 := @parameter0: int;

        $i1 = specialinvoke r0.<com.android.printspooler.ui.PageAdapter: int computePageIndexInDocument(int)>(i0);

        $l2 = (long) $i1;

        return $l2;
    }

    public void onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder)
    {
        com.android.printspooler.ui.PageAdapter r0;
        android.support.v7.widget.RecyclerView$ViewHolder r1;
        com.android.printspooler.ui.PageAdapter$MyViewHolder r2;
        com.android.printspooler.widget.PageContentView r3;
        android.view.View $r4, $r5;
        int $i0;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        r1 := @parameter0: android.support.v7.widget.RecyclerView$ViewHolder;

        r2 = (com.android.printspooler.ui.PageAdapter$MyViewHolder) r1;

        $r4 = r1.<android.support.v7.widget.RecyclerView$ViewHolder: android.view.View itemView>;

        $r5 = virtualinvoke $r4.<android.view.View: android.view.View findViewById(int)>(2131558401);

        r3 = (com.android.printspooler.widget.PageContentView) $r5;

        $i0 = r2.<com.android.printspooler.ui.PageAdapter$MyViewHolder: int mPageInAdapter>;

        specialinvoke r0.<com.android.printspooler.ui.PageAdapter: void recyclePageView(com.android.printspooler.widget.PageContentView,int)>(r3, $i0);

        r2.<com.android.printspooler.ui.PageAdapter$MyViewHolder: int mPageInAdapter> = -1;

        return;
    }

    public android.print.PageRange[] getRequestedPages()
    {
        com.android.printspooler.ui.PageAdapter r0;
        android.print.PageRange[] $r1;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        $r1 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mRequestedPages>;

        return $r1;
    }

    public android.print.PageRange[] getSelectedPages()
    {
        com.android.printspooler.ui.PageAdapter r0;
        android.print.PageRange[] r1, $r2, $r3, $r4;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        r1 = specialinvoke r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] computeSelectedPages()>();

        $r2 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mSelectedPages>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r2, r1);

        if $z0 != 0 goto label1;

        r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mSelectedPages> = r1;

        $r4 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mSelectedPages>;

        $i0 = r0.<com.android.printspooler.ui.PageAdapter: int mDocumentPageCount>;

        $i1 = staticinvoke <com.android.printspooler.util.PageRangeUtils: int getNormalizedPageCount(android.print.PageRange[],int)>($r4, $i0);

        r0.<com.android.printspooler.ui.PageAdapter: int mSelectedPageCount> = $i1;

        specialinvoke r0.<com.android.printspooler.ui.PageAdapter: void updatePreviewAreaPageSizeAndEmptyState()>();

        virtualinvoke r0.<com.android.printspooler.ui.PageAdapter: void notifyDataSetChanged()>();

     label1:
        $r3 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mSelectedPages>;

        return $r3;
    }

    public void onPreviewAreaSizeChanged()
    {
        com.android.printspooler.ui.PageAdapter r0;
        android.print.PrintAttributes$MediaSize $r1;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        $r1 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PrintAttributes$MediaSize mMediaSize>;

        if $r1 == null goto label1;

        specialinvoke r0.<com.android.printspooler.ui.PageAdapter: void updatePreviewAreaPageSizeAndEmptyState()>();

        virtualinvoke r0.<com.android.printspooler.ui.PageAdapter: void notifyDataSetChanged()>();

     label1:
        return;
    }

    private void updatePreviewAreaPageSizeAndEmptyState()
    {
        com.android.printspooler.ui.PageAdapter r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i67, $i68, $i69, $i70, $i71, $i72;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17;
        android.view.View r1;
        android.view.LayoutInflater r2;
        android.graphics.Canvas r3, $r17;
        android.graphics.Bitmap r4;
        com.android.printspooler.ui.PageAdapter$PreviewArea $r5, $r7, $r10, $r12;
        android.print.PrintAttributes$MediaSize $r6, $r8, $r9;
        android.content.Context $r11, $r16;
        android.graphics.Bitmap$Config $r13;
        android.content.res.Resources $r14;
        android.graphics.drawable.BitmapDrawable $r15;
        byte $b66;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        $r6 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PrintAttributes$MediaSize mMediaSize>;

        if $r6 != null goto label1;

        return;

     label1:
        $r5 = r0.<com.android.printspooler.ui.PageAdapter: com.android.printspooler.ui.PageAdapter$PreviewArea mPreviewArea>;

        i0 = interfaceinvoke $r5.<com.android.printspooler.ui.PageAdapter$PreviewArea: int getWidth()>();

        $r7 = r0.<com.android.printspooler.ui.PageAdapter: com.android.printspooler.ui.PageAdapter$PreviewArea mPreviewArea>;

        i1 = interfaceinvoke $r7.<com.android.printspooler.ui.PageAdapter$PreviewArea: int getHeight()>();

        $r8 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PrintAttributes$MediaSize mMediaSize>;

        $i14 = virtualinvoke $r8.<android.print.PrintAttributes$MediaSize: int getWidthMils()>();

        $f1 = (float) $i14;

        $r9 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PrintAttributes$MediaSize mMediaSize>;

        $i15 = virtualinvoke $r9.<android.print.PrintAttributes$MediaSize: int getHeightMils()>();

        $f2 = (float) $i15;

        f0 = $f1 / $f2;

        $i18 = r0.<com.android.printspooler.ui.PageAdapter: int mSelectedPageCount>;

        $i16 = r0.<com.android.printspooler.ui.PageAdapter: int mColumnCount>;

        i2 = staticinvoke <java.lang.Math: int min(int,int)>($i18, $i16);

        $r10 = r0.<com.android.printspooler.ui.PageAdapter: com.android.printspooler.ui.PageAdapter$PreviewArea mPreviewArea>;

        interfaceinvoke $r10.<com.android.printspooler.ui.PageAdapter$PreviewArea: void setColumnCount(int)>(i2);

        $i20 = 2 * i2;

        $i17 = r0.<com.android.printspooler.ui.PageAdapter: int mPreviewPageMargin>;

        i3 = $i20 * $i17;

        $i21 = r0.<com.android.printspooler.ui.PageAdapter: int mPreviewListPadding>;

        $i19 = 2 * $i21;

        i4 = i3 + $i19;

        $f6 = (float) i0;

        $f3 = (float) i4;

        $f4 = $f6 - $f3;

        $f7 = (float) i2;

        $f5 = $f4 / $f7;

        $f10 = $f5 + 0.5F;

        i5 = (int) $f10;

        $f11 = (float) i5;

        $f8 = $f11 / f0;

        $f9 = $f8 + 0.5F;

        i6 = (int) $f9;

        $i22 = r0.<com.android.printspooler.ui.PageAdapter: int mPreviewPageMinWidth>;

        $f14 = (float) $i22;

        $f13 = $f14 / f0;

        $f12 = $f13 + 0.5F;

        i7 = (int) $f12;

        $i25 = r0.<com.android.printspooler.ui.PageAdapter: int mPreviewListPadding>;

        $i26 = r0.<com.android.printspooler.ui.PageAdapter: int mPreviewPageMargin>;

        $i24 = $i25 + $i26;

        $i23 = 2 * $i24;

        $i28 = i1 - $i23;

        $i29 = r0.<com.android.printspooler.ui.PageAdapter: int mFooterHeight>;

        $i27 = $i28 - $i29;

        i8 = staticinvoke <java.lang.Math: int max(int,int)>(i7, $i27);

        $i31 = staticinvoke <java.lang.Math: int min(int,int)>(i6, i8);

        r0.<com.android.printspooler.ui.PageAdapter: int mPageContentHeight> = $i31;

        $i30 = r0.<com.android.printspooler.ui.PageAdapter: int mPageContentHeight>;

        $f16 = (float) $i30;

        $f15 = $f16 * f0;

        $f17 = $f15 + 0.5F;

        $i36 = (int) $f17;

        r0.<com.android.printspooler.ui.PageAdapter: int mPageContentWidth> = $i36;

        $i37 = r0.<com.android.printspooler.ui.PageAdapter: int mPageContentWidth>;

        $i38 = i2 * $i37;

        i9 = $i38 + i3;

        $i32 = i0 - i9;

        i10 = $i32 / 2;

        $i33 = r0.<com.android.printspooler.ui.PageAdapter: int mSelectedPageCount>;

        $i43 = $i33 / i2;

        $i34 = r0.<com.android.printspooler.ui.PageAdapter: int mSelectedPageCount>;

        $i35 = $i34 % i2;

        if $i35 <= 0 goto label2;

        $b66 = 1;

        goto label3;

     label2:
        $b66 = 0;

     label3:
        i11 = $i43 + $b66;

        $i45 = r0.<com.android.printspooler.ui.PageAdapter: int mPageContentHeight>;

        $i44 = r0.<com.android.printspooler.ui.PageAdapter: int mFooterHeight>;

        $i40 = $i45 + $i44;

        $i46 = r0.<com.android.printspooler.ui.PageAdapter: int mPreviewPageMargin>;

        $i39 = 2 * $i46;

        $i41 = $i40 + $i39;

        i12 = i11 * $i41;

        $i52 = r0.<com.android.printspooler.ui.PageAdapter: int mPageContentHeight>;

        $i42 = r0.<com.android.printspooler.ui.PageAdapter: int mFooterHeight>;

        $i54 = $i52 + $i42;

        $i51 = r0.<com.android.printspooler.ui.PageAdapter: int mPreviewListPadding>;

        $i47 = $i54 + $i51;

        $i53 = r0.<com.android.printspooler.ui.PageAdapter: int mPreviewPageMargin>;

        $i48 = 2 * $i53;

        $i50 = $i47 + $i48;

        if $i50 <= i1 goto label4;

        $i63 = r0.<com.android.printspooler.ui.PageAdapter: int mPageContentHeight>;

        $i71 = i1 - $i63;

        $i72 = r0.<com.android.printspooler.ui.PageAdapter: int mFooterHeight>;

        $i70 = $i71 - $i72;

        $i68 = $i70 / 2;

        $i69 = r0.<com.android.printspooler.ui.PageAdapter: int mPreviewPageMargin>;

        $i67 = $i68 - $i69;

        i13 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i67);

        goto label5;

     label4:
        $i56 = r0.<com.android.printspooler.ui.PageAdapter: int mPreviewListPadding>;

        $i49 = i1 - i12;

        $i57 = $i49 / 2;

        i13 = staticinvoke <java.lang.Math: int max(int,int)>($i56, $i57);

     label5:
        $r12 = r0.<com.android.printspooler.ui.PageAdapter: com.android.printspooler.ui.PageAdapter$PreviewArea mPreviewArea>;

        interfaceinvoke $r12.<com.android.printspooler.ui.PageAdapter$PreviewArea: void setPadding(int,int,int,int)>(i10, i13, i10, i13);

        $r11 = r0.<com.android.printspooler.ui.PageAdapter: android.content.Context mContext>;

        r2 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r11);

        r1 = virtualinvoke r2.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(2130903041, null, 0);

        $i55 = r0.<com.android.printspooler.ui.PageAdapter: int mPageContentWidth>;

        $i61 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i55, 1073741824);

        $i62 = r0.<com.android.printspooler.ui.PageAdapter: int mPageContentHeight>;

        $i60 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i62, 1073741824);

        virtualinvoke r1.<android.view.View: void measure(int,int)>($i61, $i60);

        $i59 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $i58 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(0, 0, $i59, $i58);

        $i65 = r0.<com.android.printspooler.ui.PageAdapter: int mPageContentWidth>;

        $i64 = r0.<com.android.printspooler.ui.PageAdapter: int mPageContentHeight>;

        $r13 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r4 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i65, $i64, $r13);

        $r17 = new android.graphics.Canvas;

        specialinvoke $r17.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r4);

        r3 = $r17;

        virtualinvoke r1.<android.view.View: void draw(android.graphics.Canvas)>(r3);

        $r15 = new android.graphics.drawable.BitmapDrawable;

        $r16 = r0.<com.android.printspooler.ui.PageAdapter: android.content.Context mContext>;

        $r14 = virtualinvoke $r16.<android.content.Context: android.content.res.Resources getResources()>();

        specialinvoke $r15.<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>($r14, r4);

        r0.<com.android.printspooler.ui.PageAdapter: android.graphics.drawable.BitmapDrawable mEmptyState> = $r15;

        return;
    }

    private android.print.PageRange[] computeSelectedPages()
    {
        com.android.printspooler.ui.PageAdapter r0;
        java.util.ArrayList r1, $r3;
        int i0, i1, i2, i3, i4, $i5, $i6;
        android.print.PageRange r2, $r6, $r8, r9;
        android.util.SparseArray $r4, $r7;
        android.print.PageRange[] r10;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r1 = $r3;

        i0 = -1;

        i1 = -1;

        $r4 = r0.<com.android.printspooler.ui.PageAdapter: android.util.SparseArray mConfirmedPagesInDocument>;

        i2 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        i3 = 0;

     label1:
        if i3 >= i2 goto label4;

        $r7 = r0.<com.android.printspooler.ui.PageAdapter: android.util.SparseArray mConfirmedPagesInDocument>;

        i4 = virtualinvoke $r7.<android.util.SparseArray: int keyAt(int)>(i3);

        if i0 != -1 goto label2;

        i1 = i4;

        i0 = i4;

     label2:
        $i6 = i1 + 1;

        if $i6 >= i4 goto label3;

        $r8 = new android.print.PageRange;

        specialinvoke $r8.<android.print.PageRange: void <init>(int,int)>(i0, i1);

        r2 = $r8;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        i0 = i4;

     label3:
        i1 = i4;

        i3 = i3 + 1;

        goto label1;

     label4:
        if i0 == -1 goto label5;

        if i1 == -1 goto label5;

        $r6 = new android.print.PageRange;

        specialinvoke $r6.<android.print.PageRange: void <init>(int,int)>(i0, i1);

        r9 = $r6;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r9);

     label5:
        $i5 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        r10 = newarray (android.print.PageRange)[$i5];

        virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r10);

        return r10;
    }

    public void destroy(java.lang.Runnable)
    {
        com.android.printspooler.ui.PageAdapter r0;
        java.lang.Runnable r1;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        r1 := @parameter0: java.lang.Runnable;

        specialinvoke r0.<com.android.printspooler.ui.PageAdapter: void throwIfNotClosed()>();

        specialinvoke r0.<com.android.printspooler.ui.PageAdapter: void doDestroy(java.lang.Runnable)>(r1);

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        com.android.printspooler.ui.PageAdapter r0;
        java.lang.Throwable r1, $r3;
        int $i0;
        dalvik.system.CloseGuard $r2;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

     label1:
        $i0 = r0.<com.android.printspooler.ui.PageAdapter: int mState>;

        if $i0 == 2 goto label2;

        $r2 = r0.<com.android.printspooler.ui.PageAdapter: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r2.<dalvik.system.CloseGuard: void warnIfOpen()>();

        specialinvoke r0.<com.android.printspooler.ui.PageAdapter: void doDestroy(java.lang.Runnable)>(null);

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        goto label5;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

     label4:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private int computePageIndexInDocument(int)
    {
        com.android.printspooler.ui.PageAdapter r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9;
        android.print.PageRange r1, $r4;
        android.print.PageRange[] $r2, $r3;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        i0 := @parameter0: int;

        i1 = 0;

        $r2 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mSelectedPages>;

        i2 = lengthof $r2;

        i3 = 0;

     label1:
        if i3 >= i2 goto label3;

        $r3 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mSelectedPages>;

        $r4 = $r3[i3];

        $i5 = r0.<com.android.printspooler.ui.PageAdapter: int mDocumentPageCount>;

        r1 = staticinvoke <com.android.printspooler.util.PageRangeUtils: android.print.PageRange asAbsoluteRange(android.print.PageRange,int)>($r4, $i5);

        $i6 = virtualinvoke r1.<android.print.PageRange: int getSize()>();

        i1 = i1 + $i6;

        if i1 <= i0 goto label2;

        $i7 = i1 - i0;

        i4 = $i7 - 1;

        $i8 = virtualinvoke r1.<android.print.PageRange: int getEnd()>();

        $i9 = $i8 - i4;

        return $i9;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return -1;
    }

    private int computePageIndexInFile(int)
    {
        com.android.printspooler.ui.PageAdapter r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, i8;
        android.print.PageRange r1;
        android.print.PageRange[] $r2, $r3, $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mSelectedPages>;

        $z0 = staticinvoke <com.android.printspooler.util.PageRangeUtils: boolean contains(android.print.PageRange[],int)>($r2, i0);

        if $z0 != 0 goto label1;

        return -1;

     label1:
        $r3 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mWrittenPages>;

        if $r3 != null goto label2;

        return -1;

     label2:
        i1 = -1;

        $r4 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mWrittenPages>;

        i2 = lengthof $r4;

        i3 = 0;

     label3:
        if i3 >= i2 goto label6;

        $r5 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mWrittenPages>;

        r1 = $r5[i3];

        $z1 = virtualinvoke r1.<android.print.PageRange: boolean contains(int)>(i0);

        if $z1 != 0 goto label4;

        $i7 = virtualinvoke r1.<android.print.PageRange: int getSize()>();

        i1 = i1 + $i7;

        goto label5;

     label4:
        $i4 = virtualinvoke r1.<android.print.PageRange: int getStart()>();

        $i5 = i0 - $i4;

        $i6 = $i5 + 1;

        i8 = i1 + $i6;

        return i8;

     label5:
        i3 = i3 + 1;

        goto label3;

     label6:
        return -1;
    }

    private void setConfirmedPages(android.print.PageRange[], int)
    {
        com.android.printspooler.ui.PageAdapter r0;
        android.print.PageRange[] r1;
        int i0, i1, i2, i3, $i4;
        android.print.PageRange r2, $r4;
        android.util.SparseArray $r3, $r5;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        r1 := @parameter0: android.print.PageRange[];

        i0 := @parameter1: int;

        $r3 = r0.<com.android.printspooler.ui.PageAdapter: android.util.SparseArray mConfirmedPagesInDocument>;

        virtualinvoke $r3.<android.util.SparseArray: void clear()>();

        i1 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label4;

        $r4 = r1[i2];

        r2 = staticinvoke <com.android.printspooler.util.PageRangeUtils: android.print.PageRange asAbsoluteRange(android.print.PageRange,int)>($r4, i0);

        i3 = virtualinvoke r2.<android.print.PageRange: int getStart()>();

     label2:
        $i4 = virtualinvoke r2.<android.print.PageRange: int getEnd()>();

        if i3 > $i4 goto label3;

        $r5 = r0.<com.android.printspooler.ui.PageAdapter: android.util.SparseArray mConfirmedPagesInDocument>;

        virtualinvoke $r5.<android.util.SparseArray: void put(int,java.lang.Object)>(i3, null);

        i3 = i3 + 1;

        goto label2;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    private void onSelectedPageNotInFile(int)
    {
        com.android.printspooler.ui.PageAdapter r0;
        int i0;
        android.print.PageRange[] r1, $r2;
        boolean $z0;
        com.android.printspooler.ui.PageAdapter$ContentCallbacks $r3;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        i0 := @parameter0: int;

        r1 = specialinvoke r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] computeRequestedPages(int)>(i0);

        $r2 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mRequestedPages>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r2, r1);

        if $z0 != 0 goto label1;

        r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mRequestedPages> = r1;

        $r3 = r0.<com.android.printspooler.ui.PageAdapter: com.android.printspooler.ui.PageAdapter$ContentCallbacks mCallbacks>;

        interfaceinvoke $r3.<com.android.printspooler.ui.PageAdapter$ContentCallbacks: void onRequestContentUpdate()>();

     label1:
        return;
    }

    private android.print.PageRange[] computeRequestedPages(int)
    {
        com.android.printspooler.ui.PageAdapter r0;
        int i0, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, i36, i37, i38, i39, i40, i41, i42, i43, i44, i45, i46, i47, i48, i49;
        java.util.ArrayList r1, $r7;
        byte b1;
        android.print.PageRange[] r2, $r6, $r8, $r9, $r10, $r12, $r15, $r19, $r22, $r23, $r24, r27;
        android.print.PageRange r3, r4, r5, $r13, $r14, $r16, $r17, $r18, $r20, $r21, r25, r26;
        boolean $z0, $z2, $z5, $z6, z7;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        i0 := @parameter0: int;

        $r6 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mRequestedPages>;

        if $r6 == null goto label01;

        $r24 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mRequestedPages>;

        $z6 = staticinvoke <com.android.printspooler.util.PageRangeUtils: boolean contains(android.print.PageRange[],int)>($r24, i0);

        if $z6 == 0 goto label01;

        $r23 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mRequestedPages>;

        return $r23;

     label01:
        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r1 = $r7;

        b1 = 50;

        $r8 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mSelectedPages>;

        i2 = lengthof $r8;

        r2 = specialinvoke r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] computeBoundPagesInDocument()>();

        i3 = lengthof r2;

        i4 = 0;

     label02:
        if i4 >= i3 goto label03;

        r3 = r2[i4];

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r3);

        i4 = i4 + 1;

        goto label02;

     label03:
        $i9 = r0.<com.android.printspooler.ui.PageAdapter: int mDocumentPageCount>;

        $i8 = staticinvoke <com.android.printspooler.util.PageRangeUtils: int getNormalizedPageCount(android.print.PageRange[],int)>(r2, $i9);

        i36 = b1 - $i8;

        $r9 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mRequestedPages>;

        if $r9 == null goto label04;

        $r19 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mRequestedPages>;

        $r22 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mRequestedPages>;

        $i35 = lengthof $r22;

        $i33 = $i35 - 1;

        $r20 = $r19[$i33];

        $i34 = virtualinvoke $r20.<android.print.PageRange: int getEnd()>();

        if i0 <= $i34 goto label05;

     label04:
        $z5 = 1;

        goto label06;

     label05:
        $z5 = 0;

     label06:
        z7 = $z5;

        if z7 != 0 goto label14;

        i37 = i2 - 1;

     label07:
        if i37 < 0 goto label13;

        if i36 > 0 goto label08;

        goto label13;

     label08:
        $r15 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mSelectedPages>;

        $r17 = $r15[i37];

        $i24 = r0.<com.android.printspooler.ui.PageAdapter: int mDocumentPageCount>;

        r4 = staticinvoke <com.android.printspooler.util.PageRangeUtils: android.print.PageRange asAbsoluteRange(android.print.PageRange,int)>($r17, $i24);

        $i25 = virtualinvoke r4.<android.print.PageRange: int getStart()>();

        if i0 >= $i25 goto label09;

        goto label12;

     label09:
        $z2 = virtualinvoke r4.<android.print.PageRange: boolean contains(int)>(i0);

        if $z2 == 0 goto label10;

        $i31 = virtualinvoke r4.<android.print.PageRange: int getStart()>();

        $i32 = i0 - $i31;

        i5 = $i32 + 1;

        i38 = staticinvoke <java.lang.Math: int min(int,int)>(i5, i36);

        $i29 = i0 - i38;

        $i30 = $i29 - 1;

        i6 = staticinvoke <java.lang.Math: int max(int,int)>($i30, 0);

        i39 = staticinvoke <java.lang.Math: int max(int,int)>(i38, 0);

        $r21 = new android.print.PageRange;

        specialinvoke $r21.<android.print.PageRange: void <init>(int,int)>(i6, i0);

        r5 = $r21;

        goto label11;

     label10:
        i40 = virtualinvoke r4.<android.print.PageRange: int getSize()>();

        i41 = staticinvoke <java.lang.Math: int min(int,int)>(i40, i36);

        i39 = staticinvoke <java.lang.Math: int max(int,int)>(i41, 0);

        $i26 = virtualinvoke r4.<android.print.PageRange: int getEnd()>();

        $i28 = $i26 - i39;

        $i27 = $i28 - 1;

        i42 = staticinvoke <java.lang.Math: int max(int,int)>($i27, 0);

        i7 = virtualinvoke r4.<android.print.PageRange: int getEnd()>();

        $r18 = new android.print.PageRange;

        specialinvoke $r18.<android.print.PageRange: void <init>(int,int)>(i42, i7);

        r5 = $r18;

     label11:
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r5);

        i36 = i36 - i39;

     label12:
        i37 = i37 + -1;

        goto label07;

     label13:
        goto label21;

     label14:
        i43 = 0;

     label15:
        if i43 >= i2 goto label21;

        if i36 > 0 goto label16;

        goto label21;

     label16:
        $r12 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] mSelectedPages>;

        $r13 = $r12[i43];

        $i11 = r0.<com.android.printspooler.ui.PageAdapter: int mDocumentPageCount>;

        r25 = staticinvoke <com.android.printspooler.util.PageRangeUtils: android.print.PageRange asAbsoluteRange(android.print.PageRange,int)>($r13, $i11);

        $i12 = virtualinvoke r25.<android.print.PageRange: int getEnd()>();

        if i0 <= $i12 goto label17;

        goto label20;

     label17:
        $z0 = virtualinvoke r25.<android.print.PageRange: boolean contains(int)>(i0);

        if $z0 == 0 goto label18;

        $i19 = virtualinvoke r25.<android.print.PageRange: int getEnd()>();

        $i18 = $i19 - i0;

        i44 = $i18 + 1;

        i45 = staticinvoke <java.lang.Math: int min(int,int)>(i44, i36);

        $i22 = i0 + i45;

        $i21 = $i22 - 1;

        $i23 = r0.<com.android.printspooler.ui.PageAdapter: int mDocumentPageCount>;

        $i20 = $i23 - 1;

        i46 = staticinvoke <java.lang.Math: int min(int,int)>($i21, $i20);

        $r16 = new android.print.PageRange;

        specialinvoke $r16.<android.print.PageRange: void <init>(int,int)>(i0, i46);

        r26 = $r16;

        goto label19;

     label18:
        i47 = virtualinvoke r25.<android.print.PageRange: int getSize()>();

        i45 = staticinvoke <java.lang.Math: int min(int,int)>(i47, i36);

        i48 = virtualinvoke r25.<android.print.PageRange: int getStart()>();

        $i15 = virtualinvoke r25.<android.print.PageRange: int getStart()>();

        $i13 = $i15 + i45;

        $i17 = $i13 - 1;

        $i14 = r0.<com.android.printspooler.ui.PageAdapter: int mDocumentPageCount>;

        $i16 = $i14 - 1;

        i49 = staticinvoke <java.lang.Math: int min(int,int)>($i17, $i16);

        $r14 = new android.print.PageRange;

        specialinvoke $r14.<android.print.PageRange: void <init>(int,int)>(i48, i49);

        r26 = $r14;

     label19:
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r26);

        i36 = i36 - i45;

     label20:
        i43 = i43 + 1;

        goto label15;

     label21:
        $i10 = interfaceinvoke r1.<java.util.List: int size()>();

        r27 = newarray (android.print.PageRange)[$i10];

        interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r27);

        $r10 = staticinvoke <com.android.printspooler.util.PageRangeUtils: android.print.PageRange[] normalize(android.print.PageRange[])>(r27);

        return $r10;
    }

    private android.print.PageRange[] computeBoundPagesInDocument()
    {
        com.android.printspooler.ui.PageAdapter r0;
        java.util.ArrayList r1, $r3;
        int i0, i1, i2, i3, i4, i5, $i6, $i7;
        android.print.PageRange r2, $r6, $r8, r9;
        android.util.SparseArray $r4, $r7;
        android.print.PageRange[] r10;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r1 = $r3;

        i0 = -1;

        i1 = -1;

        $r4 = r0.<com.android.printspooler.ui.PageAdapter: android.util.SparseArray mBoundPagesInAdapter>;

        i2 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        i3 = 0;

     label1:
        if i3 >= i2 goto label6;

        $r7 = r0.<com.android.printspooler.ui.PageAdapter: android.util.SparseArray mBoundPagesInAdapter>;

        i4 = virtualinvoke $r7.<android.util.SparseArray: int keyAt(int)>(i3);

        i5 = specialinvoke r0.<com.android.printspooler.ui.PageAdapter: int computePageIndexInDocument(int)>(i4);

        if i0 != -1 goto label2;

        i0 = i5;

     label2:
        if i1 != -1 goto label3;

        i1 = i5;

     label3:
        $i7 = i1 + 1;

        if i5 <= $i7 goto label4;

        $r8 = new android.print.PageRange;

        specialinvoke $r8.<android.print.PageRange: void <init>(int,int)>(i0, i1);

        r2 = $r8;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r2);

        i1 = i5;

        i0 = i5;

        goto label5;

     label4:
        i1 = i5;

     label5:
        i3 = i3 + 1;

        goto label1;

     label6:
        if i0 == -1 goto label7;

        if i1 == -1 goto label7;

        $r6 = new android.print.PageRange;

        specialinvoke $r6.<android.print.PageRange: void <init>(int,int)>(i0, i1);

        r9 = $r6;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r9);

     label7:
        $i6 = interfaceinvoke r1.<java.util.List: int size()>();

        r10 = newarray (android.print.PageRange)[$i6];

        interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r10);

        return r10;
    }

    private void recyclePageView(com.android.printspooler.widget.PageContentView, int)
    {
        com.android.printspooler.ui.PageAdapter r0;
        com.android.printspooler.widget.PageContentView r1;
        int i0;
        com.android.printspooler.model.PageContentRepository$PageContentProvider r2;
        android.util.SparseArray $r3;
        android.print.PrintAttributes$Margins $r4;
        android.print.PrintAttributes$MediaSize $r5;
        android.graphics.drawable.BitmapDrawable $r6;
        com.android.printspooler.model.PageContentRepository $r7;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        r1 := @parameter0: com.android.printspooler.widget.PageContentView;

        i0 := @parameter1: int;

        r2 = virtualinvoke r1.<com.android.printspooler.widget.PageContentView: com.android.printspooler.model.PageContentRepository$PageContentProvider getPageContentProvider()>();

        if r2 == null goto label1;

        $r6 = r0.<com.android.printspooler.ui.PageAdapter: android.graphics.drawable.BitmapDrawable mEmptyState>;

        $r5 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PrintAttributes$MediaSize mMediaSize>;

        $r4 = r0.<com.android.printspooler.ui.PageAdapter: android.print.PrintAttributes$Margins mMinMargins>;

        virtualinvoke r1.<com.android.printspooler.widget.PageContentView: void init(com.android.printspooler.model.PageContentRepository$PageContentProvider,android.graphics.drawable.Drawable,android.print.PrintAttributes$MediaSize,android.print.PrintAttributes$Margins)>(null, $r6, $r5, $r4);

        $r7 = r0.<com.android.printspooler.ui.PageAdapter: com.android.printspooler.model.PageContentRepository mPageContentRepository>;

        virtualinvoke $r7.<com.android.printspooler.model.PageContentRepository: void releasePageContentProvider(com.android.printspooler.model.PageContentRepository$PageContentProvider)>(r2);

     label1:
        $r3 = r0.<com.android.printspooler.ui.PageAdapter: android.util.SparseArray mBoundPagesInAdapter>;

        virtualinvoke $r3.<android.util.SparseArray: void remove(int)>(i0);

        virtualinvoke r1.<com.android.printspooler.widget.PageContentView: void setTag(java.lang.Object)>(null);

        return;
    }

    public void startPreloadContent(android.print.PageRange)
    {
        com.android.printspooler.ui.PageAdapter r0;
        android.print.PageRange r1;
        int i0, i1, i2, i3, $i4, $i5;
        com.android.printspooler.model.PageContentRepository $r2;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        r1 := @parameter0: android.print.PageRange;

        $i4 = virtualinvoke r1.<android.print.PageRange: int getStart()>();

        i0 = specialinvoke r0.<com.android.printspooler.ui.PageAdapter: int computePageIndexInDocument(int)>($i4);

        i1 = specialinvoke r0.<com.android.printspooler.ui.PageAdapter: int computePageIndexInFile(int)>(i0);

        $i5 = virtualinvoke r1.<android.print.PageRange: int getEnd()>();

        i2 = specialinvoke r0.<com.android.printspooler.ui.PageAdapter: int computePageIndexInDocument(int)>($i5);

        i3 = specialinvoke r0.<com.android.printspooler.ui.PageAdapter: int computePageIndexInFile(int)>(i2);

        if i0 == -1 goto label1;

        if i2 == -1 goto label1;

        $r2 = r0.<com.android.printspooler.ui.PageAdapter: com.android.printspooler.model.PageContentRepository mPageContentRepository>;

        virtualinvoke $r2.<com.android.printspooler.model.PageContentRepository: void startPreload(int,int)>(i1, i3);

     label1:
        return;
    }

    public void stopPreloadContent()
    {
        com.android.printspooler.ui.PageAdapter r0;
        com.android.printspooler.model.PageContentRepository $r1;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        $r1 = r0.<com.android.printspooler.ui.PageAdapter: com.android.printspooler.model.PageContentRepository mPageContentRepository>;

        virtualinvoke $r1.<com.android.printspooler.model.PageContentRepository: void stopPreload()>();

        return;
    }

    private void doDestroy(java.lang.Runnable)
    {
        com.android.printspooler.ui.PageAdapter r0;
        java.lang.Runnable r1;
        com.android.printspooler.model.PageContentRepository $r2;
        dalvik.system.CloseGuard $r3;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<com.android.printspooler.ui.PageAdapter: com.android.printspooler.model.PageContentRepository mPageContentRepository>;

        virtualinvoke $r2.<com.android.printspooler.model.PageContentRepository: void destroy(java.lang.Runnable)>(r1);

        $r3 = r0.<com.android.printspooler.ui.PageAdapter: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r3.<dalvik.system.CloseGuard: void close()>();

        r0.<com.android.printspooler.ui.PageAdapter: int mState> = 2;

        return;
    }

    private void throwIfNotOpened()
    {
        com.android.printspooler.ui.PageAdapter r0;
        int $i0;
        java.lang.IllegalStateException $r1;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        $i0 = r0.<com.android.printspooler.ui.PageAdapter: int mState>;

        if $i0 == 1 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not opened");

        throw $r1;

     label1:
        return;
    }

    private void throwIfNotClosed()
    {
        com.android.printspooler.ui.PageAdapter r0;
        int $i0;
        java.lang.IllegalStateException $r1;

        r0 := @this: com.android.printspooler.ui.PageAdapter;

        $i0 = r0.<com.android.printspooler.ui.PageAdapter: int mState>;

        if $i0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not closed");

        throw $r1;

     label1:
        return;
    }

    static int access$200(com.android.printspooler.ui.PageAdapter, int)
    {
        com.android.printspooler.ui.PageAdapter r0;
        int i0, $i1;

        r0 := @parameter0: com.android.printspooler.ui.PageAdapter;

        i0 := @parameter1: int;

        $i1 = specialinvoke r0.<com.android.printspooler.ui.PageAdapter: int computePageIndexInDocument(int)>(i0);

        return $i1;
    }

    static android.util.SparseArray access$300(com.android.printspooler.ui.PageAdapter)
    {
        com.android.printspooler.ui.PageAdapter r0;
        android.util.SparseArray $r1;

        r0 := @parameter0: com.android.printspooler.ui.PageAdapter;

        $r1 = r0.<com.android.printspooler.ui.PageAdapter: android.util.SparseArray mConfirmedPagesInDocument>;

        return $r1;
    }

    static void <clinit>()
    {
        android.print.PageRange[] $r0;
        android.print.PageRange $r1;

        <com.android.printspooler.ui.PageAdapter: int STATE_DESTROYED> = 2;

        <com.android.printspooler.ui.PageAdapter: int STATE_OPENED> = 1;

        <com.android.printspooler.ui.PageAdapter: int STATE_CLOSED> = 0;

        <com.android.printspooler.ui.PageAdapter: int INVALID_PAGE_INDEX> = -1;

        <com.android.printspooler.ui.PageAdapter: boolean DEBUG> = 0;

        <com.android.printspooler.ui.PageAdapter: int MAX_PREVIEW_PAGES_BATCH> = 50;

        <com.android.printspooler.ui.PageAdapter: java.lang.String LOG_TAG> = "PageAdapter";

        $r0 = newarray (android.print.PageRange)[1];

        $r1 = <android.print.PageRange: android.print.PageRange ALL_PAGES>;

        $r0[0] = $r1;

        <com.android.printspooler.ui.PageAdapter: android.print.PageRange[] ALL_PAGES_ARRAY> = $r0;

        return;
    }
}
