public final class com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver extends android.content.BroadcastReceiver
{
    private static final java.lang.String LOG_TAG;

    public void <init>()
    {
        com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver r0;

        r0 := @this: com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver r0;
        android.content.Context r1;
        android.content.Intent r2;
        java.lang.String r3;
        android.print.PrintJobId r4, r9;
        boolean $z0, $z1;
        android.os.Bundle $r5, $r7;
        android.os.Parcelable $r6, $r8;

        r0 := @this: com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        r3 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        if r3 == null goto label1;

        $z1 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("INTENT_ACTION_CANCEL_PRINTJOB");

        if $z1 == 0 goto label1;

        $r7 = virtualinvoke r2.<android.content.Intent: android.os.Bundle getExtras()>();

        $r8 = virtualinvoke $r7.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("EXTRA_PRINT_JOB_ID");

        r4 = (android.print.PrintJobId) $r8;

        specialinvoke r0.<com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver: void handleCancelPrintJob(android.content.Context,android.print.PrintJobId)>(r1, r4);

        goto label2;

     label1:
        if r3 == null goto label2;

        $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("INTENT_ACTION_RESTART_PRINTJOB");

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r2.<android.content.Intent: android.os.Bundle getExtras()>();

        $r6 = virtualinvoke $r5.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("EXTRA_PRINT_JOB_ID");

        r9 = (android.print.PrintJobId) $r6;

        specialinvoke r0.<com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver: void handleRestartPrintJob(android.content.Context,android.print.PrintJobId)>(r1, r9);

     label2:
        return;
    }

    private void handleCancelPrintJob(android.content.Context, android.print.PrintJobId)
    {
        com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver r0;
        android.content.Context r1;
        android.print.PrintJobId r2;
        android.os.PowerManager r3;
        android.os.PowerManager$WakeLock r4;
        java.lang.Object $r5;
        com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver$1 $r6;
        java.lang.Void[] $r7;
        java.util.concurrent.Executor $r8;

        r0 := @this: com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.print.PrintJobId;

        $r5 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        r3 = (android.os.PowerManager) $r5;

        r4 = virtualinvoke r3.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "NotificationBroadcastReceiver");

        virtualinvoke r4.<android.os.PowerManager$WakeLock: void acquire()>();

        $r6 = new com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver$1;

        specialinvoke $r6.<com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver$1: void <init>(com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver,android.print.PrintJobId,android.os.PowerManager$WakeLock)>(r0, r2, r4);

        $r8 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r7 = (java.lang.Void[]) null;

        virtualinvoke $r6.<com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver$1: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r8, $r7);

        return;
    }

    private void handleRestartPrintJob(android.content.Context, android.print.PrintJobId)
    {
        com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver r0;
        android.content.Context r1;
        android.print.PrintJobId r2;
        android.os.PowerManager r3;
        android.os.PowerManager$WakeLock r4;
        java.lang.Object $r5;
        com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver$2 $r6;
        java.lang.Void[] $r7;
        java.util.concurrent.Executor $r8;

        r0 := @this: com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.print.PrintJobId;

        $r5 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        r3 = (android.os.PowerManager) $r5;

        r4 = virtualinvoke r3.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "NotificationBroadcastReceiver");

        virtualinvoke r4.<android.os.PowerManager$WakeLock: void acquire()>();

        $r6 = new com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver$2;

        specialinvoke $r6.<com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver$2: void <init>(com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver,android.print.PrintJobId,android.os.PowerManager$WakeLock)>(r0, r2, r4);

        $r8 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r7 = (java.lang.Void[]) null;

        virtualinvoke $r6.<com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver$2: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r8, $r7);

        return;
    }

    public static void <clinit>()
    {
        <com.android.printspooler.model.NotificationController$NotificationBroadcastReceiver: java.lang.String LOG_TAG> = "NotificationBroadcastReceiver";

        return;
    }
}
