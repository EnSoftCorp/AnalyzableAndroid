public final class com.android.commands.bu.Backup extends java.lang.Object
{
    static final java.lang.String TAG;
    static java.lang.String[] mArgs;
    int mNextArg;
    android.app.backup.IBackupManager mBackupManager;

    public void <init>()
    {
        com.android.commands.bu.Backup r0;

        r0 := @this: com.android.commands.bu.Backup;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        java.lang.Exception r1, $r8;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r4, $r6;
        com.android.commands.bu.Backup $r7;

        r0 := @parameter0: java.lang.String[];

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Beginning: ");

        $r4 = r0[0];

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("bu", $r6);

        <com.android.commands.bu.Backup: java.lang.String[] mArgs> = r0;

     label1:
        $r7 = new com.android.commands.bu.Backup;

        specialinvoke $r7.<com.android.commands.bu.Backup: void <init>()>();

        virtualinvoke $r7.<com.android.commands.bu.Backup: void run()>();

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r1 = $r8;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("bu", "Error running backup/restore", r1);

     label4:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("bu", "Finished.");

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void run()
    {
        com.android.commands.bu.Backup r0;
        java.lang.String r1, $r9;
        android.os.IBinder $r2;
        android.app.backup.IBackupManager $r3, $r4;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        int $i1, $i3;

        r0 := @this: com.android.commands.bu.Backup;

        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("backup");

        $r3 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager asInterface(android.os.IBinder)>($r2);

        r0.<com.android.commands.bu.Backup: android.app.backup.IBackupManager mBackupManager> = $r3;

        $r4 = r0.<com.android.commands.bu.Backup: android.app.backup.IBackupManager mBackupManager>;

        if $r4 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("bu", "Can\'t obtain Backup Manager binder");

        return;

     label1:
        r1 = specialinvoke r0.<com.android.commands.bu.Backup: java.lang.String nextArg()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("backup");

        if $z0 == 0 goto label2;

        $i3 = <android.system.OsConstants: int STDOUT_FILENO>;

        specialinvoke r0.<com.android.commands.bu.Backup: void doFullBackup(int)>($i3);

        goto label4;

     label2:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("restore");

        if $z1 == 0 goto label3;

        $i1 = <android.system.OsConstants: int STDIN_FILENO>;

        specialinvoke r0.<com.android.commands.bu.Backup: void doFullRestore(int)>($i1);

        goto label4;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid operation \'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("bu", $r9);

     label4:
        return;
    }

    private void doFullBackup(int)
    {
        com.android.commands.bu.Backup r0;
        int i0, $i1, $i3, $i5;
        java.util.ArrayList r1, $r7;
        boolean z0, z1, z2, z3, z4, z5, z6, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21;
        java.lang.String r2, $r8, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r25, $r26;
        android.os.ParcelFileDescriptor r3;
        java.lang.String[] r4, $r10;
        java.lang.Throwable r5, $r33;
        android.app.backup.IBackupManager $r9;
        java.lang.Object[] $r11;
        java.lang.StringBuilder $r24, $r27, $r28;
        android.os.RemoteException $r29;
        java.io.IOException $r30, $r31, $r32;

        r0 := @this: com.android.commands.bu.Backup;

        i0 := @parameter0: int;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r1 = $r7;

        z0 = 0;

        z1 = 0;

        z2 = 0;

        z3 = 0;

        z4 = 0;

        z5 = 1;

        z6 = 1;

     label01:
        $r8 = specialinvoke r0.<com.android.commands.bu.Backup: java.lang.String nextArg()>();

        r2 = $r8;

        if $r8 == null goto label16;

        $z8 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z8 == 0 goto label15;

        $r12 = "-apk";

        $z9 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z9 == 0 goto label02;

        z0 = 1;

        goto label01;

     label02:
        $r13 = "-noapk";

        $z10 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z10 == 0 goto label03;

        z0 = 0;

        goto label01;

     label03:
        $r15 = "-obb";

        $z12 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z12 == 0 goto label04;

        z1 = 1;

        goto label01;

     label04:
        $r14 = "-noobb";

        $z11 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z11 == 0 goto label05;

        z1 = 0;

        goto label01;

     label05:
        $r17 = "-shared";

        $z14 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z14 == 0 goto label06;

        z2 = 1;

        goto label01;

     label06:
        $r16 = "-noshared";

        $z13 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z13 == 0 goto label07;

        z2 = 0;

        goto label01;

     label07:
        $r19 = "-system";

        $z16 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z16 == 0 goto label08;

        z5 = 1;

        goto label01;

     label08:
        $r18 = "-nosystem";

        $z15 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z15 == 0 goto label09;

        z5 = 0;

        goto label01;

     label09:
        $r21 = "-widgets";

        $z18 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z18 == 0 goto label10;

        z4 = 1;

        goto label01;

     label10:
        $r20 = "-nowidgets";

        $z17 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z17 == 0 goto label11;

        z4 = 0;

        goto label01;

     label11:
        $r23 = "-all";

        $z20 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z20 == 0 goto label12;

        z3 = 1;

        goto label01;

     label12:
        $r22 = "-compress";

        $z19 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z19 == 0 goto label13;

        z6 = 1;

        goto label01;

     label13:
        $r25 = "-nocompress";

        $z21 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z21 == 0 goto label14;

        z6 = 0;

        goto label01;

     label14:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown backup flag ");

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("bu", $r26);

        goto label01;

     label15:
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        goto label01;

     label16:
        if z3 == 0 goto label17;

        $i5 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i5 <= 0 goto label17;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("bu", "-all passed for backup along with specific package names");

     label17:
        if z3 != 0 goto label18;

        if z2 != 0 goto label18;

        $i3 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i3 != 0 goto label18;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("bu", "no backup packages supplied and neither -shared nor -all given");

        return;

     label18:
        r3 = null;

     label19:
        r3 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor adoptFd(int)>(i0);

        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        r4 = newarray (java.lang.String)[$i1];

        $r9 = r0.<com.android.commands.bu.Backup: android.app.backup.IBackupManager mBackupManager>;

        $r11 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r4);

        $r10 = (java.lang.String[]) $r11;

        interfaceinvoke $r9.<android.app.backup.IBackupManager: void fullBackup(android.os.ParcelFileDescriptor,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.lang.String[])>(r3, z0, z1, z2, z4, z3, z5, z6, $r10);

     label20:
        if r3 == null goto label35;

     label21:
        virtualinvoke r3.<android.os.ParcelFileDescriptor: void close()>();

     label22:
        goto label35;

     label23:
        $r32 := @caughtexception;

        goto label35;

     label24:
        $r29 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("bu", "Unable to invoke backup manager for backup");

     label25:
        if r3 == null goto label35;

     label26:
        virtualinvoke r3.<android.os.ParcelFileDescriptor: void close()>();

     label27:
        goto label35;

     label28:
        $r31 := @caughtexception;

        goto label35;

     label29:
        $r33 := @caughtexception;

        r5 = $r33;

     label30:
        if r3 == null goto label34;

     label31:
        virtualinvoke r3.<android.os.ParcelFileDescriptor: void close()>();

     label32:
        goto label34;

     label33:
        $r30 := @caughtexception;

     label34:
        throw r5;

     label35:
        return;

        catch java.io.IOException from label21 to label22 with label23;
        catch android.os.RemoteException from label19 to label20 with label24;
        catch java.io.IOException from label26 to label27 with label28;
        catch java.lang.Throwable from label19 to label20 with label29;
        catch java.lang.Throwable from label24 to label25 with label29;
        catch java.io.IOException from label31 to label32 with label33;
        catch java.lang.Throwable from label29 to label30 with label29;
    }

    private void doFullRestore(int)
    {
        com.android.commands.bu.Backup r0;
        int i0;
        android.os.ParcelFileDescriptor r1;
        java.lang.Throwable r3, $r7;
        android.app.backup.IBackupManager $r5;
        java.io.IOException $r6, $r9, $r10;
        android.os.RemoteException $r8;

        r0 := @this: com.android.commands.bu.Backup;

        i0 := @parameter0: int;

        r1 = null;

     label01:
        r1 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor adoptFd(int)>(i0);

        $r5 = r0.<com.android.commands.bu.Backup: android.app.backup.IBackupManager mBackupManager>;

        interfaceinvoke $r5.<android.app.backup.IBackupManager: void fullRestore(android.os.ParcelFileDescriptor)>(r1);

     label02:
        if r1 == null goto label17;

     label03:
        virtualinvoke r1.<android.os.ParcelFileDescriptor: void close()>();

     label04:
        goto label17;

     label05:
        $r10 := @caughtexception;

        goto label17;

     label06:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("bu", "Unable to invoke backup manager for restore");

     label07:
        if r1 == null goto label17;

     label08:
        virtualinvoke r1.<android.os.ParcelFileDescriptor: void close()>();

     label09:
        goto label17;

     label10:
        $r9 := @caughtexception;

        goto label17;

     label11:
        $r7 := @caughtexception;

        r3 = $r7;

     label12:
        if r1 == null goto label16;

     label13:
        virtualinvoke r1.<android.os.ParcelFileDescriptor: void close()>();

     label14:
        goto label16;

     label15:
        $r6 := @caughtexception;

     label16:
        throw r3;

     label17:
        return;

        catch java.io.IOException from label03 to label04 with label05;
        catch android.os.RemoteException from label01 to label02 with label06;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    private java.lang.String nextArg()
    {
        com.android.commands.bu.Backup r0;
        java.lang.String r1;
        java.lang.String[] $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.commands.bu.Backup;

        $i1 = r0.<com.android.commands.bu.Backup: int mNextArg>;

        $r2 = <com.android.commands.bu.Backup: java.lang.String[] mArgs>;

        $i0 = lengthof $r2;

        if $i1 < $i0 goto label1;

        return null;

     label1:
        $r3 = <com.android.commands.bu.Backup: java.lang.String[] mArgs>;

        $i2 = r0.<com.android.commands.bu.Backup: int mNextArg>;

        r1 = $r3[$i2];

        $i3 = r0.<com.android.commands.bu.Backup: int mNextArg>;

        $i4 = $i3 + 1;

        r0.<com.android.commands.bu.Backup: int mNextArg> = $i4;

        return r1;
    }

    public static void <clinit>()
    {
        <com.android.commands.bu.Backup: java.lang.String TAG> = "bu";

        return;
    }
}
