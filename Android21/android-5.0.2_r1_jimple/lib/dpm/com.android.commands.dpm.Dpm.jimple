public final class com.android.commands.dpm.Dpm extends com.android.internal.os.BaseCommand
{
    private static final java.lang.String COMMAND_SET_DEVICE_OWNER;
    private static final java.lang.String COMMAND_SET_PROFILE_OWNER;
    private android.app.admin.IDevicePolicyManager mDevicePolicyManager;

    public void <init>()
    {
        com.android.commands.dpm.Dpm r0;

        r0 := @this: com.android.commands.dpm.Dpm;

        specialinvoke r0.<com.android.internal.os.BaseCommand: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        com.android.commands.dpm.Dpm $r1;

        r0 := @parameter0: java.lang.String[];

        $r1 = new com.android.commands.dpm.Dpm;

        specialinvoke $r1.<com.android.commands.dpm.Dpm: void <init>()>();

        virtualinvoke $r1.<com.android.commands.dpm.Dpm: void run(java.lang.String[])>(r0);

        return;
    }

    public void onShowUsage(java.io.PrintStream)
    {
        com.android.commands.dpm.Dpm r0;
        java.io.PrintStream r1;

        r0 := @this: com.android.commands.dpm.Dpm;

        r1 := @parameter0: java.io.PrintStream;

        virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>("usage: dpm [subcommand] [options]\nusage: dpm set-device-owner <COMPONENT>\nusage: dpm set-profile-owner <COMPONENT> <USER_ID>\n\ndpm set-device-owner: Sets the given component as active admin, and its\n  package as device owner.\n\ndpm set-profile-owner: Sets the given component as active admin and profile  owner for an existing user.\n");

        return;
    }

    public void onRun() throws java.lang.Exception
    {
        com.android.commands.dpm.Dpm r0;
        java.lang.String r1, r2, $r11;
        byte b0;
        android.os.IBinder $r3;
        android.app.admin.IDevicePolicyManager $r4, $r5;
        int $i1;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;

        r0 := @this: com.android.commands.dpm.Dpm;

        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("device_policy");

        $r4 = staticinvoke <android.app.admin.IDevicePolicyManager$Stub: android.app.admin.IDevicePolicyManager asInterface(android.os.IBinder)>($r3);

        r0.<com.android.commands.dpm.Dpm: android.app.admin.IDevicePolicyManager mDevicePolicyManager> = $r4;

        $r5 = r0.<com.android.commands.dpm.Dpm: android.app.admin.IDevicePolicyManager mDevicePolicyManager>;

        if $r5 != null goto label1;

        virtualinvoke r0.<com.android.commands.dpm.Dpm: void showError(java.lang.String)>("Error: Could not access the Device Policy Manager. Is the system running?");

        return;

     label1:
        r1 = virtualinvoke r0.<com.android.commands.dpm.Dpm: java.lang.String nextArgRequired()>();

        r2 = r1;

        b0 = -1;

        $i1 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        lookupswitch($i1)
        {
            case -1791908857: goto label2;
            case 639813476: goto label3;
            default: goto label4;
        };

     label2:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("set-device-owner");

        if $z1 == 0 goto label4;

        b0 = 0;

        goto label4;

     label3:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("set-profile-owner");

        if $z0 == 0 goto label4;

        b0 = 1;

     label4:
        lookupswitch(b0)
        {
            case 0: goto label5;
            case 1: goto label6;
            default: goto label7;
        };

     label5:
        specialinvoke r0.<com.android.commands.dpm.Dpm: void runSetDeviceOwner()>();

        goto label8;

     label6:
        specialinvoke r0.<com.android.commands.dpm.Dpm: void runSetProfileOwner()>();

        goto label8;

     label7:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown command \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label8:
        return;
    }

    private void runSetDeviceOwner() throws android.os.RemoteException
    {
        com.android.commands.dpm.Dpm r0;
        android.content.ComponentName r1;
        java.lang.String r2, $r4, $r11, $r16, $r18, $r24;
        java.lang.Exception r3, $r23;
        android.app.admin.IDevicePolicyManager $r5, $r6, $r25;
        boolean $z0;
        java.lang.StringBuilder $r7, $r9, $r10, $r12, $r13, $r15, $r19, $r20, $r21, $r22;
        java.io.PrintStream $r8, $r14;
        java.lang.RuntimeException $r17;

        r0 := @this: com.android.commands.dpm.Dpm;

        $r4 = virtualinvoke r0.<com.android.commands.dpm.Dpm: java.lang.String nextArgRequired()>();

        r1 = specialinvoke r0.<com.android.commands.dpm.Dpm: android.content.ComponentName parseComponentName(java.lang.String)>($r4);

        $r5 = r0.<com.android.commands.dpm.Dpm: android.app.admin.IDevicePolicyManager mDevicePolicyManager>;

        interfaceinvoke $r5.<android.app.admin.IDevicePolicyManager: void setActiveAdmin(android.content.ComponentName,boolean,int)>(r1, 1, 0);

        r2 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

     label1:
        $r6 = r0.<com.android.commands.dpm.Dpm: android.app.admin.IDevicePolicyManager mDevicePolicyManager>;

        $z0 = interfaceinvoke $r6.<android.app.admin.IDevicePolicyManager: boolean setDeviceOwner(java.lang.String,java.lang.String)>(r2, null);

        if $z0 != 0 goto label2;

        $r17 = new java.lang.RuntimeException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t set package ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as device owner.");

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>($r24);

        throw $r17;

     label2:
        goto label4;

     label3:
        $r23 := @caughtexception;

        r3 = $r23;

        $r25 = r0.<com.android.commands.dpm.Dpm: android.app.admin.IDevicePolicyManager mDevicePolicyManager>;

        interfaceinvoke $r25.<android.app.admin.IDevicePolicyManager: void removeActiveAdmin(android.content.ComponentName,int)>(r1, 0);

        throw r3;

     label4:
        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Success: Device owner set to package ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r11);

        $r14 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Active admin set to component ");

        $r16 = virtualinvoke r1.<android.content.ComponentName: java.lang.String toShortString()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r18);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void runSetProfileOwner() throws android.os.RemoteException
    {
        com.android.commands.dpm.Dpm r0;
        android.content.ComponentName r1;
        int i0;
        java.lang.Exception r2, $r22;
        java.lang.String $r3, $r4, $r10, $r15, $r19, $r23;
        android.app.admin.IDevicePolicyManager $r5, $r6, $r24;
        boolean $z0;
        java.lang.StringBuilder $r7, $r9, $r11, $r12, $r13, $r16, $r17, $r18, $r20, $r21;
        java.io.PrintStream $r8;
        java.lang.RuntimeException $r14;

        r0 := @this: com.android.commands.dpm.Dpm;

        $r3 = virtualinvoke r0.<com.android.commands.dpm.Dpm: java.lang.String nextArgRequired()>();

        r1 = specialinvoke r0.<com.android.commands.dpm.Dpm: android.content.ComponentName parseComponentName(java.lang.String)>($r3);

        $r4 = virtualinvoke r0.<com.android.commands.dpm.Dpm: java.lang.String nextArgRequired()>();

        i0 = specialinvoke r0.<com.android.commands.dpm.Dpm: int parseInt(java.lang.String)>($r4);

        $r5 = r0.<com.android.commands.dpm.Dpm: android.app.admin.IDevicePolicyManager mDevicePolicyManager>;

        interfaceinvoke $r5.<android.app.admin.IDevicePolicyManager: void setActiveAdmin(android.content.ComponentName,boolean,int)>(r1, 1, i0);

     label1:
        $r6 = r0.<com.android.commands.dpm.Dpm: android.app.admin.IDevicePolicyManager mDevicePolicyManager>;

        $z0 = interfaceinvoke $r6.<android.app.admin.IDevicePolicyManager: boolean setProfileOwner(android.content.ComponentName,java.lang.String,int)>(r1, "", i0);

        if $z0 != 0 goto label2;

        $r14 = new java.lang.RuntimeException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t set component ");

        $r19 = virtualinvoke r1.<android.content.ComponentName: java.lang.String toShortString()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as profile owner for user ");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r23);

        throw $r14;

     label2:
        goto label4;

     label3:
        $r22 := @caughtexception;

        r2 = $r22;

        $r24 = r0.<com.android.commands.dpm.Dpm: android.app.admin.IDevicePolicyManager mDevicePolicyManager>;

        interfaceinvoke $r24.<android.app.admin.IDevicePolicyManager: void removeActiveAdmin(android.content.ComponentName,int)>(r1, i0);

        throw r2;

     label4:
        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Success: Active admin and profile owner set to ");

        $r10 = virtualinvoke r1.<android.content.ComponentName: java.lang.String toShortString()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r15);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private android.content.ComponentName parseComponentName(java.lang.String)
    {
        com.android.commands.dpm.Dpm r0;
        java.lang.String r1, $r7;
        android.content.ComponentName r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: com.android.commands.dpm.Dpm;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r1);

        if r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid component ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        return r2;
    }

    private int parseInt(java.lang.String)
    {
        com.android.commands.dpm.Dpm r0;
        java.lang.String r1, $r9;
        java.lang.NumberFormatException r2, $r3;
        int $i0;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;

        r0 := @this: com.android.commands.dpm.Dpm;

        r1 := @parameter0: java.lang.String;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label2:
        return $i0;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid integer argument \'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r9, r2);

        throw $r4;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.android.commands.dpm.Dpm: java.lang.String COMMAND_SET_PROFILE_OWNER> = "set-profile-owner";

        <com.android.commands.dpm.Dpm: java.lang.String COMMAND_SET_DEVICE_OWNER> = "set-device-owner";

        return;
    }
}
