final class com.google.common.collect.MapMaker$NullComputingConcurrentMap extends com.google.common.collect.MapMaker$NullConcurrentMap
{
    private static final long serialVersionUID;
    final com.google.common.base.Function computingFunction;

    void <init>(com.google.common.collect.MapMaker, com.google.common.base.Function)
    {
        com.google.common.collect.MapMaker$NullComputingConcurrentMap r0;
        com.google.common.collect.MapMaker r1;
        com.google.common.base.Function r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.google.common.collect.MapMaker$NullComputingConcurrentMap;

        r1 := @parameter0: com.google.common.collect.MapMaker;

        r2 := @parameter1: com.google.common.base.Function;

        specialinvoke r0.<com.google.common.collect.MapMaker$NullConcurrentMap: void <init>(com.google.common.collect.MapMaker)>(r1);

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r4 = (com.google.common.base.Function) $r3;

        r0.<com.google.common.collect.MapMaker$NullComputingConcurrentMap: com.google.common.base.Function computingFunction> = $r4;

        return;
    }

    public java.lang.Object get(java.lang.Object)
    {
        com.google.common.collect.MapMaker$NullComputingConcurrentMap r0;
        java.lang.Object r1, r2, r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9;
        com.google.common.base.Function $r5;
        java.lang.String $r10;

        r0 := @this: com.google.common.collect.MapMaker$NullComputingConcurrentMap;

        r1 := @parameter0: java.lang.Object;

        r2 = r1;

        r3 = specialinvoke r0.<com.google.common.collect.MapMaker$NullComputingConcurrentMap: java.lang.Object compute(java.lang.Object)>(r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<com.google.common.collect.MapMaker$NullComputingConcurrentMap: com.google.common.base.Function computingFunction>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" returned null for key ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r3, $r10);

        virtualinvoke r0.<com.google.common.collect.MapMaker$NullComputingConcurrentMap: void notifyRemoval(java.lang.Object,java.lang.Object)>(r2, r3);

        return r3;
    }

    private java.lang.Object compute(java.lang.Object)
    {
        com.google.common.collect.MapMaker$NullComputingConcurrentMap r0;
        java.lang.Object r1, $r5;
        com.google.common.collect.ComputationException r2, $r7, $r8;
        com.google.common.base.Function $r4;
        java.lang.Throwable $r6, r9;

        r0 := @this: com.google.common.collect.MapMaker$NullComputingConcurrentMap;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

     label1:
        $r4 = r0.<com.google.common.collect.MapMaker$NullComputingConcurrentMap: com.google.common.base.Function computingFunction>;

        $r5 = interfaceinvoke $r4.<com.google.common.base.Function: java.lang.Object apply(java.lang.Object)>(r1);

     label2:
        return $r5;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        throw r2;

     label4:
        $r6 := @caughtexception;

        r9 = $r6;

        $r7 = new com.google.common.collect.ComputationException;

        specialinvoke $r7.<com.google.common.collect.ComputationException: void <init>(java.lang.Throwable)>(r9);

        throw $r7;

        catch com.google.common.collect.ComputationException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public static void <clinit>()
    {
        <com.google.common.collect.MapMaker$NullComputingConcurrentMap: long serialVersionUID> = 0L;

        return;
    }
}
