class com.google.common.collect.AbstractMultimap$AsMap extends java.util.AbstractMap
{
    final transient java.util.Map submap;
    transient java.util.Set entrySet;
    final com.google.common.collect.AbstractMultimap this$0;

    void <init>(com.google.common.collect.AbstractMultimap, java.util.Map)
    {
        com.google.common.collect.AbstractMultimap$AsMap r0;
        com.google.common.collect.AbstractMultimap r1;
        java.util.Map r2;

        r0 := @this: com.google.common.collect.AbstractMultimap$AsMap;

        r1 := @parameter0: com.google.common.collect.AbstractMultimap;

        r2 := @parameter1: java.util.Map;

        r0.<com.google.common.collect.AbstractMultimap$AsMap: com.google.common.collect.AbstractMultimap this$0> = r1;

        specialinvoke r0.<java.util.AbstractMap: void <init>()>();

        r0.<com.google.common.collect.AbstractMultimap$AsMap: java.util.Map submap> = r2;

        return;
    }

    public java.util.Set entrySet()
    {
        com.google.common.collect.AbstractMultimap$AsMap r0;
        java.util.Set r1, $r2;
        com.google.common.collect.AbstractMultimap$AsMap$AsMapEntries r3;

        r0 := @this: com.google.common.collect.AbstractMultimap$AsMap;

        r1 = r0.<com.google.common.collect.AbstractMultimap$AsMap: java.util.Set entrySet>;

        if r1 != null goto label1;

        r3 = new com.google.common.collect.AbstractMultimap$AsMap$AsMapEntries;

        $r2 = r3;

        specialinvoke r3.<com.google.common.collect.AbstractMultimap$AsMap$AsMapEntries: void <init>(com.google.common.collect.AbstractMultimap$AsMap)>(r0);

        r0.<com.google.common.collect.AbstractMultimap$AsMap: java.util.Set entrySet> = r3;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }

    public boolean containsKey(java.lang.Object)
    {
        com.google.common.collect.AbstractMultimap$AsMap r0;
        java.lang.Object r1;
        java.util.Map $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.AbstractMultimap$AsMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.AbstractMultimap$AsMap: java.util.Map submap>;

        $z0 = staticinvoke <com.google.common.collect.Maps: boolean safeContainsKey(java.util.Map,java.lang.Object)>($r2, r1);

        return $z0;
    }

    public java.util.Collection get(java.lang.Object)
    {
        com.google.common.collect.AbstractMultimap$AsMap r0;
        java.lang.Object r1, r3, $r5;
        java.util.Collection r2, $r7;
        java.util.Map $r4;
        com.google.common.collect.AbstractMultimap $r6;

        r0 := @this: com.google.common.collect.AbstractMultimap$AsMap;

        r1 := @parameter0: java.lang.Object;

        $r4 = r0.<com.google.common.collect.AbstractMultimap$AsMap: java.util.Map submap>;

        $r5 = staticinvoke <com.google.common.collect.Maps: java.lang.Object safeGet(java.util.Map,java.lang.Object)>($r4, r1);

        r2 = (java.util.Collection) $r5;

        if r2 != null goto label1;

        return null;

     label1:
        r3 = r1;

        $r6 = r0.<com.google.common.collect.AbstractMultimap$AsMap: com.google.common.collect.AbstractMultimap this$0>;

        $r7 = staticinvoke <com.google.common.collect.AbstractMultimap: java.util.Collection access$400(com.google.common.collect.AbstractMultimap,java.lang.Object,java.util.Collection)>($r6, r3, r2);

        return $r7;
    }

    public java.util.Set keySet()
    {
        com.google.common.collect.AbstractMultimap$AsMap r0;
        com.google.common.collect.AbstractMultimap $r1;
        java.util.Set $r2;

        r0 := @this: com.google.common.collect.AbstractMultimap$AsMap;

        $r1 = r0.<com.google.common.collect.AbstractMultimap$AsMap: com.google.common.collect.AbstractMultimap this$0>;

        $r2 = virtualinvoke $r1.<com.google.common.collect.AbstractMultimap: java.util.Set keySet()>();

        return $r2;
    }

    public int size()
    {
        com.google.common.collect.AbstractMultimap$AsMap r0;
        java.util.Map $r1;
        int $i0;

        r0 := @this: com.google.common.collect.AbstractMultimap$AsMap;

        $r1 = r0.<com.google.common.collect.AbstractMultimap$AsMap: java.util.Map submap>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public java.util.Collection remove(java.lang.Object)
    {
        com.google.common.collect.AbstractMultimap$AsMap r0;
        java.lang.Object r1, $r5;
        java.util.Collection r2, r3;
        java.util.Map $r4;
        com.google.common.collect.AbstractMultimap $r6, $r7;
        int $i0;

        r0 := @this: com.google.common.collect.AbstractMultimap$AsMap;

        r1 := @parameter0: java.lang.Object;

        $r4 = r0.<com.google.common.collect.AbstractMultimap$AsMap: java.util.Map submap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r2 = (java.util.Collection) $r5;

        if r2 != null goto label1;

        return null;

     label1:
        $r6 = r0.<com.google.common.collect.AbstractMultimap$AsMap: com.google.common.collect.AbstractMultimap this$0>;

        r3 = virtualinvoke $r6.<com.google.common.collect.AbstractMultimap: java.util.Collection createCollection()>();

        interfaceinvoke r3.<java.util.Collection: boolean addAll(java.util.Collection)>(r2);

        $r7 = r0.<com.google.common.collect.AbstractMultimap$AsMap: com.google.common.collect.AbstractMultimap this$0>;

        $i0 = interfaceinvoke r2.<java.util.Collection: int size()>();

        staticinvoke <com.google.common.collect.AbstractMultimap: int access$220(com.google.common.collect.AbstractMultimap,int)>($r7, $i0);

        interfaceinvoke r2.<java.util.Collection: void clear()>();

        return r3;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.common.collect.AbstractMultimap$AsMap r0;
        java.lang.Object r1;
        java.util.Map $r2;
        boolean $z0, $z1;

        r0 := @this: com.google.common.collect.AbstractMultimap$AsMap;

        r1 := @parameter0: java.lang.Object;

        if r0 == r1 goto label1;

        $r2 = r0.<com.google.common.collect.AbstractMultimap$AsMap: java.util.Map submap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public int hashCode()
    {
        com.google.common.collect.AbstractMultimap$AsMap r0;
        java.util.Map $r1;
        int $i0;

        r0 := @this: com.google.common.collect.AbstractMultimap$AsMap;

        $r1 = r0.<com.google.common.collect.AbstractMultimap$AsMap: java.util.Map submap>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        com.google.common.collect.AbstractMultimap$AsMap r0;
        java.util.Map $r1;
        java.lang.String $r2;

        r0 := @this: com.google.common.collect.AbstractMultimap$AsMap;

        $r1 = r0.<com.google.common.collect.AbstractMultimap$AsMap: java.util.Map submap>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public void clear()
    {
        com.google.common.collect.AbstractMultimap$AsMap r0;
        com.google.common.collect.AbstractMultimap $r1, $r5;
        java.util.Map $r2, $r3;
        com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator $r4;

        r0 := @this: com.google.common.collect.AbstractMultimap$AsMap;

        $r2 = r0.<com.google.common.collect.AbstractMultimap$AsMap: java.util.Map submap>;

        $r1 = r0.<com.google.common.collect.AbstractMultimap$AsMap: com.google.common.collect.AbstractMultimap this$0>;

        $r3 = staticinvoke <com.google.common.collect.AbstractMultimap: java.util.Map access$000(com.google.common.collect.AbstractMultimap)>($r1);

        if $r2 != $r3 goto label1;

        $r5 = r0.<com.google.common.collect.AbstractMultimap$AsMap: com.google.common.collect.AbstractMultimap this$0>;

        virtualinvoke $r5.<com.google.common.collect.AbstractMultimap: void clear()>();

        goto label2;

     label1:
        $r4 = new com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator;

        specialinvoke $r4.<com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator: void <init>(com.google.common.collect.AbstractMultimap$AsMap)>(r0);

        staticinvoke <com.google.common.collect.Iterators: void clear(java.util.Iterator)>($r4);

     label2:
        return;
    }

    public volatile java.lang.Object remove(java.lang.Object)
    {
        com.google.common.collect.AbstractMultimap$AsMap r0;
        java.lang.Object r1;
        java.util.Collection $r2;

        r0 := @this: com.google.common.collect.AbstractMultimap$AsMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.AbstractMultimap$AsMap: java.util.Collection remove(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        com.google.common.collect.AbstractMultimap$AsMap r0;
        java.lang.Object r1;
        java.util.Collection $r2;

        r0 := @this: com.google.common.collect.AbstractMultimap$AsMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.AbstractMultimap$AsMap: java.util.Collection get(java.lang.Object)>(r1);

        return $r2;
    }
}
