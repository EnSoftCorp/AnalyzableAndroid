class com.google.common.hash.BloomFilterStrategies$BitArray extends java.lang.Object
{
    final long[] data;

    void <init>(int)
    {
        com.google.common.hash.BloomFilterStrategies$BitArray r0;
        int i0, $i1;
        java.math.RoundingMode $r1;
        long[] $r2;

        r0 := @this: com.google.common.hash.BloomFilterStrategies$BitArray;

        i0 := @parameter0: int;

        $r1 = <java.math.RoundingMode: java.math.RoundingMode CEILING>;

        $i1 = staticinvoke <com.google.common.math.IntMath: int divide(int,int,java.math.RoundingMode)>(i0, 64, $r1);

        $r2 = newarray (long)[$i1];

        specialinvoke r0.<com.google.common.hash.BloomFilterStrategies$BitArray: void <init>(long[])>($r2);

        return;
    }

    void <init>(long[])
    {
        com.google.common.hash.BloomFilterStrategies$BitArray r0;
        long[] r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.common.hash.BloomFilterStrategies$BitArray;

        r1 := @parameter0: long[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = lengthof r1;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "data length is zero!");

        r0.<com.google.common.hash.BloomFilterStrategies$BitArray: long[] data> = r1;

        return;
    }

    void set(int)
    {
        com.google.common.hash.BloomFilterStrategies$BitArray r0;
        int i0, $i1;
        long[] $r1;
        long $l2, $l3, $l4;

        r0 := @this: com.google.common.hash.BloomFilterStrategies$BitArray;

        i0 := @parameter0: int;

        $r1 = r0.<com.google.common.hash.BloomFilterStrategies$BitArray: long[] data>;

        $i1 = i0 >> 6;

        $l3 = $r1[$i1];

        $l2 = 1L << i0;

        $l4 = $l3 | $l2;

        $r1[$i1] = $l4;

        return;
    }

    boolean get(int)
    {
        com.google.common.hash.BloomFilterStrategies$BitArray r0;
        int i0, $i1;
        long[] $r1;
        long $l2, $l3, $l4;
        byte $b5;
        boolean $z0;

        r0 := @this: com.google.common.hash.BloomFilterStrategies$BitArray;

        i0 := @parameter0: int;

        $r1 = r0.<com.google.common.hash.BloomFilterStrategies$BitArray: long[] data>;

        $i1 = i0 >> 6;

        $l3 = $r1[$i1];

        $l2 = 1L << i0;

        $l4 = $l3 & $l2;

        $b5 = $l4 cmp 0L;

        if $b5 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    int size()
    {
        com.google.common.hash.BloomFilterStrategies$BitArray r0;
        long[] $r1;
        int $i0, $i1;

        r0 := @this: com.google.common.hash.BloomFilterStrategies$BitArray;

        $r1 = r0.<com.google.common.hash.BloomFilterStrategies$BitArray: long[] data>;

        $i0 = lengthof $r1;

        $i1 = $i0 * 64;

        return $i1;
    }
}
