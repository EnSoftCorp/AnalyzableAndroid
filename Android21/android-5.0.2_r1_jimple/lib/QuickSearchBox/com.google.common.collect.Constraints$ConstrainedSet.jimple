class com.google.common.collect.Constraints$ConstrainedSet extends com.google.common.collect.ForwardingSet
{
    private final java.util.Set delegate;
    private final com.google.common.collect.Constraint constraint;

    public void <init>(java.util.Set, com.google.common.collect.Constraint)
    {
        com.google.common.collect.Constraints$ConstrainedSet r0;
        java.util.Set r1, $r4;
        com.google.common.collect.Constraint r2, $r6;
        java.lang.Object $r3, $r5;

        r0 := @this: com.google.common.collect.Constraints$ConstrainedSet;

        r1 := @parameter0: java.util.Set;

        r2 := @parameter1: com.google.common.collect.Constraint;

        specialinvoke r0.<com.google.common.collect.ForwardingSet: void <init>()>();

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = (java.util.Set) $r3;

        r0.<com.google.common.collect.Constraints$ConstrainedSet: java.util.Set delegate> = $r4;

        $r5 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = (com.google.common.collect.Constraint) $r5;

        r0.<com.google.common.collect.Constraints$ConstrainedSet: com.google.common.collect.Constraint constraint> = $r6;

        return;
    }

    protected java.util.Set delegate()
    {
        com.google.common.collect.Constraints$ConstrainedSet r0;
        java.util.Set $r1;

        r0 := @this: com.google.common.collect.Constraints$ConstrainedSet;

        $r1 = r0.<com.google.common.collect.Constraints$ConstrainedSet: java.util.Set delegate>;

        return $r1;
    }

    public boolean add(java.lang.Object)
    {
        com.google.common.collect.Constraints$ConstrainedSet r0;
        java.lang.Object r1;
        com.google.common.collect.Constraint $r2;
        java.util.Set $r4;
        boolean $z0;

        r0 := @this: com.google.common.collect.Constraints$ConstrainedSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.Constraints$ConstrainedSet: com.google.common.collect.Constraint constraint>;

        interfaceinvoke $r2.<com.google.common.collect.Constraint: java.lang.Object checkElement(java.lang.Object)>(r1);

        $r4 = r0.<com.google.common.collect.Constraints$ConstrainedSet: java.util.Set delegate>;

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean addAll(java.util.Collection)
    {
        com.google.common.collect.Constraints$ConstrainedSet r0;
        java.util.Collection r1, $r4;
        com.google.common.collect.Constraint $r2;
        java.util.Set $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.Constraints$ConstrainedSet;

        r1 := @parameter0: java.util.Collection;

        $r3 = r0.<com.google.common.collect.Constraints$ConstrainedSet: java.util.Set delegate>;

        $r2 = r0.<com.google.common.collect.Constraints$ConstrainedSet: com.google.common.collect.Constraint constraint>;

        $r4 = staticinvoke <com.google.common.collect.Constraints: java.util.Collection access$000(java.util.Collection,com.google.common.collect.Constraint)>(r1, $r2);

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean addAll(java.util.Collection)>($r4);

        return $z0;
    }

    protected volatile java.util.Collection delegate()
    {
        com.google.common.collect.Constraints$ConstrainedSet r0;
        java.util.Set $r1;

        r0 := @this: com.google.common.collect.Constraints$ConstrainedSet;

        $r1 = virtualinvoke r0.<com.google.common.collect.Constraints$ConstrainedSet: java.util.Set delegate()>();

        return $r1;
    }

    protected volatile java.lang.Object delegate()
    {
        com.google.common.collect.Constraints$ConstrainedSet r0;
        java.util.Set $r1;

        r0 := @this: com.google.common.collect.Constraints$ConstrainedSet;

        $r1 = virtualinvoke r0.<com.google.common.collect.Constraints$ConstrainedSet: java.util.Set delegate()>();

        return $r1;
    }
}
