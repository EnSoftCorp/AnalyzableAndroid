class com.google.common.collect.Tables$TransformedTable$1 extends java.lang.Object implements com.google.common.base.Function
{
    final com.google.common.collect.Tables$TransformedTable this$0;

    void <init>(com.google.common.collect.Tables$TransformedTable)
    {
        com.google.common.collect.Tables$TransformedTable$1 r0;
        com.google.common.collect.Tables$TransformedTable r1;

        r0 := @this: com.google.common.collect.Tables$TransformedTable$1;

        r1 := @parameter0: com.google.common.collect.Tables$TransformedTable;

        r0.<com.google.common.collect.Tables$TransformedTable$1: com.google.common.collect.Tables$TransformedTable this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.google.common.collect.Table$Cell apply(com.google.common.collect.Table$Cell)
    {
        com.google.common.collect.Tables$TransformedTable$1 r0;
        com.google.common.collect.Table$Cell r1, $r8;
        java.lang.Object $r2, $r3, $r6, $r7;
        com.google.common.collect.Tables$TransformedTable $r4;
        com.google.common.base.Function $r5;

        r0 := @this: com.google.common.collect.Tables$TransformedTable$1;

        r1 := @parameter0: com.google.common.collect.Table$Cell;

        $r2 = interfaceinvoke r1.<com.google.common.collect.Table$Cell: java.lang.Object getRowKey()>();

        $r3 = interfaceinvoke r1.<com.google.common.collect.Table$Cell: java.lang.Object getColumnKey()>();

        $r4 = r0.<com.google.common.collect.Tables$TransformedTable$1: com.google.common.collect.Tables$TransformedTable this$0>;

        $r5 = $r4.<com.google.common.collect.Tables$TransformedTable: com.google.common.base.Function function>;

        $r6 = interfaceinvoke r1.<com.google.common.collect.Table$Cell: java.lang.Object getValue()>();

        $r7 = interfaceinvoke $r5.<com.google.common.base.Function: java.lang.Object apply(java.lang.Object)>($r6);

        $r8 = staticinvoke <com.google.common.collect.Tables: com.google.common.collect.Table$Cell immutableCell(java.lang.Object,java.lang.Object,java.lang.Object)>($r2, $r3, $r7);

        return $r8;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        com.google.common.collect.Tables$TransformedTable$1 r0;
        java.lang.Object r1;
        com.google.common.collect.Table$Cell $r2, $r3;

        r0 := @this: com.google.common.collect.Tables$TransformedTable$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.common.collect.Table$Cell) r1;

        $r3 = virtualinvoke r0.<com.google.common.collect.Tables$TransformedTable$1: com.google.common.collect.Table$Cell apply(com.google.common.collect.Table$Cell)>($r2);

        return $r3;
    }
}
