class com.google.common.collect.Multimaps$FilteredMultimap$Values extends com.google.common.collect.Multimaps$Values
{
    final com.google.common.collect.Multimaps$FilteredMultimap this$0;

    void <init>(com.google.common.collect.Multimaps$FilteredMultimap)
    {
        com.google.common.collect.Multimaps$FilteredMultimap$Values r0;
        com.google.common.collect.Multimaps$FilteredMultimap r1;

        r0 := @this: com.google.common.collect.Multimaps$FilteredMultimap$Values;

        r1 := @parameter0: com.google.common.collect.Multimaps$FilteredMultimap;

        r0.<com.google.common.collect.Multimaps$FilteredMultimap$Values: com.google.common.collect.Multimaps$FilteredMultimap this$0> = r1;

        specialinvoke r0.<com.google.common.collect.Multimaps$Values: void <init>()>();

        return;
    }

    com.google.common.collect.Multimap multimap()
    {
        com.google.common.collect.Multimaps$FilteredMultimap$Values r0;
        com.google.common.collect.Multimaps$FilteredMultimap $r1;

        r0 := @this: com.google.common.collect.Multimaps$FilteredMultimap$Values;

        $r1 = r0.<com.google.common.collect.Multimaps$FilteredMultimap$Values: com.google.common.collect.Multimaps$FilteredMultimap this$0>;

        return $r1;
    }

    public boolean contains(java.lang.Object)
    {
        com.google.common.collect.Multimaps$FilteredMultimap$Values r0;
        java.lang.Object r1;
        java.util.Iterator $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.Multimaps$FilteredMultimap$Values;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.Multimaps$FilteredMultimap$Values: java.util.Iterator iterator()>();

        $z0 = staticinvoke <com.google.common.collect.Iterators: boolean contains(java.util.Iterator,java.lang.Object)>($r2, r1);

        return $z0;
    }

    public boolean remove(java.lang.Object)
    {
        com.google.common.collect.Multimaps$FilteredMultimap$Values r0;
        java.lang.Object r1, $r7, $r8;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        com.google.common.collect.Multimaps$FilteredMultimap $r4, $r9;
        com.google.common.collect.Multimap $r5;
        java.util.Collection $r6;
        boolean $z0, $z1, $z2;
        com.google.common.base.Predicate $r10;

        r0 := @this: com.google.common.collect.Multimaps$FilteredMultimap$Values;

        r1 := @parameter0: java.lang.Object;

        $r4 = r0.<com.google.common.collect.Multimaps$FilteredMultimap$Values: com.google.common.collect.Multimaps$FilteredMultimap this$0>;

        $r5 = $r4.<com.google.common.collect.Multimaps$FilteredMultimap: com.google.common.collect.Multimap unfiltered>;

        $r6 = interfaceinvoke $r5.<com.google.common.collect.Multimap: java.util.Collection entries()>();

        r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r7;

        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z1 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>(r1, $r8);

        if $z1 == 0 goto label2;

        $r9 = r0.<com.google.common.collect.Multimaps$FilteredMultimap$Values: com.google.common.collect.Multimaps$FilteredMultimap this$0>;

        $r10 = $r9.<com.google.common.collect.Multimaps$FilteredMultimap: com.google.common.base.Predicate predicate>;

        $z2 = interfaceinvoke $r10.<com.google.common.base.Predicate: boolean apply(java.lang.Object)>(r3);

        if $z2 == 0 goto label2;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public boolean removeAll(java.util.Collection)
    {
        com.google.common.collect.Multimaps$FilteredMultimap$Values r0;
        java.util.Collection r1, $r6;
        boolean z0, $z1, $z2, $z3;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        com.google.common.collect.Multimaps$FilteredMultimap $r4, $r9;
        com.google.common.collect.Multimap $r5;
        java.lang.Object $r7, $r8;
        com.google.common.base.Predicate $r10;

        r0 := @this: com.google.common.collect.Multimaps$FilteredMultimap$Values;

        r1 := @parameter0: java.util.Collection;

        z0 = 0;

        $r4 = r0.<com.google.common.collect.Multimaps$FilteredMultimap$Values: com.google.common.collect.Multimaps$FilteredMultimap this$0>;

        $r5 = $r4.<com.google.common.collect.Multimaps$FilteredMultimap: com.google.common.collect.Multimap unfiltered>;

        $r6 = interfaceinvoke $r5.<com.google.common.collect.Multimap: java.util.Collection entries()>();

        r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r7;

        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z2 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>($r8);

        if $z2 == 0 goto label2;

        $r9 = r0.<com.google.common.collect.Multimaps$FilteredMultimap$Values: com.google.common.collect.Multimaps$FilteredMultimap this$0>;

        $r10 = $r9.<com.google.common.collect.Multimaps$FilteredMultimap: com.google.common.base.Predicate predicate>;

        $z3 = interfaceinvoke $r10.<com.google.common.base.Predicate: boolean apply(java.lang.Object)>(r3);

        if $z3 == 0 goto label2;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        z0 = 1;

     label2:
        goto label1;

     label3:
        return z0;
    }

    public boolean retainAll(java.util.Collection)
    {
        com.google.common.collect.Multimaps$FilteredMultimap$Values r0;
        java.util.Collection r1, $r6;
        boolean z0, $z1, $z2, $z3;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        com.google.common.collect.Multimaps$FilteredMultimap $r4, $r9;
        com.google.common.collect.Multimap $r5;
        java.lang.Object $r7, $r8;
        com.google.common.base.Predicate $r10;

        r0 := @this: com.google.common.collect.Multimaps$FilteredMultimap$Values;

        r1 := @parameter0: java.util.Collection;

        z0 = 0;

        $r4 = r0.<com.google.common.collect.Multimaps$FilteredMultimap$Values: com.google.common.collect.Multimaps$FilteredMultimap this$0>;

        $r5 = $r4.<com.google.common.collect.Multimaps$FilteredMultimap: com.google.common.collect.Multimap unfiltered>;

        $r6 = interfaceinvoke $r5.<com.google.common.collect.Multimap: java.util.Collection entries()>();

        r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r7;

        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z2 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>($r8);

        if $z2 != 0 goto label2;

        $r9 = r0.<com.google.common.collect.Multimaps$FilteredMultimap$Values: com.google.common.collect.Multimaps$FilteredMultimap this$0>;

        $r10 = $r9.<com.google.common.collect.Multimaps$FilteredMultimap: com.google.common.base.Predicate predicate>;

        $z3 = interfaceinvoke $r10.<com.google.common.base.Predicate: boolean apply(java.lang.Object)>(r3);

        if $z3 == 0 goto label2;

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        z0 = 1;

     label2:
        goto label1;

     label3:
        return z0;
    }
}
