public abstract class com.android.common.content.SQLiteContentProvider extends android.content.ContentProvider implements android.database.sqlite.SQLiteTransactionListener
{
    private static final java.lang.String TAG;
    private android.database.sqlite.SQLiteOpenHelper mOpenHelper;
    private volatile boolean mNotifyChange;
    protected android.database.sqlite.SQLiteDatabase mDb;
    private final java.lang.ThreadLocal mApplyingBatch;
    private static final int SLEEP_AFTER_YIELD_DELAY;
    private static final int MAX_OPERATIONS_PER_YIELD_POINT;

    public void <init>()
    {
        com.android.common.content.SQLiteContentProvider r0;
        java.lang.ThreadLocal $r1;

        r0 := @this: com.android.common.content.SQLiteContentProvider;

        specialinvoke r0.<android.content.ContentProvider: void <init>()>();

        $r1 = new java.lang.ThreadLocal;

        specialinvoke $r1.<java.lang.ThreadLocal: void <init>()>();

        r0.<com.android.common.content.SQLiteContentProvider: java.lang.ThreadLocal mApplyingBatch> = $r1;

        return;
    }

    public int getMaxOperationsPerYield()
    {
        com.android.common.content.SQLiteContentProvider r0;

        r0 := @this: com.android.common.content.SQLiteContentProvider;

        return 500;
    }

    public boolean onCreate()
    {
        com.android.common.content.SQLiteContentProvider r0;
        android.content.Context r1;
        android.database.sqlite.SQLiteOpenHelper $r2;

        r0 := @this: com.android.common.content.SQLiteContentProvider;

        r1 = virtualinvoke r0.<com.android.common.content.SQLiteContentProvider: android.content.Context getContext()>();

        $r2 = virtualinvoke r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteOpenHelper getDatabaseHelper(android.content.Context)>(r1);

        r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteOpenHelper mOpenHelper> = $r2;

        return 1;
    }

    protected abstract android.database.sqlite.SQLiteOpenHelper getDatabaseHelper(android.content.Context);

    protected abstract android.net.Uri insertInTransaction(android.net.Uri, android.content.ContentValues);

    protected abstract int updateInTransaction(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[]);

    protected abstract int deleteInTransaction(android.net.Uri, java.lang.String, java.lang.String[]);

    protected abstract void notifyChange();

    public android.database.sqlite.SQLiteOpenHelper getDatabaseHelper()
    {
        com.android.common.content.SQLiteContentProvider r0;
        android.database.sqlite.SQLiteOpenHelper $r1;

        r0 := @this: com.android.common.content.SQLiteContentProvider;

        $r1 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteOpenHelper mOpenHelper>;

        return $r1;
    }

    private boolean applyingBatch()
    {
        com.android.common.content.SQLiteContentProvider r0;
        java.lang.ThreadLocal $r1, $r3;
        java.lang.Object $r2, $r4;
        java.lang.Boolean $r5;
        boolean $z0, $z1;

        r0 := @this: com.android.common.content.SQLiteContentProvider;

        $r1 = r0.<com.android.common.content.SQLiteContentProvider: java.lang.ThreadLocal mApplyingBatch>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        if $r2 == null goto label1;

        $r3 = r0.<com.android.common.content.SQLiteContentProvider: java.lang.ThreadLocal mApplyingBatch>;

        $r4 = virtualinvoke $r3.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r5 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public android.net.Uri insert(android.net.Uri, android.content.ContentValues)
    {
        com.android.common.content.SQLiteContentProvider r0;
        android.net.Uri r1, r11;
        android.content.ContentValues r2;
        boolean z0;
        java.lang.Throwable r3, $r9;
        android.database.sqlite.SQLiteOpenHelper $r4;
        android.database.sqlite.SQLiteDatabase $r5, $r6, $r7, $r8, $r10;

        r0 := @this: com.android.common.content.SQLiteContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        z0 = specialinvoke r0.<com.android.common.content.SQLiteContentProvider: boolean applyingBatch()>();

        if z0 != 0 goto label7;

        $r4 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteOpenHelper mOpenHelper>;

        $r5 = virtualinvoke $r4.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb> = $r5;

        $r6 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: void beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)>(r0);

     label1:
        r11 = virtualinvoke r0.<com.android.common.content.SQLiteContentProvider: android.net.Uri insertInTransaction(android.net.Uri,android.content.ContentValues)>(r1, r2);

        if r11 == null goto label2;

        r0.<com.android.common.content.SQLiteContentProvider: boolean mNotifyChange> = 1;

     label2:
        $r7 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label3:
        $r8 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        goto label6;

     label4:
        $r9 := @caughtexception;

        r3 = $r9;

     label5:
        $r10 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r10.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw r3;

     label6:
        virtualinvoke r0.<com.android.common.content.SQLiteContentProvider: void onEndTransaction()>();

        goto label8;

     label7:
        r11 = virtualinvoke r0.<com.android.common.content.SQLiteContentProvider: android.net.Uri insertInTransaction(android.net.Uri,android.content.ContentValues)>(r1, r2);

        if r11 == null goto label8;

        r0.<com.android.common.content.SQLiteContentProvider: boolean mNotifyChange> = 1;

     label8:
        return r11;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int bulkInsert(android.net.Uri, android.content.ContentValues[])
    {
        com.android.common.content.SQLiteContentProvider r0;
        android.net.Uri r1, r3;
        android.content.ContentValues[] r2;
        int i0, i1;
        boolean z0;
        android.database.sqlite.SQLiteDatabase r4, $r7, $r8, $r9, $r10, $r12, $r13;
        java.lang.Throwable r5, $r14;
        android.database.sqlite.SQLiteOpenHelper $r6;
        android.content.ContentValues $r11;

        r0 := @this: com.android.common.content.SQLiteContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues[];

        i0 = lengthof r2;

        $r6 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteOpenHelper mOpenHelper>;

        $r7 = virtualinvoke $r6.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb> = $r7;

        $r8 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: void beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)>(r0);

     label1:
        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r11 = r2[i1];

        r3 = virtualinvoke r0.<com.android.common.content.SQLiteContentProvider: android.net.Uri insertInTransaction(android.net.Uri,android.content.ContentValues)>(r1, $r11);

        if r3 == null goto label3;

        r0.<com.android.common.content.SQLiteContentProvider: boolean mNotifyChange> = 1;

     label3:
        z0 = r0.<com.android.common.content.SQLiteContentProvider: boolean mNotifyChange>;

        r4 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb>;

        $r12 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r12.<android.database.sqlite.SQLiteDatabase: boolean yieldIfContendedSafely()>();

        r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb> = r4;

        r0.<com.android.common.content.SQLiteContentProvider: boolean mNotifyChange> = z0;

        i1 = i1 + 1;

        goto label2;

     label4:
        $r9 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r9.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label5:
        $r10 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r10.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        goto label8;

     label6:
        $r14 := @caughtexception;

        r5 = $r14;

     label7:
        $r13 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r13.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw r5;

     label8:
        virtualinvoke r0.<com.android.common.content.SQLiteContentProvider: void onEndTransaction()>();

        return i0;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public int update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[])
    {
        com.android.common.content.SQLiteContentProvider r0;
        android.net.Uri r1;
        android.content.ContentValues r2;
        java.lang.String r3;
        java.lang.String[] r4;
        boolean z1;
        java.lang.Throwable r5, $r12;
        android.database.sqlite.SQLiteOpenHelper $r6;
        android.database.sqlite.SQLiteDatabase $r7, $r8, $r9, $r10, $r11;
        int i0;

        r0 := @this: com.android.common.content.SQLiteContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        z1 = specialinvoke r0.<com.android.common.content.SQLiteContentProvider: boolean applyingBatch()>();

        if z1 != 0 goto label7;

        $r6 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteOpenHelper mOpenHelper>;

        $r7 = virtualinvoke $r6.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb> = $r7;

        $r8 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: void beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)>(r0);

     label1:
        i0 = virtualinvoke r0.<com.android.common.content.SQLiteContentProvider: int updateInTransaction(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r1, r2, r3, r4);

        if i0 <= 0 goto label2;

        r0.<com.android.common.content.SQLiteContentProvider: boolean mNotifyChange> = 1;

     label2:
        $r9 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r9.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label3:
        $r10 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r10.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        goto label6;

     label4:
        $r12 := @caughtexception;

        r5 = $r12;

     label5:
        $r11 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r11.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw r5;

     label6:
        virtualinvoke r0.<com.android.common.content.SQLiteContentProvider: void onEndTransaction()>();

        goto label8;

     label7:
        i0 = virtualinvoke r0.<com.android.common.content.SQLiteContentProvider: int updateInTransaction(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r1, r2, r3, r4);

        if i0 <= 0 goto label8;

        r0.<com.android.common.content.SQLiteContentProvider: boolean mNotifyChange> = 1;

     label8:
        return i0;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int delete(android.net.Uri, java.lang.String, java.lang.String[])
    {
        com.android.common.content.SQLiteContentProvider r0;
        android.net.Uri r1;
        java.lang.String r2;
        java.lang.String[] r3;
        boolean z1;
        java.lang.Throwable r4, $r10;
        android.database.sqlite.SQLiteOpenHelper $r5;
        android.database.sqlite.SQLiteDatabase $r6, $r7, $r8, $r9, $r11;
        int i0;

        r0 := @this: com.android.common.content.SQLiteContentProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        z1 = specialinvoke r0.<com.android.common.content.SQLiteContentProvider: boolean applyingBatch()>();

        if z1 != 0 goto label7;

        $r5 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteOpenHelper mOpenHelper>;

        $r6 = virtualinvoke $r5.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb> = $r6;

        $r7 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: void beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)>(r0);

     label1:
        i0 = virtualinvoke r0.<com.android.common.content.SQLiteContentProvider: int deleteInTransaction(android.net.Uri,java.lang.String,java.lang.String[])>(r1, r2, r3);

        if i0 <= 0 goto label2;

        r0.<com.android.common.content.SQLiteContentProvider: boolean mNotifyChange> = 1;

     label2:
        $r8 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label3:
        $r9 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r9.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        goto label6;

     label4:
        $r10 := @caughtexception;

        r4 = $r10;

     label5:
        $r11 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r11.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw r4;

     label6:
        virtualinvoke r0.<com.android.common.content.SQLiteContentProvider: void onEndTransaction()>();

        goto label8;

     label7:
        i0 = virtualinvoke r0.<com.android.common.content.SQLiteContentProvider: int deleteInTransaction(android.net.Uri,java.lang.String,java.lang.String[])>(r1, r2, r3);

        if i0 <= 0 goto label8;

        r0.<com.android.common.content.SQLiteContentProvider: boolean mNotifyChange> = 1;

     label8:
        return i0;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public android.content.ContentProviderResult[] applyBatch(java.util.ArrayList) throws android.content.OperationApplicationException
    {
        com.android.common.content.SQLiteContentProvider r0;
        java.util.ArrayList r1;
        int i0, i1, i2, i3, $i4;
        android.content.ContentProviderResult[] r2, r24;
        android.content.ContentProviderOperation r3;
        boolean z0, $z1, $z2;
        java.lang.Throwable r4, $r19;
        android.database.sqlite.SQLiteOpenHelper $r5, $r18;
        android.database.sqlite.SQLiteDatabase $r6, $r7, $r11, $r12, $r16, $r17, $r23;
        java.lang.ThreadLocal $r8, $r10, $r22;
        java.lang.Boolean $r9, $r13, $r21;
        java.lang.Object $r14;
        android.content.ContentProviderResult $r15;
        android.content.OperationApplicationException $r20;

        r0 := @this: com.android.common.content.SQLiteContentProvider;

        r1 := @parameter0: java.util.ArrayList;

        i0 = 0;

        i1 = 0;

        $r5 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteOpenHelper mOpenHelper>;

        $r6 = virtualinvoke $r5.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb> = $r6;

        $r7 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r7.<android.database.sqlite.SQLiteDatabase: void beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)>(r0);

     label1:
        $r8 = r0.<com.android.common.content.SQLiteContentProvider: java.lang.ThreadLocal mApplyingBatch>;

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r8.<java.lang.ThreadLocal: void set(java.lang.Object)>($r9);

        i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        r2 = newarray (android.content.ContentProviderResult)[i2];

        i3 = 0;

     label2:
        if i3 >= i2 goto label5;

        i1 = i1 + 1;

        $i4 = virtualinvoke r0.<com.android.common.content.SQLiteContentProvider: int getMaxOperationsPerYield()>();

        if i1 <= $i4 goto label3;

        $r20 = new android.content.OperationApplicationException;

        specialinvoke $r20.<android.content.OperationApplicationException: void <init>(java.lang.String,int)>("Too many content provider operations between yield points. The maximum number of operations per yield point is 500", i0);

        throw $r20;

     label3:
        $r14 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r3 = (android.content.ContentProviderOperation) $r14;

        if i3 <= 0 goto label4;

        $z1 = virtualinvoke r3.<android.content.ContentProviderOperation: boolean isYieldAllowed()>();

        if $z1 == 0 goto label4;

        i1 = 0;

        z0 = r0.<com.android.common.content.SQLiteContentProvider: boolean mNotifyChange>;

        $r16 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb>;

        $z2 = virtualinvoke $r16.<android.database.sqlite.SQLiteDatabase: boolean yieldIfContendedSafely(long)>(4000L);

        if $z2 == 0 goto label4;

        $r18 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteOpenHelper mOpenHelper>;

        $r17 = virtualinvoke $r18.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb> = $r17;

        r0.<com.android.common.content.SQLiteContentProvider: boolean mNotifyChange> = z0;

        i0 = i0 + 1;

     label4:
        $r15 = virtualinvoke r3.<android.content.ContentProviderOperation: android.content.ContentProviderResult apply(android.content.ContentProvider,android.content.ContentProviderResult[],int)>(r0, r2, i3);

        r2[i3] = $r15;

        i3 = i3 + 1;

        goto label2;

     label5:
        $r11 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r11.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

        r24 = r2;

     label6:
        $r10 = r0.<com.android.common.content.SQLiteContentProvider: java.lang.ThreadLocal mApplyingBatch>;

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r10.<java.lang.ThreadLocal: void set(java.lang.Object)>($r13);

        $r12 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r12.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        virtualinvoke r0.<com.android.common.content.SQLiteContentProvider: void onEndTransaction()>();

        return r24;

     label7:
        $r19 := @caughtexception;

        r4 = $r19;

     label8:
        $r22 = r0.<com.android.common.content.SQLiteContentProvider: java.lang.ThreadLocal mApplyingBatch>;

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        virtualinvoke $r22.<java.lang.ThreadLocal: void set(java.lang.Object)>($r21);

        $r23 = r0.<com.android.common.content.SQLiteContentProvider: android.database.sqlite.SQLiteDatabase mDb>;

        virtualinvoke $r23.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        virtualinvoke r0.<com.android.common.content.SQLiteContentProvider: void onEndTransaction()>();

        throw r4;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void onBegin()
    {
        com.android.common.content.SQLiteContentProvider r0;

        r0 := @this: com.android.common.content.SQLiteContentProvider;

        virtualinvoke r0.<com.android.common.content.SQLiteContentProvider: void onBeginTransaction()>();

        return;
    }

    public void onCommit()
    {
        com.android.common.content.SQLiteContentProvider r0;

        r0 := @this: com.android.common.content.SQLiteContentProvider;

        virtualinvoke r0.<com.android.common.content.SQLiteContentProvider: void beforeTransactionCommit()>();

        return;
    }

    public void onRollback()
    {
        com.android.common.content.SQLiteContentProvider r0;

        r0 := @this: com.android.common.content.SQLiteContentProvider;

        return;
    }

    protected void onBeginTransaction()
    {
        com.android.common.content.SQLiteContentProvider r0;

        r0 := @this: com.android.common.content.SQLiteContentProvider;

        return;
    }

    protected void beforeTransactionCommit()
    {
        com.android.common.content.SQLiteContentProvider r0;

        r0 := @this: com.android.common.content.SQLiteContentProvider;

        return;
    }

    protected void onEndTransaction()
    {
        com.android.common.content.SQLiteContentProvider r0;
        boolean $z0;

        r0 := @this: com.android.common.content.SQLiteContentProvider;

        $z0 = r0.<com.android.common.content.SQLiteContentProvider: boolean mNotifyChange>;

        if $z0 == 0 goto label1;

        r0.<com.android.common.content.SQLiteContentProvider: boolean mNotifyChange> = 0;

        virtualinvoke r0.<com.android.common.content.SQLiteContentProvider: void notifyChange()>();

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.android.common.content.SQLiteContentProvider: int MAX_OPERATIONS_PER_YIELD_POINT> = 500;

        <com.android.common.content.SQLiteContentProvider: int SLEEP_AFTER_YIELD_DELAY> = 4000;

        <com.android.common.content.SQLiteContentProvider: java.lang.String TAG> = "SQLiteContentProvider";

        return;
    }
}
