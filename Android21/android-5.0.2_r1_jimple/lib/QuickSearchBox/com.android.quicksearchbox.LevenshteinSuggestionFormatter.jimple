public class com.android.quicksearchbox.LevenshteinSuggestionFormatter extends com.android.quicksearchbox.SuggestionFormatter
{
    private static final boolean DBG;
    private static final java.lang.String TAG;

    public void <init>(com.android.quicksearchbox.TextAppearanceFactory)
    {
        com.android.quicksearchbox.LevenshteinSuggestionFormatter r0;
        com.android.quicksearchbox.TextAppearanceFactory r1;

        r0 := @this: com.android.quicksearchbox.LevenshteinSuggestionFormatter;

        r1 := @parameter0: com.android.quicksearchbox.TextAppearanceFactory;

        specialinvoke r0.<com.android.quicksearchbox.SuggestionFormatter: void <init>(com.android.quicksearchbox.TextAppearanceFactory)>(r1);

        return;
    }

    public android.text.Spanned formatSuggestion(java.lang.String, java.lang.String)
    {
        com.android.quicksearchbox.LevenshteinSuggestionFormatter r0;
        java.lang.String r1, r2, r10;
        com.android.quicksearchbox.util.LevenshteinDistance$Token[] r3, r4;
        int[] r5;
        android.text.SpannableString r6, $r8;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        com.android.quicksearchbox.util.LevenshteinDistance$Token r7, $r9;

        r0 := @this: com.android.quicksearchbox.LevenshteinSuggestionFormatter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r10 = specialinvoke r0.<com.android.quicksearchbox.LevenshteinSuggestionFormatter: java.lang.String normalizeQuery(java.lang.String)>(r1);

        r3 = virtualinvoke r0.<com.android.quicksearchbox.LevenshteinSuggestionFormatter: com.android.quicksearchbox.util.LevenshteinDistance$Token[] tokenize(java.lang.String)>(r10);

        r4 = virtualinvoke r0.<com.android.quicksearchbox.LevenshteinSuggestionFormatter: com.android.quicksearchbox.util.LevenshteinDistance$Token[] tokenize(java.lang.String)>(r2);

        r5 = virtualinvoke r0.<com.android.quicksearchbox.LevenshteinSuggestionFormatter: int[] findMatches(com.android.quicksearchbox.util.LevenshteinDistance$Token[],com.android.quicksearchbox.util.LevenshteinDistance$Token[])>(r3, r4);

        $r8 = new android.text.SpannableString;

        specialinvoke $r8.<android.text.SpannableString: void <init>(java.lang.CharSequence)>(r2);

        r6 = $r8;

        i0 = lengthof r5;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r7 = r4[i1];

        i2 = 0;

        i3 = r5[i1];

        if i3 < 0 goto label2;

        $r9 = r3[i3];

        i2 = virtualinvoke $r9.<com.android.quicksearchbox.util.LevenshteinDistance$Token: int length()>();

     label2:
        $i4 = r7.<com.android.quicksearchbox.util.LevenshteinDistance$Token: int mStart>;

        $i5 = $i4 + i2;

        $i6 = r7.<com.android.quicksearchbox.util.LevenshteinDistance$Token: int mEnd>;

        virtualinvoke r0.<com.android.quicksearchbox.LevenshteinSuggestionFormatter: void applySuggestedTextStyle(android.text.Spannable,int,int)>(r6, $i5, $i6);

        $i9 = r7.<com.android.quicksearchbox.util.LevenshteinDistance$Token: int mStart>;

        $i8 = r7.<com.android.quicksearchbox.util.LevenshteinDistance$Token: int mStart>;

        $i7 = $i8 + i2;

        virtualinvoke r0.<com.android.quicksearchbox.LevenshteinSuggestionFormatter: void applyQueryTextStyle(android.text.Spannable,int,int)>(r6, $i9, $i7);

        i1 = i1 + 1;

        goto label1;

     label3:
        return r6;
    }

    private java.lang.String normalizeQuery(java.lang.String)
    {
        com.android.quicksearchbox.LevenshteinSuggestionFormatter r0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.quicksearchbox.LevenshteinSuggestionFormatter;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        return $r2;
    }

    int[] findMatches(com.android.quicksearchbox.util.LevenshteinDistance$Token[], com.android.quicksearchbox.util.LevenshteinDistance$Token[])
    {
        com.android.quicksearchbox.LevenshteinSuggestionFormatter r0;
        com.android.quicksearchbox.util.LevenshteinDistance$Token[] r1, r2;
        com.android.quicksearchbox.util.LevenshteinDistance r3, $r6;
        int i0, i1, $i3, $i4;
        int[] r4;
        com.android.quicksearchbox.util.LevenshteinDistance$EditOperation[] r5;
        com.android.quicksearchbox.util.LevenshteinDistance$EditOperation $r7, $r8;

        r0 := @this: com.android.quicksearchbox.LevenshteinSuggestionFormatter;

        r1 := @parameter0: com.android.quicksearchbox.util.LevenshteinDistance$Token[];

        r2 := @parameter1: com.android.quicksearchbox.util.LevenshteinDistance$Token[];

        $r6 = new com.android.quicksearchbox.util.LevenshteinDistance;

        specialinvoke $r6.<com.android.quicksearchbox.util.LevenshteinDistance: void <init>(com.android.quicksearchbox.util.LevenshteinDistance$Token[],com.android.quicksearchbox.util.LevenshteinDistance$Token[])>(r1, r2);

        r3 = $r6;

        virtualinvoke r3.<com.android.quicksearchbox.util.LevenshteinDistance: int calculate()>();

        i0 = lengthof r2;

        r4 = newarray (int)[i0];

        r5 = virtualinvoke r3.<com.android.quicksearchbox.util.LevenshteinDistance: com.android.quicksearchbox.util.LevenshteinDistance$EditOperation[] getTargetOperations()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r7 = r5[i1];

        $i3 = virtualinvoke $r7.<com.android.quicksearchbox.util.LevenshteinDistance$EditOperation: int getType()>();

        if $i3 != 3 goto label2;

        $r8 = r5[i1];

        $i4 = virtualinvoke $r8.<com.android.quicksearchbox.util.LevenshteinDistance$EditOperation: int getPosition()>();

        r4[i1] = $i4;

        goto label3;

     label2:
        r4[i1] = -1;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return r4;
    }

    com.android.quicksearchbox.util.LevenshteinDistance$Token[] tokenize(java.lang.String)
    {
        com.android.quicksearchbox.LevenshteinSuggestionFormatter r0;
        java.lang.String r1;
        int i0, i1, i2, i3, i4, $i5;
        char[] r2;
        com.android.quicksearchbox.util.LevenshteinDistance$Token[] r3, r5;
        com.android.quicksearchbox.util.LevenshteinDistance$Token $r4;
        char $c6, $c7, $c8, $c9;

        r0 := @this: com.android.quicksearchbox.LevenshteinSuggestionFormatter;

        r1 := @parameter0: java.lang.String;

        i0 = 0;

        i1 = virtualinvoke r1.<java.lang.String: int length()>();

        r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        r3 = newarray (com.android.quicksearchbox.util.LevenshteinDistance$Token)[i1];

        i2 = 0;

     label1:
        if i0 >= i1 goto label8;

     label2:
        if i0 >= i1 goto label4;

        $c8 = r2[i0];

        if $c8 == 32 goto label3;

        $c9 = r2[i0];

        if $c9 != 9 goto label4;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        i3 = i0;

     label5:
        if i0 >= i1 goto label6;

        $c6 = r2[i0];

        if $c6 == 32 goto label6;

        $c7 = r2[i0];

        if $c7 == 9 goto label6;

        i0 = i0 + 1;

        goto label5;

     label6:
        i4 = i0;

        if i3 == i4 goto label7;

        $i5 = i2;

        i2 = i2 + 1;

        $r4 = new com.android.quicksearchbox.util.LevenshteinDistance$Token;

        specialinvoke $r4.<com.android.quicksearchbox.util.LevenshteinDistance$Token: void <init>(char[],int,int)>(r2, i3, i4);

        r3[$i5] = $r4;

     label7:
        goto label1;

     label8:
        r5 = newarray (com.android.quicksearchbox.util.LevenshteinDistance$Token)[i2];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r5, 0, i2);

        return r5;
    }

    public volatile java.lang.CharSequence formatSuggestion(java.lang.String, java.lang.String)
    {
        com.android.quicksearchbox.LevenshteinSuggestionFormatter r0;
        java.lang.String r1, r2;
        android.text.Spanned $r3;

        r0 := @this: com.android.quicksearchbox.LevenshteinSuggestionFormatter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<com.android.quicksearchbox.LevenshteinSuggestionFormatter: android.text.Spanned formatSuggestion(java.lang.String,java.lang.String)>(r1, r2);

        return $r3;
    }

    public static void <clinit>()
    {
        <com.android.quicksearchbox.LevenshteinSuggestionFormatter: java.lang.String TAG> = "QSB.LevenshteinSuggestionFormatter";

        <com.android.quicksearchbox.LevenshteinSuggestionFormatter: boolean DBG> = 0;

        return;
    }
}
