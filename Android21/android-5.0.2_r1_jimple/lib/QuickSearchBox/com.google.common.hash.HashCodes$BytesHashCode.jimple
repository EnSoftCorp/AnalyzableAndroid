class com.google.common.hash.HashCodes$BytesHashCode extends com.google.common.hash.HashCode
{
    final byte[] bytes;

    void <init>(byte[])
    {
        com.google.common.hash.HashCodes$BytesHashCode r0;
        byte[] r1;

        r0 := @this: com.google.common.hash.HashCodes$BytesHashCode;

        r1 := @parameter0: byte[];

        specialinvoke r0.<com.google.common.hash.HashCode: void <init>()>();

        r0.<com.google.common.hash.HashCodes$BytesHashCode: byte[] bytes> = r1;

        return;
    }

    public int bits()
    {
        com.google.common.hash.HashCodes$BytesHashCode r0;
        byte[] $r1;
        int $i0, $i1;

        r0 := @this: com.google.common.hash.HashCodes$BytesHashCode;

        $r1 = r0.<com.google.common.hash.HashCodes$BytesHashCode: byte[] bytes>;

        $i0 = lengthof $r1;

        $i1 = $i0 * 8;

        return $i1;
    }

    public byte[] asBytes()
    {
        com.google.common.hash.HashCodes$BytesHashCode r0;
        byte[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: com.google.common.hash.HashCodes$BytesHashCode;

        $r1 = r0.<com.google.common.hash.HashCodes$BytesHashCode: byte[] bytes>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (byte[]) $r2;

        return $r3;
    }

    public int asInt()
    {
        com.google.common.hash.HashCodes$BytesHashCode r0;
        byte[] $r1, $r2, $r3, $r4;
        byte $b0, $b1, $b5, $b9;
        short $s2, $s4, $s6, $s10;
        int $i3, $i7, $i8, $i11, $i12, $i13;

        r0 := @this: com.google.common.hash.HashCodes$BytesHashCode;

        $r1 = r0.<com.google.common.hash.HashCodes$BytesHashCode: byte[] bytes>;

        $b0 = $r1[0];

        $s4 = $b0 & 255;

        $r2 = r0.<com.google.common.hash.HashCodes$BytesHashCode: byte[] bytes>;

        $b1 = $r2[1];

        $s2 = $b1 & 255;

        $i3 = $s2 << 8;

        $i8 = $s4 | $i3;

        $r3 = r0.<com.google.common.hash.HashCodes$BytesHashCode: byte[] bytes>;

        $b5 = $r3[2];

        $s6 = $b5 & 255;

        $i7 = $s6 << 16;

        $i11 = $i8 | $i7;

        $r4 = r0.<com.google.common.hash.HashCodes$BytesHashCode: byte[] bytes>;

        $b9 = $r4[3];

        $s10 = $b9 & 255;

        $i12 = $s10 << 24;

        $i13 = $i11 | $i12;

        return $i13;
    }

    public long asLong()
    {
        com.google.common.hash.HashCodes$BytesHashCode r0;
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        int $i0;
        byte $b1, $b3, $b8, $b13, $b18, $b23, $b30, $b31;
        long $l2, $l4, $l5, $l6, $l7, $l9, $l10, $l11, $l12, $l14, $l15, $l16, $l17, $l19, $l20, $l21, $l22, $l24, $l25, $l26, $l27, $l28, $l29, $l32, $l33, $l34, $l35, $l36, $l37, $l38;
        java.lang.IllegalStateException $r10;

        r0 := @this: com.google.common.hash.HashCodes$BytesHashCode;

        $r1 = r0.<com.google.common.hash.HashCodes$BytesHashCode: byte[] bytes>;

        $i0 = lengthof $r1;

        if $i0 >= 8 goto label1;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not enough bytes");

        throw $r10;

     label1:
        $r2 = r0.<com.google.common.hash.HashCodes$BytesHashCode: byte[] bytes>;

        $b1 = $r2[0];

        $l2 = (long) $b1;

        $l7 = $l2 & 255L;

        $r3 = r0.<com.google.common.hash.HashCodes$BytesHashCode: byte[] bytes>;

        $b3 = $r3[1];

        $l4 = (long) $b3;

        $l5 = $l4 & 255L;

        $l6 = $l5 << 8;

        $l11 = $l7 | $l6;

        $r4 = r0.<com.google.common.hash.HashCodes$BytesHashCode: byte[] bytes>;

        $b8 = $r4[2];

        $l9 = (long) $b8;

        $l10 = $l9 & 255L;

        $l12 = $l10 << 16;

        $l16 = $l11 | $l12;

        $r5 = r0.<com.google.common.hash.HashCodes$BytesHashCode: byte[] bytes>;

        $b13 = $r5[3];

        $l15 = (long) $b13;

        $l14 = $l15 & 255L;

        $l17 = $l14 << 24;

        $l21 = $l16 | $l17;

        $r6 = r0.<com.google.common.hash.HashCodes$BytesHashCode: byte[] bytes>;

        $b18 = $r6[4];

        $l20 = (long) $b18;

        $l19 = $l20 & 255L;

        $l22 = $l19 << 32;

        $l25 = $l21 | $l22;

        $r7 = r0.<com.google.common.hash.HashCodes$BytesHashCode: byte[] bytes>;

        $b23 = $r7[5];

        $l26 = (long) $b23;

        $l27 = $l26 & 255L;

        $l24 = $l27 << 40;

        $l33 = $l25 | $l24;

        $r8 = r0.<com.google.common.hash.HashCodes$BytesHashCode: byte[] bytes>;

        $b30 = $r8[6];

        $l28 = (long) $b30;

        $l29 = $l28 & 255L;

        $l32 = $l29 << 48;

        $l35 = $l33 | $l32;

        $r9 = r0.<com.google.common.hash.HashCodes$BytesHashCode: byte[] bytes>;

        $b31 = $r9[7];

        $l36 = (long) $b31;

        $l37 = $l36 & 255L;

        $l34 = $l37 << 56;

        $l38 = $l35 | $l34;

        return $l38;
    }
}
