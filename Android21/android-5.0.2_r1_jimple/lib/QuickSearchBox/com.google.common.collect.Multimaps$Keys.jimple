abstract class com.google.common.collect.Multimaps$Keys extends com.google.common.collect.AbstractMultiset
{

    void <init>()
    {
        com.google.common.collect.Multimaps$Keys r0;

        r0 := @this: com.google.common.collect.Multimaps$Keys;

        specialinvoke r0.<com.google.common.collect.AbstractMultiset: void <init>()>();

        return;
    }

    abstract com.google.common.collect.Multimap multimap();

    java.util.Iterator entryIterator()
    {
        com.google.common.collect.Multimaps$Keys r0;
        java.util.Iterator r1;
        com.google.common.collect.Multimap $r2;
        java.util.Map $r3;
        java.util.Set $r4;
        com.google.common.collect.Multimaps$Keys$1 $r5;

        r0 := @this: com.google.common.collect.Multimaps$Keys;

        $r2 = virtualinvoke r0.<com.google.common.collect.Multimaps$Keys: com.google.common.collect.Multimap multimap()>();

        $r3 = interfaceinvoke $r2.<com.google.common.collect.Multimap: java.util.Map asMap()>();

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        $r5 = new com.google.common.collect.Multimaps$Keys$1;

        specialinvoke $r5.<com.google.common.collect.Multimaps$Keys$1: void <init>(com.google.common.collect.Multimaps$Keys,java.util.Iterator)>(r0, r1);

        return $r5;
    }

    int distinctElements()
    {
        com.google.common.collect.Multimaps$Keys r0;
        com.google.common.collect.Multimap $r1;
        java.util.Map $r2;
        int $i0;

        r0 := @this: com.google.common.collect.Multimaps$Keys;

        $r1 = virtualinvoke r0.<com.google.common.collect.Multimaps$Keys: com.google.common.collect.Multimap multimap()>();

        $r2 = interfaceinvoke $r1.<com.google.common.collect.Multimap: java.util.Map asMap()>();

        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

        return $i0;
    }

    java.util.Set createEntrySet()
    {
        com.google.common.collect.Multimaps$Keys r0;
        com.google.common.collect.Multimaps$Keys$KeysEntrySet $r1;

        r0 := @this: com.google.common.collect.Multimaps$Keys;

        $r1 = new com.google.common.collect.Multimaps$Keys$KeysEntrySet;

        specialinvoke $r1.<com.google.common.collect.Multimaps$Keys$KeysEntrySet: void <init>(com.google.common.collect.Multimaps$Keys)>(r0);

        return $r1;
    }

    public boolean contains(java.lang.Object)
    {
        com.google.common.collect.Multimaps$Keys r0;
        java.lang.Object r1;
        com.google.common.collect.Multimap $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.Multimaps$Keys;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.Multimaps$Keys: com.google.common.collect.Multimap multimap()>();

        $z0 = interfaceinvoke $r2.<com.google.common.collect.Multimap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public java.util.Iterator iterator()
    {
        com.google.common.collect.Multimaps$Keys r0;
        com.google.common.collect.Multimap $r1;
        java.util.Collection $r2;
        java.util.Iterator $r3, $r5;
        com.google.common.collect.Multimaps$Keys$2 $r4;

        r0 := @this: com.google.common.collect.Multimaps$Keys;

        $r1 = virtualinvoke r0.<com.google.common.collect.Multimaps$Keys: com.google.common.collect.Multimap multimap()>();

        $r2 = interfaceinvoke $r1.<com.google.common.collect.Multimap: java.util.Collection entries()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        $r4 = new com.google.common.collect.Multimaps$Keys$2;

        specialinvoke $r4.<com.google.common.collect.Multimaps$Keys$2: void <init>(com.google.common.collect.Multimaps$Keys)>(r0);

        $r5 = staticinvoke <com.google.common.collect.Iterators: java.util.Iterator transform(java.util.Iterator,com.google.common.base.Function)>($r3, $r4);

        return $r5;
    }

    public int count(java.lang.Object)
    {
        com.google.common.collect.Multimaps$Keys r0;
        java.lang.Object r1, $r6;
        java.util.Collection r2;
        com.google.common.collect.Multimap $r3, $r4;
        boolean $z0;
        java.util.Map $r5;
        int $i0;
        java.lang.ClassCastException $r7;
        java.lang.NullPointerException $r8;

        r0 := @this: com.google.common.collect.Multimaps$Keys;

        r1 := @parameter0: java.lang.Object;

     label1:
        $r3 = virtualinvoke r0.<com.google.common.collect.Multimaps$Keys: com.google.common.collect.Multimap multimap()>();

        $z0 = interfaceinvoke $r3.<com.google.common.collect.Multimap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label4;

        $r4 = virtualinvoke r0.<com.google.common.collect.Multimaps$Keys: com.google.common.collect.Multimap multimap()>();

        $r5 = interfaceinvoke $r4.<com.google.common.collect.Multimap: java.util.Map asMap()>();

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.util.Collection) $r6;

        if r2 != null goto label2;

        $i0 = 0;

        goto label3;

     label2:
        $i0 = interfaceinvoke r2.<java.util.Collection: int size()>();

     label3:
        return $i0;

     label4:
        return 0;

     label5:
        $r7 := @caughtexception;

        return 0;

     label6:
        $r8 := @caughtexception;

        return 0;

        catch java.lang.ClassCastException from label1 to label3 with label5;
        catch java.lang.NullPointerException from label1 to label3 with label6;
    }

    public int remove(java.lang.Object, int)
    {
        com.google.common.collect.Multimaps$Keys r0;
        java.lang.Object r1, $r7;
        int i0, i1, $i2, i3;
        java.util.Collection r2;
        java.util.Iterator r4;
        com.google.common.collect.Multimap $r5;
        java.util.Map $r6;
        boolean $z0;
        java.lang.NullPointerException $r9;
        java.lang.ClassCastException $r10;

        r0 := @this: com.google.common.collect.Multimaps$Keys;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        if i0 < 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        if i0 != 0 goto label03;

        $i2 = virtualinvoke r0.<com.google.common.collect.Multimaps$Keys: int count(java.lang.Object)>(r1);

        return $i2;

     label03:
        $r5 = virtualinvoke r0.<com.google.common.collect.Multimaps$Keys: com.google.common.collect.Multimap multimap()>();

        $r6 = interfaceinvoke $r5.<com.google.common.collect.Multimap: java.util.Map asMap()>();

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.util.Collection) $r7;

     label04:
        goto label07;

     label05:
        $r10 := @caughtexception;

        return 0;

     label06:
        $r9 := @caughtexception;

        return 0;

     label07:
        if r2 != null goto label08;

        return 0;

     label08:
        i3 = interfaceinvoke r2.<java.util.Collection: int size()>();

        if i0 < i3 goto label09;

        interfaceinvoke r2.<java.util.Collection: void clear()>();

        goto label11;

     label09:
        r4 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

        i1 = 0;

     label10:
        if i1 >= i0 goto label11;

        interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke r4.<java.util.Iterator: void remove()>();

        i1 = i1 + 1;

        goto label10;

     label11:
        return i3;

        catch java.lang.ClassCastException from label03 to label04 with label05;
        catch java.lang.NullPointerException from label03 to label04 with label06;
    }

    public void clear()
    {
        com.google.common.collect.Multimaps$Keys r0;
        com.google.common.collect.Multimap $r1;

        r0 := @this: com.google.common.collect.Multimaps$Keys;

        $r1 = virtualinvoke r0.<com.google.common.collect.Multimaps$Keys: com.google.common.collect.Multimap multimap()>();

        interfaceinvoke $r1.<com.google.common.collect.Multimap: void clear()>();

        return;
    }

    public java.util.Set elementSet()
    {
        com.google.common.collect.Multimaps$Keys r0;
        com.google.common.collect.Multimap $r1;
        java.util.Set $r2;

        r0 := @this: com.google.common.collect.Multimaps$Keys;

        $r1 = virtualinvoke r0.<com.google.common.collect.Multimaps$Keys: com.google.common.collect.Multimap multimap()>();

        $r2 = interfaceinvoke $r1.<com.google.common.collect.Multimap: java.util.Set keySet()>();

        return $r2;
    }
}
