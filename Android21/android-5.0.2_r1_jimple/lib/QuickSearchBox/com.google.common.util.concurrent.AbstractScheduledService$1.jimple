class com.google.common.util.concurrent.AbstractScheduledService$1 extends com.google.common.util.concurrent.AbstractService
{
    private volatile java.util.concurrent.Future runningTask;
    private volatile java.util.concurrent.ScheduledExecutorService executorService;
    private final java.util.concurrent.locks.ReentrantLock lock;
    private final java.lang.Runnable task;
    final com.google.common.util.concurrent.AbstractScheduledService this$0;

    void <init>(com.google.common.util.concurrent.AbstractScheduledService)
    {
        com.google.common.util.concurrent.AbstractScheduledService$1 r0;
        com.google.common.util.concurrent.AbstractScheduledService r1;
        java.util.concurrent.locks.ReentrantLock $r2;
        com.google.common.util.concurrent.AbstractScheduledService$1$1 $r3;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService$1;

        r1 := @parameter0: com.google.common.util.concurrent.AbstractScheduledService;

        r0.<com.google.common.util.concurrent.AbstractScheduledService$1: com.google.common.util.concurrent.AbstractScheduledService this$0> = r1;

        specialinvoke r0.<com.google.common.util.concurrent.AbstractService: void <init>()>();

        $r2 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<com.google.common.util.concurrent.AbstractScheduledService$1: java.util.concurrent.locks.ReentrantLock lock> = $r2;

        $r3 = new com.google.common.util.concurrent.AbstractScheduledService$1$1;

        specialinvoke $r3.<com.google.common.util.concurrent.AbstractScheduledService$1$1: void <init>(com.google.common.util.concurrent.AbstractScheduledService$1)>(r0);

        r0.<com.google.common.util.concurrent.AbstractScheduledService$1: java.lang.Runnable task> = $r3;

        return;
    }

    protected final void doStart()
    {
        com.google.common.util.concurrent.AbstractScheduledService$1 r0;
        com.google.common.util.concurrent.AbstractScheduledService $r1;
        java.util.concurrent.ScheduledExecutorService $r2, $r4;
        com.google.common.util.concurrent.AbstractScheduledService$1$2 $r3;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService$1;

        $r1 = r0.<com.google.common.util.concurrent.AbstractScheduledService$1: com.google.common.util.concurrent.AbstractScheduledService this$0>;

        $r2 = virtualinvoke $r1.<com.google.common.util.concurrent.AbstractScheduledService: java.util.concurrent.ScheduledExecutorService executor()>();

        r0.<com.google.common.util.concurrent.AbstractScheduledService$1: java.util.concurrent.ScheduledExecutorService executorService> = $r2;

        $r4 = r0.<com.google.common.util.concurrent.AbstractScheduledService$1: java.util.concurrent.ScheduledExecutorService executorService>;

        $r3 = new com.google.common.util.concurrent.AbstractScheduledService$1$2;

        specialinvoke $r3.<com.google.common.util.concurrent.AbstractScheduledService$1$2: void <init>(com.google.common.util.concurrent.AbstractScheduledService$1)>(r0);

        interfaceinvoke $r4.<java.util.concurrent.ScheduledExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    protected final void doStop()
    {
        com.google.common.util.concurrent.AbstractScheduledService$1 r0;
        java.util.concurrent.Future $r1;
        com.google.common.util.concurrent.AbstractScheduledService$1$3 $r2;
        java.util.concurrent.ScheduledExecutorService $r3;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService$1;

        $r1 = r0.<com.google.common.util.concurrent.AbstractScheduledService$1: java.util.concurrent.Future runningTask>;

        interfaceinvoke $r1.<java.util.concurrent.Future: boolean cancel(boolean)>(0);

        $r3 = r0.<com.google.common.util.concurrent.AbstractScheduledService$1: java.util.concurrent.ScheduledExecutorService executorService>;

        $r2 = new com.google.common.util.concurrent.AbstractScheduledService$1$3;

        specialinvoke $r2.<com.google.common.util.concurrent.AbstractScheduledService$1$3: void <init>(com.google.common.util.concurrent.AbstractScheduledService$1)>(r0);

        interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: void execute(java.lang.Runnable)>($r2);

        return;
    }

    static java.util.concurrent.locks.ReentrantLock access$100(com.google.common.util.concurrent.AbstractScheduledService$1)
    {
        com.google.common.util.concurrent.AbstractScheduledService$1 r0;
        java.util.concurrent.locks.ReentrantLock $r1;

        r0 := @parameter0: com.google.common.util.concurrent.AbstractScheduledService$1;

        $r1 = r0.<com.google.common.util.concurrent.AbstractScheduledService$1: java.util.concurrent.locks.ReentrantLock lock>;

        return $r1;
    }

    static java.util.concurrent.Future access$302(com.google.common.util.concurrent.AbstractScheduledService$1, java.util.concurrent.Future)
    {
        com.google.common.util.concurrent.AbstractScheduledService$1 r0;
        java.util.concurrent.Future r1;

        r0 := @parameter0: com.google.common.util.concurrent.AbstractScheduledService$1;

        r1 := @parameter1: java.util.concurrent.Future;

        r0.<com.google.common.util.concurrent.AbstractScheduledService$1: java.util.concurrent.Future runningTask> = r1;

        return r1;
    }

    static java.util.concurrent.ScheduledExecutorService access$500(com.google.common.util.concurrent.AbstractScheduledService$1)
    {
        com.google.common.util.concurrent.AbstractScheduledService$1 r0;
        java.util.concurrent.ScheduledExecutorService $r1;

        r0 := @parameter0: com.google.common.util.concurrent.AbstractScheduledService$1;

        $r1 = r0.<com.google.common.util.concurrent.AbstractScheduledService$1: java.util.concurrent.ScheduledExecutorService executorService>;

        return $r1;
    }

    static java.lang.Runnable access$600(com.google.common.util.concurrent.AbstractScheduledService$1)
    {
        com.google.common.util.concurrent.AbstractScheduledService$1 r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: com.google.common.util.concurrent.AbstractScheduledService$1;

        $r1 = r0.<com.google.common.util.concurrent.AbstractScheduledService$1: java.lang.Runnable task>;

        return $r1;
    }
}
