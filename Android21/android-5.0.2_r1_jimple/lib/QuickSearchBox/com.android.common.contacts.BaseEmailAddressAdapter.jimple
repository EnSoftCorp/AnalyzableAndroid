public abstract class com.android.common.contacts.BaseEmailAddressAdapter extends com.android.common.widget.CompositeCursorAdapter implements android.widget.Filterable
{
    private static final java.lang.String TAG;
    private static final long DIRECTORY_LOCAL_INVISIBLE;
    private static final java.lang.String DIRECTORY_PARAM_KEY;
    private static final java.lang.String LIMIT_PARAM_KEY;
    private static final java.lang.String PRIMARY_ACCOUNT_NAME;
    private static final java.lang.String PRIMARY_ACCOUNT_TYPE;
    private static final int DEFAULT_PREFERRED_MAX_RESULT_COUNT;
    private static final int ALLOWANCE_FOR_DUPLICATES;
    private static final int MESSAGE_SEARCH_PENDING_DELAY;
    private static final int MESSAGE_SEARCH_PENDING;
    private static final java.lang.String SEARCHING_CURSOR_MARKER;
    protected final android.content.ContentResolver mContentResolver;
    private boolean mDirectoriesLoaded;
    private android.accounts.Account mAccount;
    private int mPreferredMaxResultCount;
    private android.os.Handler mHandler;

    public void <init>(android.content.Context)
    {
        com.android.common.contacts.BaseEmailAddressAdapter r0;
        android.content.Context r1;

        r0 := @this: com.android.common.contacts.BaseEmailAddressAdapter;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: void <init>(android.content.Context,int)>(r1, 10);

        return;
    }

    public void <init>(android.content.Context, int)
    {
        com.android.common.contacts.BaseEmailAddressAdapter r0;
        android.content.Context r1;
        int i0;
        android.content.ContentResolver $r2;
        com.android.common.contacts.BaseEmailAddressAdapter$1 $r3;

        r0 := @this: com.android.common.contacts.BaseEmailAddressAdapter;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.common.widget.CompositeCursorAdapter: void <init>(android.content.Context)>(r1);

        $r2 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r0.<com.android.common.contacts.BaseEmailAddressAdapter: android.content.ContentResolver mContentResolver> = $r2;

        r0.<com.android.common.contacts.BaseEmailAddressAdapter: int mPreferredMaxResultCount> = i0;

        $r3 = new com.android.common.contacts.BaseEmailAddressAdapter$1;

        specialinvoke $r3.<com.android.common.contacts.BaseEmailAddressAdapter$1: void <init>(com.android.common.contacts.BaseEmailAddressAdapter)>(r0);

        r0.<com.android.common.contacts.BaseEmailAddressAdapter: android.os.Handler mHandler> = $r3;

        return;
    }

    public void setAccount(android.accounts.Account)
    {
        com.android.common.contacts.BaseEmailAddressAdapter r0;
        android.accounts.Account r1;

        r0 := @this: com.android.common.contacts.BaseEmailAddressAdapter;

        r1 := @parameter0: android.accounts.Account;

        r0.<com.android.common.contacts.BaseEmailAddressAdapter: android.accounts.Account mAccount> = r1;

        return;
    }

    protected abstract android.view.View inflateItemView(android.view.ViewGroup);

    protected abstract void bindView(android.view.View, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

    protected abstract android.view.View inflateItemViewLoading(android.view.ViewGroup);

    protected abstract void bindViewLoading(android.view.View, java.lang.String, java.lang.String);

    protected int getItemViewType(int, int)
    {
        com.android.common.contacts.BaseEmailAddressAdapter r0;
        int i0, i1;
        com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition r1;
        com.android.common.widget.CompositeCursorAdapter$Partition $r2;
        boolean $z0;
        byte $b2;

        r0 := @this: com.android.common.contacts.BaseEmailAddressAdapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: com.android.common.widget.CompositeCursorAdapter$Partition getPartition(int)>(i0);

        r1 = (com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition) $r2;

        $z0 = r1.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: boolean loading>;

        if $z0 == 0 goto label1;

        $b2 = 1;

        goto label2;

     label1:
        $b2 = 0;

     label2:
        return $b2;
    }

    protected android.view.View newView(android.content.Context, int, android.database.Cursor, int, android.view.ViewGroup)
    {
        com.android.common.contacts.BaseEmailAddressAdapter r0;
        android.content.Context r1;
        int i0, i1;
        android.database.Cursor r2;
        android.view.ViewGroup r3;
        com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition r4;
        com.android.common.widget.CompositeCursorAdapter$Partition $r5;
        boolean $z0;
        android.view.View $r6, $r7;

        r0 := @this: com.android.common.contacts.BaseEmailAddressAdapter;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: android.database.Cursor;

        i1 := @parameter3: int;

        r3 := @parameter4: android.view.ViewGroup;

        $r5 = virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: com.android.common.widget.CompositeCursorAdapter$Partition getPartition(int)>(i0);

        r4 = (com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition) $r5;

        $z0 = r4.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: boolean loading>;

        if $z0 == 0 goto label1;

        $r7 = virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: android.view.View inflateItemViewLoading(android.view.ViewGroup)>(r3);

        return $r7;

     label1:
        $r6 = virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: android.view.View inflateItemView(android.view.ViewGroup)>(r3);

        return $r6;
    }

    protected void bindView(android.view.View, int, android.database.Cursor, int)
    {
        com.android.common.contacts.BaseEmailAddressAdapter r0;
        android.view.View r1;
        int i0, i1;
        android.database.Cursor r2;
        com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition r3;
        java.lang.String r4, r5, r6, r7;
        com.android.common.widget.CompositeCursorAdapter$Partition $r8;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.common.contacts.BaseEmailAddressAdapter;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.database.Cursor;

        i1 := @parameter3: int;

        $r8 = virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: com.android.common.widget.CompositeCursorAdapter$Partition getPartition(int)>(i0);

        r3 = (com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition) $r8;

        r4 = r3.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: java.lang.String directoryType>;

        r5 = r3.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: java.lang.String displayName>;

        $z0 = r3.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: boolean loading>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: void bindViewLoading(android.view.View,java.lang.String,java.lang.String)>(r1, r4, r5);

        goto label4;

     label1:
        r6 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(0);

        r7 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(1);

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z1 != 0 goto label2;

        $z2 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r6, r7);

        if $z2 == 0 goto label3;

     label2:
        r6 = r7;

        r7 = null;

     label3:
        virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: void bindView(android.view.View,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r4, r5, r6, r7);

     label4:
        return;
    }

    public boolean areAllItemsEnabled()
    {
        com.android.common.contacts.BaseEmailAddressAdapter r0;

        r0 := @this: com.android.common.contacts.BaseEmailAddressAdapter;

        return 0;
    }

    protected boolean isEnabled(int, int)
    {
        com.android.common.contacts.BaseEmailAddressAdapter r0;
        int i0, i1;
        boolean $z0, $z1;

        r0 := @this: com.android.common.contacts.BaseEmailAddressAdapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: boolean isLoading(int)>(i0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private boolean isLoading(int)
    {
        com.android.common.contacts.BaseEmailAddressAdapter r0;
        int i0;
        com.android.common.widget.CompositeCursorAdapter$Partition $r1;
        com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition $r2;
        boolean $z0;

        r0 := @this: com.android.common.contacts.BaseEmailAddressAdapter;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: com.android.common.widget.CompositeCursorAdapter$Partition getPartition(int)>(i0);

        $r2 = (com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition) $r1;

        $z0 = $r2.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: boolean loading>;

        return $z0;
    }

    public android.widget.Filter getFilter()
    {
        com.android.common.contacts.BaseEmailAddressAdapter r0;
        com.android.common.contacts.BaseEmailAddressAdapter$DefaultPartitionFilter $r1;

        r0 := @this: com.android.common.contacts.BaseEmailAddressAdapter;

        $r1 = new com.android.common.contacts.BaseEmailAddressAdapter$DefaultPartitionFilter;

        specialinvoke $r1.<com.android.common.contacts.BaseEmailAddressAdapter$DefaultPartitionFilter: void <init>(com.android.common.contacts.BaseEmailAddressAdapter,com.android.common.contacts.BaseEmailAddressAdapter$1)>(r0, null);

        return $r1;
    }

    protected void onDirectoryLoadFinished(java.lang.CharSequence, android.database.Cursor, android.database.Cursor)
    {
        com.android.common.contacts.BaseEmailAddressAdapter r0;
        java.lang.CharSequence r1;
        android.database.Cursor r2, r3;
        android.content.pm.PackageManager r4;
        com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition r5, r7, r8, $r25, r55, r56;
        java.util.ArrayList r6, $r24;
        long l0, $l4;
        java.lang.String r9, $r27, $r28, $r29, $r33, $r34, $r35, $r36, $r38, $r39, $r40, $r49;
        int i1, $i2, $i3, $i5, i9, i10, i11, i12, i13;
        android.content.res.Resources r10;
        java.lang.Throwable r11, $r41;
        com.android.common.widget.CompositeCursorAdapter$Partition $r12, $r22;
        com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartitionFilter $r13, $r15, $r18, $r19, $r20, $r21;
        boolean $z0, $z2, $z3, $z4, $z6, $z7;
        android.os.Handler $r14, $r16, $r17;
        android.content.Context $r23;
        byte $b6;
        java.lang.Object $r26;
        android.accounts.Account $r30, $r31, $r32;
        java.lang.StringBuilder $r37, $r43, $r44, $r45, $r46, $r47, $r48, $r50, $r51, $r52;
        android.content.pm.PackageManager$NameNotFoundException $r42, r53;
        java.util.Iterator r54;
        android.os.Message r57;

        r0 := @this: com.android.common.contacts.BaseEmailAddressAdapter;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.database.Cursor;

        r3 := @parameter2: android.database.Cursor;

        if r2 == null goto label12;

        $r23 = virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: android.content.Context getContext()>();

        r4 = virtualinvoke $r23.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r5 = null;

        $r24 = new java.util.ArrayList;

        specialinvoke $r24.<java.util.ArrayList: void <init>()>();

        r6 = $r24;

     label01:
        $z4 = interfaceinvoke r2.<android.database.Cursor: boolean moveToNext()>();

        if $z4 == 0 goto label09;

        l0 = interfaceinvoke r2.<android.database.Cursor: long getLong(int)>(0);

        $b6 = l0 cmp 1L;

        if $b6 != 0 goto label02;

        goto label01;

     label02:
        $r25 = new com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition;

        specialinvoke $r25.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: void <init>()>();

        r8 = $r25;

        r8.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: long directoryId> = l0;

        $r28 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(3);

        r8.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: java.lang.String displayName> = $r28;

        $r29 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(1);

        r8.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: java.lang.String accountName> = $r29;

        $r27 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(2);

        r8.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: java.lang.String accountType> = $r27;

        r9 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(4);

        i1 = interfaceinvoke r2.<android.database.Cursor: int getInt(int)>(5);

        if r9 == null goto label06;

        if i1 == 0 goto label06;

     label03:
        r10 = virtualinvoke r4.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(java.lang.String)>(r9);

        $r39 = virtualinvoke r10.<android.content.res.Resources: java.lang.String getString(int)>(i1);

        r8.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: java.lang.String directoryType> = $r39;

        $r38 = r8.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: java.lang.String directoryType>;

        if $r38 != null goto label04;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot resolve directory name: ");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r40 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BaseEmailAddressAdapter", $r40);

     label04:
        goto label06;

     label05:
        $r42 := @caughtexception;

        r53 = $r42;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot resolve directory name: ");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r47 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BaseEmailAddressAdapter", $r49, r53);

     label06:
        $r31 = r0.<com.android.common.contacts.BaseEmailAddressAdapter: android.accounts.Account mAccount>;

        if $r31 == null goto label07;

        $r30 = r0.<com.android.common.contacts.BaseEmailAddressAdapter: android.accounts.Account mAccount>;

        $r33 = $r30.<android.accounts.Account: java.lang.String name>;

        $r34 = r8.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: java.lang.String accountName>;

        $z6 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>($r34);

        if $z6 == 0 goto label07;

        $r32 = r0.<com.android.common.contacts.BaseEmailAddressAdapter: android.accounts.Account mAccount>;

        $r35 = $r32.<android.accounts.Account: java.lang.String type>;

        $r36 = r8.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: java.lang.String accountType>;

        $z7 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>($r36);

        if $z7 == 0 goto label07;

        r5 = r8;

        goto label08;

     label07:
        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r8);

     label08:
        goto label01;

     label09:
        if r5 == null goto label10;

        interfaceinvoke r6.<java.util.List: void add(int,java.lang.Object)>(1, r5);

     label10:
        r54 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z3 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label12;

        $r26 = interfaceinvoke r54.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition) $r26;

        virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: void addPartition(com.android.common.widget.CompositeCursorAdapter$Partition)>(r7);

        goto label11;

     label12:
        i9 = virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: int getPartitionCount()>();

        virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: void setNotificationsEnabled(boolean)>(0);

     label13:
        if r3 == null goto label14;

        $i5 = virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: int getPartitionCount()>();

        if $i5 <= 0 goto label14;

        virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: void changeCursor(int,android.database.Cursor)>(0, r3);

     label14:
        if r3 != null goto label15;

        $i2 = 0;

        goto label16;

     label15:
        $i2 = interfaceinvoke r3.<android.database.Cursor: int getCount()>();

     label16:
        i10 = $i2;

        $i3 = r0.<com.android.common.contacts.BaseEmailAddressAdapter: int mPreferredMaxResultCount>;

        i11 = $i3 - i10;

        i12 = 1;

     label17:
        if i12 >= i9 goto label20;

        $r22 = virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: com.android.common.widget.CompositeCursorAdapter$Partition getPartition(int)>(i12);

        r55 = (com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition) $r22;

        r55.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: java.lang.CharSequence constraint> = r1;

        if i11 <= 0 goto label18;

        $z2 = r55.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: boolean loading>;

        if $z2 != 0 goto label19;

        r55.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: boolean loading> = 1;

        virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: void changeCursor(int,android.database.Cursor)>(i12, null);

        goto label19;

     label18:
        r55.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: boolean loading> = 0;

        virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: void changeCursor(int,android.database.Cursor)>(i12, null);

     label19:
        i12 = i12 + 1;

        goto label17;

     label20:
        virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: void setNotificationsEnabled(boolean)>(1);

        goto label23;

     label21:
        $r41 := @caughtexception;

        r11 = $r41;

     label22:
        virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: void setNotificationsEnabled(boolean)>(1);

        throw r11;

     label23:
        i13 = 1;

     label24:
        if i13 >= i9 goto label28;

        $r12 = virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: com.android.common.widget.CompositeCursorAdapter$Partition getPartition(int)>(i13);

        r56 = (com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition) $r12;

        $z0 = r56.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: boolean loading>;

        if $z0 == 0 goto label26;

        $r14 = r0.<com.android.common.contacts.BaseEmailAddressAdapter: android.os.Handler mHandler>;

        virtualinvoke $r14.<android.os.Handler: void removeMessages(int,java.lang.Object)>(1, r56);

        $r16 = r0.<com.android.common.contacts.BaseEmailAddressAdapter: android.os.Handler mHandler>;

        r57 = virtualinvoke $r16.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(1, i13, 0, r56);

        $r17 = r0.<com.android.common.contacts.BaseEmailAddressAdapter: android.os.Handler mHandler>;

        virtualinvoke $r17.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r57, 1000L);

        $r19 = r56.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartitionFilter filter>;

        if $r19 != null goto label25;

        $r20 = new com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartitionFilter;

        $l4 = r56.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: long directoryId>;

        specialinvoke $r20.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartitionFilter: void <init>(com.android.common.contacts.BaseEmailAddressAdapter,int,long)>(r0, i13, $l4);

        r56.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartitionFilter filter> = $r20;

     label25:
        $r18 = r56.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartitionFilter filter>;

        virtualinvoke $r18.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartitionFilter: void setLimit(int)>(i11);

        $r21 = r56.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartitionFilter filter>;

        virtualinvoke $r21.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartitionFilter: void filter(java.lang.CharSequence)>(r1);

        goto label27;

     label26:
        $r13 = r56.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartitionFilter filter>;

        if $r13 == null goto label27;

        $r15 = r56.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartitionFilter filter>;

        virtualinvoke $r15.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartitionFilter: void filter(java.lang.CharSequence)>(null);

     label27:
        i13 = i13 + 1;

        goto label24;

     label28:
        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label05;
        catch java.lang.Throwable from label13 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
    }

    void showSearchPendingIfNotComplete(int)
    {
        com.android.common.contacts.BaseEmailAddressAdapter r0;
        int i0, $i1;
        com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition r1;
        com.android.common.widget.CompositeCursorAdapter$Partition $r2;
        boolean $z0;
        android.database.Cursor $r3;

        r0 := @this: com.android.common.contacts.BaseEmailAddressAdapter;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: int getPartitionCount()>();

        if i0 >= $i1 goto label1;

        $r2 = virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: com.android.common.widget.CompositeCursorAdapter$Partition getPartition(int)>(i0);

        r1 = (com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition) $r2;

        $z0 = r1.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: boolean loading>;

        if $z0 == 0 goto label1;

        $r3 = specialinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: android.database.Cursor createLoadingCursor()>();

        virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: void changeCursor(int,android.database.Cursor)>(i0, $r3);

     label1:
        return;
    }

    private android.database.Cursor createLoadingCursor()
    {
        com.android.common.contacts.BaseEmailAddressAdapter r0;
        android.database.MatrixCursor r1, $r2;
        java.lang.String[] $r3;
        java.lang.Object[] $r4;

        r0 := @this: com.android.common.contacts.BaseEmailAddressAdapter;

        $r2 = new android.database.MatrixCursor;

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = "searching";

        specialinvoke $r2.<android.database.MatrixCursor: void <init>(java.lang.String[])>($r3);

        r1 = $r2;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = "";

        virtualinvoke r1.<android.database.MatrixCursor: void addRow(java.lang.Object[])>($r4);

        return r1;
    }

    public void onPartitionLoadFinished(java.lang.CharSequence, int, android.database.Cursor)
    {
        com.android.common.contacts.BaseEmailAddressAdapter r0;
        java.lang.CharSequence r1, $r5;
        int i0, $i1;
        android.database.Cursor r2, $r7;
        com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition r3;
        com.android.common.widget.CompositeCursorAdapter$Partition $r4;
        boolean $z0, $z1;
        android.os.Handler $r6;

        r0 := @this: com.android.common.contacts.BaseEmailAddressAdapter;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        r2 := @parameter2: android.database.Cursor;

        $i1 = virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: int getPartitionCount()>();

        if i0 >= $i1 goto label3;

        $r4 = virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: com.android.common.widget.CompositeCursorAdapter$Partition getPartition(int)>(i0);

        r3 = (com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition) $r4;

        $z0 = r3.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: boolean loading>;

        if $z0 == 0 goto label1;

        $r5 = r3.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: java.lang.CharSequence constraint>;

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, $r5);

        if $z1 == 0 goto label1;

        r3.<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartition: boolean loading> = 0;

        $r6 = r0.<com.android.common.contacts.BaseEmailAddressAdapter: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.os.Handler: void removeMessages(int,java.lang.Object)>(1, r3);

        $r7 = specialinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: android.database.Cursor removeDuplicatesAndTruncate(int,android.database.Cursor)>(i0, r2);

        virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: void changeCursor(int,android.database.Cursor)>(i0, $r7);

        goto label2;

     label1:
        if r2 == null goto label2;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label2:
        goto label4;

     label3:
        if r2 == null goto label4;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label4:
        return;
    }

    private android.database.Cursor removeDuplicatesAndTruncate(int, android.database.Cursor)
    {
        com.android.common.contacts.BaseEmailAddressAdapter r0;
        int i0, i1, $i2;
        android.database.Cursor r1;
        android.database.MatrixCursor r2, $r5;
        java.lang.String r3, r4;
        java.lang.String[] $r6;
        boolean $z1, $z2, $z3;
        java.lang.Object[] $r7;

        r0 := @this: com.android.common.contacts.BaseEmailAddressAdapter;

        i0 := @parameter0: int;

        r1 := @parameter1: android.database.Cursor;

        if r1 != null goto label1;

        return null;

     label1:
        $i2 = interfaceinvoke r1.<android.database.Cursor: int getCount()>();

        if $i2 > 10 goto label2;

        $z3 = specialinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: boolean hasDuplicates(android.database.Cursor,int)>(r1, i0);

        if $z3 != 0 goto label2;

        return r1;

     label2:
        i1 = 0;

        $r5 = new android.database.MatrixCursor;

        $r6 = <com.android.common.contacts.BaseEmailAddressAdapter$EmailQuery: java.lang.String[] PROJECTION>;

        specialinvoke $r5.<android.database.MatrixCursor: void <init>(java.lang.String[])>($r6);

        r2 = $r5;

        interfaceinvoke r1.<android.database.Cursor: boolean moveToPosition(int)>(-1);

     label3:
        $z1 = interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label5;

        if i1 >= 10 goto label5;

        r3 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(0);

        r4 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(1);

        $z2 = specialinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: boolean isDuplicate(java.lang.String,int)>(r4, i0);

        if $z2 != 0 goto label4;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = r3;

        $r7[1] = r4;

        virtualinvoke r2.<android.database.MatrixCursor: void addRow(java.lang.Object[])>($r7);

        i1 = i1 + 1;

     label4:
        goto label3;

     label5:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

        return r2;
    }

    private boolean hasDuplicates(android.database.Cursor, int)
    {
        com.android.common.contacts.BaseEmailAddressAdapter r0;
        android.database.Cursor r1;
        int i0;
        java.lang.String r2;
        boolean $z1, $z2;

        r0 := @this: com.android.common.contacts.BaseEmailAddressAdapter;

        r1 := @parameter0: android.database.Cursor;

        i0 := @parameter1: int;

        interfaceinvoke r1.<android.database.Cursor: boolean moveToPosition(int)>(-1);

     label1:
        $z1 = interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label3;

        r2 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(1);

        $z2 = specialinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: boolean isDuplicate(java.lang.String,int)>(r2, i0);

        if $z2 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    private boolean isDuplicate(java.lang.String, int)
    {
        com.android.common.contacts.BaseEmailAddressAdapter r0;
        java.lang.String r1, r3;
        int i0, i1, i2;
        android.database.Cursor r2;
        boolean $z0, $z2, $z3;

        r0 := @this: com.android.common.contacts.BaseEmailAddressAdapter;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 = virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: int getPartitionCount()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label5;

        if i2 == i0 goto label4;

        $z0 = specialinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: boolean isLoading(int)>(i2);

        if $z0 != 0 goto label4;

        r2 = virtualinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: android.database.Cursor getCursor(int)>(i2);

        if r2 == null goto label4;

        interfaceinvoke r2.<android.database.Cursor: boolean moveToPosition(int)>(-1);

     label2:
        $z2 = interfaceinvoke r2.<android.database.Cursor: boolean moveToNext()>();

        if $z2 == 0 goto label4;

        r3 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(1);

        $z3 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, r3);

        if $z3 == 0 goto label3;

        return 1;

     label3:
        goto label2;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        return 0;
    }

    private final java.lang.String makeDisplayString(android.database.Cursor)
    {
        com.android.common.contacts.BaseEmailAddressAdapter r0;
        android.database.Cursor r1;
        java.lang.String r2, r3, $r4, $r6;
        boolean $z0, $z1, $z2;
        android.text.util.Rfc822Token $r5;

        r0 := @this: com.android.common.contacts.BaseEmailAddressAdapter;

        r1 := @parameter0: android.database.Cursor;

        $r4 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getColumnName(int)>(0);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("searching");

        if $z0 == 0 goto label1;

        return "";

     label1:
        r2 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(0);

        r3 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(1);

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 != 0 goto label2;

        $z2 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r2, r3);

        if $z2 == 0 goto label3;

     label2:
        return r3;

     label3:
        $r5 = new android.text.util.Rfc822Token;

        specialinvoke $r5.<android.text.util.Rfc822Token: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r2, r3, null);

        $r6 = virtualinvoke $r5.<android.text.util.Rfc822Token: java.lang.String toString()>();

        return $r6;
    }

    static boolean access$000(com.android.common.contacts.BaseEmailAddressAdapter)
    {
        com.android.common.contacts.BaseEmailAddressAdapter r0;
        boolean $z0;

        r0 := @parameter0: com.android.common.contacts.BaseEmailAddressAdapter;

        $z0 = r0.<com.android.common.contacts.BaseEmailAddressAdapter: boolean mDirectoriesLoaded>;

        return $z0;
    }

    static boolean access$002(com.android.common.contacts.BaseEmailAddressAdapter, boolean)
    {
        com.android.common.contacts.BaseEmailAddressAdapter r0;
        boolean z0;

        r0 := @parameter0: com.android.common.contacts.BaseEmailAddressAdapter;

        z0 := @parameter1: boolean;

        r0.<com.android.common.contacts.BaseEmailAddressAdapter: boolean mDirectoriesLoaded> = z0;

        return z0;
    }

    static int access$100(com.android.common.contacts.BaseEmailAddressAdapter)
    {
        com.android.common.contacts.BaseEmailAddressAdapter r0;
        int $i0;

        r0 := @parameter0: com.android.common.contacts.BaseEmailAddressAdapter;

        $i0 = r0.<com.android.common.contacts.BaseEmailAddressAdapter: int mPreferredMaxResultCount>;

        return $i0;
    }

    static android.accounts.Account access$200(com.android.common.contacts.BaseEmailAddressAdapter)
    {
        com.android.common.contacts.BaseEmailAddressAdapter r0;
        android.accounts.Account $r1;

        r0 := @parameter0: com.android.common.contacts.BaseEmailAddressAdapter;

        $r1 = r0.<com.android.common.contacts.BaseEmailAddressAdapter: android.accounts.Account mAccount>;

        return $r1;
    }

    static java.lang.String access$300(com.android.common.contacts.BaseEmailAddressAdapter, android.database.Cursor)
    {
        com.android.common.contacts.BaseEmailAddressAdapter r0;
        android.database.Cursor r1;
        java.lang.String $r2;

        r0 := @parameter0: com.android.common.contacts.BaseEmailAddressAdapter;

        r1 := @parameter1: android.database.Cursor;

        $r2 = specialinvoke r0.<com.android.common.contacts.BaseEmailAddressAdapter: java.lang.String makeDisplayString(android.database.Cursor)>(r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <com.android.common.contacts.BaseEmailAddressAdapter: java.lang.String SEARCHING_CURSOR_MARKER> = "searching";

        <com.android.common.contacts.BaseEmailAddressAdapter: int MESSAGE_SEARCH_PENDING> = 1;

        <com.android.common.contacts.BaseEmailAddressAdapter: int MESSAGE_SEARCH_PENDING_DELAY> = 1000;

        <com.android.common.contacts.BaseEmailAddressAdapter: int ALLOWANCE_FOR_DUPLICATES> = 5;

        <com.android.common.contacts.BaseEmailAddressAdapter: int DEFAULT_PREFERRED_MAX_RESULT_COUNT> = 10;

        <com.android.common.contacts.BaseEmailAddressAdapter: java.lang.String PRIMARY_ACCOUNT_TYPE> = "type_for_primary_account";

        <com.android.common.contacts.BaseEmailAddressAdapter: java.lang.String PRIMARY_ACCOUNT_NAME> = "name_for_primary_account";

        <com.android.common.contacts.BaseEmailAddressAdapter: java.lang.String LIMIT_PARAM_KEY> = "limit";

        <com.android.common.contacts.BaseEmailAddressAdapter: java.lang.String DIRECTORY_PARAM_KEY> = "directory";

        <com.android.common.contacts.BaseEmailAddressAdapter: long DIRECTORY_LOCAL_INVISIBLE> = 1L;

        <com.android.common.contacts.BaseEmailAddressAdapter: java.lang.String TAG> = "BaseEmailAddressAdapter";

        return;
    }
}
