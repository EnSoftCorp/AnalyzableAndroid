public final class com.google.common.collect.EnumMultiset extends com.google.common.collect.AbstractMapBasedMultiset
{
    private transient java.lang.Class type;
    private static final long serialVersionUID;

    public static com.google.common.collect.EnumMultiset create(java.lang.Class)
    {
        java.lang.Class r0;
        com.google.common.collect.EnumMultiset $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = new com.google.common.collect.EnumMultiset;

        specialinvoke $r1.<com.google.common.collect.EnumMultiset: void <init>(java.lang.Class)>(r0);

        return $r1;
    }

    public static com.google.common.collect.EnumMultiset create(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        java.util.Iterator r1;
        com.google.common.collect.EnumMultiset r2, $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Enum $r5;
        java.lang.Class $r6;

        r0 := @parameter0: java.lang.Iterable;

        r1 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "EnumMultiset constructor passed empty Iterable");

        $r3 = new com.google.common.collect.EnumMultiset;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Enum) $r4;

        $r6 = virtualinvoke $r5.<java.lang.Enum: java.lang.Class getDeclaringClass()>();

        specialinvoke $r3.<com.google.common.collect.EnumMultiset: void <init>(java.lang.Class)>($r6);

        r2 = $r3;

        staticinvoke <com.google.common.collect.Iterables: boolean addAll(java.util.Collection,java.lang.Iterable)>(r2, r0);

        return r2;
    }

    private void <init>(java.lang.Class)
    {
        com.google.common.collect.EnumMultiset r0;
        java.lang.Class r1;
        java.util.EnumMap $r2;
        com.google.common.collect.WellBehavedMap $r3;

        r0 := @this: com.google.common.collect.EnumMultiset;

        r1 := @parameter0: java.lang.Class;

        $r2 = new java.util.EnumMap;

        specialinvoke $r2.<java.util.EnumMap: void <init>(java.lang.Class)>(r1);

        $r3 = staticinvoke <com.google.common.collect.WellBehavedMap: com.google.common.collect.WellBehavedMap wrap(java.util.Map)>($r2);

        specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset: void <init>(java.util.Map)>($r3);

        r0.<com.google.common.collect.EnumMultiset: java.lang.Class type> = r1;

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        com.google.common.collect.EnumMultiset r0;
        java.io.ObjectOutputStream r1;
        java.lang.Class $r2;

        r0 := @this: com.google.common.collect.EnumMultiset;

        r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $r2 = r0.<com.google.common.collect.EnumMultiset: java.lang.Class type>;

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        staticinvoke <com.google.common.collect.Serialization: void writeMultiset(com.google.common.collect.Multiset,java.io.ObjectOutputStream)>(r0, r1);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        com.google.common.collect.EnumMultiset r0;
        java.io.ObjectInputStream r1;
        java.lang.Class r2, $r5;
        java.lang.Object $r3;
        java.util.EnumMap $r4;
        com.google.common.collect.WellBehavedMap $r6;

        r0 := @this: com.google.common.collect.EnumMultiset;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $r3 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r2 = (java.lang.Class) $r3;

        r0.<com.google.common.collect.EnumMultiset: java.lang.Class type> = r2;

        $r4 = new java.util.EnumMap;

        $r5 = r0.<com.google.common.collect.EnumMultiset: java.lang.Class type>;

        specialinvoke $r4.<java.util.EnumMap: void <init>(java.lang.Class)>($r5);

        $r6 = staticinvoke <com.google.common.collect.WellBehavedMap: com.google.common.collect.WellBehavedMap wrap(java.util.Map)>($r4);

        virtualinvoke r0.<com.google.common.collect.EnumMultiset: void setBackingMap(java.util.Map)>($r6);

        staticinvoke <com.google.common.collect.Serialization: void populateMultiset(com.google.common.collect.Multiset,java.io.ObjectInputStream)>(r0, r1);

        return;
    }

    public volatile int remove(java.lang.Object, int)
    {
        com.google.common.collect.EnumMultiset r0;
        java.lang.Object r1;
        int i0, $i1;

        r0 := @this: com.google.common.collect.EnumMultiset;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $i1 = specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset: int remove(java.lang.Object,int)>(r1, i0);

        return $i1;
    }

    public volatile int count(java.lang.Object)
    {
        com.google.common.collect.EnumMultiset r0;
        java.lang.Object r1;
        int $i0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        r1 := @parameter0: java.lang.Object;

        $i0 = specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset: int count(java.lang.Object)>(r1);

        return $i0;
    }

    public volatile java.util.Iterator iterator()
    {
        com.google.common.collect.EnumMultiset r0;
        java.util.Iterator $r1;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset: java.util.Iterator iterator()>();

        return $r1;
    }

    public volatile int size()
    {
        com.google.common.collect.EnumMultiset r0;
        int $i0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $i0 = specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset: int size()>();

        return $i0;
    }

    public volatile void clear()
    {
        com.google.common.collect.EnumMultiset r0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset: void clear()>();

        return;
    }

    public volatile java.util.Set entrySet()
    {
        com.google.common.collect.EnumMultiset r0;
        java.util.Set $r1;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset: java.util.Set entrySet()>();

        return $r1;
    }

    public volatile java.lang.String toString()
    {
        com.google.common.collect.EnumMultiset r0;
        java.lang.String $r1;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset: java.lang.String toString()>();

        return $r1;
    }

    public volatile int hashCode()
    {
        com.google.common.collect.EnumMultiset r0;
        int $i0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $i0 = specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset: int hashCode()>();

        return $i0;
    }

    public volatile boolean equals(java.lang.Object)
    {
        com.google.common.collect.EnumMultiset r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public volatile java.util.Set elementSet()
    {
        com.google.common.collect.EnumMultiset r0;
        java.util.Set $r1;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset: java.util.Set elementSet()>();

        return $r1;
    }

    public volatile boolean retainAll(java.util.Collection)
    {
        com.google.common.collect.EnumMultiset r0;
        java.util.Collection r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        r1 := @parameter0: java.util.Collection;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset: boolean retainAll(java.util.Collection)>(r1);

        return $z0;
    }

    public volatile boolean removeAll(java.util.Collection)
    {
        com.google.common.collect.EnumMultiset r0;
        java.util.Collection r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        r1 := @parameter0: java.util.Collection;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset: boolean removeAll(java.util.Collection)>(r1);

        return $z0;
    }

    public volatile boolean addAll(java.util.Collection)
    {
        com.google.common.collect.EnumMultiset r0;
        java.util.Collection r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        r1 := @parameter0: java.util.Collection;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset: boolean addAll(java.util.Collection)>(r1);

        return $z0;
    }

    public volatile boolean remove(java.lang.Object)
    {
        com.google.common.collect.EnumMultiset r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset: boolean remove(java.lang.Object)>(r1);

        return $z0;
    }

    public volatile boolean contains(java.lang.Object)
    {
        com.google.common.collect.EnumMultiset r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public volatile boolean isEmpty()
    {
        com.google.common.collect.EnumMultiset r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.EnumMultiset;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractMapBasedMultiset: boolean isEmpty()>();

        return $z0;
    }

    public static void <clinit>()
    {
        <com.google.common.collect.EnumMultiset: long serialVersionUID> = 0L;

        return;
    }
}
