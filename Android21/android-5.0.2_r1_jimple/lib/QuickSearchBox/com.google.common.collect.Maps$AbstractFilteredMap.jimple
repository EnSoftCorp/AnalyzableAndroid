abstract class com.google.common.collect.Maps$AbstractFilteredMap extends java.util.AbstractMap
{
    final java.util.Map unfiltered;
    final com.google.common.base.Predicate predicate;
    java.util.Collection values;

    void <init>(java.util.Map, com.google.common.base.Predicate)
    {
        com.google.common.collect.Maps$AbstractFilteredMap r0;
        java.util.Map r1;
        com.google.common.base.Predicate r2;

        r0 := @this: com.google.common.collect.Maps$AbstractFilteredMap;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: com.google.common.base.Predicate;

        specialinvoke r0.<java.util.AbstractMap: void <init>()>();

        r0.<com.google.common.collect.Maps$AbstractFilteredMap: java.util.Map unfiltered> = r1;

        r0.<com.google.common.collect.Maps$AbstractFilteredMap: com.google.common.base.Predicate predicate> = r2;

        return;
    }

    boolean apply(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.Maps$AbstractFilteredMap r0;
        java.lang.Object r1, r2, r3;
        com.google.common.base.Predicate $r4;
        java.util.Map$Entry $r5;
        boolean $z0;

        r0 := @this: com.google.common.collect.Maps$AbstractFilteredMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 = r1;

        $r4 = r0.<com.google.common.collect.Maps$AbstractFilteredMap: com.google.common.base.Predicate predicate>;

        $r5 = staticinvoke <com.google.common.collect.Maps: java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object)>(r3, r2);

        $z0 = interfaceinvoke $r4.<com.google.common.base.Predicate: boolean apply(java.lang.Object)>($r5);

        return $z0;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.Maps$AbstractFilteredMap r0;
        java.lang.Object r1, r2, $r4;
        boolean $z0;
        java.util.Map $r3;

        r0 := @this: com.google.common.collect.Maps$AbstractFilteredMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke r0.<com.google.common.collect.Maps$AbstractFilteredMap: boolean apply(java.lang.Object,java.lang.Object)>(r1, r2);

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        $r3 = r0.<com.google.common.collect.Maps$AbstractFilteredMap: java.util.Map unfiltered>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r4;
    }

    public void putAll(java.util.Map)
    {
        com.google.common.collect.Maps$AbstractFilteredMap r0;
        java.util.Map r1, $r5;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.Set $r4;
        boolean $z0, $z1;
        java.lang.Object $r6, $r7, $r8;

        r0 := @this: com.google.common.collect.Maps$AbstractFilteredMap;

        r1 := @parameter0: java.util.Map;

        $r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z1 = virtualinvoke r0.<com.google.common.collect.Maps$AbstractFilteredMap: boolean apply(java.lang.Object,java.lang.Object)>($r7, $r8);

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z1);

        goto label1;

     label2:
        $r5 = r0.<com.google.common.collect.Maps$AbstractFilteredMap: java.util.Map unfiltered>;

        interfaceinvoke $r5.<java.util.Map: void putAll(java.util.Map)>(r1);

        return;
    }

    public boolean containsKey(java.lang.Object)
    {
        com.google.common.collect.Maps$AbstractFilteredMap r0;
        java.lang.Object r1, $r4;
        java.util.Map $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.common.collect.Maps$AbstractFilteredMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.Maps$AbstractFilteredMap: java.util.Map unfiltered>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.google.common.collect.Maps$AbstractFilteredMap: java.util.Map unfiltered>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $z1 = virtualinvoke r0.<com.google.common.collect.Maps$AbstractFilteredMap: boolean apply(java.lang.Object,java.lang.Object)>(r1, $r4);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public java.lang.Object get(java.lang.Object)
    {
        com.google.common.collect.Maps$AbstractFilteredMap r0;
        java.lang.Object r1, r2, $r4;
        java.util.Map $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.Maps$AbstractFilteredMap;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<com.google.common.collect.Maps$AbstractFilteredMap: java.util.Map unfiltered>;

        r2 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        if r2 == null goto label1;

        $z0 = virtualinvoke r0.<com.google.common.collect.Maps$AbstractFilteredMap: boolean apply(java.lang.Object,java.lang.Object)>(r1, r2);

        if $z0 == 0 goto label1;

        $r4 = r2;

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    public boolean isEmpty()
    {
        com.google.common.collect.Maps$AbstractFilteredMap r0;
        java.util.Set $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.Maps$AbstractFilteredMap;

        $r1 = virtualinvoke r0.<com.google.common.collect.Maps$AbstractFilteredMap: java.util.Set entrySet()>();

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        return $z0;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        com.google.common.collect.Maps$AbstractFilteredMap r0;
        java.lang.Object r1, $r3;
        boolean $z0;
        java.util.Map $r2;

        r0 := @this: com.google.common.collect.Maps$AbstractFilteredMap;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<com.google.common.collect.Maps$AbstractFilteredMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.common.collect.Maps$AbstractFilteredMap: java.util.Map unfiltered>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public java.util.Collection values()
    {
        com.google.common.collect.Maps$AbstractFilteredMap r0;
        java.util.Collection r1, $r2;
        com.google.common.collect.Maps$AbstractFilteredMap$Values r3;

        r0 := @this: com.google.common.collect.Maps$AbstractFilteredMap;

        r1 = r0.<com.google.common.collect.Maps$AbstractFilteredMap: java.util.Collection values>;

        if r1 != null goto label1;

        r3 = new com.google.common.collect.Maps$AbstractFilteredMap$Values;

        $r2 = r3;

        specialinvoke r3.<com.google.common.collect.Maps$AbstractFilteredMap$Values: void <init>(com.google.common.collect.Maps$AbstractFilteredMap)>(r0);

        r0.<com.google.common.collect.Maps$AbstractFilteredMap: java.util.Collection values> = r3;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }
}
