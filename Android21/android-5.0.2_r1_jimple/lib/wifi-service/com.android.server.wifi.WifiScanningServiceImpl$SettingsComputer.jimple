class com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer extends java.lang.Object
{
    private static final com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket[] mTimeBuckets;
    private static final int MAX_BUCKETS;
    private static final int MAX_CHANNELS;
    private static final int DEFAULT_MAX_AP_PER_SCAN;
    private static final int DEFAULT_REPORT_THRESHOLD;
    private static final int DEFAULT_BASE_PERIOD_MS;
    private com.android.server.wifi.WifiNative$ScanSettings mSettings;
    java.util.HashMap mChannelToBucketMap;

    private void <init>()
    {
        com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer r0;
        int i0, i1, $i2, $i3;
        com.android.server.wifi.WifiNative$BucketSettings r1, $r12;
        com.android.server.wifi.WifiNative$ChannelSettings r2, $r16;
        com.android.server.wifi.WifiNative$ScanSettings $r3, $r4, $r5, $r6, $r8, $r9, $r15;
        com.android.server.wifi.WifiNative$BucketSettings[] $r7, $r10, $r17;
        java.util.HashMap $r11;
        com.android.server.wifi.WifiNative$ChannelSettings[] $r13, $r14, $r18;

        r0 := @this: com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new com.android.server.wifi.WifiNative$ScanSettings;

        specialinvoke $r3.<com.android.server.wifi.WifiNative$ScanSettings: void <init>()>();

        r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: com.android.server.wifi.WifiNative$ScanSettings mSettings> = $r3;

        $r4 = r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: com.android.server.wifi.WifiNative$ScanSettings mSettings>;

        $r4.<com.android.server.wifi.WifiNative$ScanSettings: int max_ap_per_scan> = 10;

        $r5 = r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: com.android.server.wifi.WifiNative$ScanSettings mSettings>;

        $r5.<com.android.server.wifi.WifiNative$ScanSettings: int base_period_ms> = 5000;

        $r6 = r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: com.android.server.wifi.WifiNative$ScanSettings mSettings>;

        $r6.<com.android.server.wifi.WifiNative$ScanSettings: int report_threshold> = 10;

        $r8 = r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: com.android.server.wifi.WifiNative$ScanSettings mSettings>;

        $r7 = newarray (com.android.server.wifi.WifiNative$BucketSettings)[8];

        $r8.<com.android.server.wifi.WifiNative$ScanSettings: com.android.server.wifi.WifiNative$BucketSettings[] buckets> = $r7;

        i0 = 0;

     label1:
        $r9 = r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: com.android.server.wifi.WifiNative$ScanSettings mSettings>;

        $r10 = $r9.<com.android.server.wifi.WifiNative$ScanSettings: com.android.server.wifi.WifiNative$BucketSettings[] buckets>;

        $i2 = lengthof $r10;

        if i0 >= $i2 goto label4;

        $r12 = new com.android.server.wifi.WifiNative$BucketSettings;

        specialinvoke $r12.<com.android.server.wifi.WifiNative$BucketSettings: void <init>()>();

        r1 = $r12;

        r1.<com.android.server.wifi.WifiNative$BucketSettings: int bucket> = i0;

        r1.<com.android.server.wifi.WifiNative$BucketSettings: int report_events> = 0;

        $r14 = newarray (com.android.server.wifi.WifiNative$ChannelSettings)[8];

        r1.<com.android.server.wifi.WifiNative$BucketSettings: com.android.server.wifi.WifiNative$ChannelSettings[] channels> = $r14;

        r1.<com.android.server.wifi.WifiNative$BucketSettings: int num_channels> = 0;

        i1 = 0;

     label2:
        $r13 = r1.<com.android.server.wifi.WifiNative$BucketSettings: com.android.server.wifi.WifiNative$ChannelSettings[] channels>;

        $i3 = lengthof $r13;

        if i1 >= $i3 goto label3;

        $r16 = new com.android.server.wifi.WifiNative$ChannelSettings;

        specialinvoke $r16.<com.android.server.wifi.WifiNative$ChannelSettings: void <init>()>();

        r2 = $r16;

        $r18 = r1.<com.android.server.wifi.WifiNative$BucketSettings: com.android.server.wifi.WifiNative$ChannelSettings[] channels>;

        $r18[i1] = r2;

        i1 = i1 + 1;

        goto label2;

     label3:
        $r15 = r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: com.android.server.wifi.WifiNative$ScanSettings mSettings>;

        $r17 = $r15.<com.android.server.wifi.WifiNative$ScanSettings: com.android.server.wifi.WifiNative$BucketSettings[] buckets>;

        $r17[i0] = r1;

        i0 = i0 + 1;

        goto label1;

     label4:
        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: java.util.HashMap mChannelToBucketMap> = $r11;

        return;
    }

    private int getBestBucket(android.net.wifi.WifiScanner$ScanSettings)
    {
        com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer r0;
        android.net.wifi.WifiScanner$ScanSettings r1;
        android.net.wifi.WifiScanner$ChannelSpec[] r2, r3, r35, r37;
        int i0, i1, i2, i3, $i4, $i5, $i7, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i21, i22, i23, i24, i25, i26;
        android.net.wifi.WifiScanner$ChannelSpec r4, r36, r38;
        com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket[] $r5, $r6, $r27;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r12, $r14, $r19, $r21, $r22;
        java.lang.String $r9, $r13, $r20;
        java.lang.Integer $r15, $r18, $r23, $r24, $r28, $r31, $r33;
        java.util.HashMap $r16, $r25, $r29, $r32;
        boolean $z0;
        java.lang.Object $r30;
        com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket r34;

        r0 := @this: com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer;

        r1 := @parameter0: android.net.wifi.WifiScanner$ScanSettings;

        r2 = r1.<android.net.wifi.WifiScanner$ScanSettings: android.net.wifi.WifiScanner$ChannelSpec[] channels>;

        if r2 != null goto label01;

        $i19 = r1.<android.net.wifi.WifiScanner$ScanSettings: int band>;

        r2 = staticinvoke <com.android.server.wifi.WifiScanningServiceImpl: android.net.wifi.WifiScanner$ChannelSpec[] access$1300(int)>($i19);

     label01:
        if r2 != null goto label02;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WifiScanningService", "No channels to scan!!");

        return -1;

     label02:
        $r5 = <com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket[] mTimeBuckets>;

        i0 = lengthof $r5;

        r3 = r2;

        i1 = lengthof r3;

        i2 = 0;

     label03:
        if i2 >= i1 goto label05;

        r4 = r3[i2];

        $r29 = r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: java.util.HashMap mChannelToBucketMap>;

        $i17 = r4.<android.net.wifi.WifiScanner$ChannelSpec: int frequency>;

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i17);

        $z0 = virtualinvoke $r29.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r28);

        if $z0 == 0 goto label04;

        $r32 = r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: java.util.HashMap mChannelToBucketMap>;

        $i18 = r4.<android.net.wifi.WifiScanner$ChannelSpec: int frequency>;

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i18);

        $r30 = virtualinvoke $r32.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r31);

        $r33 = (java.lang.Integer) $r30;

        i3 = virtualinvoke $r33.<java.lang.Integer: int intValue()>();

        if i3 >= i0 goto label04;

        i0 = i3;

     label04:
        i2 = i2 + 1;

        goto label03;

     label05:
        i21 = -1;

        i22 = 0;

     label06:
        $r6 = <com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket[] mTimeBuckets>;

        $i4 = lengthof $r6;

        if i22 >= $i4 goto label08;

        $r27 = <com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket[] mTimeBuckets>;

        r34 = $r27[i22];

        $i11 = r34.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket: int periodMinInSecond>;

        $i15 = $i11 * 1000;

        $i12 = r1.<android.net.wifi.WifiScanner$ScanSettings: int periodInMs>;

        if $i15 > $i12 goto label07;

        $i14 = r1.<android.net.wifi.WifiScanner$ScanSettings: int periodInMs>;

        $i16 = r34.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket: int periodMaxInSecond>;

        $i13 = $i16 * 1000;

        if $i14 >= $i13 goto label07;

        i21 = i22;

        goto label08;

     label07:
        i22 = i22 + 1;

        goto label06;

     label08:
        if i0 >= i21 goto label11;

        r35 = r2;

        i23 = lengthof r35;

        i24 = 0;

     label09:
        if i24 >= i23 goto label10;

        r36 = r35[i24];

        $r25 = r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: java.util.HashMap mChannelToBucketMap>;

        $i10 = r36.<android.net.wifi.WifiScanner$ChannelSpec: int frequency>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r25.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r24);

        i24 = i24 + 1;

        goto label09;

     label10:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("returning mf bucket number ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiScanningService", $r20);

        return i0;

     label11:
        if i21 == -1 goto label14;

        r37 = r2;

        i25 = lengthof r37;

        i26 = 0;

     label12:
        if i26 >= i25 goto label13;

        r38 = r37[i26];

        $r16 = r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: java.util.HashMap mChannelToBucketMap>;

        $i7 = r38.<android.net.wifi.WifiScanner$ChannelSpec: int frequency>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i21);

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r18);

        i26 = i26 + 1;

        goto label12;

     label13:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("returning best bucket number ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i21);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiScanningService", $r13);

        return i21;

     label14:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find suitable bucket for period ");

        $i5 = r1.<android.net.wifi.WifiScanner$ScanSettings: int periodInMs>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WifiScanningService", $r9);

        return -1;
    }

    void prepChannelMap(android.net.wifi.WifiScanner$ScanSettings)
    {
        com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer r0;
        android.net.wifi.WifiScanner$ScanSettings r1;

        r0 := @this: com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer;

        r1 := @parameter0: android.net.wifi.WifiScanner$ScanSettings;

        specialinvoke r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: int getBestBucket(android.net.wifi.WifiScanner$ScanSettings)>(r1);

        return;
    }

    int addScanRequestToBucket(android.net.wifi.WifiScanner$ScanSettings)
    {
        com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer r0;
        android.net.wifi.WifiScanner$ScanSettings r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i14, $i15, $i16, $i18, $i19, $i20, $i21, $i22, $i23, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i33, $i34, $i35, $i36, $i37, $i38, $i40, $i41, $i42, $i43, $i44, $i46, $i47, $i48, $i50, $i51, $i52;
        android.net.wifi.WifiScanner$ChannelSpec[] r2, r5;
        com.android.server.wifi.WifiNative$BucketSettings r3;
        boolean z0, z1, $z2, $z4;
        java.util.HashSet r4, $r22;
        android.net.wifi.WifiScanner$ChannelSpec r6, r63;
        com.android.server.wifi.WifiNative$ChannelSettings[] r7, $r24, $r27, $r45, $r46;
        com.android.server.wifi.WifiNative$ChannelSettings r8, r64;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r15, $r17, $r19, $r20, $r21, $r25, $r26, $r29, $r30, $r32, $r33, $r37, $r40, $r42, $r44, $r47, $r49, $r51, $r55, $r57, $r58, $r60, $r61;
        java.lang.String $r14, $r23, $r28, $r31, $r41, $r48, $r56, $r59;
        com.android.server.wifi.WifiNative$ScanSettings $r16, $r34, $r36, $r39;
        com.android.server.wifi.WifiNative$BucketSettings[] $r18;
        com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket[] $r35;
        com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket $r38;
        java.lang.Object $r43;
        java.lang.Integer $r52, $r54;
        java.util.HashMap $r53;
        java.util.Iterator r62;

        r0 := @this: com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer;

        r1 := @parameter0: android.net.wifi.WifiScanner$ScanSettings;

        i0 = specialinvoke r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: int getBestBucket(android.net.wifi.WifiScanner$ScanSettings)>(r1);

        if i0 != -1 goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WifiScanningService", "Ignoring invalid settings");

        return -1;

     label01:
        r2 = r1.<android.net.wifi.WifiScanner$ScanSettings: android.net.wifi.WifiScanner$ChannelSpec[] channels>;

        $i5 = r1.<android.net.wifi.WifiScanner$ScanSettings: int band>;

        if $i5 != 0 goto label02;

        if r2 == null goto label02;

        $i52 = lengthof r2;

        if $i52 != 0 goto label03;

     label02:
        $i6 = r1.<android.net.wifi.WifiScanner$ScanSettings: int band>;

        r2 = staticinvoke <com.android.server.wifi.WifiScanningServiceImpl: android.net.wifi.WifiScanner$ChannelSpec[] access$1300(int)>($i6);

        if r2 != null goto label03;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WifiScanningService", "No channels to scan!!");

        return -1;

     label03:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("merging ");

        $i7 = lengthof r2;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" channels ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for period ");

        $i8 = r1.<android.net.wifi.WifiScanner$ScanSettings: int periodInMs>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiScanningService", $r14);

        $r16 = r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: com.android.server.wifi.WifiNative$ScanSettings mSettings>;

        $r18 = $r16.<com.android.server.wifi.WifiNative$ScanSettings: com.android.server.wifi.WifiNative$BucketSettings[] buckets>;

        r3 = $r18[i0];

        $i10 = r3.<com.android.server.wifi.WifiNative$BucketSettings: int num_channels>;

        if $i10 != 0 goto label04;

        $i51 = r3.<com.android.server.wifi.WifiNative$BucketSettings: int band>;

        if $i51 != 0 goto label04;

        $z4 = 1;

        goto label05;

     label04:
        $z4 = 0;

     label05:
        z0 = $z4;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("existing ");

        $i11 = r3.<com.android.server.wifi.WifiNative$BucketSettings: int num_channels>;

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" channels ");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiScanningService", $r23);

        $r22 = new java.util.HashSet;

        specialinvoke $r22.<java.util.HashSet: void <init>()>();

        r4 = $r22;

        r5 = r2;

        i1 = lengthof r5;

        i2 = 0;

     label06:
        if i2 >= i1 goto label12;

        r6 = r5[i2];

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("desired channel ");

        $i46 = r6.<android.net.wifi.WifiScanner$ChannelSpec: int frequency>;

        $r57 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i46);

        $r56 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiScanningService", $r56);

        z1 = 0;

        r7 = r3.<com.android.server.wifi.WifiNative$BucketSettings: com.android.server.wifi.WifiNative$ChannelSettings[] channels>;

        i3 = lengthof r7;

        i4 = 0;

     label07:
        if i4 >= i3 goto label09;

        r8 = r7[i4];

        $i47 = r6.<android.net.wifi.WifiScanner$ChannelSpec: int frequency>;

        $i48 = r8.<com.android.server.wifi.WifiNative$ChannelSettings: int frequency>;

        if $i47 != $i48 goto label08;

        z1 = 1;

        goto label09;

     label08:
        i4 = i4 + 1;

        goto label07;

     label09:
        if z1 != 0 goto label10;

        virtualinvoke r4.<java.util.HashSet: boolean add(java.lang.Object)>(r6);

        goto label11;

     label10:
        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Already scanning channel ");

        $i50 = r6.<android.net.wifi.WifiScanner$ChannelSpec: int frequency>;

        $r60 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i50);

        $r59 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiScanningService", $r59);

     label11:
        i2 = i2 + 1;

        goto label06;

     label12:
        $i12 = r1.<android.net.wifi.WifiScanner$ScanSettings: int band>;

        if $i12 != 0 goto label13;

        $i34 = r3.<com.android.server.wifi.WifiNative$BucketSettings: int num_channels>;

        $i33 = virtualinvoke r4.<java.util.HashSet: int size()>();

        $i37 = $i34 + $i33;

        $r45 = r3.<com.android.server.wifi.WifiNative$BucketSettings: com.android.server.wifi.WifiNative$ChannelSettings[] channels>;

        $i36 = lengthof $r45;

        if $i37 <= $i36 goto label14;

     label13:
        r3.<com.android.server.wifi.WifiNative$BucketSettings: int num_channels> = 0;

        $r24 = r3.<com.android.server.wifi.WifiNative$BucketSettings: com.android.server.wifi.WifiNative$ChannelSettings[] channels>;

        $i16 = staticinvoke <com.android.server.wifi.WifiScanningServiceImpl: int access$1400(com.android.server.wifi.WifiNative$ChannelSettings[])>($r24);

        $i14 = staticinvoke <com.android.server.wifi.WifiScanningServiceImpl: int access$1500(android.net.wifi.WifiScanner$ChannelSpec[])>(r2);

        $i15 = $i16 | $i14;

        r3.<com.android.server.wifi.WifiNative$BucketSettings: int band> = $i15;

        $r27 = newarray (com.android.server.wifi.WifiNative$ChannelSettings)[0];

        r3.<com.android.server.wifi.WifiNative$BucketSettings: com.android.server.wifi.WifiNative$ChannelSettings[] channels> = $r27;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("switching to using band ");

        $i18 = r3.<com.android.server.wifi.WifiNative$BucketSettings: int band>;

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiScanningService", $r28);

        goto label16;

     label14:
        r62 = virtualinvoke r4.<java.util.HashSet: java.util.Iterator iterator()>();

     label15:
        $z2 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label16;

        $r43 = interfaceinvoke r62.<java.util.Iterator: java.lang.Object next()>();

        r63 = (android.net.wifi.WifiScanner$ChannelSpec) $r43;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("adding new channel spec ");

        $i41 = r63.<android.net.wifi.WifiScanner$ChannelSpec: int frequency>;

        $r47 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i41);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiScanningService", $r48);

        $r46 = r3.<com.android.server.wifi.WifiNative$BucketSettings: com.android.server.wifi.WifiNative$ChannelSettings[] channels>;

        $i40 = r3.<com.android.server.wifi.WifiNative$BucketSettings: int num_channels>;

        r64 = $r46[$i40];

        $i38 = r63.<android.net.wifi.WifiScanner$ChannelSpec: int frequency>;

        r64.<com.android.server.wifi.WifiNative$ChannelSettings: int frequency> = $i38;

        $i43 = r3.<com.android.server.wifi.WifiNative$BucketSettings: int num_channels>;

        $i44 = $i43 + 1;

        r3.<com.android.server.wifi.WifiNative$BucketSettings: int num_channels> = $i44;

        $r53 = r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: java.util.HashMap mChannelToBucketMap>;

        $r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $i42 = r64.<com.android.server.wifi.WifiNative$ChannelSettings: int frequency>;

        $r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i42);

        virtualinvoke $r53.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r54, $r52);

        goto label15;

     label16:
        $i19 = r3.<com.android.server.wifi.WifiNative$BucketSettings: int report_events>;

        $i20 = r1.<android.net.wifi.WifiScanner$ScanSettings: int reportEvents>;

        if $i19 >= $i20 goto label17;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setting report_events to ");

        $i35 = r1.<android.net.wifi.WifiScanner$ScanSettings: int reportEvents>;

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i35);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiScanningService", $r41);

        $i31 = r1.<android.net.wifi.WifiScanner$ScanSettings: int reportEvents>;

        r3.<com.android.server.wifi.WifiNative$BucketSettings: int report_events> = $i31;

        goto label18;

     label17:
        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("report_events is ");

        $i21 = r1.<android.net.wifi.WifiScanner$ScanSettings: int reportEvents>;

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiScanningService", $r31);

     label18:
        if z0 == 0 goto label19;

        $r35 = <com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket[] mTimeBuckets>;

        $r38 = $r35[i0];

        $i29 = $r38.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket: int periodInSecond>;

        $i30 = $i29 * 1000;

        r3.<com.android.server.wifi.WifiNative$BucketSettings: int period_ms> = $i30;

        $r39 = r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: com.android.server.wifi.WifiNative$ScanSettings mSettings>;

        $i27 = $r39.<com.android.server.wifi.WifiNative$ScanSettings: int num_buckets>;

        $i28 = $i27 + 1;

        $r39.<com.android.server.wifi.WifiNative$ScanSettings: int num_buckets> = $i28;

     label19:
        $r36 = r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: com.android.server.wifi.WifiNative$ScanSettings mSettings>;

        $i26 = $r36.<com.android.server.wifi.WifiNative$ScanSettings: int max_ap_per_scan>;

        $i25 = r1.<android.net.wifi.WifiScanner$ScanSettings: int numBssidsPerScan>;

        if $i26 >= $i25 goto label20;

        $r34 = r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: com.android.server.wifi.WifiNative$ScanSettings mSettings>;

        $i23 = r1.<android.net.wifi.WifiScanner$ScanSettings: int numBssidsPerScan>;

        $r34.<com.android.server.wifi.WifiNative$ScanSettings: int max_ap_per_scan> = $i23;

     label20:
        $i22 = r3.<com.android.server.wifi.WifiNative$BucketSettings: int period_ms>;

        return $i22;
    }

    public com.android.server.wifi.WifiNative$ScanSettings getComputedSettings()
    {
        com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer r0;
        com.android.server.wifi.WifiNative$ScanSettings $r1;

        r0 := @this: com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer;

        $r1 = r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: com.android.server.wifi.WifiNative$ScanSettings mSettings>;

        return $r1;
    }

    public void compressBuckets()
    {
        com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7;
        com.android.server.wifi.WifiNative$ScanSettings $r1, $r3, $r5, $r6, $r9, $r10, $r11, $r15, $r17, $r21;
        com.android.server.wifi.WifiNative$BucketSettings[] $r2, $r4, $r7, $r12, $r14, $r16, $r18, $r20;
        com.android.server.wifi.WifiNative$BucketSettings $r8, $r13, $r19, $r22;

        r0 := @this: com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer;

        i0 = 0;

        i1 = 0;

     label1:
        $r1 = r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: com.android.server.wifi.WifiNative$ScanSettings mSettings>;

        $r2 = $r1.<com.android.server.wifi.WifiNative$ScanSettings: com.android.server.wifi.WifiNative$BucketSettings[] buckets>;

        $i2 = lengthof $r2;

        if i1 >= $i2 goto label4;

        $r11 = r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: com.android.server.wifi.WifiNative$ScanSettings mSettings>;

        $r14 = $r11.<com.android.server.wifi.WifiNative$ScanSettings: com.android.server.wifi.WifiNative$BucketSettings[] buckets>;

        $r13 = $r14[i1];

        $i5 = $r13.<com.android.server.wifi.WifiNative$BucketSettings: int num_channels>;

        if $i5 != 0 goto label2;

        $r21 = r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: com.android.server.wifi.WifiNative$ScanSettings mSettings>;

        $r20 = $r21.<com.android.server.wifi.WifiNative$ScanSettings: com.android.server.wifi.WifiNative$BucketSettings[] buckets>;

        $r22 = $r20[i1];

        $i6 = $r22.<com.android.server.wifi.WifiNative$BucketSettings: int band>;

        if $i6 == 0 goto label3;

     label2:
        $r15 = r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: com.android.server.wifi.WifiNative$ScanSettings mSettings>;

        $r18 = $r15.<com.android.server.wifi.WifiNative$ScanSettings: com.android.server.wifi.WifiNative$BucketSettings[] buckets>;

        $r17 = r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: com.android.server.wifi.WifiNative$ScanSettings mSettings>;

        $r16 = $r17.<com.android.server.wifi.WifiNative$ScanSettings: com.android.server.wifi.WifiNative$BucketSettings[] buckets>;

        $r19 = $r16[i1];

        $r18[i0] = $r19;

        i0 = i0 + 1;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        i7 = i0;

     label5:
        $r3 = r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: com.android.server.wifi.WifiNative$ScanSettings mSettings>;

        $r4 = $r3.<com.android.server.wifi.WifiNative$ScanSettings: com.android.server.wifi.WifiNative$BucketSettings[] buckets>;

        $i3 = lengthof $r4;

        if i7 >= $i3 goto label6;

        $r10 = r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: com.android.server.wifi.WifiNative$ScanSettings mSettings>;

        $r12 = $r10.<com.android.server.wifi.WifiNative$ScanSettings: com.android.server.wifi.WifiNative$BucketSettings[] buckets>;

        $r12[i7] = null;

        i7 = i7 + 1;

        goto label5;

     label6:
        $r5 = r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: com.android.server.wifi.WifiNative$ScanSettings mSettings>;

        $r5.<com.android.server.wifi.WifiNative$ScanSettings: int num_buckets> = i0;

        if i0 == 0 goto label7;

        $r9 = r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: com.android.server.wifi.WifiNative$ScanSettings mSettings>;

        $r6 = r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: com.android.server.wifi.WifiNative$ScanSettings mSettings>;

        $r7 = $r6.<com.android.server.wifi.WifiNative$ScanSettings: com.android.server.wifi.WifiNative$BucketSettings[] buckets>;

        $r8 = $r7[0];

        $i4 = $r8.<com.android.server.wifi.WifiNative$BucketSettings: int period_ms>;

        $r9.<com.android.server.wifi.WifiNative$ScanSettings: int base_period_ms> = $i4;

     label7:
        return;
    }

    void <init>(com.android.server.wifi.WifiScanningServiceImpl$1)
    {
        com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer r0;
        com.android.server.wifi.WifiScanningServiceImpl$1 r1;

        r0 := @this: com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer;

        r1 := @parameter0: com.android.server.wifi.WifiScanningServiceImpl$1;

        specialinvoke r0.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket[] $r0;
        com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        <com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: int DEFAULT_BASE_PERIOD_MS> = 5000;

        <com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: int DEFAULT_REPORT_THRESHOLD> = 10;

        <com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: int DEFAULT_MAX_AP_PER_SCAN> = 10;

        <com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: int MAX_CHANNELS> = 8;

        <com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: int MAX_BUCKETS> = 8;

        $r0 = newarray (com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket)[8];

        $r1 = new com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket;

        specialinvoke $r1.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket: void <init>(int,int,int)>(1, 0, 5);

        $r0[0] = $r1;

        $r2 = new com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket;

        specialinvoke $r2.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket: void <init>(int,int,int)>(5, 5, 10);

        $r0[1] = $r2;

        $r3 = new com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket;

        specialinvoke $r3.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket: void <init>(int,int,int)>(10, 10, 25);

        $r0[2] = $r3;

        $r4 = new com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket;

        specialinvoke $r4.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket: void <init>(int,int,int)>(30, 25, 55);

        $r0[3] = $r4;

        $r5 = new com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket;

        specialinvoke $r5.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket: void <init>(int,int,int)>(60, 55, 100);

        $r0[4] = $r5;

        $r6 = new com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket;

        specialinvoke $r6.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket: void <init>(int,int,int)>(300, 240, 500);

        $r0[5] = $r6;

        $r7 = new com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket;

        specialinvoke $r7.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket: void <init>(int,int,int)>(600, 500, 1500);

        $r0[6] = $r7;

        $r8 = new com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket;

        specialinvoke $r8.<com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket: void <init>(int,int,int)>(1800, 1500, 1024000);

        $r0[7] = $r8;

        <com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer: com.android.server.wifi.WifiScanningServiceImpl$SettingsComputer$TimeBucket[] mTimeBuckets> = $r0;

        return;
    }
}
