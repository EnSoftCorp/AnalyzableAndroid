public class com.android.server.wifi.WifiNative extends java.lang.Object
{
    private static boolean DBG;
    private final java.lang.String mTAG;
    private static final int DEFAULT_GROUP_OWNER_INTENT;
    static final int BLUETOOTH_COEXISTENCE_MODE_ENABLED;
    static final int BLUETOOTH_COEXISTENCE_MODE_DISABLED;
    static final int BLUETOOTH_COEXISTENCE_MODE_SENSE;
    static final int SCAN_WITHOUT_CONNECTION_SETUP;
    static final int SCAN_WITH_CONNECTION_SETUP;
    static final java.lang.Object mLock;
    public final java.lang.String mInterfaceName;
    public final java.lang.String mInterfacePrefix;
    private boolean mSuspendOptEnabled;
    private static final android.util.LocalLog mLocalLog;
    private static int sCmdId;
    private static final java.lang.String TAG;
    private static long sWifiHalHandle;
    private static long[] sWifiIfaceHandles;
    private static int sWlan0Index;
    private static int sP2p0Index;
    private static boolean sHalIsStarted;
    private static int WIFI_SCAN_BUFFER_FULL;
    private static int WIFI_SCAN_COMPLETE;
    private static int sScanCmdId;
    private static com.android.server.wifi.WifiNative$ScanEventHandler sScanEventHandler;
    private static com.android.server.wifi.WifiNative$ScanSettings sScanSettings;
    private static int sHotlistCmdId;
    private static com.android.server.wifi.WifiNative$HotlistEventHandler sHotlistEventHandler;
    private static com.android.server.wifi.WifiNative$SignificantWifiChangeEventHandler sSignificantWifiChangeHandler;
    private static int sSignificantWifiChangeCmdId;
    private static com.android.server.wifi.WifiNative$RttEventHandler sRttEventHandler;
    private static int sRttCmdId;

    private static native int registerNatives();

    public static native boolean loadDriver();

    public static native boolean isDriverLoaded();

    public static native boolean unloadDriver();

    public static native boolean startSupplicant(boolean);

    public static native boolean killSupplicant(boolean);

    private native boolean connectToSupplicantNative();

    private native void closeSupplicantConnectionNative();

    private native java.lang.String waitForEventNative();

    private native boolean doBooleanCommandNative(java.lang.String);

    private native int doIntCommandNative(java.lang.String);

    private native java.lang.String doStringCommandNative(java.lang.String);

    public void <init>(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r5, $r10;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r7, $r8, $r9;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wifi.WifiNative: boolean mSuspendOptEnabled> = 0;

        r0.<com.android.server.wifi.WifiNative: java.lang.String mInterfaceName> = r1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WifiNative-");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.server.wifi.WifiNative: java.lang.String mTAG> = $r5;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("p2p0");

        if $z0 != 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IFNAME=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.server.wifi.WifiNative: java.lang.String mInterfacePrefix> = $r10;

        goto label2;

     label1:
        r0.<com.android.server.wifi.WifiNative: java.lang.String mInterfacePrefix> = "";

     label2:
        return;
    }

    void enableVerboseLogging(int)
    {
        com.android.server.wifi.WifiNative r0;
        int i0;

        r0 := @this: com.android.server.wifi.WifiNative;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        <com.android.server.wifi.WifiNative: boolean DBG> = 1;

        goto label2;

     label1:
        <com.android.server.wifi.WifiNative: boolean DBG> = 0;

     label2:
        return;
    }

    public android.util.LocalLog getLocalLog()
    {
        com.android.server.wifi.WifiNative r0;
        android.util.LocalLog $r1;

        r0 := @this: com.android.server.wifi.WifiNative;

        $r1 = <com.android.server.wifi.WifiNative: android.util.LocalLog mLocalLog>;

        return $r1;
    }

    private static int getNewCmdIdLocked()
    {
        int $i0, $i1;

        $i0 = <com.android.server.wifi.WifiNative: int sCmdId>;

        $i1 = $i0 + 1;

        <com.android.server.wifi.WifiNative: int sCmdId> = $i1;

        return $i0;
    }

    private void localLog(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r5, $r9;
        android.util.LocalLog $r2, $r4;
        java.lang.StringBuilder $r3, $r6, $r7, $r8;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $r2 = <com.android.server.wifi.WifiNative: android.util.LocalLog mLocalLog>;

        if $r2 == null goto label1;

        $r4 = <com.android.server.wifi.WifiNative: android.util.LocalLog mLocalLog>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<com.android.server.wifi.WifiNative: java.lang.String mInterfaceName>;

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<android.util.LocalLog: void log(java.lang.String)>($r9);

     label1:
        return;
    }

    public boolean connectToSupplicant()
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<com.android.server.wifi.WifiNative: java.lang.String mInterfacePrefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("connectToSupplicant");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.wifi.WifiNative: void localLog(java.lang.String)>($r5);

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean connectToSupplicantNative()>();

        return $z0;
    }

    public void closeSupplicantConnection()
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5;

        r0 := @this: com.android.server.wifi.WifiNative;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<com.android.server.wifi.WifiNative: java.lang.String mInterfacePrefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("closeSupplicantConnection");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.wifi.WifiNative: void localLog(java.lang.String)>($r5);

        specialinvoke r0.<com.android.server.wifi.WifiNative: void closeSupplicantConnectionNative()>();

        return;
    }

    public java.lang.String waitForEvent()
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.wifi.WifiNative;

        $r1 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String waitForEventNative()>();

        return $r1;
    }

    private boolean doBooleanCommand(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, r3, $r7, $r10, $r13, $r17, $r22, $r26, $r29, $r30, $r31;
        java.lang.Object r2, $r5;
        int i0;
        boolean z0, $z1, $z2;
        java.lang.Throwable r4, $r34;
        java.lang.StringBuilder $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r16, $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r27, $r28, $r32, $r33;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $z1 = <com.android.server.wifi.WifiNative: boolean DBG>;

        if $z1 == 0 goto label1;

        $r29 = r0.<com.android.server.wifi.WifiNative: java.lang.String mTAG>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("doBoolean: ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r29, $r31);

     label1:
        $r5 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label2:
        i0 = staticinvoke <com.android.server.wifi.WifiNative: int getNewCmdIdLocked()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r10 = r0.<com.android.server.wifi.WifiNative: java.lang.String mInterfacePrefix>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = r0.<com.android.server.wifi.WifiNative: java.lang.String mInterfacePrefix>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommandNative(java.lang.String)>($r17);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.wifi.WifiNative: void localLog(java.lang.String)>($r22);

        $z2 = <com.android.server.wifi.WifiNative: boolean DBG>;

        if $z2 == 0 goto label3;

        $r26 = r0.<com.android.server.wifi.WifiNative: java.lang.String mTAG>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": returned ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r26, $r30);

     label3:
        exitmonitor r2;

     label4:
        return z0;

     label5:
        $r34 := @caughtexception;

        r4 = $r34;

        exitmonitor r2;

     label6:
        throw r4;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private int doIntCommand(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, r3, $r7, $r10, $r13, $r17, $r22, $r25, $r26, $r28, $r33;
        java.lang.Object r2, $r5;
        int i0, i1;
        java.lang.Throwable r4, $r31;
        boolean $z0, $z1;
        java.lang.StringBuilder $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r16, $r18, $r19, $r20, $r21, $r23, $r24, $r27, $r29, $r30, $r32;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $z0 = <com.android.server.wifi.WifiNative: boolean DBG>;

        if $z0 == 0 goto label1;

        $r28 = r0.<com.android.server.wifi.WifiNative: java.lang.String mTAG>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("doInt: ");

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r28, $r33);

     label1:
        $r5 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r2 = $r5;

        entermonitor $r5;

     label2:
        i0 = staticinvoke <com.android.server.wifi.WifiNative: int getNewCmdIdLocked()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r10 = r0.<com.android.server.wifi.WifiNative: java.lang.String mInterfacePrefix>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = r0.<com.android.server.wifi.WifiNative: java.lang.String mInterfacePrefix>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        i1 = specialinvoke r0.<com.android.server.wifi.WifiNative: int doIntCommandNative(java.lang.String)>($r17);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.wifi.WifiNative: void localLog(java.lang.String)>($r22);

        $z1 = <com.android.server.wifi.WifiNative: boolean DBG>;

        if $z1 == 0 goto label3;

        $r26 = r0.<com.android.server.wifi.WifiNative: java.lang.String mTAG>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   returned ");

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r26, $r25);

     label3:
        exitmonitor r2;

     label4:
        return i1;

     label5:
        $r31 := @caughtexception;

        r4 = $r31;

        exitmonitor r2;

     label6:
        throw r4;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private java.lang.String doStringCommand(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, r3, r4, $r8, $r11, $r14, $r18, $r21, $r23, $r26, $r27, $r31, $r34, $r37;
        java.lang.Object r2, $r6;
        int i0;
        java.lang.Throwable r5, $r36;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r7, $r9, $r10, $r12, $r13, $r15, $r16, $r17, $r19, $r20, $r22, $r24, $r25, $r28, $r29, $r30, $r32, $r33, $r35;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $z0 = <com.android.server.wifi.WifiNative: boolean DBG>;

        if $z0 == 0 goto label1;

        $z4 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("GET_NETWORK");

        if $z4 != 0 goto label1;

        $r34 = r0.<com.android.server.wifi.WifiNative: java.lang.String mTAG>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("doString: [");

        $r32 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r37 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r34, $r37);

     label1:
        $r6 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r2 = $r6;

        entermonitor $r6;

     label2:
        i0 = staticinvoke <com.android.server.wifi.WifiNative: int getNewCmdIdLocked()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r11 = r0.<com.android.server.wifi.WifiNative: java.lang.String mInterfacePrefix>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r3 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = r0.<com.android.server.wifi.WifiNative: java.lang.String mInterfacePrefix>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommandNative(java.lang.String)>($r18);

        if r4 != null goto label3;

        $z3 = <com.android.server.wifi.WifiNative: boolean DBG>;

        if $z3 == 0 goto label5;

        $r31 = r0.<com.android.server.wifi.WifiNative: java.lang.String mTAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r31, "doStringCommandNative no result");

        goto label5;

     label3:
        $z2 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("STATUS-");

        if $z2 != 0 goto label4;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.wifi.WifiNative: void localLog(java.lang.String)>($r27);

     label4:
        $z1 = <com.android.server.wifi.WifiNative: boolean DBG>;

        if $z1 == 0 goto label5;

        $r21 = r0.<com.android.server.wifi.WifiNative: java.lang.String mTAG>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   returned ");

        $r23 = virtualinvoke r4.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", " ");

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r21, $r26);

     label5:
        exitmonitor r2;

     label6:
        return r4;

     label7:
        $r36 := @caughtexception;

        r5 = $r36;

        exitmonitor r2;

     label8:
        throw r5;

        catch java.lang.Throwable from label2 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private java.lang.String doStringCommandWithoutLogging(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r6, $r9, $r10, $r12, $r15;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r17;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r7, $r8, $r11, $r13, $r14, $r16;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $z0 = <com.android.server.wifi.WifiNative: boolean DBG>;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("GET_NETWORK");

        if $z1 != 0 goto label1;

        $r12 = r0.<com.android.server.wifi.WifiNative: java.lang.String mTAG>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("doString: [");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r12, $r15);

     label1:
        $r4 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<com.android.server.wifi.WifiNative: java.lang.String mInterfacePrefix>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommandNative(java.lang.String)>($r9);

        exitmonitor r2;

     label3:
        return $r10;

     label4:
        $r17 := @caughtexception;

        r3 = $r17;

        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean ping()
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommand(java.lang.String)>("PING");

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("PONG");

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void setSupplicantLogLevel(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LOG_LEVEL ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommand(java.lang.String)>($r5);

        return;
    }

    public java.lang.String getFreqCapability()
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.wifi.WifiNative;

        $r1 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommand(java.lang.String)>("GET_CAPABILITY freq");

        return $r1;
    }

    public boolean scan(int, java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        int i0;
        java.lang.String r1, $r6, $r10;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r9;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.android.server.wifi.WifiNative;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        if i0 != 1 goto label2;

        if r1 != null goto label1;

        $z3 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("SCAN TYPE=ONLY");

        return $z3;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SCAN TYPE=ONLY freq=");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r10);

        return $z2;

     label2:
        if i0 != 2 goto label4;

        if r1 != null goto label3;

        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("SCAN");

        return $z1;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SCAN freq=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r6);

        return $z0;

     label4:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid scan type");

        throw $r2;
    }

    public boolean stopSupplicant()
    {
        com.android.server.wifi.WifiNative r0;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("TERMINATE");

        return $z0;
    }

    public java.lang.String listNetworks()
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.wifi.WifiNative;

        $r1 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommand(java.lang.String)>("LIST_NETWORKS");

        return $r1;
    }

    public int addNetwork()
    {
        com.android.server.wifi.WifiNative r0;
        int $i0;

        r0 := @this: com.android.server.wifi.WifiNative;

        $i0 = specialinvoke r0.<com.android.server.wifi.WifiNative: int doIntCommand(java.lang.String)>("ADD_NETWORK");

        return $i0;
    }

    public boolean setNetworkVariable(int, java.lang.String, java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        int i0;
        java.lang.String r1, r2, $r10;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: com.android.server.wifi.WifiNative;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 == 0 goto label2;

     label1:
        return 0;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SET_NETWORK ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r10);

        return $z2;
    }

    public java.lang.String getNetworkVariable(int, java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        int i0;
        java.lang.String r1, $r7, $r8;
        boolean $z0;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;

        r0 := @this: com.android.server.wifi.WifiNative;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GET_NETWORK ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommandWithoutLogging(java.lang.String)>($r7);

        return $r8;
    }

    public boolean removeNetwork(int)
    {
        com.android.server.wifi.WifiNative r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("REMOVE_NETWORK ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r4);

        return $z0;
    }

    private void logDbg(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, r2, $r13, $r19, $r26, $r28, $r36, $r37;
        long l0, $l1;
        java.lang.Object[] $r3;
        java.lang.Long $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r29, $r34, $r38;
        java.lang.Thread $r8, $r14, $r20, $r25, $r35;
        java.lang.StackTraceElement $r10, $r16, $r22, $r31, $r33;
        java.lang.StackTraceElement[] $r11, $r17, $r23, $r30, $r32;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtimeNanos()>();

        $r3 = newarray (java.lang.Object)[1];

        $l1 = l0 / 1000L;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3[0] = $r4;

        r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%,d us] ", $r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stack:");

        $r8 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r11 = virtualinvoke $r8.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r10 = $r11[2];

        $r13 = virtualinvoke $r10.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r14 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r17 = virtualinvoke $r14.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r16 = $r17[3];

        $r19 = virtualinvoke $r16.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r20 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r23 = virtualinvoke $r20.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r22 = $r23[4];

        $r26 = virtualinvoke $r22.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r27 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r25 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r30 = virtualinvoke $r25.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r31 = $r30[5];

        $r28 = virtualinvoke $r31.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r35 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r32 = virtualinvoke $r35.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r33 = $r32[6];

        $r37 = virtualinvoke $r33.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r38 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r36 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WifiNative: ", $r36);

        return;
    }

    public boolean enableNetwork(int, boolean)
    {
        com.android.server.wifi.WifiNative r0;
        int i0;
        boolean z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r1, $r2, $r3, $r5, $r6, $r7, $r9, $r10, $r11, $r13, $r14;
        java.lang.String $r4, $r8, $r12, $r15;

        r0 := @this: com.android.server.wifi.WifiNative;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $z1 = <com.android.server.wifi.WifiNative: boolean DBG>;

        if $z1 == 0 goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("enableNetwork nid=");

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" disableOthers=");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.wifi.WifiNative: void logDbg(java.lang.String)>($r15);

     label1:
        if z0 == 0 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT_NETWORK ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $z3 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r8);

        return $z3;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ENABLE_NETWORK ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r4);

        return $z2;
    }

    public boolean disableNetwork(int)
    {
        com.android.server.wifi.WifiNative r0;
        int i0;
        boolean $z0, $z1;
        java.lang.StringBuilder $r1, $r2, $r3, $r5, $r6, $r8;
        java.lang.String $r4, $r7, $r9;

        r0 := @this: com.android.server.wifi.WifiNative;

        i0 := @parameter0: int;

        $z0 = <com.android.server.wifi.WifiNative: boolean DBG>;

        if $z0 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("disableNetwork nid=");

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.wifi.WifiNative: void logDbg(java.lang.String)>($r9);

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DISABLE_NETWORK ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r4);

        return $z1;
    }

    public boolean reconnect()
    {
        com.android.server.wifi.WifiNative r0;
        boolean $z0, $z1;

        r0 := @this: com.android.server.wifi.WifiNative;

        $z0 = <com.android.server.wifi.WifiNative: boolean DBG>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.wifi.WifiNative: void logDbg(java.lang.String)>("RECONNECT ");

     label1:
        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("RECONNECT");

        return $z1;
    }

    public boolean reassociate()
    {
        com.android.server.wifi.WifiNative r0;
        boolean $z0, $z1;

        r0 := @this: com.android.server.wifi.WifiNative;

        $z0 = <com.android.server.wifi.WifiNative: boolean DBG>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.wifi.WifiNative: void logDbg(java.lang.String)>("REASSOCIATE ");

     label1:
        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("REASSOCIATE");

        return $z1;
    }

    public boolean disconnect()
    {
        com.android.server.wifi.WifiNative r0;
        boolean $z0, $z1;

        r0 := @this: com.android.server.wifi.WifiNative;

        $z0 = <com.android.server.wifi.WifiNative: boolean DBG>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.wifi.WifiNative: void logDbg(java.lang.String)>("DISCONNECT ");

     label1:
        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("DISCONNECT");

        return $z1;
    }

    public java.lang.String status()
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.wifi.WifiNative;

        $r1 = virtualinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String status(boolean)>(0);

        return $r1;
    }

    public java.lang.String status(boolean)
    {
        com.android.server.wifi.WifiNative r0;
        boolean z0;
        java.lang.String $r1, $r2;

        r0 := @this: com.android.server.wifi.WifiNative;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r2 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommand(java.lang.String)>("STATUS-NO_EVENTS");

        return $r2;

     label1:
        $r1 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommand(java.lang.String)>("STATUS");

        return $r1;
    }

    public java.lang.String getMacAddress()
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r3;
        java.lang.String[] r2;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommand(java.lang.String)>("DRIVER MACADDR");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" = ");

        $i0 = lengthof r2;

        if $i0 != 2 goto label1;

        $r3 = r2[1];

        return $r3;

     label1:
        return null;
    }

    public java.lang.String scanResults(int)
    {
        com.android.server.wifi.WifiNative r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        java.lang.String $r5, $r6;

        r0 := @this: com.android.server.wifi.WifiNative;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BSS RANGE=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("- MASK=0x21987");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommandWithoutLogging(java.lang.String)>($r5);

        return $r6;
    }

    public java.lang.String scanResult(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r5, $r6;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BSS ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommand(java.lang.String)>($r5);

        return $r6;
    }

    public java.lang.String setBatchedScanSettings(android.net.wifi.BatchedScanSettings)
    {
        com.android.server.wifi.WifiNative r0;
        android.net.wifi.BatchedScanSettings r1;
        java.lang.String r2, r4, $r14, $r30, $r36, r37, r38;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.util.Iterator r3;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r15, $r16, $r17, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r27, $r29, $r31, $r32, $r33, $r34, $r35;
        java.util.Collection $r12, $r18, $r22;
        boolean $z0, $z1;
        java.lang.Object $r28;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: android.net.wifi.BatchedScanSettings;

        if r1 != null goto label1;

        $r36 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommand(java.lang.String)>("DRIVER WLS_BATCHING STOP");

        return $r36;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DRIVER WLS_BATCHING SET SCANFREQ=");

        $i1 = r1.<android.net.wifi.BatchedScanSettings: int scanIntervalSec>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" MSCAN=");

        $i2 = r1.<android.net.wifi.BatchedScanSettings: int maxScansPerBatch>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        r37 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $i3 = r1.<android.net.wifi.BatchedScanSettings: int maxApPerScan>;

        if $i3 == 2147483647 goto label2;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" BESTN=");

        $i6 = r1.<android.net.wifi.BatchedScanSettings: int maxApPerScan>;

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        r37 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r12 = r1.<android.net.wifi.BatchedScanSettings: java.util.Collection channelSet>;

        if $r12 == null goto label7;

        $r18 = r1.<android.net.wifi.BatchedScanSettings: java.util.Collection channelSet>;

        $z0 = interfaceinvoke $r18.<java.util.Collection: boolean isEmpty()>();

        if $z0 != 0 goto label7;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" CHANNEL=<");

        r38 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = 0;

        $r22 = r1.<android.net.wifi.BatchedScanSettings: java.util.Collection channelSet>;

        r3 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r28 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r28;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38);

        if i0 <= 0 goto label4;

        $r30 = ",";

        goto label5;

     label4:
        $r30 = "";

     label5:
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r38 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = i0 + 1;

        goto label3;

     label6:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38);

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        r37 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

     label7:
        $i4 = r1.<android.net.wifi.BatchedScanSettings: int maxApForDistance>;

        if $i4 == 2147483647 goto label8;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" RTT=");

        $i5 = r1.<android.net.wifi.BatchedScanSettings: int maxApForDistance>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        r37 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

     label8:
        $r14 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommand(java.lang.String)>(r37);

        return $r14;
    }

    public java.lang.String getBatchedScanResults()
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.wifi.WifiNative;

        $r1 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommand(java.lang.String)>("DRIVER WLS_BATCHING GET");

        return $r1;
    }

    public boolean startDriver()
    {
        com.android.server.wifi.WifiNative r0;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("DRIVER START");

        return $z0;
    }

    public boolean stopDriver()
    {
        com.android.server.wifi.WifiNative r0;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("DRIVER STOP");

        return $z0;
    }

    public boolean startFilteringMulticastV4Packets()
    {
        com.android.server.wifi.WifiNative r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.android.server.wifi.WifiNative;

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("DRIVER RXFILTER-STOP");

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("DRIVER RXFILTER-REMOVE 2");

        if $z1 == 0 goto label1;

        $z2 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("DRIVER RXFILTER-START");

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    public boolean stopFilteringMulticastV4Packets()
    {
        com.android.server.wifi.WifiNative r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.android.server.wifi.WifiNative;

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("DRIVER RXFILTER-STOP");

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("DRIVER RXFILTER-ADD 2");

        if $z1 == 0 goto label1;

        $z2 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("DRIVER RXFILTER-START");

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    public boolean startFilteringMulticastV6Packets()
    {
        com.android.server.wifi.WifiNative r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.android.server.wifi.WifiNative;

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("DRIVER RXFILTER-STOP");

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("DRIVER RXFILTER-REMOVE 3");

        if $z1 == 0 goto label1;

        $z2 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("DRIVER RXFILTER-START");

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    public boolean stopFilteringMulticastV6Packets()
    {
        com.android.server.wifi.WifiNative r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.android.server.wifi.WifiNative;

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("DRIVER RXFILTER-STOP");

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("DRIVER RXFILTER-ADD 3");

        if $z1 == 0 goto label1;

        $z2 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("DRIVER RXFILTER-START");

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    public int getBand()
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r4;
        java.lang.String[] r2;
        boolean $z0;
        int $i0, $i1;
        java.lang.NumberFormatException $r5;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommand(java.lang.String)>("DRIVER GETBAND");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label5;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

     label1:
        $i0 = lengthof r2;

        if $i0 != 2 goto label3;

        $r4 = r2[1];

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

     label2:
        return $i1;

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        return -1;

     label5:
        return -1;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }

    public boolean setBand(int)
    {
        com.android.server.wifi.WifiNative r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DRIVER SETBAND ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r4);

        return $z0;
    }

    public boolean setBluetoothCoexistenceMode(int)
    {
        com.android.server.wifi.WifiNative r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DRIVER BTCOEXMODE ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r4);

        return $z0;
    }

    public boolean setBluetoothCoexistenceScanMode(boolean)
    {
        com.android.server.wifi.WifiNative r0;
        boolean z0, $z1, $z2;

        r0 := @this: com.android.server.wifi.WifiNative;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $z2 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("DRIVER BTCOEXSCAN-START");

        return $z2;

     label1:
        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("DRIVER BTCOEXSCAN-STOP");

        return $z1;
    }

    public void enableSaveConfig()
    {
        com.android.server.wifi.WifiNative r0;

        r0 := @this: com.android.server.wifi.WifiNative;

        specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("SET update_config 1");

        return;
    }

    public boolean saveConfig()
    {
        com.android.server.wifi.WifiNative r0;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("SAVE_CONFIG");

        return $z0;
    }

    public boolean addToBlacklist(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r5;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BLACKLIST ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r5);

        return $z1;
    }

    public boolean clearBlacklist()
    {
        com.android.server.wifi.WifiNative r0;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("BLACKLIST clear");

        return $z0;
    }

    public boolean setSuspendOptimizations(boolean)
    {
        com.android.server.wifi.WifiNative r0;
        boolean z0, $z1, $z2;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.wifi.WifiNative;

        z0 := @parameter0: boolean;

        r0.<com.android.server.wifi.WifiNative: boolean mSuspendOptEnabled> = z0;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("do suspend ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("native", $r4);

        if z0 == 0 goto label1;

        $z2 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("DRIVER SETSUSPENDMODE 1");

        return $z2;

     label1:
        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("DRIVER SETSUSPENDMODE 0");

        return $z1;
    }

    public boolean setCountryCode(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r5, $r7;
        java.lang.StringBuilder $r2, $r3, $r6;
        java.util.Locale $r4;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DRIVER COUNTRY ");

        $r4 = <java.util.Locale: java.util.Locale ROOT>;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r4);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r7);

        return $z0;
    }

    public void enableBackgroundScan(boolean)
    {
        com.android.server.wifi.WifiNative r0;
        boolean z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("SET pno 1");

        goto label2;

     label1:
        specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("SET pno 0");

     label2:
        return;
    }

    public void enableAutoConnect(boolean)
    {
        com.android.server.wifi.WifiNative r0;
        boolean z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("STA_AUTOCONNECT 1");

        goto label2;

     label1:
        specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("STA_AUTOCONNECT 0");

     label2:
        return;
    }

    public void setScanInterval(int)
    {
        com.android.server.wifi.WifiNative r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.wifi.WifiNative;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SCAN_INTERVAL ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r4);

        return;
    }

    public void startTdls(java.lang.String, boolean)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r5, $r9, $r13;
        boolean z0;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r7, $r8, $r10, $r11, $r12;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TDLS_DISCOVER ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TDLS_SETUP ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r13);

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TDLS_TEARDOWN ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r5);

     label2:
        return;
    }

    public java.lang.String signalPoll()
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.wifi.WifiNative;

        $r1 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommandWithoutLogging(java.lang.String)>("SIGNAL_POLL");

        return $r1;
    }

    public java.lang.String pktcntPoll()
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.wifi.WifiNative;

        $r1 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommand(java.lang.String)>("PKTCNT_POLL");

        return $r1;
    }

    public void bssFlush()
    {
        com.android.server.wifi.WifiNative r0;

        r0 := @this: com.android.server.wifi.WifiNative;

        specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("BSS_FLUSH 0");

        return;
    }

    public boolean startWpsPbc(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r5;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $z2 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("WPS_PBC");

        return $z2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WPS_PBC ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r5);

        return $z1;
    }

    public boolean startWpsPbc(java.lang.String, java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, r2, $r11, $r15;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r17;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r16;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r5 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label3;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IFNAME=");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WPS_PBC");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommandNative(java.lang.String)>($r15);

        exitmonitor r3;

     label2:
        return $z2;

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IFNAME=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WPS_PBC ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommandNative(java.lang.String)>($r11);

        exitmonitor r3;

     label4:
        return $z1;

     label5:
        $r17 := @caughtexception;

        r4 = $r17;

        exitmonitor r3;

     label6:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean startWpsPinKeypad(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r5;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WPS_PIN any ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r5);

        return $z1;
    }

    public boolean startWpsPinKeypad(java.lang.String, java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, r2, $r11;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r12;
        boolean $z0, $z1;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r5 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r3 = $r5;

        entermonitor $r5;

     label2:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IFNAME=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WPS_PIN any ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommandNative(java.lang.String)>($r11);

        exitmonitor r3;

     label3:
        return $z1;

     label4:
        $r12 := @caughtexception;

        r4 = $r12;

        exitmonitor r3;

     label5:
        throw r4;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.lang.String startWpsPinDisplay(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r5, $r6, $r7;
        boolean $z0;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r7 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommand(java.lang.String)>("WPS_PIN any");

        return $r7;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WPS_PIN ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommand(java.lang.String)>($r5);

        return $r6;
    }

    public java.lang.String startWpsPinDisplay(java.lang.String, java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, r2, $r11, $r12, $r16, $r18;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r19;
        boolean $z0;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r13, $r14, $r15, $r17;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r5 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label3;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IFNAME=");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WPS_PIN any");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommandNative(java.lang.String)>($r16);

        exitmonitor r3;

     label2:
        return $r18;

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IFNAME=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WPS_PIN ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommandNative(java.lang.String)>($r11);

        exitmonitor r3;

     label4:
        return $r12;

     label5:
        $r19 := @caughtexception;

        r4 = $r19;

        exitmonitor r3;

     label6:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean setExternalSim(boolean)
    {
        com.android.server.wifi.WifiNative r0;
        boolean z0, $z1;
        java.lang.Object r1, $r4;
        java.lang.String r2, $r8, $r12, $r14;
        java.lang.Throwable r3, $r13;
        java.lang.StringBuilder $r5, $r6, $r7, $r9, $r10, $r11;

        r0 := @this: com.android.server.wifi.WifiNative;

        z0 := @parameter0: boolean;

        $r4 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        if z0 == 0 goto label2;

        $r14 = "1";

        goto label3;

     label2:
        $r14 = "0";

     label3:
        r2 = $r14;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting external_sim to ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiNative-HAL", $r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SET external_sim ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r12);

        exitmonitor r1;

     label4:
        return $z1;

     label5:
        $r13 := @caughtexception;

        r3 = $r13;

        exitmonitor r1;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean simAuthResponse(int, java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        int i0;
        java.lang.String r1, $r10;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r11;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r4 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CTRL-RSP-SIM-");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":GSM-AUTH");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r10);

        exitmonitor r2;

     label2:
        return $z0;

     label3:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean startWpsRegistrar(java.lang.String, java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, r2, $r8;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 == 0 goto label2;

     label1:
        return 0;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WPS_REG ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r8);

        return $z2;
    }

    public boolean cancelWps()
    {
        com.android.server.wifi.WifiNative r0;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("WPS_CANCEL");

        return $z0;
    }

    public boolean setPersistentReconnect(boolean)
    {
        com.android.server.wifi.WifiNative r0;
        boolean z0, $z1;
        byte b0, $b1;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.wifi.WifiNative;

        z0 := @parameter0: boolean;

        if z0 != 1 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        b0 = $b1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SET persistent_reconnect ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r4);

        return $z1;
    }

    public boolean setDeviceName(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SET device_name ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r5);

        return $z0;
    }

    public boolean setDeviceType(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SET device_type ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r5);

        return $z0;
    }

    public boolean setConfigMethods(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SET config_methods ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r5);

        return $z0;
    }

    public boolean setManufacturer(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SET manufacturer ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r5);

        return $z0;
    }

    public boolean setModelName(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SET model_name ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r5);

        return $z0;
    }

    public boolean setModelNumber(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SET model_number ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r5);

        return $z0;
    }

    public boolean setSerialNumber(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SET serial_number ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r5);

        return $z0;
    }

    public boolean setP2pSsidPostfix(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SET p2p_ssid_postfix ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r5);

        return $z0;
    }

    public boolean setP2pGroupIdle(java.lang.String, int)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r10;
        int i0;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r11;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r4 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IFNAME=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" SET p2p_group_idle ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommandNative(java.lang.String)>($r10);

        exitmonitor r2;

     label2:
        return $z0;

     label3:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setPowerSave(boolean)
    {
        com.android.server.wifi.WifiNative r0;
        boolean z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("SET ps 1");

        goto label2;

     label1:
        specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("SET ps 0");

     label2:
        return;
    }

    public boolean setP2pPowerSave(java.lang.String, boolean)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r9, $r13;
        boolean z0, $z1, $z2;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r15;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r14;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r4 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        if z0 == 0 goto label3;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IFNAME=");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" P2P_SET ps 1");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommandNative(java.lang.String)>($r13);

        exitmonitor r2;

     label2:
        return $z2;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IFNAME=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" P2P_SET ps 0");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommandNative(java.lang.String)>($r9);

        exitmonitor r2;

     label4:
        return $z1;

     label5:
        $r15 := @caughtexception;

        r3 = $r15;

        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean setWfdEnable(boolean)
    {
        com.android.server.wifi.WifiNative r0;
        boolean z0, $z1;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4, $r5;

        r0 := @this: com.android.server.wifi.WifiNative;

        z0 := @parameter0: boolean;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SET wifi_display ");

        if z0 == 0 goto label1;

        $r5 = "1";

        goto label2;

     label1:
        $r5 = "0";

     label2:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r4);

        return $z1;
    }

    public boolean setWfdDeviceInfo(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WFD_SUBELEM_SET 0 ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r5);

        return $z0;
    }

    public boolean setConcurrencyPriority(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("P2P_SET conc_pref ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r5);

        return $z0;
    }

    public boolean p2pFind()
    {
        com.android.server.wifi.WifiNative r0;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("P2P_FIND");

        return $z0;
    }

    public boolean p2pFind(int)
    {
        com.android.server.wifi.WifiNative r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        boolean $z0, $z1;

        r0 := @this: com.android.server.wifi.WifiNative;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        $z1 = virtualinvoke r0.<com.android.server.wifi.WifiNative: boolean p2pFind()>();

        return $z1;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("P2P_FIND ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r4);

        return $z0;
    }

    public boolean p2pStopFind()
    {
        com.android.server.wifi.WifiNative r0;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("P2P_STOP_FIND");

        return $z0;
    }

    public boolean p2pListen()
    {
        com.android.server.wifi.WifiNative r0;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("P2P_LISTEN");

        return $z0;
    }

    public boolean p2pListen(int)
    {
        com.android.server.wifi.WifiNative r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        boolean $z0, $z1;

        r0 := @this: com.android.server.wifi.WifiNative;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        $z1 = virtualinvoke r0.<com.android.server.wifi.WifiNative: boolean p2pListen()>();

        return $z1;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("P2P_LISTEN ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r4);

        return $z0;
    }

    public boolean p2pExtListen(boolean, int, int)
    {
        com.android.server.wifi.WifiNative r0;
        boolean z0, $z1;
        int i0, i1;
        java.lang.StringBuilder $r1, $r2, $r3, $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r4, $r10;

        r0 := @this: com.android.server.wifi.WifiNative;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if z0 == 0 goto label1;

        if i1 >= i0 goto label1;

        return 0;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("P2P_EXT_LISTEN");

        if z0 == 0 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label2:
        $r10 = "";

     label3:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r4);

        return $z1;
    }

    public boolean p2pSetChannel(int, int)
    {
        com.android.server.wifi.WifiNative r0;
        int i0, i1, i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r11, $r12, $r13, $r15, $r16, $r18;
        java.lang.String $r7, $r10, $r14, $r17;
        short $s6;

        r0 := @this: com.android.server.wifi.WifiNative;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = <com.android.server.wifi.WifiNative: boolean DBG>;

        if $z0 == 0 goto label1;

        $r14 = r0.<com.android.server.wifi.WifiNative: java.lang.String mTAG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("p2pSetChannel: lc=");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", oc=");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r14, $r17);

     label1:
        if i0 < 1 goto label2;

        if i0 > 11 goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("P2P_SET listen_channel ");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $z3 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r10);

        if $z3 != 0 goto label3;

        return 0;

     label2:
        if i0 == 0 goto label3;

        return 0;

     label3:
        if i1 < 1 goto label6;

        if i1 > 165 goto label6;

        if i1 > 14 goto label4;

        $s6 = 2407;

        goto label5;

     label4:
        $s6 = 5000;

     label5:
        $i3 = i1 * 5;

        i2 = $s6 + $i3;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("P2P_SET disallow_freq 1000-");

        $i4 = i2 - 5;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i5 = i2 + 5;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-6000");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r7);

        return $z2;

     label6:
        if i1 != 0 goto label7;

        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("P2P_SET disallow_freq \"\"");

        return $z1;

     label7:
        return 0;
    }

    public boolean p2pFlush()
    {
        com.android.server.wifi.WifiNative r0;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("P2P_FLUSH");

        return $z0;
    }

    public java.lang.String p2pConnect(android.net.wifi.p2p.WifiP2pConfig, boolean)
    {
        com.android.server.wifi.WifiNative r0;
        android.net.wifi.p2p.WifiP2pConfig r1;
        boolean z0, $z4, $z12;
        java.util.ArrayList r2, $r6;
        android.net.wifi.WpsInfo r3;
        int i0, $i1, $i2;
        java.util.Iterator r4;
        java.lang.String r5, $r7, $r10, $r12, $r18, $r19, $r20, $r21, r22;
        java.lang.StringBuilder $r8, $r9, $r11, $r13, $r15, $r16, $r17;
        java.lang.Object $r14;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pConfig;

        z0 := @parameter1: boolean;

        if r1 != null goto label01;

        return null;

     label01:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = $r6;

        r3 = r1.<android.net.wifi.p2p.WifiP2pConfig: android.net.wifi.WpsInfo wps>;

        $r7 = r1.<android.net.wifi.p2p.WifiP2pConfig: java.lang.String deviceAddress>;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r7);

        $i1 = r3.<android.net.wifi.WpsInfo: int setup>;

        tableswitch($i1)
        {
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label06;
            case 3: goto label07;
            default: goto label08;
        };

     label02:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("pbc");

        goto label08;

     label03:
        $r21 = r3.<android.net.wifi.WpsInfo: java.lang.String pin>;

        $z12 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r21);

        if $z12 == 0 goto label04;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("pin");

        goto label05;

     label04:
        $r20 = r3.<android.net.wifi.WpsInfo: java.lang.String pin>;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r20);

     label05:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("display");

        goto label08;

     label06:
        $r19 = r3.<android.net.wifi.WpsInfo: java.lang.String pin>;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r19);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("keypad");

        goto label08;

     label07:
        $r18 = r3.<android.net.wifi.WpsInfo: java.lang.String pin>;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r18);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("label");

     label08:
        $i2 = r1.<android.net.wifi.p2p.WifiP2pConfig: int netId>;

        if $i2 != -2 goto label09;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("persistent");

     label09:
        if z0 == 0 goto label10;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("join");

        goto label13;

     label10:
        i0 = r1.<android.net.wifi.p2p.WifiP2pConfig: int groupOwnerIntent>;

        if i0 < 0 goto label11;

        if i0 <= 15 goto label12;

     label11:
        i0 = 6;

     label12:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("go_intent=");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r10);

     label13:
        r22 = "P2P_CONNECT ";

        r4 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z4 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label15;

        $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r14;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label14;

     label15:
        $r12 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommand(java.lang.String)>(r22);

        return $r12;
    }

    public boolean p2pCancelConnect()
    {
        com.android.server.wifi.WifiNative r0;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("P2P_CANCEL");

        return $z0;
    }

    public boolean p2pProvisionDiscovery(android.net.wifi.p2p.WifiP2pConfig)
    {
        com.android.server.wifi.WifiNative r0;
        android.net.wifi.p2p.WifiP2pConfig r1;
        android.net.wifi.WpsInfo $r2;
        int $i0;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r15, $r16, $r17, $r20;
        java.lang.String $r5, $r8, $r11, $r14, $r18, $r19;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pConfig;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = r1.<android.net.wifi.p2p.WifiP2pConfig: android.net.wifi.WpsInfo wps>;

        $i0 = $r2.<android.net.wifi.WpsInfo: int setup>;

        tableswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            default: goto label5;
        };

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("P2P_PROV_DISC ");

        $r5 = r1.<android.net.wifi.p2p.WifiP2pConfig: java.lang.String deviceAddress>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pbc");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r8);

        return $z0;

     label3:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("P2P_PROV_DISC ");

        $r18 = r1.<android.net.wifi.p2p.WifiP2pConfig: java.lang.String deviceAddress>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" keypad");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r19);

        return $z2;

     label4:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("P2P_PROV_DISC ");

        $r11 = r1.<android.net.wifi.p2p.WifiP2pConfig: java.lang.String deviceAddress>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" display");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r14);

        return $z1;

     label5:
        return 0;
    }

    public boolean p2pGroupAdd(boolean)
    {
        com.android.server.wifi.WifiNative r0;
        boolean z0, $z1, $z2;

        r0 := @this: com.android.server.wifi.WifiNative;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $z2 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("P2P_GROUP_ADD persistent");

        return $z2;

     label1:
        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("P2P_GROUP_ADD");

        return $z1;
    }

    public boolean p2pGroupAdd(int)
    {
        com.android.server.wifi.WifiNative r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("P2P_GROUP_ADD persistent=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r4);

        return $z0;
    }

    public boolean p2pGroupRemove(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r10;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r11;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r4 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IFNAME=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" P2P_GROUP_REMOVE ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommandNative(java.lang.String)>($r10);

        exitmonitor r2;

     label3:
        return $z1;

     label4:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean p2pReject(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("P2P_REJECT ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r5);

        return $z0;
    }

    public boolean p2pInvite(android.net.wifi.p2p.WifiP2pGroup, java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        android.net.wifi.p2p.WifiP2pGroup r1;
        java.lang.String r2, $r5, $r11, $r13, $r16;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r8, $r9, $r12, $r14, $r15, $r17;
        android.net.wifi.p2p.WifiP2pDevice $r10;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pGroup;

        r2 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        if r1 != null goto label2;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("P2P_INVITE peer=");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r16);

        return $z2;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("P2P_INVITE group=");

        $r5 = virtualinvoke r1.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getInterface()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" peer=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" go_dev_addr=");

        $r10 = virtualinvoke r1.<android.net.wifi.p2p.WifiP2pGroup: android.net.wifi.p2p.WifiP2pDevice getOwner()>();

        $r11 = $r10.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r13);

        return $z1;
    }

    public boolean p2pReinvoke(int, java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        int i0;
        java.lang.String r1, $r7;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;

        r0 := @this: com.android.server.wifi.WifiNative;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        if i0 >= 0 goto label2;

     label1:
        return 0;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("P2P_INVITE persistent=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" peer=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r7);

        return $z1;
    }

    public java.lang.String p2pGetSsid(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String p2pGetParam(java.lang.String,java.lang.String)>(r1, "oper_ssid");

        return $r2;
    }

    public java.lang.String p2pGetDeviceAddress()
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.Object r1, $r6;
        java.lang.Throwable r2, $r11;
        java.lang.String[] r3, r5, r14;
        int i0, i1, $i2;
        java.lang.String r4, $r9, r12, r13;
        java.lang.StringBuilder $r7, $r8, $r10;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiNative-HAL", "p2pGetDeviceAddress");

        $r6 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r1 = $r6;

        entermonitor $r6;

     label1:
        r12 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommandNative(java.lang.String)>("STATUS");

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r11 := @caughtexception;

        r2 = $r11;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        r13 = "";

        if r12 == null goto label9;

        r14 = virtualinvoke r12.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        r3 = r14;

        i0 = lengthof r3;

        i1 = 0;

     label6:
        if i1 >= i0 goto label9;

        r4 = r3[i1];

        $z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("p2p_device_address=");

        if $z0 == 0 goto label8;

        r5 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("=");

        $i2 = lengthof r5;

        if $i2 == 2 goto label7;

        goto label9;

     label7:
        r13 = r5[1];

     label8:
        i1 = i1 + 1;

        goto label6;

     label9:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("p2pGetDeviceAddress returning ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiNative-HAL", $r9);

        return r13;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getGroupCapability(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, r2, r5, $r9;
        byte b0;
        java.lang.String[] r3, r4, r6;
        int i1, i2, $i3, $i4;
        boolean $z0, $z1, $z2;
        java.lang.Integer $r8;
        java.lang.NumberFormatException $r10;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        b0 = 0;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        return b0;

     label1:
        r2 = virtualinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String p2pPeer(java.lang.String)>(r1);

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 == 0 goto label2;

        return b0;

     label2:
        r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        r4 = r3;

        i1 = lengthof r4;

        i2 = 0;

     label3:
        if i2 >= i1 goto label8;

        r5 = r4[i2];

        $z2 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("group_capab=");

        if $z2 == 0 goto label7;

        r6 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>("=");

        $i3 = lengthof r6;

        if $i3 == 2 goto label4;

        goto label8;

     label4:
        $r9 = r6[1];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>($r9);

        $i4 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

     label5:
        return $i4;

     label6:
        $r10 := @caughtexception;

        return b0;

     label7:
        i2 = i2 + 1;

        goto label3;

     label8:
        return b0;

        catch java.lang.NumberFormatException from label4 to label5 with label6;
    }

    public java.lang.String p2pPeer(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r5, $r6;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("P2P_PEER ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommand(java.lang.String)>($r5);

        return $r6;
    }

    private java.lang.String p2pGetParam(java.lang.String, java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, r2, r3, r6, $r11, r12;
        java.lang.String[] r4, r5, r7;
        int i0, i1, $i2;
        java.lang.StringBuilder $r8, $r9, $r10;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        r3 = virtualinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String p2pPeer(java.lang.String)>(r1);

        if r3 != null goto label2;

        return null;

     label2:
        r4 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        r5 = r4;

        i0 = lengthof r5;

        i1 = 0;

     label3:
        if i1 >= i0 goto label6;

        r6 = r5[i1];

        $z0 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>(r12);

        if $z0 == 0 goto label5;

        r7 = virtualinvoke r6.<java.lang.String: java.lang.String[] split(java.lang.String)>("=");

        $i2 = lengthof r7;

        if $i2 == 2 goto label4;

        goto label6;

     label4:
        $r11 = r7[1];

        return $r11;

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        return null;
    }

    public boolean p2pServiceAdd(android.net.wifi.p2p.nsd.WifiP2pServiceInfo)
    {
        com.android.server.wifi.WifiNative r0;
        android.net.wifi.p2p.nsd.WifiP2pServiceInfo r1;
        java.util.Iterator r2;
        java.lang.String r3, r4, r11;
        java.util.List $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: android.net.wifi.p2p.nsd.WifiP2pServiceInfo;

        $r5 = virtualinvoke r1.<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: java.util.List getSupplicantQueryList()>();

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r6;

        r4 = "P2P_SERVICE_ADD";

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>(r11);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        goto label1;

     label3:
        return 1;
    }

    public boolean p2pServiceDel(android.net.wifi.p2p.nsd.WifiP2pServiceInfo)
    {
        com.android.server.wifi.WifiNative r0;
        android.net.wifi.p2p.nsd.WifiP2pServiceInfo r1;
        java.util.Iterator r2;
        java.lang.String r3, r4, $r8, $r9, $r10, $r11, $r15, $r20, r24, r25;
        java.lang.String[] r5;
        java.util.List $r6;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r7;
        int $i0;
        java.lang.StringBuilder $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r21, $r22, $r23;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: android.net.wifi.p2p.nsd.WifiP2pServiceInfo;

        $r6 = virtualinvoke r1.<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: java.util.List getSupplicantQueryList()>();

        r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r7;

        r4 = "P2P_SERVICE_DEL ";

        r5 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i0 = lengthof r5;

        if $i0 >= 2 goto label2;

        return 0;

     label2:
        $r9 = "upnp";

        $r8 = r5[0];

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label3;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label5;

     label3:
        $r11 = "bonjour";

        $r10 = r5[0];

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z2 == 0 goto label4;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r15 = r5[0];

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        r25 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r20 = r5[1];

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label5;

     label4:
        return 0;

     label5:
        $z3 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>(r24);

        if $z3 != 0 goto label6;

        return 0;

     label6:
        goto label1;

     label7:
        return 1;
    }

    public boolean p2pServiceFlush()
    {
        com.android.server.wifi.WifiNative r0;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>("P2P_SERVICE_FLUSH");

        return $z0;
    }

    public java.lang.String p2pServDiscReq(java.lang.String, java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, r2, r3, $r12, r13, r14;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = "P2P_SERV_DISC_REQ";

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r13 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommand(java.lang.String)>(r14);

        return $r12;
    }

    public boolean p2pServDiscCancelReq(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("P2P_SERV_DISC_CANCEL_REQ ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r5);

        return $z0;
    }

    public void setMiracastMode(int)
    {
        com.android.server.wifi.WifiNative r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: com.android.server.wifi.WifiNative;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DRIVER MIRACAST ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r4);

        return;
    }

    public boolean fetchAnqp(java.lang.String, java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, r2, $r8;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ANQP_GET ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r8);

        return $z0;
    }

    private static native boolean startHalNative();

    private static native void stopHalNative();

    private static native void waitForHalEventNative();

    public static synchronized boolean startHal()
    {
        java.lang.Object r0, $r2;
        java.lang.Throwable r1, $r4;
        boolean $z0, $z1;
        com.android.server.wifi.WifiNative$MonitorThread $r3;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("WifiNative-HAL", "startHal");

        $r2 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r0 = $r2;

        entermonitor $r2;

     label1:
        $z0 = <com.android.server.wifi.WifiNative: boolean sHalIsStarted>;

        if $z0 == 0 goto label3;

        exitmonitor r0;

     label2:
        return 1;

     label3:
        $z1 = staticinvoke <com.android.server.wifi.WifiNative: boolean startHalNative()>();

        if $z1 == 0 goto label5;

        staticinvoke <com.android.server.wifi.WifiNative: int getInterfaces()>();

        $r3 = new com.android.server.wifi.WifiNative$MonitorThread;

        specialinvoke $r3.<com.android.server.wifi.WifiNative$MonitorThread: void <init>(com.android.server.wifi.WifiNative$1)>(null);

        virtualinvoke $r3.<com.android.server.wifi.WifiNative$MonitorThread: void start()>();

        <com.android.server.wifi.WifiNative: boolean sHalIsStarted> = 1;

        exitmonitor r0;

     label4:
        return 1;

     label5:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("WifiNative-HAL", "Could not start hal");

        <com.android.server.wifi.WifiNative: boolean sHalIsStarted> = 0;

        exitmonitor r0;

     label6:
        return 0;

     label7:
        $r4 := @caughtexception;

        r1 = $r4;

        exitmonitor r0;

     label8:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public static synchronized void stopHal()
    {
        staticinvoke <com.android.server.wifi.WifiNative: void stopHalNative()>();

        return;
    }

    private static native int getInterfacesNative();

    public static synchronized int getInterfaces()
    {
        java.lang.Object r0, $r3;
        int i0, i1, i2, $i3;
        java.lang.String r1, $r11;
        java.lang.Throwable r2, $r12;
        long[] $r4, $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;
        boolean $z0, $z1;

        $r3 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r0 = $r3;

        entermonitor $r3;

     label01:
        $r4 = <com.android.server.wifi.WifiNative: long[] sWifiIfaceHandles>;

        if $r4 != null goto label07;

        i0 = staticinvoke <com.android.server.wifi.WifiNative: int getInterfacesNative()>();

        i1 = 0;

        i2 = 0;

     label02:
        if i2 >= i0 goto label05;

        r1 = staticinvoke <com.android.server.wifi.WifiNative: java.lang.String getInterfaceNameNative(int)>(i2);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("interface[");

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] = ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("WifiNative-HAL", $r11);

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("wlan0");

        if $z1 == 0 goto label03;

        <com.android.server.wifi.WifiNative: int sWlan0Index> = i2;

        i1 = i1 + 1;

        goto label04;

     label03:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("p2p0");

        if $z0 == 0 goto label04;

        <com.android.server.wifi.WifiNative: int sP2p0Index> = i2;

        i1 = i1 + 1;

     label04:
        i2 = i2 + 1;

        goto label02;

     label05:
        exitmonitor r0;

     label06:
        return i1;

     label07:
        $r5 = <com.android.server.wifi.WifiNative: long[] sWifiIfaceHandles>;

        $i3 = lengthof $r5;

        exitmonitor r0;

     label08:
        return $i3;

     label09:
        $r12 := @caughtexception;

        r2 = $r12;

        exitmonitor r0;

     label10:
        throw r2;

        catch java.lang.Throwable from label01 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private static native java.lang.String getInterfaceNameNative(int);

    public static synchronized java.lang.String getInterfaceName(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <com.android.server.wifi.WifiNative: java.lang.String getInterfaceNameNative(int)>(i0);

        return $r0;
    }

    public static boolean getScanCapabilities(com.android.server.wifi.WifiNative$ScanCapabilities)
    {
        com.android.server.wifi.WifiNative$ScanCapabilities r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wifi.WifiNative$ScanCapabilities;

        $i0 = <com.android.server.wifi.WifiNative: int sWlan0Index>;

        $z0 = staticinvoke <com.android.server.wifi.WifiNative: boolean getScanCapabilitiesNative(int,com.android.server.wifi.WifiNative$ScanCapabilities)>($i0, r0);

        return $z0;
    }

    private static native boolean getScanCapabilitiesNative(int, com.android.server.wifi.WifiNative$ScanCapabilities);

    private static native boolean startScanNative(int, int, com.android.server.wifi.WifiNative$ScanSettings);

    private static native boolean stopScanNative(int, int);

    private static native android.net.wifi.ScanResult[] getScanResultsNative(int, boolean);

    private static native android.net.wifi.WifiLinkLayerStats getWifiLinkLayerStatsNative(int);

    static synchronized void onScanResultsAvailable(int)
    {
        int i0;
        com.android.server.wifi.WifiNative$ScanEventHandler $r0, $r1;

        i0 := @parameter0: int;

        $r0 = <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$ScanEventHandler sScanEventHandler>;

        if $r0 == null goto label1;

        $r1 = <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$ScanEventHandler sScanEventHandler>;

        interfaceinvoke $r1.<com.android.server.wifi.WifiNative$ScanEventHandler: void onScanResultsAvailable()>();

     label1:
        return;
    }

    static synchronized void onScanStatus(int)
    {
        int i0, $i2, $i3;
        java.lang.StringBuilder $r0, $r1, $r2;
        java.lang.String $r3;
        com.android.server.wifi.WifiNative$ScanEventHandler $r4, $r5;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got a scan status changed event, status = ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("WifiNative-HAL", $r3);

        $i2 = <com.android.server.wifi.WifiNative: int WIFI_SCAN_BUFFER_FULL>;

        if i0 != $i2 goto label1;

        goto label2;

     label1:
        $i3 = <com.android.server.wifi.WifiNative: int WIFI_SCAN_COMPLETE>;

        if i0 != $i3 goto label2;

        $r4 = <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$ScanEventHandler sScanEventHandler>;

        if $r4 == null goto label2;

        $r5 = <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$ScanEventHandler sScanEventHandler>;

        interfaceinvoke $r5.<com.android.server.wifi.WifiNative$ScanEventHandler: void onSingleScanComplete()>();

     label2:
        return;
    }

    static synchronized void onFullScanResult(int, android.net.wifi.ScanResult, byte[])
    {
        int i0, i1, i2, i7, $i8, $i11, $i12, $i13, $i14, $i18, $i20, $i23, i25, i26;
        android.net.wifi.ScanResult r0;
        byte[] r1, $r6, $r7;
        short s3, s4, s5, s6;
        android.net.wifi.ScanResult$InformationElement r2, $r5;
        boolean $z0, $z1, $z2;
        com.android.server.wifi.WifiNative$ScanEventHandler $r3, $r4;
        byte $b9, $b10, $b15, $b17, $b19;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r27, $r29, $r30, $r31, $r32, $r33, $r34;
        java.lang.String $r13, $r26, $r28, $r35;
        android.net.wifi.ScanResult$InformationElement[] r36;

        i0 := @parameter0: int;

        r0 := @parameter1: android.net.wifi.ScanResult;

        r1 := @parameter2: byte[];

        $z0 = <com.android.server.wifi.WifiNative: boolean DBG>;

        if $z0 == 0 goto label01;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got a full scan results event, ssid = ");

        $r28 = r0.<android.net.wifi.ScanResult: java.lang.String SSID>;

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("num = ");

        $i23 = lengthof r1;

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("WifiNative-HAL", $r35);

     label01:
        i1 = 0;

        i2 = 0;

     label02:
        $i8 = lengthof r1;

        if i2 >= $i8 goto label05;

        i1 = i1 + 1;

        $b19 = r1[i2];

        s3 = $b19 & 255;

        $i20 = i2 + 1;

        $b17 = r1[$i20];

        s4 = $b17 & 255;

        if s4 >= 0 goto label03;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WifiNative-HAL", "bad length; returning");

        return;

     label03:
        $i18 = s4 + 2;

        i2 = i2 + $i18;

        $z2 = <com.android.server.wifi.WifiNative: boolean DBG>;

        if $z2 == 0 goto label04;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bytes[");

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] = [");

        $r18 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s3);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r25 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s4);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("next = ");

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("WifiNative-HAL", $r26);

     label04:
        goto label02;

     label05:
        r36 = newarray (android.net.wifi.ScanResult$InformationElement)[i1];

        i25 = 0;

        i26 = 0;

     label06:
        if i25 >= i1 goto label10;

        $b9 = r1[i26];

        s5 = $b9 & 255;

        $i11 = i26 + 1;

        $b10 = r1[$i11];

        s6 = $b10 & 255;

        $z1 = <com.android.server.wifi.WifiNative: boolean DBG>;

        if $z1 == 0 goto label07;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index = ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i26);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type = ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s5);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", len = ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s6);

        $r13 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("WifiNative-HAL", $r13);

     label07:
        $r5 = new android.net.wifi.ScanResult$InformationElement;

        specialinvoke $r5.<android.net.wifi.ScanResult$InformationElement: void <init>()>();

        r2 = $r5;

        r2.<android.net.wifi.ScanResult$InformationElement: int id> = s5;

        $r6 = newarray (byte)[s6];

        r2.<android.net.wifi.ScanResult$InformationElement: byte[] bytes> = $r6;

        i7 = 0;

     label08:
        if i7 >= s6 goto label09;

        $r7 = r2.<android.net.wifi.ScanResult$InformationElement: byte[] bytes>;

        $i14 = i26 + i7;

        $i13 = $i14 + 2;

        $b15 = r1[$i13];

        $r7[i7] = $b15;

        i7 = i7 + 1;

        goto label08;

     label09:
        r36[i25] = r2;

        $i12 = s6 + 2;

        i26 = i26 + $i12;

        i25 = i25 + 1;

        goto label06;

     label10:
        r0.<android.net.wifi.ScanResult: android.net.wifi.ScanResult$InformationElement[] informationElements> = r36;

        $r3 = <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$ScanEventHandler sScanEventHandler>;

        if $r3 == null goto label11;

        $r4 = <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$ScanEventHandler sScanEventHandler>;

        interfaceinvoke $r4.<com.android.server.wifi.WifiNative$ScanEventHandler: void onFullScanResult(android.net.wifi.ScanResult)>(r0);

     label11:
        return;
    }

    public static synchronized boolean startScan(com.android.server.wifi.WifiNative$ScanSettings, com.android.server.wifi.WifiNative$ScanEventHandler)
    {
        com.android.server.wifi.WifiNative$ScanSettings r0, $r5;
        com.android.server.wifi.WifiNative$ScanEventHandler r1, $r6;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r7;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @parameter0: com.android.server.wifi.WifiNative$ScanSettings;

        r1 := @parameter1: com.android.server.wifi.WifiNative$ScanEventHandler;

        $r4 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $i0 = <com.android.server.wifi.WifiNative: int sScanCmdId>;

        if $i0 == 0 goto label2;

        staticinvoke <com.android.server.wifi.WifiNative: void stopScan()>();

        goto label3;

     label2:
        $r5 = <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$ScanSettings sScanSettings>;

        if $r5 != null goto label3;

        $r6 = <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$ScanEventHandler sScanEventHandler>;

        if $r6 == null goto label3;

     label3:
        $i1 = staticinvoke <com.android.server.wifi.WifiNative: int getNewCmdIdLocked()>();

        <com.android.server.wifi.WifiNative: int sScanCmdId> = $i1;

        <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$ScanSettings sScanSettings> = r0;

        <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$ScanEventHandler sScanEventHandler> = r1;

        $i3 = <com.android.server.wifi.WifiNative: int sWlan0Index>;

        $i2 = <com.android.server.wifi.WifiNative: int sScanCmdId>;

        $z0 = staticinvoke <com.android.server.wifi.WifiNative: boolean startScanNative(int,int,com.android.server.wifi.WifiNative$ScanSettings)>($i3, $i2, r0);

        if $z0 != 0 goto label5;

        <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$ScanEventHandler sScanEventHandler> = null;

        <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$ScanSettings sScanSettings> = null;

        exitmonitor r2;

     label4:
        return 0;

     label5:
        exitmonitor r2;

     label6:
        return 1;

     label7:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label8:
        throw r3;

        catch java.lang.Throwable from label1 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public static synchronized void stopScan()
    {
        java.lang.Object r0, $r2;
        java.lang.Throwable r1, $r3;
        int $i0, $i1;

        $r2 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r0 = $r2;

        entermonitor $r2;

     label1:
        $i1 = <com.android.server.wifi.WifiNative: int sWlan0Index>;

        $i0 = <com.android.server.wifi.WifiNative: int sScanCmdId>;

        staticinvoke <com.android.server.wifi.WifiNative: boolean stopScanNative(int,int)>($i1, $i0);

        <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$ScanSettings sScanSettings> = null;

        <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$ScanEventHandler sScanEventHandler> = null;

        <com.android.server.wifi.WifiNative: int sScanCmdId> = 0;

        exitmonitor r0;

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        exitmonitor r0;

     label4:
        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static synchronized void pauseScan()
    {
        java.lang.Object r0, $r2;
        java.lang.Throwable r1, $r6;
        int $i0, $i2, $i3;
        com.android.server.wifi.WifiNative$ScanSettings $r3;
        com.android.server.wifi.WifiNative$ScanEventHandler $r4, $r5;

        $r2 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r0 = $r2;

        entermonitor $r2;

     label1:
        $i0 = <com.android.server.wifi.WifiNative: int sScanCmdId>;

        if $i0 == 0 goto label2;

        $r3 = <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$ScanSettings sScanSettings>;

        if $r3 == null goto label2;

        $r4 = <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$ScanEventHandler sScanEventHandler>;

        if $r4 == null goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiNative-HAL", "Pausing scan");

        $i3 = <com.android.server.wifi.WifiNative: int sWlan0Index>;

        $i2 = <com.android.server.wifi.WifiNative: int sScanCmdId>;

        staticinvoke <com.android.server.wifi.WifiNative: boolean stopScanNative(int,int)>($i3, $i2);

        <com.android.server.wifi.WifiNative: int sScanCmdId> = 0;

        $r5 = <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$ScanEventHandler sScanEventHandler>;

        interfaceinvoke $r5.<com.android.server.wifi.WifiNative$ScanEventHandler: void onScanPaused()>();

     label2:
        exitmonitor r0;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r1 = $r6;

        exitmonitor r0;

     label5:
        throw r1;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static synchronized void restartScan()
    {
        java.lang.Object r0, $r2;
        java.lang.Throwable r1, $r8;
        int $i0;
        com.android.server.wifi.WifiNative$ScanSettings $r3, $r6;
        com.android.server.wifi.WifiNative$ScanEventHandler $r4, $r5, $r7;

        $r2 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r0 = $r2;

        entermonitor $r2;

     label1:
        $i0 = <com.android.server.wifi.WifiNative: int sScanCmdId>;

        if $i0 != 0 goto label2;

        $r3 = <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$ScanSettings sScanSettings>;

        if $r3 == null goto label2;

        $r4 = <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$ScanEventHandler sScanEventHandler>;

        if $r4 == null goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiNative-HAL", "Restarting scan");

        $r6 = <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$ScanSettings sScanSettings>;

        $r5 = <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$ScanEventHandler sScanEventHandler>;

        staticinvoke <com.android.server.wifi.WifiNative: boolean startScan(com.android.server.wifi.WifiNative$ScanSettings,com.android.server.wifi.WifiNative$ScanEventHandler)>($r6, $r5);

        $r7 = <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$ScanEventHandler sScanEventHandler>;

        interfaceinvoke $r7.<com.android.server.wifi.WifiNative$ScanEventHandler: void onScanRestarted()>();

     label2:
        exitmonitor r0;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        r1 = $r8;

        exitmonitor r0;

     label5:
        throw r1;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static synchronized android.net.wifi.ScanResult[] getScanResults()
    {
        java.lang.Object r0, $r2;
        java.lang.Throwable r1, $r4;
        int $i0;
        android.net.wifi.ScanResult[] $r3;

        $r2 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r0 = $r2;

        entermonitor $r2;

     label1:
        $i0 = <com.android.server.wifi.WifiNative: int sWlan0Index>;

        $r3 = staticinvoke <com.android.server.wifi.WifiNative: android.net.wifi.ScanResult[] getScanResultsNative(int,boolean)>($i0, 0);

        exitmonitor r0;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        exitmonitor r0;

     label4:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static native boolean setHotlistNative(int, int, android.net.wifi.WifiScanner$HotlistSettings);

    private static native boolean resetHotlistNative(int, int);

    public static synchronized boolean setHotlist(android.net.wifi.WifiScanner$HotlistSettings, com.android.server.wifi.WifiNative$HotlistEventHandler)
    {
        android.net.wifi.WifiScanner$HotlistSettings r0;
        com.android.server.wifi.WifiNative$HotlistEventHandler r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r5;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @parameter0: android.net.wifi.WifiScanner$HotlistSettings;

        r1 := @parameter1: com.android.server.wifi.WifiNative$HotlistEventHandler;

        $r4 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $i0 = <com.android.server.wifi.WifiNative: int sHotlistCmdId>;

        if $i0 == 0 goto label3;

        exitmonitor r2;

     label2:
        return 0;

     label3:
        $i1 = staticinvoke <com.android.server.wifi.WifiNative: int getNewCmdIdLocked()>();

        <com.android.server.wifi.WifiNative: int sHotlistCmdId> = $i1;

        <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$HotlistEventHandler sHotlistEventHandler> = r1;

        $i3 = <com.android.server.wifi.WifiNative: int sWlan0Index>;

        $i2 = <com.android.server.wifi.WifiNative: int sScanCmdId>;

        $z0 = staticinvoke <com.android.server.wifi.WifiNative: boolean setHotlistNative(int,int,android.net.wifi.WifiScanner$HotlistSettings)>($i3, $i2, r0);

        if $z0 != 0 goto label5;

        <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$HotlistEventHandler sHotlistEventHandler> = null;

        exitmonitor r2;

     label4:
        return 0;

     label5:
        exitmonitor r2;

     label6:
        return 1;

     label7:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label8:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public static synchronized void resetHotlist()
    {
        java.lang.Object r0, $r2;
        java.lang.Throwable r1, $r3;
        int $i0, $i1, $i2;

        $r2 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r0 = $r2;

        entermonitor $r2;

     label1:
        $i0 = <com.android.server.wifi.WifiNative: int sHotlistCmdId>;

        if $i0 == 0 goto label2;

        $i2 = <com.android.server.wifi.WifiNative: int sWlan0Index>;

        $i1 = <com.android.server.wifi.WifiNative: int sHotlistCmdId>;

        staticinvoke <com.android.server.wifi.WifiNative: boolean resetHotlistNative(int,int)>($i2, $i1);

        <com.android.server.wifi.WifiNative: int sHotlistCmdId> = 0;

        <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$HotlistEventHandler sHotlistEventHandler> = null;

     label2:
        exitmonitor r0;

     label3:
        goto label6;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        exitmonitor r0;

     label5:
        throw r1;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static synchronized void onHotlistApFound(int, android.net.wifi.ScanResult[])
    {
        int i0, $i1;
        android.net.wifi.ScanResult[] r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        com.android.server.wifi.WifiNative$HotlistEventHandler $r4;

        i0 := @parameter0: int;

        r0 := @parameter1: android.net.wifi.ScanResult[];

        $r3 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $i1 = <com.android.server.wifi.WifiNative: int sHotlistCmdId>;

        if $i1 == 0 goto label2;

        $r4 = <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$HotlistEventHandler sHotlistEventHandler>;

        interfaceinvoke $r4.<com.android.server.wifi.WifiNative$HotlistEventHandler: void onHotlistApFound(android.net.wifi.ScanResult[])>(r0);

        goto label3;

     label2:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiNative-HAL", "Ignoring hotlist AP found change");

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private static native boolean trackSignificantWifiChangeNative(int, int, android.net.wifi.WifiScanner$WifiChangeSettings);

    private static native boolean untrackSignificantWifiChangeNative(int, int);

    public static synchronized boolean trackSignificantWifiChange(android.net.wifi.WifiScanner$WifiChangeSettings, com.android.server.wifi.WifiNative$SignificantWifiChangeEventHandler)
    {
        android.net.wifi.WifiScanner$WifiChangeSettings r0;
        com.android.server.wifi.WifiNative$SignificantWifiChangeEventHandler r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r5;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @parameter0: android.net.wifi.WifiScanner$WifiChangeSettings;

        r1 := @parameter1: com.android.server.wifi.WifiNative$SignificantWifiChangeEventHandler;

        $r4 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $i0 = <com.android.server.wifi.WifiNative: int sSignificantWifiChangeCmdId>;

        if $i0 == 0 goto label3;

        exitmonitor r2;

     label2:
        return 0;

     label3:
        $i1 = staticinvoke <com.android.server.wifi.WifiNative: int getNewCmdIdLocked()>();

        <com.android.server.wifi.WifiNative: int sSignificantWifiChangeCmdId> = $i1;

        <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$SignificantWifiChangeEventHandler sSignificantWifiChangeHandler> = r1;

        $i3 = <com.android.server.wifi.WifiNative: int sWlan0Index>;

        $i2 = <com.android.server.wifi.WifiNative: int sScanCmdId>;

        $z0 = staticinvoke <com.android.server.wifi.WifiNative: boolean trackSignificantWifiChangeNative(int,int,android.net.wifi.WifiScanner$WifiChangeSettings)>($i3, $i2, r0);

        if $z0 != 0 goto label5;

        <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$SignificantWifiChangeEventHandler sSignificantWifiChangeHandler> = null;

        exitmonitor r2;

     label4:
        return 0;

     label5:
        exitmonitor r2;

     label6:
        return 1;

     label7:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label8:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    static synchronized void untrackSignificantWifiChange()
    {
        java.lang.Object r0, $r2;
        java.lang.Throwable r1, $r3;
        int $i0, $i1, $i2;

        $r2 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r0 = $r2;

        entermonitor $r2;

     label1:
        $i0 = <com.android.server.wifi.WifiNative: int sSignificantWifiChangeCmdId>;

        if $i0 == 0 goto label2;

        $i2 = <com.android.server.wifi.WifiNative: int sWlan0Index>;

        $i1 = <com.android.server.wifi.WifiNative: int sSignificantWifiChangeCmdId>;

        staticinvoke <com.android.server.wifi.WifiNative: boolean untrackSignificantWifiChangeNative(int,int)>($i2, $i1);

        <com.android.server.wifi.WifiNative: int sSignificantWifiChangeCmdId> = 0;

        <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$SignificantWifiChangeEventHandler sSignificantWifiChangeHandler> = null;

     label2:
        exitmonitor r0;

     label3:
        goto label6;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        exitmonitor r0;

     label5:
        throw r1;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    static synchronized void onSignificantWifiChange(int, android.net.wifi.ScanResult[])
    {
        int i0, $i1;
        android.net.wifi.ScanResult[] r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        com.android.server.wifi.WifiNative$SignificantWifiChangeEventHandler $r4;

        i0 := @parameter0: int;

        r0 := @parameter1: android.net.wifi.ScanResult[];

        $r3 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $i1 = <com.android.server.wifi.WifiNative: int sSignificantWifiChangeCmdId>;

        if $i1 == 0 goto label2;

        $r4 = <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$SignificantWifiChangeEventHandler sSignificantWifiChangeHandler>;

        interfaceinvoke $r4.<com.android.server.wifi.WifiNative$SignificantWifiChangeEventHandler: void onChangesFound(android.net.wifi.ScanResult[])>(r0);

        goto label3;

     label2:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiNative-HAL", "Ignoring significant wifi change");

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static synchronized android.net.wifi.WifiLinkLayerStats getWifiLinkLayerStats(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        boolean $z0, $z1;
        int $i0;
        android.net.wifi.WifiLinkLayerStats $r4;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r3 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label2:
        $z0 = <com.android.server.wifi.WifiNative: boolean sHalIsStarted>;

        if $z0 != 0 goto label3;

        staticinvoke <com.android.server.wifi.WifiNative: boolean startHal()>();

     label3:
        $z1 = <com.android.server.wifi.WifiNative: boolean sHalIsStarted>;

        if $z1 == 0 goto label5;

        $i0 = <com.android.server.wifi.WifiNative: int sWlan0Index>;

        $r4 = staticinvoke <com.android.server.wifi.WifiNative: android.net.wifi.WifiLinkLayerStats getWifiLinkLayerStatsNative(int)>($i0);

        exitmonitor r1;

     label4:
        return $r4;

     label5:
        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label8:
        throw r2;

     label9:
        return null;

        catch java.lang.Throwable from label2 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public java.lang.String getNfcWpsConfigurationToken(int)
    {
        com.android.server.wifi.WifiNative r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4, $r5;

        r0 := @this: com.android.server.wifi.WifiNative;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WPS_NFC_CONFIG_TOKEN WPS ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommand(java.lang.String)>($r4);

        return $r5;
    }

    public java.lang.String getNfcHandoverRequest()
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.wifi.WifiNative;

        $r1 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommand(java.lang.String)>("NFC_GET_HANDOVER_REQ NDEF P2P-CR");

        return $r1;
    }

    public java.lang.String getNfcHandoverSelect()
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.wifi.WifiNative;

        $r1 = specialinvoke r0.<com.android.server.wifi.WifiNative: java.lang.String doStringCommand(java.lang.String)>("NFC_GET_HANDOVER_SEL NDEF P2P-CR");

        return $r1;
    }

    public boolean initiatorReportNfcHandover(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NFC_REPORT_HANDOVER INIT P2P 00 ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r5);

        return $z0;
    }

    public boolean responderReportNfcHandover(java.lang.String)
    {
        com.android.server.wifi.WifiNative r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiNative;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NFC_REPORT_HANDOVER RESP P2P ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" 00");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiNative: boolean doBooleanCommand(java.lang.String)>($r6);

        return $z0;
    }

    public static native int getSupportedFeatureSetNative(int);

    public static synchronized int getSupportedFeatureSet()
    {
        int $i0, $i1;

        $i0 = <com.android.server.wifi.WifiNative: int sWlan0Index>;

        $i1 = staticinvoke <com.android.server.wifi.WifiNative: int getSupportedFeatureSetNative(int)>($i0);

        return $i1;
    }

    private static synchronized void onRttResults(int, android.net.wifi.RttManager$RttResult[])
    {
        int i0, $i1, $i2, $i4;
        android.net.wifi.RttManager$RttResult[] r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10;
        java.lang.String $r6, $r11;
        com.android.server.wifi.WifiNative$RttEventHandler $r12;

        i0 := @parameter0: int;

        r0 := @parameter1: android.net.wifi.RttManager$RttResult[];

        $i1 = <com.android.server.wifi.WifiNative: int sRttCmdId>;

        if i0 != $i1 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received ");

        $i4 = lengthof r0;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rtt results");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiNative-HAL", $r11);

        $r12 = <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$RttEventHandler sRttEventHandler>;

        interfaceinvoke $r12.<com.android.server.wifi.WifiNative$RttEventHandler: void onRttResults(android.net.wifi.RttManager$RttResult[])>(r0);

        <com.android.server.wifi.WifiNative: int sRttCmdId> = 0;

        goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received event for unknown cmd = ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", current id = ");

        $i2 = <com.android.server.wifi.WifiNative: int sRttCmdId>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiNative-HAL", $r6);

     label2:
        return;
    }

    private static native boolean requestRangeNative(int, int, android.net.wifi.RttManager$RttParams[]);

    private static native boolean cancelRangeRequestNative(int, int, android.net.wifi.RttManager$RttParams[]);

    public static synchronized boolean requestRtt(android.net.wifi.RttManager$RttParams[], com.android.server.wifi.WifiNative$RttEventHandler)
    {
        android.net.wifi.RttManager$RttParams[] r0;
        com.android.server.wifi.WifiNative$RttEventHandler r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r5;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @parameter0: android.net.wifi.RttManager$RttParams[];

        r1 := @parameter1: com.android.server.wifi.WifiNative$RttEventHandler;

        $r4 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $i0 = <com.android.server.wifi.WifiNative: int sRttCmdId>;

        if $i0 == 0 goto label3;

        exitmonitor r2;

     label2:
        return 0;

     label3:
        $i1 = staticinvoke <com.android.server.wifi.WifiNative: int getNewCmdIdLocked()>();

        <com.android.server.wifi.WifiNative: int sRttCmdId> = $i1;

        <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$RttEventHandler sRttEventHandler> = r1;

        $i3 = <com.android.server.wifi.WifiNative: int sWlan0Index>;

        $i2 = <com.android.server.wifi.WifiNative: int sRttCmdId>;

        $z0 = staticinvoke <com.android.server.wifi.WifiNative: boolean requestRangeNative(int,int,android.net.wifi.RttManager$RttParams[])>($i3, $i2, r0);

        exitmonitor r2;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static synchronized boolean cancelRtt(android.net.wifi.RttManager$RttParams[])
    {
        android.net.wifi.RttManager$RttParams[] r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @parameter0: android.net.wifi.RttManager$RttParams[];

        $r3 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $i0 = <com.android.server.wifi.WifiNative: int sRttCmdId>;

        if $i0 != 0 goto label3;

        exitmonitor r1;

     label2:
        return 0;

     label3:
        $i2 = <com.android.server.wifi.WifiNative: int sWlan0Index>;

        $i1 = <com.android.server.wifi.WifiNative: int sRttCmdId>;

        $z0 = staticinvoke <com.android.server.wifi.WifiNative: boolean cancelRangeRequestNative(int,int,android.net.wifi.RttManager$RttParams[])>($i2, $i1, r0);

        if $z0 == 0 goto label5;

        <com.android.server.wifi.WifiNative: com.android.server.wifi.WifiNative$RttEventHandler sRttEventHandler> = null;

        exitmonitor r1;

     label4:
        return 1;

     label5:
        exitmonitor r1;

     label6:
        return 0;

     label7:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private static native boolean setScanningMacOuiNative(int, byte[]);

    public static synchronized boolean setScanningMacOui(byte[])
    {
        byte[] r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;
        boolean $z0, $z1;
        int $i0;

        r0 := @parameter0: byte[];

        $r3 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $z0 = staticinvoke <com.android.server.wifi.WifiNative: boolean startHal()>();

        if $z0 == 0 goto label3;

        $i0 = <com.android.server.wifi.WifiNative: int sWlan0Index>;

        $z1 = staticinvoke <com.android.server.wifi.WifiNative: boolean setScanningMacOuiNative(int,byte[])>($i0, r0);

        exitmonitor r1;

     label2:
        return $z1;

     label3:
        exitmonitor r1;

     label4:
        return 0;

     label5:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private static native int[] getChannelsForBandNative(int, int);

    public static synchronized int[] getChannelsForBand(int)
    {
        int i0, $i1;
        java.lang.Object r0, $r2;
        java.lang.Throwable r1, $r4;
        boolean $z0;
        int[] $r3;

        i0 := @parameter0: int;

        $r2 = <com.android.server.wifi.WifiNative: java.lang.Object mLock>;

        r0 = $r2;

        entermonitor $r2;

     label1:
        $z0 = staticinvoke <com.android.server.wifi.WifiNative: boolean startHal()>();

        if $z0 == 0 goto label3;

        $i1 = <com.android.server.wifi.WifiNative: int sWlan0Index>;

        $r3 = staticinvoke <com.android.server.wifi.WifiNative: int[] getChannelsForBandNative(int,int)>($i1, i0);

        exitmonitor r0;

     label2:
        return $r3;

     label3:
        exitmonitor r0;

     label4:
        return null;

     label5:
        $r4 := @caughtexception;

        r1 = $r4;

        exitmonitor r0;

     label6:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    static long access$000()
    {
        long $l0;

        $l0 = <com.android.server.wifi.WifiNative: long sWifiHalHandle>;

        return $l0;
    }

    static void access$100()
    {
        staticinvoke <com.android.server.wifi.WifiNative: void waitForHalEventNative()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;
        android.util.LocalLog $r1;

        <com.android.server.wifi.WifiNative: java.lang.String TAG> = "WifiNative-HAL";

        <com.android.server.wifi.WifiNative: int SCAN_WITH_CONNECTION_SETUP> = 2;

        <com.android.server.wifi.WifiNative: int SCAN_WITHOUT_CONNECTION_SETUP> = 1;

        <com.android.server.wifi.WifiNative: int BLUETOOTH_COEXISTENCE_MODE_SENSE> = 2;

        <com.android.server.wifi.WifiNative: int BLUETOOTH_COEXISTENCE_MODE_DISABLED> = 1;

        <com.android.server.wifi.WifiNative: int BLUETOOTH_COEXISTENCE_MODE_ENABLED> = 0;

        <com.android.server.wifi.WifiNative: int DEFAULT_GROUP_OWNER_INTENT> = 6;

        <com.android.server.wifi.WifiNative: boolean DBG> = 0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.android.server.wifi.WifiNative: java.lang.Object mLock> = $r0;

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("wifi-service");

        staticinvoke <com.android.server.wifi.WifiNative: int registerNatives()>();

        $r1 = new android.util.LocalLog;

        specialinvoke $r1.<android.util.LocalLog: void <init>(int)>(1024);

        <com.android.server.wifi.WifiNative: android.util.LocalLog mLocalLog> = $r1;

        <com.android.server.wifi.WifiNative: long sWifiHalHandle> = 0L;

        <com.android.server.wifi.WifiNative: long[] sWifiIfaceHandles> = null;

        <com.android.server.wifi.WifiNative: int sWlan0Index> = -1;

        <com.android.server.wifi.WifiNative: int sP2p0Index> = -1;

        <com.android.server.wifi.WifiNative: boolean sHalIsStarted> = 0;

        <com.android.server.wifi.WifiNative: int WIFI_SCAN_BUFFER_FULL> = 0;

        <com.android.server.wifi.WifiNative: int WIFI_SCAN_COMPLETE> = 1;

        <com.android.server.wifi.WifiNative: int sScanCmdId> = 0;

        <com.android.server.wifi.WifiNative: int sHotlistCmdId> = 0;

        return;
    }
}
