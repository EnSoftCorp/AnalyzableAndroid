public class com.android.server.wifi.WifiConfigStore extends com.android.server.net.IpConfigStore
{
    private android.content.Context mContext;
    private static final java.lang.String TAG;
    private static final boolean DBG;
    private static boolean VDBG;
    private static boolean VVDBG;
    private static final java.lang.String SUPPLICANT_CONFIG_FILE;
    private java.util.HashMap mConfiguredNetworks;
    private java.util.HashMap mNetworkIds;
    private int mLastPriority;
    private static final java.lang.String ipConfigFile;
    private static final java.lang.String networkHistoryConfigFile;
    private static final java.lang.String autoJoinConfigFile;
    private static final java.lang.String SSID_KEY;
    private static final java.lang.String CONFIG_KEY;
    private static final java.lang.String CHOICE_KEY;
    private static final java.lang.String LINK_KEY;
    private static final java.lang.String BSSID_KEY;
    private static final java.lang.String BSSID_KEY_END;
    private static final java.lang.String RSSI_KEY;
    private static final java.lang.String FREQ_KEY;
    private static final java.lang.String DATE_KEY;
    private static final java.lang.String MILLI_KEY;
    private static final java.lang.String BLACKLIST_MILLI_KEY;
    private static final java.lang.String NETWORK_ID_KEY;
    private static final java.lang.String PRIORITY_KEY;
    private static final java.lang.String DEFAULT_GW_KEY;
    private static final java.lang.String AUTH_KEY;
    private static final java.lang.String SEPARATOR_KEY;
    private static final java.lang.String STATUS_KEY;
    private static final java.lang.String BSSID_STATUS_KEY;
    private static final java.lang.String SELF_ADDED_KEY;
    private static final java.lang.String FAILURE_KEY;
    private static final java.lang.String DID_SELF_ADD_KEY;
    private static final java.lang.String PEER_CONFIGURATION_KEY;
    private static final java.lang.String CREATOR_UID_KEY;
    private static final java.lang.String CONNECT_UID_KEY;
    private static final java.lang.String UPDATE_UID_KEY;
    private static final java.lang.String SUPPLICANT_STATUS_KEY;
    private static final java.lang.String SUPPLICANT_DISABLE_REASON_KEY;
    private static final java.lang.String FQDN_KEY;
    private static final java.lang.String NUM_CONNECTION_FAILURES_KEY;
    private static final java.lang.String NUM_IP_CONFIG_FAILURES_KEY;
    private static final java.lang.String NUM_AUTH_FAILURES_KEY;
    private static final java.lang.String SCORER_OVERRIDE_KEY;
    private static final java.lang.String SCORER_OVERRIDE_AND_SWITCH_KEY;
    private static final java.lang.String NO_INTERNET_ACCESS_KEY;
    private static final java.lang.String EPHEMERAL_KEY;
    private static final java.lang.String NUM_ASSOCIATION_KEY;
    private static final java.lang.String JOIN_ATTEMPT_BOOST_KEY;
    private static final java.lang.String THRESHOLD_INITIAL_AUTO_JOIN_ATTEMPT_RSSI_MIN_5G_KEY;
    private static final java.lang.String THRESHOLD_INITIAL_AUTO_JOIN_ATTEMPT_RSSI_MIN_24G_KEY;
    private static final java.lang.String THRESHOLD_UNBLACKLIST_HARD_5G_KEY;
    private static final java.lang.String THRESHOLD_UNBLACKLIST_SOFT_5G_KEY;
    private static final java.lang.String THRESHOLD_UNBLACKLIST_HARD_24G_KEY;
    private static final java.lang.String THRESHOLD_UNBLACKLIST_SOFT_24G_KEY;
    private static final java.lang.String THRESHOLD_GOOD_RSSI_5_KEY;
    private static final java.lang.String THRESHOLD_LOW_RSSI_5_KEY;
    private static final java.lang.String THRESHOLD_BAD_RSSI_5_KEY;
    private static final java.lang.String THRESHOLD_GOOD_RSSI_24_KEY;
    private static final java.lang.String THRESHOLD_LOW_RSSI_24_KEY;
    private static final java.lang.String THRESHOLD_BAD_RSSI_24_KEY;
    private static final java.lang.String THRESHOLD_MAX_TX_PACKETS_FOR_NETWORK_SWITCHING_KEY;
    private static final java.lang.String THRESHOLD_MAX_RX_PACKETS_FOR_NETWORK_SWITCHING_KEY;
    private static final java.lang.String THRESHOLD_MAX_TX_PACKETS_FOR_FULL_SCANS_KEY;
    private static final java.lang.String THRESHOLD_MAX_RX_PACKETS_FOR_FULL_SCANS_KEY;
    private static final java.lang.String THRESHOLD_MAX_TX_PACKETS_FOR_PARTIAL_SCANS_KEY;
    private static final java.lang.String THRESHOLD_MAX_RX_PACKETS_FOR_PARTIAL_SCANS_KEY;
    private static final java.lang.String MAX_NUM_ACTIVE_CHANNELS_FOR_PARTIAL_SCANS_KEY;
    private static final java.lang.String MAX_NUM_PASSIVE_CHANNELS_FOR_PARTIAL_SCANS_KEY;
    private static final java.lang.String A_BAND_PREFERENCE_RSSI_THRESHOLD_LOW_KEY;
    private static final java.lang.String A_BAND_PREFERENCE_RSSI_THRESHOLD_KEY;
    private static final java.lang.String G_BAND_PREFERENCE_RSSI_THRESHOLD_KEY;
    private static final java.lang.String ENABLE_AUTOJOIN_WHILE_ASSOCIATED_KEY;
    private static final java.lang.String ASSOCIATED_PARTIAL_SCAN_PERIOD_KEY;
    private static final java.lang.String ASSOCIATED_FULL_SCAN_BACKOFF_KEY;
    private static final java.lang.String ALWAYS_ENABLE_SCAN_WHILE_ASSOCIATED_KEY;
    private static final java.lang.String ONLY_LINK_SAME_CREDENTIAL_CONFIGURATIONS_KEY;
    private static final java.lang.String ENABLE_FULL_BAND_SCAN_WHEN_ASSOCIATED_KEY;
    private static final java.lang.String ENABLE_AUTO_JOIN_SCAN_WHILE_ASSOCIATED_KEY;
    private static final java.lang.String ENABLE_AUTO_JOIN_WHILE_ASSOCIATED_KEY;
    private static final java.lang.String ENABLE_CHIP_WAKE_UP_WHILE_ASSOCIATED_KEY;
    private static final java.lang.String ENABLE_RSSI_POLL_WHILE_ASSOCIATED_KEY;
    private static final java.lang.String WIFI_VERBOSE_LOGS_KEY;
    private static final java.lang.String DELETED_CONFIG_PSK;
    public boolean enableAutoJoinScanWhenAssociated;
    public boolean enableAutoJoinWhenAssociated;
    public boolean enableChipWakeUpWhenAssociated;
    public boolean enableRssiPollWhenAssociated;
    public int maxTxPacketForNetworkSwitching;
    public int maxRxPacketForNetworkSwitching;
    public int maxTxPacketForFullScans;
    public int maxRxPacketForFullScans;
    public int maxTxPacketForPartialScans;
    public int maxRxPacketForPartialScans;
    public boolean enableFullBandScanWhenAssociated;
    public int thresholdInitialAutoJoinAttemptMin5RSSI;
    public int thresholdInitialAutoJoinAttemptMin24RSSI;
    public int thresholdBadRssi5;
    public int thresholdLowRssi5;
    public int thresholdGoodRssi5;
    public int thresholdBadRssi24;
    public int thresholdLowRssi24;
    public int thresholdGoodRssi24;
    public int associatedFullScanBackoff;
    public int associatedFullScanMaxIntervalMilli;
    public int associatedPartialScanPeriodMilli;
    public int bandPreferenceBoostFactor5;
    public int bandPreferencePenaltyFactor5;
    public int bandPreferencePenaltyThreshold5;
    public int bandPreferenceBoostThreshold5;
    public int badLinkSpeed24;
    public int badLinkSpeed5;
    public int goodLinkSpeed24;
    public int goodLinkSpeed5;
    public int maxAuthErrorsToBlacklist;
    public int maxConnectionErrorsToBlacklist;
    public int wifiConfigBlacklistMinTimeMilli;
    public int associatedHysteresisHigh;
    public int associatedHysteresisLow;
    public int thresholdUnblacklistThreshold5Hard;
    public int thresholdUnblacklistThreshold5Soft;
    public int thresholdUnblacklistThreshold24Hard;
    public int thresholdUnblacklistThreshold24Soft;
    public int enableVerboseLogging;
    boolean showNetworks;
    public int alwaysEnableScansWhileAssociated;
    public int maxNumActiveChannelsForPartialScans;
    public int maxNumPassiveChannelsForPartialScans;
    public boolean roamOnAny;
    public boolean onlyLinkSameCredentialConfigurations;
    public boolean enableLinkDebouncing;
    public boolean enable5GHzPreference;
    public boolean enableWifiCellularHandoverUserTriggeredAdjustment;
    private static java.util.regex.Pattern mConnectChoice;
    public static final java.lang.String OLD_PRIVATE_KEY_NAME;
    static final java.lang.String EMPTY_VALUE;
    private static final java.lang.String[] ENTERPRISE_CONFIG_SUPPLICANT_KEYS;
    public long lastUnwantedNetworkDisconnectTimestamp;
    private static final int DEFAULT_MAX_DHCP_RETRIES;
    private final android.util.LocalLog mLocalLog;
    private final com.android.server.wifi.WifiConfigStore$WpaConfigFileObserver mFileObserver;
    private com.android.server.wifi.WifiNative mWifiNative;
    private final android.security.KeyStore mKeyStore;
    private java.lang.String lastSelectedConfiguration;

    void <init>(android.content.Context, com.android.server.wifi.WifiNative)
    {
        com.android.server.wifi.WifiConfigStore r0;
        android.content.Context r1, $r6, $r11, $r14, $r15, $r17, $r21, $r22, $r23, $r26, $r29, $r30, $r32, $r34, $r36, $r38, $r39, $r41, $r44, $r48, $r50, $r51, $r53, $r54, $r55, $r58, $r59, $r62, $r65, $r66, $r73;
        com.android.server.wifi.WifiNative r2, $r71;
        java.util.HashMap $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38;
        android.security.KeyStore $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.content.res.Resources $r7, $r13, $r16, $r18, $r19, $r20, $r24, $r25, $r27, $r28, $r31, $r33, $r35, $r37, $r40, $r42, $r43, $r45, $r46, $r47, $r49, $r52, $r56, $r57, $r60, $r61, $r63, $r64, $r67, $r72;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r12;
        com.android.server.wifi.WifiConfigStore$WpaConfigFileObserver $r68, $r69;
        android.util.LocalLog $r70;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.wifi.WifiNative;

        specialinvoke r0.<com.android.server.net.IpConfigStore: void <init>()>();

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mNetworkIds> = $r4;

        r0.<com.android.server.wifi.WifiConfigStore: int mLastPriority> = -1;

        r0.<com.android.server.wifi.WifiConfigStore: boolean enableAutoJoinScanWhenAssociated> = 1;

        r0.<com.android.server.wifi.WifiConfigStore: boolean enableAutoJoinWhenAssociated> = 1;

        r0.<com.android.server.wifi.WifiConfigStore: boolean enableChipWakeUpWhenAssociated> = 1;

        r0.<com.android.server.wifi.WifiConfigStore: boolean enableRssiPollWhenAssociated> = 1;

        r0.<com.android.server.wifi.WifiConfigStore: int maxTxPacketForNetworkSwitching> = 40;

        r0.<com.android.server.wifi.WifiConfigStore: int maxRxPacketForNetworkSwitching> = 80;

        r0.<com.android.server.wifi.WifiConfigStore: int maxTxPacketForFullScans> = 8;

        r0.<com.android.server.wifi.WifiConfigStore: int maxRxPacketForFullScans> = 16;

        r0.<com.android.server.wifi.WifiConfigStore: int maxTxPacketForPartialScans> = 40;

        r0.<com.android.server.wifi.WifiConfigStore: int maxRxPacketForPartialScans> = 80;

        r0.<com.android.server.wifi.WifiConfigStore: boolean enableFullBandScanWhenAssociated> = 1;

        $i0 = <android.net.wifi.WifiConfiguration: int INITIAL_AUTO_JOIN_ATTEMPT_MIN_5>;

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdInitialAutoJoinAttemptMin5RSSI> = $i0;

        $i1 = <android.net.wifi.WifiConfiguration: int INITIAL_AUTO_JOIN_ATTEMPT_MIN_24>;

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdInitialAutoJoinAttemptMin24RSSI> = $i1;

        $i2 = <android.net.wifi.WifiConfiguration: int BAD_RSSI_5>;

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdBadRssi5> = $i2;

        $i3 = <android.net.wifi.WifiConfiguration: int LOW_RSSI_5>;

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdLowRssi5> = $i3;

        $i4 = <android.net.wifi.WifiConfiguration: int GOOD_RSSI_5>;

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdGoodRssi5> = $i4;

        $i5 = <android.net.wifi.WifiConfiguration: int BAD_RSSI_24>;

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdBadRssi24> = $i5;

        $i6 = <android.net.wifi.WifiConfiguration: int LOW_RSSI_24>;

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdLowRssi24> = $i6;

        $i7 = <android.net.wifi.WifiConfiguration: int GOOD_RSSI_24>;

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdGoodRssi24> = $i7;

        r0.<com.android.server.wifi.WifiConfigStore: int associatedFullScanBackoff> = 12;

        r0.<com.android.server.wifi.WifiConfigStore: int associatedFullScanMaxIntervalMilli> = 300000;

        r0.<com.android.server.wifi.WifiConfigStore: int bandPreferenceBoostFactor5> = 5;

        r0.<com.android.server.wifi.WifiConfigStore: int bandPreferencePenaltyFactor5> = 2;

        $i8 = <android.net.wifi.WifiConfiguration: int G_BAND_PREFERENCE_RSSI_THRESHOLD>;

        r0.<com.android.server.wifi.WifiConfigStore: int bandPreferencePenaltyThreshold5> = $i8;

        $i9 = <android.net.wifi.WifiConfiguration: int A_BAND_PREFERENCE_RSSI_THRESHOLD>;

        r0.<com.android.server.wifi.WifiConfigStore: int bandPreferenceBoostThreshold5> = $i9;

        r0.<com.android.server.wifi.WifiConfigStore: int badLinkSpeed24> = 6;

        r0.<com.android.server.wifi.WifiConfigStore: int badLinkSpeed5> = 12;

        r0.<com.android.server.wifi.WifiConfigStore: int goodLinkSpeed24> = 24;

        r0.<com.android.server.wifi.WifiConfigStore: int goodLinkSpeed5> = 36;

        r0.<com.android.server.wifi.WifiConfigStore: int maxAuthErrorsToBlacklist> = 4;

        r0.<com.android.server.wifi.WifiConfigStore: int maxConnectionErrorsToBlacklist> = 4;

        r0.<com.android.server.wifi.WifiConfigStore: int wifiConfigBlacklistMinTimeMilli> = 300000;

        r0.<com.android.server.wifi.WifiConfigStore: int associatedHysteresisHigh> = 14;

        r0.<com.android.server.wifi.WifiConfigStore: int associatedHysteresisLow> = 8;

        $i10 = <android.net.wifi.WifiConfiguration: int UNBLACKLIST_THRESHOLD_5_HARD>;

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdUnblacklistThreshold5Hard> = $i10;

        $i12 = <android.net.wifi.WifiConfiguration: int UNBLACKLIST_THRESHOLD_5_SOFT>;

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdUnblacklistThreshold5Soft> = $i12;

        $i11 = <android.net.wifi.WifiConfiguration: int UNBLACKLIST_THRESHOLD_24_HARD>;

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdUnblacklistThreshold24Hard> = $i11;

        $i13 = <android.net.wifi.WifiConfiguration: int UNBLACKLIST_THRESHOLD_24_SOFT>;

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdUnblacklistThreshold24Soft> = $i13;

        r0.<com.android.server.wifi.WifiConfigStore: int enableVerboseLogging> = 0;

        r0.<com.android.server.wifi.WifiConfigStore: boolean showNetworks> = 1;

        r0.<com.android.server.wifi.WifiConfigStore: int alwaysEnableScansWhileAssociated> = 0;

        r0.<com.android.server.wifi.WifiConfigStore: int maxNumActiveChannelsForPartialScans> = 6;

        r0.<com.android.server.wifi.WifiConfigStore: int maxNumPassiveChannelsForPartialScans> = 2;

        r0.<com.android.server.wifi.WifiConfigStore: boolean roamOnAny> = 0;

        r0.<com.android.server.wifi.WifiConfigStore: boolean onlyLinkSameCredentialConfigurations> = 1;

        r0.<com.android.server.wifi.WifiConfigStore: boolean enableLinkDebouncing> = 1;

        r0.<com.android.server.wifi.WifiConfigStore: boolean enable5GHzPreference> = 1;

        r0.<com.android.server.wifi.WifiConfigStore: boolean enableWifiCellularHandoverUserTriggeredAdjustment> = 1;

        r0.<com.android.server.wifi.WifiConfigStore: long lastUnwantedNetworkDisconnectTimestamp> = 0L;

        $r5 = staticinvoke <android.security.KeyStore: android.security.KeyStore getInstance()>();

        r0.<com.android.server.wifi.WifiConfigStore: android.security.KeyStore mKeyStore> = $r5;

        r0.<com.android.server.wifi.WifiConfigStore: java.lang.String lastSelectedConfiguration> = null;

        r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext> = r1;

        r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative> = r2;

        $z0 = r0.<com.android.server.wifi.WifiConfigStore: boolean showNetworks>;

        if $z0 == 0 goto label1;

        $r71 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $r70 = virtualinvoke $r71.<com.android.server.wifi.WifiNative: android.util.LocalLog getLocalLog()>();

        r0.<com.android.server.wifi.WifiConfigStore: android.util.LocalLog mLocalLog> = $r70;

        $r69 = new com.android.server.wifi.WifiConfigStore$WpaConfigFileObserver;

        specialinvoke $r69.<com.android.server.wifi.WifiConfigStore$WpaConfigFileObserver: void <init>(com.android.server.wifi.WifiConfigStore)>(r0);

        r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiConfigStore$WpaConfigFileObserver mFileObserver> = $r69;

        $r68 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiConfigStore$WpaConfigFileObserver mFileObserver>;

        virtualinvoke $r68.<com.android.server.wifi.WifiConfigStore$WpaConfigFileObserver: void startWatching()>();

        goto label2;

     label1:
        r0.<com.android.server.wifi.WifiConfigStore: android.util.LocalLog mLocalLog> = null;

        r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiConfigStore$WpaConfigFileObserver mFileObserver> = null;

     label2:
        $r6 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        $i14 = virtualinvoke $r7.<android.content.res.Resources: int getInteger(int)>(17694760);

        r0.<com.android.server.wifi.WifiConfigStore: int associatedPartialScanPeriodMilli> = $i14;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("associatedPartialScanPeriodMilli set to ");

        $i15 = r0.<com.android.server.wifi.WifiConfigStore: int associatedPartialScanPeriodMilli>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r12);

        $r11 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r13 = virtualinvoke $r11.<android.content.Context: android.content.res.Resources getResources()>();

        $z1 = virtualinvoke $r13.<android.content.res.Resources: boolean getBoolean(int)>(17956893);

        r0.<com.android.server.wifi.WifiConfigStore: boolean onlyLinkSameCredentialConfigurations> = $z1;

        $r15 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r16 = virtualinvoke $r15.<android.content.Context: android.content.res.Resources getResources()>();

        $i16 = virtualinvoke $r16.<android.content.res.Resources: int getInteger(int)>(17694764);

        r0.<com.android.server.wifi.WifiConfigStore: int maxNumActiveChannelsForPartialScans> = $i16;

        $r14 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r19 = virtualinvoke $r14.<android.content.Context: android.content.res.Resources getResources()>();

        $i17 = virtualinvoke $r19.<android.content.res.Resources: int getInteger(int)>(17694765);

        r0.<com.android.server.wifi.WifiConfigStore: int maxNumPassiveChannelsForPartialScans> = $i17;

        $r17 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r18 = virtualinvoke $r17.<android.content.Context: android.content.res.Resources getResources()>();

        $i19 = virtualinvoke $r18.<android.content.res.Resources: int getInteger(int)>(17694762);

        r0.<com.android.server.wifi.WifiConfigStore: int associatedFullScanMaxIntervalMilli> = $i19;

        $r21 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r20 = virtualinvoke $r21.<android.content.Context: android.content.res.Resources getResources()>();

        $i18 = virtualinvoke $r20.<android.content.res.Resources: int getInteger(int)>(17694761);

        r0.<com.android.server.wifi.WifiConfigStore: int associatedFullScanBackoff> = $i18;

        $r23 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r24 = virtualinvoke $r23.<android.content.Context: android.content.res.Resources getResources()>();

        $z2 = virtualinvoke $r24.<android.content.res.Resources: boolean getBoolean(int)>(17956888);

        r0.<com.android.server.wifi.WifiConfigStore: boolean enableLinkDebouncing> = $z2;

        $r22 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r27 = virtualinvoke $r22.<android.content.Context: android.content.res.Resources getResources()>();

        $z3 = virtualinvoke $r27.<android.content.res.Resources: boolean getBoolean(int)>(17956889);

        r0.<com.android.server.wifi.WifiConfigStore: boolean enable5GHzPreference> = $z3;

        $r26 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r25 = virtualinvoke $r26.<android.content.Context: android.content.res.Resources getResources()>();

        $i21 = virtualinvoke $r25.<android.content.res.Resources: int getInteger(int)>(17694736);

        r0.<com.android.server.wifi.WifiConfigStore: int bandPreferenceBoostFactor5> = $i21;

        $r29 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r28 = virtualinvoke $r29.<android.content.Context: android.content.res.Resources getResources()>();

        $i20 = virtualinvoke $r28.<android.content.res.Resources: int getInteger(int)>(17694740);

        r0.<com.android.server.wifi.WifiConfigStore: int bandPreferencePenaltyFactor5> = $i20;

        $r32 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r31 = virtualinvoke $r32.<android.content.Context: android.content.res.Resources getResources()>();

        $i22 = virtualinvoke $r31.<android.content.res.Resources: int getInteger(int)>(17694739);

        r0.<com.android.server.wifi.WifiConfigStore: int bandPreferencePenaltyThreshold5> = $i22;

        $r30 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r35 = virtualinvoke $r30.<android.content.Context: android.content.res.Resources getResources()>();

        $i23 = virtualinvoke $r35.<android.content.res.Resources: int getInteger(int)>(17694735);

        r0.<com.android.server.wifi.WifiConfigStore: int bandPreferenceBoostThreshold5> = $i23;

        $r34 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r33 = virtualinvoke $r34.<android.content.Context: android.content.res.Resources getResources()>();

        $i25 = virtualinvoke $r33.<android.content.res.Resources: int getInteger(int)>(17694737);

        r0.<com.android.server.wifi.WifiConfigStore: int associatedHysteresisHigh> = $i25;

        $r39 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r40 = virtualinvoke $r39.<android.content.Context: android.content.res.Resources getResources()>();

        $i26 = virtualinvoke $r40.<android.content.res.Resources: int getInteger(int)>(17694738);

        r0.<com.android.server.wifi.WifiConfigStore: int associatedHysteresisLow> = $i26;

        $r36 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r37 = virtualinvoke $r36.<android.content.Context: android.content.res.Resources getResources()>();

        $i24 = virtualinvoke $r37.<android.content.res.Resources: int getInteger(int)>(17694741);

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdBadRssi5> = $i24;

        $r38 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r43 = virtualinvoke $r38.<android.content.Context: android.content.res.Resources getResources()>();

        $i29 = virtualinvoke $r43.<android.content.res.Resources: int getInteger(int)>(17694742);

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdLowRssi5> = $i29;

        $r44 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r45 = virtualinvoke $r44.<android.content.Context: android.content.res.Resources getResources()>();

        $i27 = virtualinvoke $r45.<android.content.res.Resources: int getInteger(int)>(17694743);

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdGoodRssi5> = $i27;

        $r41 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r42 = virtualinvoke $r41.<android.content.Context: android.content.res.Resources getResources()>();

        $i28 = virtualinvoke $r42.<android.content.res.Resources: int getInteger(int)>(17694744);

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdBadRssi24> = $i28;

        $r50 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r49 = virtualinvoke $r50.<android.content.Context: android.content.res.Resources getResources()>();

        $i31 = virtualinvoke $r49.<android.content.res.Resources: int getInteger(int)>(17694745);

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdLowRssi24> = $i31;

        $r51 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r46 = virtualinvoke $r51.<android.content.Context: android.content.res.Resources getResources()>();

        $i30 = virtualinvoke $r46.<android.content.res.Resources: int getInteger(int)>(17694746);

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdGoodRssi24> = $i30;

        $r48 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r47 = virtualinvoke $r48.<android.content.Context: android.content.res.Resources getResources()>();

        $z4 = virtualinvoke $r47.<android.content.res.Resources: boolean getBoolean(int)>(17956890);

        r0.<com.android.server.wifi.WifiConfigStore: boolean enableWifiCellularHandoverUserTriggeredAdjustment> = $z4;

        $r55 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r56 = virtualinvoke $r55.<android.content.Context: android.content.res.Resources getResources()>();

        $i33 = virtualinvoke $r56.<android.content.res.Resources: int getInteger(int)>(17694747);

        r0.<com.android.server.wifi.WifiConfigStore: int badLinkSpeed24> = $i33;

        $r53 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r52 = virtualinvoke $r53.<android.content.Context: android.content.res.Resources getResources()>();

        $i32 = virtualinvoke $r52.<android.content.res.Resources: int getInteger(int)>(17694748);

        r0.<com.android.server.wifi.WifiConfigStore: int badLinkSpeed5> = $i32;

        $r54 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r61 = virtualinvoke $r54.<android.content.Context: android.content.res.Resources getResources()>();

        $i36 = virtualinvoke $r61.<android.content.res.Resources: int getInteger(int)>(17694749);

        r0.<com.android.server.wifi.WifiConfigStore: int goodLinkSpeed24> = $i36;

        $r59 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r60 = virtualinvoke $r59.<android.content.Context: android.content.res.Resources getResources()>();

        $i35 = virtualinvoke $r60.<android.content.res.Resources: int getInteger(int)>(17694750);

        r0.<com.android.server.wifi.WifiConfigStore: int goodLinkSpeed5> = $i35;

        $r58 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r57 = virtualinvoke $r58.<android.content.Context: android.content.res.Resources getResources()>();

        $i34 = virtualinvoke $r57.<android.content.res.Resources: int getInteger(int)>(17694767);

        r0.<com.android.server.wifi.WifiConfigStore: int maxAuthErrorsToBlacklist> = $i34;

        $r66 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r67 = virtualinvoke $r66.<android.content.Context: android.content.res.Resources getResources()>();

        $i38 = virtualinvoke $r67.<android.content.res.Resources: int getInteger(int)>(17694766);

        r0.<com.android.server.wifi.WifiConfigStore: int maxConnectionErrorsToBlacklist> = $i38;

        $r65 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r64 = virtualinvoke $r65.<android.content.Context: android.content.res.Resources getResources()>();

        $i37 = virtualinvoke $r64.<android.content.res.Resources: int getInteger(int)>(17694768);

        r0.<com.android.server.wifi.WifiConfigStore: int wifiConfigBlacklistMinTimeMilli> = $i37;

        $r62 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r63 = virtualinvoke $r62.<android.content.Context: android.content.res.Resources getResources()>();

        $z6 = virtualinvoke $r63.<android.content.res.Resources: boolean getBoolean(int)>(17956891);

        r0.<com.android.server.wifi.WifiConfigStore: boolean enableAutoJoinScanWhenAssociated> = $z6;

        $r73 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r72 = virtualinvoke $r73.<android.content.Context: android.content.res.Resources getResources()>();

        $z5 = virtualinvoke $r72.<android.content.res.Resources: boolean getBoolean(int)>(17956892);

        r0.<com.android.server.wifi.WifiConfigStore: boolean enableAutoJoinWhenAssociated> = $z5;

        return;
    }

    void enableVerboseLogging(int)
    {
        com.android.server.wifi.WifiConfigStore r0;
        int i0;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        r0.<com.android.server.wifi.WifiConfigStore: int enableVerboseLogging> = i0;

        if i0 <= 0 goto label1;

        <com.android.server.wifi.WifiConfigStore: boolean VDBG> = 1;

        r0.<com.android.server.wifi.WifiConfigStore: boolean showNetworks> = 1;

        goto label2;

     label1:
        <com.android.server.wifi.WifiConfigStore: boolean VDBG> = 0;

     label2:
        if i0 <= 1 goto label3;

        <com.android.server.wifi.WifiConfigStore: boolean VVDBG> = 1;

        goto label4;

     label3:
        <com.android.server.wifi.WifiConfigStore: boolean VVDBG> = 0;

     label4:
        return;
    }

    void loadAndEnableAllNetworks()
    {
        com.android.server.wifi.WifiConfigStore r0;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void log(java.lang.String)>("Loading config and enabling all networks ");

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loadConfiguredNetworks()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void enableAllNetworks()>();

        return;
    }

    int getConfiguredNetworksSize()
    {
        com.android.server.wifi.WifiConfigStore r0;
        java.util.HashMap $r1;
        int $i0;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        $r1 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $i0 = virtualinvoke $r1.<java.util.HashMap: int size()>();

        return $i0;
    }

    private java.util.List getConfiguredNetworks(java.util.Map)
    {
        com.android.server.wifi.WifiConfigStore r0;
        java.util.Map r1;
        java.util.ArrayList r2, $r6;
        java.util.Iterator r3;
        android.net.wifi.WifiConfiguration r4, r5, $r10;
        java.util.HashMap $r7;
        java.util.Collection $r8;
        boolean $z0, $z2, $z3;
        java.lang.Object $r9, $r14;
        int $i0;
        java.util.BitSet $r11, $r12;
        java.lang.String $r13, $r15, $r16;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: java.util.Map;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = $r6;

        $r7 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.net.wifi.WifiConfiguration) $r9;

        $r10 = new android.net.wifi.WifiConfiguration;

        specialinvoke $r10.<android.net.wifi.WifiConfiguration: void <init>(android.net.wifi.WifiConfiguration)>(r4);

        r5 = $r10;

        $i0 = r4.<android.net.wifi.WifiConfiguration: int autoJoinStatus>;

        if $i0 != 200 goto label2;

        goto label1;

     label2:
        if r1 == null goto label3;

        $r11 = r4.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        if $r11 == null goto label3;

        $r12 = r4.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        $z2 = virtualinvoke $r12.<java.util.BitSet: boolean get(int)>(1);

        if $z2 == 0 goto label3;

        $r13 = r4.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $z3 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r13);

        if $z3 == 0 goto label3;

        $r15 = r4.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r14 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r15);

        $r16 = (java.lang.String) $r14;

        r5.<android.net.wifi.WifiConfiguration: java.lang.String preSharedKey> = $r16;

     label3:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r5);

        goto label1;

     label4:
        return r2;
    }

    java.util.List getConfiguredNetworks()
    {
        com.android.server.wifi.WifiConfigStore r0;
        java.util.List $r1;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        $r1 = specialinvoke r0.<com.android.server.wifi.WifiConfigStore: java.util.List getConfiguredNetworks(java.util.Map)>(null);

        return $r1;
    }

    java.util.List getPrivilegedConfiguredNetworks()
    {
        com.android.server.wifi.WifiConfigStore r0;
        java.util.Map r1;
        java.util.List $r2;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 = specialinvoke r0.<com.android.server.wifi.WifiConfigStore: java.util.Map getCredentialsBySsidMap()>();

        $r2 = specialinvoke r0.<com.android.server.wifi.WifiConfigStore: java.util.List getConfiguredNetworks(java.util.Map)>(r1);

        return $r2;
    }

    private java.util.Map getCredentialsBySsidMap()
    {
        com.android.server.wifi.WifiConfigStore r0;
        java.util.Map $r1;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        $r1 = specialinvoke r0.<com.android.server.wifi.WifiConfigStore: java.util.Map readNetworkVariablesFromSupplicantFile(java.lang.String)>("psk");

        return $r1;
    }

    int getconfiguredNetworkSize()
    {
        com.android.server.wifi.WifiConfigStore r0;
        java.util.HashMap $r1, $r2;
        int $i0;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        $r1 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $i0 = virtualinvoke $r2.<java.util.HashMap: int size()>();

        return $i0;
    }

    java.util.List getRecentConfiguredNetworks(int, boolean)
    {
        com.android.server.wifi.WifiConfigStore r0;
        int i0, $i1, $i3, $i4, $i5, $i6;
        boolean z0, $z1;
        java.util.ArrayList r1, $r11;
        java.util.Iterator r2;
        android.net.wifi.WifiConfiguration r3, $r10;
        java.util.HashMap $r4;
        java.util.Collection $r5;
        java.lang.Object $r6;
        long $l2;
        android.net.wifi.WifiConfiguration$Visibility $r8, $r9, $r12;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = null;

        $r4 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.net.wifi.WifiConfiguration) $r6;

        $i1 = r3.<android.net.wifi.WifiConfiguration: int autoJoinStatus>;

        if $i1 != 200 goto label2;

        goto label1;

     label2:
        $l2 = (long) i0;

        virtualinvoke r3.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$Visibility setVisibility(long)>($l2);

        $r8 = r3.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$Visibility visibility>;

        if $r8 != null goto label3;

        goto label1;

     label3:
        $r9 = r3.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$Visibility visibility>;

        $i3 = $r9.<android.net.wifi.WifiConfiguration$Visibility: int rssi5>;

        $i4 = <android.net.wifi.WifiConfiguration: int INVALID_RSSI>;

        if $i3 != $i4 goto label4;

        $r12 = r3.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$Visibility visibility>;

        $i6 = $r12.<android.net.wifi.WifiConfiguration$Visibility: int rssi24>;

        $i5 = <android.net.wifi.WifiConfiguration: int INVALID_RSSI>;

        if $i6 != $i5 goto label4;

        goto label1;

     label4:
        if r1 != null goto label5;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r1 = $r11;

     label5:
        if z0 == 0 goto label6;

        $r10 = new android.net.wifi.WifiConfiguration;

        specialinvoke $r10.<android.net.wifi.WifiConfiguration: void <init>(android.net.wifi.WifiConfiguration)>(r3);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label7;

     label6:
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r3);

     label7:
        goto label1;

     label8:
        return r1;
    }

    void updateConfiguration(android.net.wifi.WifiInfo)
    {
        com.android.server.wifi.WifiConfigStore r0;
        android.net.wifi.WifiInfo r1;
        android.net.wifi.WifiConfiguration r2;
        android.net.wifi.ScanResult r3;
        long l0, $l3;
        int i1, $i2, $i4, $i5, $i6, $i7;
        java.util.HashMap $r4, $r5;
        java.lang.String $r6, $r13, $r18, $r19;
        java.lang.Object $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r14, $r15, $r16, $r17;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WifiInfo;

        $i2 = virtualinvoke r1.<android.net.wifi.WifiInfo: int getNetworkId()>();

        r2 = virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: android.net.wifi.WifiConfiguration getWifiConfiguration(int)>($i2);

        if r2 == null goto label1;

        $r4 = r2.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        if $r4 == null goto label1;

        $r5 = r2.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        $r6 = virtualinvoke r1.<android.net.wifi.WifiInfo: java.lang.String getBSSID()>();

        $r7 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        r3 = (android.net.wifi.ScanResult) $r7;

        if r3 == null goto label1;

        l0 = r3.<android.net.wifi.ScanResult: long seen>;

        i1 = r3.<android.net.wifi.ScanResult: int level>;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r3.<android.net.wifi.ScanResult: long seen> = $l3;

        $i4 = virtualinvoke r1.<android.net.wifi.WifiInfo: int getRssi()>();

        r3.<android.net.wifi.ScanResult: int level> = $i4;

        $i5 = <com.android.server.wifi.WifiAutoJoinController: int mScanResultMaximumAge>;

        virtualinvoke r3.<android.net.wifi.ScanResult: void averageRssi(int,long,int)>(i1, l0, $i5);

        $z0 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z0 == 0 goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateConfiguration freq=");

        $i6 = r3.<android.net.wifi.ScanResult: int frequency>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" BSSID=");

        $r13 = r3.<android.net.wifi.ScanResult: java.lang.String BSSID>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" RSSI=");

        $i7 = r3.<android.net.wifi.ScanResult: int level>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r18 = virtualinvoke r2.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r19);

     label1:
        return;
    }

    android.net.wifi.WifiConfiguration getWifiConfiguration(int)
    {
        com.android.server.wifi.WifiConfigStore r0;
        int i0;
        java.util.HashMap $r1, $r2;
        java.lang.Integer $r3;
        java.lang.Object $r4;
        android.net.wifi.WifiConfiguration $r5;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (android.net.wifi.WifiConfiguration) $r4;

        return $r5;
    }

    android.net.wifi.WifiConfiguration getWifiConfiguration(java.lang.String)
    {
        com.android.server.wifi.WifiConfigStore r0;
        java.lang.String r1;
        int i0, i1;
        java.lang.Integer r2, $r5;
        java.util.HashMap $r3, $r4;
        java.lang.Object $r6;
        android.net.wifi.WifiConfiguration $r7;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        $r3 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mNetworkIds>;

        if $r3 != null goto label2;

        return null;

     label2:
        $r4 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mNetworkIds>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        r2 = (java.lang.Integer) $r6;

        if r2 != null goto label3;

        return null;

     label3:
        i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        $r7 = virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: android.net.wifi.WifiConfiguration getWifiConfiguration(int)>(i1);

        return $r7;
    }

    void enableAllNetworks()
    {
        com.android.server.wifi.WifiConfigStore r0;
        long l0, $l3, $l8, $l9, $l11, $l15;
        boolean z0, $z1, $z3;
        java.util.Iterator r1;
        android.net.wifi.WifiConfiguration r2;
        java.util.HashMap $r3;
        java.util.Collection $r4;
        com.android.server.wifi.WifiNative $r5, $r7;
        java.lang.Object $r6;
        int $i1, $i2, $i4, $i5, $i7, $i12, $i13, $i14;
        byte $b6, $b10, $b16;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        z0 = 0;

        $r3 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.net.wifi.WifiConfiguration) $r6;

        if r2 == null goto label5;

        $i1 = r2.<android.net.wifi.WifiConfiguration: int status>;

        if $i1 != 1 goto label5;

        $i2 = r2.<android.net.wifi.WifiConfiguration: int autoJoinStatus>;

        if $i2 > 128 goto label5;

        $i4 = r2.<android.net.wifi.WifiConfiguration: int disableReason>;

        if $i4 == 2 goto label2;

        $i13 = r2.<android.net.wifi.WifiConfiguration: int disableReason>;

        if $i13 == 4 goto label2;

        $i14 = r2.<android.net.wifi.WifiConfiguration: int disableReason>;

        if $i14 != 3 goto label3;

     label2:
        $l3 = r2.<android.net.wifi.WifiConfiguration: long blackListTimestamp>;

        $b6 = $l3 cmp 0L;

        if $b6 == 0 goto label3;

        $l8 = r2.<android.net.wifi.WifiConfiguration: long blackListTimestamp>;

        $b10 = l0 cmp $l8;

        if $b10 <= 0 goto label3;

        $l9 = r2.<android.net.wifi.WifiConfiguration: long blackListTimestamp>;

        $l15 = l0 - $l9;

        $i12 = r0.<com.android.server.wifi.WifiConfigStore: int wifiConfigBlacklistMinTimeMilli>;

        $l11 = (long) $i12;

        $b16 = $l15 cmp $l11;

        if $b16 >= 0 goto label3;

        goto label1;

     label3:
        $r7 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $i5 = r2.<android.net.wifi.WifiConfiguration: int networkId>;

        $z3 = virtualinvoke $r7.<com.android.server.wifi.WifiNative: boolean enableNetwork(int,boolean)>($i5, 0);

        if $z3 == 0 goto label4;

        z0 = 1;

        r2.<android.net.wifi.WifiConfiguration: int status> = 2;

        r2.<android.net.wifi.WifiConfiguration: int numConnectionFailures> = 0;

        r2.<android.net.wifi.WifiConfiguration: int numIpConfigFailures> = 0;

        r2.<android.net.wifi.WifiConfiguration: int numAuthFailures> = 0;

        virtualinvoke r2.<android.net.wifi.WifiConfiguration: void setAutoJoinStatus(int)>(0);

        goto label5;

     label4:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Enable network failed on ");

        $i7 = r2.<android.net.wifi.WifiConfiguration: int networkId>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r11);

     label5:
        goto label1;

     label6:
        if z0 == 0 goto label7;

        $r5 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        virtualinvoke $r5.<com.android.server.wifi.WifiNative: boolean saveConfig()>();

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void sendConfiguredNetworksChangedBroadcast()>();

     label7:
        return;
    }

    boolean selectNetwork(int)
    {
        com.android.server.wifi.WifiConfigStore r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.util.Iterator r1;
        android.net.wifi.WifiConfiguration r2, $r5, r10;
        boolean $z0, $z1;
        java.util.HashMap $r3;
        java.util.Collection $r4;
        com.android.server.wifi.WifiNative $r7;
        java.lang.Object $r8;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        $z0 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String,int)>("selectNetwork", i0);

     label1:
        if i0 != -1 goto label2;

        return 0;

     label2:
        $i1 = r0.<com.android.server.wifi.WifiConfigStore: int mLastPriority>;

        if $i1 == -1 goto label3;

        $i5 = r0.<com.android.server.wifi.WifiConfigStore: int mLastPriority>;

        if $i5 <= 1000000 goto label7;

     label3:
        $r3 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r8 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.net.wifi.WifiConfiguration) $r8;

        $i4 = r2.<android.net.wifi.WifiConfiguration: int networkId>;

        if $i4 == -1 goto label5;

        r2.<android.net.wifi.WifiConfiguration: int priority> = 0;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.NetworkUpdateResult addOrUpdateNetworkNative(android.net.wifi.WifiConfiguration,int)>(r2, -1);

     label5:
        goto label4;

     label6:
        r0.<com.android.server.wifi.WifiConfigStore: int mLastPriority> = 0;

     label7:
        $r5 = new android.net.wifi.WifiConfiguration;

        specialinvoke $r5.<android.net.wifi.WifiConfiguration: void <init>()>();

        r10 = $r5;

        r10.<android.net.wifi.WifiConfiguration: int networkId> = i0;

        $i2 = r0.<com.android.server.wifi.WifiConfigStore: int mLastPriority>;

        $i3 = $i2 + 1;

        r0.<com.android.server.wifi.WifiConfigStore: int mLastPriority> = $i3;

        r10.<android.net.wifi.WifiConfiguration: int priority> = $i3;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.NetworkUpdateResult addOrUpdateNetworkNative(android.net.wifi.WifiConfiguration,int)>(r10, -1);

        $r7 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        virtualinvoke $r7.<com.android.server.wifi.WifiNative: boolean saveConfig()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: boolean enableNetworkWithoutBroadcast(int,boolean)>(i0, 1);

        return 1;
    }

    com.android.server.wifi.NetworkUpdateResult saveNetwork(android.net.wifi.WifiConfiguration, int)
    {
        com.android.server.wifi.WifiConfigStore r0;
        android.net.wifi.WifiConfiguration r1, r2, r41;
        int i0, i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        boolean z0, $z1, $z2, $z3, $z5, $z6, $z8, $z10, $z11;
        com.android.server.wifi.NetworkUpdateResult r3, $r4;
        java.util.HashMap $r5, $r24, $r26;
        java.lang.Object $r6, $r23;
        java.lang.Integer $r7, $r25;
        com.android.server.wifi.WifiNative $r8, $r21;
        byte $b4;
        java.lang.StringBuilder $r9, $r10, $r11, $r13, $r14, $r18, $r19, $r20, $r27, $r28, $r29, $r31, $r32, $r33, $r35, $r36, $r38;
        java.lang.String $r12, $r15, $r16, $r17, $r22, $r30, $r34, $r37, $r39, $r40;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WifiConfiguration;

        i0 := @parameter1: int;

        if r1 == null goto label01;

        $i2 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        if $i2 != -1 goto label02;

        $r40 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        if $r40 != null goto label02;

     label01:
        $r4 = new com.android.server.wifi.NetworkUpdateResult;

        specialinvoke $r4.<com.android.server.wifi.NetworkUpdateResult: void <init>(int)>(-1);

        return $r4;

     label02:
        $z1 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z1 == 0 goto label03;

        $i11 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String,int)>("WifiConfigStore: saveNetwork netId", $i11);

     label03:
        $z2 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z2 == 0 goto label04;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WifiConfigStore saveNetwork, size=");

        $r26 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $i8 = virtualinvoke $r26.<java.util.HashMap: int size()>();

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" SSID=");

        $r30 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r35 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Uid=");

        $i9 = r1.<android.net.wifi.WifiConfiguration: int creatorUid>;

        $r34 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i9);

        $r33 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i10 = r1.<android.net.wifi.WifiConfiguration: int lastUpdateUid>;

        $r37 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i10);

        $r36 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r39);

     label04:
        $i3 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        if $i3 != -1 goto label05;

        $z11 = 1;

        goto label06;

     label05:
        $z11 = 0;

     label06:
        z0 = $z11;

        r3 = specialinvoke r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.NetworkUpdateResult addOrUpdateNetworkNative(android.net.wifi.WifiConfiguration,int)>(r1, i0);

        i1 = virtualinvoke r3.<com.android.server.wifi.NetworkUpdateResult: int getNetworkId()>();

        $z3 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z3 == 0 goto label07;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String,int)>("WifiConfigStore: saveNetwork got it back netId=", i1);

     label07:
        if z0 == 0 goto label09;

        if i1 == -1 goto label09;

        $z10 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z10 == 0 goto label08;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String,int)>("WifiConfigStore: will enable netId=", i1);

     label08:
        $r21 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        virtualinvoke $r21.<com.android.server.wifi.WifiNative: boolean enableNetwork(int,boolean)>(i1, 0);

        $r24 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r23 = virtualinvoke $r24.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r25);

        r2 = (android.net.wifi.WifiConfiguration) $r23;

        if r2 == null goto label09;

        r2.<android.net.wifi.WifiConfiguration: int status> = 2;

     label09:
        $r5 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

        r41 = (android.net.wifi.WifiConfiguration) $r6;

        if r41 == null goto label12;

        $i5 = r41.<android.net.wifi.WifiConfiguration: int autoJoinStatus>;

        if $i5 == 0 goto label11;

        $z8 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z8 == 0 goto label10;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WifiConfigStore: re-enabling: ");

        $r17 = r41.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r18 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String)>($r22);

     label10:
        virtualinvoke r41.<android.net.wifi.WifiConfiguration: void setAutoJoinStatus(int)>(0);

        $i7 = r41.<android.net.wifi.WifiConfiguration: int networkId>;

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: boolean enableNetworkWithoutBroadcast(int,boolean)>($i7, 0);

     label11:
        $z6 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z6 == 0 goto label12;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WifiConfigStore: saveNetwork got config back netId=");

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        $i6 = r1.<android.net.wifi.WifiConfiguration: int creatorUid>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r16);

     label12:
        $r8 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        virtualinvoke $r8.<com.android.server.wifi.WifiNative: boolean saveConfig()>();

        $z5 = virtualinvoke r3.<com.android.server.wifi.NetworkUpdateResult: boolean isNewNetwork()>();

        if $z5 == 0 goto label13;

        $b4 = 0;

        goto label14;

     label13:
        $b4 = 2;

     label14:
        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void sendConfiguredNetworksChangedBroadcast(android.net.wifi.WifiConfiguration,int)>(r41, $b4);

        return r3;
    }

    void driverRoamedFrom(android.net.wifi.WifiInfo)
    {
        com.android.server.wifi.WifiConfigStore r0;
        android.net.wifi.WifiInfo r1;
        android.net.wifi.WifiConfiguration r2;
        android.net.wifi.ScanResult r3;
        java.lang.String $r4, $r7;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        java.util.HashMap $r5, $r6;
        java.lang.Object $r8;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WifiInfo;

        if r1 == null goto label1;

        $r4 = virtualinvoke r1.<android.net.wifi.WifiInfo: java.lang.String getBSSID()>();

        if $r4 == null goto label1;

        $i0 = virtualinvoke r1.<android.net.wifi.WifiInfo: int getFrequency()>();

        $z0 = staticinvoke <android.net.wifi.ScanResult: boolean is5GHz(int)>($i0);

        if $z0 == 0 goto label1;

        $i1 = virtualinvoke r1.<android.net.wifi.WifiInfo: int getRssi()>();

        $i2 = r0.<com.android.server.wifi.WifiConfigStore: int bandPreferenceBoostThreshold5>;

        $i3 = $i2 + 3;

        if $i1 <= $i3 goto label1;

        $i4 = virtualinvoke r1.<android.net.wifi.WifiInfo: int getNetworkId()>();

        r2 = virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: android.net.wifi.WifiConfiguration getWifiConfiguration(int)>($i4);

        if r2 == null goto label1;

        $r5 = r2.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        if $r5 == null goto label1;

        $r6 = r2.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        $r7 = virtualinvoke r1.<android.net.wifi.WifiInfo: java.lang.String getBSSID()>();

        $r8 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

        r3 = (android.net.wifi.ScanResult) $r8;

        if r3 == null goto label1;

        virtualinvoke r3.<android.net.wifi.ScanResult: void setAutoJoinStatus(int)>(17);

     label1:
        return;
    }

    void saveWifiConfigBSSID(android.net.wifi.WifiConfiguration)
    {
        com.android.server.wifi.WifiConfigStore r0;
        android.net.wifi.WifiConfiguration r1;
        int $i0, $i1;
        java.lang.String $r2, $r3, $r6, $r9, $r11, $r12, $r14, $r17, $r19, $r21, $r22;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r10, $r16, $r18, $r20;
        com.android.server.wifi.WifiNative $r13, $r15;
        boolean $z0, $z1;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WifiConfiguration;

        if r1 == null goto label1;

        $i0 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        if $i0 != -1 goto label2;

        $r21 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        if $r21 != null goto label2;

     label1:
        return;

     label2:
        $r2 = r1.<android.net.wifi.WifiConfiguration: java.lang.String BSSID>;

        if $r2 == null goto label3;

        $r22 = r1.<android.net.wifi.WifiConfiguration: java.lang.String BSSID>;

        if $r22 == "any" goto label3;

        return;

     label3:
        $r3 = r1.<android.net.wifi.WifiConfiguration: java.lang.String autoJoinBSSID>;

        if $r3 == null goto label5;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("saveWifiConfigBSSID Setting BSSID for ");

        $r6 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r9 = r1.<android.net.wifi.WifiConfiguration: java.lang.String autoJoinBSSID>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r11);

        $r13 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $i1 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        $r12 = r1.<android.net.wifi.WifiConfiguration: java.lang.String autoJoinBSSID>;

        $z0 = virtualinvoke $r13.<com.android.server.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>($i1, "bssid", $r12);

        if $z0 != 0 goto label4;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to set BSSID: ");

        $r17 = r1.<android.net.wifi.WifiConfiguration: java.lang.String autoJoinBSSID>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r19);

        goto label5;

     label4:
        $r14 = r1.<android.net.wifi.WifiConfiguration: java.lang.String autoJoinBSSID>;

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("any");

        if $z1 == 0 goto label5;

        $r15 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        virtualinvoke $r15.<com.android.server.wifi.WifiNative: boolean saveConfig()>();

     label5:
        return;
    }

    void updateStatus(int, android.net.NetworkInfo$DetailedState)
    {
        com.android.server.wifi.WifiConfigStore r0;
        int i0, $i1, $i2, $i3;
        android.net.NetworkInfo$DetailedState r1;
        android.net.wifi.WifiConfiguration r2;
        java.util.HashMap $r3;
        java.lang.Integer $r4;
        java.lang.Object $r5;
        int[] $r6;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.NetworkInfo$DetailedState;

        if i0 == -1 goto label4;

        $r3 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        r2 = (android.net.wifi.WifiConfiguration) $r5;

        if r2 != null goto label1;

        return;

     label1:
        $r6 = <com.android.server.wifi.WifiConfigStore$2: int[] $SwitchMap$android$net$NetworkInfo$DetailedState>;

        $i1 = virtualinvoke r1.<android.net.NetworkInfo$DetailedState: int ordinal()>();

        $i2 = $r6[$i1];

        lookupswitch($i2)
        {
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label2:
        r2.<android.net.wifi.WifiConfiguration: int status> = 0;

        virtualinvoke r2.<android.net.wifi.WifiConfiguration: void setAutoJoinStatus(int)>(0);

        goto label4;

     label3:
        $i3 = r2.<android.net.wifi.WifiConfiguration: int status>;

        if $i3 != 0 goto label4;

        r2.<android.net.wifi.WifiConfiguration: int status> = 2;

        goto label4;

     label4:
        return;
    }

    boolean forgetNetwork(int)
    {
        com.android.server.wifi.WifiConfigStore r0;
        int i0;
        boolean z0, $z1, $z2;
        com.android.server.wifi.WifiNative $r1, $r6;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        $z1 = r0.<com.android.server.wifi.WifiConfigStore: boolean showNetworks>;

        if $z1 == 0 goto label1;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String,int)>("forgetNetwork", i0);

     label1:
        z0 = specialinvoke r0.<com.android.server.wifi.WifiConfigStore: boolean removeConfigAndSendBroadcastIfNeeded(int)>(i0);

        if z0 != 0 goto label2;

        return 1;

     label2:
        $r1 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $z2 = virtualinvoke $r1.<com.android.server.wifi.WifiNative: boolean removeNetwork(int)>(i0);

        if $z2 == 0 goto label3;

        $r6 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        virtualinvoke $r6.<com.android.server.wifi.WifiNative: boolean saveConfig()>();

        return 1;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to remove network ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r5);

        return 0;
    }

    int addOrUpdateNetwork(android.net.wifi.WifiConfiguration, int)
    {
        com.android.server.wifi.WifiConfigStore r0;
        android.net.wifi.WifiConfiguration r1, r3;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8;
        com.android.server.wifi.NetworkUpdateResult r2;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r17;
        java.lang.String $r6, $r9, $r12, $r15, $r16;
        java.util.HashMap $r18;
        java.lang.Object $r19;
        java.lang.Integer $r20;
        byte $b9;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WifiConfiguration;

        i0 := @parameter1: int;

        $z0 = r0.<com.android.server.wifi.WifiConfigStore: boolean showNetworks>;

        if $z0 == 0 goto label1;

        $i8 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String,int)>("addOrUpdateNetwork id=", $i8);

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key=");

        $r6 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" netId=");

        $i1 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        $i2 = r1.<android.net.wifi.WifiConfiguration: int creatorUid>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i3 = r1.<android.net.wifi.WifiConfiguration: int lastUpdateUid>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WifiConfigStore", $r16);

        r2 = specialinvoke r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.NetworkUpdateResult addOrUpdateNetworkNative(android.net.wifi.WifiConfiguration,int)>(r1, i0);

        $i6 = virtualinvoke r2.<com.android.server.wifi.NetworkUpdateResult: int getNetworkId()>();

        if $i6 == -1 goto label4;

        $r18 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $i7 = virtualinvoke r2.<com.android.server.wifi.NetworkUpdateResult: int getNetworkId()>();

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r19 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r20);

        r3 = (android.net.wifi.WifiConfiguration) $r19;

        if r3 == null goto label4;

        $z1 = r2.<com.android.server.wifi.NetworkUpdateResult: boolean isNewNetwork>;

        if $z1 == 0 goto label2;

        $b9 = 0;

        goto label3;

     label2:
        $b9 = 2;

     label3:
        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void sendConfiguredNetworksChangedBroadcast(android.net.wifi.WifiConfiguration,int)>(r3, $b9);

     label4:
        $i5 = virtualinvoke r2.<com.android.server.wifi.NetworkUpdateResult: int getNetworkId()>();

        return $i5;
    }

    boolean removeNetwork(int)
    {
        com.android.server.wifi.WifiConfigStore r0;
        int i0;
        boolean z0, $z1;
        com.android.server.wifi.WifiNative $r1;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        $z1 = r0.<com.android.server.wifi.WifiConfigStore: boolean showNetworks>;

        if $z1 == 0 goto label1;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String,int)>("removeNetwork", i0);

     label1:
        $r1 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        z0 = virtualinvoke $r1.<com.android.server.wifi.WifiNative: boolean removeNetwork(int)>(i0);

        if z0 == 0 goto label2;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: boolean removeConfigAndSendBroadcastIfNeeded(int)>(i0);

     label2:
        return z0;
    }

    private boolean removeConfigAndSendBroadcastIfNeeded(int)
    {
        com.android.server.wifi.WifiConfigStore r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean z0, $z1, $z2, $z3, $z5, $z6, $z8, $z9;
        android.net.wifi.WifiConfiguration r1;
        java.util.HashMap $r2, $r31, $r34, $r35;
        java.lang.Integer $r3, $r33, $r37;
        java.lang.Object $r4;
        java.lang.String $r5, $r6, $r10, $r14, $r17, $r18, $r24, $r29, $r43, $r45, $r47, $r48;
        android.net.wifi.WifiEnterpriseConfig $r7, $r39;
        java.lang.StringBuilder $r8, $r9, $r11, $r12, $r13, $r15, $r16, $r19, $r26, $r28, $r30, $r38, $r41, $r42, $r44, $r46, $r49, $r50;
        com.android.server.wifi.WifiNative $r20, $r22, $r23, $r25, $r27;
        android.net.IpConfiguration $r21;
        java.util.BitSet $r40;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        z0 = 1;

        $r2 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        r1 = (android.net.wifi.WifiConfiguration) $r4;

        if r1 == null goto label11;

        $z1 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z1 == 0 goto label01;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeNetwork ");

        $r43 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r42 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key=");

        $r48 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r49 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" config.id=");

        $i8 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        $r45 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i8);

        $r46 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r47);

     label01:
        $r5 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r6 = r0.<com.android.server.wifi.WifiConfigStore: java.lang.String lastSelectedConfiguration>;

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label02;

        r0.<com.android.server.wifi.WifiConfigStore: java.lang.String lastSelectedConfiguration> = null;

     label02:
        $r7 = r1.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiEnterpriseConfig enterpriseConfig>;

        if $r7 == null goto label03;

        $r39 = r1.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiEnterpriseConfig enterpriseConfig>;

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void removeKeys(android.net.wifi.WifiEnterpriseConfig)>($r39);

     label03:
        $z3 = r1.<android.net.wifi.WifiConfiguration: boolean selfAdded>;

        if $z3 != 0 goto label04;

        $r35 = r1.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations>;

        if $r35 != null goto label04;

        $r40 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        $z9 = virtualinvoke $r40.<java.util.BitSet: boolean get(int)>(1);

        if $z9 == 0 goto label05;

     label04:
        z0 = 0;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeNetwork ");

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key=");

        $r14 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" config.id=");

        $i1 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> mark as deleted");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r18);

     label05:
        if z0 == 0 goto label06;

        $r34 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r34.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r33);

        $r31 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mNetworkIds>;

        $i7 = staticinvoke <com.android.server.wifi.WifiConfigStore: int configKey(android.net.wifi.WifiConfiguration)>(r1);

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        virtualinvoke $r31.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r37);

        goto label10;

     label06:
        virtualinvoke r1.<android.net.wifi.WifiConfiguration: void setAutoJoinStatus(int)>(200);

        $r20 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $i2 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        virtualinvoke $r20.<com.android.server.wifi.WifiNative: boolean disableNetwork(int)>($i2);

        r1.<android.net.wifi.WifiConfiguration: int status> = 1;

        r1.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations> = null;

        r1.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache> = null;

        r1.<android.net.wifi.WifiConfiguration: java.util.HashMap connectChoices> = null;

        r1.<android.net.wifi.WifiConfiguration: java.lang.String defaultGwMacAddress> = null;

        $r21 = new android.net.IpConfiguration;

        specialinvoke $r21.<android.net.IpConfiguration: void <init>()>();

        virtualinvoke r1.<android.net.wifi.WifiConfiguration: void setIpConfiguration(android.net.IpConfiguration)>($r21);

        $r22 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $i3 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        $z6 = virtualinvoke $r22.<com.android.server.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>($i3, "psk", "\"Mjkd86jEMGn79KhKll298Uu7-deleted\"");

        if $z6 != 0 goto label07;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removeNetwork, failed to clear PSK, nid=");

        $i6 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r29);

     label07:
        r1.<android.net.wifi.WifiConfiguration: java.lang.String BSSID> = null;

        r1.<android.net.wifi.WifiConfiguration: java.lang.String autoJoinBSSID> = null;

        $r23 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $i4 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        $z5 = virtualinvoke $r23.<com.android.server.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>($i4, "bssid", "any");

        if $z5 != 0 goto label08;

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>("removeNetwork, failed to remove BSSID");

     label08:
        r1.<android.net.wifi.WifiConfiguration: boolean hiddenSSID> = 0;

        $r25 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $i5 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(0);

        $z8 = virtualinvoke $r25.<com.android.server.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>($i5, "scan_ssid", $r24);

        if $z8 != 0 goto label09;

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>("removeNetwork, failed to remove hiddenSSID");

     label09:
        $r27 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        virtualinvoke $r27.<com.android.server.wifi.WifiNative: boolean saveConfig()>();

     label10:
        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void writeIpAndProxyConfigurations()>();

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void sendConfiguredNetworksChangedBroadcast(android.net.wifi.WifiConfiguration,int)>(r1, 1);

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void writeKnownNetworkHistory()>();

     label11:
        return z0;
    }

    boolean enableNetwork(int, boolean)
    {
        com.android.server.wifi.WifiConfigStore r0;
        int i0;
        boolean z0, z1, $z2, $z3;
        java.util.HashMap r1, $r3, $r4;
        java.lang.Throwable r2, $r7;
        java.lang.Integer $r5;
        java.lang.Object $r6;
        android.net.wifi.WifiConfiguration r8;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 = virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: boolean enableNetworkWithoutBroadcast(int,boolean)>(i0, z0);

        if z0 == 0 goto label2;

        $z3 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z3 == 0 goto label1;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String,int)>("enableNetwork(disableOthers=true) ", i0);

     label1:
        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void sendConfiguredNetworksChangedBroadcast()>();

        goto label9;

     label2:
        $z2 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z2 == 0 goto label3;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String,int)>("enableNetwork(disableOthers=false) ", i0);

     label3:
        $r3 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        r1 = $r3;

        entermonitor $r3;

     label4:
        $r4 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        r8 = (android.net.wifi.WifiConfiguration) $r6;

        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label7:
        throw r2;

     label8:
        if r8 == null goto label9;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void sendConfiguredNetworksChangedBroadcast(android.net.wifi.WifiConfiguration,int)>(r8, 2);

     label9:
        return z1;

        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    boolean enableNetworkWithoutBroadcast(int, boolean)
    {
        com.android.server.wifi.WifiConfigStore r0;
        int i0;
        boolean z0, z1;
        android.net.wifi.WifiConfiguration r1;
        com.android.server.wifi.WifiNative $r2;
        java.util.HashMap $r3;
        java.lang.Integer $r4;
        java.lang.Object $r5;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        z1 = virtualinvoke $r2.<com.android.server.wifi.WifiNative: boolean enableNetwork(int,boolean)>(i0, z0);

        $r3 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        r1 = (android.net.wifi.WifiConfiguration) $r5;

        if r1 == null goto label1;

        r1.<android.net.wifi.WifiConfiguration: int status> = 2;

     label1:
        if z0 == 0 goto label2;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void markAllNetworksDisabledExcept(int)>(i0);

     label2:
        return z1;
    }

    void disableAllNetworks()
    {
        com.android.server.wifi.WifiConfigStore r0;
        boolean z0, $z1, $z2, $z3;
        java.util.Iterator r1;
        android.net.wifi.WifiConfiguration r2;
        java.util.HashMap $r3;
        java.util.Collection $r4;
        java.lang.Object $r5;
        int $i0, $i1, $i2;
        com.android.server.wifi.WifiNative $r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        $z1 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z1 == 0 goto label1;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String)>("disableAllNetworks");

     label1:
        z0 = 0;

        $r3 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.net.wifi.WifiConfiguration) $r5;

        if r2 == null goto label4;

        $i0 = r2.<android.net.wifi.WifiConfiguration: int status>;

        if $i0 == 1 goto label4;

        $r6 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $i1 = r2.<android.net.wifi.WifiConfiguration: int networkId>;

        $z3 = virtualinvoke $r6.<com.android.server.wifi.WifiNative: boolean disableNetwork(int)>($i1);

        if $z3 == 0 goto label3;

        z0 = 1;

        r2.<android.net.wifi.WifiConfiguration: int status> = 1;

        goto label4;

     label3:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disable network failed on ");

        $i2 = r2.<android.net.wifi.WifiConfiguration: int networkId>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r10);

     label4:
        goto label2;

     label5:
        if z0 == 0 goto label6;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void sendConfiguredNetworksChangedBroadcast()>();

     label6:
        return;
    }

    boolean disableNetwork(int)
    {
        com.android.server.wifi.WifiConfigStore r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: boolean disableNetwork(int,int)>(i0, 0);

        return $z0;
    }

    boolean disableNetwork(int, int)
    {
        com.android.server.wifi.WifiConfigStore r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean z0, $z1, $z2, $z3;
        android.net.wifi.WifiConfiguration r1, r2;
        com.android.server.wifi.WifiNative $r3;
        java.util.HashMap $r4;
        java.lang.Integer $r5;
        java.lang.Object $r6;
        java.lang.StringBuilder $r7, $r9, $r10, $r11, $r12, $r14, $r15, $r16, $r19;
        java.lang.String $r8, $r13, $r17, $r18;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z1 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z1 == 0 goto label1;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String,int)>("disableNetwork", i0);

     label1:
        $r3 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        z0 = virtualinvoke $r3.<com.android.server.wifi.WifiNative: boolean disableNetwork(int)>(i0);

        r1 = null;

        $r4 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        r2 = (android.net.wifi.WifiConfiguration) $r6;

        $z2 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z2 == 0 goto label4;

        if r2 == null goto label4;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("disableNetwork netId=");

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" SSID=");

        $r13 = r2.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" disabled=");

        $i4 = r2.<android.net.wifi.WifiConfiguration: int status>;

        if $i4 != 1 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reason=");

        $i5 = r2.<android.net.wifi.WifiConfiguration: int disableReason>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i5);

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r18);

     label4:
        if r2 == null goto label5;

        $i2 = r2.<android.net.wifi.WifiConfiguration: int status>;

        if $i2 == 1 goto label5;

        $i3 = r2.<android.net.wifi.WifiConfiguration: int disableReason>;

        if $i3 == 5 goto label5;

        r2.<android.net.wifi.WifiConfiguration: int status> = 1;

        r2.<android.net.wifi.WifiConfiguration: int disableReason> = i1;

        r1 = r2;

     label5:
        if i1 != 5 goto label6;

        r2.<android.net.wifi.WifiConfiguration: int status> = 1;

        r2.<android.net.wifi.WifiConfiguration: int autoJoinStatus> = 161;

     label6:
        if r1 == null goto label7;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void sendConfiguredNetworksChangedBroadcast(android.net.wifi.WifiConfiguration,int)>(r1, 2);

     label7:
        return z0;
    }

    boolean saveConfig()
    {
        com.android.server.wifi.WifiConfigStore r0;
        com.android.server.wifi.WifiNative $r1;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        $r1 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $z0 = virtualinvoke $r1.<com.android.server.wifi.WifiNative: boolean saveConfig()>();

        return $z0;
    }

    android.net.wifi.WpsResult startWpsWithPinFromAccessPoint(android.net.wifi.WpsInfo)
    {
        com.android.server.wifi.WifiConfigStore r0;
        android.net.wifi.WpsInfo r1;
        android.net.wifi.WpsResult r2, $r3;
        java.lang.String $r4, $r5;
        com.android.server.wifi.WifiNative $r6;
        boolean $z0;
        android.net.wifi.WpsResult$Status $r7, $r8;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WpsInfo;

        $r3 = new android.net.wifi.WpsResult;

        specialinvoke $r3.<android.net.wifi.WpsResult: void <init>()>();

        r2 = $r3;

        $r6 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $r5 = r1.<android.net.wifi.WpsInfo: java.lang.String BSSID>;

        $r4 = r1.<android.net.wifi.WpsInfo: java.lang.String pin>;

        $z0 = virtualinvoke $r6.<com.android.server.wifi.WifiNative: boolean startWpsRegistrar(java.lang.String,java.lang.String)>($r5, $r4);

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void markAllNetworksDisabled()>();

        $r8 = <android.net.wifi.WpsResult$Status: android.net.wifi.WpsResult$Status SUCCESS>;

        r2.<android.net.wifi.WpsResult: android.net.wifi.WpsResult$Status status> = $r8;

        goto label2;

     label1:
        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>("Failed to start WPS pin method configuration");

        $r7 = <android.net.wifi.WpsResult$Status: android.net.wifi.WpsResult$Status FAILURE>;

        r2.<android.net.wifi.WpsResult: android.net.wifi.WpsResult$Status status> = $r7;

     label2:
        return r2;
    }

    android.net.wifi.WpsResult startWpsWithPinFromDevice(android.net.wifi.WpsInfo)
    {
        com.android.server.wifi.WifiConfigStore r0;
        android.net.wifi.WpsInfo r1;
        android.net.wifi.WpsResult r2, $r3;
        java.lang.String $r4, $r6, $r7;
        com.android.server.wifi.WifiNative $r5;
        boolean $z0;
        android.net.wifi.WpsResult$Status $r8, $r9;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WpsInfo;

        $r3 = new android.net.wifi.WpsResult;

        specialinvoke $r3.<android.net.wifi.WpsResult: void <init>()>();

        r2 = $r3;

        $r5 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $r4 = r1.<android.net.wifi.WpsInfo: java.lang.String BSSID>;

        $r6 = virtualinvoke $r5.<com.android.server.wifi.WifiNative: java.lang.String startWpsPinDisplay(java.lang.String)>($r4);

        r2.<android.net.wifi.WpsResult: java.lang.String pin> = $r6;

        $r7 = r2.<android.net.wifi.WpsResult: java.lang.String pin>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r7);

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void markAllNetworksDisabled()>();

        $r9 = <android.net.wifi.WpsResult$Status: android.net.wifi.WpsResult$Status SUCCESS>;

        r2.<android.net.wifi.WpsResult: android.net.wifi.WpsResult$Status status> = $r9;

        goto label2;

     label1:
        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>("Failed to start WPS pin method configuration");

        $r8 = <android.net.wifi.WpsResult$Status: android.net.wifi.WpsResult$Status FAILURE>;

        r2.<android.net.wifi.WpsResult: android.net.wifi.WpsResult$Status status> = $r8;

     label2:
        return r2;
    }

    android.net.wifi.WpsResult startWpsPbc(android.net.wifi.WpsInfo)
    {
        com.android.server.wifi.WifiConfigStore r0;
        android.net.wifi.WpsInfo r1;
        android.net.wifi.WpsResult r2, $r3;
        java.lang.String $r4;
        com.android.server.wifi.WifiNative $r5;
        boolean $z0;
        android.net.wifi.WpsResult$Status $r6, $r7;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WpsInfo;

        $r3 = new android.net.wifi.WpsResult;

        specialinvoke $r3.<android.net.wifi.WpsResult: void <init>()>();

        r2 = $r3;

        $r5 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $r4 = r1.<android.net.wifi.WpsInfo: java.lang.String BSSID>;

        $z0 = virtualinvoke $r5.<com.android.server.wifi.WifiNative: boolean startWpsPbc(java.lang.String)>($r4);

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void markAllNetworksDisabled()>();

        $r7 = <android.net.wifi.WpsResult$Status: android.net.wifi.WpsResult$Status SUCCESS>;

        r2.<android.net.wifi.WpsResult: android.net.wifi.WpsResult$Status status> = $r7;

        goto label2;

     label1:
        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>("Failed to start WPS push button configuration");

        $r6 = <android.net.wifi.WpsResult$Status: android.net.wifi.WpsResult$Status FAILURE>;

        r2.<android.net.wifi.WpsResult: android.net.wifi.WpsResult$Status status> = $r6;

     label2:
        return r2;
    }

    android.net.StaticIpConfiguration getStaticIpConfiguration(int)
    {
        com.android.server.wifi.WifiConfigStore r0;
        int i0;
        android.net.wifi.WifiConfiguration r1;
        java.util.HashMap $r2;
        java.lang.Integer $r3;
        java.lang.Object $r4;
        android.net.StaticIpConfiguration $r5;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        r1 = (android.net.wifi.WifiConfiguration) $r4;

        if r1 == null goto label1;

        $r5 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: android.net.StaticIpConfiguration getStaticIpConfiguration()>();

        return $r5;

     label1:
        return null;
    }

    void setStaticIpConfiguration(int, android.net.StaticIpConfiguration)
    {
        com.android.server.wifi.WifiConfigStore r0;
        int i0;
        android.net.StaticIpConfiguration r1;
        android.net.wifi.WifiConfiguration r2;
        java.util.HashMap $r3;
        java.lang.Integer $r4;
        java.lang.Object $r5;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.StaticIpConfiguration;

        $r3 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        r2 = (android.net.wifi.WifiConfiguration) $r5;

        if r2 == null goto label1;

        virtualinvoke r2.<android.net.wifi.WifiConfiguration: void setStaticIpConfiguration(android.net.StaticIpConfiguration)>(r1);

     label1:
        return;
    }

    void setDefaultGwMacAddress(int, java.lang.String)
    {
        com.android.server.wifi.WifiConfigStore r0;
        int i0;
        java.lang.String r1;
        android.net.wifi.WifiConfiguration r2;
        java.util.HashMap $r3;
        java.lang.Integer $r4;
        java.lang.Object $r5;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        r2 = (android.net.wifi.WifiConfiguration) $r5;

        if r2 == null goto label1;

        r2.<android.net.wifi.WifiConfiguration: java.lang.String defaultGwMacAddress> = r1;

     label1:
        return;
    }

    android.net.ProxyInfo getProxyProperties(int)
    {
        com.android.server.wifi.WifiConfigStore r0;
        int i0;
        android.net.wifi.WifiConfiguration r1;
        java.util.HashMap $r2;
        java.lang.Integer $r3;
        java.lang.Object $r4;
        android.net.ProxyInfo $r5;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        r1 = (android.net.wifi.WifiConfiguration) $r4;

        if r1 == null goto label1;

        $r5 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: android.net.ProxyInfo getHttpProxy()>();

        return $r5;

     label1:
        return null;
    }

    boolean isUsingStaticIp(int)
    {
        com.android.server.wifi.WifiConfigStore r0;
        int i0;
        android.net.wifi.WifiConfiguration r1;
        java.util.HashMap $r2;
        java.lang.Integer $r3;
        java.lang.Object $r4;
        android.net.IpConfiguration$IpAssignment $r5, $r6;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        r1 = (android.net.wifi.WifiConfiguration) $r4;

        if r1 == null goto label1;

        $r5 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: android.net.IpConfiguration$IpAssignment getIpAssignment()>();

        $r6 = <android.net.IpConfiguration$IpAssignment: android.net.IpConfiguration$IpAssignment STATIC>;

        if $r5 != $r6 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void sendConfiguredNetworksChangedBroadcast(android.net.wifi.WifiConfiguration, int)
    {
        com.android.server.wifi.WifiConfigStore r0;
        android.net.wifi.WifiConfiguration r1;
        int i0;
        android.content.Intent r2, $r3;
        android.os.UserHandle $r8;
        android.content.Context $r9;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WifiConfiguration;

        i0 := @parameter1: int;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.net.wifi.CONFIGURED_NETWORKS_CHANGE");

        r2 = $r3;

        virtualinvoke r2.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("multipleChanges", 0);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("wifiConfiguration", r1);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("changeReason", i0);

        $r9 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r8 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r9.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r2, $r8);

        return;
    }

    private void sendConfiguredNetworksChangedBroadcast()
    {
        com.android.server.wifi.WifiConfigStore r0;
        android.content.Intent r1, $r2;
        android.os.UserHandle $r5;
        android.content.Context $r6;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.net.wifi.CONFIGURED_NETWORKS_CHANGE");

        r1 = $r2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("multipleChanges", 1);

        $r6 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r5 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r6.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r1, $r5);

        return;
    }

    void loadConfiguredNetworks()
    {
        com.android.server.wifi.WifiConfigStore r0;
        java.lang.String r1, r4, $r17, $r19, $r21, $r22, $r31, $r40, $r41, $r43, $r48, $r50, $r55, $r62, $r63, r72, r74;
        java.lang.String[] r2, r3, r69;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20;
        java.lang.Throwable r5, $r52;
        com.android.server.wifi.WifiNative $r7;
        java.util.HashMap $r8, $r9, $r10, $r14, $r23, $r30, $r33;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.io.BufferedReader $r11, r73;
        java.io.FileReader $r12;
        java.lang.StringBuilder $r13, $r15, $r16, $r18, $r27, $r28, $r29, $r32, $r39, $r42, $r44, $r45, $r46, $r47, $r49, $r53, $r54, $r56, $r61, $r64, $r65, $r66;
        android.net.wifi.WifiConfiguration $r20, r70;
        android.net.IpConfiguration$IpAssignment $r24;
        android.net.IpConfiguration$ProxySettings $r25;
        java.lang.Integer $r26, $r35, $r37, $r38;
        java.io.FileNotFoundException $r51, r76;
        java.io.IOException $r57, $r58, $r59, $r60, $r67, r78;
        java.lang.NumberFormatException $r68;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        $r7 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        r1 = virtualinvoke $r7.<com.android.server.wifi.WifiNative: java.lang.String listNetworks()>();

        r0.<com.android.server.wifi.WifiConfigStore: int mLastPriority> = 0;

        $r8 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        virtualinvoke $r8.<java.util.HashMap: void clear()>();

        $r9 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mNetworkIds>;

        virtualinvoke $r9.<java.util.HashMap: void clear()>();

        if r1 != null goto label01;

        return;

     label01:
        r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        $z0 = r0.<com.android.server.wifi.WifiConfigStore: boolean showNetworks>;

        if $z0 == 0 goto label03;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String)>("WifiConfigStore: loadConfiguredNetworks:  ");

        r3 = r2;

        i0 = lengthof r3;

        i1 = 0;

     label02:
        if i1 >= i0 goto label03;

        r4 = r3[i1];

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String)>(r4);

        i1 = i1 + 1;

        goto label02;

     label03:
        i20 = 1;

     label04:
        $i2 = lengthof r2;

        if i20 >= $i2 goto label19;

        $r19 = r2[i20];

        r69 = virtualinvoke $r19.<java.lang.String: java.lang.String[] split(java.lang.String)>("\t");

        $r20 = new android.net.wifi.WifiConfiguration;

        specialinvoke $r20.<android.net.wifi.WifiConfiguration: void <init>()>();

        r70 = $r20;

     label05:
        $r21 = r69[0];

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r21);

        r70.<android.net.wifi.WifiConfiguration: int networkId> = $i5;

     label06:
        goto label08;

     label07:
        $r68 := @caughtexception;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read network-id \'");

        $r63 = r69[0];

        $r64 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        $r61 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r62);

        goto label18;

     label08:
        $i6 = lengthof r69;

        if $i6 <= 3 goto label11;

        $r41 = r69[3];

        $i18 = virtualinvoke $r41.<java.lang.String: int indexOf(java.lang.String)>("[CURRENT]");

        if $i18 == -1 goto label09;

        r70.<android.net.wifi.WifiConfiguration: int status> = 0;

        goto label12;

     label09:
        $r50 = r69[3];

        $i19 = virtualinvoke $r50.<java.lang.String: int indexOf(java.lang.String)>("[DISABLED]");

        if $i19 == -1 goto label10;

        r70.<android.net.wifi.WifiConfiguration: int status> = 1;

        goto label12;

     label10:
        r70.<android.net.wifi.WifiConfiguration: int status> = 2;

        goto label12;

     label11:
        r70.<android.net.wifi.WifiConfiguration: int status> = 2;

     label12:
        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void readNetworkVariables(android.net.wifi.WifiConfiguration)>(r70);

        $r22 = r70.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        r72 = specialinvoke r0.<com.android.server.wifi.WifiConfigStore: java.lang.String readNetworkVariableFromSupplicantFile(java.lang.String,java.lang.String)>($r22, "psk");

        if r72 == null goto label14;

        $z5 = virtualinvoke r72.<java.lang.String: boolean equals(java.lang.Object)>("Mjkd86jEMGn79KhKll298Uu7-deleted");

        if $z5 == 0 goto label14;

        $z6 = r0.<com.android.server.wifi.WifiConfigStore: boolean showNetworks>;

        if $z6 == 0 goto label13;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found deleted network ");

        $r43 = r70.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r40 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        $i17 = r70.<android.net.wifi.WifiConfiguration: int networkId>;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String,int)>($r40, $i17);

     label13:
        virtualinvoke r70.<android.net.wifi.WifiConfiguration: void setAutoJoinStatus(int)>(200);

        r70.<android.net.wifi.WifiConfiguration: int priority> = 0;

     label14:
        $i8 = r70.<android.net.wifi.WifiConfiguration: int priority>;

        $i7 = r0.<com.android.server.wifi.WifiConfigStore: int mLastPriority>;

        if $i8 <= $i7 goto label15;

        $i14 = r70.<android.net.wifi.WifiConfiguration: int priority>;

        r0.<com.android.server.wifi.WifiConfigStore: int mLastPriority> = $i14;

     label15:
        $r24 = <android.net.IpConfiguration$IpAssignment: android.net.IpConfiguration$IpAssignment DHCP>;

        virtualinvoke r70.<android.net.wifi.WifiConfiguration: void setIpAssignment(android.net.IpConfiguration$IpAssignment)>($r24);

        $r25 = <android.net.IpConfiguration$ProxySettings: android.net.IpConfiguration$ProxySettings NONE>;

        virtualinvoke r70.<android.net.wifi.WifiConfiguration: void setProxySettings(android.net.IpConfiguration$ProxySettings)>($r25);

        $r23 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mNetworkIds>;

        $i9 = staticinvoke <com.android.server.wifi.WifiConfigStore: int configKey(android.net.wifi.WifiConfiguration)>(r70);

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $z4 = virtualinvoke $r23.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r26);

        if $z4 == 0 goto label16;

        $z8 = r0.<com.android.server.wifi.WifiConfigStore: boolean showNetworks>;

        if $z8 == 0 goto label18;

        $i16 = r70.<android.net.wifi.WifiConfiguration: int networkId>;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String,int)>("discarded duplicate network ", $i16);

        goto label18;

     label16:
        $z2 = virtualinvoke r70.<android.net.wifi.WifiConfiguration: boolean isValid()>();

        if $z2 == 0 goto label17;

        $r30 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $i11 = r70.<android.net.wifi.WifiConfiguration: int networkId>;

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        virtualinvoke $r30.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r35, r70);

        $r33 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mNetworkIds>;

        $i12 = staticinvoke <com.android.server.wifi.WifiConfigStore: int configKey(android.net.wifi.WifiConfiguration)>(r70);

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        $i13 = r70.<android.net.wifi.WifiConfiguration: int networkId>;

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        virtualinvoke $r33.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r38, $r37);

        $z7 = r0.<com.android.server.wifi.WifiConfigStore: boolean showNetworks>;

        if $z7 == 0 goto label18;

        $i15 = r70.<android.net.wifi.WifiConfiguration: int networkId>;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String,int)>("loaded configured network", $i15);

        goto label18;

     label17:
        $z3 = r0.<com.android.server.wifi.WifiConfigStore: boolean showNetworks>;

        if $z3 == 0 goto label18;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring loaded configured for network ");

        $i10 = r70.<android.net.wifi.WifiConfiguration: int networkId>;

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because config are not valid");

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void log(java.lang.String)>($r31);

     label18:
        i20 = i20 + 1;

        goto label04;

     label19:
        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void readIpAndProxyConfigurations()>();

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void readNetworkHistory()>();

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void readAutoJoinConfig()>();

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void sendConfiguredNetworksChangedBroadcast()>();

        $z1 = r0.<com.android.server.wifi.WifiConfigStore: boolean showNetworks>;

        if $z1 == 0 goto label20;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loadConfiguredNetworks loaded ");

        $r14 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mNetworkIds>;

        $i4 = virtualinvoke $r14.<java.util.HashMap: int size()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" networks");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String)>($r17);

     label20:
        $r10 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mNetworkIds>;

        $i3 = virtualinvoke $r10.<java.util.HashMap: int size()>();

        if $i3 != 0 goto label40;

        r73 = null;

     label21:
        $r11 = new java.io.BufferedReader;

        $r12 = new java.io.FileReader;

        specialinvoke $r12.<java.io.FileReader: void <init>(java.lang.String)>("/data/misc/wifi/wpa_supplicant.conf");

        specialinvoke $r11.<java.io.BufferedReader: void <init>(java.io.Reader)>($r12);

        r73 = $r11;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String,boolean)>("--- Begin wpa_supplicant.conf Contents ---", 1);

        r74 = virtualinvoke r73.<java.io.BufferedReader: java.lang.String readLine()>();

     label22:
        if r74 == null goto label23;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String,boolean)>(r74, 1);

        r74 = virtualinvoke r73.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label22;

     label23:
        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String,boolean)>("--- End wpa_supplicant.conf Contents ---", 1);

     label24:
        if r73 == null goto label25;

        virtualinvoke r73.<java.io.BufferedReader: void close()>();

     label25:
        goto label40;

     label26:
        $r60 := @caughtexception;

        goto label40;

     label27:
        $r51 := @caughtexception;

        r76 = $r51;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not open /data/misc/wifi/wpa_supplicant.conf, ");

        $r49 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r76);

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String,boolean)>($r48, 1);

     label28:
        if r73 == null goto label29;

        virtualinvoke r73.<java.io.BufferedReader: void close()>();

     label29:
        goto label40;

     label30:
        $r58 := @caughtexception;

        goto label40;

     label31:
        $r59 := @caughtexception;

        r78 = $r59;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not read /data/misc/wifi/wpa_supplicant.conf, ");

        $r56 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r78);

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String,boolean)>($r55, 1);

     label32:
        if r73 == null goto label33;

        virtualinvoke r73.<java.io.BufferedReader: void close()>();

     label33:
        goto label40;

     label34:
        $r67 := @caughtexception;

        goto label40;

     label35:
        $r52 := @caughtexception;

        r5 = $r52;

     label36:
        if r73 == null goto label37;

        virtualinvoke r73.<java.io.BufferedReader: void close()>();

     label37:
        goto label39;

     label38:
        $r57 := @caughtexception;

     label39:
        throw r5;

     label40:
        return;

        catch java.lang.NumberFormatException from label05 to label06 with label07;
        catch java.io.IOException from label24 to label25 with label26;
        catch java.io.FileNotFoundException from label21 to label24 with label27;
        catch java.io.IOException from label28 to label29 with label30;
        catch java.io.IOException from label21 to label24 with label31;
        catch java.io.IOException from label32 to label33 with label34;
        catch java.lang.Throwable from label21 to label24 with label35;
        catch java.lang.Throwable from label27 to label28 with label35;
        catch java.lang.Throwable from label31 to label32 with label35;
        catch java.io.IOException from label36 to label37 with label38;
        catch java.lang.Throwable from label35 to label36 with label35;
    }

    private java.util.Map readNetworkVariablesFromSupplicantFile(java.lang.String)
    {
        com.android.server.wifi.WifiConfigStore r0;
        java.lang.String r1, r4, r5, r6, r7, $r16, $r19, $r28, $r34;
        java.util.HashMap r2, $r10;
        java.io.BufferedReader r3, $r11;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Throwable r8, $r29;
        java.io.FileReader $r12;
        java.lang.StringBuilder $r13, $r14, $r15, $r18, $r21, $r22, $r23, $r24, $r25, $r30, $r35, $r36;
        int $i0, $i1;
        java.io.IOException $r20, $r26, $r27, $r31, $r33, r40;
        java.io.FileNotFoundException $r32, r38;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: java.lang.String;

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        r2 = $r10;

        r3 = null;

        $z1 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z1 == 0 goto label01;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readNetworkVariablesFromSupplicantFile key=");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r19);

     label01:
        $r11 = new java.io.BufferedReader;

        $r12 = new java.io.FileReader;

        specialinvoke $r12.<java.io.FileReader: void <init>(java.lang.String)>("/data/misc/wifi/wpa_supplicant.conf");

        specialinvoke $r11.<java.io.BufferedReader: void <init>(java.io.Reader)>($r12);

        r3 = $r11;

        z0 = 0;

        r4 = null;

        r5 = null;

        r6 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>();

     label02:
        if r6 == null goto label08;

        $z3 = virtualinvoke r6.<java.lang.String: boolean matches(java.lang.String)>("[ \\t]*network=\\{");

        if $z3 == 0 goto label03;

        z0 = 1;

        r4 = null;

        r5 = null;

        goto label04;

     label03:
        $z2 = virtualinvoke r6.<java.lang.String: boolean matches(java.lang.String)>("[ \\t]*\\}");

        if $z2 == 0 goto label04;

        z0 = 0;

        r4 = null;

        r5 = null;

     label04:
        if z0 == 0 goto label07;

        r7 = virtualinvoke r6.<java.lang.String: java.lang.String trim()>();

        $z4 = virtualinvoke r7.<java.lang.String: boolean startsWith(java.lang.String)>("ssid=");

        if $z4 == 0 goto label05;

        r4 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int)>(5);

        goto label06;

     label05:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $z5 = virtualinvoke r7.<java.lang.String: boolean startsWith(java.lang.String)>($r16);

        if $z5 == 0 goto label06;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = $i0 + 1;

        r5 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int)>($i1);

     label06:
        if r4 == null goto label07;

        if r5 == null goto label07;

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5);

     label07:
        r6 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label02;

     label08:
        if r3 == null goto label09;

        virtualinvoke r3.<java.io.BufferedReader: void close()>();

     label09:
        goto label24;

     label10:
        $r26 := @caughtexception;

        goto label24;

     label11:
        $r32 := @caughtexception;

        r38 = $r32;

        $z7 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z7 == 0 goto label12;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not open /data/misc/wifi/wpa_supplicant.conf, ");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r38);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r34);

     label12:
        if r3 == null goto label13;

        virtualinvoke r3.<java.io.BufferedReader: void close()>();

     label13:
        goto label24;

     label14:
        $r27 := @caughtexception;

        goto label24;

     label15:
        $r20 := @caughtexception;

        r40 = $r20;

        $z6 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z6 == 0 goto label16;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not read /data/misc/wifi/wpa_supplicant.conf, ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r40);

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r28);

     label16:
        if r3 == null goto label17;

        virtualinvoke r3.<java.io.BufferedReader: void close()>();

     label17:
        goto label24;

     label18:
        $r31 := @caughtexception;

        goto label24;

     label19:
        $r29 := @caughtexception;

        r8 = $r29;

     label20:
        if r3 == null goto label21;

        virtualinvoke r3.<java.io.BufferedReader: void close()>();

     label21:
        goto label23;

     label22:
        $r33 := @caughtexception;

     label23:
        throw r8;

     label24:
        return r2;

        catch java.io.IOException from label08 to label09 with label10;
        catch java.io.FileNotFoundException from label01 to label08 with label11;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.io.IOException from label01 to label08 with label15;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.lang.Throwable from label01 to label08 with label19;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.io.IOException from label20 to label21 with label22;
        catch java.lang.Throwable from label19 to label20 with label19;
    }

    private java.lang.String readNetworkVariableFromSupplicantFile(java.lang.String, java.lang.String)
    {
        com.android.server.wifi.WifiConfigStore r0;
        java.lang.String r1, r2, $r5, $r11;
        java.util.Map r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = specialinvoke r0.<com.android.server.wifi.WifiConfigStore: java.util.Map readNetworkVariablesFromSupplicantFile(java.lang.String)>(r2);

        $z0 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z0 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readNetworkVariableFromSupplicantFile ssid=[");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] key=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r11);

     label1:
        $r4 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    private void markAllNetworksDisabledExcept(int)
    {
        com.android.server.wifi.WifiConfigStore r0;
        int i0, $i1, $i2;
        java.util.Iterator r1;
        android.net.wifi.WifiConfiguration r2;
        java.util.HashMap $r3;
        java.util.Collection $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.net.wifi.WifiConfiguration) $r5;

        if r2 == null goto label2;

        $i1 = r2.<android.net.wifi.WifiConfiguration: int networkId>;

        if $i1 == i0 goto label2;

        $i2 = r2.<android.net.wifi.WifiConfiguration: int status>;

        if $i2 == 1 goto label2;

        r2.<android.net.wifi.WifiConfiguration: int status> = 1;

        r2.<android.net.wifi.WifiConfiguration: int disableReason> = 0;

     label2:
        goto label1;

     label3:
        return;
    }

    private void markAllNetworksDisabled()
    {
        com.android.server.wifi.WifiConfigStore r0;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void markAllNetworksDisabledExcept(int)>(-1);

        return;
    }

    boolean needsUnlockedKeyStore()
    {
        com.android.server.wifi.WifiConfigStore r0;
        java.util.Iterator r1;
        android.net.wifi.WifiConfiguration r2;
        java.util.HashMap $r3;
        java.util.Collection $r4;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r5;
        java.util.BitSet $r6, $r7;
        android.net.wifi.WifiEnterpriseConfig $r8;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        $r3 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.net.wifi.WifiConfiguration) $r5;

        $r6 = r2.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        $z1 = virtualinvoke $r6.<java.util.BitSet: boolean get(int)>(2);

        if $z1 == 0 goto label2;

        $r7 = r2.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        $z2 = virtualinvoke $r7.<java.util.BitSet: boolean get(int)>(3);

        if $z2 == 0 goto label2;

        $r8 = r2.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiEnterpriseConfig enterpriseConfig>;

        $z3 = staticinvoke <com.android.server.wifi.WifiConfigStore: boolean needsSoftwareBackedKeyStore(android.net.wifi.WifiEnterpriseConfig)>($r8);

        if $z3 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public void writeKnownNetworkHistory()
    {
        com.android.server.wifi.WifiConfigStore r0;
        boolean z0, $z1, $z2, $z3;
        java.util.ArrayList r1, $r4;
        java.util.Iterator r2;
        android.net.wifi.WifiConfiguration r3, $r17;
        java.util.HashMap $r5, $r12;
        java.util.Collection $r6;
        com.android.server.wifi.WifiConfigStore$1 $r7;
        com.android.server.net.DelayedDiskWrite $r8;
        java.lang.String $r9, $r15;
        java.lang.StringBuilder $r10, $r11, $r13, $r14, $r16;
        int $i0;
        java.lang.Object $r18;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        z0 = 0;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        $r5 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r18 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.net.wifi.WifiConfiguration) $r18;

        $r17 = new android.net.wifi.WifiConfiguration;

        specialinvoke $r17.<android.net.wifi.WifiConfiguration: void <init>(android.net.wifi.WifiConfiguration)>(r3);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r17);

        $z3 = r3.<android.net.wifi.WifiConfiguration: boolean dirty>;

        if $z3 != 1 goto label2;

        r3.<android.net.wifi.WifiConfiguration: boolean dirty> = 0;

        z0 = 1;

     label2:
        goto label1;

     label3:
        $z2 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z2 == 0 goto label4;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" writeKnownNetworkHistory() num networks:");

        $r12 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $i0 = virtualinvoke $r12.<java.util.HashMap: int size()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" needWrite=");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r15);

     label4:
        if z0 != 0 goto label5;

        return;

     label5:
        $r8 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.net.DelayedDiskWrite mWriter>;

        $r9 = <com.android.server.wifi.WifiConfigStore: java.lang.String networkHistoryConfigFile>;

        $r7 = new com.android.server.wifi.WifiConfigStore$1;

        specialinvoke $r7.<com.android.server.wifi.WifiConfigStore$1: void <init>(com.android.server.wifi.WifiConfigStore,java.util.List)>(r0, r1);

        virtualinvoke $r8.<com.android.server.net.DelayedDiskWrite: void write(java.lang.String,com.android.server.net.DelayedDiskWrite$Writer)>($r9, $r7);

        return;
    }

    public void setLastSelectedConfiguration(int)
    {
        com.android.server.wifi.WifiConfigStore r0;
        int i0;
        android.net.wifi.WifiConfiguration r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r8, $r9, $r11;
        java.lang.String $r4, $r6, $r7, $r10, $r12;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setLastSelectedConfiguration ");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r6);

        if i0 != -1 goto label1;

        r0.<com.android.server.wifi.WifiConfigStore: java.lang.String lastSelectedConfiguration> = null;

        goto label3;

     label1:
        r1 = virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: android.net.wifi.WifiConfiguration getWifiConfiguration(int)>(i0);

        if r1 != null goto label2;

        r0.<com.android.server.wifi.WifiConfigStore: java.lang.String lastSelectedConfiguration> = null;

        goto label3;

     label2:
        $r7 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        r0.<com.android.server.wifi.WifiConfigStore: java.lang.String lastSelectedConfiguration> = $r7;

        r1.<android.net.wifi.WifiConfiguration: int numConnectionFailures> = 0;

        r1.<android.net.wifi.WifiConfiguration: int numIpConfigFailures> = 0;

        r1.<android.net.wifi.WifiConfiguration: int numAuthFailures> = 0;

        $z0 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z0 == 0 goto label3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setLastSelectedConfiguration now: ");

        $r10 = r0.<com.android.server.wifi.WifiConfigStore: java.lang.String lastSelectedConfiguration>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r12);

     label3:
        return;
    }

    public java.lang.String getLastSelectedConfiguration()
    {
        com.android.server.wifi.WifiConfigStore r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        $r1 = r0.<com.android.server.wifi.WifiConfigStore: java.lang.String lastSelectedConfiguration>;

        return $r1;
    }

    public boolean isLastSelectedConfiguration(android.net.wifi.WifiConfiguration)
    {
        com.android.server.wifi.WifiConfigStore r0;
        android.net.wifi.WifiConfiguration r1;
        java.lang.String $r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WifiConfiguration;

        $r2 = r0.<com.android.server.wifi.WifiConfigStore: java.lang.String lastSelectedConfiguration>;

        if $r2 == null goto label1;

        if r1 == null goto label1;

        $r3 = r0.<com.android.server.wifi.WifiConfigStore: java.lang.String lastSelectedConfiguration>;

        $r4 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private void readNetworkHistory()
    {
        com.android.server.wifi.WifiConfigStore r0;
        java.io.DataInputStream r1, $r10;
        android.net.wifi.WifiConfiguration r2;
        java.lang.String r3, r4, r5, r6, r7, $r13, $r22, $r30, $r31, $r32, $r33, $r34, $r37, $r38, $r46, $r47, $r50, $r53, $r54, $r58, $r61, $r64, $r74, $r75, $r80, r82, r83, r84, r85, r86, r87, r88, r89, r90, r91, r92, r93, r94, r95, r96, r97, r98, r99, r100, r101, r102, r103, r104, r105, r106, r107, r108, r109, r110, r111, r112, r113, r114, r115, r116, r117, r118, r119, r120, r121, r122, r123, r124, r125, r126, r127, r128, r129, r130, r131, r132, r133;
        int i0, i1, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, i19, i20;
        long l2, $l14;
        java.lang.Integer r8, $r20, $r28, $r40;
        java.util.regex.Matcher r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38;
        java.io.FileInputStream $r11;
        java.io.BufferedInputStream $r12;
        java.util.HashMap $r14, $r16, $r17, $r18, $r19, $r21, $r23, $r25, $r27, $r29, $r41, $r45;
        android.net.wifi.ScanResult $r15, r135;
        java.util.regex.Pattern $r24;
        java.lang.StringBuilder $r26, $r35, $r36, $r42, $r43, $r48, $r49, $r51, $r52, $r55, $r56, $r57, $r59, $r60, $r62, $r65, $r66, $r67, $r69, $r70, $r71, $r72, $r76, $r77, $r79;
        java.lang.Object $r39, $r44;
        java.lang.Exception $r63, $r78, r136, r138;
        java.io.IOException $r68, r137;
        java.lang.NumberFormatException $r73;
        java.io.EOFException $r81;
        android.net.wifi.WifiSsid r134;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        $z0 = r0.<com.android.server.wifi.WifiConfigStore: boolean showNetworks>;

        if $z0 == 0 goto label01;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readNetworkHistory() path:");

        $r53 = <com.android.server.wifi.WifiConfigStore: java.lang.String networkHistoryConfigFile>;

        $r76 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String)>($r75);

     label01:
        r1 = null;

     label02:
        $r10 = new java.io.DataInputStream;

        $r12 = new java.io.BufferedInputStream;

        $r11 = new java.io.FileInputStream;

        $r13 = <com.android.server.wifi.WifiConfigStore: java.lang.String networkHistoryConfigFile>;

        specialinvoke $r11.<java.io.FileInputStream: void <init>(java.lang.String)>($r13);

        specialinvoke $r12.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r11);

        specialinvoke $r10.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r12);

        r1 = $r10;

        r2 = null;

     label03:
        r3 = virtualinvoke r1.<java.io.DataInputStream: java.lang.String readUTF()>();

        r4 = null;

        r5 = null;

        i0 = 0;

        i1 = 0;

        l2 = 0L;

        i3 = <android.net.wifi.WifiConfiguration: int INVALID_RSSI>;

        r6 = null;

        $z2 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("CONFIG:  ");

        if $z2 == 0 goto label07;

        if r2 == null goto label04;

        r2 = null;

     label04:
        r7 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("CONFIG:  ", "");

        r82 = virtualinvoke r7.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        $r41 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mNetworkIds>;

        $i17 = virtualinvoke r82.<java.lang.String: int hashCode()>();

        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i17);

        $r39 = virtualinvoke $r41.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r40);

        r8 = (java.lang.Integer) $r39;

        if r8 != null goto label05;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readNetworkHistory didnt find netid for hash=");

        $i18 = virtualinvoke r82.<java.lang.String: int hashCode()>();

        $r50 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i18);

        $r51 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r48 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key: ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r82);

        $r54 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String)>($r54);

        goto label03;

     label05:
        $r45 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r44 = virtualinvoke $r45.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r8);

        r2 = (android.net.wifi.WifiConfiguration) $r44;

        if r2 != null goto label06;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readNetworkHistory didnt find config for netid=");

        $r58 = virtualinvoke r8.<java.lang.Integer: java.lang.String toString()>();

        $r59 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        $r56 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key: ");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r82);

        $r61 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String)>($r61);

     label06:
        i19 = <android.net.wifi.WifiConfiguration: int INVALID_RSSI>;

        goto label46;

     label07:
        if r2 == null goto label46;

        $z1 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("SSID:  ");

        if $z1 == 0 goto label09;

        r83 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("SSID:  ", "");

        r5 = virtualinvoke r83.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        $r46 = r2.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        if $r46 == null goto label08;

        $r47 = r2.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $z38 = virtualinvoke $r47.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z38 != 0 goto label08;

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>("Error parsing network history file, mismatched SSIDs");

        r2 = null;

        r5 = null;

        goto label09;

     label08:
        r2.<android.net.wifi.WifiConfiguration: java.lang.String SSID> = r5;

     label09:
        $z4 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("FQDN:  ");

        if $z4 == 0 goto label10;

        r84 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("FQDN:  ", "");

        r85 = virtualinvoke r84.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        r2.<android.net.wifi.WifiConfiguration: java.lang.String FQDN> = r85;

     label10:
        $z3 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("DEFAULT_GW:  ");

        if $z3 == 0 goto label11;

        r86 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("DEFAULT_GW:  ", "");

        r87 = virtualinvoke r86.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        r2.<android.net.wifi.WifiConfiguration: java.lang.String defaultGwMacAddress> = r87;

     label11:
        $z6 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("AUTO_JOIN_STATUS:  ");

        if $z6 == 0 goto label12;

        r88 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("AUTO_JOIN_STATUS:  ", "");

        r89 = virtualinvoke r88.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        $i16 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r89);

        r2.<android.net.wifi.WifiConfiguration: int autoJoinStatus> = $i16;

     label12:
        $z5 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("SUP_DIS_REASON:  ");

        if $z5 == 0 goto label13;

        r90 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("SUP_DIS_REASON:  ", "");

        r91 = virtualinvoke r90.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        $i15 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r91);

        r2.<android.net.wifi.WifiConfiguration: int disableReason> = $i15;

     label13:
        $z8 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("SELF_ADDED:  ");

        if $z8 == 0 goto label14;

        r92 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("SELF_ADDED:  ", "");

        r93 = virtualinvoke r92.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        $z37 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r93);

        r2.<android.net.wifi.WifiConfiguration: boolean selfAdded> = $z37;

     label14:
        $z7 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("DID_SELF_ADD:  ");

        if $z7 == 0 goto label15;

        r94 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("DID_SELF_ADD:  ", "");

        r95 = virtualinvoke r94.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        $z36 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r95);

        r2.<android.net.wifi.WifiConfiguration: boolean didSelfAdd> = $z36;

     label15:
        $z11 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("NO_INTERNET_ACCESS:  ");

        if $z11 == 0 goto label16;

        r96 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("NO_INTERNET_ACCESS:  ", "");

        r97 = virtualinvoke r96.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        $z35 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r97);

        r2.<android.net.wifi.WifiConfiguration: boolean noInternetAccess> = $z35;

     label16:
        $z12 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("EPHEMERAL:   ");

        if $z12 == 0 goto label17;

        r98 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("EPHEMERAL:   ", "");

        r99 = virtualinvoke r98.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        $z34 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r99);

        r2.<android.net.wifi.WifiConfiguration: boolean ephemeral> = $z34;

     label17:
        $z9 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("CREATOR_UID_KEY:  ");

        if $z9 == 0 goto label18;

        r100 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("CREATOR_UID_KEY:  ", "");

        r101 = virtualinvoke r100.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        $i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r101);

        r2.<android.net.wifi.WifiConfiguration: int creatorUid> = $i11;

     label18:
        $z10 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("BLACKLIST_MILLI:  ");

        if $z10 == 0 goto label19;

        r102 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("BLACKLIST_MILLI:  ", "");

        r103 = virtualinvoke r102.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        $l14 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r103);

        r2.<android.net.wifi.WifiConfiguration: long blackListTimestamp> = $l14;

     label19:
        $z15 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("CONNECT_FAILURES:  ");

        if $z15 == 0 goto label20;

        r104 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("CONNECT_FAILURES:  ", "");

        r105 = virtualinvoke r104.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        $i13 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r105);

        r2.<android.net.wifi.WifiConfiguration: int numConnectionFailures> = $i13;

     label20:
        $z16 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("IP_CONFIG_FAILURES:  ");

        if $z16 == 0 goto label21;

        r106 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("IP_CONFIG_FAILURES:  ", "");

        r107 = virtualinvoke r106.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        $i12 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r107);

        r2.<android.net.wifi.WifiConfiguration: int numIpConfigFailures> = $i12;

     label21:
        $z13 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("AUTH_FAILURES:  ");

        if $z13 == 0 goto label22;

        r108 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("AUTH_FAILURES:  ", "");

        r109 = virtualinvoke r108.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r109);

        r2.<android.net.wifi.WifiConfiguration: int numIpConfigFailures> = $i8;

     label22:
        $z14 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("SCORER_OVERRIDE:  ");

        if $z14 == 0 goto label23;

        r110 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("SCORER_OVERRIDE:  ", "");

        r111 = virtualinvoke r110.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        $i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r111);

        r2.<android.net.wifi.WifiConfiguration: int numScorerOverride> = $i9;

     label23:
        $z19 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("SCORER_OVERRIDE_AND_SWITCH:  ");

        if $z19 == 0 goto label24;

        r112 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("SCORER_OVERRIDE_AND_SWITCH:  ", "");

        r113 = virtualinvoke r112.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        $i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r113);

        r2.<android.net.wifi.WifiConfiguration: int numScorerOverrideAndSwitchedNetwork> = $i10;

     label24:
        $z20 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("NUM_ASSOCIATION:  ");

        if $z20 == 0 goto label25;

        r114 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("NUM_ASSOCIATION:  ", "");

        r115 = virtualinvoke r114.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r115);

        r2.<android.net.wifi.WifiConfiguration: int numAssociation> = $i6;

     label25:
        $z17 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("JOIN_ATTEMPT_BOOST:  ");

        if $z17 == 0 goto label26;

        r116 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("JOIN_ATTEMPT_BOOST:  ", "");

        r117 = virtualinvoke r116.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r117);

        r2.<android.net.wifi.WifiConfiguration: int autoJoinUseAggressiveJoinAttemptThreshold> = $i7;

     label26:
        $z18 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("CONNECT_UID_KEY:  ");

        if $z18 == 0 goto label27;

        r118 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("CONNECT_UID_KEY:  ", "");

        r119 = virtualinvoke r118.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r119);

        r2.<android.net.wifi.WifiConfiguration: int lastConnectUid> = $i4;

     label27:
        $z23 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("UPDATE_UID:  ");

        if $z23 == 0 goto label28;

        r120 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("UPDATE_UID:  ", "");

        r121 = virtualinvoke r120.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r121);

        r2.<android.net.wifi.WifiConfiguration: int lastUpdateUid> = $i5;

     label28:
        $z24 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("FAILURE:  ");

        if $z24 == 0 goto label29;

        $r31 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("FAILURE:  ", "");

        r2.<android.net.wifi.WifiConfiguration: java.lang.String lastFailure> = $r31;

        $r37 = r2.<android.net.wifi.WifiConfiguration: java.lang.String lastFailure>;

        $r38 = virtualinvoke $r37.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        r2.<android.net.wifi.WifiConfiguration: java.lang.String lastFailure> = $r38;

     label29:
        $z21 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("PEER_CONFIGURATION:  ");

        if $z21 == 0 goto label30;

        $r32 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("PEER_CONFIGURATION:  ", "");

        r2.<android.net.wifi.WifiConfiguration: java.lang.String peerWifiConfiguration> = $r32;

        $r33 = r2.<android.net.wifi.WifiConfiguration: java.lang.String peerWifiConfiguration>;

        $r30 = virtualinvoke $r33.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        r2.<android.net.wifi.WifiConfiguration: java.lang.String peerWifiConfiguration> = $r30;

     label30:
        $z22 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("CHOICE:  ");

        if $z22 == 0 goto label37;

        r122 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("CHOICE:  ", "");

        r123 = virtualinvoke r122.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        $r24 = <com.android.server.wifi.WifiConfigStore: java.util.regex.Pattern mConnectChoice>;

        r9 = virtualinvoke $r24.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r123);

        $z33 = virtualinvoke r9.<java.util.regex.Matcher: boolean find()>();

        if $z33 != 0 goto label31;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WifiConfigStore: connectChoice:  Couldnt match pattern : ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r123);

        $r34 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r34);

        goto label37;

     label31:
        r124 = virtualinvoke r9.<java.util.regex.Matcher: java.lang.String group(int)>(1);

     label32:
        $r22 = virtualinvoke r9.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        i20 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r22);

     label33:
        goto label35;

     label34:
        $r73 := @caughtexception;

        i20 = 0;

     label35:
        if i20 <= 0 goto label37;

        $r27 = r2.<android.net.wifi.WifiConfiguration: java.util.HashMap connectChoices>;

        if $r27 != null goto label36;

        $r25 = new java.util.HashMap;

        specialinvoke $r25.<java.util.HashMap: void <init>()>();

        r2.<android.net.wifi.WifiConfiguration: java.util.HashMap connectChoices> = $r25;

     label36:
        $r29 = r2.<android.net.wifi.WifiConfiguration: java.util.HashMap connectChoices>;

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i20);

        virtualinvoke $r29.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r124, $r28);

     label37:
        $z28 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("LINK:  ");

        if $z28 == 0 goto label39;

        r125 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("LINK:  ", "");

        r126 = virtualinvoke r125.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        $r21 = r2.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations>;

        if $r21 != null goto label38;

        $r23 = new java.util.HashMap;

        specialinvoke $r23.<java.util.HashMap: void <init>()>();

        r2.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations> = $r23;

     label38:
        $r18 = r2.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations>;

        if $r18 == null goto label39;

        $r19 = r2.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        virtualinvoke $r19.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r126, $r20);

     label39:
        $z27 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("BSSID:  ");

        if $z27 == 0 goto label46;

        $z26 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("BSSID:  ");

        if $z26 == 0 goto label40;

        r127 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("BSSID:  ", "");

        r4 = virtualinvoke r127.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        i0 = 0;

        l2 = 0L;

        i3 = <android.net.wifi.WifiConfiguration: int INVALID_RSSI>;

        r6 = "";

        i1 = 0;

     label40:
        $z25 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("RSSI:  ");

        if $z25 == 0 goto label41;

        r128 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("RSSI:  ", "");

        r129 = virtualinvoke r128.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r129);

     label41:
        $z32 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("BSSID_STATUS:  ");

        if $z32 == 0 goto label42;

        r130 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("BSSID_STATUS:  ", "");

        r131 = virtualinvoke r130.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r131);

     label42:
        $z31 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("FREQ:  ");

        if $z31 == 0 goto label43;

        r132 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("FREQ:  ", "");

        r133 = virtualinvoke r132.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r133);

     label43:
        $z30 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("DATE:  ");

        if $z30 == 0 goto label44;

     label44:
        $z29 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("/BSSID:  ");

        if $z29 == 0 goto label46;

        if r4 == null goto label46;

        if r5 == null goto label46;

        $r16 = r2.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        if $r16 != null goto label45;

        $r17 = new java.util.HashMap;

        specialinvoke $r17.<java.util.HashMap: void <init>()>();

        r2.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache> = $r17;

     label45:
        r134 = staticinvoke <android.net.wifi.WifiSsid: android.net.wifi.WifiSsid createFromAsciiEncoded(java.lang.String)>(r5);

        $r15 = new android.net.wifi.ScanResult;

        specialinvoke $r15.<android.net.wifi.ScanResult: void <init>(android.net.wifi.WifiSsid,java.lang.String,java.lang.String,int,int,long)>(r134, r4, r6, i3, i0, 0L);

        r135 = $r15;

        r135.<android.net.wifi.ScanResult: long seen> = l2;

        $r14 = r2.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        virtualinvoke $r14.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r135);

        r135.<android.net.wifi.ScanResult: int autoJoinStatus> = i1;

     label46:
        goto label03;

     label47:
        $r81 := @caughtexception;

        if r1 == null goto label51;

     label48:
        virtualinvoke r1.<java.io.DataInputStream: void close()>();

     label49:
        goto label51;

     label50:
        $r78 := @caughtexception;

        r136 = $r78;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readNetworkHistory: Error reading file");

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r136);

        $r74 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r74);

     label51:
        goto label53;

     label52:
        $r68 := @caughtexception;

        r137 = $r68;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readNetworkHistory: No config file, revert to default");

        $r69 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r137);

        $r64 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r64);

     label53:
        if r1 == null goto label57;

     label54:
        virtualinvoke r1.<java.io.DataInputStream: void close()>();

     label55:
        goto label57;

     label56:
        $r63 := @caughtexception;

        r138 = $r63;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readNetworkHistory: Error closing file");

        $r79 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r138);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r80);

     label57:
        return;

        catch java.lang.NumberFormatException from label32 to label33 with label34;
        catch java.io.EOFException from label02 to label47 with label47;
        catch java.lang.Exception from label48 to label49 with label50;
        catch java.io.IOException from label02 to label47 with label52;
        catch java.lang.Exception from label54 to label55 with label56;
    }

    private void readAutoJoinConfig()
    {
        com.android.server.wifi.WifiConfigStore r0;
        java.io.BufferedReader r1, $r5;
        java.lang.String r2, r3, $r7, $r10, $r12, $r14, $r16, $r19, $r24, $r25, $r26, $r29, $r30, $r33, $r38, $r39, $r41, $r43, $r45, $r49, $r50, $r56, $r59, $r61, $r62, $r64, $r65, $r69, $r73, $r74, $r76, $r79, $r81, $r85, $r87, $r90, $r92, $r95, $r97, $r100, $r101, $r106, $r108, $r112, $r113, $r116, $r117, $r122, $r123, $r126, $r128, $r131, $r133, $r136, $r139, $r140, $r143, $r147, $r150, $r153, $r161, $r166, $r168, $r171, $r176, $r184, $r190, $r196, $r202, $r205, $r211, $r215, $r220, $r225, $r230, $r231, $r238, $r245, $r247, $r256, $r262, $r269, $r271, $r276, $r279, $r283, $r288, $r297, $r300, $r304, $r310, $r316, $r321, $r325, $r332, $r336, r339, r340, r341, r343, r344, r346, r347, r349, r350, r352, r353, r355, r356, r358, r359, r361, r362, r364, r365, r367, r368, r370, r371, r373, r374, r376, r377, r379, r380, r382, r383, r385, r386, r388, r389, r391, r392, r394, r395, r397, r398, r400, r401, r403, r404, r406, r407, r409, r410, r412, r413, r415, r416, r418, r419, r421, r422, r424, r425, r427, r428;
        java.io.FileReader $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40;
        int $i0, $i1, $i3, $i4, $i6, $i7, $i8, $i11, $i12, $i14, $i15, $i16, $i17, $i20, $i21, $i22, $i24, $i26, $i27, $i28, $i29, $i30, $i32, $i33, $i36, $i37, $i38, $i39, $i42, $i43, $i45, $i47, $i48, $i49, $i51, $i52, $i54, $i56, $i57, $i58, $i59, $i61, $i62, $i63, $i65, $i68, $i69, $i71, $i72, $i74, $i75, $i76, $i78, $i81, $i82, $i83, $i87;
        java.lang.StringBuilder $r8, $r9, $r11, $r13, $r15, $r17, $r18, $r20, $r21, $r22, $r23, $r27, $r28, $r31, $r32, $r34, $r35, $r36, $r37, $r40, $r42, $r44, $r46, $r47, $r48, $r51, $r52, $r53, $r54, $r55, $r57, $r58, $r60, $r63, $r66, $r67, $r68, $r70, $r71, $r72, $r75, $r77, $r78, $r80, $r82, $r83, $r84, $r86, $r88, $r89, $r91, $r93, $r94, $r96, $r98, $r99, $r102, $r103, $r104, $r105, $r107, $r109, $r110, $r111, $r114, $r115, $r118, $r119, $r120, $r121, $r124, $r125, $r127, $r129, $r130, $r132, $r134, $r135, $r137, $r138, $r141, $r142, $r144, $r145, $r146, $r148, $r149, $r151, $r152, $r154, $r155, $r156, $r157, $r158, $r159, $r162, $r163, $r165, $r167, $r169, $r172, $r173, $r174, $r175, $r177, $r178, $r179, $r180, $r182, $r183, $r187, $r188, $r189, $r192, $r193, $r194, $r195, $r197, $r199, $r201, $r203, $r206, $r207, $r208, $r210, $r212, $r214, $r216, $r217, $r218, $r221, $r222, $r223, $r226, $r227, $r228, $r229, $r233, $r234, $r235, $r236, $r237, $r240, $r242, $r243, $r244, $r246, $r248, $r250, $r252, $r253, $r257, $r258, $r259, $r261, $r263, $r264, $r265, $r266, $r267, $r270, $r272, $r273, $r274, $r277, $r278, $r281, $r282, $r286, $r287, $r289, $r291, $r292, $r293, $r295, $r296, $r298, $r299, $r301, $r302, $r305, $r306, $r307, $r309, $r311, $r313, $r314, $r315, $r318, $r319, $r320, $r323, $r324, $r326, $r327, $r329, $r330, $r333, $r334, $r335, $r337;
        java.lang.NumberFormatException $r160, $r164, $r170, $r181, $r186, $r191, $r198, $r200, $r204, $r209, $r213, $r219, $r224, $r232, $r239, $r241, $r251, $r255, $r260, $r268, $r275, $r280, $r284, $r285, $r290, $r294, $r303, $r308, $r317, $r331, $r338;
        java.io.FileNotFoundException $r185;
        java.lang.Exception $r249, $r312, $r322, r431, r433, r435;
        java.io.EOFException $r254;
        java.io.IOException $r328, r434;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 = null;

     label001:
        $r5 = new java.io.BufferedReader;

        $r6 = new java.io.FileReader;

        $r7 = <com.android.server.wifi.WifiConfigStore: java.lang.String autoJoinConfigFile>;

        specialinvoke $r6.<java.io.FileReader: void <init>(java.lang.String)>($r7);

        specialinvoke $r5.<java.io.BufferedReader: void <init>(java.io.Reader)>($r6);

        r1 = $r5;

        r2 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

     label002:
        if r2 == null goto label138;

        if r2 == null goto label003;

        $r148 = new java.lang.StringBuilder;

        specialinvoke $r148.<java.lang.StringBuilder: void <init>()>();

        $r178 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig line: ");

        $r177 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r176 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r176);

     label003:
        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("ENABLE_AUTO_JOIN_WHILE_ASSOCIATED:   ");

        if $z0 == 0 goto label009;

        r3 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("ENABLE_AUTO_JOIN_WHILE_ASSOCIATED:   ", "");

        r339 = virtualinvoke r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label004:
        $i83 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r339);

        if $i83 == 0 goto label005;

        $z36 = 1;

        goto label006;

     label005:
        $z36 = 0;

     label006:
        r0.<com.android.server.wifi.WifiConfigStore: boolean enableAutoJoinWhenAssociated> = $z36;

        $r146 = new java.lang.StringBuilder;

        specialinvoke $r146.<java.lang.StringBuilder: void <init>()>();

        $r149 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: enabled = ");

        $z37 = r0.<com.android.server.wifi.WifiConfigStore: boolean enableAutoJoinWhenAssociated>;

        $r151 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z37);

        $r150 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r150);

     label007:
        goto label009;

     label008:
        $r232 := @caughtexception;

        $r233 = new java.lang.StringBuilder;

        specialinvoke $r233.<java.lang.StringBuilder: void <init>()>();

        $r228 = virtualinvoke $r233.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r229 = virtualinvoke $r228.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r230 = virtualinvoke $r229.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r230);

     label009:
        $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("ENABLE_FULL_BAND_SCAN_WHEN_ASSOCIATED:   ");

        if $z1 == 0 goto label015;

        r340 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("ENABLE_FULL_BAND_SCAN_WHEN_ASSOCIATED:   ", "");

        r341 = virtualinvoke r340.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label010:
        $i87 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r341);

        if $i87 == 0 goto label011;

        $z35 = 1;

        goto label012;

     label011:
        $z35 = 0;

     label012:
        r0.<com.android.server.wifi.WifiConfigStore: boolean enableFullBandScanWhenAssociated> = $z35;

        $r158 = new java.lang.StringBuilder;

        specialinvoke $r158.<java.lang.StringBuilder: void <init>()>();

        $r156 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: enableFullBandScanWhenAssociated = ");

        $z40 = r0.<com.android.server.wifi.WifiConfigStore: boolean enableFullBandScanWhenAssociated>;

        $r157 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z40);

        $r147 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r147);

     label013:
        goto label015;

     label014:
        $r338 := @caughtexception;

        $r337 = new java.lang.StringBuilder;

        specialinvoke $r337.<java.lang.StringBuilder: void <init>()>();

        $r301 = virtualinvoke $r337.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r299 = virtualinvoke $r301.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r300 = virtualinvoke $r299.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r300);

     label015:
        $z2 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("ENABLE_AUTO_JOIN_SCAN_WHILE_ASSOCIATED:   ");

        if $z2 == 0 goto label021;

        r343 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("ENABLE_AUTO_JOIN_SCAN_WHILE_ASSOCIATED:   ", "");

        r344 = virtualinvoke r343.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label016:
        $i78 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r344);

        if $i78 == 0 goto label017;

        $z38 = 1;

        goto label018;

     label017:
        $z38 = 0;

     label018:
        r0.<com.android.server.wifi.WifiConfigStore: boolean enableAutoJoinScanWhenAssociated> = $z38;

        $r154 = new java.lang.StringBuilder;

        specialinvoke $r154.<java.lang.StringBuilder: void <init>()>();

        $r155 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: enabled = ");

        $z39 = r0.<com.android.server.wifi.WifiConfigStore: boolean enableAutoJoinScanWhenAssociated>;

        $r152 = virtualinvoke $r155.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z39);

        $r153 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r153);

     label019:
        goto label021;

     label020:
        $r284 := @caughtexception;

        $r291 = new java.lang.StringBuilder;

        specialinvoke $r291.<java.lang.StringBuilder: void <init>()>();

        $r293 = virtualinvoke $r291.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r292 = virtualinvoke $r293.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r288 = virtualinvoke $r292.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r288);

     label021:
        $z3 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("ENABLE_CHIP_WAKE_UP_WHILE_ASSOCIATED:   ");

        if $z3 == 0 goto label027;

        r346 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("ENABLE_CHIP_WAKE_UP_WHILE_ASSOCIATED:   ", "");

        r347 = virtualinvoke r346.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label022:
        $i76 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r347);

        if $i76 == 0 goto label023;

        $z32 = 1;

        goto label024;

     label023:
        $z32 = 0;

     label024:
        r0.<com.android.server.wifi.WifiConfigStore: boolean enableChipWakeUpWhenAssociated> = $z32;

        $r135 = new java.lang.StringBuilder;

        specialinvoke $r135.<java.lang.StringBuilder: void <init>()>();

        $r134 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: enabled = ");

        $z33 = r0.<com.android.server.wifi.WifiConfigStore: boolean enableChipWakeUpWhenAssociated>;

        $r137 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z33);

        $r136 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r136);

     label025:
        goto label027;

     label026:
        $r160 := @caughtexception;

        $r159 = new java.lang.StringBuilder;

        specialinvoke $r159.<java.lang.StringBuilder: void <init>()>();

        $r162 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r163 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r161 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r161);

     label027:
        $z4 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("ENABLE_RSSI_POLL_WHILE_ASSOCIATED_KEY:   ");

        if $z4 == 0 goto label033;

        r349 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("ENABLE_RSSI_POLL_WHILE_ASSOCIATED_KEY:   ", "");

        r350 = virtualinvoke r349.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label028:
        $i82 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r350);

        if $i82 == 0 goto label029;

        $z31 = 1;

        goto label030;

     label029:
        $z31 = 0;

     label030:
        r0.<com.android.server.wifi.WifiConfigStore: boolean enableRssiPollWhenAssociated> = $z31;

        $r145 = new java.lang.StringBuilder;

        specialinvoke $r145.<java.lang.StringBuilder: void <init>()>();

        $r144 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: enabled = ");

        $z34 = r0.<com.android.server.wifi.WifiConfigStore: boolean enableRssiPollWhenAssociated>;

        $r142 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z34);

        $r143 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r143);

     label031:
        goto label033;

     label032:
        $r303 := @caughtexception;

        $r302 = new java.lang.StringBuilder;

        specialinvoke $r302.<java.lang.StringBuilder: void <init>()>();

        $r305 = virtualinvoke $r302.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r306 = virtualinvoke $r305.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r304 = virtualinvoke $r306.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r304);

     label033:
        $z5 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("THRESHOLD_INITIAL_AUTO_JOIN_ATTEMPT_RSSI_MIN_5G:  ");

        if $z5 == 0 goto label037;

        r352 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("THRESHOLD_INITIAL_AUTO_JOIN_ATTEMPT_RSSI_MIN_5G:  ", "");

        r353 = virtualinvoke r352.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label034:
        $i71 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r353);

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdInitialAutoJoinAttemptMin5RSSI> = $i71;

        $r124 = new java.lang.StringBuilder;

        specialinvoke $r124.<java.lang.StringBuilder: void <init>()>();

        $r141 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: thresholdInitialAutoJoinAttemptMin5RSSI = ");

        $i81 = r0.<com.android.server.wifi.WifiConfigStore: int thresholdInitialAutoJoinAttemptMin5RSSI>;

        $r140 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i81);

        $r138 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r140);

        $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r139);

     label035:
        goto label037;

     label036:
        $r209 := @caughtexception;

        $r208 = new java.lang.StringBuilder;

        specialinvoke $r208.<java.lang.StringBuilder: void <init>()>();

        $r206 = virtualinvoke $r208.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r207 = virtualinvoke $r206.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r205 = virtualinvoke $r207.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r205);

     label037:
        $z6 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("THRESHOLD_INITIAL_AUTO_JOIN_ATTEMPT_RSSI_MIN_24G:  ");

        if $z6 == 0 goto label041;

        r355 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("THRESHOLD_INITIAL_AUTO_JOIN_ATTEMPT_RSSI_MIN_24G:  ", "");

        r356 = virtualinvoke r355.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label038:
        $i68 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r356);

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdInitialAutoJoinAttemptMin24RSSI> = $i68;

        $r119 = new java.lang.StringBuilder;

        specialinvoke $r119.<java.lang.StringBuilder: void <init>()>();

        $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: thresholdInitialAutoJoinAttemptMin24RSSI = ");

        $i69 = r0.<com.android.server.wifi.WifiConfigStore: int thresholdInitialAutoJoinAttemptMin24RSSI>;

        $r122 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i69);

        $r121 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r122);

        $r123 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r123);

     label039:
        goto label041;

     label040:
        $r280 := @caughtexception;

        $r281 = new java.lang.StringBuilder;

        specialinvoke $r281.<java.lang.StringBuilder: void <init>()>();

        $r277 = virtualinvoke $r281.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r278 = virtualinvoke $r277.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r279 = virtualinvoke $r278.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r279);

     label041:
        $z8 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("THRESHOLD_UNBLACKLIST_HARD_5G:  ");

        if $z8 == 0 goto label045;

        r358 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("THRESHOLD_UNBLACKLIST_HARD_5G:  ", "");

        r359 = virtualinvoke r358.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label042:
        $i74 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r359);

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdUnblacklistThreshold5Hard> = $i74;

        $r129 = new java.lang.StringBuilder;

        specialinvoke $r129.<java.lang.StringBuilder: void <init>()>();

        $r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: thresholdUnblacklistThreshold5Hard = ");

        $i75 = r0.<com.android.server.wifi.WifiConfigStore: int thresholdUnblacklistThreshold5Hard>;

        $r131 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i75);

        $r132 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r131);

        $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r133);

     label043:
        goto label045;

     label044:
        $r255 := @caughtexception;

        $r253 = new java.lang.StringBuilder;

        specialinvoke $r253.<java.lang.StringBuilder: void <init>()>();

        $r263 = virtualinvoke $r253.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r264 = virtualinvoke $r263.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r262 = virtualinvoke $r264.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r262);

     label045:
        $z7 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("THRESHOLD_UNBLACKLIST_SOFT_5G:  ");

        if $z7 == 0 goto label049;

        r361 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("THRESHOLD_UNBLACKLIST_SOFT_5G:  ", "");

        r362 = virtualinvoke r361.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label046:
        $i61 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r362);

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdUnblacklistThreshold5Soft> = $i61;

        $r110 = new java.lang.StringBuilder;

        specialinvoke $r110.<java.lang.StringBuilder: void <init>()>();

        $r125 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: thresholdUnblacklistThreshold5Soft = ");

        $i72 = r0.<com.android.server.wifi.WifiConfigStore: int thresholdUnblacklistThreshold5Soft>;

        $r126 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i72);

        $r127 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r126);

        $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r128);

     label047:
        goto label049;

     label048:
        $r186 := @caughtexception;

        $r187 = new java.lang.StringBuilder;

        specialinvoke $r187.<java.lang.StringBuilder: void <init>()>();

        $r227 = virtualinvoke $r187.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r226 = virtualinvoke $r227.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r225 = virtualinvoke $r226.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r225);

     label049:
        $z10 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("THRESHOLD_UNBLACKLIST_HARD_24G:  ");

        if $z10 == 0 goto label053;

        r364 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("THRESHOLD_UNBLACKLIST_HARD_24G:  ", "");

        r365 = virtualinvoke r364.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label050:
        $i58 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r365);

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdUnblacklistThreshold24Hard> = $i58;

        $r105 = new java.lang.StringBuilder;

        specialinvoke $r105.<java.lang.StringBuilder: void <init>()>();

        $r107 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: thresholdUnblacklistThreshold24Hard = ");

        $i59 = r0.<com.android.server.wifi.WifiConfigStore: int thresholdUnblacklistThreshold24Hard>;

        $r106 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i59);

        $r109 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r106);

        $r108 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r108);

     label051:
        goto label053;

     label052:
        $r285 := @caughtexception;

        $r286 = new java.lang.StringBuilder;

        specialinvoke $r286.<java.lang.StringBuilder: void <init>()>();

        $r287 = virtualinvoke $r286.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r282 = virtualinvoke $r287.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r283 = virtualinvoke $r282.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r283);

     label053:
        $z9 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("THRESHOLD_UNBLACKLIST_SOFT_24G:  ");

        if $z9 == 0 goto label057;

        r367 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("THRESHOLD_UNBLACKLIST_SOFT_24G:  ", "");

        r368 = virtualinvoke r367.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label054:
        $i63 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r368);

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdUnblacklistThreshold24Soft> = $i63;

        $r115 = new java.lang.StringBuilder;

        specialinvoke $r115.<java.lang.StringBuilder: void <init>()>();

        $r114 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: thresholdUnblacklistThreshold24Soft = ");

        $i65 = r0.<com.android.server.wifi.WifiConfigStore: int thresholdUnblacklistThreshold24Soft>;

        $r117 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i65);

        $r118 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r117);

        $r116 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r116);

     label055:
        goto label057;

     label056:
        $r204 := @caughtexception;

        $r193 = new java.lang.StringBuilder;

        specialinvoke $r193.<java.lang.StringBuilder: void <init>()>();

        $r195 = virtualinvoke $r193.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r194 = virtualinvoke $r195.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r196 = virtualinvoke $r194.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r196);

     label057:
        $z12 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("THRESHOLD_GOOD_RSSI_5:  ");

        if $z12 == 0 goto label061;

        r370 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("THRESHOLD_GOOD_RSSI_5:  ", "");

        r371 = virtualinvoke r370.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label058:
        $i54 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r371);

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdGoodRssi5> = $i54;

        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        $r98 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: thresholdGoodRssi5 = ");

        $i62 = r0.<com.android.server.wifi.WifiConfigStore: int thresholdGoodRssi5>;

        $r113 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i62);

        $r111 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r113);

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r112);

     label059:
        goto label061;

     label060:
        $r290 := @caughtexception;

        $r289 = new java.lang.StringBuilder;

        specialinvoke $r289.<java.lang.StringBuilder: void <init>()>();

        $r296 = virtualinvoke $r289.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r298 = virtualinvoke $r296.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r297 = virtualinvoke $r298.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r297);

     label061:
        $z11 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("THRESHOLD_LOW_RSSI_5:  ");

        if $z11 == 0 goto label065;

        r373 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("THRESHOLD_LOW_RSSI_5:  ", "");

        r374 = virtualinvoke r373.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label062:
        $i57 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r374);

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdLowRssi5> = $i57;

        $r104 = new java.lang.StringBuilder;

        specialinvoke $r104.<java.lang.StringBuilder: void <init>()>();

        $r103 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: thresholdLowRssi5 = ");

        $i56 = r0.<com.android.server.wifi.WifiConfigStore: int thresholdLowRssi5>;

        $r101 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i56);

        $r102 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r101);

        $r100 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r100);

     label063:
        goto label065;

     label064:
        $r239 := @caughtexception;

        $r234 = new java.lang.StringBuilder;

        specialinvoke $r234.<java.lang.StringBuilder: void <init>()>();

        $r235 = virtualinvoke $r234.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r236 = virtualinvoke $r235.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r231 = virtualinvoke $r236.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r231);

     label065:
        $z14 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("THRESHOLD_BAD_RSSI_5:  ");

        if $z14 == 0 goto label069;

        r376 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("THRESHOLD_BAD_RSSI_5:  ", "");

        r377 = virtualinvoke r376.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label066:
        $i52 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r377);

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdBadRssi5> = $i52;

        $r94 = new java.lang.StringBuilder;

        specialinvoke $r94.<java.lang.StringBuilder: void <init>()>();

        $r93 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: thresholdBadRssi5 = ");

        $i51 = r0.<com.android.server.wifi.WifiConfigStore: int thresholdBadRssi5>;

        $r92 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i51);

        $r91 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r92);

        $r90 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r90);

     label067:
        goto label069;

     label068:
        $r181 := @caughtexception;

        $r180 = new java.lang.StringBuilder;

        specialinvoke $r180.<java.lang.StringBuilder: void <init>()>();

        $r179 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r172 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r171 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r171);

     label069:
        $z13 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("THRESHOLD_GOOD_RSSI_24:  ");

        if $z13 == 0 goto label073;

        r379 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("THRESHOLD_GOOD_RSSI_24:  ", "");

        r380 = virtualinvoke r379.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label070:
        $i47 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r380);

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdGoodRssi24> = $i47;

        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: thresholdGoodRssi24 = ");

        $i45 = r0.<com.android.server.wifi.WifiConfigStore: int thresholdGoodRssi24>;

        $r97 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i45);

        $r96 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r97);

        $r95 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r95);

     label071:
        goto label073;

     label072:
        $r200 := @caughtexception;

        $r199 = new java.lang.StringBuilder;

        specialinvoke $r199.<java.lang.StringBuilder: void <init>()>();

        $r201 = virtualinvoke $r199.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r203 = virtualinvoke $r201.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r202 = virtualinvoke $r203.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r202);

     label073:
        $z16 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("THRESHOLD_LOW_RSSI_24:  ");

        if $z16 == 0 goto label077;

        r382 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("THRESHOLD_LOW_RSSI_24:  ", "");

        r383 = virtualinvoke r382.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label074:
        $i49 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r383);

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdLowRssi24> = $i49;

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: thresholdLowRssi24 = ");

        $i48 = r0.<com.android.server.wifi.WifiConfigStore: int thresholdLowRssi24>;

        $r85 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i48);

        $r86 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85);

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r87);

     label075:
        goto label077;

     label076:
        $r260 := @caughtexception;

        $r261 = new java.lang.StringBuilder;

        specialinvoke $r261.<java.lang.StringBuilder: void <init>()>();

        $r259 = virtualinvoke $r261.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r270 = virtualinvoke $r259.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r269 = virtualinvoke $r270.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r269);

     label077:
        $z15 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("THRESHOLD_BAD_RSSI_24:  ");

        if $z15 == 0 goto label081;

        r385 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("THRESHOLD_BAD_RSSI_24:  ", "");

        r386 = virtualinvoke r385.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label078:
        $i43 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r386);

        r0.<com.android.server.wifi.WifiConfigStore: int thresholdBadRssi24> = $i43;

        $r80 = new java.lang.StringBuilder;

        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: thresholdBadRssi24 = ");

        $i42 = r0.<com.android.server.wifi.WifiConfigStore: int thresholdBadRssi24>;

        $r79 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i42);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79);

        $r76 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r76);

     label079:
        goto label081;

     label080:
        $r275 := @caughtexception;

        $r274 = new java.lang.StringBuilder;

        specialinvoke $r274.<java.lang.StringBuilder: void <init>()>();

        $r273 = virtualinvoke $r274.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r272 = virtualinvoke $r273.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r271 = virtualinvoke $r272.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r271);

     label081:
        $z18 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("THRESHOLD_MAX_TX_PACKETS_FOR_NETWORK_SWITCHING:   ");

        if $z18 == 0 goto label085;

        r388 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("THRESHOLD_MAX_TX_PACKETS_FOR_NETWORK_SWITCHING:   ", "");

        r389 = virtualinvoke r388.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label082:
        $i37 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r389);

        r0.<com.android.server.wifi.WifiConfigStore: int maxTxPacketForNetworkSwitching> = $i37;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: maxTxPacketForNetworkSwitching = ");

        $i38 = r0.<com.android.server.wifi.WifiConfigStore: int maxTxPacketForNetworkSwitching>;

        $r69 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i38);

        $r82 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r81 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r81);

     label083:
        goto label085;

     label084:
        $r241 := @caughtexception;

        $r240 = new java.lang.StringBuilder;

        specialinvoke $r240.<java.lang.StringBuilder: void <init>()>();

        $r242 = virtualinvoke $r240.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r237 = virtualinvoke $r242.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r238 = virtualinvoke $r237.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r238);

     label085:
        $z17 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("THRESHOLD_MAX_RX_PACKETS_FOR_NETWORK_SWITCHING:   ");

        if $z17 == 0 goto label089;

        r391 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("THRESHOLD_MAX_RX_PACKETS_FOR_NETWORK_SWITCHING:   ", "");

        r392 = virtualinvoke r391.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label086:
        $i33 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r392);

        r0.<com.android.server.wifi.WifiConfigStore: int maxRxPacketForNetworkSwitching> = $i33;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: maxRxPacketForNetworkSwitching = ");

        $i39 = r0.<com.android.server.wifi.WifiConfigStore: int maxRxPacketForNetworkSwitching>;

        $r74 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i39);

        $r75 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r73 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r73);

     label087:
        goto label089;

     label088:
        $r170 := @caughtexception;

        $r175 = new java.lang.StringBuilder;

        specialinvoke $r175.<java.lang.StringBuilder: void <init>()>();

        $r174 = virtualinvoke $r175.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r173 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r166 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r166);

     label089:
        $z20 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("THRESHOLD_MAX_TX_PACKETS_FOR_FULL_SCANS:   ");

        if $z20 == 0 goto label093;

        r394 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("THRESHOLD_MAX_TX_PACKETS_FOR_FULL_SCANS:   ", "");

        r395 = virtualinvoke r394.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label090:
        $i36 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r395);

        r0.<com.android.server.wifi.WifiConfigStore: int maxTxPacketForNetworkSwitching> = $i36;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: maxTxPacketForFullScans = ");

        $i32 = r0.<com.android.server.wifi.WifiConfigStore: int maxTxPacketForFullScans>;

        $r64 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i32);

        $r63 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        $r62 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r62);

     label091:
        goto label093;

     label092:
        $r219 := @caughtexception;

        $r218 = new java.lang.StringBuilder;

        specialinvoke $r218.<java.lang.StringBuilder: void <init>()>();

        $r217 = virtualinvoke $r218.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r216 = virtualinvoke $r217.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r215 = virtualinvoke $r216.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r215);

     label093:
        $z19 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("THRESHOLD_MAX_RX_PACKETS_FOR_FULL_SCANS:   ");

        if $z19 == 0 goto label097;

        r397 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("THRESHOLD_MAX_RX_PACKETS_FOR_FULL_SCANS:   ", "");

        r398 = virtualinvoke r397.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label094:
        $i28 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r398);

        r0.<com.android.server.wifi.WifiConfigStore: int maxRxPacketForNetworkSwitching> = $i28;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: maxRxPacketForFullScans = ");

        $i29 = r0.<com.android.server.wifi.WifiConfigStore: int maxRxPacketForFullScans>;

        $r56 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i29);

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r65 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r65);

     label095:
        goto label097;

     label096:
        $r331 := @caughtexception;

        $r333 = new java.lang.StringBuilder;

        specialinvoke $r333.<java.lang.StringBuilder: void <init>()>();

        $r335 = virtualinvoke $r333.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r334 = virtualinvoke $r335.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r336 = virtualinvoke $r334.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r336);

     label097:
        $z22 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("THRESHOLD_MAX_TX_PACKETS_FOR_PARTIAL_SCANS:   ");

        if $z22 == 0 goto label101;

        r400 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("THRESHOLD_MAX_TX_PACKETS_FOR_PARTIAL_SCANS:   ", "");

        r401 = virtualinvoke r400.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label098:
        $i24 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r401);

        r0.<com.android.server.wifi.WifiConfigStore: int maxTxPacketForNetworkSwitching> = $i24;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: maxTxPacketForPartialScans = ");

        $i30 = r0.<com.android.server.wifi.WifiConfigStore: int maxTxPacketForPartialScans>;

        $r59 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i30);

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r61);

     label099:
        goto label101;

     label100:
        $r198 := @caughtexception;

        $r197 = new java.lang.StringBuilder;

        specialinvoke $r197.<java.lang.StringBuilder: void <init>()>();

        $r188 = virtualinvoke $r197.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r189 = virtualinvoke $r188.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r190 = virtualinvoke $r189.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r190);

     label101:
        $z21 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("THRESHOLD_MAX_RX_PACKETS_FOR_PARTIAL_SCANS:   ");

        if $z21 == 0 goto label105;

        r403 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("THRESHOLD_MAX_RX_PACKETS_FOR_PARTIAL_SCANS:   ", "");

        r404 = virtualinvoke r403.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label102:
        $i26 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r404);

        r0.<com.android.server.wifi.WifiConfigStore: int maxRxPacketForNetworkSwitching> = $i26;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: maxRxPacketForPartialScans = ");

        $i27 = r0.<com.android.server.wifi.WifiConfigStore: int maxRxPacketForPartialScans>;

        $r49 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i27);

        $r48 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r50);

     label103:
        goto label105;

     label104:
        $r224 := @caughtexception;

        $r223 = new java.lang.StringBuilder;

        specialinvoke $r223.<java.lang.StringBuilder: void <init>()>();

        $r222 = virtualinvoke $r223.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r221 = virtualinvoke $r222.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r220 = virtualinvoke $r221.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r220);

     label105:
        $z25 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("WIFI_VERBOSE_LOGS:   ");

        if $z25 == 0 goto label109;

        r406 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("WIFI_VERBOSE_LOGS:   ", "");

        r407 = virtualinvoke r406.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label106:
        $i22 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r407);

        r0.<com.android.server.wifi.WifiConfigStore: int enableVerboseLogging> = $i22;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: enable verbose logs = ");

        $i21 = r0.<com.android.server.wifi.WifiConfigStore: int enableVerboseLogging>;

        $r45 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i21);

        $r44 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r43);

     label107:
        goto label109;

     label108:
        $r268 := @caughtexception;

        $r267 = new java.lang.StringBuilder;

        specialinvoke $r267.<java.lang.StringBuilder: void <init>()>();

        $r266 = virtualinvoke $r267.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r265 = virtualinvoke $r266.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r276 = virtualinvoke $r265.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r276);

     label109:
        $z26 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("A_BAND_PREFERENCE_RSSI_THRESHOLD:   ");

        if $z26 == 0 goto label113;

        r409 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("A_BAND_PREFERENCE_RSSI_THRESHOLD:   ", "");

        r410 = virtualinvoke r409.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label110:
        $i17 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r410);

        r0.<com.android.server.wifi.WifiConfigStore: int bandPreferenceBoostThreshold5> = $i17;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: bandPreferenceBoostThreshold5 = ");

        $i20 = r0.<com.android.server.wifi.WifiConfigStore: int bandPreferenceBoostThreshold5>;

        $r41 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i20);

        $r40 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r39);

     label111:
        goto label113;

     label112:
        $r191 := @caughtexception;

        $r192 = new java.lang.StringBuilder;

        specialinvoke $r192.<java.lang.StringBuilder: void <init>()>();

        $r182 = virtualinvoke $r192.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r183 = virtualinvoke $r182.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r184 = virtualinvoke $r183.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r184);

     label113:
        $z23 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("ASSOCIATED_PARTIAL_SCAN_PERIOD:   ");

        if $z23 == 0 goto label117;

        r412 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("ASSOCIATED_PARTIAL_SCAN_PERIOD:   ", "");

        r413 = virtualinvoke r412.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label114:
        $i16 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r413);

        r0.<com.android.server.wifi.WifiConfigStore: int associatedPartialScanPeriodMilli> = $i16;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: associatedScanPeriod = ");

        $i15 = r0.<com.android.server.wifi.WifiConfigStore: int associatedPartialScanPeriodMilli>;

        $r33 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i15);

        $r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r38);

     label115:
        goto label117;

     label116:
        $r213 := @caughtexception;

        $r214 = new java.lang.StringBuilder;

        specialinvoke $r214.<java.lang.StringBuilder: void <init>()>();

        $r212 = virtualinvoke $r214.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r210 = virtualinvoke $r212.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r211 = virtualinvoke $r210.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r211);

     label117:
        $z24 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("ASSOCIATED_FULL_SCAN_BACKOFF_PERIOD:   ");

        if $z24 == 0 goto label121;

        r415 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("ASSOCIATED_FULL_SCAN_BACKOFF_PERIOD:   ", "");

        r416 = virtualinvoke r415.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label118:
        $i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r416);

        r0.<com.android.server.wifi.WifiConfigStore: int associatedFullScanBackoff> = $i11;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: associatedFullScanBackoff = ");

        $i14 = r0.<com.android.server.wifi.WifiConfigStore: int associatedFullScanBackoff>;

        $r29 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i14);

        $r28 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r30);

     label119:
        goto label121;

     label120:
        $r251 := @caughtexception;

        $r250 = new java.lang.StringBuilder;

        specialinvoke $r250.<java.lang.StringBuilder: void <init>()>();

        $r252 = virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r248 = virtualinvoke $r252.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r247 = virtualinvoke $r248.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r247);

     label121:
        $z29 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("G_BAND_PREFERENCE_RSSI_THRESHOLD:   ");

        if $z29 == 0 goto label125;

        r418 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("G_BAND_PREFERENCE_RSSI_THRESHOLD:   ", "");

        r419 = virtualinvoke r418.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label122:
        $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r419);

        r0.<com.android.server.wifi.WifiConfigStore: int bandPreferencePenaltyThreshold5> = $i8;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: bandPreferencePenaltyThreshold5 = ");

        $i12 = r0.<com.android.server.wifi.WifiConfigStore: int bandPreferencePenaltyThreshold5>;

        $r25 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i12);

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r26);

     label123:
        goto label125;

     label124:
        $r317 := @caughtexception;

        $r318 = new java.lang.StringBuilder;

        specialinvoke $r318.<java.lang.StringBuilder: void <init>()>();

        $r319 = virtualinvoke $r318.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r320 = virtualinvoke $r319.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r321 = virtualinvoke $r320.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r321);

     label125:
        $z30 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("ALWAYS_ENABLE_SCAN_WHILE_ASSOCIATED:   ");

        if $z30 == 0 goto label129;

        r421 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("ALWAYS_ENABLE_SCAN_WHILE_ASSOCIATED:   ", "");

        r422 = virtualinvoke r421.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label126:
        $i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r422);

        r0.<com.android.server.wifi.WifiConfigStore: int alwaysEnableScansWhileAssociated> = $i7;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: alwaysEnableScansWhileAssociated = ");

        $i6 = r0.<com.android.server.wifi.WifiConfigStore: int alwaysEnableScansWhileAssociated>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r24);

     label127:
        goto label129;

     label128:
        $r294 := @caughtexception;

        $r295 = new java.lang.StringBuilder;

        specialinvoke $r295.<java.lang.StringBuilder: void <init>()>();

        $r257 = virtualinvoke $r295.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r258 = virtualinvoke $r257.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r256 = virtualinvoke $r258.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r256);

     label129:
        $z27 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("MAX_NUM_PASSIVE_CHANNELS_FOR_PARTIAL_SCANS:   ");

        if $z27 == 0 goto label133;

        r424 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("MAX_NUM_PASSIVE_CHANNELS_FOR_PARTIAL_SCANS:   ", "");

        r425 = virtualinvoke r424.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label130:
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r425);

        r0.<com.android.server.wifi.WifiConfigStore: int maxNumPassiveChannelsForPartialScans> = $i3;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: maxNumPassiveChannelsForPartialScans = ");

        $i4 = r0.<com.android.server.wifi.WifiConfigStore: int maxNumPassiveChannelsForPartialScans>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r16);

     label131:
        goto label133;

     label132:
        $r308 := @caughtexception;

        $r309 = new java.lang.StringBuilder;

        specialinvoke $r309.<java.lang.StringBuilder: void <init>()>();

        $r307 = virtualinvoke $r309.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r311 = virtualinvoke $r307.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r310 = virtualinvoke $r311.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r310);

     label133:
        $z28 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("MAX_NUM_ACTIVE_CHANNELS_FOR_PARTIAL_SCANS:   ");

        if $z28 == 0 goto label137;

        r427 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("MAX_NUM_ACTIVE_CHANNELS_FOR_PARTIAL_SCANS:   ", "");

        r428 = virtualinvoke r427.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

     label134:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r428);

        r0.<com.android.server.wifi.WifiConfigStore: int maxNumActiveChannelsForPartialScans> = $i0;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: maxNumActiveChannelsForPartialScans = ");

        $i1 = r0.<com.android.server.wifi.WifiConfigStore: int maxNumActiveChannelsForPartialScans>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r10);

     label135:
        goto label137;

     label136:
        $r164 := @caughtexception;

        $r165 = new java.lang.StringBuilder;

        specialinvoke $r165.<java.lang.StringBuilder: void <init>()>();

        $r169 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinConfig: incorrect format :");

        $r167 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r168 = virtualinvoke $r167.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r168);

     label137:
        r2 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label002;

     label138:
        goto label150;

     label139:
        $r254 := @caughtexception;

        if r1 == null goto label143;

     label140:
        virtualinvoke r1.<java.io.BufferedReader: void close()>();

        r1 = null;

     label141:
        goto label143;

     label142:
        $r322 := @caughtexception;

        r431 = $r322;

        $r323 = new java.lang.StringBuilder;

        specialinvoke $r323.<java.lang.StringBuilder: void <init>()>();

        $r324 = virtualinvoke $r323.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinStatus: Error closing file");

        $r326 = virtualinvoke $r324.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r431);

        $r325 = virtualinvoke $r326.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r325);

     label143:
        goto label150;

     label144:
        $r185 := @caughtexception;

        if r1 == null goto label148;

     label145:
        virtualinvoke r1.<java.io.BufferedReader: void close()>();

        r1 = null;

     label146:
        goto label148;

     label147:
        $r312 := @caughtexception;

        r433 = $r312;

        $r313 = new java.lang.StringBuilder;

        specialinvoke $r313.<java.lang.StringBuilder: void <init>()>();

        $r314 = virtualinvoke $r313.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinStatus: Error closing file");

        $r315 = virtualinvoke $r314.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r433);

        $r316 = virtualinvoke $r315.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r316);

     label148:
        goto label150;

     label149:
        $r328 := @caughtexception;

        r434 = $r328;

        $r327 = new java.lang.StringBuilder;

        specialinvoke $r327.<java.lang.StringBuilder: void <init>()>();

        $r330 = virtualinvoke $r327.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinStatus: Error parsing configuration");

        $r329 = virtualinvoke $r330.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r434);

        $r332 = virtualinvoke $r329.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r332);

     label150:
        if r1 == null goto label154;

     label151:
        virtualinvoke r1.<java.io.BufferedReader: void close()>();

     label152:
        goto label154;

     label153:
        $r249 := @caughtexception;

        r435 = $r249;

        $r244 = new java.lang.StringBuilder;

        specialinvoke $r244.<java.lang.StringBuilder: void <init>()>();

        $r243 = virtualinvoke $r244.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readAutoJoinStatus: Error closing file");

        $r246 = virtualinvoke $r243.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r435);

        $r245 = virtualinvoke $r246.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r245);

     label154:
        return;

        catch java.lang.NumberFormatException from label004 to label007 with label008;
        catch java.lang.NumberFormatException from label010 to label013 with label014;
        catch java.lang.NumberFormatException from label016 to label019 with label020;
        catch java.lang.NumberFormatException from label022 to label025 with label026;
        catch java.lang.NumberFormatException from label028 to label031 with label032;
        catch java.lang.NumberFormatException from label034 to label035 with label036;
        catch java.lang.NumberFormatException from label038 to label039 with label040;
        catch java.lang.NumberFormatException from label042 to label043 with label044;
        catch java.lang.NumberFormatException from label046 to label047 with label048;
        catch java.lang.NumberFormatException from label050 to label051 with label052;
        catch java.lang.NumberFormatException from label054 to label055 with label056;
        catch java.lang.NumberFormatException from label058 to label059 with label060;
        catch java.lang.NumberFormatException from label062 to label063 with label064;
        catch java.lang.NumberFormatException from label066 to label067 with label068;
        catch java.lang.NumberFormatException from label070 to label071 with label072;
        catch java.lang.NumberFormatException from label074 to label075 with label076;
        catch java.lang.NumberFormatException from label078 to label079 with label080;
        catch java.lang.NumberFormatException from label082 to label083 with label084;
        catch java.lang.NumberFormatException from label086 to label087 with label088;
        catch java.lang.NumberFormatException from label090 to label091 with label092;
        catch java.lang.NumberFormatException from label094 to label095 with label096;
        catch java.lang.NumberFormatException from label098 to label099 with label100;
        catch java.lang.NumberFormatException from label102 to label103 with label104;
        catch java.lang.NumberFormatException from label106 to label107 with label108;
        catch java.lang.NumberFormatException from label110 to label111 with label112;
        catch java.lang.NumberFormatException from label114 to label115 with label116;
        catch java.lang.NumberFormatException from label118 to label119 with label120;
        catch java.lang.NumberFormatException from label122 to label123 with label124;
        catch java.lang.NumberFormatException from label126 to label127 with label128;
        catch java.lang.NumberFormatException from label130 to label131 with label132;
        catch java.lang.NumberFormatException from label134 to label135 with label136;
        catch java.io.EOFException from label001 to label138 with label139;
        catch java.lang.Exception from label140 to label141 with label142;
        catch java.io.FileNotFoundException from label001 to label138 with label144;
        catch java.lang.Exception from label145 to label146 with label147;
        catch java.io.IOException from label001 to label138 with label149;
        catch java.lang.Exception from label151 to label152 with label153;
    }

    private void writeIpAndProxyConfigurations()
    {
        com.android.server.wifi.WifiConfigStore r0;
        android.util.SparseArray r1, $r4;
        java.util.Iterator r2;
        android.net.wifi.WifiConfiguration r3;
        java.util.HashMap $r5;
        java.util.Collection $r6;
        boolean $z0, $z1;
        java.lang.String $r7;
        java.lang.Object $r8;
        int $i0, $i1;
        android.net.IpConfiguration $r9;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r1 = $r4;

        $r5 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.net.wifi.WifiConfiguration) $r8;

        $z1 = r3.<android.net.wifi.WifiConfiguration: boolean ephemeral>;

        if $z1 != 0 goto label2;

        $i0 = r3.<android.net.wifi.WifiConfiguration: int autoJoinStatus>;

        if $i0 == 200 goto label2;

        $i1 = staticinvoke <com.android.server.wifi.WifiConfigStore: int configKey(android.net.wifi.WifiConfiguration)>(r3);

        $r9 = virtualinvoke r3.<android.net.wifi.WifiConfiguration: android.net.IpConfiguration getIpConfiguration()>();

        virtualinvoke r1.<android.util.SparseArray: void put(int,java.lang.Object)>($i1, $r9);

     label2:
        goto label1;

     label3:
        $r7 = <com.android.server.wifi.WifiConfigStore: java.lang.String ipConfigFile>;

        specialinvoke r0.<com.android.server.net.IpConfigStore: void writeIpAndProxyConfigurations(java.lang.String,android.util.SparseArray)>($r7, r1);

        return;
    }

    private void readIpAndProxyConfigurations()
    {
        com.android.server.wifi.WifiConfigStore r0;
        android.util.SparseArray r1;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.net.wifi.WifiConfiguration r2;
        java.lang.String $r3, $r14, $r15;
        java.util.HashMap $r4, $r5;
        java.lang.Integer $r6;
        java.lang.Object $r7, $r8, $r17;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13;
        android.net.IpConfiguration $r16;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        $r3 = <com.android.server.wifi.WifiConfigStore: java.lang.String ipConfigFile>;

        r1 = specialinvoke r0.<com.android.server.net.IpConfigStore: android.util.SparseArray readIpAndProxyConfigurations(java.lang.String)>($r3);

        $i2 = virtualinvoke r1.<android.util.SparseArray: int size()>();

        if $i2 != 0 goto label1;

        return;

     label1:
        i0 = 0;

     label2:
        $i3 = virtualinvoke r1.<android.util.SparseArray: int size()>();

        if i0 >= $i3 goto label6;

        i1 = virtualinvoke r1.<android.util.SparseArray: int keyAt(int)>(i0);

        $r4 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r5 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mNetworkIds>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r7 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

        r2 = (android.net.wifi.WifiConfiguration) $r8;

        if r2 == null goto label3;

        $i5 = r2.<android.net.wifi.WifiConfiguration: int autoJoinStatus>;

        if $i5 != 200 goto label4;

     label3:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("configuration found for missing network, nid=");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ignored, networks.size=");

        $i4 = virtualinvoke r1.<android.util.SparseArray: int size()>();

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r15);

        goto label5;

     label4:
        $r17 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r16 = (android.net.IpConfiguration) $r17;

        virtualinvoke r2.<android.net.wifi.WifiConfiguration: void setIpConfiguration(android.net.IpConfiguration)>($r16);

     label5:
        i0 = i0 + 1;

        goto label2;

     label6:
        return;
    }

    private java.lang.String encodeSSID(java.lang.String)
    {
        com.android.server.wifi.WifiConfigStore r0;
        java.lang.String r1, r2, $r7;
        java.lang.Object[] $r3;
        java.math.BigInteger $r4;
        java.nio.charset.Charset $r5;
        byte[] $r6;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <com.android.server.wifi.WifiConfigStore: java.lang.String removeDoubleQuotes(java.lang.String)>(r1);

        $r3 = newarray (java.lang.Object)[1];

        $r4 = new java.math.BigInteger;

        $r5 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        $r6 = virtualinvoke r2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r5);

        specialinvoke $r4.<java.math.BigInteger: void <init>(int,byte[])>(1, $r6);

        $r3[0] = $r4;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%x", $r3);

        return $r7;
    }

    private com.android.server.wifi.NetworkUpdateResult addOrUpdateNetworkNative(android.net.wifi.WifiConfiguration, int)
    {
        com.android.server.wifi.WifiConfigStore r0;
        android.net.wifi.WifiConfiguration r1, r4, r8, $r61, r248;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i21, $i22, $i23, $i24;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, z36;
        java.lang.Integer r2, $r36, $r43, $r47, $r52, $r98, $r197;
        java.util.Iterator r3, r247;
        java.lang.String r5, r6, r7, r9, r10, r11, $r12, $r13, $r30, $r31, $r34, $r38, $r45, $r49, $r60, $r62, $r64, $r65, $r67, $r69, $r73, $r84, $r90, $r91, $r93, $r101, $r104, $r106, $r109, $r112, $r113, $r115, $r119, $r122, $r124, $r128, $r130, $r133, $r135, $r139, $r141, $r143, $r145, $r150, $r152, $r154, $r155, $r160, $r166, $r171, $r179, $r184, $r189, $r191, $r192, $r194, $r203, $r204, $r206, $r209, $r211, $r213, $r216, $r218, $r219, $r224, $r226, $r227, $r231, $r233, $r238, $r239, r242, r243;
        java.util.BitSet $r14, $r16, $r18, $r19, $r20, $r23, $r24, $r25, $r26, $r28;
        java.lang.String[] $r15, $r17, $r21, $r22, $r27, $r29, $r138, $r140, $r142, $r144, $r147, $r159;
        com.android.server.wifi.WifiNative $r32, $r76, $r86, $r107, $r114, $r117, $r131, $r151, $r161, $r165, $r170, $r175, $r182, $r187, $r201, $r207, $r214;
        android.net.wifi.WifiEnterpriseConfig $r33, $r71, r244;
        java.lang.Object $r35, $r77, $r78, $r87, $r196, $r237;
        java.util.HashMap $r37, $r42, $r46, $r99, $r198, $r235, r246;
        java.lang.StringBuilder $r39, $r40, $r44, $r48, $r50, $r51, $r54, $r57, $r58, $r59, $r63, $r66, $r68, $r72, $r74, $r75, $r80, $r81, $r82, $r83, $r85, $r88, $r89, $r92, $r94, $r100, $r102, $r103, $r105, $r108, $r110, $r111, $r118, $r120, $r121, $r123, $r125, $r126, $r127, $r129, $r132, $r134, $r136, $r137, $r146, $r148, $r149, $r153, $r156, $r157, $r158, $r162, $r163, $r164, $r167, $r168, $r169, $r172, $r173, $r174, $r176, $r177, $r178, $r180, $r181, $r183, $r185, $r186, $r188, $r190, $r193, $r195, $r199, $r200, $r202, $r205, $r208, $r210, $r212, $r215, $r217, $r220, $r221, $r222, $r223, $r228, $r229, $r230, $r232, $r240, $r241;
        android.net.IpConfiguration$ProxySettings $r55;
        android.net.IpConfiguration$IpAssignment $r56;
        com.android.server.wifi.NetworkUpdateResult $r70, $r234, r249;
        java.util.Set $r79;
        android.security.KeyStore $r95;
        android.security.KeyStore$State $r96, $r97;
        byte $b20;
        java.lang.IllegalStateException $r225;
        java.util.Collection $r236;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WifiConfiguration;

        i0 := @parameter1: int;

        $z2 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z2 == 0 goto label01;

        $r222 = new java.lang.StringBuilder;

        specialinvoke $r222.<java.lang.StringBuilder: void <init>()>();

        $r221 = virtualinvoke $r222.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addOrUpdateNetworkNative ");

        $r224 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: java.lang.String getPrintableSsid()>();

        $r223 = virtualinvoke $r221.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r224);

        $r226 = virtualinvoke $r223.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String)>($r226);

     label01:
        i1 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        z0 = 0;

        if i1 != -1 goto label07;

        $r198 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mNetworkIds>;

        $i23 = staticinvoke <com.android.server.wifi.WifiConfigStore: int configKey(android.net.wifi.WifiConfiguration)>(r1);

        $r197 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i23);

        $r196 = virtualinvoke $r198.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r197);

        r2 = (java.lang.Integer) $r196;

        if r2 != null goto label04;

        $r235 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r236 = virtualinvoke $r235.<java.util.HashMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r236.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z34 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z34 == 0 goto label04;

        $r237 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.net.wifi.WifiConfiguration) $r237;

        $r238 = virtualinvoke r4.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r239 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $z35 = virtualinvoke $r238.<java.lang.String: boolean equals(java.lang.Object)>($r239);

        if $z35 == 0 goto label03;

        $i24 = r4.<android.net.wifi.WifiConfiguration: int networkId>;

        r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i24);

        $r240 = new java.lang.StringBuilder;

        specialinvoke $r240.<java.lang.StringBuilder: void <init>()>();

        $r241 = virtualinvoke $r240.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addOrUpdateNetworkNative ");

        $r218 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r217 = virtualinvoke $r241.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r218);

        $r220 = virtualinvoke $r217.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was found, but no network Id");

        $r219 = virtualinvoke $r220.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r219);

        goto label04;

     label03:
        goto label02;

     label04:
        if r2 == null goto label05;

        i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        goto label07;

     label05:
        z0 = 1;

        $r201 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        i1 = virtualinvoke $r201.<com.android.server.wifi.WifiNative: int addNetwork()>();

        if i1 >= 0 goto label06;

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>("Failed to add a network!");

        $r234 = new com.android.server.wifi.NetworkUpdateResult;

        specialinvoke $r234.<com.android.server.wifi.NetworkUpdateResult: void <init>(int)>(-1);

        return $r234;

     label06:
        $r200 = new java.lang.StringBuilder;

        specialinvoke $r200.<java.lang.StringBuilder: void <init>()>();

        $r199 = virtualinvoke $r200.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addOrUpdateNetworkNative created netId=");

        $r232 = virtualinvoke $r199.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r233 = virtualinvoke $r232.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r233);

     label07:
        z36 = 1;

        $r13 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        if $r13 == null goto label08;

        $r214 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $r213 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r191 = specialinvoke r0.<com.android.server.wifi.WifiConfigStore: java.lang.String encodeSSID(java.lang.String)>($r213);

        $z32 = virtualinvoke $r214.<com.android.server.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i1, "ssid", $r191);

        if $z32 != 0 goto label08;

        $r190 = new java.lang.StringBuilder;

        specialinvoke $r190.<java.lang.StringBuilder: void <init>()>();

        $r195 = virtualinvoke $r190.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to set SSID: ");

        $r194 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r193 = virtualinvoke $r195.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r194);

        $r192 = virtualinvoke $r193.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r192);

        goto label36;

     label08:
        $r12 = r1.<android.net.wifi.WifiConfiguration: java.lang.String BSSID>;

        if $r12 == null goto label09;

        $r176 = new java.lang.StringBuilder;

        specialinvoke $r176.<java.lang.StringBuilder: void <init>()>();

        $r177 = virtualinvoke $r176.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting BSSID for ");

        $r204 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r205 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r204);

        $r202 = virtualinvoke $r205.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r203 = r1.<android.net.wifi.WifiConfiguration: java.lang.String BSSID>;

        $r208 = virtualinvoke $r202.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r203);

        $r209 = virtualinvoke $r208.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r209);

        $r207 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $r206 = r1.<android.net.wifi.WifiConfiguration: java.lang.String BSSID>;

        $z33 = virtualinvoke $r207.<com.android.server.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i1, "bssid", $r206);

        if $z33 != 0 goto label09;

        $r212 = new java.lang.StringBuilder;

        specialinvoke $r212.<java.lang.StringBuilder: void <init>()>();

        $r210 = virtualinvoke $r212.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to set BSSID: ");

        $r211 = r1.<android.net.wifi.WifiConfiguration: java.lang.String BSSID>;

        $r215 = virtualinvoke $r210.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r211);

        $r216 = virtualinvoke $r215.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r216);

        goto label36;

     label09:
        $r14 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        $r15 = <android.net.wifi.WifiConfiguration$KeyMgmt: java.lang.String[] strings>;

        r242 = staticinvoke <com.android.server.wifi.WifiConfigStore: java.lang.String makeString(java.util.BitSet,java.lang.String[])>($r14, $r15);

        $r16 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        $i3 = virtualinvoke $r16.<java.util.BitSet: int cardinality()>();

        if $i3 == 0 goto label10;

        $r182 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $z30 = virtualinvoke $r182.<com.android.server.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i1, "key_mgmt", r242);

        if $z30 != 0 goto label10;

        $r180 = new java.lang.StringBuilder;

        specialinvoke $r180.<java.lang.StringBuilder: void <init>()>();

        $r181 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to set key_mgmt: ");

        $r178 = virtualinvoke $r181.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r242);

        $r179 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r179);

        goto label36;

     label10:
        $r18 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedProtocols>;

        $r17 = <android.net.wifi.WifiConfiguration$Protocol: java.lang.String[] strings>;

        r243 = staticinvoke <com.android.server.wifi.WifiConfigStore: java.lang.String makeString(java.util.BitSet,java.lang.String[])>($r18, $r17);

        $r19 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedProtocols>;

        $i4 = virtualinvoke $r19.<java.util.BitSet: int cardinality()>();

        if $i4 == 0 goto label11;

        $r187 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $z31 = virtualinvoke $r187.<com.android.server.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i1, "proto", r243);

        if $z31 != 0 goto label11;

        $r185 = new java.lang.StringBuilder;

        specialinvoke $r185.<java.lang.StringBuilder: void <init>()>();

        $r186 = virtualinvoke $r185.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to set proto: ");

        $r183 = virtualinvoke $r186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r243);

        $r184 = virtualinvoke $r183.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r184);

        goto label36;

     label11:
        $r20 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedAuthAlgorithms>;

        $r21 = <android.net.wifi.WifiConfiguration$AuthAlgorithm: java.lang.String[] strings>;

        r5 = staticinvoke <com.android.server.wifi.WifiConfigStore: java.lang.String makeString(java.util.BitSet,java.lang.String[])>($r20, $r21);

        $r23 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedAuthAlgorithms>;

        $i5 = virtualinvoke $r23.<java.util.BitSet: int cardinality()>();

        if $i5 == 0 goto label12;

        $r165 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $z27 = virtualinvoke $r165.<com.android.server.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i1, "auth_alg", r5);

        if $z27 != 0 goto label12;

        $r164 = new java.lang.StringBuilder;

        specialinvoke $r164.<java.lang.StringBuilder: void <init>()>();

        $r163 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to set auth_alg: ");

        $r188 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r189 = virtualinvoke $r188.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r189);

        goto label36;

     label12:
        $r25 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedPairwiseCiphers>;

        $r22 = <android.net.wifi.WifiConfiguration$PairwiseCipher: java.lang.String[] strings>;

        r6 = staticinvoke <com.android.server.wifi.WifiConfigStore: java.lang.String makeString(java.util.BitSet,java.lang.String[])>($r25, $r22);

        $r24 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedPairwiseCiphers>;

        $i6 = virtualinvoke $r24.<java.util.BitSet: int cardinality()>();

        if $i6 == 0 goto label13;

        $r170 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $z28 = virtualinvoke $r170.<com.android.server.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i1, "pairwise", r6);

        if $z28 != 0 goto label13;

        $r169 = new java.lang.StringBuilder;

        specialinvoke $r169.<java.lang.StringBuilder: void <init>()>();

        $r168 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to set pairwise: ");

        $r167 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r166 = virtualinvoke $r167.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r166);

        goto label36;

     label13:
        $r28 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedGroupCiphers>;

        $r27 = <android.net.wifi.WifiConfiguration$GroupCipher: java.lang.String[] strings>;

        r7 = staticinvoke <com.android.server.wifi.WifiConfigStore: java.lang.String makeString(java.util.BitSet,java.lang.String[])>($r28, $r27);

        $r26 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedGroupCiphers>;

        $i8 = virtualinvoke $r26.<java.util.BitSet: int cardinality()>();

        if $i8 == 0 goto label14;

        $r175 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $z29 = virtualinvoke $r175.<com.android.server.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i1, "group", r7);

        if $z29 != 0 goto label14;

        $r174 = new java.lang.StringBuilder;

        specialinvoke $r174.<java.lang.StringBuilder: void <init>()>();

        $r173 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to set group: ");

        $r172 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r171 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r171);

        goto label36;

     label14:
        $r30 = r1.<android.net.wifi.WifiConfiguration: java.lang.String preSharedKey>;

        if $r30 == null goto label15;

        $r155 = r1.<android.net.wifi.WifiConfiguration: java.lang.String preSharedKey>;

        $z24 = virtualinvoke $r155.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z24 != 0 goto label15;

        $r151 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $r150 = r1.<android.net.wifi.WifiConfiguration: java.lang.String preSharedKey>;

        $z25 = virtualinvoke $r151.<com.android.server.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i1, "psk", $r150);

        if $z25 != 0 goto label15;

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>("failed to set psk");

        goto label36;

     label15:
        z1 = 0;

        $r29 = r1.<android.net.wifi.WifiConfiguration: java.lang.String[] wepKeys>;

        if $r29 == null goto label19;

        i2 = 0;

     label16:
        $r147 = r1.<android.net.wifi.WifiConfiguration: java.lang.String[] wepKeys>;

        $i21 = lengthof $r147;

        if i2 >= $i21 goto label19;

        $r142 = r1.<android.net.wifi.WifiConfiguration: java.lang.String[] wepKeys>;

        $r141 = $r142[i2];

        if $r141 == null goto label18;

        $r144 = r1.<android.net.wifi.WifiConfiguration: java.lang.String[] wepKeys>;

        $r143 = $r144[i2];

        $z22 = virtualinvoke $r143.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z22 != 0 goto label18;

        $r161 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $r138 = <android.net.wifi.WifiConfiguration: java.lang.String[] wepKeyVarNames>;

        $r160 = $r138[i2];

        $r140 = r1.<android.net.wifi.WifiConfiguration: java.lang.String[] wepKeys>;

        $r139 = $r140[i2];

        $z26 = virtualinvoke $r161.<com.android.server.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i1, $r160, $r139);

        if $z26 != 0 goto label17;

        $r162 = new java.lang.StringBuilder;

        specialinvoke $r162.<java.lang.StringBuilder: void <init>()>();

        $r156 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to set wep_key");

        $r157 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r158 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r159 = r1.<android.net.wifi.WifiConfiguration: java.lang.String[] wepKeys>;

        $r152 = $r159[i2];

        $r153 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r152);

        $r154 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r154);

        goto label36;

     label17:
        z1 = 1;

     label18:
        i2 = i2 + 1;

        goto label16;

     label19:
        if z1 == 0 goto label20;

        $r131 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $i19 = r1.<android.net.wifi.WifiConfiguration: int wepTxKeyIndex>;

        $r130 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i19);

        $z23 = virtualinvoke $r131.<com.android.server.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i1, "wep_tx_keyidx", $r130);

        if $z23 != 0 goto label20;

        $r148 = new java.lang.StringBuilder;

        specialinvoke $r148.<java.lang.StringBuilder: void <init>()>();

        $r149 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to set wep_tx_keyidx: ");

        $i22 = r1.<android.net.wifi.WifiConfiguration: int wepTxKeyIndex>;

        $r146 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);

        $r145 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r145);

        goto label36;

     label20:
        $r32 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $i7 = r1.<android.net.wifi.WifiConfiguration: int priority>;

        $r31 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7);

        $z3 = virtualinvoke $r32.<com.android.server.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i1, "priority", $r31);

        if $z3 != 0 goto label21;

        $r137 = new java.lang.StringBuilder;

        specialinvoke $r137.<java.lang.StringBuilder: void <init>()>();

        $r135 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r136 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r135);

        $r129 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": failed to set priority: ");

        $i18 = r1.<android.net.wifi.WifiConfiguration: int priority>;

        $r127 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r128);

        goto label36;

     label21:
        $z5 = r1.<android.net.wifi.WifiConfiguration: boolean hiddenSSID>;

        if $z5 == 0 goto label24;

        $r117 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $z17 = r1.<android.net.wifi.WifiConfiguration: boolean hiddenSSID>;

        if $z17 == 0 goto label22;

        $b20 = 1;

        goto label23;

     label22:
        $b20 = 0;

     label23:
        $r115 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($b20);

        $z18 = virtualinvoke $r117.<com.android.server.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i1, "scan_ssid", $r115);

        if $z18 != 0 goto label24;

        $r120 = new java.lang.StringBuilder;

        specialinvoke $r120.<java.lang.StringBuilder: void <init>()>();

        $r119 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r118 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r119);

        $r134 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": failed to set hiddenSSID: ");

        $z21 = r1.<android.net.wifi.WifiConfiguration: boolean hiddenSSID>;

        $r132 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z21);

        $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r133);

        goto label36;

     label24:
        $z4 = r1.<android.net.wifi.WifiConfiguration: boolean requirePMF>;

        if $z4 == 0 goto label25;

        $r107 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $z19 = virtualinvoke $r107.<com.android.server.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i1, "ieee80211w", "2");

        if $z19 != 0 goto label25;

        $r123 = new java.lang.StringBuilder;

        specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();

        $r122 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r121 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r122);

        $r126 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": failed to set requirePMF: ");

        $z20 = r1.<android.net.wifi.WifiConfiguration: boolean requirePMF>;

        $r125 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z20);

        $r124 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r124);

        goto label36;

     label25:
        $r34 = r1.<android.net.wifi.WifiConfiguration: java.lang.String updateIdentifier>;

        if $r34 == null goto label26;

        $r114 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $r113 = r1.<android.net.wifi.WifiConfiguration: java.lang.String updateIdentifier>;

        $z16 = virtualinvoke $r114.<com.android.server.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i1, "update_identifier", $r113);

        if $z16 != 0 goto label26;

        $r100 = new java.lang.StringBuilder;

        specialinvoke $r100.<java.lang.StringBuilder: void <init>()>();

        $r101 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r102 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r101);

        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": failed to set updateIdentifier: ");

        $r104 = r1.<android.net.wifi.WifiConfiguration: java.lang.String updateIdentifier>;

        $r105 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r104);

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r106);

        goto label36;

     label26:
        $r33 = r1.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiEnterpriseConfig enterpriseConfig>;

        if $r33 == null goto label35;

        $r71 = r1.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiEnterpriseConfig enterpriseConfig>;

        $i17 = virtualinvoke $r71.<android.net.wifi.WifiEnterpriseConfig: int getEapMethod()>();

        if $i17 == -1 goto label35;

        r244 = r1.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiEnterpriseConfig enterpriseConfig>;

        $z12 = staticinvoke <com.android.server.wifi.WifiConfigStore: boolean needsKeyStore(android.net.wifi.WifiEnterpriseConfig)>(r244);

        if $z12 == 0 goto label31;

        $r95 = r0.<com.android.server.wifi.WifiConfigStore: android.security.KeyStore mKeyStore>;

        $r97 = virtualinvoke $r95.<android.security.KeyStore: android.security.KeyStore$State state()>();

        $r96 = <android.security.KeyStore$State: android.security.KeyStore$State UNLOCKED>;

        if $r97 == $r96 goto label27;

        $r108 = new java.lang.StringBuilder;

        specialinvoke $r108.<java.lang.StringBuilder: void <init>()>();

        $r109 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r110 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r109);

        $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": key store is locked");

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r112);

        goto label36;

     label27:
        $r99 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r98 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r87 = virtualinvoke $r99.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r98);

        r8 = (android.net.wifi.WifiConfiguration) $r87;

        r9 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: java.lang.String getKeyIdForCredentials(android.net.wifi.WifiConfiguration)>(r8);

        $z14 = virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: boolean installKeys(android.net.wifi.WifiEnterpriseConfig,java.lang.String)>(r244, r9);

        if $z14 != 0 goto label29;

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r90 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r90);

        $r92 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": failed to install keys");

        $r91 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r91);

     label28:
        goto label36;

     label29:
        goto label31;

     label30:
        $r225 := @caughtexception;

        $r228 = new java.lang.StringBuilder;

        specialinvoke $r228.<java.lang.StringBuilder: void <init>()>();

        $r227 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r230 = virtualinvoke $r228.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r227);

        $r229 = virtualinvoke $r230.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" invalid config for key installation");

        $r231 = virtualinvoke $r229.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r231);

        goto label36;

     label31:
        r246 = virtualinvoke r244.<android.net.wifi.WifiEnterpriseConfig: java.util.HashMap getFields()>();

        $r79 = virtualinvoke r246.<java.util.HashMap: java.util.Set keySet()>();

        r247 = interfaceinvoke $r79.<java.util.Set: java.util.Iterator iterator()>();

     label32:
        $z11 = interfaceinvoke r247.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label35;

        $r78 = interfaceinvoke r247.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r78;

        $r77 = virtualinvoke r246.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r10);

        r11 = (java.lang.String) $r77;

        $z10 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("password");

        if $z10 == 0 goto label33;

        if r11 == null goto label33;

        $z15 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z15 == 0 goto label33;

        goto label32;

     label33:
        $r86 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $z13 = virtualinvoke $r86.<com.android.server.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i1, r10, r11);

        if $z13 != 0 goto label34;

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void removeKeys(android.net.wifi.WifiEnterpriseConfig)>(r244);

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        $r84 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r83 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84);

        $r82 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": failed to set ");

        $r81 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r80 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r94 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r93 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r93);

        goto label36;

     label34:
        goto label32;

     label35:
        z36 = 0;

     label36:
        if z36 == 0 goto label38;

        if z0 == 0 goto label37;

        $r76 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        virtualinvoke $r76.<com.android.server.wifi.WifiNative: boolean removeNetwork(int)>(i1);

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to set a network variable, removed network: ");

        $r72 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r73);

     label37:
        $r70 = new com.android.server.wifi.NetworkUpdateResult;

        specialinvoke $r70.<com.android.server.wifi.NetworkUpdateResult: void <init>(int)>(-1);

        return $r70;

     label38:
        $r37 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r35 = virtualinvoke $r37.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r36);

        r248 = (android.net.wifi.WifiConfiguration) $r35;

        if r248 != null goto label40;

        $r61 = new android.net.wifi.WifiConfiguration;

        specialinvoke $r61.<android.net.wifi.WifiConfiguration: void <init>()>();

        r248 = $r61;

        $r56 = <android.net.IpConfiguration$IpAssignment: android.net.IpConfiguration$IpAssignment DHCP>;

        virtualinvoke r248.<android.net.wifi.WifiConfiguration: void setIpAssignment(android.net.IpConfiguration$IpAssignment)>($r56);

        $r55 = <android.net.IpConfiguration$ProxySettings: android.net.IpConfiguration$ProxySettings NONE>;

        virtualinvoke r248.<android.net.wifi.WifiConfiguration: void setProxySettings(android.net.IpConfiguration$ProxySettings)>($r55);

        r248.<android.net.wifi.WifiConfiguration: int networkId> = i1;

        if r1 == null goto label39;

        $z6 = r1.<android.net.wifi.WifiConfiguration: boolean selfAdded>;

        r248.<android.net.wifi.WifiConfiguration: boolean selfAdded> = $z6;

        $z7 = r1.<android.net.wifi.WifiConfiguration: boolean didSelfAdd>;

        r248.<android.net.wifi.WifiConfiguration: boolean didSelfAdd> = $z7;

        $z8 = r1.<android.net.wifi.WifiConfiguration: boolean ephemeral>;

        r248.<android.net.wifi.WifiConfiguration: boolean ephemeral> = $z8;

        $i15 = r1.<android.net.wifi.WifiConfiguration: int autoJoinUseAggressiveJoinAttemptThreshold>;

        r248.<android.net.wifi.WifiConfiguration: int autoJoinUseAggressiveJoinAttemptThreshold> = $i15;

        $i16 = r1.<android.net.wifi.WifiConfiguration: int lastConnectUid>;

        r248.<android.net.wifi.WifiConfiguration: int lastConnectUid> = $i16;

        $i13 = r1.<android.net.wifi.WifiConfiguration: int lastUpdateUid>;

        r248.<android.net.wifi.WifiConfiguration: int lastUpdateUid> = $i13;

        $i14 = r1.<android.net.wifi.WifiConfiguration: int creatorUid>;

        r248.<android.net.wifi.WifiConfiguration: int creatorUid> = $i14;

        $r69 = r1.<android.net.wifi.WifiConfiguration: java.lang.String peerWifiConfiguration>;

        r248.<android.net.wifi.WifiConfiguration: java.lang.String peerWifiConfiguration> = $r69;

     label39:
        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("created new config netId=");

        $r67 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        $r66 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        $i12 = r248.<android.net.wifi.WifiConfiguration: int creatorUid>;

        $r64 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i12);

        $r63 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r65);

     label40:
        if i0 < 0 goto label42;

        if z0 == 0 goto label41;

        r248.<android.net.wifi.WifiConfiguration: int creatorUid> = i0;

        goto label42;

     label41:
        r248.<android.net.wifi.WifiConfiguration: int lastUpdateUid> = i0;

     label42:
        if z0 == 0 goto label43;

        r248.<android.net.wifi.WifiConfiguration: boolean dirty> = 1;

     label43:
        $i9 = r248.<android.net.wifi.WifiConfiguration: int autoJoinStatus>;

        if $i9 != 200 goto label44;

        virtualinvoke r248.<android.net.wifi.WifiConfiguration: void setAutoJoinStatus(int)>(0);

        r248.<android.net.wifi.WifiConfiguration: boolean selfAdded> = 0;

        r248.<android.net.wifi.WifiConfiguration: boolean didSelfAdd> = 0;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remove deleted status netId=");

        $r49 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r60 = virtualinvoke r248.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r59 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r62);

     label44:
        $i10 = r248.<android.net.wifi.WifiConfiguration: int status>;

        if $i10 != 2 goto label45;

        virtualinvoke r248.<android.net.wifi.WifiConfiguration: void setAutoJoinStatus(int)>(0);

     label45:
        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("will read network variables netId=");

        $r38 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        $r44 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r45);

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void readNetworkVariables(android.net.wifi.WifiConfiguration)>(r248);

        $r46 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r47 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke $r46.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r47, r248);

        $r42 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mNetworkIds>;

        $i11 = staticinvoke <com.android.server.wifi.WifiConfigStore: int configKey(android.net.wifi.WifiConfiguration)>(r248);

        $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        $r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke $r42.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r43, $r52);

        r249 = specialinvoke r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.NetworkUpdateResult writeIpAndProxyConfigurationsOnChange(android.net.wifi.WifiConfiguration,android.net.wifi.WifiConfiguration)>(r248, r1);

        virtualinvoke r249.<com.android.server.wifi.NetworkUpdateResult: void setIsNewNetwork(boolean)>(z0);

        virtualinvoke r249.<com.android.server.wifi.NetworkUpdateResult: void setNetworkId(int)>(i1);

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void writeKnownNetworkHistory()>();

        return r249;

        catch java.lang.IllegalStateException from label27 to label28 with label30;
    }

    public void linkConfiguration(android.net.wifi.WifiConfiguration)
    {
        com.android.server.wifi.WifiConfigStore r0;
        android.net.wifi.WifiConfiguration r1, r3;
        java.util.Iterator r2, r4, r6;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        java.lang.String r5, r7, $r12, $r14, $r17, $r24, $r25, $r28, $r33, $r35, $r38, $r41, $r45, $r47, $r49, $r50, $r55, $r60, $r67, $r70, $r72, $r74, $r75, $r77, $r88, $r91, $r94, $r95, $r96, $r97, $r105, $r107, $r112, $r113, r115, r116;
        java.util.HashMap $r8, $r10, $r18, $r19, $r20, $r21, $r22, $r27, $r37, $r42, $r51, $r52, $r53, $r54, $r59, $r62, $r63, $r66, $r79, $r80, $r81, $r82, $r84, $r106, $r108;
        java.util.BitSet $r9, $r15, $r16;
        java.util.Collection $r11;
        java.lang.Object $r13, $r23, $r36, $r58, $r61, $r83, $r86;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.StringBuilder $r29, $r30, $r31, $r32, $r34, $r39, $r43, $r44, $r46, $r48, $r64, $r65, $r71, $r73, $r76, $r87, $r89, $r90, $r92, $r93, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r109, $r110, $r111, $r114;
        java.lang.Integer $r56, $r68;
        java.util.Set $r78, $r85;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WifiConfiguration;

        $r8 = r1.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        if $r8 == null goto label01;

        $r108 = r1.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        $i4 = virtualinvoke $r108.<java.util.HashMap: int size()>();

        if $i4 <= 6 goto label01;

        return;

     label01:
        $r9 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        $z1 = virtualinvoke $r9.<java.util.BitSet: boolean get(int)>(1);

        if $z1 != 0 goto label02;

        return;

     label02:
        $r10 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label27;

        $r13 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.net.wifi.WifiConfiguration) $r13;

        z0 = 0;

        $r12 = virtualinvoke r3.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r14 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z3 == 0 goto label04;

        goto label03;

     label04:
        $i0 = r3.<android.net.wifi.WifiConfiguration: int autoJoinStatus>;

        if $i0 != 200 goto label05;

        goto label03;

     label05:
        $r16 = r3.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        $r15 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        $z4 = virtualinvoke $r16.<java.util.BitSet: boolean equals(java.lang.Object)>($r15);

        if $z4 != 0 goto label06;

        goto label03;

     label06:
        $r18 = r3.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        if $r18 == null goto label07;

        $r106 = r3.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        $i3 = virtualinvoke $r106.<java.util.HashMap: int size()>();

        if $i3 <= 6 goto label07;

        goto label03;

     label07:
        $r17 = r1.<android.net.wifi.WifiConfiguration: java.lang.String defaultGwMacAddress>;

        if $r17 == null goto label09;

        $r96 = r3.<android.net.wifi.WifiConfiguration: java.lang.String defaultGwMacAddress>;

        if $r96 == null goto label09;

        $r94 = r1.<android.net.wifi.WifiConfiguration: java.lang.String defaultGwMacAddress>;

        $r95 = r3.<android.net.wifi.WifiConfiguration: java.lang.String defaultGwMacAddress>;

        $z19 = virtualinvoke $r94.<java.lang.String: boolean equals(java.lang.Object)>($r95);

        if $z19 == 0 goto label15;

        $z18 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z18 == 0 goto label08;

        $r110 = new java.lang.StringBuilder;

        specialinvoke $r110.<java.lang.StringBuilder: void <init>()>();

        $r109 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("linkConfiguration link due to same gw ");

        $r112 = r3.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r111 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r112);

        $r114 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r113 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r103 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r113);

        $r102 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" GW ");

        $r105 = r1.<android.net.wifi.WifiConfiguration: java.lang.String defaultGwMacAddress>;

        $r104 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r105);

        $r107 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r107);

     label08:
        z0 = 1;

        goto label15;

     label09:
        $r20 = r1.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        if $r20 == null goto label15;

        $r82 = r1.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        $i2 = virtualinvoke $r82.<java.util.HashMap: int size()>();

        if $i2 > 6 goto label15;

        $r80 = r3.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        if $r80 == null goto label15;

        $r81 = r3.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        $i1 = virtualinvoke $r81.<java.util.HashMap: int size()>();

        if $i1 > 6 goto label15;

        $r79 = r1.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        $r78 = virtualinvoke $r79.<java.util.HashMap: java.util.Set keySet()>();

        r4 = interfaceinvoke $r78.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z16 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label15;

        $r86 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r86;

        $r84 = r3.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        $r85 = virtualinvoke $r84.<java.util.HashMap: java.util.Set keySet()>();

        r6 = interfaceinvoke $r85.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        $z15 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label14;

        $r83 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r83;

        $z14 = <com.android.server.wifi.WifiConfigStore: boolean VVDBG>;

        if $z14 == 0 goto label12;

        $r93 = new java.lang.StringBuilder;

        specialinvoke $r93.<java.lang.StringBuilder: void <init>()>();

        $r92 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("linkConfiguration try to link due to DBDC BSSID match ");

        $r91 = r3.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r90 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r91);

        $r89 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r88 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r87 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r88);

        $r101 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bssida ");

        $r100 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r99 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bssidb ");

        $r98 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r97 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r97);

     label12:
        $z17 = virtualinvoke r5.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, r7, 0, 16);

        if $z17 == 0 goto label13;

        z0 = 1;

     label13:
        goto label11;

     label14:
        goto label10;

     label15:
        if z0 != 1 goto label17;

        $z8 = r0.<com.android.server.wifi.WifiConfigStore: boolean onlyLinkSameCredentialConfigurations>;

        if $z8 == 0 goto label17;

        $r72 = r3.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        r115 = specialinvoke r0.<com.android.server.wifi.WifiConfigStore: java.lang.String readNetworkVariableFromSupplicantFile(java.lang.String,java.lang.String)>($r72, "psk");

        $r77 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        r116 = specialinvoke r0.<com.android.server.wifi.WifiConfigStore: java.lang.String readNetworkVariableFromSupplicantFile(java.lang.String,java.lang.String)>($r77, "psk");

        if r115 == null goto label16;

        if r116 == null goto label16;

        $z13 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r115);

        if $z13 != 0 goto label16;

        $z10 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r115);

        if $z10 != 0 goto label16;

        $z9 = virtualinvoke r115.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z9 != 0 goto label16;

        $z12 = virtualinvoke r115.<java.lang.String: boolean equals(java.lang.Object)>("Mjkd86jEMGn79KhKll298Uu7-deleted");

        if $z12 != 0 goto label16;

        $z11 = virtualinvoke r115.<java.lang.String: boolean equals(java.lang.Object)>(r116);

        if $z11 != 0 goto label17;

     label16:
        z0 = 0;

     label17:
        if z0 == 0 goto label22;

        $z7 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z7 == 0 goto label18;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("linkConfiguration: will link ");

        $r74 = virtualinvoke r3.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r73 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r76 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r75 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r71 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);

        $r70 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r70);

     label18:
        $r53 = r3.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations>;

        if $r53 != null goto label19;

        $r63 = new java.util.HashMap;

        specialinvoke $r63.<java.util.HashMap: void <init>()>();

        r3.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations> = $r63;

     label19:
        $r52 = r1.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations>;

        if $r52 != null goto label20;

        $r62 = new java.util.HashMap;

        specialinvoke $r62.<java.util.HashMap: void <init>()>();

        r1.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations> = $r62;

     label20:
        $r51 = r3.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations>;

        $r50 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r58 = virtualinvoke $r51.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r50);

        if $r58 != null goto label21;

        $r66 = r3.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations>;

        $r67 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r68 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r66.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r67, $r68);

        r3.<android.net.wifi.WifiConfiguration: boolean dirty> = 1;

     label21:
        $r59 = r1.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations>;

        $r60 = virtualinvoke r3.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r61 = virtualinvoke $r59.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r60);

        if $r61 != null goto label26;

        $r54 = r1.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations>;

        $r55 = virtualinvoke r3.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r54.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r55, $r56);

        r1.<android.net.wifi.WifiConfiguration: boolean dirty> = 1;

        goto label26;

     label22:
        $r19 = r3.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations>;

        if $r19 == null goto label24;

        $r37 = r3.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations>;

        $r38 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r36 = virtualinvoke $r37.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r38);

        if $r36 == null goto label24;

        $z6 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z6 == 0 goto label23;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("linkConfiguration: un-link ");

        $r45 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r44 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r49 = virtualinvoke r3.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r48 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r47);

     label23:
        r3.<android.net.wifi.WifiConfiguration: boolean dirty> = 1;

        $r42 = r3.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations>;

        $r41 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        virtualinvoke $r42.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r41);

     label24:
        $r22 = r1.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations>;

        if $r22 == null goto label26;

        $r21 = r1.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations>;

        $r24 = virtualinvoke r3.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r23 = virtualinvoke $r21.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r24);

        if $r23 == null goto label26;

        $z5 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z5 == 0 goto label25;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("linkConfiguration: un-link ");

        $r28 = virtualinvoke r3.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r35 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r33);

     label25:
        r1.<android.net.wifi.WifiConfiguration: boolean dirty> = 1;

        $r27 = r1.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations>;

        $r25 = virtualinvoke r3.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        virtualinvoke $r27.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r25);

     label26:
        goto label03;

     label27:
        return;
    }

    public android.net.wifi.WifiConfiguration associateWithConfiguration(android.net.wifi.ScanResult)
    {
        com.android.server.wifi.WifiConfigStore r0;
        android.net.wifi.ScanResult r1;
        java.lang.String r2, r3, r8, $r11, $r18, $r20, $r24, $r25, $r30, $r32, $r36, $r39, $r44, $r49, $r51, $r54, $r57, $r63, $r64, $r66, $r68, $r69, $r72, r75;
        android.net.wifi.WifiConfiguration r4, r6;
        java.util.Iterator r5, r7;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        java.lang.StringBuilder $r9, $r10, $r12, $r13, $r17, $r19, $r21, $r43, $r45, $r46, $r47, $r48, $r50, $r52, $r53, $r60, $r61, $r62, $r65, $r67, $r70, $r71, $r73, $r74;
        java.util.Collection $r14;
        java.util.HashMap $r15, $r23, $r29, $r33, $r34, $r37, $r40, $r41, $r58, $r59;
        int $i0, $i1;
        java.lang.Object $r16, $r56;
        java.util.BitSet $r22, $r26, $r27, $r28;
        java.lang.Integer $r31, $r35;
        java.util.Set $r55;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.ScanResult;

        r2 = staticinvoke <android.net.wifi.WifiConfiguration: java.lang.String configKey(android.net.wifi.ScanResult)>(r1);

        if r2 != null goto label01;

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>("associateWithConfiguration(): no config key ");

        return null;

     label01:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r11 = r1.<android.net.wifi.ScanResult: java.lang.String SSID>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        r3 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = <com.android.server.wifi.WifiConfigStore: boolean VVDBG>;

        if $z1 == 0 goto label02;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("associateWithConfiguration(): try ");

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r72 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r72);

     label02:
        r4 = null;

        $r15 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r14 = virtualinvoke $r15.<java.util.HashMap: java.util.Collection values()>();

        r5 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label21;

        $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.net.wifi.WifiConfiguration) $r16;

        z0 = 0;

        $i0 = r6.<android.net.wifi.WifiConfiguration: int autoJoinStatus>;

        if $i0 == 200 goto label04;

        $z4 = r6.<android.net.wifi.WifiConfiguration: boolean selfAdded>;

        if $z4 == 0 goto label05;

     label04:
        $z3 = <com.android.server.wifi.WifiConfigStore: boolean VVDBG>;

        if $z3 == 0 goto label03;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("associateWithConfiguration(): skip selfadd ");

        $r18 = virtualinvoke r6.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r20);

        goto label03;

     label05:
        $r22 = r6.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        $z6 = virtualinvoke $r22.<java.util.BitSet: boolean get(int)>(1);

        if $z6 != 0 goto label06;

        $z15 = <com.android.server.wifi.WifiConfigStore: boolean VVDBG>;

        if $z15 == 0 goto label03;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("associateWithConfiguration(): skip non-PSK ");

        $r66 = virtualinvoke r6.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r65 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r68 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r68);

        goto label03;

     label06:
        $r24 = virtualinvoke r6.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z5 == 0 goto label08;

        $z12 = <com.android.server.wifi.WifiConfigStore: boolean VVDBG>;

        if $z12 == 0 goto label07;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("associateWithConfiguration(): found it!!! ");

        $r61 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r69 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r69);

     label07:
        return r6;

     label08:
        $r23 = r6.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        if $r23 == null goto label11;

        $r58 = r6.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        $i1 = virtualinvoke $r58.<java.util.HashMap: int size()>();

        if $i1 > 6 goto label11;

        $r59 = r6.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        $r55 = virtualinvoke $r59.<java.util.HashMap: java.util.Set keySet()>();

        r7 = interfaceinvoke $r55.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z11 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label11;

        $r56 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r56;

        $r63 = r1.<android.net.wifi.ScanResult: java.lang.String BSSID>;

        $z13 = virtualinvoke $r63.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, r8, 0, 16);

        if $z13 == 0 goto label10;

        $r64 = r6.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $z14 = virtualinvoke r3.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(0, 0, $r64, 0, 4);

        if $z14 == 0 goto label10;

        z0 = 1;

        goto label11;

     label10:
        goto label09;

     label11:
        if z0 == 0 goto label20;

        $z7 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z7 == 0 goto label12;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("associateWithConfiguration: will create ");

        $r54 = r1.<android.net.wifi.ScanResult: java.lang.String SSID>;

        $r47 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and associate it with: ");

        $r49 = r6.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r57 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r57);

     label12:
        r4 = virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: android.net.wifi.WifiConfiguration wifiConfigurationFromScanResult(android.net.wifi.ScanResult)>(r1);

        if r4 == null goto label20;

        r4.<android.net.wifi.WifiConfiguration: boolean selfAdded> = 1;

        r4.<android.net.wifi.WifiConfiguration: boolean didSelfAdd> = 1;

        r4.<android.net.wifi.WifiConfiguration: boolean dirty> = 1;

        $r25 = virtualinvoke r6.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        r4.<android.net.wifi.WifiConfiguration: java.lang.String peerWifiConfiguration> = $r25;

        $r28 = r4.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        $r26 = r6.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        $z9 = virtualinvoke $r28.<java.util.BitSet: boolean equals(java.lang.Object)>($r26);

        if $z9 == 0 goto label18;

        $r27 = r4.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        $z8 = virtualinvoke $r27.<java.util.BitSet: boolean get(int)>(1);

        if $z8 == 0 goto label18;

        $r30 = r6.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        r75 = specialinvoke r0.<com.android.server.wifi.WifiConfigStore: java.lang.String readNetworkVariableFromSupplicantFile(java.lang.String,java.lang.String)>($r30, "psk");

        if r75 == null goto label16;

        r4.<android.net.wifi.WifiConfiguration: java.lang.String preSharedKey> = r75;

        $z10 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z10 == 0 goto label13;

        $r39 = r4.<android.net.wifi.WifiConfiguration: java.lang.String preSharedKey>;

        if $r39 == null goto label13;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" transfer PSK : ");

        $r44 = r4.<android.net.wifi.WifiConfiguration: java.lang.String preSharedKey>;

        $r43 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r51 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r51);

     label13:
        $r29 = r6.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations>;

        if $r29 != null goto label14;

        $r40 = new java.util.HashMap;

        specialinvoke $r40.<java.util.HashMap: void <init>()>();

        r6.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations> = $r40;

     label14:
        $r34 = r4.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations>;

        if $r34 != null goto label15;

        $r41 = new java.util.HashMap;

        specialinvoke $r41.<java.util.HashMap: void <init>()>();

        r4.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations> = $r41;

     label15:
        $r33 = r6.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations>;

        $r32 = virtualinvoke r4.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r33.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r32, $r31);

        $r37 = r4.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations>;

        $r36 = virtualinvoke r6.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r37.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r36, $r35);

        goto label17;

     label16:
        r4 = null;

     label17:
        goto label19;

     label18:
        r4 = null;

     label19:
        if r4 == null goto label20;

        goto label21;

     label20:
        goto label03;

     label21:
        return r4;
    }

    public java.util.HashSet makeChannelList(android.net.wifi.WifiConfiguration, int, boolean)
    {
        com.android.server.wifi.WifiConfigStore r0;
        android.net.wifi.WifiConfiguration r1, r79;
        int i0, $i4, $i7, $i8, $i11, $i13, $i19, $i20, $i25, $i26, $i27, i28;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z7, $z8, $z10;
        long l1, $l2, $l3, $l5, $l9, $l10, $l12, $l14, $l15, $l16, $l17, $l21, $l23, $l24;
        java.util.HashSet r2, $r8;
        java.lang.StringBuilder r3, $r21, $r22, $r23, $r25, $r26, $r28, $r31, $r37, $r38, $r39, $r40, $r42, $r43, $r44, $r46, $r47, $r48, $r49, $r52, $r53, $r56, $r57, $r58, $r59, $r61, $r62, $r65, $r69, $r71, $r72;
        java.util.Iterator r4, r6, r77;
        android.net.wifi.ScanResult r5, r7;
        java.util.HashMap $r9, $r10, $r11, $r12, $r15, $r17, $r29, $r33, $r63, $r66, $r67, $r70, $r75;
        java.util.Set $r13;
        java.lang.Object $r14, $r18, $r34;
        java.util.Collection $r16, $r32;
        java.lang.Integer $r19, $r35;
        byte $b6, $b18, $b22;
        java.lang.String $r20, $r24, $r27, $r30, $r36, $r41, $r45, $r50, $r51, $r54, $r60, $r64, $r68, $r74, r78;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WifiConfiguration;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if r1 != null goto label01;

        return null;

     label01:
        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        r2 = $r8;

        $r9 = r1.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        if $r9 != null goto label02;

        $r75 = r1.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations>;

        if $r75 != null goto label02;

        return null;

     label02:
        $z2 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z2 == 0 goto label05;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        r3 = $r53;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("makeChannelList age=");

        $r50 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r59 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r60 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r57 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" max=");

        $i25 = r0.<com.android.server.wifi.WifiConfigStore: int maxNumActiveChannelsForPartialScans>;

        $r56 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i25);

        $r54 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r66 = r1.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        if $r66 == null goto label03;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bssids=");

        $r70 = r1.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        $i27 = virtualinvoke $r70.<java.util.HashMap: int size()>();

        $r69 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i27);

        $r68 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

     label03:
        $r67 = r1.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations>;

        if $r67 == null goto label04;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" linked=");

        $r63 = r1.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations>;

        $i26 = virtualinvoke $r63.<java.util.HashMap: int size()>();

        $r61 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i26);

        $r74 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

     label04:
        $r64 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r64);

     label05:
        i28 = 0;

        $r10 = r1.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        if $r10 == null goto label12;

        $r29 = r1.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        $i11 = virtualinvoke $r29.<java.util.HashMap: int size()>();

        if $i11 <= 0 goto label12;

        $r33 = r1.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        $r32 = virtualinvoke $r33.<java.util.HashMap: java.util.Collection values()>();

        r4 = interfaceinvoke $r32.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z7 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label12;

        $r34 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.net.wifi.ScanResult) $r34;

        $i13 = r0.<com.android.server.wifi.WifiConfigStore: int maxNumActiveChannelsForPartialScans>;

        if i28 <= $i13 goto label07;

        goto label12;

     label07:
        $z8 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z8 == 0 goto label10;

        $l14 = r5.<android.net.wifi.ScanResult: long seen>;

        $l21 = l1 - $l14;

        $l15 = (long) i0;

        $b22 = $l21 cmp $l15;

        if $b22 >= 0 goto label08;

        $z10 = 1;

        goto label09;

     label08:
        $z10 = 0;

     label09:
        z1 = $z10;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("has ");

        $r36 = r5.<android.net.wifi.ScanResult: java.lang.String BSSID>;

        $r37 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" freq=");

        $i20 = r5.<android.net.wifi.ScanResult: int frequency>;

        $r45 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i20);

        $r44 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" age=");

        $l24 = r5.<android.net.wifi.ScanResult: long seen>;

        $l23 = l1 - $l24;

        $r41 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l23);

        $r43 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ?=");

        $r52 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r51);

     label10:
        $l12 = r5.<android.net.wifi.ScanResult: long seen>;

        $l17 = l1 - $l12;

        $l16 = (long) i0;

        $b18 = $l17 cmp $l16;

        if $b18 >= 0 goto label11;

        $i19 = r5.<android.net.wifi.ScanResult: int frequency>;

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19);

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>($r35);

        i28 = i28 + 1;

     label11:
        goto label06;

     label12:
        $r12 = r1.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations>;

        if $r12 == null goto label21;

        $r11 = r1.<android.net.wifi.WifiConfiguration: java.util.HashMap linkedConfigurations>;

        $r13 = virtualinvoke $r11.<java.util.HashMap: java.util.Set keySet()>();

        r77 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label13:
        $z3 = interfaceinvoke r77.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label21;

        $r14 = interfaceinvoke r77.<java.util.Iterator: java.lang.Object next()>();

        r78 = (java.lang.String) $r14;

        r79 = virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: android.net.wifi.WifiConfiguration getWifiConfiguration(java.lang.String)>(r78);

        if r79 != null goto label14;

        goto label13;

     label14:
        $r15 = r79.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        if $r15 != null goto label15;

        goto label13;

     label15:
        $r17 = r79.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        $r16 = virtualinvoke $r17.<java.util.HashMap: java.util.Collection values()>();

        r6 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();

     label16:
        $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label20;

        $r18 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (android.net.wifi.ScanResult) $r18;

        $z5 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z5 == 0 goto label17;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("has link: ");

        $r20 = r7.<android.net.wifi.ScanResult: java.lang.String BSSID>;

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" freq=");

        $i8 = r7.<android.net.wifi.ScanResult: int frequency>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i8);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" age=");

        $l10 = r7.<android.net.wifi.ScanResult: long seen>;

        $l9 = l1 - $l10;

        $r27 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l9);

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r30);

     label17:
        $i4 = r0.<com.android.server.wifi.WifiConfigStore: int maxNumActiveChannelsForPartialScans>;

        if i28 <= $i4 goto label18;

        goto label20;

     label18:
        $l5 = r7.<android.net.wifi.ScanResult: long seen>;

        $l3 = l1 - $l5;

        $l2 = (long) i0;

        $b6 = $l3 cmp $l2;

        if $b6 >= 0 goto label19;

        $i7 = r7.<android.net.wifi.ScanResult: int frequency>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>($r19);

        i28 = i28 + 1;

     label19:
        goto label16;

     label20:
        goto label13;

     label21:
        return r2;
    }

    public boolean updateSavedNetworkHistory(android.net.wifi.ScanResult)
    {
        com.android.server.wifi.WifiConfigStore r0;
        android.net.wifi.ScanResult r1, r5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12;
        java.lang.String r2, $r8, $r14, $r18, $r19, $r23, $r25, $r26, $r27, $r28, $r29, $r31, $r34, $r37, $r40, $r43, $r47, $r51, $r56, $r60, $r61, $r62, $r63, $r67, $r68, $r69, $r70, $r71, $r73, $r75, $r76, $r79, $r82, $r85, $r89, r90;
        java.util.Iterator r3;
        android.net.wifi.WifiConfiguration r4;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r15, $r16, $r17, $r20, $r21, $r22, $r24, $r30, $r32, $r33, $r35, $r36, $r39, $r41, $r42, $r44, $r45, $r46, $r48, $r49, $r50, $r52, $r64, $r65, $r66, $r72, $r74, $r77, $r78, $r80, $r81, $r83, $r84, $r86, $r87, $r88;
        java.util.HashMap $r11, $r38, $r53, $r55, $r58, $r59;
        java.util.Collection $r12;
        java.lang.Object $r13, $r54;
        long $l7;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.ScanResult;

        i0 = 0;

        if r1 != null goto label01;

        return 0;

     label01:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r8 = r1.<android.net.wifi.ScanResult: java.lang.String SSID>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label17;

        $r13 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.net.wifi.WifiConfiguration) $r13;

        z0 = 0;

        $r14 = r4.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        if $r14 == null goto label03;

        $r26 = r4.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $z5 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z5 != 0 goto label04;

     label03:
        $z3 = <com.android.server.wifi.WifiConfigStore: boolean VVDBG>;

        if $z3 == 0 goto label02;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateSavedNetworkHistory(): SSID mismatch ");

        $r18 = virtualinvoke r4.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" SSID=");

        $r19 = r4.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r23);

        goto label02;

     label04:
        $z4 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z4 == 0 goto label05;

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateSavedNetworkHistory(): try ");

        $r73 = virtualinvoke r4.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r84 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

        $r83 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" SSID=");

        $r82 = r4.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r81 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);

        $r80 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r79 = r1.<android.net.wifi.ScanResult: java.lang.String SSID>;

        $r78 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79);

        $r77 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r89 = r1.<android.net.wifi.ScanResult: java.lang.String capabilities>;

        $r88 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r89);

        $r87 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ajst=");

        $i12 = r4.<android.net.wifi.WifiConfiguration: int autoJoinStatus>;

        $r86 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r85 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r85);

     label05:
        $r25 = r1.<android.net.wifi.ScanResult: java.lang.String capabilities>;

        $z7 = virtualinvoke $r25.<java.lang.String: boolean contains(java.lang.CharSequence)>("WEP");

        if $z7 == 0 goto label06;

        $r75 = virtualinvoke r4.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $z17 = virtualinvoke $r75.<java.lang.String: boolean contains(java.lang.CharSequence)>("WEP");

        if $z17 == 0 goto label06;

        z0 = 1;

        goto label09;

     label06:
        $r28 = r1.<android.net.wifi.ScanResult: java.lang.String capabilities>;

        $z6 = virtualinvoke $r28.<java.lang.String: boolean contains(java.lang.CharSequence)>("PSK");

        if $z6 == 0 goto label07;

        $r76 = virtualinvoke r4.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $z18 = virtualinvoke $r76.<java.lang.String: boolean contains(java.lang.CharSequence)>("PSK");

        if $z18 == 0 goto label07;

        z0 = 1;

        goto label09;

     label07:
        $r27 = r1.<android.net.wifi.ScanResult: java.lang.String capabilities>;

        $z10 = virtualinvoke $r27.<java.lang.String: boolean contains(java.lang.CharSequence)>("EAP");

        if $z10 == 0 goto label08;

        $r68 = virtualinvoke r4.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $z19 = virtualinvoke $r68.<java.lang.String: boolean contains(java.lang.CharSequence)>("EAP");

        if $z19 == 0 goto label08;

        z0 = 1;

        goto label09;

     label08:
        $r29 = r1.<android.net.wifi.ScanResult: java.lang.String capabilities>;

        $z8 = virtualinvoke $r29.<java.lang.String: boolean contains(java.lang.CharSequence)>("WEP");

        if $z8 != 0 goto label09;

        $r61 = r1.<android.net.wifi.ScanResult: java.lang.String capabilities>;

        $z12 = virtualinvoke $r61.<java.lang.String: boolean contains(java.lang.CharSequence)>("PSK");

        if $z12 != 0 goto label09;

        $r63 = r1.<android.net.wifi.ScanResult: java.lang.String capabilities>;

        $z16 = virtualinvoke $r63.<java.lang.String: boolean contains(java.lang.CharSequence)>("EAP");

        if $z16 != 0 goto label09;

        $r71 = virtualinvoke r4.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $z15 = virtualinvoke $r71.<java.lang.String: boolean contains(java.lang.CharSequence)>("WEP");

        if $z15 != 0 goto label09;

        $r70 = virtualinvoke r4.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $z14 = virtualinvoke $r70.<java.lang.String: boolean contains(java.lang.CharSequence)>("PSK");

        if $z14 != 0 goto label09;

        $r69 = virtualinvoke r4.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $z13 = virtualinvoke $r69.<java.lang.String: boolean contains(java.lang.CharSequence)>("EAP");

        if $z13 != 0 goto label09;

        z0 = 1;

     label09:
        if z0 == 0 goto label14;

        i0 = i0 + 1;

        $i8 = r4.<android.net.wifi.WifiConfiguration: int autoJoinStatus>;

        if $i8 < 200 goto label10;

        $z11 = <com.android.server.wifi.WifiConfigStore: boolean VVDBG>;

        if $z11 == 0 goto label02;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateSavedNetworkHistory(): found a deleted, skip it...  ");

        $r67 = virtualinvoke r4.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r62 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r62);

        goto label02;

     label10:
        $r55 = r4.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        if $r55 != null goto label11;

        $r59 = new java.util.HashMap;

        specialinvoke $r59.<java.util.HashMap: void <init>()>();

        r4.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache> = $r59;

     label11:
        $r53 = r4.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        $r56 = r1.<android.net.wifi.ScanResult: java.lang.String BSSID>;

        $r54 = virtualinvoke $r53.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r56);

        r5 = (android.net.wifi.ScanResult) $r54;

        if r5 != null goto label12;

        r4.<android.net.wifi.WifiConfiguration: boolean dirty> = 1;

        goto label13;

     label12:
        $i6 = r5.<android.net.wifi.ScanResult: int autoJoinStatus>;

        r1.<android.net.wifi.ScanResult: int autoJoinStatus> = $i6;

        $l7 = r5.<android.net.wifi.ScanResult: long blackListTimestamp>;

        r1.<android.net.wifi.ScanResult: long blackListTimestamp> = $l7;

        $i10 = r5.<android.net.wifi.ScanResult: int numIpConfigFailures>;

        r1.<android.net.wifi.ScanResult: int numIpConfigFailures> = $i10;

        $i9 = r5.<android.net.wifi.ScanResult: int numConnection>;

        r1.<android.net.wifi.ScanResult: int numConnection> = $i9;

        $i11 = r5.<android.net.wifi.ScanResult: int isAutoJoinCandidate>;

        r1.<android.net.wifi.ScanResult: int isAutoJoinCandidate> = $i11;

     label13:
        $r58 = r4.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        $r60 = r1.<android.net.wifi.ScanResult: java.lang.String BSSID>;

        virtualinvoke $r58.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r60, r1);

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void linkConfiguration(android.net.wifi.WifiConfiguration)>(r4);

     label14:
        $z9 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z9 == 0 goto label16;

        if z0 == 0 goto label16;

        r90 = "";

        $i1 = r1.<android.net.wifi.ScanResult: int autoJoinStatus>;

        if $i1 <= 0 goto label15;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" status=");

        $i5 = r1.<android.net.wifi.ScanResult: int autoJoinStatus>;

        $r47 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i5);

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        r90 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

     label15:
        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("        got known scan result ");

        $r31 = r1.<android.net.wifi.ScanResult: java.lang.String BSSID>;

        $r36 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key : ");

        $r34 = virtualinvoke r4.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r33 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r39 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" num: ");

        $r38 = r4.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        $i2 = virtualinvoke $r38.<java.util.HashMap: int size()>();

        $r37 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        $r42 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rssi=");

        $i3 = r1.<android.net.wifi.ScanResult: int level>;

        $r40 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        $r45 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" freq=");

        $i4 = r1.<android.net.wifi.ScanResult: int frequency>;

        $r43 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        $r49 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r90);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r51);

     label16:
        goto label02;

     label17:
        if i0 == 0 goto label18;

        $z2 = 1;

        goto label19;

     label18:
        $z2 = 0;

     label19:
        return $z2;
    }

    private com.android.server.wifi.NetworkUpdateResult writeIpAndProxyConfigurationsOnChange(android.net.wifi.WifiConfiguration, android.net.wifi.WifiConfiguration)
    {
        com.android.server.wifi.WifiConfigStore r0;
        android.net.wifi.WifiConfiguration r1, r2;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.net.ProxyInfo r3, r4, $r14, $r20, $r22;
        int[] $r5, $r11;
        android.net.IpConfiguration$IpAssignment $r6, $r7, $r8, $r26, $r43, $r44;
        int $i0, $i1, $i2, $i3;
        android.net.StaticIpConfiguration $r9, $r10, $r27, $r37, $r41;
        android.net.IpConfiguration$ProxySettings $r12, $r15, $r42, $r45;
        com.android.server.wifi.NetworkUpdateResult $r13;
        java.lang.StringBuilder $r16, $r17, $r18, $r24, $r25, $r28, $r31, $r32, $r33, $r34, $r35, $r39, $r46, $r48, $r49, $r51, $r53, $r55, $r56;
        java.lang.String $r19, $r21, $r23, $r29, $r30, $r36, $r38, $r40, $r47, $r50, $r52, $r54;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WifiConfiguration;

        r2 := @parameter1: android.net.wifi.WifiConfiguration;

        z0 = 0;

        z1 = 0;

        $z2 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z2 == 0 goto label01;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("writeIpAndProxyConfigurationsOnChange: ");

        $r47 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r46 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r53 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r54 = r2.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" path: ");

        $r50 = <com.android.server.wifi.WifiConfigStore: java.lang.String ipConfigFile>;

        $r51 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r52);

     label01:
        $r5 = <com.android.server.wifi.WifiConfigStore$2: int[] $SwitchMap$android$net$IpConfiguration$IpAssignment>;

        $r6 = virtualinvoke r2.<android.net.wifi.WifiConfiguration: android.net.IpConfiguration$IpAssignment getIpAssignment()>();

        $i0 = virtualinvoke $r6.<android.net.IpConfiguration$IpAssignment: int ordinal()>();

        $i1 = $r5[$i0];

        tableswitch($i1)
        {
            case 1: goto label02;
            case 2: goto label06;
            case 3: goto label07;
            default: goto label08;
        };

     label02:
        $r7 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: android.net.IpConfiguration$IpAssignment getIpAssignment()>();

        $r8 = virtualinvoke r2.<android.net.wifi.WifiConfiguration: android.net.IpConfiguration$IpAssignment getIpAssignment()>();

        if $r7 == $r8 goto label03;

        z0 = 1;

        goto label09;

     label03:
        $r9 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: android.net.StaticIpConfiguration getStaticIpConfiguration()>();

        $r10 = virtualinvoke r2.<android.net.wifi.WifiConfiguration: android.net.StaticIpConfiguration getStaticIpConfiguration()>();

        $z3 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r9, $r10);

        if $z3 != 0 goto label04;

        $z7 = 1;

        goto label05;

     label04:
        $z7 = 0;

     label05:
        z0 = $z7;

        goto label09;

     label06:
        $r44 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: android.net.IpConfiguration$IpAssignment getIpAssignment()>();

        $r43 = virtualinvoke r2.<android.net.wifi.WifiConfiguration: android.net.IpConfiguration$IpAssignment getIpAssignment()>();

        if $r44 == $r43 goto label09;

        z0 = 1;

        goto label09;

     label07:
        goto label09;

     label08:
        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>("Ignore invalid ip assignment during write");

     label09:
        $r11 = <com.android.server.wifi.WifiConfigStore$2: int[] $SwitchMap$android$net$IpConfiguration$ProxySettings>;

        $r12 = virtualinvoke r2.<android.net.wifi.WifiConfiguration: android.net.IpConfiguration$ProxySettings getProxySettings()>();

        $i2 = virtualinvoke $r12.<android.net.IpConfiguration$ProxySettings: int ordinal()>();

        $i3 = $r11[$i2];

        tableswitch($i3)
        {
            case 1: goto label10;
            case 2: goto label10;
            case 3: goto label16;
            case 4: goto label17;
            default: goto label18;
        };

     label10:
        r3 = virtualinvoke r2.<android.net.wifi.WifiConfiguration: android.net.ProxyInfo getHttpProxy()>();

        r4 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: android.net.ProxyInfo getHttpProxy()>();

        if r3 == null goto label13;

        $z5 = virtualinvoke r3.<android.net.ProxyInfo: boolean equals(java.lang.Object)>(r4);

        if $z5 != 0 goto label11;

        $z4 = 1;

        goto label12;

     label11:
        $z4 = 0;

     label12:
        z1 = $z4;

        goto label19;

     label13:
        if r4 == null goto label14;

        $z6 = 1;

        goto label15;

     label14:
        $z6 = 0;

     label15:
        z1 = $z6;

        goto label19;

     label16:
        $r42 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: android.net.IpConfiguration$ProxySettings getProxySettings()>();

        $r45 = virtualinvoke r2.<android.net.wifi.WifiConfiguration: android.net.IpConfiguration$ProxySettings getProxySettings()>();

        if $r42 == $r45 goto label19;

        z1 = 1;

        goto label19;

     label17:
        goto label19;

     label18:
        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>("Ignore invalid proxy configuration during write");

     label19:
        if z0 == 0 goto label20;

        $r26 = virtualinvoke r2.<android.net.wifi.WifiConfiguration: android.net.IpConfiguration$IpAssignment getIpAssignment()>();

        virtualinvoke r1.<android.net.wifi.WifiConfiguration: void setIpAssignment(android.net.IpConfiguration$IpAssignment)>($r26);

        $r27 = virtualinvoke r2.<android.net.wifi.WifiConfiguration: android.net.StaticIpConfiguration getStaticIpConfiguration()>();

        virtualinvoke r1.<android.net.wifi.WifiConfiguration: void setStaticIpConfiguration(android.net.StaticIpConfiguration)>($r27);

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IP config changed SSID = ");

        $r30 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void log(java.lang.String)>($r36);

        $r37 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: android.net.StaticIpConfiguration getStaticIpConfiguration()>();

        if $r37 == null goto label20;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" static configuration: ");

        $r41 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: android.net.StaticIpConfiguration getStaticIpConfiguration()>();

        $r40 = virtualinvoke $r41.<android.net.StaticIpConfiguration: java.lang.String toString()>();

        $r39 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void log(java.lang.String)>($r38);

     label20:
        if z1 == 0 goto label21;

        $r15 = virtualinvoke r2.<android.net.wifi.WifiConfiguration: android.net.IpConfiguration$ProxySettings getProxySettings()>();

        virtualinvoke r1.<android.net.wifi.WifiConfiguration: void setProxySettings(android.net.IpConfiguration$ProxySettings)>($r15);

        $r14 = virtualinvoke r2.<android.net.wifi.WifiConfiguration: android.net.ProxyInfo getHttpProxy()>();

        virtualinvoke r1.<android.net.wifi.WifiConfiguration: void setHttpProxy(android.net.ProxyInfo)>($r14);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("proxy changed SSID = ");

        $r19 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void log(java.lang.String)>($r21);

        $r20 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: android.net.ProxyInfo getHttpProxy()>();

        if $r20 == null goto label21;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" proxyProperties: ");

        $r22 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: android.net.ProxyInfo getHttpProxy()>();

        $r23 = virtualinvoke $r22.<android.net.ProxyInfo: java.lang.String toString()>();

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void log(java.lang.String)>($r29);

     label21:
        if z0 != 0 goto label22;

        if z1 == 0 goto label23;

     label22:
        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void writeIpAndProxyConfigurations()>();

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void sendConfiguredNetworksChangedBroadcast(android.net.wifi.WifiConfiguration,int)>(r1, 2);

     label23:
        $r13 = new com.android.server.wifi.NetworkUpdateResult;

        specialinvoke $r13.<com.android.server.wifi.NetworkUpdateResult: void <init>(boolean,boolean)>(z0, z1);

        return $r13;
    }

    private boolean enterpriseConfigKeyShouldBeQuoted(java.lang.String)
    {
        com.android.server.wifi.WifiConfigStore r0;
        java.lang.String r1, r2;
        byte b0;
        int $i1;
        boolean $z0, $z1;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: java.lang.String;

        r2 = r1;

        b0 = -1;

        $i1 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        lookupswitch($i1)
        {
            case -1298662846: goto label2;
            case 100180: goto label1;
            default: goto label3;
        };

     label1:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("eap");

        if $z0 == 0 goto label3;

        b0 = 0;

        goto label3;

     label2:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("engine");

        if $z1 == 0 goto label3;

        b0 = 1;

     label3:
        lookupswitch(b0)
        {
            case 0: goto label4;
            case 1: goto label4;
            default: goto label5;
        };

     label4:
        return 0;

     label5:
        return 1;
    }

    private void readNetworkVariables(android.net.wifi.WifiConfiguration)
    {
        com.android.server.wifi.WifiConfigStore r0;
        android.net.wifi.WifiConfiguration r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27;
        java.lang.String r2, r5, $r34, $r44, $r45, r50, r51, r52, r54, r56, r57, r58, r60, r63, r64, r67, r68, r71, r72, r75, r78, r79;
        java.lang.String[] r4, $r25, $r27, $r29, $r31, $r35, $r36, $r39, $r40, r59, r61, r62, r65, r66, r69, r70, r73, r74, r77;
        com.android.server.wifi.WifiNative $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r20, $r33;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z12, $z13, $z14, $z15, $z16;
        android.net.wifi.WifiEnterpriseConfig $r17, $r18, $r19, $r21, $r23;
        java.util.BitSet $r26, $r28, $r30, $r32, $r37;
        java.lang.StringBuilder $r38, $r43, $r46, $r47;
        char $c10;
        java.lang.NumberFormatException $r41, $r42, $r49;
        android.net.wifi.WifiSsid $r48;
        java.util.HashMap r76;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WifiConfiguration;

        i0 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        if i0 >= 0 goto label01;

        return;

     label01:
        $r6 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        r2 = virtualinvoke $r6.<com.android.server.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>(i0, "ssid");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 != 0 goto label03;

        $c10 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);

        if $c10 == 34 goto label02;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r48 = staticinvoke <android.net.wifi.WifiSsid: android.net.wifi.WifiSsid createFromHex(java.lang.String)>(r2);

        $r45 = virtualinvoke $r48.<android.net.wifi.WifiSsid: java.lang.String toString()>();

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r43 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID> = $r44;

        goto label04;

     label02:
        r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID> = r2;

        goto label04;

     label03:
        r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID> = null;

     label04:
        $r7 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        r50 = virtualinvoke $r7.<com.android.server.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>(i0, "bssid");

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r50);

        if $z1 != 0 goto label05;

        r1.<android.net.wifi.WifiConfiguration: java.lang.String BSSID> = r50;

        goto label06;

     label05:
        r1.<android.net.wifi.WifiConfiguration: java.lang.String BSSID> = null;

     label06:
        $r8 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        r51 = virtualinvoke $r8.<com.android.server.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>(i0, "priority");

        r1.<android.net.wifi.WifiConfiguration: int priority> = -1;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r51);

        if $z2 != 0 goto label10;

     label07:
        $i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r51);

        r1.<android.net.wifi.WifiConfiguration: int priority> = $i9;

     label08:
        goto label10;

     label09:
        $r41 := @caughtexception;

     label10:
        $r9 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        r52 = virtualinvoke $r9.<com.android.server.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>(i0, "scan_ssid");

        r1.<android.net.wifi.WifiConfiguration: boolean hiddenSSID> = 0;

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r52);

        if $z3 != 0 goto label16;

     label11:
        $i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r52);

        if $i11 == 0 goto label12;

        $z16 = 1;

        goto label13;

     label12:
        $z16 = 0;

     label13:
        r1.<android.net.wifi.WifiConfiguration: boolean hiddenSSID> = $z16;

     label14:
        goto label16;

     label15:
        $r42 := @caughtexception;

     label16:
        $r10 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        r54 = virtualinvoke $r10.<com.android.server.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>(i0, "wep_tx_keyidx");

        r1.<android.net.wifi.WifiConfiguration: int wepTxKeyIndex> = -1;

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r54);

        if $z4 != 0 goto label20;

     label17:
        $i12 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r54);

        r1.<android.net.wifi.WifiConfiguration: int wepTxKeyIndex> = $i12;

     label18:
        goto label20;

     label19:
        $r49 := @caughtexception;

     label20:
        i13 = 0;

     label21:
        if i13 >= 4 goto label24;

        $r33 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $r36 = <android.net.wifi.WifiConfiguration: java.lang.String[] wepKeyVarNames>;

        $r34 = $r36[i13];

        r56 = virtualinvoke $r33.<com.android.server.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>(i0, $r34);

        $z15 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r56);

        if $z15 != 0 goto label22;

        $r39 = r1.<android.net.wifi.WifiConfiguration: java.lang.String[] wepKeys>;

        $r39[i13] = r56;

        goto label23;

     label22:
        $r40 = r1.<android.net.wifi.WifiConfiguration: java.lang.String[] wepKeys>;

        $r40[i13] = null;

     label23:
        i13 = i13 + 1;

        goto label21;

     label24:
        $r11 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        r57 = virtualinvoke $r11.<com.android.server.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>(i0, "psk");

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r57);

        if $z5 != 0 goto label25;

        r1.<android.net.wifi.WifiConfiguration: java.lang.String preSharedKey> = r57;

        goto label26;

     label25:
        r1.<android.net.wifi.WifiConfiguration: java.lang.String preSharedKey> = null;

     label26:
        $r12 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $i4 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        r58 = virtualinvoke $r12.<com.android.server.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>($i4, "proto");

        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r58);

        if $z6 != 0 goto label29;

        r59 = virtualinvoke r58.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r4 = r59;

        i1 = lengthof r4;

        i2 = 0;

     label27:
        if i2 >= i1 goto label29;

        r5 = r4[i2];

        $r35 = <android.net.wifi.WifiConfiguration$Protocol: java.lang.String[] strings>;

        i3 = specialinvoke r0.<com.android.server.wifi.WifiConfigStore: int lookupString(java.lang.String,java.lang.String[])>(r5, $r35);

        if 0 > i3 goto label28;

        $r37 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedProtocols>;

        virtualinvoke $r37.<java.util.BitSet: void set(int)>(i3);

     label28:
        i2 = i2 + 1;

        goto label27;

     label29:
        $r13 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $i5 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        r60 = virtualinvoke $r13.<com.android.server.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>($i5, "key_mgmt");

        $z7 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r60);

        if $z7 != 0 goto label32;

        r61 = virtualinvoke r60.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r62 = r61;

        i14 = lengthof r62;

        i15 = 0;

     label30:
        if i15 >= i14 goto label32;

        r63 = r62[i15];

        $r29 = <android.net.wifi.WifiConfiguration$KeyMgmt: java.lang.String[] strings>;

        i16 = specialinvoke r0.<com.android.server.wifi.WifiConfigStore: int lookupString(java.lang.String,java.lang.String[])>(r63, $r29);

        if 0 > i16 goto label31;

        $r30 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        virtualinvoke $r30.<java.util.BitSet: void set(int)>(i16);

     label31:
        i15 = i15 + 1;

        goto label30;

     label32:
        $r14 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $i6 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        r64 = virtualinvoke $r14.<com.android.server.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>($i6, "auth_alg");

        $z8 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r64);

        if $z8 != 0 goto label35;

        r65 = virtualinvoke r64.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r66 = r65;

        i17 = lengthof r66;

        i18 = 0;

     label33:
        if i18 >= i17 goto label35;

        r67 = r66[i18];

        $r31 = <android.net.wifi.WifiConfiguration$AuthAlgorithm: java.lang.String[] strings>;

        i19 = specialinvoke r0.<com.android.server.wifi.WifiConfigStore: int lookupString(java.lang.String,java.lang.String[])>(r67, $r31);

        if 0 > i19 goto label34;

        $r32 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedAuthAlgorithms>;

        virtualinvoke $r32.<java.util.BitSet: void set(int)>(i19);

     label34:
        i18 = i18 + 1;

        goto label33;

     label35:
        $r15 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $i7 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        r68 = virtualinvoke $r15.<com.android.server.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>($i7, "pairwise");

        $z9 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r68);

        if $z9 != 0 goto label38;

        r69 = virtualinvoke r68.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r70 = r69;

        i20 = lengthof r70;

        i21 = 0;

     label36:
        if i21 >= i20 goto label38;

        r71 = r70[i21];

        $r25 = <android.net.wifi.WifiConfiguration$PairwiseCipher: java.lang.String[] strings>;

        i22 = specialinvoke r0.<com.android.server.wifi.WifiConfigStore: int lookupString(java.lang.String,java.lang.String[])>(r71, $r25);

        if 0 > i22 goto label37;

        $r26 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedPairwiseCiphers>;

        virtualinvoke $r26.<java.util.BitSet: void set(int)>(i22);

     label37:
        i21 = i21 + 1;

        goto label36;

     label38:
        $r16 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $i8 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        r72 = virtualinvoke $r16.<com.android.server.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>($i8, "group");

        $z10 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r72);

        if $z10 != 0 goto label41;

        r73 = virtualinvoke r72.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r74 = r73;

        i23 = lengthof r74;

        i24 = 0;

     label39:
        if i24 >= i23 goto label41;

        r75 = r74[i24];

        $r27 = <android.net.wifi.WifiConfiguration$GroupCipher: java.lang.String[] strings>;

        i25 = specialinvoke r0.<com.android.server.wifi.WifiConfigStore: int lookupString(java.lang.String,java.lang.String[])>(r75, $r27);

        if 0 > i25 goto label40;

        $r28 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedGroupCiphers>;

        virtualinvoke $r28.<java.util.BitSet: void set(int)>(i25);

     label40:
        i24 = i24 + 1;

        goto label39;

     label41:
        $r19 = r1.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiEnterpriseConfig enterpriseConfig>;

        if $r19 != null goto label42;

        $r23 = new android.net.wifi.WifiEnterpriseConfig;

        specialinvoke $r23.<android.net.wifi.WifiEnterpriseConfig: void <init>()>();

        r1.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiEnterpriseConfig enterpriseConfig> = $r23;

     label42:
        $r18 = r1.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiEnterpriseConfig enterpriseConfig>;

        r76 = virtualinvoke $r18.<android.net.wifi.WifiEnterpriseConfig: java.util.HashMap getFields()>();

        r77 = <com.android.server.wifi.WifiConfigStore: java.lang.String[] ENTERPRISE_CONFIG_SUPPLICANT_KEYS>;

        i26 = lengthof r77;

        i27 = 0;

     label43:
        if i27 >= i26 goto label47;

        r78 = r77[i27];

        $r20 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        r79 = virtualinvoke $r20.<com.android.server.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>(i0, r78);

        $z14 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r79);

        if $z14 != 0 goto label45;

        $z13 = specialinvoke r0.<com.android.server.wifi.WifiConfigStore: boolean enterpriseConfigKeyShouldBeQuoted(java.lang.String)>(r78);

        if $z13 != 0 goto label44;

        r79 = staticinvoke <com.android.server.wifi.WifiConfigStore: java.lang.String removeDoubleQuotes(java.lang.String)>(r79);

     label44:
        virtualinvoke r76.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r78, r79);

        goto label46;

     label45:
        virtualinvoke r76.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r78, "NULL");

     label46:
        i27 = i27 + 1;

        goto label43;

     label47:
        $r17 = r1.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiEnterpriseConfig enterpriseConfig>;

        $z12 = virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: boolean migrateOldEapTlsNative(android.net.wifi.WifiEnterpriseConfig,int)>($r17, i0);

        if $z12 == 0 goto label48;

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: boolean saveConfig()>();

     label48:
        $r21 = r1.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiEnterpriseConfig enterpriseConfig>;

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void migrateCerts(android.net.wifi.WifiEnterpriseConfig)>($r21);

        return;

        catch java.lang.NumberFormatException from label07 to label08 with label09;
        catch java.lang.NumberFormatException from label11 to label14 with label15;
        catch java.lang.NumberFormatException from label17 to label18 with label19;
    }

    private static java.lang.String removeDoubleQuotes(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0, $i2, $i4;
        char $c1, $c3;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 <= 1 goto label1;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if $c1 != 34 goto label1;

        $i2 = i0 - 1;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);

        if $c3 != 34 goto label1;

        $i4 = i0 - 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(1, $i4);

        return $r1;

     label1:
        return r0;
    }

    private static java.lang.String makeString(java.util.BitSet, java.lang.String[])
    {
        java.util.BitSet r0, r9;
        java.lang.String[] r1;
        java.lang.StringBuffer r2, $r3, $r7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r4, $r5, $r6;

        r0 := @parameter0: java.util.BitSet;

        r1 := @parameter1: java.lang.String[];

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        r2 = $r3;

        i0 = -1;

        $i1 = lengthof r1;

        r9 = virtualinvoke r0.<java.util.BitSet: java.util.BitSet get(int,int)>(0, $i1);

     label1:
        $i2 = i0 + 1;

        $i3 = virtualinvoke r9.<java.util.BitSet: int nextSetBit(int)>($i2);

        i0 = $i3;

        if $i3 == -1 goto label2;

        $r5 = r1[i0];

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String replace(char,char)>(95, 45);

        $r7 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        goto label1;

     label2:
        $i4 = virtualinvoke r9.<java.util.BitSet: int cardinality()>();

        if $i4 <= 0 goto label3;

        $i5 = virtualinvoke r2.<java.lang.StringBuffer: int length()>();

        $i6 = $i5 - 1;

        virtualinvoke r2.<java.lang.StringBuffer: void setLength(int)>($i6);

     label3:
        $r4 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    private int lookupString(java.lang.String, java.lang.String[])
    {
        com.android.server.wifi.WifiConfigStore r0;
        java.lang.String r1, $r6, $r7, r8;
        java.lang.String[] r2;
        int i0, i1;
        java.lang.StringBuilder $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        i0 = lengthof r2;

        r8 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(45, 95);

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r7 = r2[i1];

        $z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to look-up a string: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r6);

        return -1;
    }

    public android.net.wifi.WifiConfiguration wifiConfigurationFromScanResult(android.net.wifi.ScanResult)
    {
        com.android.server.wifi.WifiConfigStore r0;
        android.net.wifi.ScanResult r1;
        android.net.wifi.WifiConfiguration r2, $r3;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r24, $r25, $r26, $r28, $r30;
        java.lang.String $r6, $r9, $r10, $r11, $r12, $r14, $r27, $r29, $r31;
        boolean $z0, $z1, $z2, $z3;
        java.util.HashMap $r13, $r15, $r17;
        java.util.BitSet $r18, $r19, $r20, $r21, $r22, $r23;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.ScanResult;

        $r3 = new android.net.wifi.WifiConfiguration;

        specialinvoke $r3.<android.net.wifi.WifiConfiguration: void <init>()>();

        r2 = $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r6 = r1.<android.net.wifi.ScanResult: java.lang.String SSID>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r2.<android.net.wifi.WifiConfiguration: java.lang.String SSID> = $r9;

        $z0 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        if $z0 == 0 goto label1;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WifiConfiguration from scan results ");

        $r27 = r2.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cap ");

        $r31 = r1.<android.net.wifi.ScanResult: java.lang.String capabilities>;

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r29);

     label1:
        $r10 = r1.<android.net.wifi.ScanResult: java.lang.String capabilities>;

        $z1 = virtualinvoke $r10.<java.lang.String: boolean contains(java.lang.CharSequence)>("WEP");

        if $z1 == 0 goto label2;

        $r20 = r2.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        virtualinvoke $r20.<java.util.BitSet: void set(int)>(0);

        $r23 = r2.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedAuthAlgorithms>;

        virtualinvoke $r23.<java.util.BitSet: void set(int)>(0);

        $r22 = r2.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedAuthAlgorithms>;

        virtualinvoke $r22.<java.util.BitSet: void set(int)>(1);

     label2:
        $r11 = r1.<android.net.wifi.ScanResult: java.lang.String capabilities>;

        $z2 = virtualinvoke $r11.<java.lang.String: boolean contains(java.lang.CharSequence)>("PSK");

        if $z2 == 0 goto label3;

        $r21 = r2.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        virtualinvoke $r21.<java.util.BitSet: void set(int)>(1);

     label3:
        $r12 = r1.<android.net.wifi.ScanResult: java.lang.String capabilities>;

        $z3 = virtualinvoke $r12.<java.lang.String: boolean contains(java.lang.CharSequence)>("EAP");

        if $z3 == 0 goto label4;

        $r19 = r2.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        virtualinvoke $r19.<java.util.BitSet: void set(int)>(2);

        $r18 = r2.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        virtualinvoke $r18.<java.util.BitSet: void set(int)>(3);

     label4:
        $r13 = new java.util.HashMap;

        specialinvoke $r13.<java.util.HashMap: void <init>()>();

        r2.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache> = $r13;

        $r15 = r2.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        if $r15 != null goto label5;

        return null;

     label5:
        $r17 = r2.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        $r14 = r1.<android.net.wifi.ScanResult: java.lang.String BSSID>;

        virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r1);

        return r2;
    }

    private static int configKey(android.net.wifi.WifiConfiguration)
    {
        android.net.wifi.WifiConfiguration r0;
        java.lang.String r1;
        int $i0;

        r0 := @parameter0: android.net.wifi.WifiConfiguration;

        r1 = virtualinvoke r0.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.wifi.WifiConfigStore r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.util.Iterator r4;
        android.net.wifi.WifiConfiguration r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        int $i0;
        java.lang.String $r9;
        java.util.List $r10;
        boolean $z0;
        android.util.LocalLog $r11, $r12;
        java.lang.Object $r13;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Dump of WifiConfigStore");

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mLastPriority ");

        $i0 = r0.<com.android.server.wifi.WifiConfigStore: int mLastPriority>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Configured networks");

        $r10 = virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: java.util.List getConfiguredNetworks()>();

        r4 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.net.wifi.WifiConfiguration) $r13;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r5);

        goto label1;

     label2:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        $r11 = r0.<com.android.server.wifi.WifiConfigStore: android.util.LocalLog mLocalLog>;

        if $r11 == null goto label3;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("WifiConfigStore - Log Begin ----");

        $r12 = r0.<com.android.server.wifi.WifiConfigStore: android.util.LocalLog mLocalLog>;

        virtualinvoke $r12.<android.util.LocalLog: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("WifiConfigStore - Log End ----");

     label3:
        return;
    }

    public java.lang.String getConfigFile()
    {
        com.android.server.wifi.WifiConfigStore r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        $r1 = <com.android.server.wifi.WifiConfigStore: java.lang.String ipConfigFile>;

        return $r1;
    }

    protected void loge(java.lang.String)
    {
        com.android.server.wifi.WifiConfigStore r0;
        java.lang.String r1;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String,boolean)>(r1, 0);

        return;
    }

    protected void loge(java.lang.String, boolean)
    {
        com.android.server.wifi.WifiConfigStore r0;
        java.lang.String r1, $r8, $r13, $r19, $r25, $r27;
        boolean z0;
        java.lang.StringBuilder $r2, $r3, $r4, $r9, $r10, $r15, $r16, $r21, $r22, $r28;
        java.lang.Thread $r5, $r11, $r18, $r24;
        java.lang.StackTraceElement[] $r6, $r12, $r17, $r23;
        java.lang.StackTraceElement $r7, $r14, $r20, $r26;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stack:");

        $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r6 = virtualinvoke $r5.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r7 = $r6[2];

        $r8 = virtualinvoke $r7.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r11 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r12 = virtualinvoke $r11.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r14 = $r12[3];

        $r13 = virtualinvoke $r14.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r18 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r17 = virtualinvoke $r18.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r20 = $r17[4];

        $r19 = virtualinvoke $r20.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r22 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r24 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r23 = virtualinvoke $r24.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r26 = $r23[5];

        $r25 = virtualinvoke $r26.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r28 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WifiConfigStore", $r27);

        goto label2;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WifiConfigStore", r1);

     label2:
        return;
    }

    protected void log(java.lang.String)
    {
        com.android.server.wifi.WifiConfigStore r0;
        java.lang.String r1;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", r1);

        return;
    }

    private void localLog(java.lang.String)
    {
        com.android.server.wifi.WifiConfigStore r0;
        java.lang.String r1;
        android.util.LocalLog $r2, $r3;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.wifi.WifiConfigStore: android.util.LocalLog mLocalLog>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.server.wifi.WifiConfigStore: android.util.LocalLog mLocalLog>;

        virtualinvoke $r3.<android.util.LocalLog: void log(java.lang.String)>(r1);

     label1:
        return;
    }

    private void localLog(java.lang.String, boolean)
    {
        com.android.server.wifi.WifiConfigStore r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String)>(r1);

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>(r1);

     label1:
        return;
    }

    private void localLog(java.lang.String, int)
    {
        com.android.server.wifi.WifiConfigStore r0;
        java.lang.String r1, $r14, $r21, $r28, $r29;
        int i0, $i1;
        android.net.wifi.WifiConfiguration r2;
        java.util.HashMap r3, $r6, $r7;
        java.lang.Throwable r4, $r30;
        android.util.LocalLog $r5, $r11, $r16;
        java.lang.Integer $r8;
        java.lang.Object $r9;
        java.lang.StringBuilder $r10, $r12, $r13, $r15, $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r25, $r26, $r27;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r5 = r0.<com.android.server.wifi.WifiConfigStore: android.util.LocalLog mLocalLog>;

        if $r5 != null goto label1;

        return;

     label1:
        $r6 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        r3 = $r6;

        entermonitor $r6;

     label2:
        $r7 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r9 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r8);

        r2 = (android.net.wifi.WifiConfiguration) $r9;

        exitmonitor r3;

     label3:
        goto label6;

     label4:
        $r30 := @caughtexception;

        r4 = $r30;

        exitmonitor r3;

     label5:
        throw r4;

     label6:
        if r2 == null goto label7;

        $r16 = r0.<com.android.server.wifi.WifiConfigStore: android.util.LocalLog mLocalLog>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r21 = virtualinvoke r2.<android.net.wifi.WifiConfiguration: java.lang.String getPrintableSsid()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" status=");

        $i1 = r2.<android.net.wifi.WifiConfiguration: int status>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key=");

        $r28 = virtualinvoke r2.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<android.util.LocalLog: void log(java.lang.String)>($r29);

        goto label8;

     label7:
        $r11 = r0.<com.android.server.wifi.WifiConfigStore: android.util.LocalLog mLocalLog>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<android.util.LocalLog: void log(java.lang.String)>($r14);

     label8:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    static boolean needsKeyStore(android.net.wifi.WifiEnterpriseConfig)
    {
        android.net.wifi.WifiEnterpriseConfig r0;
        java.security.cert.X509Certificate $r1, $r2;

        r0 := @parameter0: android.net.wifi.WifiEnterpriseConfig;

        $r1 = virtualinvoke r0.<android.net.wifi.WifiEnterpriseConfig: java.security.cert.X509Certificate getClientCertificate()>();

        if $r1 != null goto label1;

        $r2 = virtualinvoke r0.<android.net.wifi.WifiEnterpriseConfig: java.security.cert.X509Certificate getCaCertificate()>();

        if $r2 != null goto label1;

        return 0;

     label1:
        return 1;
    }

    static boolean isHardwareBackedKey(java.security.PrivateKey)
    {
        java.security.PrivateKey r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @parameter0: java.security.PrivateKey;

        $r1 = interfaceinvoke r0.<java.security.PrivateKey: java.lang.String getAlgorithm()>();

        $z0 = staticinvoke <android.security.KeyChain: boolean isBoundKeyAlgorithm(java.lang.String)>($r1);

        return $z0;
    }

    static boolean hasHardwareBackedKey(java.security.cert.Certificate)
    {
        java.security.cert.Certificate r0;
        java.security.PublicKey $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @parameter0: java.security.cert.Certificate;

        $r1 = virtualinvoke r0.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        $r2 = interfaceinvoke $r1.<java.security.PublicKey: java.lang.String getAlgorithm()>();

        $z0 = staticinvoke <android.security.KeyChain: boolean isBoundKeyAlgorithm(java.lang.String)>($r2);

        return $z0;
    }

    static boolean needsSoftwareBackedKeyStore(android.net.wifi.WifiEnterpriseConfig)
    {
        android.net.wifi.WifiEnterpriseConfig r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: android.net.wifi.WifiEnterpriseConfig;

        r1 = virtualinvoke r0.<android.net.wifi.WifiEnterpriseConfig: java.lang.String getClientCertificateAlias()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    void handleBadNetworkDisconnectReport(int, android.net.wifi.WifiInfo)
    {
        com.android.server.wifi.WifiConfigStore r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.net.wifi.WifiInfo r1;
        android.net.wifi.WifiConfiguration r2;
        java.util.HashMap $r3;
        java.lang.Integer $r4;
        java.lang.Object $r5;
        long $l1;
        java.lang.StringBuilder $r6, $r7, $r8, $r10, $r11, $r13, $r14, $r15, $r17, $r18;
        java.lang.String $r9, $r12, $r16, $r19;
        boolean $z0, $z1;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.wifi.WifiInfo;

        $r3 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        r2 = (android.net.wifi.WifiConfiguration) $r5;

        if r2 == null goto label4;

        $i2 = virtualinvoke r1.<android.net.wifi.WifiInfo: int getRssi()>();

        $i3 = <android.net.wifi.WifiConfiguration: int UNWANTED_BLACKLIST_SOFT_RSSI_24>;

        if $i2 >= $i3 goto label1;

        $z1 = virtualinvoke r1.<android.net.wifi.WifiInfo: boolean is24GHz()>();

        if $z1 != 0 goto label2;

     label1:
        $i4 = virtualinvoke r1.<android.net.wifi.WifiInfo: int getRssi()>();

        $i5 = <android.net.wifi.WifiConfiguration: int UNWANTED_BLACKLIST_SOFT_RSSI_5>;

        if $i4 >= $i5 goto label3;

        $z0 = virtualinvoke r1.<android.net.wifi.WifiInfo: boolean is5GHz()>();

        if $z0 == 0 goto label3;

     label2:
        $i9 = <android.net.wifi.WifiConfiguration: int UNWANTED_BLACKLIST_SOFT_BUMP>;

        $i8 = 1 + $i9;

        virtualinvoke r2.<android.net.wifi.WifiConfiguration: void setAutoJoinStatus(int)>($i8);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleBadNetworkDisconnectReport (+4) ");

        $r16 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r19);

        goto label4;

     label3:
        $i6 = <android.net.wifi.WifiConfiguration: int UNWANTED_BLACKLIST_HARD_BUMP>;

        $i7 = 1 + $i6;

        virtualinvoke r2.<android.net.wifi.WifiConfiguration: void setAutoJoinStatus(int)>($i7);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleBadNetworkDisconnectReport (+8) ");

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r12);

     label4:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.server.wifi.WifiConfigStore: long lastUnwantedNetworkDisconnectTimestamp> = $l1;

        return;
    }

    boolean handleBSSIDBlackList(int, java.lang.String, boolean)
    {
        com.android.server.wifi.WifiConfigStore r0;
        int i0;
        java.lang.String r1, $r13;
        boolean z0, z1, $z2, $z3, $z4;
        java.util.Iterator r2, r4;
        android.net.wifi.WifiConfiguration r3;
        android.net.wifi.ScanResult r5;
        java.util.HashMap $r6, $r9, $r10;
        java.util.Collection $r7, $r11;
        java.lang.Object $r8, $r12;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 = 0;

        if r1 != null goto label1;

        return z1;

     label1:
        $r6 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.net.wifi.WifiConfiguration) $r8;

        $r9 = r3.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        if $r9 == null goto label6;

        $r10 = r3.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.util.Collection values()>();

        r4 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.net.wifi.ScanResult) $r12;

        $r13 = r5.<android.net.wifi.ScanResult: java.lang.String BSSID>;

        $z4 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z4 == 0 goto label5;

        if z0 == 0 goto label4;

        virtualinvoke r5.<android.net.wifi.ScanResult: void setAutoJoinStatus(int)>(0);

        goto label5;

     label4:
        virtualinvoke r5.<android.net.wifi.ScanResult: void setAutoJoinStatus(int)>(16);

        z1 = 1;

     label5:
        goto label3;

     label6:
        goto label2;

     label7:
        return z1;
    }

    int getMaxDhcpRetries()
    {
        com.android.server.wifi.WifiConfigStore r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        int $i0;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        $r1 = r0.<com.android.server.wifi.WifiConfigStore: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r2, "wifi_max_dhcp_retry_count", 9);

        return $i0;
    }

    void handleSSIDStateChange(int, boolean, java.lang.String, java.lang.String)
    {
        com.android.server.wifi.WifiConfigStore r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i31, $i32, $i33;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z7, $z8, $z9, $z13, $z15;
        java.lang.String r1, r2, r5, $r11, $r15, $r20, $r24, $r26, $r32, $r33, $r41, $r48, $r58, $r63, $r66, $r71, $r74, $r77, $r79, $r83, $r91, $r92, $r96;
        android.net.wifi.WifiConfiguration r3;
        android.net.wifi.ScanResult r4;
        java.util.HashMap $r6, $r45, $r60;
        java.lang.Integer $r7;
        java.lang.Object $r8, $r61;
        java.lang.StringBuilder $r9, $r10, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r23, $r25, $r27, $r28, $r29, $r30, $r31, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r42, $r43, $r44, $r46, $r47, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r59, $r64, $r65, $r67, $r68, $r69, $r70, $r72, $r73, $r75, $r76, $r78, $r80, $r81, $r82, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r93, $r94, $r95;
        long $l16, $l30;
        com.android.server.wifi.WifiNative $r62;
        byte $b29;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        $r6 = r0.<com.android.server.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r8 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

        r3 = (android.net.wifi.WifiConfiguration) $r8;

        if r3 == null goto label12;

        if z0 == 0 goto label01;

        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        $r93 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SSID re-enabled for  ");

        $r92 = virtualinvoke r3.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r82 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r92);

        $r81 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" had autoJoinStatus=");

        $i32 = r3.<android.net.wifi.WifiConfiguration: int autoJoinStatus>;

        $r83 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i32);

        $r85 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r83);

        $r84 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" self added ");

        $z13 = r3.<android.net.wifi.WifiConfiguration: boolean selfAdded>;

        $r86 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z13);

        $r94 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ephemeral ");

        $z15 = r3.<android.net.wifi.WifiConfiguration: boolean ephemeral>;

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z15);

        $r96 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r96);

        $i33 = r3.<android.net.wifi.WifiConfiguration: int autoJoinStatus>;

        if $i33 != 128 goto label12;

        virtualinvoke r3.<android.net.wifi.WifiConfiguration: void setAutoJoinStatus(int)>(0);

        goto label12;

     label01:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SSID temp disabled for  ");

        $r11 = virtualinvoke r3.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" had autoJoinStatus=");

        $i2 = r3.<android.net.wifi.WifiConfiguration: int autoJoinStatus>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" self added ");

        $z1 = r3.<android.net.wifi.WifiConfiguration: boolean selfAdded>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ephemeral ");

        $z2 = r3.<android.net.wifi.WifiConfiguration: boolean ephemeral>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r20);

        if r1 == null goto label02;

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r89 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" message=");

        $r88 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r91 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r91);

     label02:
        $z3 = r3.<android.net.wifi.WifiConfiguration: boolean selfAdded>;

        if $z3 == 0 goto label03;

        $l30 = r3.<android.net.wifi.WifiConfiguration: long lastConnected>;

        $b29 = $l30 cmp 0L;

        if $b29 != 0 goto label03;

        $i28 = r3.<android.net.wifi.WifiConfiguration: int networkId>;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: boolean removeConfigAndSendBroadcastIfNeeded(int)>($i28);

        goto label12;

     label03:
        if r1 == null goto label12;

        $z5 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("no identity");

        if $z5 == 0 goto label04;

        virtualinvoke r3.<android.net.wifi.WifiConfiguration: void setAutoJoinStatus(int)>(160);

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no identity blacklisted ");

        $r71 = virtualinvoke r3.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r70 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r80 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $i31 = r3.<android.net.wifi.WifiConfiguration: int autoJoinStatus>;

        $r79 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i31);

        $r78 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79);

        $r77 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r77);

        goto label11;

     label04:
        $z4 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("WRONG_KEY");

        if $z4 != 0 goto label05;

        $z9 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("AUTH_FAILED");

        if $z9 == 0 goto label06;

     label05:
        $i4 = r3.<android.net.wifi.WifiConfiguration: int numAuthFailures>;

        $i3 = $i4 + 1;

        r3.<android.net.wifi.WifiConfiguration: int numAuthFailures> = $i3;

        $i6 = r3.<android.net.wifi.WifiConfiguration: int numAuthFailures>;

        $i5 = r0.<com.android.server.wifi.WifiConfigStore: int maxAuthErrorsToBlacklist>;

        if $i6 <= $i5 goto label11;

        virtualinvoke r3.<android.net.wifi.WifiConfiguration: void setAutoJoinStatus(int)>(128);

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: boolean disableNetwork(int,int)>(i0, 3);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Authentication failure, blacklist ");

        $r24 = virtualinvoke r3.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i7 = r3.<android.net.wifi.WifiConfiguration: int networkId>;

        $r26 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7);

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" num failures ");

        $i8 = r3.<android.net.wifi.WifiConfiguration: int numAuthFailures>;

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r32);

        goto label11;

     label06:
        $z8 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("DHCP FAILURE");

        if $z8 == 0 goto label10;

        $i14 = r3.<android.net.wifi.WifiConfiguration: int numIpConfigFailures>;

        $i15 = $i14 + 1;

        r3.<android.net.wifi.WifiConfiguration: int numIpConfigFailures> = $i15;

        $l16 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r3.<android.net.wifi.WifiConfiguration: long lastConnectionFailure> = $l16;

        i1 = virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: int getMaxDhcpRetries()>();

        if i1 <= 0 goto label07;

        $i24 = r3.<android.net.wifi.WifiConfiguration: int numIpConfigFailures>;

        if $i24 <= i1 goto label07;

        virtualinvoke r3.<android.net.wifi.WifiConfiguration: void setAutoJoinStatus(int)>(128);

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: boolean disableNetwork(int,int)>(i0, 2);

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DHCP failure, blacklist ");

        $r66 = virtualinvoke r3.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r67 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r65 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i26 = r3.<android.net.wifi.WifiConfiguration: int networkId>;

        $r63 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i26);

        $r64 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        $r76 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" num failures ");

        $i27 = r3.<android.net.wifi.WifiConfiguration: int numIpConfigFailures>;

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i27);

        $r74 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r74);

     label07:
        r4 = null;

        r5 = "";

        $r45 = r3.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        if $r45 == null goto label08;

        if r2 == null goto label08;

        $r60 = r3.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        $r61 = virtualinvoke $r60.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r4 = (android.net.wifi.ScanResult) $r61;

     label08:
        if r4 == null goto label09;

        $i22 = r4.<android.net.wifi.ScanResult: int numIpConfigFailures>;

        $i23 = $i22 + 1;

        r4.<android.net.wifi.ScanResult: int numIpConfigFailures> = $i23;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ipfail=");

        $i21 = r4.<android.net.wifi.ScanResult: int numIpConfigFailures>;

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21);

        r5 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        $i25 = r4.<android.net.wifi.ScanResult: int numIpConfigFailures>;

        if $i25 <= 3 goto label09;

        $r62 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        virtualinvoke $r62.<com.android.server.wifi.WifiNative: boolean addToBlacklist(java.lang.String)>(r2);

        virtualinvoke r4.<android.net.wifi.ScanResult: void setAutoJoinStatus(int)>(32);

     label09:
        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("blacklisted ");

        $r48 = virtualinvoke r3.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r42 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $i18 = r3.<android.net.wifi.WifiConfiguration: int autoJoinStatus>;

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r52 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due to IP config failures, count=");

        $i20 = r3.<android.net.wifi.WifiConfiguration: int numIpConfigFailures>;

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" disableReason=");

        $i19 = r3.<android.net.wifi.WifiConfiguration: int disableReason>;

        $r49 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r50 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r58 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r58);

        goto label11;

     label10:
        $z7 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("CONN_FAILED");

        if $z7 == 0 goto label11;

        $i12 = r3.<android.net.wifi.WifiConfiguration: int numConnectionFailures>;

        $i11 = $i12 + 1;

        r3.<android.net.wifi.WifiConfiguration: int numConnectionFailures> = $i11;

        $i9 = r3.<android.net.wifi.WifiConfiguration: int numConnectionFailures>;

        $i10 = r0.<com.android.server.wifi.WifiConfigStore: int maxConnectionErrorsToBlacklist>;

        if $i9 <= $i10 goto label11;

        virtualinvoke r3.<android.net.wifi.WifiConfiguration: void setAutoJoinStatus(int)>(128);

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: boolean disableNetwork(int,int)>(i0, 4);

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connection failure, blacklist ");

        $r33 = virtualinvoke r3.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r38 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i13 = r3.<android.net.wifi.WifiConfiguration: int networkId>;

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r39 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" num failures ");

        $i17 = r3.<android.net.wifi.WifiConfiguration: int numConnectionFailures>;

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiConfigStore: void loge(java.lang.String)>($r41);

     label11:
        virtualinvoke r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        virtualinvoke r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\r", "");

        r3.<android.net.wifi.WifiConfiguration: java.lang.String lastFailure> = r1;

     label12:
        return;
    }

    boolean installKeys(android.net.wifi.WifiEnterpriseConfig, java.lang.String)
    {
        com.android.server.wifi.WifiConfigStore r0;
        android.net.wifi.WifiEnterpriseConfig r1;
        java.lang.String r2, r3, r4, r5, $r31, $r38;
        boolean z0, $z3, z5;
        byte[] r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r25, $r27, $r28, $r29, $r34, $r35, $r36, $r39;
        java.security.cert.X509Certificate $r16, $r17, $r18, $r19, $r20, $r22, $r33;
        android.security.KeyStore $r21, $r23, $r30, $r32, $r37;
        java.security.PrivateKey $r24, $r26;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WifiEnterpriseConfig;

        r2 := @parameter1: java.lang.String;

        z0 = 1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRPKEY_");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRCERT_");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r4 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CACERT_");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r5 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = virtualinvoke r1.<android.net.wifi.WifiEnterpriseConfig: java.security.cert.X509Certificate getClientCertificate()>();

        if $r17 == null goto label4;

        $r24 = virtualinvoke r1.<android.net.wifi.WifiEnterpriseConfig: java.security.PrivateKey getClientPrivateKey()>();

        r6 = interfaceinvoke $r24.<java.security.PrivateKey: byte[] getEncoded()>();

        $r26 = virtualinvoke r1.<android.net.wifi.WifiEnterpriseConfig: java.security.PrivateKey getClientPrivateKey()>();

        $z3 = staticinvoke <com.android.server.wifi.WifiConfigStore: boolean isHardwareBackedKey(java.security.PrivateKey)>($r26);

        if $z3 == 0 goto label1;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("importing keys ");

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in hardware backed store");

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r38);

        $r37 = r0.<com.android.server.wifi.WifiConfigStore: android.security.KeyStore mKeyStore>;

        z5 = virtualinvoke $r37.<android.security.KeyStore: boolean importKey(java.lang.String,byte[],int,int)>(r3, r6, 1010, 0);

        goto label2;

     label1:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("importing keys ");

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in software backed store");

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r31);

        $r30 = r0.<com.android.server.wifi.WifiConfigStore: android.security.KeyStore mKeyStore>;

        z5 = virtualinvoke $r30.<android.security.KeyStore: boolean importKey(java.lang.String,byte[],int,int)>(r3, r6, 1010, 1);

     label2:
        if z5 != 0 goto label3;

        return z5;

     label3:
        $r33 = virtualinvoke r1.<android.net.wifi.WifiEnterpriseConfig: java.security.cert.X509Certificate getClientCertificate()>();

        z0 = specialinvoke r0.<com.android.server.wifi.WifiConfigStore: boolean putCertInKeyStore(java.lang.String,java.security.cert.Certificate)>(r4, $r33);

        if z0 != 0 goto label4;

        $r32 = r0.<com.android.server.wifi.WifiConfigStore: android.security.KeyStore mKeyStore>;

        virtualinvoke $r32.<android.security.KeyStore: boolean delKey(java.lang.String,int)>(r3, 1010);

        return z0;

     label4:
        $r16 = virtualinvoke r1.<android.net.wifi.WifiEnterpriseConfig: java.security.cert.X509Certificate getCaCertificate()>();

        if $r16 == null goto label6;

        $r20 = virtualinvoke r1.<android.net.wifi.WifiEnterpriseConfig: java.security.cert.X509Certificate getCaCertificate()>();

        z0 = specialinvoke r0.<com.android.server.wifi.WifiConfigStore: boolean putCertInKeyStore(java.lang.String,java.security.cert.Certificate)>(r5, $r20);

        if z0 != 0 goto label6;

        $r22 = virtualinvoke r1.<android.net.wifi.WifiEnterpriseConfig: java.security.cert.X509Certificate getClientCertificate()>();

        if $r22 == null goto label5;

        $r21 = r0.<com.android.server.wifi.WifiConfigStore: android.security.KeyStore mKeyStore>;

        virtualinvoke $r21.<android.security.KeyStore: boolean delKey(java.lang.String,int)>(r3, 1010);

        $r23 = r0.<com.android.server.wifi.WifiConfigStore: android.security.KeyStore mKeyStore>;

        virtualinvoke $r23.<android.security.KeyStore: boolean delete(java.lang.String,int)>(r4, 1010);

     label5:
        return z0;

     label6:
        $r19 = virtualinvoke r1.<android.net.wifi.WifiEnterpriseConfig: java.security.cert.X509Certificate getClientCertificate()>();

        if $r19 == null goto label7;

        virtualinvoke r1.<android.net.wifi.WifiEnterpriseConfig: void setClientCertificateAlias(java.lang.String)>(r2);

        virtualinvoke r1.<android.net.wifi.WifiEnterpriseConfig: void resetClientKeyEntry()>();

     label7:
        $r18 = virtualinvoke r1.<android.net.wifi.WifiEnterpriseConfig: java.security.cert.X509Certificate getCaCertificate()>();

        if $r18 == null goto label8;

        virtualinvoke r1.<android.net.wifi.WifiEnterpriseConfig: void setCaCertificateAlias(java.lang.String)>(r2);

        virtualinvoke r1.<android.net.wifi.WifiEnterpriseConfig: void resetCaCertificate()>();

     label8:
        return z0;
    }

    private boolean putCertInKeyStore(java.lang.String, java.security.cert.Certificate)
    {
        com.android.server.wifi.WifiConfigStore r0;
        java.lang.String r1, $r9;
        java.security.cert.Certificate r2;
        byte[] r3;
        java.security.cert.Certificate[] $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        android.security.KeyStore $r10;
        boolean $z0;
        java.io.IOException $r11;
        java.security.cert.CertificateException $r12;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.cert.Certificate;

     label1:
        $r4 = newarray (java.security.cert.Certificate)[1];

        $r4[0] = r2;

        r3 = staticinvoke <android.security.Credentials: byte[] convertToPem(java.security.cert.Certificate[])>($r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("putting certificate ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in keystore");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", $r9);

        $r10 = r0.<com.android.server.wifi.WifiConfigStore: android.security.KeyStore mKeyStore>;

        $z0 = virtualinvoke $r10.<android.security.KeyStore: boolean put(java.lang.String,byte[],int,int)>(r1, r3, 1010, 0);

     label2:
        return $z0;

     label3:
        $r11 := @caughtexception;

        return 0;

     label4:
        $r12 := @caughtexception;

        return 0;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.security.cert.CertificateException from label1 to label2 with label4;
    }

    void removeKeys(android.net.wifi.WifiEnterpriseConfig)
    {
        com.android.server.wifi.WifiConfigStore r0;
        android.net.wifi.WifiEnterpriseConfig r1;
        java.lang.String r2, r3, $r8, $r13, $r18;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4, $r6, $r7, $r10, $r11, $r12, $r15, $r16, $r17;
        android.security.KeyStore $r5, $r9, $r14;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WifiEnterpriseConfig;

        r2 = virtualinvoke r1.<android.net.wifi.WifiEnterpriseConfig: java.lang.String getClientCertificateAlias()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", "removing client private key and user cert");

        $r9 = r0.<com.android.server.wifi.WifiConfigStore: android.security.KeyStore mKeyStore>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRPKEY_");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<android.security.KeyStore: boolean delKey(java.lang.String,int)>($r13, 1010);

        $r14 = r0.<com.android.server.wifi.WifiConfigStore: android.security.KeyStore mKeyStore>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRCERT_");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<android.security.KeyStore: boolean delete(java.lang.String,int)>($r18, 1010);

     label1:
        r3 = virtualinvoke r1.<android.net.wifi.WifiEnterpriseConfig: java.lang.String getCaCertificateAlias()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z1 != 0 goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", "removing CA cert");

        $r5 = r0.<com.android.server.wifi.WifiConfigStore: android.security.KeyStore mKeyStore>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CACERT_");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<android.security.KeyStore: boolean delete(java.lang.String,int)>($r8, 1010);

     label2:
        return;
    }

    boolean migrateOldEapTlsNative(android.net.wifi.WifiEnterpriseConfig, int)
    {
        com.android.server.wifi.WifiConfigStore r0;
        android.net.wifi.WifiEnterpriseConfig r1;
        int i0, $i1;
        java.lang.String r2, r3, $r6, $r8, $r10, $r12, $r13, $r14, r15;
        com.android.server.wifi.WifiNative $r4, $r5, $r7, $r9, $r11;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WifiEnterpriseConfig;

        i0 := @parameter1: int;

        $r4 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        r2 = virtualinvoke $r4.<com.android.server.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>(i0, "private_key");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        r15 = staticinvoke <com.android.server.wifi.WifiConfigStore: java.lang.String removeDoubleQuotes(java.lang.String)>(r2);

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r15);

        if $z1 == 0 goto label2;

        return 0;

     label2:
        virtualinvoke r1.<android.net.wifi.WifiEnterpriseConfig: void setFieldValue(java.lang.String,java.lang.String)>("engine", "1");

        virtualinvoke r1.<android.net.wifi.WifiEnterpriseConfig: void setFieldValue(java.lang.String,java.lang.String)>("engine_id", "keystore");

        $z2 = virtualinvoke r15.<java.lang.String: boolean startsWith(java.lang.String)>("keystore://");

        if $z2 == 0 goto label3;

        $r12 = new java.lang.String;

        $r13 = "keystore://";

        $i1 = virtualinvoke $r13.<java.lang.String: int length()>();

        $r14 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int)>($i1);

        specialinvoke $r12.<java.lang.String: void <init>(java.lang.String)>($r14);

        r3 = $r12;

        goto label4;

     label3:
        r3 = r15;

     label4:
        virtualinvoke r1.<android.net.wifi.WifiEnterpriseConfig: void setFieldValue(java.lang.String,java.lang.String)>("key_id", r3);

        $r5 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $r6 = virtualinvoke r1.<android.net.wifi.WifiEnterpriseConfig: java.lang.String getFieldValue(java.lang.String,java.lang.String)>("engine", "");

        virtualinvoke $r5.<com.android.server.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i0, "engine", $r6);

        $r7 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $r8 = virtualinvoke r1.<android.net.wifi.WifiEnterpriseConfig: java.lang.String getFieldValue(java.lang.String,java.lang.String)>("engine_id", "");

        virtualinvoke $r7.<com.android.server.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i0, "engine_id", $r8);

        $r9 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        $r10 = virtualinvoke r1.<android.net.wifi.WifiEnterpriseConfig: java.lang.String getFieldValue(java.lang.String,java.lang.String)>("key_id", "");

        virtualinvoke $r9.<com.android.server.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i0, "key_id", $r10);

        $r11 = r0.<com.android.server.wifi.WifiConfigStore: com.android.server.wifi.WifiNative mWifiNative>;

        virtualinvoke $r11.<com.android.server.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i0, "private_key", "NULL");

        return 1;
    }

    void migrateCerts(android.net.wifi.WifiEnterpriseConfig)
    {
        com.android.server.wifi.WifiConfigStore r0;
        android.net.wifi.WifiEnterpriseConfig r1;
        java.lang.String r2, r3, $r8, $r14, $r16, $r21, $r25, $r33, $r34, $r38;
        boolean $z0, $z1, $z2, $z4;
        java.lang.StringBuilder $r4, $r6, $r7, $r9, $r11, $r12, $r13, $r15, $r17, $r18, $r19, $r22, $r23, $r24, $r27, $r28, $r29, $r30, $r31, $r35, $r36, $r37, $r39, $r40;
        android.security.KeyStore $r5, $r10, $r20, $r26, $r32;

        r0 := @this: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WifiEnterpriseConfig;

        r2 = virtualinvoke r1.<android.net.wifi.WifiEnterpriseConfig: java.lang.String getClientCertificateAlias()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 != 0 goto label1;

        $r20 = r0.<com.android.server.wifi.WifiConfigStore: android.security.KeyStore mKeyStore>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRPKEY_");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        $z4 = virtualinvoke $r20.<android.security.KeyStore: boolean contains(java.lang.String,int)>($r21, 1010);

        if $z4 != 0 goto label1;

        $r26 = r0.<com.android.server.wifi.WifiConfigStore: android.security.KeyStore mKeyStore>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRPKEY_");

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRPKEY_");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<android.security.KeyStore: boolean duplicate(java.lang.String,int,java.lang.String,int)>($r25, -1, $r33, 1010);

        $r32 = r0.<com.android.server.wifi.WifiConfigStore: android.security.KeyStore mKeyStore>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRCERT_");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r34 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRCERT_");

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r32.<android.security.KeyStore: boolean duplicate(java.lang.String,int,java.lang.String,int)>($r34, -1, $r38, 1010);

     label1:
        r3 = virtualinvoke r1.<android.net.wifi.WifiEnterpriseConfig: java.lang.String getCaCertificateAlias()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z1 != 0 goto label2;

        $r5 = r0.<com.android.server.wifi.WifiConfigStore: android.security.KeyStore mKeyStore>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CACERT_");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = virtualinvoke $r5.<android.security.KeyStore: boolean contains(java.lang.String,int)>($r8, 1010);

        if $z2 != 0 goto label2;

        $r10 = r0.<com.android.server.wifi.WifiConfigStore: android.security.KeyStore mKeyStore>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CACERT_");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CACERT_");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<android.security.KeyStore: boolean duplicate(java.lang.String,int,java.lang.String,int)>($r14, -1, $r16, 1010);

     label2:
        return;
    }

    static boolean access$000()
    {
        boolean $z0;

        $z0 = <com.android.server.wifi.WifiConfigStore: boolean VDBG>;

        return $z0;
    }

    static void access$100(com.android.server.wifi.WifiConfigStore, java.lang.String)
    {
        com.android.server.wifi.WifiConfigStore r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.wifi.WifiConfigStore;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.wifi.WifiConfigStore: void localLog(java.lang.String)>(r1);

        return;
    }

    static java.lang.String access$200(java.util.BitSet, java.lang.String[])
    {
        java.util.BitSet r0;
        java.lang.String[] r1;
        java.lang.String $r2;

        r0 := @parameter0: java.util.BitSet;

        r1 := @parameter1: java.lang.String[];

        $r2 = staticinvoke <com.android.server.wifi.WifiConfigStore: java.lang.String makeString(java.util.BitSet,java.lang.String[])>(r0, r1);

        return $r2;
    }

    static void <clinit>()
    {
        java.lang.StringBuilder $r0, $r2, $r3, $r5, $r7, $r8, $r10, $r12, $r13;
        java.io.File $r1, $r6, $r11;
        java.lang.String $r4, $r9, $r14;
        java.util.regex.Pattern $r15;
        java.lang.String[] $r16;

        <com.android.server.wifi.WifiConfigStore: int DEFAULT_MAX_DHCP_RETRIES> = 9;

        <com.android.server.wifi.WifiConfigStore: java.lang.String EMPTY_VALUE> = "NULL";

        <com.android.server.wifi.WifiConfigStore: java.lang.String OLD_PRIVATE_KEY_NAME> = "private_key";

        <com.android.server.wifi.WifiConfigStore: java.lang.String DELETED_CONFIG_PSK> = "Mjkd86jEMGn79KhKll298Uu7-deleted";

        <com.android.server.wifi.WifiConfigStore: java.lang.String WIFI_VERBOSE_LOGS_KEY> = "WIFI_VERBOSE_LOGS:   ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String ENABLE_RSSI_POLL_WHILE_ASSOCIATED_KEY> = "ENABLE_RSSI_POLL_WHILE_ASSOCIATED_KEY:   ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String ENABLE_CHIP_WAKE_UP_WHILE_ASSOCIATED_KEY> = "ENABLE_CHIP_WAKE_UP_WHILE_ASSOCIATED:   ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String ENABLE_AUTO_JOIN_WHILE_ASSOCIATED_KEY> = "ENABLE_AUTO_JOIN_WHILE_ASSOCIATED:   ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String ENABLE_AUTO_JOIN_SCAN_WHILE_ASSOCIATED_KEY> = "ENABLE_AUTO_JOIN_SCAN_WHILE_ASSOCIATED:   ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String ENABLE_FULL_BAND_SCAN_WHEN_ASSOCIATED_KEY> = "ENABLE_FULL_BAND_SCAN_WHEN_ASSOCIATED:   ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String ONLY_LINK_SAME_CREDENTIAL_CONFIGURATIONS_KEY> = "ONLY_LINK_SAME_CREDENTIAL_CONFIGURATIONS:   ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String ALWAYS_ENABLE_SCAN_WHILE_ASSOCIATED_KEY> = "ALWAYS_ENABLE_SCAN_WHILE_ASSOCIATED:   ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String ASSOCIATED_FULL_SCAN_BACKOFF_KEY> = "ASSOCIATED_FULL_SCAN_BACKOFF_PERIOD:   ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String ASSOCIATED_PARTIAL_SCAN_PERIOD_KEY> = "ASSOCIATED_PARTIAL_SCAN_PERIOD:   ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String ENABLE_AUTOJOIN_WHILE_ASSOCIATED_KEY> = "ENABLE_AUTOJOIN_WHILE_ASSOCIATED:   ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String G_BAND_PREFERENCE_RSSI_THRESHOLD_KEY> = "G_BAND_PREFERENCE_RSSI_THRESHOLD:   ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String A_BAND_PREFERENCE_RSSI_THRESHOLD_KEY> = "A_BAND_PREFERENCE_RSSI_THRESHOLD:   ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String A_BAND_PREFERENCE_RSSI_THRESHOLD_LOW_KEY> = "A_BAND_PREFERENCE_RSSI_THRESHOLD_LOW:   ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String MAX_NUM_PASSIVE_CHANNELS_FOR_PARTIAL_SCANS_KEY> = "MAX_NUM_PASSIVE_CHANNELS_FOR_PARTIAL_SCANS:   ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String MAX_NUM_ACTIVE_CHANNELS_FOR_PARTIAL_SCANS_KEY> = "MAX_NUM_ACTIVE_CHANNELS_FOR_PARTIAL_SCANS:   ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String THRESHOLD_MAX_RX_PACKETS_FOR_PARTIAL_SCANS_KEY> = "THRESHOLD_MAX_RX_PACKETS_FOR_PARTIAL_SCANS:   ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String THRESHOLD_MAX_TX_PACKETS_FOR_PARTIAL_SCANS_KEY> = "THRESHOLD_MAX_TX_PACKETS_FOR_PARTIAL_SCANS:   ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String THRESHOLD_MAX_RX_PACKETS_FOR_FULL_SCANS_KEY> = "THRESHOLD_MAX_RX_PACKETS_FOR_FULL_SCANS:   ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String THRESHOLD_MAX_TX_PACKETS_FOR_FULL_SCANS_KEY> = "THRESHOLD_MAX_TX_PACKETS_FOR_FULL_SCANS:   ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String THRESHOLD_MAX_RX_PACKETS_FOR_NETWORK_SWITCHING_KEY> = "THRESHOLD_MAX_RX_PACKETS_FOR_NETWORK_SWITCHING:   ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String THRESHOLD_MAX_TX_PACKETS_FOR_NETWORK_SWITCHING_KEY> = "THRESHOLD_MAX_TX_PACKETS_FOR_NETWORK_SWITCHING:   ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String THRESHOLD_BAD_RSSI_24_KEY> = "THRESHOLD_BAD_RSSI_24:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String THRESHOLD_LOW_RSSI_24_KEY> = "THRESHOLD_LOW_RSSI_24:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String THRESHOLD_GOOD_RSSI_24_KEY> = "THRESHOLD_GOOD_RSSI_24:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String THRESHOLD_BAD_RSSI_5_KEY> = "THRESHOLD_BAD_RSSI_5:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String THRESHOLD_LOW_RSSI_5_KEY> = "THRESHOLD_LOW_RSSI_5:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String THRESHOLD_GOOD_RSSI_5_KEY> = "THRESHOLD_GOOD_RSSI_5:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String THRESHOLD_UNBLACKLIST_SOFT_24G_KEY> = "THRESHOLD_UNBLACKLIST_SOFT_24G:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String THRESHOLD_UNBLACKLIST_HARD_24G_KEY> = "THRESHOLD_UNBLACKLIST_HARD_24G:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String THRESHOLD_UNBLACKLIST_SOFT_5G_KEY> = "THRESHOLD_UNBLACKLIST_SOFT_5G:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String THRESHOLD_UNBLACKLIST_HARD_5G_KEY> = "THRESHOLD_UNBLACKLIST_HARD_5G:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String THRESHOLD_INITIAL_AUTO_JOIN_ATTEMPT_RSSI_MIN_24G_KEY> = "THRESHOLD_INITIAL_AUTO_JOIN_ATTEMPT_RSSI_MIN_24G:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String THRESHOLD_INITIAL_AUTO_JOIN_ATTEMPT_RSSI_MIN_5G_KEY> = "THRESHOLD_INITIAL_AUTO_JOIN_ATTEMPT_RSSI_MIN_5G:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String JOIN_ATTEMPT_BOOST_KEY> = "JOIN_ATTEMPT_BOOST:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String NUM_ASSOCIATION_KEY> = "NUM_ASSOCIATION:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String EPHEMERAL_KEY> = "EPHEMERAL:   ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String NO_INTERNET_ACCESS_KEY> = "NO_INTERNET_ACCESS:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String SCORER_OVERRIDE_AND_SWITCH_KEY> = "SCORER_OVERRIDE_AND_SWITCH:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String SCORER_OVERRIDE_KEY> = "SCORER_OVERRIDE:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String NUM_AUTH_FAILURES_KEY> = "AUTH_FAILURES:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String NUM_IP_CONFIG_FAILURES_KEY> = "IP_CONFIG_FAILURES:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String NUM_CONNECTION_FAILURES_KEY> = "CONNECT_FAILURES:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String FQDN_KEY> = "FQDN:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String SUPPLICANT_DISABLE_REASON_KEY> = "SUP_DIS_REASON:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String SUPPLICANT_STATUS_KEY> = "SUP_STATUS:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String UPDATE_UID_KEY> = "UPDATE_UID:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String CONNECT_UID_KEY> = "CONNECT_UID_KEY:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String CREATOR_UID_KEY> = "CREATOR_UID_KEY:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String PEER_CONFIGURATION_KEY> = "PEER_CONFIGURATION:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String DID_SELF_ADD_KEY> = "DID_SELF_ADD:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String FAILURE_KEY> = "FAILURE:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String SELF_ADDED_KEY> = "SELF_ADDED:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String BSSID_STATUS_KEY> = "BSSID_STATUS:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String STATUS_KEY> = "AUTO_JOIN_STATUS:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String SEPARATOR_KEY> = "\n";

        <com.android.server.wifi.WifiConfigStore: java.lang.String AUTH_KEY> = "AUTH:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String DEFAULT_GW_KEY> = "DEFAULT_GW:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String PRIORITY_KEY> = "PRIORITY:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String NETWORK_ID_KEY> = "ID:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String BLACKLIST_MILLI_KEY> = "BLACKLIST_MILLI:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String MILLI_KEY> = "MILLI:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String DATE_KEY> = "DATE:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String FREQ_KEY> = "FREQ:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String RSSI_KEY> = "RSSI:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String BSSID_KEY_END> = "/BSSID:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String BSSID_KEY> = "BSSID:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String LINK_KEY> = "LINK:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String CHOICE_KEY> = "CHOICE:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String CONFIG_KEY> = "CONFIG:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String SSID_KEY> = "SSID:  ";

        <com.android.server.wifi.WifiConfigStore: java.lang.String SUPPLICANT_CONFIG_FILE> = "/data/misc/wifi/wpa_supplicant.conf";

        <com.android.server.wifi.WifiConfigStore: boolean DBG> = 1;

        <com.android.server.wifi.WifiConfigStore: java.lang.String TAG> = "WifiConfigStore";

        <com.android.server.wifi.WifiConfigStore: boolean VDBG> = 0;

        <com.android.server.wifi.WifiConfigStore: boolean VVDBG> = 0;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/misc/wifi/ipconfig.txt");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.server.wifi.WifiConfigStore: java.lang.String ipConfigFile> = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/misc/wifi/networkHistory.txt");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.server.wifi.WifiConfigStore: java.lang.String networkHistoryConfigFile> = $r9;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/misc/wifi/autojoinconfig.txt");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.server.wifi.WifiConfigStore: java.lang.String autoJoinConfigFile> = $r14;

        $r15 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(.*)=([0-9]+)");

        <com.android.server.wifi.WifiConfigStore: java.util.regex.Pattern mConnectChoice> = $r15;

        $r16 = newarray (java.lang.String)[11];

        $r16[0] = "eap";

        $r16[1] = "phase2";

        $r16[2] = "identity";

        $r16[3] = "anonymous_identity";

        $r16[4] = "password";

        $r16[5] = "client_cert";

        $r16[6] = "ca_cert";

        $r16[7] = "subject_match";

        $r16[8] = "engine";

        $r16[9] = "engine_id";

        $r16[10] = "key_id";

        <com.android.server.wifi.WifiConfigStore: java.lang.String[] ENTERPRISE_CONFIG_SUPPLICANT_KEYS> = $r16;

        return;
    }
}
